name: Gas Snapshots

on:
  push:
    branches: [ main, develop ]
    paths:
      - 'contracts/**'
  pull_request:
    branches: [ main, develop ]
    paths:
      - 'contracts/**'
  workflow_dispatch:
    inputs:
      version:
        description: 'Version tag for the snapshot'
        required: true
        default: 'v1.0.0'

jobs:
  generate-gas-snapshots:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        cache-dependency-path: contracts/package-lock.json
        
    - name: Install dependencies
      working-directory: contracts
      run: npm ci
      
    - name: Compile contracts
      working-directory: contracts
      run: npm run compile
      
    - name: Generate gas snapshots
      working-directory: contracts
      run: npm run gas:snapshot
      
    - name: Generate gas report
      working-directory: contracts
      run: npm run gas:report
      
    - name: Upload gas snapshots
      uses: actions/upload-artifact@v4
      with:
        name: gas-snapshots-${{ github.sha }}
        path: |
          contracts/gas-snapshots.json
          contracts/gas-report.txt
        retention-days: 30
        
    - name: Create gas snapshots summary
      if: github.event_name == 'pull_request'
      working-directory: contracts
      run: |
        echo "## ðŸ“Š Gas Usage Summary" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "### Contract Deployments" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        
        # Extract deployment gas from gas-snapshots.json
        if [ -f gas-snapshots.json ]; then
          echo "| Contract | Gas Used |" >> $GITHUB_STEP_SUMMARY
          echo "|----------|----------|" >> $GITHUB_STEP_SUMMARY
          
          # Parse JSON and extract deployment gas
          jq -r '.contracts | to_entries[] | "| \(.key) | \(.value.deployment.gasUsed) |"' gas-snapshots.json >> $GITHUB_STEP_SUMMARY
          
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### Function Calls" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "| Contract | Function | Gas Used |" >> $GITHUB_STEP_SUMMARY
          echo "|----------|----------|----------|" >> $GITHUB_STEP_SUMMARY
          
          # Parse JSON and extract function gas
          jq -r '.contracts | to_entries[] | .value.functions | to_entries[] | "| \($parent.key) | \(.key) | \(.value.gasUsed) |"' gas-snapshots.json >> $GITHUB_STEP_SUMMARY
        fi
        
    - name: Comment PR with gas comparison
      if: github.event_name == 'pull_request'
      uses: actions/github-script@v7
      with:
        script: |
          const fs = require('fs');
          const path = require('path');
          
          try {
            const gasSnapshotsPath = path.join(process.cwd(), 'contracts', 'gas-snapshots.json');
            if (fs.existsSync(gasSnapshotsPath)) {
              const gasData = JSON.parse(fs.readFileSync(gasSnapshotsPath, 'utf8'));
              
              let totalDeploymentGas = 0;
              let totalFunctionGas = 0;
              
              Object.values(gasData.contracts).forEach(contract => {
                totalDeploymentGas += parseInt(contract.deployment.gasUsed);
                Object.values(contract.functions).forEach(func => {
                  totalFunctionGas += parseInt(func.gasUsed);
                });
              });
              
              const comment = `## ðŸš€ Gas Snapshots Generated
              
              **Total Gas Usage:**
              - Deployment: ${totalDeploymentGas.toLocaleString()} gas
              - Functions: ${totalFunctionGas.toLocaleString()} gas
              - **Total: ${(totalDeploymentGas + totalFunctionGas).toLocaleString()} gas**
              
              ðŸ“Š [View detailed gas report](${context.serverUrl}/${context.repo.owner}/${context.repo.repo}/actions/runs/${context.runId})
              
              ---
              *Generated automatically by GitHub Actions*`;
              
              github.rest.issues.createComment({
                issue_number: context.issue.number,
                owner: context.repo.owner,
                repo: context.repo.repo,
                body: comment
              });
            }
          } catch (error) {
            console.error('Error creating gas comparison comment:', error);
          }
          
  compare-with-baseline:
    runs-on: ubuntu-latest
    needs: generate-gas-snapshots
    if: github.event_name == 'pull_request'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Download baseline gas snapshots
      uses: actions/download-artifact@v4
      with:
        name: gas-snapshots-main
        path: baseline/
        
    - name: Download current gas snapshots
      uses: actions/download-artifact@v4
      with:
        name: gas-snapshots-${{ github.sha }}
        path: current/
        
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        
    - name: Compare gas snapshots
      working-directory: contracts
      run: |
        if [ -f "../baseline/gas-snapshots.json" ] && [ -f "../current/gas-snapshots.json" ]; then
          npm run gas:compare ../baseline/gas-snapshots.json ../current/gas-snapshots.json
        else
          echo "No baseline gas snapshots found for comparison"
        fi
        
    - name: Upload comparison results
      uses: actions/upload-artifact@v4
      with:
        name: gas-comparison-${{ github.sha }}
        path: contracts/gas-comparison.json
        retention-days: 30 