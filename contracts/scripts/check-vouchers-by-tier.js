const { ethers } = require("hardhat");

async function main() {
  console.log("=== üé´ –ü–†–û–í–ï–†–ö–ê –í–ê–£–ß–ï–†–û–í –ü–û –¢–ò–†–ê–ú ===\n");

  // –ó–∞–≥—Ä—É–∂–∞–µ–º –∞–¥—Ä–µ—Å–∞ –∫–æ–Ω—Ç—Ä–∞–∫—Ç–æ–≤
  const CONTRACT_ADDRESSES = {
    VoucherTypes: "0x2B8De63Dff3cC60b64F36FCB0E72a4f072818B1F", // –ü—Ä–∞–≤–∏–ª—å–Ω—ã–π –∞–¥—Ä–µ—Å –∏–∑ config.ts
  };

  // –ü–æ–¥–∫–ª—é—á–∞–µ–º—Å—è –∫ –∫–æ–Ω—Ç—Ä–∞–∫—Ç—É
  const VoucherTypes = await ethers.getContractAt("VoucherTypes", CONTRACT_ADDRESSES.VoucherTypes);

  console.log("‚úÖ –ö–æ–Ω—Ç—Ä–∞–∫—Ç VoucherTypes –ø–æ–¥–∫–ª—é—á–µ–Ω!");

  // –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Ç–∏—Ä—ã
  const tiers = [
    { id: 0, name: "Bronze" },
    { id: 1, name: "Silver" },
    { id: 2, name: "Gold" },
    { id: 3, name: "Platinum" }
  ];

  // –ü—Ä–æ–≤–µ—Ä—è–µ–º –≤–∞—É—á–µ—Ä—ã –¥–ª—è –∫–∞–∂–¥–æ–≥–æ —Ç–∏—Ä–∞
  for (const tier of tiers) {
    console.log(`\n=== üèÜ ${tier.name.toUpperCase()} (Tier ${tier.id}) ===`);
    
    try {
      // –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ –≤–∞—É—á–µ—Ä—ã –¥–ª—è —ç—Ç–æ–≥–æ —Ç–∏—Ä–∞
      const vouchers = await VoucherTypes.getVouchersForTier(tier.id);
      
      console.log(`–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –≤–∞—É—á–µ—Ä–æ–≤: ${vouchers.length}`);
      
      if (vouchers.length > 0) {
        console.log("–î–æ—Å—Ç—É–ø–Ω—ã–µ –≤–∞—É—á–µ—Ä—ã:");
        
        for (let i = 0; i < vouchers.length; i++) {
          const voucherType = vouchers[i];
          const voucherInfo = await VoucherTypes.getVoucherInfo(voucherType);
          
          console.log(`  ${i + 1}. ${voucherInfo.description}`);
          console.log(`     - –¢–∏–ø: ${getVoucherTypeName(voucherType)}`);
          console.log(`     - –ö–∞—Ç–µ–≥–æ—Ä–∏—è: ${getCategoryName(voucherInfo.category)}`);
          console.log(`     - –ú–∏–Ω–∏–º–∞–ª—å–Ω—ã–π —Ç–∏—Ä: ${voucherInfo.tier}`);
          console.log(`     - –ú–∞–∫—Å–∏–º—É–º –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–π: ${voucherInfo.maxUses === 999999 ? '–ë–µ–∑–ª–∏–º–∏—Ç–Ω–æ' : voucherInfo.maxUses}`);
          console.log(`     - –ó–Ω–∞—á–µ–Ω–∏–µ: ${voucherInfo.value}`);
          console.log(`     - –ê–∫—Ç–∏–≤–µ–Ω –≤–æ –≤—Ä–µ–º—è —Å—Ç–µ–π–∫–∏–Ω–≥–∞: ${voucherInfo.maxUses === 999999 ? '–î–∞' : '–ù–µ—Ç'}`);
          console.log("");
        }
      }
    } catch (error) {
      console.log(`‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –≤–∞—É—á–µ—Ä–æ–≤ –¥–ª—è ${tier.name}:`, error.message);
    }
  }

  console.log("\n=== ‚úÖ –ü–†–û–í–ï–†–ö–ê –ó–ê–í–ï–†–®–ï–ù–ê ===");
}

// –§—É–Ω–∫—Ü–∏–∏ –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –Ω–∞–∑–≤–∞–Ω–∏–π
function getVoucherTypeName(type) {
  const names = [
    "CAR_RENTAL_DISCOUNT_5",
    "FREE_RENTAL_HOURS", 
    "RENTAL_COUPON",
    "CAR_SERVICE_DISCOUNT",
    "RESTAURANT_DISCOUNT",
    "CAR_WASH",
    "UNLIMITED_MILEAGE",
    "PREMIUM_PROTECTION",
    "PRIORITY_BOOKING",
    "CAR_UPGRADE",
    "CHAUFFEUR_SERVICE",
    "FREE_UAE_DELIVERY",
    "LAMBORGHINI_RENTAL",
    "WEEKEND_HOTEL_CAR",
    "YACHT_PRIVATE_TOUR"
  ];
  return names[type] || `Unknown(${type})`;
}

function getCategoryName(category) {
  const names = ["ONE_TIME", "MULTI_USE", "STAKING_PERIOD"];
  return names[category] || `Unknown(${category})`;
}

main()
  .then(() => process.exit(0))
  .catch((error) => {
    console.error(error);
    process.exit(1);
  });
