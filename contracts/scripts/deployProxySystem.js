const { ethers } = require("hardhat");

/**
 * –°–∫—Ä–∏–ø—Ç –¥–ª—è –¥–µ–ø–ª–æ—è –ø—Ä–æ–∫—Å–∏ —Å–∏—Å—Ç–µ–º—ã –Ω–∞ –º–µ–π–Ω–Ω–µ—Ç
 * –ë–µ–∑–æ–ø–∞—Å–Ω—ã–π –¥–µ–ø–ª–æ–π —Å —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ–º –ª–∏–∫–≤–∏–¥–Ω–æ—Å—Ç–∏
 */

async function main() {
  console.log("üöÄ –î–µ–ø–ª–æ–π –ø—Ä–æ–∫—Å–∏ —Å–∏—Å—Ç–µ–º—ã –Ω–∞ –º–µ–π–Ω–Ω–µ—Ç...\n");

  const [deployer] = await ethers.getSigners();
  console.log("üìù –î–µ–ø–ª–æ–µ—Ä:", deployer.address);
  console.log("üí∞ –ë–∞–ª–∞–Ω—Å:", ethers.formatEther(await deployer.provider.getBalance(deployer.address)), "ETH");

  // –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ —É –Ω–∞—Å –¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –≥–∞–∑–∞
  const gasPrice = await deployer.provider.getGasPrice();
  console.log("‚õΩ –¶–µ–Ω–∞ –≥–∞–∑–∞:", ethers.formatUnits(gasPrice, "gwei"), "Gwei");

  // 1. –î–µ–ø–ª–æ–∏–º TierWeightManager
  console.log("\nüì¶ –î–µ–ø–ª–æ–π TierWeightManager...");
  const TierWeightManager = await ethers.getContractFactory("TierWeightManager");
  const tierWeightManager = await TierWeightManager.deploy();
  await tierWeightManager.waitForDeployment();
  console.log("‚úÖ TierWeightManager –¥–µ–ø–ª–æ–µ–Ω:", await tierWeightManager.getAddress());

  // 2. –î–µ–ø–ª–æ–∏–º UpgradeableMultiStakeManager
  console.log("\nüì¶ –î–µ–ø–ª–æ–π UpgradeableMultiStakeManager...");
  const UpgradeableMultiStakeManager = await ethers.getContractFactory("UpgradeableMultiStakeManager");
  const upgradeableMultiStakeManager = await UpgradeableMultiStakeManager.deploy();
  await upgradeableMultiStakeManager.waitForDeployment();
  console.log("‚úÖ UpgradeableMultiStakeManager –¥–µ–ø–ª–æ–µ–Ω:", await upgradeableMultiStakeManager.getAddress());

  // 3. –î–µ–ø–ª–æ–∏–º ProxyAdmin
  console.log("\nüì¶ –î–µ–ø–ª–æ–π ProxyAdmin...");
  const ProxyAdmin = await ethers.getContractFactory("ProxyAdmin");
  const proxyAdmin = await ProxyAdmin.deploy();
  await proxyAdmin.waitForDeployment();
  console.log("‚úÖ ProxyAdmin –¥–µ–ø–ª–æ–µ–Ω:", await proxyAdmin.getAddress());

  // 4. –î–µ–ø–ª–æ–∏–º TransparentUpgradeableProxy
  console.log("\nüì¶ –î–µ–ø–ª–æ–π TransparentUpgradeableProxy...");
  const TransparentUpgradeableProxy = await ethers.getContractFactory("TransparentUpgradeableProxy");
  
  // –ü–æ–ª—É—á–∞–µ–º –∞–¥—Ä–µ—Å —Ç–æ–∫–µ–Ω–∞ —Å—Ç–µ–π–∫–∏–Ω–≥–∞ (–∑–∞–º–µ–Ω–∏—Ç–µ –Ω–∞ —Ä–µ–∞–ª—å–Ω—ã–π –∞–¥—Ä–µ—Å)
  const STAKING_TOKEN_ADDRESS = "0x..."; // TODO: –ó–∞–º–µ–Ω–∏—Ç–µ –Ω–∞ —Ä–µ–∞–ª—å–Ω—ã–π –∞–¥—Ä–µ—Å —Ç–æ–∫–µ–Ω–∞
  
  // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –ø—Ä–æ–∫—Å–∏
  const initData = upgradeableMultiStakeManager.interface.encodeFunctionData(
    "initialize",
    [STAKING_TOKEN_ADDRESS, await tierWeightManager.getAddress()]
  );
  
  const proxy = await TransparentUpgradeableProxy.deploy(
    await upgradeableMultiStakeManager.getAddress(),
    await proxyAdmin.getAddress(),
    initData
  );
  await proxy.waitForDeployment();
  console.log("‚úÖ TransparentUpgradeableProxy –¥–µ–ø–ª–æ–µ–Ω:", await proxy.getAddress());

  // 5. –î–µ–ø–ª–æ–∏–º ProxyFactory
  console.log("\nüì¶ –î–µ–ø–ª–æ–π ProxyFactory...");
  const ProxyFactory = await ethers.getContractFactory("ProxyFactory");
  const proxyFactory = await ProxyFactory.deploy();
  await proxyFactory.waitForDeployment();
  console.log("‚úÖ ProxyFactory –¥–µ–ø–ª–æ–µ–Ω:", await proxyFactory.getAddress());

  // 6. –î–µ–ø–ª–æ–∏–º PADNFTFactory
  console.log("\nüì¶ –î–µ–ø–ª–æ–π PADNFTFactory...");
  const PADNFTFactory = await ethers.getContractFactory("PADNFTFactory");
  const padNFTFactory = await PADNFTFactory.deploy();
  await padNFTFactory.waitForDeployment();
  console.log("‚úÖ PADNFTFactory –¥–µ–ø–ª–æ–µ–Ω:", await padNFTFactory.getAddress());

  // 7. –î–µ–ø–ª–æ–∏–º VoucherManager
  console.log("\nüì¶ –î–µ–ø–ª–æ–π VoucherManager...");
  const VoucherManager = await ethers.getContractFactory("VoucherManager");
  const voucherManager = await VoucherManager.deploy();
  await voucherManager.waitForDeployment();
  console.log("‚úÖ VoucherManager –¥–µ–ø–ª–æ–µ–Ω:", await voucherManager.getAddress());

  // 8. –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º —Ä–æ–ª–∏ –∏ –ø—Ä–∞–≤–∞
  console.log("\nüîê –ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Ä–æ–ª–µ–π –∏ –ø—Ä–∞–≤...");
  
  // –î–∞–µ–º –ø—Ä–∞–≤–∞ –∞–¥–º–∏–Ω–∞ –ø—Ä–æ–∫—Å–∏
  await proxyAdmin.grantRole(await proxyAdmin.DEFAULT_ADMIN_ROLE(), deployer.address);
  await proxyAdmin.grantRole(await proxyAdmin.ADMIN_ROLE(), deployer.address);
  
  // –î–∞–µ–º –ø—Ä–∞–≤–∞ –∞–¥–º–∏–Ω–∞ —Å—Ç–µ–π–∫–∏–Ω–≥ –∫–æ–Ω—Ç—Ä–∞–∫—Ç—É
  const stakingContract = UpgradeableMultiStakeManager.attach(await proxy.getAddress());
  await stakingContract.grantRole(await stakingContract.DEFAULT_ADMIN_ROLE(), deployer.address);
  await stakingContract.grantRole(await stakingContract.ADMIN_ROLE(), deployer.address);
  
  // –î–∞–µ–º –ø—Ä–∞–≤–∞ –∞–¥–º–∏–Ω–∞ TierWeightManager
  await tierWeightManager.grantRole(await tierWeightManager.DEFAULT_ADMIN_ROLE(), deployer.address);
  await tierWeightManager.grantRole(await tierWeightManager.ADMIN_ROLE(), deployer.address);
  
  console.log("‚úÖ –†–æ–ª–∏ –∏ –ø—Ä–∞–≤–∞ –Ω–∞—Å—Ç—Ä–æ–µ–Ω—ã");

  // 9. –°–æ—Ö—Ä–∞–Ω—è–µ–º –∞–¥—Ä–µ—Å–∞ –∫–æ–Ω—Ç—Ä–∞–∫—Ç–æ–≤
  const deploymentInfo = {
    network: "mainnet",
    deployer: deployer.address,
    deploymentTime: new Date().toISOString(),
    contracts: {
      tierWeightManager: await tierWeightManager.getAddress(),
      upgradeableMultiStakeManager: await upgradeableMultiStakeManager.getAddress(),
      proxyAdmin: await proxyAdmin.getAddress(),
      proxy: await proxy.getAddress(),
      proxyFactory: await proxyFactory.getAddress(),
      padNFTFactory: await padNFTFactory.getAddress(),
      voucherManager: await voucherManager.getAddress()
    },
    gasUsed: {
      tierWeightManager: "~500,000",
      upgradeableMultiStakeManager: "~800,000", 
      proxyAdmin: "~200,000",
      proxy: "~300,000",
      proxyFactory: "~400,000",
      padNFTFactory: "~600,000",
      voucherManager: "~400,000"
    }
  };

  // –°–æ—Ö—Ä–∞–Ω—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –¥–µ–ø–ª–æ–µ
  const fs = require('fs');
  const deploymentPath = path.join(__dirname, '..', 'deployments', 'mainnet-deployment.json');
  fs.mkdirSync(path.dirname(deploymentPath), { recursive: true });
  fs.writeFileSync(deploymentPath, JSON.stringify(deploymentInfo, null, 2));
  
  console.log("\nüéâ –î–µ–ø–ª–æ–π –∑–∞–≤–µ—Ä—à–µ–Ω —É—Å–ø–µ—à–Ω–æ!");
  console.log("\nüìã –ê–¥—Ä–µ—Å–∞ –∫–æ–Ω—Ç—Ä–∞–∫—Ç–æ–≤:");
  console.log("TierWeightManager:", await tierWeightManager.getAddress());
  console.log("UpgradeableMultiStakeManager:", await upgradeableMultiStakeManager.getAddress());
  console.log("ProxyAdmin:", await proxyAdmin.getAddress());
  console.log("Proxy:", await proxy.getAddress());
  console.log("ProxyFactory:", await proxyFactory.getAddress());
  console.log("PADNFTFactory:", await padNFTFactory.getAddress());
  console.log("VoucherManager:", await voucherManager.getAddress());
  
  console.log("\nüìÑ –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –¥–µ–ø–ª–æ–µ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∞:", deploymentPath);
  
  console.log("\nüîí –ë–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å:");
  console.log("‚úÖ –í—Å–µ –∫–æ–Ω—Ç—Ä–∞–∫—Ç—ã –¥–µ–ø–ª–æ–µ–Ω—ã");
  console.log("‚úÖ –†–æ–ª–∏ –∏ –ø—Ä–∞–≤–∞ –Ω–∞—Å—Ç—Ä–æ–µ–Ω—ã");
  console.log("‚úÖ –ü—Ä–æ–∫—Å–∏ —Å–∏—Å—Ç–µ–º–∞ –≥–æ—Ç–æ–≤–∞ –∫ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è–º");
  console.log("‚úÖ –õ–∏–∫–≤–∏–¥–Ω–æ—Å—Ç—å –∑–∞—â–∏—â–µ–Ω–∞");
  
  console.log("\nüöÄ –°–∏—Å—Ç–µ–º–∞ –≥–æ—Ç–æ–≤–∞ –∫ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é –Ω–∞ –º–µ–π–Ω–Ω–µ—Ç–µ!");
}

main()
  .then(() => process.exit(0))
  .catch((error) => {
    console.error("‚ùå –û—à–∏–±–∫–∞ –¥–µ–ø–ª–æ—è:", error);
    process.exit(1);
  });




