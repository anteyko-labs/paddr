{"id":"0a9b3d11732ea08faeff43e7fb61de80","_format":"hh-sol-build-info-1","solcVersion":"0.8.28","solcLongVersion":"0.8.28+commit.7893614a","input":{"language":"Solidity","sources":{"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (access/AccessControl.sol)\n\npragma solidity ^0.8.20;\n\nimport {IAccessControl} from \"@openzeppelin/contracts/access/IAccessControl.sol\";\nimport {ContextUpgradeable} from \"../utils/ContextUpgradeable.sol\";\nimport {IERC165} from \"@openzeppelin/contracts/utils/introspection/IERC165.sol\";\nimport {ERC165Upgradeable} from \"../utils/introspection/ERC165Upgradeable.sol\";\nimport {Initializable} from \"../proxy/utils/Initializable.sol\";\n\n/**\n * @dev Contract module that allows children to implement role-based access\n * control mechanisms. This is a lightweight version that doesn't allow enumerating role\n * members except through off-chain means by accessing the contract event logs. Some\n * applications may benefit from on-chain enumerability, for those cases see\n * {AccessControlEnumerable}.\n *\n * Roles are referred to by their `bytes32` identifier. These should be exposed\n * in the external API and be unique. The best way to achieve this is by\n * using `public constant` hash digests:\n *\n * ```solidity\n * bytes32 public constant MY_ROLE = keccak256(\"MY_ROLE\");\n * ```\n *\n * Roles can be used to represent a set of permissions. To restrict access to a\n * function call, use {hasRole}:\n *\n * ```solidity\n * function foo() public {\n *     require(hasRole(MY_ROLE, msg.sender));\n *     ...\n * }\n * ```\n *\n * Roles can be granted and revoked dynamically via the {grantRole} and\n * {revokeRole} functions. Each role has an associated admin role, and only\n * accounts that have a role's admin role can call {grantRole} and {revokeRole}.\n *\n * By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means\n * that only accounts with this role will be able to grant or revoke other\n * roles. More complex role relationships can be created by using\n * {_setRoleAdmin}.\n *\n * WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to\n * grant and revoke this role. Extra precautions should be taken to secure\n * accounts that have been granted it. We recommend using {AccessControlDefaultAdminRules}\n * to enforce additional security measures for this role.\n */\nabstract contract AccessControlUpgradeable is Initializable, ContextUpgradeable, IAccessControl, ERC165Upgradeable {\n    struct RoleData {\n        mapping(address account => bool) hasRole;\n        bytes32 adminRole;\n    }\n\n    bytes32 public constant DEFAULT_ADMIN_ROLE = 0x00;\n\n\n    /// @custom:storage-location erc7201:openzeppelin.storage.AccessControl\n    struct AccessControlStorage {\n        mapping(bytes32 role => RoleData) _roles;\n    }\n\n    // keccak256(abi.encode(uint256(keccak256(\"openzeppelin.storage.AccessControl\")) - 1)) & ~bytes32(uint256(0xff))\n    bytes32 private constant AccessControlStorageLocation = 0x02dd7bc7dec4dceedda775e58dd541e08a116c6c53815c0bd028192f7b626800;\n\n    function _getAccessControlStorage() private pure returns (AccessControlStorage storage $) {\n        assembly {\n            $.slot := AccessControlStorageLocation\n        }\n    }\n\n    /**\n     * @dev Modifier that checks that an account has a specific role. Reverts\n     * with an {AccessControlUnauthorizedAccount} error including the required role.\n     */\n    modifier onlyRole(bytes32 role) {\n        _checkRole(role);\n        _;\n    }\n\n    function __AccessControl_init() internal onlyInitializing {\n    }\n\n    function __AccessControl_init_unchained() internal onlyInitializing {\n    }\n    /// @inheritdoc IERC165\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n        return interfaceId == type(IAccessControl).interfaceId || super.supportsInterface(interfaceId);\n    }\n\n    /**\n     * @dev Returns `true` if `account` has been granted `role`.\n     */\n    function hasRole(bytes32 role, address account) public view virtual returns (bool) {\n        AccessControlStorage storage $ = _getAccessControlStorage();\n        return $._roles[role].hasRole[account];\n    }\n\n    /**\n     * @dev Reverts with an {AccessControlUnauthorizedAccount} error if `_msgSender()`\n     * is missing `role`. Overriding this function changes the behavior of the {onlyRole} modifier.\n     */\n    function _checkRole(bytes32 role) internal view virtual {\n        _checkRole(role, _msgSender());\n    }\n\n    /**\n     * @dev Reverts with an {AccessControlUnauthorizedAccount} error if `account`\n     * is missing `role`.\n     */\n    function _checkRole(bytes32 role, address account) internal view virtual {\n        if (!hasRole(role, account)) {\n            revert AccessControlUnauthorizedAccount(account, role);\n        }\n    }\n\n    /**\n     * @dev Returns the admin role that controls `role`. See {grantRole} and\n     * {revokeRole}.\n     *\n     * To change a role's admin, use {_setRoleAdmin}.\n     */\n    function getRoleAdmin(bytes32 role) public view virtual returns (bytes32) {\n        AccessControlStorage storage $ = _getAccessControlStorage();\n        return $._roles[role].adminRole;\n    }\n\n    /**\n     * @dev Grants `role` to `account`.\n     *\n     * If `account` had not been already granted `role`, emits a {RoleGranted}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     *\n     * May emit a {RoleGranted} event.\n     */\n    function grantRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {\n        _grantRole(role, account);\n    }\n\n    /**\n     * @dev Revokes `role` from `account`.\n     *\n     * If `account` had been granted `role`, emits a {RoleRevoked} event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     *\n     * May emit a {RoleRevoked} event.\n     */\n    function revokeRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {\n        _revokeRole(role, account);\n    }\n\n    /**\n     * @dev Revokes `role` from the calling account.\n     *\n     * Roles are often managed via {grantRole} and {revokeRole}: this function's\n     * purpose is to provide a mechanism for accounts to lose their privileges\n     * if they are compromised (such as when a trusted device is misplaced).\n     *\n     * If the calling account had been revoked `role`, emits a {RoleRevoked}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must be `callerConfirmation`.\n     *\n     * May emit a {RoleRevoked} event.\n     */\n    function renounceRole(bytes32 role, address callerConfirmation) public virtual {\n        if (callerConfirmation != _msgSender()) {\n            revert AccessControlBadConfirmation();\n        }\n\n        _revokeRole(role, callerConfirmation);\n    }\n\n    /**\n     * @dev Sets `adminRole` as ``role``'s admin role.\n     *\n     * Emits a {RoleAdminChanged} event.\n     */\n    function _setRoleAdmin(bytes32 role, bytes32 adminRole) internal virtual {\n        AccessControlStorage storage $ = _getAccessControlStorage();\n        bytes32 previousAdminRole = getRoleAdmin(role);\n        $._roles[role].adminRole = adminRole;\n        emit RoleAdminChanged(role, previousAdminRole, adminRole);\n    }\n\n    /**\n     * @dev Attempts to grant `role` to `account` and returns a boolean indicating if `role` was granted.\n     *\n     * Internal function without access restriction.\n     *\n     * May emit a {RoleGranted} event.\n     */\n    function _grantRole(bytes32 role, address account) internal virtual returns (bool) {\n        AccessControlStorage storage $ = _getAccessControlStorage();\n        if (!hasRole(role, account)) {\n            $._roles[role].hasRole[account] = true;\n            emit RoleGranted(role, account, _msgSender());\n            return true;\n        } else {\n            return false;\n        }\n    }\n\n    /**\n     * @dev Attempts to revoke `role` from `account` and returns a boolean indicating if `role` was revoked.\n     *\n     * Internal function without access restriction.\n     *\n     * May emit a {RoleRevoked} event.\n     */\n    function _revokeRole(bytes32 role, address account) internal virtual returns (bool) {\n        AccessControlStorage storage $ = _getAccessControlStorage();\n        if (hasRole(role, account)) {\n            $._roles[role].hasRole[account] = false;\n            emit RoleRevoked(role, account, _msgSender());\n            return true;\n        } else {\n            return false;\n        }\n    }\n}\n"},"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.3.0) (proxy/utils/Initializable.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\n * behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\n * external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\n * function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\n *\n * The initialization functions use a version number. Once a version number is used, it is consumed and cannot be\n * reused. This mechanism prevents re-execution of each \"step\" but allows the creation of new initialization steps in\n * case an upgrade adds a module that needs to be initialized.\n *\n * For example:\n *\n * [.hljs-theme-light.nopadding]\n * ```solidity\n * contract MyToken is ERC20Upgradeable {\n *     function initialize() initializer public {\n *         __ERC20_init(\"MyToken\", \"MTK\");\n *     }\n * }\n *\n * contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {\n *     function initializeV2() reinitializer(2) public {\n *         __ERC20Permit_init(\"MyToken\");\n *     }\n * }\n * ```\n *\n * TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\n * possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\n *\n * CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\n * that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\n *\n * [CAUTION]\n * ====\n * Avoid leaving a contract uninitialized.\n *\n * An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\n * contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke\n * the {_disableInitializers} function in the constructor to automatically lock it when it is deployed:\n *\n * [.hljs-theme-light.nopadding]\n * ```\n * /// @custom:oz-upgrades-unsafe-allow constructor\n * constructor() {\n *     _disableInitializers();\n * }\n * ```\n * ====\n */\nabstract contract Initializable {\n    /**\n     * @dev Storage of the initializable contract.\n     *\n     * It's implemented on a custom ERC-7201 namespace to reduce the risk of storage collisions\n     * when using with upgradeable contracts.\n     *\n     * @custom:storage-location erc7201:openzeppelin.storage.Initializable\n     */\n    struct InitializableStorage {\n        /**\n         * @dev Indicates that the contract has been initialized.\n         */\n        uint64 _initialized;\n        /**\n         * @dev Indicates that the contract is in the process of being initialized.\n         */\n        bool _initializing;\n    }\n\n    // keccak256(abi.encode(uint256(keccak256(\"openzeppelin.storage.Initializable\")) - 1)) & ~bytes32(uint256(0xff))\n    bytes32 private constant INITIALIZABLE_STORAGE = 0xf0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00;\n\n    /**\n     * @dev The contract is already initialized.\n     */\n    error InvalidInitialization();\n\n    /**\n     * @dev The contract is not initializing.\n     */\n    error NotInitializing();\n\n    /**\n     * @dev Triggered when the contract has been initialized or reinitialized.\n     */\n    event Initialized(uint64 version);\n\n    /**\n     * @dev A modifier that defines a protected initializer function that can be invoked at most once. In its scope,\n     * `onlyInitializing` functions can be used to initialize parent contracts.\n     *\n     * Similar to `reinitializer(1)`, except that in the context of a constructor an `initializer` may be invoked any\n     * number of times. This behavior in the constructor can be useful during testing and is not expected to be used in\n     * production.\n     *\n     * Emits an {Initialized} event.\n     */\n    modifier initializer() {\n        // solhint-disable-next-line var-name-mixedcase\n        InitializableStorage storage $ = _getInitializableStorage();\n\n        // Cache values to avoid duplicated sloads\n        bool isTopLevelCall = !$._initializing;\n        uint64 initialized = $._initialized;\n\n        // Allowed calls:\n        // - initialSetup: the contract is not in the initializing state and no previous version was\n        //                 initialized\n        // - construction: the contract is initialized at version 1 (no reinitialization) and the\n        //                 current contract is just being deployed\n        bool initialSetup = initialized == 0 && isTopLevelCall;\n        bool construction = initialized == 1 && address(this).code.length == 0;\n\n        if (!initialSetup && !construction) {\n            revert InvalidInitialization();\n        }\n        $._initialized = 1;\n        if (isTopLevelCall) {\n            $._initializing = true;\n        }\n        _;\n        if (isTopLevelCall) {\n            $._initializing = false;\n            emit Initialized(1);\n        }\n    }\n\n    /**\n     * @dev A modifier that defines a protected reinitializer function that can be invoked at most once, and only if the\n     * contract hasn't been initialized to a greater version before. In its scope, `onlyInitializing` functions can be\n     * used to initialize parent contracts.\n     *\n     * A reinitializer may be used after the original initialization step. This is essential to configure modules that\n     * are added through upgrades and that require initialization.\n     *\n     * When `version` is 1, this modifier is similar to `initializer`, except that functions marked with `reinitializer`\n     * cannot be nested. If one is invoked in the context of another, execution will revert.\n     *\n     * Note that versions can jump in increments greater than 1; this implies that if multiple reinitializers coexist in\n     * a contract, executing them in the right order is up to the developer or operator.\n     *\n     * WARNING: Setting the version to 2**64 - 1 will prevent any future reinitialization.\n     *\n     * Emits an {Initialized} event.\n     */\n    modifier reinitializer(uint64 version) {\n        // solhint-disable-next-line var-name-mixedcase\n        InitializableStorage storage $ = _getInitializableStorage();\n\n        if ($._initializing || $._initialized >= version) {\n            revert InvalidInitialization();\n        }\n        $._initialized = version;\n        $._initializing = true;\n        _;\n        $._initializing = false;\n        emit Initialized(version);\n    }\n\n    /**\n     * @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\n     * {initializer} and {reinitializer} modifiers, directly or indirectly.\n     */\n    modifier onlyInitializing() {\n        _checkInitializing();\n        _;\n    }\n\n    /**\n     * @dev Reverts if the contract is not in an initializing state. See {onlyInitializing}.\n     */\n    function _checkInitializing() internal view virtual {\n        if (!_isInitializing()) {\n            revert NotInitializing();\n        }\n    }\n\n    /**\n     * @dev Locks the contract, preventing any future reinitialization. This cannot be part of an initializer call.\n     * Calling this in the constructor of a contract will prevent that contract from being initialized or reinitialized\n     * to any version. It is recommended to use this to lock implementation contracts that are designed to be called\n     * through proxies.\n     *\n     * Emits an {Initialized} event the first time it is successfully executed.\n     */\n    function _disableInitializers() internal virtual {\n        // solhint-disable-next-line var-name-mixedcase\n        InitializableStorage storage $ = _getInitializableStorage();\n\n        if ($._initializing) {\n            revert InvalidInitialization();\n        }\n        if ($._initialized != type(uint64).max) {\n            $._initialized = type(uint64).max;\n            emit Initialized(type(uint64).max);\n        }\n    }\n\n    /**\n     * @dev Returns the highest version that has been initialized. See {reinitializer}.\n     */\n    function _getInitializedVersion() internal view returns (uint64) {\n        return _getInitializableStorage()._initialized;\n    }\n\n    /**\n     * @dev Returns `true` if the contract is currently initializing. See {onlyInitializing}.\n     */\n    function _isInitializing() internal view returns (bool) {\n        return _getInitializableStorage()._initializing;\n    }\n\n    /**\n     * @dev Pointer to storage slot. Allows integrators to override it with a custom storage location.\n     *\n     * NOTE: Consider following the ERC-7201 formula to derive storage locations.\n     */\n    function _initializableStorageSlot() internal pure virtual returns (bytes32) {\n        return INITIALIZABLE_STORAGE;\n    }\n\n    /**\n     * @dev Returns a pointer to the storage namespace.\n     */\n    // solhint-disable-next-line var-name-mixedcase\n    function _getInitializableStorage() private pure returns (InitializableStorage storage $) {\n        bytes32 slot = _initializableStorageSlot();\n        assembly {\n            $.slot := slot\n        }\n    }\n}\n"},"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.3.0) (proxy/utils/UUPSUpgradeable.sol)\n\npragma solidity ^0.8.22;\n\nimport {IERC1822Proxiable} from \"@openzeppelin/contracts/interfaces/draft-IERC1822.sol\";\nimport {ERC1967Utils} from \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\";\nimport {Initializable} from \"./Initializable.sol\";\n\n/**\n * @dev An upgradeability mechanism designed for UUPS proxies. The functions included here can perform an upgrade of an\n * {ERC1967Proxy}, when this contract is set as the implementation behind such a proxy.\n *\n * A security mechanism ensures that an upgrade does not turn off upgradeability accidentally, although this risk is\n * reinstated if the upgrade retains upgradeability but removes the security mechanism, e.g. by replacing\n * `UUPSUpgradeable` with a custom implementation of upgrades.\n *\n * The {_authorizeUpgrade} function must be overridden to include access restriction to the upgrade mechanism.\n */\nabstract contract UUPSUpgradeable is Initializable, IERC1822Proxiable {\n    /// @custom:oz-upgrades-unsafe-allow state-variable-immutable\n    address private immutable __self = address(this);\n\n    /**\n     * @dev The version of the upgrade interface of the contract. If this getter is missing, both `upgradeTo(address)`\n     * and `upgradeToAndCall(address,bytes)` are present, and `upgradeTo` must be used if no function should be called,\n     * while `upgradeToAndCall` will invoke the `receive` function if the second argument is the empty byte string.\n     * If the getter returns `\"5.0.0\"`, only `upgradeToAndCall(address,bytes)` is present, and the second argument must\n     * be the empty byte string if no function should be called, making it impossible to invoke the `receive` function\n     * during an upgrade.\n     */\n    string public constant UPGRADE_INTERFACE_VERSION = \"5.0.0\";\n\n    /**\n     * @dev The call is from an unauthorized context.\n     */\n    error UUPSUnauthorizedCallContext();\n\n    /**\n     * @dev The storage `slot` is unsupported as a UUID.\n     */\n    error UUPSUnsupportedProxiableUUID(bytes32 slot);\n\n    /**\n     * @dev Check that the execution is being performed through a delegatecall call and that the execution context is\n     * a proxy contract with an implementation (as defined in ERC-1967) pointing to self. This should only be the case\n     * for UUPS and transparent proxies that are using the current contract as their implementation. Execution of a\n     * function through ERC-1167 minimal proxies (clones) would not normally pass this test, but is not guaranteed to\n     * fail.\n     */\n    modifier onlyProxy() {\n        _checkProxy();\n        _;\n    }\n\n    /**\n     * @dev Check that the execution is not being performed through a delegate call. This allows a function to be\n     * callable on the implementing contract but not through proxies.\n     */\n    modifier notDelegated() {\n        _checkNotDelegated();\n        _;\n    }\n\n    function __UUPSUpgradeable_init() internal onlyInitializing {\n    }\n\n    function __UUPSUpgradeable_init_unchained() internal onlyInitializing {\n    }\n    /**\n     * @dev Implementation of the ERC-1822 {proxiableUUID} function. This returns the storage slot used by the\n     * implementation. It is used to validate the implementation's compatibility when performing an upgrade.\n     *\n     * IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks\n     * bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this\n     * function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier.\n     */\n    function proxiableUUID() external view virtual notDelegated returns (bytes32) {\n        return ERC1967Utils.IMPLEMENTATION_SLOT;\n    }\n\n    /**\n     * @dev Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call\n     * encoded in `data`.\n     *\n     * Calls {_authorizeUpgrade}.\n     *\n     * Emits an {Upgraded} event.\n     *\n     * @custom:oz-upgrades-unsafe-allow-reachable delegatecall\n     */\n    function upgradeToAndCall(address newImplementation, bytes memory data) public payable virtual onlyProxy {\n        _authorizeUpgrade(newImplementation);\n        _upgradeToAndCallUUPS(newImplementation, data);\n    }\n\n    /**\n     * @dev Reverts if the execution is not performed via delegatecall or the execution\n     * context is not of a proxy with an ERC-1967 compliant implementation pointing to self.\n     */\n    function _checkProxy() internal view virtual {\n        if (\n            address(this) == __self || // Must be called through delegatecall\n            ERC1967Utils.getImplementation() != __self // Must be called through an active proxy\n        ) {\n            revert UUPSUnauthorizedCallContext();\n        }\n    }\n\n    /**\n     * @dev Reverts if the execution is performed via delegatecall.\n     * See {notDelegated}.\n     */\n    function _checkNotDelegated() internal view virtual {\n        if (address(this) != __self) {\n            // Must not be called through delegatecall\n            revert UUPSUnauthorizedCallContext();\n        }\n    }\n\n    /**\n     * @dev Function that should revert when `msg.sender` is not authorized to upgrade the contract. Called by\n     * {upgradeToAndCall}.\n     *\n     * Normally, this function will use an xref:access.adoc[access control] modifier such as {Ownable-onlyOwner}.\n     *\n     * ```solidity\n     * function _authorizeUpgrade(address) internal onlyOwner {}\n     * ```\n     */\n    function _authorizeUpgrade(address newImplementation) internal virtual;\n\n    /**\n     * @dev Performs an implementation upgrade with a security check for UUPS proxies, and additional setup call.\n     *\n     * As a security check, {proxiableUUID} is invoked in the new implementation, and the return value\n     * is expected to be the implementation slot in ERC-1967.\n     *\n     * Emits an {IERC1967-Upgraded} event.\n     */\n    function _upgradeToAndCallUUPS(address newImplementation, bytes memory data) private {\n        try IERC1822Proxiable(newImplementation).proxiableUUID() returns (bytes32 slot) {\n            if (slot != ERC1967Utils.IMPLEMENTATION_SLOT) {\n                revert UUPSUnsupportedProxiableUUID(slot);\n            }\n            ERC1967Utils.upgradeToAndCall(newImplementation, data);\n        } catch {\n            // The implementation is not UUPS\n            revert ERC1967Utils.ERC1967InvalidImplementation(newImplementation);\n        }\n    }\n}\n"},"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (token/ERC20/ERC20.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\nimport {IERC20Metadata} from \"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\";\nimport {ContextUpgradeable} from \"../../utils/ContextUpgradeable.sol\";\nimport {IERC20Errors} from \"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\";\nimport {Initializable} from \"../../proxy/utils/Initializable.sol\";\n\n/**\n * @dev Implementation of the {IERC20} interface.\n *\n * This implementation is agnostic to the way tokens are created. This means\n * that a supply mechanism has to be added in a derived contract using {_mint}.\n *\n * TIP: For a detailed writeup see our guide\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n * to implement supply mechanisms].\n *\n * The default value of {decimals} is 18. To change this, you should override\n * this function so it returns a different value.\n *\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\n * instead returning `false` on failure. This behavior is nonetheless\n * conventional and does not conflict with the expectations of ERC-20\n * applications.\n */\nabstract contract ERC20Upgradeable is Initializable, ContextUpgradeable, IERC20, IERC20Metadata, IERC20Errors {\n    /// @custom:storage-location erc7201:openzeppelin.storage.ERC20\n    struct ERC20Storage {\n        mapping(address account => uint256) _balances;\n\n        mapping(address account => mapping(address spender => uint256)) _allowances;\n\n        uint256 _totalSupply;\n\n        string _name;\n        string _symbol;\n    }\n\n    // keccak256(abi.encode(uint256(keccak256(\"openzeppelin.storage.ERC20\")) - 1)) & ~bytes32(uint256(0xff))\n    bytes32 private constant ERC20StorageLocation = 0x52c63247e1f47db19d5ce0460030c497f067ca4cebf71ba98eeadabe20bace00;\n\n    function _getERC20Storage() private pure returns (ERC20Storage storage $) {\n        assembly {\n            $.slot := ERC20StorageLocation\n        }\n    }\n\n    /**\n     * @dev Sets the values for {name} and {symbol}.\n     *\n     * Both values are immutable: they can only be set once during construction.\n     */\n    function __ERC20_init(string memory name_, string memory symbol_) internal onlyInitializing {\n        __ERC20_init_unchained(name_, symbol_);\n    }\n\n    function __ERC20_init_unchained(string memory name_, string memory symbol_) internal onlyInitializing {\n        ERC20Storage storage $ = _getERC20Storage();\n        $._name = name_;\n        $._symbol = symbol_;\n    }\n\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() public view virtual returns (string memory) {\n        ERC20Storage storage $ = _getERC20Storage();\n        return $._name;\n    }\n\n    /**\n     * @dev Returns the symbol of the token, usually a shorter version of the\n     * name.\n     */\n    function symbol() public view virtual returns (string memory) {\n        ERC20Storage storage $ = _getERC20Storage();\n        return $._symbol;\n    }\n\n    /**\n     * @dev Returns the number of decimals used to get its user representation.\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\n     *\n     * Tokens usually opt for a value of 18, imitating the relationship between\n     * Ether and Wei. This is the default value returned by this function, unless\n     * it's overridden.\n     *\n     * NOTE: This information is only used for _display_ purposes: it in\n     * no way affects any of the arithmetic of the contract, including\n     * {IERC20-balanceOf} and {IERC20-transfer}.\n     */\n    function decimals() public view virtual returns (uint8) {\n        return 18;\n    }\n\n    /// @inheritdoc IERC20\n    function totalSupply() public view virtual returns (uint256) {\n        ERC20Storage storage $ = _getERC20Storage();\n        return $._totalSupply;\n    }\n\n    /// @inheritdoc IERC20\n    function balanceOf(address account) public view virtual returns (uint256) {\n        ERC20Storage storage $ = _getERC20Storage();\n        return $._balances[account];\n    }\n\n    /**\n     * @dev See {IERC20-transfer}.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - the caller must have a balance of at least `value`.\n     */\n    function transfer(address to, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _transfer(owner, to, value);\n        return true;\n    }\n\n    /// @inheritdoc IERC20\n    function allowance(address owner, address spender) public view virtual returns (uint256) {\n        ERC20Storage storage $ = _getERC20Storage();\n        return $._allowances[owner][spender];\n    }\n\n    /**\n     * @dev See {IERC20-approve}.\n     *\n     * NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function approve(address spender, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-transferFrom}.\n     *\n     * Skips emitting an {Approval} event indicating an allowance update. This is not\n     * required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve].\n     *\n     * NOTE: Does not update the allowance if the current allowance\n     * is the maximum `uint256`.\n     *\n     * Requirements:\n     *\n     * - `from` and `to` cannot be the zero address.\n     * - `from` must have a balance of at least `value`.\n     * - the caller must have allowance for ``from``'s tokens of at least\n     * `value`.\n     */\n    function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {\n        address spender = _msgSender();\n        _spendAllowance(from, spender, value);\n        _transfer(from, to, value);\n        return true;\n    }\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to`.\n     *\n     * This internal function is equivalent to {transfer}, and can be used to\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\n     *\n     * Emits a {Transfer} event.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _transfer(address from, address to, uint256 value) internal {\n        if (from == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        if (to == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(from, to, value);\n    }\n\n    /**\n     * @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n     * (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n     * this function.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _update(address from, address to, uint256 value) internal virtual {\n        ERC20Storage storage $ = _getERC20Storage();\n        if (from == address(0)) {\n            // Overflow check required: The rest of the code assumes that totalSupply never overflows\n            $._totalSupply += value;\n        } else {\n            uint256 fromBalance = $._balances[from];\n            if (fromBalance < value) {\n                revert ERC20InsufficientBalance(from, fromBalance, value);\n            }\n            unchecked {\n                // Overflow not possible: value <= fromBalance <= totalSupply.\n                $._balances[from] = fromBalance - value;\n            }\n        }\n\n        if (to == address(0)) {\n            unchecked {\n                // Overflow not possible: value <= totalSupply or value <= fromBalance <= totalSupply.\n                $._totalSupply -= value;\n            }\n        } else {\n            unchecked {\n                // Overflow not possible: balance + value is at most totalSupply, which we know fits into a uint256.\n                $._balances[to] += value;\n            }\n        }\n\n        emit Transfer(from, to, value);\n    }\n\n    /**\n     * @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n     * Relies on the `_update` mechanism\n     *\n     * Emits a {Transfer} event with `from` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _mint(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(address(0), account, value);\n    }\n\n    /**\n     * @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n     * Relies on the `_update` mechanism.\n     *\n     * Emits a {Transfer} event with `to` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead\n     */\n    function _burn(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        _update(account, address(0), value);\n    }\n\n    /**\n     * @dev Sets `value` as the allowance of `spender` over the `owner`'s tokens.\n     *\n     * This internal function is equivalent to `approve`, and can be used to\n     * e.g. set automatic allowances for certain subsystems, etc.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `owner` cannot be the zero address.\n     * - `spender` cannot be the zero address.\n     *\n     * Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument.\n     */\n    function _approve(address owner, address spender, uint256 value) internal {\n        _approve(owner, spender, value, true);\n    }\n\n    /**\n     * @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n     *\n     * By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n     * `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n     * `Approval` event during `transferFrom` operations.\n     *\n     * Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n     * true using the following override:\n     *\n     * ```solidity\n     * function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     *     super._approve(owner, spender, value, true);\n     * }\n     * ```\n     *\n     * Requirements are the same as {_approve}.\n     */\n    function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {\n        ERC20Storage storage $ = _getERC20Storage();\n        if (owner == address(0)) {\n            revert ERC20InvalidApprover(address(0));\n        }\n        if (spender == address(0)) {\n            revert ERC20InvalidSpender(address(0));\n        }\n        $._allowances[owner][spender] = value;\n        if (emitEvent) {\n            emit Approval(owner, spender, value);\n        }\n    }\n\n    /**\n     * @dev Updates `owner`'s allowance for `spender` based on spent `value`.\n     *\n     * Does not update the allowance value in case of infinite allowance.\n     * Revert if not enough allowance is available.\n     *\n     * Does not emit an {Approval} event.\n     */\n    function _spendAllowance(address owner, address spender, uint256 value) internal virtual {\n        uint256 currentAllowance = allowance(owner, spender);\n        if (currentAllowance < type(uint256).max) {\n            if (currentAllowance < value) {\n                revert ERC20InsufficientAllowance(spender, currentAllowance, value);\n            }\n            unchecked {\n                _approve(owner, spender, currentAllowance - value, false);\n            }\n        }\n    }\n}\n"},"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20PermitUpgradeable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (token/ERC20/extensions/ERC20Permit.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20Permit} from \"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\";\nimport {ERC20Upgradeable} from \"../ERC20Upgradeable.sol\";\nimport {ECDSA} from \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\";\nimport {EIP712Upgradeable} from \"../../../utils/cryptography/EIP712Upgradeable.sol\";\nimport {NoncesUpgradeable} from \"../../../utils/NoncesUpgradeable.sol\";\nimport {Initializable} from \"../../../proxy/utils/Initializable.sol\";\n\n/**\n * @dev Implementation of the ERC-20 Permit extension allowing approvals to be made via signatures, as defined in\n * https://eips.ethereum.org/EIPS/eip-2612[ERC-2612].\n *\n * Adds the {permit} method, which can be used to change an account's ERC-20 allowance (see {IERC20-allowance}) by\n * presenting a message signed by the account. By not relying on `{IERC20-approve}`, the token holder account doesn't\n * need to send a transaction, and thus is not required to hold Ether at all.\n */\nabstract contract ERC20PermitUpgradeable is Initializable, ERC20Upgradeable, IERC20Permit, EIP712Upgradeable, NoncesUpgradeable {\n    bytes32 private constant PERMIT_TYPEHASH =\n        keccak256(\"Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)\");\n\n    /**\n     * @dev Permit deadline has expired.\n     */\n    error ERC2612ExpiredSignature(uint256 deadline);\n\n    /**\n     * @dev Mismatched signature.\n     */\n    error ERC2612InvalidSigner(address signer, address owner);\n\n    /**\n     * @dev Initializes the {EIP712} domain separator using the `name` parameter, and setting `version` to `\"1\"`.\n     *\n     * It's a good idea to use the same `name` that is defined as the ERC-20 token name.\n     */\n    function __ERC20Permit_init(string memory name) internal onlyInitializing {\n        __EIP712_init_unchained(name, \"1\");\n    }\n\n    function __ERC20Permit_init_unchained(string memory) internal onlyInitializing {}\n\n    /// @inheritdoc IERC20Permit\n    function permit(\n        address owner,\n        address spender,\n        uint256 value,\n        uint256 deadline,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) public virtual {\n        if (block.timestamp > deadline) {\n            revert ERC2612ExpiredSignature(deadline);\n        }\n\n        bytes32 structHash = keccak256(abi.encode(PERMIT_TYPEHASH, owner, spender, value, _useNonce(owner), deadline));\n\n        bytes32 hash = _hashTypedDataV4(structHash);\n\n        address signer = ECDSA.recover(hash, v, r, s);\n        if (signer != owner) {\n            revert ERC2612InvalidSigner(signer, owner);\n        }\n\n        _approve(owner, spender, value);\n    }\n\n    /// @inheritdoc IERC20Permit\n    function nonces(address owner) public view virtual override(IERC20Permit, NoncesUpgradeable) returns (uint256) {\n        return super.nonces(owner);\n    }\n\n    /// @inheritdoc IERC20Permit\n    // solhint-disable-next-line func-name-mixedcase\n    function DOMAIN_SEPARATOR() external view virtual returns (bytes32) {\n        return _domainSeparatorV4();\n    }\n}\n"},"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\nimport {Initializable} from \"../proxy/utils/Initializable.sol\";\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract ContextUpgradeable is Initializable {\n    function __Context_init() internal onlyInitializing {\n    }\n\n    function __Context_init_unchained() internal onlyInitializing {\n    }\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"},"@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (utils/cryptography/EIP712.sol)\n\npragma solidity ^0.8.20;\n\nimport {MessageHashUtils} from \"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol\";\nimport {IERC5267} from \"@openzeppelin/contracts/interfaces/IERC5267.sol\";\nimport {Initializable} from \"../../proxy/utils/Initializable.sol\";\n\n/**\n * @dev https://eips.ethereum.org/EIPS/eip-712[EIP-712] is a standard for hashing and signing of typed structured data.\n *\n * The encoding scheme specified in the EIP requires a domain separator and a hash of the typed structured data, whose\n * encoding is very generic and therefore its implementation in Solidity is not feasible, thus this contract\n * does not implement the encoding itself. Protocols need to implement the type-specific encoding they need in order to\n * produce the hash of their typed data using a combination of `abi.encode` and `keccak256`.\n *\n * This contract implements the EIP-712 domain separator ({_domainSeparatorV4}) that is used as part of the encoding\n * scheme, and the final step of the encoding to obtain the message digest that is then signed via ECDSA\n * ({_hashTypedDataV4}).\n *\n * The implementation of the domain separator was designed to be as efficient as possible while still properly updating\n * the chain id to protect against replay attacks on an eventual fork of the chain.\n *\n * NOTE: This contract implements the version of the encoding known as \"v4\", as implemented by the JSON RPC method\n * https://docs.metamask.io/guide/signing-data.html[`eth_signTypedDataV4` in MetaMask].\n *\n * NOTE: The upgradeable version of this contract does not use an immutable cache and recomputes the domain separator\n * each time {_domainSeparatorV4} is called. That is cheaper than accessing a cached version in cold storage.\n */\nabstract contract EIP712Upgradeable is Initializable, IERC5267 {\n    bytes32 private constant TYPE_HASH =\n        keccak256(\"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\");\n\n    /// @custom:storage-location erc7201:openzeppelin.storage.EIP712\n    struct EIP712Storage {\n        /// @custom:oz-renamed-from _HASHED_NAME\n        bytes32 _hashedName;\n        /// @custom:oz-renamed-from _HASHED_VERSION\n        bytes32 _hashedVersion;\n\n        string _name;\n        string _version;\n    }\n\n    // keccak256(abi.encode(uint256(keccak256(\"openzeppelin.storage.EIP712\")) - 1)) & ~bytes32(uint256(0xff))\n    bytes32 private constant EIP712StorageLocation = 0xa16a46d94261c7517cc8ff89f61c0ce93598e3c849801011dee649a6a557d100;\n\n    function _getEIP712Storage() private pure returns (EIP712Storage storage $) {\n        assembly {\n            $.slot := EIP712StorageLocation\n        }\n    }\n\n    /**\n     * @dev Initializes the domain separator and parameter caches.\n     *\n     * The meaning of `name` and `version` is specified in\n     * https://eips.ethereum.org/EIPS/eip-712#definition-of-domainseparator[EIP-712]:\n     *\n     * - `name`: the user readable name of the signing domain, i.e. the name of the DApp or the protocol.\n     * - `version`: the current major version of the signing domain.\n     *\n     * NOTE: These parameters cannot be changed except through a xref:learn::upgrading-smart-contracts.adoc[smart\n     * contract upgrade].\n     */\n    function __EIP712_init(string memory name, string memory version) internal onlyInitializing {\n        __EIP712_init_unchained(name, version);\n    }\n\n    function __EIP712_init_unchained(string memory name, string memory version) internal onlyInitializing {\n        EIP712Storage storage $ = _getEIP712Storage();\n        $._name = name;\n        $._version = version;\n\n        // Reset prior values in storage if upgrading\n        $._hashedName = 0;\n        $._hashedVersion = 0;\n    }\n\n    /**\n     * @dev Returns the domain separator for the current chain.\n     */\n    function _domainSeparatorV4() internal view returns (bytes32) {\n        return _buildDomainSeparator();\n    }\n\n    function _buildDomainSeparator() private view returns (bytes32) {\n        return keccak256(abi.encode(TYPE_HASH, _EIP712NameHash(), _EIP712VersionHash(), block.chainid, address(this)));\n    }\n\n    /**\n     * @dev Given an already https://eips.ethereum.org/EIPS/eip-712#definition-of-hashstruct[hashed struct], this\n     * function returns the hash of the fully encoded EIP712 message for this domain.\n     *\n     * This hash can be used together with {ECDSA-recover} to obtain the signer of a message. For example:\n     *\n     * ```solidity\n     * bytes32 digest = _hashTypedDataV4(keccak256(abi.encode(\n     *     keccak256(\"Mail(address to,string contents)\"),\n     *     mailTo,\n     *     keccak256(bytes(mailContents))\n     * )));\n     * address signer = ECDSA.recover(digest, signature);\n     * ```\n     */\n    function _hashTypedDataV4(bytes32 structHash) internal view virtual returns (bytes32) {\n        return MessageHashUtils.toTypedDataHash(_domainSeparatorV4(), structHash);\n    }\n\n    /// @inheritdoc IERC5267\n    function eip712Domain()\n        public\n        view\n        virtual\n        returns (\n            bytes1 fields,\n            string memory name,\n            string memory version,\n            uint256 chainId,\n            address verifyingContract,\n            bytes32 salt,\n            uint256[] memory extensions\n        )\n    {\n        EIP712Storage storage $ = _getEIP712Storage();\n        // If the hashed name and version in storage are non-zero, the contract hasn't been properly initialized\n        // and the EIP712 domain is not reliable, as it will be missing name and version.\n        require($._hashedName == 0 && $._hashedVersion == 0, \"EIP712: Uninitialized\");\n\n        return (\n            hex\"0f\", // 01111\n            _EIP712Name(),\n            _EIP712Version(),\n            block.chainid,\n            address(this),\n            bytes32(0),\n            new uint256[](0)\n        );\n    }\n\n    /**\n     * @dev The name parameter for the EIP712 domain.\n     *\n     * NOTE: This function reads from storage by default, but can be redefined to return a constant value if gas costs\n     * are a concern.\n     */\n    function _EIP712Name() internal view virtual returns (string memory) {\n        EIP712Storage storage $ = _getEIP712Storage();\n        return $._name;\n    }\n\n    /**\n     * @dev The version parameter for the EIP712 domain.\n     *\n     * NOTE: This function reads from storage by default, but can be redefined to return a constant value if gas costs\n     * are a concern.\n     */\n    function _EIP712Version() internal view virtual returns (string memory) {\n        EIP712Storage storage $ = _getEIP712Storage();\n        return $._version;\n    }\n\n    /**\n     * @dev The hash of the name parameter for the EIP712 domain.\n     *\n     * NOTE: In previous versions this function was virtual. In this version you should override `_EIP712Name` instead.\n     */\n    function _EIP712NameHash() internal view returns (bytes32) {\n        EIP712Storage storage $ = _getEIP712Storage();\n        string memory name = _EIP712Name();\n        if (bytes(name).length > 0) {\n            return keccak256(bytes(name));\n        } else {\n            // If the name is empty, the contract may have been upgraded without initializing the new storage.\n            // We return the name hash in storage if non-zero, otherwise we assume the name is empty by design.\n            bytes32 hashedName = $._hashedName;\n            if (hashedName != 0) {\n                return hashedName;\n            } else {\n                return keccak256(\"\");\n            }\n        }\n    }\n\n    /**\n     * @dev The hash of the version parameter for the EIP712 domain.\n     *\n     * NOTE: In previous versions this function was virtual. In this version you should override `_EIP712Version` instead.\n     */\n    function _EIP712VersionHash() internal view returns (bytes32) {\n        EIP712Storage storage $ = _getEIP712Storage();\n        string memory version = _EIP712Version();\n        if (bytes(version).length > 0) {\n            return keccak256(bytes(version));\n        } else {\n            // If the version is empty, the contract may have been upgraded without initializing the new storage.\n            // We return the version hash in storage if non-zero, otherwise we assume the version is empty by design.\n            bytes32 hashedVersion = $._hashedVersion;\n            if (hashedVersion != 0) {\n                return hashedVersion;\n            } else {\n                return keccak256(\"\");\n            }\n        }\n    }\n}\n"},"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (utils/introspection/ERC165.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC165} from \"@openzeppelin/contracts/utils/introspection/IERC165.sol\";\nimport {Initializable} from \"../../proxy/utils/Initializable.sol\";\n\n/**\n * @dev Implementation of the {IERC165} interface.\n *\n * Contracts that want to implement ERC-165 should inherit from this contract and override {supportsInterface} to check\n * for the additional interface id that will be supported. For example:\n *\n * ```solidity\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n * }\n * ```\n */\nabstract contract ERC165Upgradeable is Initializable, IERC165 {\n    function __ERC165_init() internal onlyInitializing {\n    }\n\n    function __ERC165_init_unchained() internal onlyInitializing {\n    }\n    /// @inheritdoc IERC165\n    function supportsInterface(bytes4 interfaceId) public view virtual returns (bool) {\n        return interfaceId == type(IERC165).interfaceId;\n    }\n}\n"},"@openzeppelin/contracts-upgradeable/utils/NoncesUpgradeable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/Nonces.sol)\npragma solidity ^0.8.20;\nimport {Initializable} from \"../proxy/utils/Initializable.sol\";\n\n/**\n * @dev Provides tracking nonces for addresses. Nonces will only increment.\n */\nabstract contract NoncesUpgradeable is Initializable {\n    /**\n     * @dev The nonce used for an `account` is not the expected current nonce.\n     */\n    error InvalidAccountNonce(address account, uint256 currentNonce);\n\n    /// @custom:storage-location erc7201:openzeppelin.storage.Nonces\n    struct NoncesStorage {\n        mapping(address account => uint256) _nonces;\n    }\n\n    // keccak256(abi.encode(uint256(keccak256(\"openzeppelin.storage.Nonces\")) - 1)) & ~bytes32(uint256(0xff))\n    bytes32 private constant NoncesStorageLocation = 0x5ab42ced628888259c08ac98db1eb0cf702fc1501344311d8b100cd1bfe4bb00;\n\n    function _getNoncesStorage() private pure returns (NoncesStorage storage $) {\n        assembly {\n            $.slot := NoncesStorageLocation\n        }\n    }\n\n    function __Nonces_init() internal onlyInitializing {\n    }\n\n    function __Nonces_init_unchained() internal onlyInitializing {\n    }\n    /**\n     * @dev Returns the next unused nonce for an address.\n     */\n    function nonces(address owner) public view virtual returns (uint256) {\n        NoncesStorage storage $ = _getNoncesStorage();\n        return $._nonces[owner];\n    }\n\n    /**\n     * @dev Consumes a nonce.\n     *\n     * Returns the current value and increments nonce.\n     */\n    function _useNonce(address owner) internal virtual returns (uint256) {\n        NoncesStorage storage $ = _getNoncesStorage();\n        // For each account, the nonce has an initial value of 0, can only be incremented by one, and cannot be\n        // decremented or reset. This guarantees that the nonce never overflows.\n        unchecked {\n            // It is important to do x++ and not ++x here.\n            return $._nonces[owner]++;\n        }\n    }\n\n    /**\n     * @dev Same as {_useNonce} but checking that `nonce` is the next valid for `owner`.\n     */\n    function _useCheckedNonce(address owner, uint256 nonce) internal virtual {\n        uint256 current = _useNonce(owner);\n        if (nonce != current) {\n            revert InvalidAccountNonce(owner, current);\n        }\n    }\n}\n"},"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.3.0) (utils/Pausable.sol)\n\npragma solidity ^0.8.20;\n\nimport {ContextUpgradeable} from \"../utils/ContextUpgradeable.sol\";\nimport {Initializable} from \"../proxy/utils/Initializable.sol\";\n\n/**\n * @dev Contract module which allows children to implement an emergency stop\n * mechanism that can be triggered by an authorized account.\n *\n * This module is used through inheritance. It will make available the\n * modifiers `whenNotPaused` and `whenPaused`, which can be applied to\n * the functions of your contract. Note that they will not be pausable by\n * simply including this module, only once the modifiers are put in place.\n */\nabstract contract PausableUpgradeable is Initializable, ContextUpgradeable {\n    /// @custom:storage-location erc7201:openzeppelin.storage.Pausable\n    struct PausableStorage {\n        bool _paused;\n    }\n\n    // keccak256(abi.encode(uint256(keccak256(\"openzeppelin.storage.Pausable\")) - 1)) & ~bytes32(uint256(0xff))\n    bytes32 private constant PausableStorageLocation = 0xcd5ed15c6e187e77e9aee88184c21f4f2182ab5827cb3b7e07fbedcd63f03300;\n\n    function _getPausableStorage() private pure returns (PausableStorage storage $) {\n        assembly {\n            $.slot := PausableStorageLocation\n        }\n    }\n\n    /**\n     * @dev Emitted when the pause is triggered by `account`.\n     */\n    event Paused(address account);\n\n    /**\n     * @dev Emitted when the pause is lifted by `account`.\n     */\n    event Unpaused(address account);\n\n    /**\n     * @dev The operation failed because the contract is paused.\n     */\n    error EnforcedPause();\n\n    /**\n     * @dev The operation failed because the contract is not paused.\n     */\n    error ExpectedPause();\n\n    /**\n     * @dev Modifier to make a function callable only when the contract is not paused.\n     *\n     * Requirements:\n     *\n     * - The contract must not be paused.\n     */\n    modifier whenNotPaused() {\n        _requireNotPaused();\n        _;\n    }\n\n    /**\n     * @dev Modifier to make a function callable only when the contract is paused.\n     *\n     * Requirements:\n     *\n     * - The contract must be paused.\n     */\n    modifier whenPaused() {\n        _requirePaused();\n        _;\n    }\n\n    function __Pausable_init() internal onlyInitializing {\n    }\n\n    function __Pausable_init_unchained() internal onlyInitializing {\n    }\n    /**\n     * @dev Returns true if the contract is paused, and false otherwise.\n     */\n    function paused() public view virtual returns (bool) {\n        PausableStorage storage $ = _getPausableStorage();\n        return $._paused;\n    }\n\n    /**\n     * @dev Throws if the contract is paused.\n     */\n    function _requireNotPaused() internal view virtual {\n        if (paused()) {\n            revert EnforcedPause();\n        }\n    }\n\n    /**\n     * @dev Throws if the contract is not paused.\n     */\n    function _requirePaused() internal view virtual {\n        if (!paused()) {\n            revert ExpectedPause();\n        }\n    }\n\n    /**\n     * @dev Triggers stopped state.\n     *\n     * Requirements:\n     *\n     * - The contract must not be paused.\n     */\n    function _pause() internal virtual whenNotPaused {\n        PausableStorage storage $ = _getPausableStorage();\n        $._paused = true;\n        emit Paused(_msgSender());\n    }\n\n    /**\n     * @dev Returns to normal state.\n     *\n     * Requirements:\n     *\n     * - The contract must be paused.\n     */\n    function _unpause() internal virtual whenPaused {\n        PausableStorage storage $ = _getPausableStorage();\n        $._paused = false;\n        emit Unpaused(_msgSender());\n    }\n}\n"},"@openzeppelin/contracts/access/IAccessControl.sol":{"content":"// SPDX-License-Identifier: MIT\r\n// OpenZeppelin Contracts (last updated v5.3.0) (access/IAccessControl.sol)\r\n\r\npragma solidity ^0.8.20;\r\n\r\n/**\r\n * @dev External interface of AccessControl declared to support ERC-165 detection.\r\n */\r\ninterface IAccessControl {\r\n    /**\r\n     * @dev The `account` is missing a role.\r\n     */\r\n    error AccessControlUnauthorizedAccount(address account, bytes32 neededRole);\r\n\r\n    /**\r\n     * @dev The caller of a function is not the expected one.\r\n     *\r\n     * NOTE: Don't confuse with {AccessControlUnauthorizedAccount}.\r\n     */\r\n    error AccessControlBadConfirmation();\r\n\r\n    /**\r\n     * @dev Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole`\r\n     *\r\n     * `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite\r\n     * {RoleAdminChanged} not being emitted to signal this.\r\n     */\r\n    event RoleAdminChanged(bytes32 indexed role, bytes32 indexed previousAdminRole, bytes32 indexed newAdminRole);\r\n\r\n    /**\r\n     * @dev Emitted when `account` is granted `role`.\r\n     *\r\n     * `sender` is the account that originated the contract call. This account bears the admin role (for the granted role).\r\n     * Expected in cases where the role was granted using the internal {AccessControl-_grantRole}.\r\n     */\r\n    event RoleGranted(bytes32 indexed role, address indexed account, address indexed sender);\r\n\r\n    /**\r\n     * @dev Emitted when `account` is revoked `role`.\r\n     *\r\n     * `sender` is the account that originated the contract call:\r\n     *   - if using `revokeRole`, it is the admin role bearer\r\n     *   - if using `renounceRole`, it is the role bearer (i.e. `account`)\r\n     */\r\n    event RoleRevoked(bytes32 indexed role, address indexed account, address indexed sender);\r\n\r\n    /**\r\n     * @dev Returns `true` if `account` has been granted `role`.\r\n     */\r\n    function hasRole(bytes32 role, address account) external view returns (bool);\r\n\r\n    /**\r\n     * @dev Returns the admin role that controls `role`. See {grantRole} and\r\n     * {revokeRole}.\r\n     *\r\n     * To change a role's admin, use {AccessControl-_setRoleAdmin}.\r\n     */\r\n    function getRoleAdmin(bytes32 role) external view returns (bytes32);\r\n\r\n    /**\r\n     * @dev Grants `role` to `account`.\r\n     *\r\n     * If `account` had not been already granted `role`, emits a {RoleGranted}\r\n     * event.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - the caller must have ``role``'s admin role.\r\n     */\r\n    function grantRole(bytes32 role, address account) external;\r\n\r\n    /**\r\n     * @dev Revokes `role` from `account`.\r\n     *\r\n     * If `account` had been granted `role`, emits a {RoleRevoked} event.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - the caller must have ``role``'s admin role.\r\n     */\r\n    function revokeRole(bytes32 role, address account) external;\r\n\r\n    /**\r\n     * @dev Revokes `role` from the calling account.\r\n     *\r\n     * Roles are often managed via {grantRole} and {revokeRole}: this function's\r\n     * purpose is to provide a mechanism for accounts to lose their privileges\r\n     * if they are compromised (such as when a trusted device is misplaced).\r\n     *\r\n     * If the calling account had been granted `role`, emits a {RoleRevoked}\r\n     * event.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - the caller must be `callerConfirmation`.\r\n     */\r\n    function renounceRole(bytes32 role, address callerConfirmation) external;\r\n}\r\n"},"@openzeppelin/contracts/interfaces/draft-IERC1822.sol":{"content":"// SPDX-License-Identifier: MIT\r\n// OpenZeppelin Contracts (last updated v5.1.0) (interfaces/draft-IERC1822.sol)\r\n\r\npragma solidity ^0.8.20;\r\n\r\n/**\r\n * @dev ERC-1822: Universal Upgradeable Proxy Standard (UUPS) documents a method for upgradeability through a simplified\r\n * proxy whose upgrades are fully controlled by the current implementation.\r\n */\r\ninterface IERC1822Proxiable {\r\n    /**\r\n     * @dev Returns the storage slot that the proxiable contract assumes is being used to store the implementation\r\n     * address.\r\n     *\r\n     * IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks\r\n     * bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this\r\n     * function revert if invoked through a proxy.\r\n     */\r\n    function proxiableUUID() external view returns (bytes32);\r\n}\r\n"},"@openzeppelin/contracts/interfaces/draft-IERC6093.sol":{"content":"// SPDX-License-Identifier: MIT\r\n// OpenZeppelin Contracts (last updated v5.1.0) (interfaces/draft-IERC6093.sol)\r\npragma solidity ^0.8.20;\r\n\r\n/**\r\n * @dev Standard ERC-20 Errors\r\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.\r\n */\r\ninterface IERC20Errors {\r\n    /**\r\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\r\n     * @param sender Address whose tokens are being transferred.\r\n     * @param balance Current balance for the interacting account.\r\n     * @param needed Minimum amount required to perform a transfer.\r\n     */\r\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\r\n\r\n    /**\r\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\r\n     * @param sender Address whose tokens are being transferred.\r\n     */\r\n    error ERC20InvalidSender(address sender);\r\n\r\n    /**\r\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\r\n     * @param receiver Address to which tokens are being transferred.\r\n     */\r\n    error ERC20InvalidReceiver(address receiver);\r\n\r\n    /**\r\n     * @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\r\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\r\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\r\n     * @param needed Minimum amount required to perform a transfer.\r\n     */\r\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\r\n\r\n    /**\r\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\r\n     * @param approver Address initiating an approval operation.\r\n     */\r\n    error ERC20InvalidApprover(address approver);\r\n\r\n    /**\r\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\r\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\r\n     */\r\n    error ERC20InvalidSpender(address spender);\r\n}\r\n\r\n/**\r\n * @dev Standard ERC-721 Errors\r\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.\r\n */\r\ninterface IERC721Errors {\r\n    /**\r\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20.\r\n     * Used in balance queries.\r\n     * @param owner Address of the current owner of a token.\r\n     */\r\n    error ERC721InvalidOwner(address owner);\r\n\r\n    /**\r\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\r\n     * @param tokenId Identifier number of a token.\r\n     */\r\n    error ERC721NonexistentToken(uint256 tokenId);\r\n\r\n    /**\r\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\r\n     * @param sender Address whose tokens are being transferred.\r\n     * @param tokenId Identifier number of a token.\r\n     * @param owner Address of the current owner of a token.\r\n     */\r\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\r\n\r\n    /**\r\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\r\n     * @param sender Address whose tokens are being transferred.\r\n     */\r\n    error ERC721InvalidSender(address sender);\r\n\r\n    /**\r\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\r\n     * @param receiver Address to which tokens are being transferred.\r\n     */\r\n    error ERC721InvalidReceiver(address receiver);\r\n\r\n    /**\r\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\r\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\r\n     * @param tokenId Identifier number of a token.\r\n     */\r\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\r\n\r\n    /**\r\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\r\n     * @param approver Address initiating an approval operation.\r\n     */\r\n    error ERC721InvalidApprover(address approver);\r\n\r\n    /**\r\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\r\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\r\n     */\r\n    error ERC721InvalidOperator(address operator);\r\n}\r\n\r\n/**\r\n * @dev Standard ERC-1155 Errors\r\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.\r\n */\r\ninterface IERC1155Errors {\r\n    /**\r\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\r\n     * @param sender Address whose tokens are being transferred.\r\n     * @param balance Current balance for the interacting account.\r\n     * @param needed Minimum amount required to perform a transfer.\r\n     * @param tokenId Identifier number of a token.\r\n     */\r\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\r\n\r\n    /**\r\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\r\n     * @param sender Address whose tokens are being transferred.\r\n     */\r\n    error ERC1155InvalidSender(address sender);\r\n\r\n    /**\r\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\r\n     * @param receiver Address to which tokens are being transferred.\r\n     */\r\n    error ERC1155InvalidReceiver(address receiver);\r\n\r\n    /**\r\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\r\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\r\n     * @param owner Address of the current owner of a token.\r\n     */\r\n    error ERC1155MissingApprovalForAll(address operator, address owner);\r\n\r\n    /**\r\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\r\n     * @param approver Address initiating an approval operation.\r\n     */\r\n    error ERC1155InvalidApprover(address approver);\r\n\r\n    /**\r\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\r\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\r\n     */\r\n    error ERC1155InvalidOperator(address operator);\r\n\r\n    /**\r\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\r\n     * Used in batch transfers.\r\n     * @param idsLength Length of the array of token identifiers\r\n     * @param valuesLength Length of the array of token amounts\r\n     */\r\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\r\n}\r\n"},"@openzeppelin/contracts/interfaces/IERC1967.sol":{"content":"// SPDX-License-Identifier: MIT\r\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/IERC1967.sol)\r\n\r\npragma solidity ^0.8.20;\r\n\r\n/**\r\n * @dev ERC-1967: Proxy Storage Slots. This interface contains the events defined in the ERC.\r\n */\r\ninterface IERC1967 {\r\n    /**\r\n     * @dev Emitted when the implementation is upgraded.\r\n     */\r\n    event Upgraded(address indexed implementation);\r\n\r\n    /**\r\n     * @dev Emitted when the admin account has changed.\r\n     */\r\n    event AdminChanged(address previousAdmin, address newAdmin);\r\n\r\n    /**\r\n     * @dev Emitted when the beacon is changed.\r\n     */\r\n    event BeaconUpgraded(address indexed beacon);\r\n}\r\n"},"@openzeppelin/contracts/interfaces/IERC5267.sol":{"content":"// SPDX-License-Identifier: MIT\r\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/IERC5267.sol)\r\n\r\npragma solidity ^0.8.20;\r\n\r\ninterface IERC5267 {\r\n    /**\r\n     * @dev MAY be emitted to signal that the domain could have changed.\r\n     */\r\n    event EIP712DomainChanged();\r\n\r\n    /**\r\n     * @dev returns the fields and values that describe the domain separator used by this contract for EIP-712\r\n     * signature.\r\n     */\r\n    function eip712Domain()\r\n        external\r\n        view\r\n        returns (\r\n            bytes1 fields,\r\n            string memory name,\r\n            string memory version,\r\n            uint256 chainId,\r\n            address verifyingContract,\r\n            bytes32 salt,\r\n            uint256[] memory extensions\r\n        );\r\n}\r\n"},"@openzeppelin/contracts/proxy/beacon/IBeacon.sol":{"content":"// SPDX-License-Identifier: MIT\r\n// OpenZeppelin Contracts (last updated v5.0.0) (proxy/beacon/IBeacon.sol)\r\n\r\npragma solidity ^0.8.20;\r\n\r\n/**\r\n * @dev This is the interface that {BeaconProxy} expects of its beacon.\r\n */\r\ninterface IBeacon {\r\n    /**\r\n     * @dev Must return an address that can be used as a delegate call target.\r\n     *\r\n     * {UpgradeableBeacon} will check that this address is a contract.\r\n     */\r\n    function implementation() external view returns (address);\r\n}\r\n"},"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol":{"content":"// SPDX-License-Identifier: MIT\r\n// OpenZeppelin Contracts (last updated v5.2.0) (proxy/ERC1967/ERC1967Utils.sol)\r\n\r\npragma solidity ^0.8.22;\r\n\r\nimport {IBeacon} from \"../beacon/IBeacon.sol\";\r\nimport {IERC1967} from \"../../interfaces/IERC1967.sol\";\r\nimport {Address} from \"../../utils/Address.sol\";\r\nimport {StorageSlot} from \"../../utils/StorageSlot.sol\";\r\n\r\n/**\r\n * @dev This library provides getters and event emitting update functions for\r\n * https://eips.ethereum.org/EIPS/eip-1967[ERC-1967] slots.\r\n */\r\nlibrary ERC1967Utils {\r\n    /**\r\n     * @dev Storage slot with the address of the current implementation.\r\n     * This is the keccak-256 hash of \"eip1967.proxy.implementation\" subtracted by 1.\r\n     */\r\n    // solhint-disable-next-line private-vars-leading-underscore\r\n    bytes32 internal constant IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\r\n\r\n    /**\r\n     * @dev The `implementation` of the proxy is invalid.\r\n     */\r\n    error ERC1967InvalidImplementation(address implementation);\r\n\r\n    /**\r\n     * @dev The `admin` of the proxy is invalid.\r\n     */\r\n    error ERC1967InvalidAdmin(address admin);\r\n\r\n    /**\r\n     * @dev The `beacon` of the proxy is invalid.\r\n     */\r\n    error ERC1967InvalidBeacon(address beacon);\r\n\r\n    /**\r\n     * @dev An upgrade function sees `msg.value > 0` that may be lost.\r\n     */\r\n    error ERC1967NonPayable();\r\n\r\n    /**\r\n     * @dev Returns the current implementation address.\r\n     */\r\n    function getImplementation() internal view returns (address) {\r\n        return StorageSlot.getAddressSlot(IMPLEMENTATION_SLOT).value;\r\n    }\r\n\r\n    /**\r\n     * @dev Stores a new address in the ERC-1967 implementation slot.\r\n     */\r\n    function _setImplementation(address newImplementation) private {\r\n        if (newImplementation.code.length == 0) {\r\n            revert ERC1967InvalidImplementation(newImplementation);\r\n        }\r\n        StorageSlot.getAddressSlot(IMPLEMENTATION_SLOT).value = newImplementation;\r\n    }\r\n\r\n    /**\r\n     * @dev Performs implementation upgrade with additional setup call if data is nonempty.\r\n     * This function is payable only if the setup call is performed, otherwise `msg.value` is rejected\r\n     * to avoid stuck value in the contract.\r\n     *\r\n     * Emits an {IERC1967-Upgraded} event.\r\n     */\r\n    function upgradeToAndCall(address newImplementation, bytes memory data) internal {\r\n        _setImplementation(newImplementation);\r\n        emit IERC1967.Upgraded(newImplementation);\r\n\r\n        if (data.length > 0) {\r\n            Address.functionDelegateCall(newImplementation, data);\r\n        } else {\r\n            _checkNonPayable();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Storage slot with the admin of the contract.\r\n     * This is the keccak-256 hash of \"eip1967.proxy.admin\" subtracted by 1.\r\n     */\r\n    // solhint-disable-next-line private-vars-leading-underscore\r\n    bytes32 internal constant ADMIN_SLOT = 0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103;\r\n\r\n    /**\r\n     * @dev Returns the current admin.\r\n     *\r\n     * TIP: To get this value clients can read directly from the storage slot shown below (specified by ERC-1967) using\r\n     * the https://eth.wiki/json-rpc/API#eth_getstorageat[`eth_getStorageAt`] RPC call.\r\n     * `0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103`\r\n     */\r\n    function getAdmin() internal view returns (address) {\r\n        return StorageSlot.getAddressSlot(ADMIN_SLOT).value;\r\n    }\r\n\r\n    /**\r\n     * @dev Stores a new address in the ERC-1967 admin slot.\r\n     */\r\n    function _setAdmin(address newAdmin) private {\r\n        if (newAdmin == address(0)) {\r\n            revert ERC1967InvalidAdmin(address(0));\r\n        }\r\n        StorageSlot.getAddressSlot(ADMIN_SLOT).value = newAdmin;\r\n    }\r\n\r\n    /**\r\n     * @dev Changes the admin of the proxy.\r\n     *\r\n     * Emits an {IERC1967-AdminChanged} event.\r\n     */\r\n    function changeAdmin(address newAdmin) internal {\r\n        emit IERC1967.AdminChanged(getAdmin(), newAdmin);\r\n        _setAdmin(newAdmin);\r\n    }\r\n\r\n    /**\r\n     * @dev The storage slot of the UpgradeableBeacon contract which defines the implementation for this proxy.\r\n     * This is the keccak-256 hash of \"eip1967.proxy.beacon\" subtracted by 1.\r\n     */\r\n    // solhint-disable-next-line private-vars-leading-underscore\r\n    bytes32 internal constant BEACON_SLOT = 0xa3f0ad74e5423aebfd80d3ef4346578335a9a72aeaee59ff6cb3582b35133d50;\r\n\r\n    /**\r\n     * @dev Returns the current beacon.\r\n     */\r\n    function getBeacon() internal view returns (address) {\r\n        return StorageSlot.getAddressSlot(BEACON_SLOT).value;\r\n    }\r\n\r\n    /**\r\n     * @dev Stores a new beacon in the ERC-1967 beacon slot.\r\n     */\r\n    function _setBeacon(address newBeacon) private {\r\n        if (newBeacon.code.length == 0) {\r\n            revert ERC1967InvalidBeacon(newBeacon);\r\n        }\r\n\r\n        StorageSlot.getAddressSlot(BEACON_SLOT).value = newBeacon;\r\n\r\n        address beaconImplementation = IBeacon(newBeacon).implementation();\r\n        if (beaconImplementation.code.length == 0) {\r\n            revert ERC1967InvalidImplementation(beaconImplementation);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Change the beacon and trigger a setup call if data is nonempty.\r\n     * This function is payable only if the setup call is performed, otherwise `msg.value` is rejected\r\n     * to avoid stuck value in the contract.\r\n     *\r\n     * Emits an {IERC1967-BeaconUpgraded} event.\r\n     *\r\n     * CAUTION: Invoking this function has no effect on an instance of {BeaconProxy} since v5, since\r\n     * it uses an immutable beacon without looking at the value of the ERC-1967 beacon slot for\r\n     * efficiency.\r\n     */\r\n    function upgradeBeaconToAndCall(address newBeacon, bytes memory data) internal {\r\n        _setBeacon(newBeacon);\r\n        emit IERC1967.BeaconUpgraded(newBeacon);\r\n\r\n        if (data.length > 0) {\r\n            Address.functionDelegateCall(IBeacon(newBeacon).implementation(), data);\r\n        } else {\r\n            _checkNonPayable();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Reverts if `msg.value` is not zero. It can be used to avoid `msg.value` stuck in the contract\r\n     * if an upgrade doesn't perform an initialization call.\r\n     */\r\n    function _checkNonPayable() private {\r\n        if (msg.value > 0) {\r\n            revert ERC1967NonPayable();\r\n        }\r\n    }\r\n}\r\n"},"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol":{"content":"// SPDX-License-Identifier: MIT\r\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/extensions/IERC20Metadata.sol)\r\n\r\npragma solidity ^0.8.20;\r\n\r\nimport {IERC20} from \"../IERC20.sol\";\r\n\r\n/**\r\n * @dev Interface for the optional metadata functions from the ERC-20 standard.\r\n */\r\ninterface IERC20Metadata is IERC20 {\r\n    /**\r\n     * @dev Returns the name of the token.\r\n     */\r\n    function name() external view returns (string memory);\r\n\r\n    /**\r\n     * @dev Returns the symbol of the token.\r\n     */\r\n    function symbol() external view returns (string memory);\r\n\r\n    /**\r\n     * @dev Returns the decimals places of the token.\r\n     */\r\n    function decimals() external view returns (uint8);\r\n}\r\n"},"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol":{"content":"// SPDX-License-Identifier: MIT\r\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/extensions/IERC20Permit.sol)\r\n\r\npragma solidity ^0.8.20;\r\n\r\n/**\r\n * @dev Interface of the ERC-20 Permit extension allowing approvals to be made via signatures, as defined in\r\n * https://eips.ethereum.org/EIPS/eip-2612[ERC-2612].\r\n *\r\n * Adds the {permit} method, which can be used to change an account's ERC-20 allowance (see {IERC20-allowance}) by\r\n * presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't\r\n * need to send a transaction, and thus is not required to hold Ether at all.\r\n *\r\n * ==== Security Considerations\r\n *\r\n * There are two important considerations concerning the use of `permit`. The first is that a valid permit signature\r\n * expresses an allowance, and it should not be assumed to convey additional meaning. In particular, it should not be\r\n * considered as an intention to spend the allowance in any specific way. The second is that because permits have\r\n * built-in replay protection and can be submitted by anyone, they can be frontrun. A protocol that uses permits should\r\n * take this into consideration and allow a `permit` call to fail. Combining these two aspects, a pattern that may be\r\n * generally recommended is:\r\n *\r\n * ```solidity\r\n * function doThingWithPermit(..., uint256 value, uint256 deadline, uint8 v, bytes32 r, bytes32 s) public {\r\n *     try token.permit(msg.sender, address(this), value, deadline, v, r, s) {} catch {}\r\n *     doThing(..., value);\r\n * }\r\n *\r\n * function doThing(..., uint256 value) public {\r\n *     token.safeTransferFrom(msg.sender, address(this), value);\r\n *     ...\r\n * }\r\n * ```\r\n *\r\n * Observe that: 1) `msg.sender` is used as the owner, leaving no ambiguity as to the signer intent, and 2) the use of\r\n * `try/catch` allows the permit to fail and makes the code tolerant to frontrunning. (See also\r\n * {SafeERC20-safeTransferFrom}).\r\n *\r\n * Additionally, note that smart contract wallets (such as Argent or Safe) are not able to produce permit signatures, so\r\n * contracts should have entry points that don't rely on permit.\r\n */\r\ninterface IERC20Permit {\r\n    /**\r\n     * @dev Sets `value` as the allowance of `spender` over ``owner``'s tokens,\r\n     * given ``owner``'s signed approval.\r\n     *\r\n     * IMPORTANT: The same issues {IERC20-approve} has related to transaction\r\n     * ordering also apply here.\r\n     *\r\n     * Emits an {Approval} event.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `spender` cannot be the zero address.\r\n     * - `deadline` must be a timestamp in the future.\r\n     * - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner`\r\n     * over the EIP712-formatted function arguments.\r\n     * - the signature must use ``owner``'s current nonce (see {nonces}).\r\n     *\r\n     * For more information on the signature format, see the\r\n     * https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP\r\n     * section].\r\n     *\r\n     * CAUTION: See Security Considerations above.\r\n     */\r\n    function permit(\r\n        address owner,\r\n        address spender,\r\n        uint256 value,\r\n        uint256 deadline,\r\n        uint8 v,\r\n        bytes32 r,\r\n        bytes32 s\r\n    ) external;\r\n\r\n    /**\r\n     * @dev Returns the current nonce for `owner`. This value must be\r\n     * included whenever a signature is generated for {permit}.\r\n     *\r\n     * Every successful call to {permit} increases ``owner``'s nonce by one. This\r\n     * prevents a signature from being used multiple times.\r\n     */\r\n    function nonces(address owner) external view returns (uint256);\r\n\r\n    /**\r\n     * @dev Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\r\n     */\r\n    // solhint-disable-next-line func-name-mixedcase\r\n    function DOMAIN_SEPARATOR() external view returns (bytes32);\r\n}\r\n"},"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"content":"// SPDX-License-Identifier: MIT\r\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/IERC20.sol)\r\n\r\npragma solidity ^0.8.20;\r\n\r\n/**\r\n * @dev Interface of the ERC-20 standard as defined in the ERC.\r\n */\r\ninterface IERC20 {\r\n    /**\r\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\r\n     * another (`to`).\r\n     *\r\n     * Note that `value` may be zero.\r\n     */\r\n    event Transfer(address indexed from, address indexed to, uint256 value);\r\n\r\n    /**\r\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\r\n     * a call to {approve}. `value` is the new allowance.\r\n     */\r\n    event Approval(address indexed owner, address indexed spender, uint256 value);\r\n\r\n    /**\r\n     * @dev Returns the value of tokens in existence.\r\n     */\r\n    function totalSupply() external view returns (uint256);\r\n\r\n    /**\r\n     * @dev Returns the value of tokens owned by `account`.\r\n     */\r\n    function balanceOf(address account) external view returns (uint256);\r\n\r\n    /**\r\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\r\n     *\r\n     * Returns a boolean value indicating whether the operation succeeded.\r\n     *\r\n     * Emits a {Transfer} event.\r\n     */\r\n    function transfer(address to, uint256 value) external returns (bool);\r\n\r\n    /**\r\n     * @dev Returns the remaining number of tokens that `spender` will be\r\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\r\n     * zero by default.\r\n     *\r\n     * This value changes when {approve} or {transferFrom} are called.\r\n     */\r\n    function allowance(address owner, address spender) external view returns (uint256);\r\n\r\n    /**\r\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\r\n     * caller's tokens.\r\n     *\r\n     * Returns a boolean value indicating whether the operation succeeded.\r\n     *\r\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\r\n     * that someone may use both the old and the new allowance by unfortunate\r\n     * transaction ordering. One possible solution to mitigate this race\r\n     * condition is to first reduce the spender's allowance to 0 and set the\r\n     * desired value afterwards:\r\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\r\n     *\r\n     * Emits an {Approval} event.\r\n     */\r\n    function approve(address spender, uint256 value) external returns (bool);\r\n\r\n    /**\r\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\r\n     * allowance mechanism. `value` is then deducted from the caller's\r\n     * allowance.\r\n     *\r\n     * Returns a boolean value indicating whether the operation succeeded.\r\n     *\r\n     * Emits a {Transfer} event.\r\n     */\r\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\r\n}\r\n"},"@openzeppelin/contracts/utils/Address.sol":{"content":"// SPDX-License-Identifier: MIT\r\n// OpenZeppelin Contracts (last updated v5.2.0) (utils/Address.sol)\r\n\r\npragma solidity ^0.8.20;\r\n\r\nimport {Errors} from \"./Errors.sol\";\r\n\r\n/**\r\n * @dev Collection of functions related to the address type\r\n */\r\nlibrary Address {\r\n    /**\r\n     * @dev There's no code at `target` (it is not a contract).\r\n     */\r\n    error AddressEmptyCode(address target);\r\n\r\n    /**\r\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\r\n     * `recipient`, forwarding all available gas and reverting on errors.\r\n     *\r\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\r\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\r\n     * imposed by `transfer`, making them unable to receive funds via\r\n     * `transfer`. {sendValue} removes this limitation.\r\n     *\r\n     * https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\r\n     *\r\n     * IMPORTANT: because control is transferred to `recipient`, care must be\r\n     * taken to not create reentrancy vulnerabilities. Consider using\r\n     * {ReentrancyGuard} or the\r\n     * https://solidity.readthedocs.io/en/v0.8.20/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\r\n     */\r\n    function sendValue(address payable recipient, uint256 amount) internal {\r\n        if (address(this).balance < amount) {\r\n            revert Errors.InsufficientBalance(address(this).balance, amount);\r\n        }\r\n\r\n        (bool success, bytes memory returndata) = recipient.call{value: amount}(\"\");\r\n        if (!success) {\r\n            _revert(returndata);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Performs a Solidity function call using a low level `call`. A\r\n     * plain `call` is an unsafe replacement for a function call: use this\r\n     * function instead.\r\n     *\r\n     * If `target` reverts with a revert reason or custom error, it is bubbled\r\n     * up by this function (like regular Solidity function calls). However, if\r\n     * the call reverted with no returned reason, this function reverts with a\r\n     * {Errors.FailedCall} error.\r\n     *\r\n     * Returns the raw returned data. To convert to the expected return value,\r\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `target` must be a contract.\r\n     * - calling `target` with `data` must not revert.\r\n     */\r\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\r\n        return functionCallWithValue(target, data, 0);\r\n    }\r\n\r\n    /**\r\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\r\n     * but also transferring `value` wei to `target`.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - the calling contract must have an ETH balance of at least `value`.\r\n     * - the called Solidity function must be `payable`.\r\n     */\r\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\r\n        if (address(this).balance < value) {\r\n            revert Errors.InsufficientBalance(address(this).balance, value);\r\n        }\r\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\r\n        return verifyCallResultFromTarget(target, success, returndata);\r\n    }\r\n\r\n    /**\r\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\r\n     * but performing a static call.\r\n     */\r\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\r\n        (bool success, bytes memory returndata) = target.staticcall(data);\r\n        return verifyCallResultFromTarget(target, success, returndata);\r\n    }\r\n\r\n    /**\r\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\r\n     * but performing a delegate call.\r\n     */\r\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\r\n        (bool success, bytes memory returndata) = target.delegatecall(data);\r\n        return verifyCallResultFromTarget(target, success, returndata);\r\n    }\r\n\r\n    /**\r\n     * @dev Tool to verify that a low level call to smart-contract was successful, and reverts if the target\r\n     * was not a contract or bubbling up the revert reason (falling back to {Errors.FailedCall}) in case\r\n     * of an unsuccessful call.\r\n     */\r\n    function verifyCallResultFromTarget(\r\n        address target,\r\n        bool success,\r\n        bytes memory returndata\r\n    ) internal view returns (bytes memory) {\r\n        if (!success) {\r\n            _revert(returndata);\r\n        } else {\r\n            // only check if target is a contract if the call was successful and the return data is empty\r\n            // otherwise we already know that it was a contract\r\n            if (returndata.length == 0 && target.code.length == 0) {\r\n                revert AddressEmptyCode(target);\r\n            }\r\n            return returndata;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Tool to verify that a low level call was successful, and reverts if it wasn't, either by bubbling the\r\n     * revert reason or with a default {Errors.FailedCall} error.\r\n     */\r\n    function verifyCallResult(bool success, bytes memory returndata) internal pure returns (bytes memory) {\r\n        if (!success) {\r\n            _revert(returndata);\r\n        } else {\r\n            return returndata;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Reverts with returndata if present. Otherwise reverts with {Errors.FailedCall}.\r\n     */\r\n    function _revert(bytes memory returndata) private pure {\r\n        // Look for revert reason and bubble it up if present\r\n        if (returndata.length > 0) {\r\n            // The easiest way to bubble the revert reason is using memory via assembly\r\n            assembly (\"memory-safe\") {\r\n                let returndata_size := mload(returndata)\r\n                revert(add(32, returndata), returndata_size)\r\n            }\r\n        } else {\r\n            revert Errors.FailedCall();\r\n        }\r\n    }\r\n}\r\n"},"@openzeppelin/contracts/utils/cryptography/ECDSA.sol":{"content":"// SPDX-License-Identifier: MIT\r\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/cryptography/ECDSA.sol)\r\n\r\npragma solidity ^0.8.20;\r\n\r\n/**\r\n * @dev Elliptic Curve Digital Signature Algorithm (ECDSA) operations.\r\n *\r\n * These functions can be used to verify that a message was signed by the holder\r\n * of the private keys of a given address.\r\n */\r\nlibrary ECDSA {\r\n    enum RecoverError {\r\n        NoError,\r\n        InvalidSignature,\r\n        InvalidSignatureLength,\r\n        InvalidSignatureS\r\n    }\r\n\r\n    /**\r\n     * @dev The signature derives the `address(0)`.\r\n     */\r\n    error ECDSAInvalidSignature();\r\n\r\n    /**\r\n     * @dev The signature has an invalid length.\r\n     */\r\n    error ECDSAInvalidSignatureLength(uint256 length);\r\n\r\n    /**\r\n     * @dev The signature has an S value that is in the upper half order.\r\n     */\r\n    error ECDSAInvalidSignatureS(bytes32 s);\r\n\r\n    /**\r\n     * @dev Returns the address that signed a hashed message (`hash`) with `signature` or an error. This will not\r\n     * return address(0) without also returning an error description. Errors are documented using an enum (error type)\r\n     * and a bytes32 providing additional information about the error.\r\n     *\r\n     * If no error is returned, then the address can be used for verification purposes.\r\n     *\r\n     * The `ecrecover` EVM precompile allows for malleable (non-unique) signatures:\r\n     * this function rejects them by requiring the `s` value to be in the lower\r\n     * half order, and the `v` value to be either 27 or 28.\r\n     *\r\n     * IMPORTANT: `hash` _must_ be the result of a hash operation for the\r\n     * verification to be secure: it is possible to craft signatures that\r\n     * recover to arbitrary addresses for non-hashed data. A safe way to ensure\r\n     * this is by receiving a hash of the original message (which may otherwise\r\n     * be too long), and then calling {MessageHashUtils-toEthSignedMessageHash} on it.\r\n     *\r\n     * Documentation for signature generation:\r\n     * - with https://web3js.readthedocs.io/en/v1.3.4/web3-eth-accounts.html#sign[Web3.js]\r\n     * - with https://docs.ethers.io/v5/api/signer/#Signer-signMessage[ethers]\r\n     */\r\n    function tryRecover(\r\n        bytes32 hash,\r\n        bytes memory signature\r\n    ) internal pure returns (address recovered, RecoverError err, bytes32 errArg) {\r\n        if (signature.length == 65) {\r\n            bytes32 r;\r\n            bytes32 s;\r\n            uint8 v;\r\n            // ecrecover takes the signature parameters, and the only way to get them\r\n            // currently is to use assembly.\r\n            assembly (\"memory-safe\") {\r\n                r := mload(add(signature, 0x20))\r\n                s := mload(add(signature, 0x40))\r\n                v := byte(0, mload(add(signature, 0x60)))\r\n            }\r\n            return tryRecover(hash, v, r, s);\r\n        } else {\r\n            return (address(0), RecoverError.InvalidSignatureLength, bytes32(signature.length));\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the address that signed a hashed message (`hash`) with\r\n     * `signature`. This address can then be used for verification purposes.\r\n     *\r\n     * The `ecrecover` EVM precompile allows for malleable (non-unique) signatures:\r\n     * this function rejects them by requiring the `s` value to be in the lower\r\n     * half order, and the `v` value to be either 27 or 28.\r\n     *\r\n     * IMPORTANT: `hash` _must_ be the result of a hash operation for the\r\n     * verification to be secure: it is possible to craft signatures that\r\n     * recover to arbitrary addresses for non-hashed data. A safe way to ensure\r\n     * this is by receiving a hash of the original message (which may otherwise\r\n     * be too long), and then calling {MessageHashUtils-toEthSignedMessageHash} on it.\r\n     */\r\n    function recover(bytes32 hash, bytes memory signature) internal pure returns (address) {\r\n        (address recovered, RecoverError error, bytes32 errorArg) = tryRecover(hash, signature);\r\n        _throwError(error, errorArg);\r\n        return recovered;\r\n    }\r\n\r\n    /**\r\n     * @dev Overload of {ECDSA-tryRecover} that receives the `r` and `vs` short-signature fields separately.\r\n     *\r\n     * See https://eips.ethereum.org/EIPS/eip-2098[ERC-2098 short signatures]\r\n     */\r\n    function tryRecover(\r\n        bytes32 hash,\r\n        bytes32 r,\r\n        bytes32 vs\r\n    ) internal pure returns (address recovered, RecoverError err, bytes32 errArg) {\r\n        unchecked {\r\n            bytes32 s = vs & bytes32(0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff);\r\n            // We do not check for an overflow here since the shift operation results in 0 or 1.\r\n            uint8 v = uint8((uint256(vs) >> 255) + 27);\r\n            return tryRecover(hash, v, r, s);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Overload of {ECDSA-recover} that receives the `r and `vs` short-signature fields separately.\r\n     */\r\n    function recover(bytes32 hash, bytes32 r, bytes32 vs) internal pure returns (address) {\r\n        (address recovered, RecoverError error, bytes32 errorArg) = tryRecover(hash, r, vs);\r\n        _throwError(error, errorArg);\r\n        return recovered;\r\n    }\r\n\r\n    /**\r\n     * @dev Overload of {ECDSA-tryRecover} that receives the `v`,\r\n     * `r` and `s` signature fields separately.\r\n     */\r\n    function tryRecover(\r\n        bytes32 hash,\r\n        uint8 v,\r\n        bytes32 r,\r\n        bytes32 s\r\n    ) internal pure returns (address recovered, RecoverError err, bytes32 errArg) {\r\n        // EIP-2 still allows signature malleability for ecrecover(). Remove this possibility and make the signature\r\n        // unique. Appendix F in the Ethereum Yellow paper (https://ethereum.github.io/yellowpaper/paper.pdf), defines\r\n        // the valid range for s in (301): 0 < s < secp256k1n ÷ 2 + 1, and for v in (302): v ∈ {27, 28}. Most\r\n        // signatures from current libraries generate a unique signature with an s-value in the lower half order.\r\n        //\r\n        // If your library generates malleable signatures, such as s-values in the upper range, calculate a new s-value\r\n        // with 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEBAAEDCE6AF48A03BBFD25E8CD0364141 - s1 and flip v from 27 to 28 or\r\n        // vice versa. If your library also generates signatures with 0/1 for v instead 27/28, add 27 to v to accept\r\n        // these malleable signatures as well.\r\n        if (uint256(s) > 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0) {\r\n            return (address(0), RecoverError.InvalidSignatureS, s);\r\n        }\r\n\r\n        // If the signature is valid (and not malleable), return the signer address\r\n        address signer = ecrecover(hash, v, r, s);\r\n        if (signer == address(0)) {\r\n            return (address(0), RecoverError.InvalidSignature, bytes32(0));\r\n        }\r\n\r\n        return (signer, RecoverError.NoError, bytes32(0));\r\n    }\r\n\r\n    /**\r\n     * @dev Overload of {ECDSA-recover} that receives the `v`,\r\n     * `r` and `s` signature fields separately.\r\n     */\r\n    function recover(bytes32 hash, uint8 v, bytes32 r, bytes32 s) internal pure returns (address) {\r\n        (address recovered, RecoverError error, bytes32 errorArg) = tryRecover(hash, v, r, s);\r\n        _throwError(error, errorArg);\r\n        return recovered;\r\n    }\r\n\r\n    /**\r\n     * @dev Optionally reverts with the corresponding custom error according to the `error` argument provided.\r\n     */\r\n    function _throwError(RecoverError error, bytes32 errorArg) private pure {\r\n        if (error == RecoverError.NoError) {\r\n            return; // no error: do nothing\r\n        } else if (error == RecoverError.InvalidSignature) {\r\n            revert ECDSAInvalidSignature();\r\n        } else if (error == RecoverError.InvalidSignatureLength) {\r\n            revert ECDSAInvalidSignatureLength(uint256(errorArg));\r\n        } else if (error == RecoverError.InvalidSignatureS) {\r\n            revert ECDSAInvalidSignatureS(errorArg);\r\n        }\r\n    }\r\n}\r\n"},"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol":{"content":"// SPDX-License-Identifier: MIT\r\n// OpenZeppelin Contracts (last updated v5.3.0) (utils/cryptography/MessageHashUtils.sol)\r\n\r\npragma solidity ^0.8.20;\r\n\r\nimport {Strings} from \"../Strings.sol\";\r\n\r\n/**\r\n * @dev Signature message hash utilities for producing digests to be consumed by {ECDSA} recovery or signing.\r\n *\r\n * The library provides methods for generating a hash of a message that conforms to the\r\n * https://eips.ethereum.org/EIPS/eip-191[ERC-191] and https://eips.ethereum.org/EIPS/eip-712[EIP 712]\r\n * specifications.\r\n */\r\nlibrary MessageHashUtils {\r\n    /**\r\n     * @dev Returns the keccak256 digest of an ERC-191 signed data with version\r\n     * `0x45` (`personal_sign` messages).\r\n     *\r\n     * The digest is calculated by prefixing a bytes32 `messageHash` with\r\n     * `\"\\x19Ethereum Signed Message:\\n32\"` and hashing the result. It corresponds with the\r\n     * hash signed when using the https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_sign[`eth_sign`] JSON-RPC method.\r\n     *\r\n     * NOTE: The `messageHash` parameter is intended to be the result of hashing a raw message with\r\n     * keccak256, although any bytes32 value can be safely used because the final digest will\r\n     * be re-hashed.\r\n     *\r\n     * See {ECDSA-recover}.\r\n     */\r\n    function toEthSignedMessageHash(bytes32 messageHash) internal pure returns (bytes32 digest) {\r\n        assembly (\"memory-safe\") {\r\n            mstore(0x00, \"\\x19Ethereum Signed Message:\\n32\") // 32 is the bytes-length of messageHash\r\n            mstore(0x1c, messageHash) // 0x1c (28) is the length of the prefix\r\n            digest := keccak256(0x00, 0x3c) // 0x3c is the length of the prefix (0x1c) + messageHash (0x20)\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the keccak256 digest of an ERC-191 signed data with version\r\n     * `0x45` (`personal_sign` messages).\r\n     *\r\n     * The digest is calculated by prefixing an arbitrary `message` with\r\n     * `\"\\x19Ethereum Signed Message:\\n\" + len(message)` and hashing the result. It corresponds with the\r\n     * hash signed when using the https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_sign[`eth_sign`] JSON-RPC method.\r\n     *\r\n     * See {ECDSA-recover}.\r\n     */\r\n    function toEthSignedMessageHash(bytes memory message) internal pure returns (bytes32) {\r\n        return\r\n            keccak256(bytes.concat(\"\\x19Ethereum Signed Message:\\n\", bytes(Strings.toString(message.length)), message));\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the keccak256 digest of an ERC-191 signed data with version\r\n     * `0x00` (data with intended validator).\r\n     *\r\n     * The digest is calculated by prefixing an arbitrary `data` with `\"\\x19\\x00\"` and the intended\r\n     * `validator` address. Then hashing the result.\r\n     *\r\n     * See {ECDSA-recover}.\r\n     */\r\n    function toDataWithIntendedValidatorHash(address validator, bytes memory data) internal pure returns (bytes32) {\r\n        return keccak256(abi.encodePacked(hex\"19_00\", validator, data));\r\n    }\r\n\r\n    /**\r\n     * @dev Variant of {toDataWithIntendedValidatorHash-address-bytes} optimized for cases where `data` is a bytes32.\r\n     */\r\n    function toDataWithIntendedValidatorHash(\r\n        address validator,\r\n        bytes32 messageHash\r\n    ) internal pure returns (bytes32 digest) {\r\n        assembly (\"memory-safe\") {\r\n            mstore(0x00, hex\"19_00\")\r\n            mstore(0x02, shl(96, validator))\r\n            mstore(0x16, messageHash)\r\n            digest := keccak256(0x00, 0x36)\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the keccak256 digest of an EIP-712 typed data (ERC-191 version `0x01`).\r\n     *\r\n     * The digest is calculated from a `domainSeparator` and a `structHash`, by prefixing them with\r\n     * `\\x19\\x01` and hashing the result. It corresponds to the hash signed by the\r\n     * https://eips.ethereum.org/EIPS/eip-712[`eth_signTypedData`] JSON-RPC method as part of EIP-712.\r\n     *\r\n     * See {ECDSA-recover}.\r\n     */\r\n    function toTypedDataHash(bytes32 domainSeparator, bytes32 structHash) internal pure returns (bytes32 digest) {\r\n        assembly (\"memory-safe\") {\r\n            let ptr := mload(0x40)\r\n            mstore(ptr, hex\"19_01\")\r\n            mstore(add(ptr, 0x02), domainSeparator)\r\n            mstore(add(ptr, 0x22), structHash)\r\n            digest := keccak256(ptr, 0x42)\r\n        }\r\n    }\r\n}\r\n"},"@openzeppelin/contracts/utils/Errors.sol":{"content":"// SPDX-License-Identifier: MIT\r\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/Errors.sol)\r\n\r\npragma solidity ^0.8.20;\r\n\r\n/**\r\n * @dev Collection of common custom errors used in multiple contracts\r\n *\r\n * IMPORTANT: Backwards compatibility is not guaranteed in future versions of the library.\r\n * It is recommended to avoid relying on the error API for critical functionality.\r\n *\r\n * _Available since v5.1._\r\n */\r\nlibrary Errors {\r\n    /**\r\n     * @dev The ETH balance of the account is not enough to perform the operation.\r\n     */\r\n    error InsufficientBalance(uint256 balance, uint256 needed);\r\n\r\n    /**\r\n     * @dev A call to an address target failed. The target may have reverted.\r\n     */\r\n    error FailedCall();\r\n\r\n    /**\r\n     * @dev The deployment failed.\r\n     */\r\n    error FailedDeployment();\r\n\r\n    /**\r\n     * @dev A necessary precompile is missing.\r\n     */\r\n    error MissingPrecompile(address);\r\n}\r\n"},"@openzeppelin/contracts/utils/introspection/IERC165.sol":{"content":"// SPDX-License-Identifier: MIT\r\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/introspection/IERC165.sol)\r\n\r\npragma solidity ^0.8.20;\r\n\r\n/**\r\n * @dev Interface of the ERC-165 standard, as defined in the\r\n * https://eips.ethereum.org/EIPS/eip-165[ERC].\r\n *\r\n * Implementers can declare support of contract interfaces, which can then be\r\n * queried by others ({ERC165Checker}).\r\n *\r\n * For an implementation, see {ERC165}.\r\n */\r\ninterface IERC165 {\r\n    /**\r\n     * @dev Returns true if this contract implements the interface defined by\r\n     * `interfaceId`. See the corresponding\r\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section]\r\n     * to learn more about how these ids are created.\r\n     *\r\n     * This function call must use less than 30 000 gas.\r\n     */\r\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\r\n}\r\n"},"@openzeppelin/contracts/utils/math/Math.sol":{"content":"// SPDX-License-Identifier: MIT\r\n// OpenZeppelin Contracts (last updated v5.3.0) (utils/math/Math.sol)\r\n\r\npragma solidity ^0.8.20;\r\n\r\nimport {Panic} from \"../Panic.sol\";\r\nimport {SafeCast} from \"./SafeCast.sol\";\r\n\r\n/**\r\n * @dev Standard math utilities missing in the Solidity language.\r\n */\r\nlibrary Math {\r\n    enum Rounding {\r\n        Floor, // Toward negative infinity\r\n        Ceil, // Toward positive infinity\r\n        Trunc, // Toward zero\r\n        Expand // Away from zero\r\n    }\r\n\r\n    /**\r\n     * @dev Return the 512-bit addition of two uint256.\r\n     *\r\n     * The result is stored in two 256 variables such that sum = high * 2²⁵⁶ + low.\r\n     */\r\n    function add512(uint256 a, uint256 b) internal pure returns (uint256 high, uint256 low) {\r\n        assembly (\"memory-safe\") {\r\n            low := add(a, b)\r\n            high := lt(low, a)\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Return the 512-bit multiplication of two uint256.\r\n     *\r\n     * The result is stored in two 256 variables such that product = high * 2²⁵⁶ + low.\r\n     */\r\n    function mul512(uint256 a, uint256 b) internal pure returns (uint256 high, uint256 low) {\r\n        // 512-bit multiply [high low] = x * y. Compute the product mod 2²⁵⁶ and mod 2²⁵⁶ - 1, then use\r\n        // the Chinese Remainder Theorem to reconstruct the 512 bit result. The result is stored in two 256\r\n        // variables such that product = high * 2²⁵⁶ + low.\r\n        assembly (\"memory-safe\") {\r\n            let mm := mulmod(a, b, not(0))\r\n            low := mul(a, b)\r\n            high := sub(sub(mm, low), lt(mm, low))\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the addition of two unsigned integers, with a success flag (no overflow).\r\n     */\r\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool success, uint256 result) {\r\n        unchecked {\r\n            uint256 c = a + b;\r\n            success = c >= a;\r\n            result = c * SafeCast.toUint(success);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the subtraction of two unsigned integers, with a success flag (no overflow).\r\n     */\r\n    function trySub(uint256 a, uint256 b) internal pure returns (bool success, uint256 result) {\r\n        unchecked {\r\n            uint256 c = a - b;\r\n            success = c <= a;\r\n            result = c * SafeCast.toUint(success);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the multiplication of two unsigned integers, with a success flag (no overflow).\r\n     */\r\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool success, uint256 result) {\r\n        unchecked {\r\n            uint256 c = a * b;\r\n            assembly (\"memory-safe\") {\r\n                // Only true when the multiplication doesn't overflow\r\n                // (c / a == b) || (a == 0)\r\n                success := or(eq(div(c, a), b), iszero(a))\r\n            }\r\n            // equivalent to: success ? c : 0\r\n            result = c * SafeCast.toUint(success);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the division of two unsigned integers, with a success flag (no division by zero).\r\n     */\r\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool success, uint256 result) {\r\n        unchecked {\r\n            success = b > 0;\r\n            assembly (\"memory-safe\") {\r\n                // The `DIV` opcode returns zero when the denominator is 0.\r\n                result := div(a, b)\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the remainder of dividing two unsigned integers, with a success flag (no division by zero).\r\n     */\r\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool success, uint256 result) {\r\n        unchecked {\r\n            success = b > 0;\r\n            assembly (\"memory-safe\") {\r\n                // The `MOD` opcode returns zero when the denominator is 0.\r\n                result := mod(a, b)\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Unsigned saturating addition, bounds to `2²⁵⁶ - 1` instead of overflowing.\r\n     */\r\n    function saturatingAdd(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        (bool success, uint256 result) = tryAdd(a, b);\r\n        return ternary(success, result, type(uint256).max);\r\n    }\r\n\r\n    /**\r\n     * @dev Unsigned saturating subtraction, bounds to zero instead of overflowing.\r\n     */\r\n    function saturatingSub(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        (, uint256 result) = trySub(a, b);\r\n        return result;\r\n    }\r\n\r\n    /**\r\n     * @dev Unsigned saturating multiplication, bounds to `2²⁵⁶ - 1` instead of overflowing.\r\n     */\r\n    function saturatingMul(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        (bool success, uint256 result) = tryMul(a, b);\r\n        return ternary(success, result, type(uint256).max);\r\n    }\r\n\r\n    /**\r\n     * @dev Branchless ternary evaluation for `a ? b : c`. Gas costs are constant.\r\n     *\r\n     * IMPORTANT: This function may reduce bytecode size and consume less gas when used standalone.\r\n     * However, the compiler may optimize Solidity ternary operations (i.e. `a ? b : c`) to only compute\r\n     * one branch when needed, making this function more expensive.\r\n     */\r\n    function ternary(bool condition, uint256 a, uint256 b) internal pure returns (uint256) {\r\n        unchecked {\r\n            // branchless ternary works because:\r\n            // b ^ (a ^ b) == a\r\n            // b ^ 0 == b\r\n            return b ^ ((a ^ b) * SafeCast.toUint(condition));\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the largest of two numbers.\r\n     */\r\n    function max(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        return ternary(a > b, a, b);\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the smallest of two numbers.\r\n     */\r\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        return ternary(a < b, a, b);\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the average of two numbers. The result is rounded towards\r\n     * zero.\r\n     */\r\n    function average(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        // (a + b) / 2 can overflow.\r\n        return (a & b) + (a ^ b) / 2;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the ceiling of the division of two numbers.\r\n     *\r\n     * This differs from standard division with `/` in that it rounds towards infinity instead\r\n     * of rounding towards zero.\r\n     */\r\n    function ceilDiv(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        if (b == 0) {\r\n            // Guarantee the same behavior as in a regular Solidity division.\r\n            Panic.panic(Panic.DIVISION_BY_ZERO);\r\n        }\r\n\r\n        // The following calculation ensures accurate ceiling division without overflow.\r\n        // Since a is non-zero, (a - 1) / b will not overflow.\r\n        // The largest possible result occurs when (a - 1) / b is type(uint256).max,\r\n        // but the largest value we can obtain is type(uint256).max - 1, which happens\r\n        // when a = type(uint256).max and b = 1.\r\n        unchecked {\r\n            return SafeCast.toUint(a > 0) * ((a - 1) / b + 1);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or\r\n     * denominator == 0.\r\n     *\r\n     * Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv) with further edits by\r\n     * Uniswap Labs also under MIT license.\r\n     */\r\n    function mulDiv(uint256 x, uint256 y, uint256 denominator) internal pure returns (uint256 result) {\r\n        unchecked {\r\n            (uint256 high, uint256 low) = mul512(x, y);\r\n\r\n            // Handle non-overflow cases, 256 by 256 division.\r\n            if (high == 0) {\r\n                // Solidity will revert if denominator == 0, unlike the div opcode on its own.\r\n                // The surrounding unchecked block does not change this fact.\r\n                // See https://docs.soliditylang.org/en/latest/control-structures.html#checked-or-unchecked-arithmetic.\r\n                return low / denominator;\r\n            }\r\n\r\n            // Make sure the result is less than 2²⁵⁶. Also prevents denominator == 0.\r\n            if (denominator <= high) {\r\n                Panic.panic(ternary(denominator == 0, Panic.DIVISION_BY_ZERO, Panic.UNDER_OVERFLOW));\r\n            }\r\n\r\n            ///////////////////////////////////////////////\r\n            // 512 by 256 division.\r\n            ///////////////////////////////////////////////\r\n\r\n            // Make division exact by subtracting the remainder from [high low].\r\n            uint256 remainder;\r\n            assembly (\"memory-safe\") {\r\n                // Compute remainder using mulmod.\r\n                remainder := mulmod(x, y, denominator)\r\n\r\n                // Subtract 256 bit number from 512 bit number.\r\n                high := sub(high, gt(remainder, low))\r\n                low := sub(low, remainder)\r\n            }\r\n\r\n            // Factor powers of two out of denominator and compute largest power of two divisor of denominator.\r\n            // Always >= 1. See https://cs.stackexchange.com/q/138556/92363.\r\n\r\n            uint256 twos = denominator & (0 - denominator);\r\n            assembly (\"memory-safe\") {\r\n                // Divide denominator by twos.\r\n                denominator := div(denominator, twos)\r\n\r\n                // Divide [high low] by twos.\r\n                low := div(low, twos)\r\n\r\n                // Flip twos such that it is 2²⁵⁶ / twos. If twos is zero, then it becomes one.\r\n                twos := add(div(sub(0, twos), twos), 1)\r\n            }\r\n\r\n            // Shift in bits from high into low.\r\n            low |= high * twos;\r\n\r\n            // Invert denominator mod 2²⁵⁶. Now that denominator is an odd number, it has an inverse modulo 2²⁵⁶ such\r\n            // that denominator * inv ≡ 1 mod 2²⁵⁶. Compute the inverse by starting with a seed that is correct for\r\n            // four bits. That is, denominator * inv ≡ 1 mod 2⁴.\r\n            uint256 inverse = (3 * denominator) ^ 2;\r\n\r\n            // Use the Newton-Raphson iteration to improve the precision. Thanks to Hensel's lifting lemma, this also\r\n            // works in modular arithmetic, doubling the correct bits in each step.\r\n            inverse *= 2 - denominator * inverse; // inverse mod 2⁸\r\n            inverse *= 2 - denominator * inverse; // inverse mod 2¹⁶\r\n            inverse *= 2 - denominator * inverse; // inverse mod 2³²\r\n            inverse *= 2 - denominator * inverse; // inverse mod 2⁶⁴\r\n            inverse *= 2 - denominator * inverse; // inverse mod 2¹²⁸\r\n            inverse *= 2 - denominator * inverse; // inverse mod 2²⁵⁶\r\n\r\n            // Because the division is now exact we can divide by multiplying with the modular inverse of denominator.\r\n            // This will give us the correct result modulo 2²⁵⁶. Since the preconditions guarantee that the outcome is\r\n            // less than 2²⁵⁶, this is the final result. We don't need to compute the high bits of the result and high\r\n            // is no longer required.\r\n            result = low * inverse;\r\n            return result;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Calculates x * y / denominator with full precision, following the selected rounding direction.\r\n     */\r\n    function mulDiv(uint256 x, uint256 y, uint256 denominator, Rounding rounding) internal pure returns (uint256) {\r\n        return mulDiv(x, y, denominator) + SafeCast.toUint(unsignedRoundsUp(rounding) && mulmod(x, y, denominator) > 0);\r\n    }\r\n\r\n    /**\r\n     * @dev Calculates floor(x * y >> n) with full precision. Throws if result overflows a uint256.\r\n     */\r\n    function mulShr(uint256 x, uint256 y, uint8 n) internal pure returns (uint256 result) {\r\n        unchecked {\r\n            (uint256 high, uint256 low) = mul512(x, y);\r\n            if (high >= 1 << n) {\r\n                Panic.panic(Panic.UNDER_OVERFLOW);\r\n            }\r\n            return (high << (256 - n)) | (low >> n);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Calculates x * y >> n with full precision, following the selected rounding direction.\r\n     */\r\n    function mulShr(uint256 x, uint256 y, uint8 n, Rounding rounding) internal pure returns (uint256) {\r\n        return mulShr(x, y, n) + SafeCast.toUint(unsignedRoundsUp(rounding) && mulmod(x, y, 1 << n) > 0);\r\n    }\r\n\r\n    /**\r\n     * @dev Calculate the modular multiplicative inverse of a number in Z/nZ.\r\n     *\r\n     * If n is a prime, then Z/nZ is a field. In that case all elements are inversible, except 0.\r\n     * If n is not a prime, then Z/nZ is not a field, and some elements might not be inversible.\r\n     *\r\n     * If the input value is not inversible, 0 is returned.\r\n     *\r\n     * NOTE: If you know for sure that n is (big) a prime, it may be cheaper to use Fermat's little theorem and get the\r\n     * inverse using `Math.modExp(a, n - 2, n)`. See {invModPrime}.\r\n     */\r\n    function invMod(uint256 a, uint256 n) internal pure returns (uint256) {\r\n        unchecked {\r\n            if (n == 0) return 0;\r\n\r\n            // The inverse modulo is calculated using the Extended Euclidean Algorithm (iterative version)\r\n            // Used to compute integers x and y such that: ax + ny = gcd(a, n).\r\n            // When the gcd is 1, then the inverse of a modulo n exists and it's x.\r\n            // ax + ny = 1\r\n            // ax = 1 + (-y)n\r\n            // ax ≡ 1 (mod n) # x is the inverse of a modulo n\r\n\r\n            // If the remainder is 0 the gcd is n right away.\r\n            uint256 remainder = a % n;\r\n            uint256 gcd = n;\r\n\r\n            // Therefore the initial coefficients are:\r\n            // ax + ny = gcd(a, n) = n\r\n            // 0a + 1n = n\r\n            int256 x = 0;\r\n            int256 y = 1;\r\n\r\n            while (remainder != 0) {\r\n                uint256 quotient = gcd / remainder;\r\n\r\n                (gcd, remainder) = (\r\n                    // The old remainder is the next gcd to try.\r\n                    remainder,\r\n                    // Compute the next remainder.\r\n                    // Can't overflow given that (a % gcd) * (gcd // (a % gcd)) <= gcd\r\n                    // where gcd is at most n (capped to type(uint256).max)\r\n                    gcd - remainder * quotient\r\n                );\r\n\r\n                (x, y) = (\r\n                    // Increment the coefficient of a.\r\n                    y,\r\n                    // Decrement the coefficient of n.\r\n                    // Can overflow, but the result is casted to uint256 so that the\r\n                    // next value of y is \"wrapped around\" to a value between 0 and n - 1.\r\n                    x - y * int256(quotient)\r\n                );\r\n            }\r\n\r\n            if (gcd != 1) return 0; // No inverse exists.\r\n            return ternary(x < 0, n - uint256(-x), uint256(x)); // Wrap the result if it's negative.\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Variant of {invMod}. More efficient, but only works if `p` is known to be a prime greater than `2`.\r\n     *\r\n     * From https://en.wikipedia.org/wiki/Fermat%27s_little_theorem[Fermat's little theorem], we know that if p is\r\n     * prime, then `a**(p-1) ≡ 1 mod p`. As a consequence, we have `a * a**(p-2) ≡ 1 mod p`, which means that\r\n     * `a**(p-2)` is the modular multiplicative inverse of a in Fp.\r\n     *\r\n     * NOTE: this function does NOT check that `p` is a prime greater than `2`.\r\n     */\r\n    function invModPrime(uint256 a, uint256 p) internal view returns (uint256) {\r\n        unchecked {\r\n            return Math.modExp(a, p - 2, p);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the modular exponentiation of the specified base, exponent and modulus (b ** e % m)\r\n     *\r\n     * Requirements:\r\n     * - modulus can't be zero\r\n     * - underlying staticcall to precompile must succeed\r\n     *\r\n     * IMPORTANT: The result is only valid if the underlying call succeeds. When using this function, make\r\n     * sure the chain you're using it on supports the precompiled contract for modular exponentiation\r\n     * at address 0x05 as specified in https://eips.ethereum.org/EIPS/eip-198[EIP-198]. Otherwise,\r\n     * the underlying function will succeed given the lack of a revert, but the result may be incorrectly\r\n     * interpreted as 0.\r\n     */\r\n    function modExp(uint256 b, uint256 e, uint256 m) internal view returns (uint256) {\r\n        (bool success, uint256 result) = tryModExp(b, e, m);\r\n        if (!success) {\r\n            Panic.panic(Panic.DIVISION_BY_ZERO);\r\n        }\r\n        return result;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the modular exponentiation of the specified base, exponent and modulus (b ** e % m).\r\n     * It includes a success flag indicating if the operation succeeded. Operation will be marked as failed if trying\r\n     * to operate modulo 0 or if the underlying precompile reverted.\r\n     *\r\n     * IMPORTANT: The result is only valid if the success flag is true. When using this function, make sure the chain\r\n     * you're using it on supports the precompiled contract for modular exponentiation at address 0x05 as specified in\r\n     * https://eips.ethereum.org/EIPS/eip-198[EIP-198]. Otherwise, the underlying function will succeed given the lack\r\n     * of a revert, but the result may be incorrectly interpreted as 0.\r\n     */\r\n    function tryModExp(uint256 b, uint256 e, uint256 m) internal view returns (bool success, uint256 result) {\r\n        if (m == 0) return (false, 0);\r\n        assembly (\"memory-safe\") {\r\n            let ptr := mload(0x40)\r\n            // | Offset    | Content    | Content (Hex)                                                      |\r\n            // |-----------|------------|--------------------------------------------------------------------|\r\n            // | 0x00:0x1f | size of b  | 0x0000000000000000000000000000000000000000000000000000000000000020 |\r\n            // | 0x20:0x3f | size of e  | 0x0000000000000000000000000000000000000000000000000000000000000020 |\r\n            // | 0x40:0x5f | size of m  | 0x0000000000000000000000000000000000000000000000000000000000000020 |\r\n            // | 0x60:0x7f | value of b | 0x<.............................................................b> |\r\n            // | 0x80:0x9f | value of e | 0x<.............................................................e> |\r\n            // | 0xa0:0xbf | value of m | 0x<.............................................................m> |\r\n            mstore(ptr, 0x20)\r\n            mstore(add(ptr, 0x20), 0x20)\r\n            mstore(add(ptr, 0x40), 0x20)\r\n            mstore(add(ptr, 0x60), b)\r\n            mstore(add(ptr, 0x80), e)\r\n            mstore(add(ptr, 0xa0), m)\r\n\r\n            // Given the result < m, it's guaranteed to fit in 32 bytes,\r\n            // so we can use the memory scratch space located at offset 0.\r\n            success := staticcall(gas(), 0x05, ptr, 0xc0, 0x00, 0x20)\r\n            result := mload(0x00)\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Variant of {modExp} that supports inputs of arbitrary length.\r\n     */\r\n    function modExp(bytes memory b, bytes memory e, bytes memory m) internal view returns (bytes memory) {\r\n        (bool success, bytes memory result) = tryModExp(b, e, m);\r\n        if (!success) {\r\n            Panic.panic(Panic.DIVISION_BY_ZERO);\r\n        }\r\n        return result;\r\n    }\r\n\r\n    /**\r\n     * @dev Variant of {tryModExp} that supports inputs of arbitrary length.\r\n     */\r\n    function tryModExp(\r\n        bytes memory b,\r\n        bytes memory e,\r\n        bytes memory m\r\n    ) internal view returns (bool success, bytes memory result) {\r\n        if (_zeroBytes(m)) return (false, new bytes(0));\r\n\r\n        uint256 mLen = m.length;\r\n\r\n        // Encode call args in result and move the free memory pointer\r\n        result = abi.encodePacked(b.length, e.length, mLen, b, e, m);\r\n\r\n        assembly (\"memory-safe\") {\r\n            let dataPtr := add(result, 0x20)\r\n            // Write result on top of args to avoid allocating extra memory.\r\n            success := staticcall(gas(), 0x05, dataPtr, mload(result), dataPtr, mLen)\r\n            // Overwrite the length.\r\n            // result.length > returndatasize() is guaranteed because returndatasize() == m.length\r\n            mstore(result, mLen)\r\n            // Set the memory pointer after the returned data.\r\n            mstore(0x40, add(dataPtr, mLen))\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Returns whether the provided byte array is zero.\r\n     */\r\n    function _zeroBytes(bytes memory byteArray) private pure returns (bool) {\r\n        for (uint256 i = 0; i < byteArray.length; ++i) {\r\n            if (byteArray[i] != 0) {\r\n                return false;\r\n            }\r\n        }\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded\r\n     * towards zero.\r\n     *\r\n     * This method is based on Newton's method for computing square roots; the algorithm is restricted to only\r\n     * using integer operations.\r\n     */\r\n    function sqrt(uint256 a) internal pure returns (uint256) {\r\n        unchecked {\r\n            // Take care of easy edge cases when a == 0 or a == 1\r\n            if (a <= 1) {\r\n                return a;\r\n            }\r\n\r\n            // In this function, we use Newton's method to get a root of `f(x) := x² - a`. It involves building a\r\n            // sequence x_n that converges toward sqrt(a). For each iteration x_n, we also define the error between\r\n            // the current value as `ε_n = | x_n - sqrt(a) |`.\r\n            //\r\n            // For our first estimation, we consider `e` the smallest power of 2 which is bigger than the square root\r\n            // of the target. (i.e. `2**(e-1) ≤ sqrt(a) < 2**e`). We know that `e ≤ 128` because `(2¹²⁸)² = 2²⁵⁶` is\r\n            // bigger than any uint256.\r\n            //\r\n            // By noticing that\r\n            // `2**(e-1) ≤ sqrt(a) < 2**e → (2**(e-1))² ≤ a < (2**e)² → 2**(2*e-2) ≤ a < 2**(2*e)`\r\n            // we can deduce that `e - 1` is `log2(a) / 2`. We can thus compute `x_n = 2**(e-1)` using a method similar\r\n            // to the msb function.\r\n            uint256 aa = a;\r\n            uint256 xn = 1;\r\n\r\n            if (aa >= (1 << 128)) {\r\n                aa >>= 128;\r\n                xn <<= 64;\r\n            }\r\n            if (aa >= (1 << 64)) {\r\n                aa >>= 64;\r\n                xn <<= 32;\r\n            }\r\n            if (aa >= (1 << 32)) {\r\n                aa >>= 32;\r\n                xn <<= 16;\r\n            }\r\n            if (aa >= (1 << 16)) {\r\n                aa >>= 16;\r\n                xn <<= 8;\r\n            }\r\n            if (aa >= (1 << 8)) {\r\n                aa >>= 8;\r\n                xn <<= 4;\r\n            }\r\n            if (aa >= (1 << 4)) {\r\n                aa >>= 4;\r\n                xn <<= 2;\r\n            }\r\n            if (aa >= (1 << 2)) {\r\n                xn <<= 1;\r\n            }\r\n\r\n            // We now have x_n such that `x_n = 2**(e-1) ≤ sqrt(a) < 2**e = 2 * x_n`. This implies ε_n ≤ 2**(e-1).\r\n            //\r\n            // We can refine our estimation by noticing that the middle of that interval minimizes the error.\r\n            // If we move x_n to equal 2**(e-1) + 2**(e-2), then we reduce the error to ε_n ≤ 2**(e-2).\r\n            // This is going to be our x_0 (and ε_0)\r\n            xn = (3 * xn) >> 1; // ε_0 := | x_0 - sqrt(a) | ≤ 2**(e-2)\r\n\r\n            // From here, Newton's method give us:\r\n            // x_{n+1} = (x_n + a / x_n) / 2\r\n            //\r\n            // One should note that:\r\n            // x_{n+1}² - a = ((x_n + a / x_n) / 2)² - a\r\n            //              = ((x_n² + a) / (2 * x_n))² - a\r\n            //              = (x_n⁴ + 2 * a * x_n² + a²) / (4 * x_n²) - a\r\n            //              = (x_n⁴ + 2 * a * x_n² + a² - 4 * a * x_n²) / (4 * x_n²)\r\n            //              = (x_n⁴ - 2 * a * x_n² + a²) / (4 * x_n²)\r\n            //              = (x_n² - a)² / (2 * x_n)²\r\n            //              = ((x_n² - a) / (2 * x_n))²\r\n            //              ≥ 0\r\n            // Which proves that for all n ≥ 1, sqrt(a) ≤ x_n\r\n            //\r\n            // This gives us the proof of quadratic convergence of the sequence:\r\n            // ε_{n+1} = | x_{n+1} - sqrt(a) |\r\n            //         = | (x_n + a / x_n) / 2 - sqrt(a) |\r\n            //         = | (x_n² + a - 2*x_n*sqrt(a)) / (2 * x_n) |\r\n            //         = | (x_n - sqrt(a))² / (2 * x_n) |\r\n            //         = | ε_n² / (2 * x_n) |\r\n            //         = ε_n² / | (2 * x_n) |\r\n            //\r\n            // For the first iteration, we have a special case where x_0 is known:\r\n            // ε_1 = ε_0² / | (2 * x_0) |\r\n            //     ≤ (2**(e-2))² / (2 * (2**(e-1) + 2**(e-2)))\r\n            //     ≤ 2**(2*e-4) / (3 * 2**(e-1))\r\n            //     ≤ 2**(e-3) / 3\r\n            //     ≤ 2**(e-3-log2(3))\r\n            //     ≤ 2**(e-4.5)\r\n            //\r\n            // For the following iterations, we use the fact that, 2**(e-1) ≤ sqrt(a) ≤ x_n:\r\n            // ε_{n+1} = ε_n² / | (2 * x_n) |\r\n            //         ≤ (2**(e-k))² / (2 * 2**(e-1))\r\n            //         ≤ 2**(2*e-2*k) / 2**e\r\n            //         ≤ 2**(e-2*k)\r\n            xn = (xn + a / xn) >> 1; // ε_1 := | x_1 - sqrt(a) | ≤ 2**(e-4.5)  -- special case, see above\r\n            xn = (xn + a / xn) >> 1; // ε_2 := | x_2 - sqrt(a) | ≤ 2**(e-9)    -- general case with k = 4.5\r\n            xn = (xn + a / xn) >> 1; // ε_3 := | x_3 - sqrt(a) | ≤ 2**(e-18)   -- general case with k = 9\r\n            xn = (xn + a / xn) >> 1; // ε_4 := | x_4 - sqrt(a) | ≤ 2**(e-36)   -- general case with k = 18\r\n            xn = (xn + a / xn) >> 1; // ε_5 := | x_5 - sqrt(a) | ≤ 2**(e-72)   -- general case with k = 36\r\n            xn = (xn + a / xn) >> 1; // ε_6 := | x_6 - sqrt(a) | ≤ 2**(e-144)  -- general case with k = 72\r\n\r\n            // Because e ≤ 128 (as discussed during the first estimation phase), we know have reached a precision\r\n            // ε_6 ≤ 2**(e-144) < 1. Given we're operating on integers, then we can ensure that xn is now either\r\n            // sqrt(a) or sqrt(a) + 1.\r\n            return xn - SafeCast.toUint(xn > a / xn);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Calculates sqrt(a), following the selected rounding direction.\r\n     */\r\n    function sqrt(uint256 a, Rounding rounding) internal pure returns (uint256) {\r\n        unchecked {\r\n            uint256 result = sqrt(a);\r\n            return result + SafeCast.toUint(unsignedRoundsUp(rounding) && result * result < a);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Return the log in base 2 of a positive value rounded towards zero.\r\n     * Returns 0 if given 0.\r\n     */\r\n    function log2(uint256 x) internal pure returns (uint256 r) {\r\n        // If value has upper 128 bits set, log2 result is at least 128\r\n        r = SafeCast.toUint(x > 0xffffffffffffffffffffffffffffffff) << 7;\r\n        // If upper 64 bits of 128-bit half set, add 64 to result\r\n        r |= SafeCast.toUint((x >> r) > 0xffffffffffffffff) << 6;\r\n        // If upper 32 bits of 64-bit half set, add 32 to result\r\n        r |= SafeCast.toUint((x >> r) > 0xffffffff) << 5;\r\n        // If upper 16 bits of 32-bit half set, add 16 to result\r\n        r |= SafeCast.toUint((x >> r) > 0xffff) << 4;\r\n        // If upper 8 bits of 16-bit half set, add 8 to result\r\n        r |= SafeCast.toUint((x >> r) > 0xff) << 3;\r\n        // If upper 4 bits of 8-bit half set, add 4 to result\r\n        r |= SafeCast.toUint((x >> r) > 0xf) << 2;\r\n\r\n        // Shifts value right by the current result and use it as an index into this lookup table:\r\n        //\r\n        // | x (4 bits) |  index  | table[index] = MSB position |\r\n        // |------------|---------|-----------------------------|\r\n        // |    0000    |    0    |        table[0] = 0         |\r\n        // |    0001    |    1    |        table[1] = 0         |\r\n        // |    0010    |    2    |        table[2] = 1         |\r\n        // |    0011    |    3    |        table[3] = 1         |\r\n        // |    0100    |    4    |        table[4] = 2         |\r\n        // |    0101    |    5    |        table[5] = 2         |\r\n        // |    0110    |    6    |        table[6] = 2         |\r\n        // |    0111    |    7    |        table[7] = 2         |\r\n        // |    1000    |    8    |        table[8] = 3         |\r\n        // |    1001    |    9    |        table[9] = 3         |\r\n        // |    1010    |   10    |        table[10] = 3        |\r\n        // |    1011    |   11    |        table[11] = 3        |\r\n        // |    1100    |   12    |        table[12] = 3        |\r\n        // |    1101    |   13    |        table[13] = 3        |\r\n        // |    1110    |   14    |        table[14] = 3        |\r\n        // |    1111    |   15    |        table[15] = 3        |\r\n        //\r\n        // The lookup table is represented as a 32-byte value with the MSB positions for 0-15 in the last 16 bytes.\r\n        assembly (\"memory-safe\") {\r\n            r := or(r, byte(shr(r, x), 0x0000010102020202030303030303030300000000000000000000000000000000))\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Return the log in base 2, following the selected rounding direction, of a positive value.\r\n     * Returns 0 if given 0.\r\n     */\r\n    function log2(uint256 value, Rounding rounding) internal pure returns (uint256) {\r\n        unchecked {\r\n            uint256 result = log2(value);\r\n            return result + SafeCast.toUint(unsignedRoundsUp(rounding) && 1 << result < value);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Return the log in base 10 of a positive value rounded towards zero.\r\n     * Returns 0 if given 0.\r\n     */\r\n    function log10(uint256 value) internal pure returns (uint256) {\r\n        uint256 result = 0;\r\n        unchecked {\r\n            if (value >= 10 ** 64) {\r\n                value /= 10 ** 64;\r\n                result += 64;\r\n            }\r\n            if (value >= 10 ** 32) {\r\n                value /= 10 ** 32;\r\n                result += 32;\r\n            }\r\n            if (value >= 10 ** 16) {\r\n                value /= 10 ** 16;\r\n                result += 16;\r\n            }\r\n            if (value >= 10 ** 8) {\r\n                value /= 10 ** 8;\r\n                result += 8;\r\n            }\r\n            if (value >= 10 ** 4) {\r\n                value /= 10 ** 4;\r\n                result += 4;\r\n            }\r\n            if (value >= 10 ** 2) {\r\n                value /= 10 ** 2;\r\n                result += 2;\r\n            }\r\n            if (value >= 10 ** 1) {\r\n                result += 1;\r\n            }\r\n        }\r\n        return result;\r\n    }\r\n\r\n    /**\r\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\r\n     * Returns 0 if given 0.\r\n     */\r\n    function log10(uint256 value, Rounding rounding) internal pure returns (uint256) {\r\n        unchecked {\r\n            uint256 result = log10(value);\r\n            return result + SafeCast.toUint(unsignedRoundsUp(rounding) && 10 ** result < value);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Return the log in base 256 of a positive value rounded towards zero.\r\n     * Returns 0 if given 0.\r\n     *\r\n     * Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string.\r\n     */\r\n    function log256(uint256 x) internal pure returns (uint256 r) {\r\n        // If value has upper 128 bits set, log2 result is at least 128\r\n        r = SafeCast.toUint(x > 0xffffffffffffffffffffffffffffffff) << 7;\r\n        // If upper 64 bits of 128-bit half set, add 64 to result\r\n        r |= SafeCast.toUint((x >> r) > 0xffffffffffffffff) << 6;\r\n        // If upper 32 bits of 64-bit half set, add 32 to result\r\n        r |= SafeCast.toUint((x >> r) > 0xffffffff) << 5;\r\n        // If upper 16 bits of 32-bit half set, add 16 to result\r\n        r |= SafeCast.toUint((x >> r) > 0xffff) << 4;\r\n        // Add 1 if upper 8 bits of 16-bit half set, and divide accumulated result by 8\r\n        return (r >> 3) | SafeCast.toUint((x >> r) > 0xff);\r\n    }\r\n\r\n    /**\r\n     * @dev Return the log in base 256, following the selected rounding direction, of a positive value.\r\n     * Returns 0 if given 0.\r\n     */\r\n    function log256(uint256 value, Rounding rounding) internal pure returns (uint256) {\r\n        unchecked {\r\n            uint256 result = log256(value);\r\n            return result + SafeCast.toUint(unsignedRoundsUp(rounding) && 1 << (result << 3) < value);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Returns whether a provided rounding mode is considered rounding up for unsigned integers.\r\n     */\r\n    function unsignedRoundsUp(Rounding rounding) internal pure returns (bool) {\r\n        return uint8(rounding) % 2 == 1;\r\n    }\r\n}\r\n"},"@openzeppelin/contracts/utils/math/SafeCast.sol":{"content":"// SPDX-License-Identifier: MIT\r\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/math/SafeCast.sol)\r\n// This file was procedurally generated from scripts/generate/templates/SafeCast.js.\r\n\r\npragma solidity ^0.8.20;\r\n\r\n/**\r\n * @dev Wrappers over Solidity's uintXX/intXX/bool casting operators with added overflow\r\n * checks.\r\n *\r\n * Downcasting from uint256/int256 in Solidity does not revert on overflow. This can\r\n * easily result in undesired exploitation or bugs, since developers usually\r\n * assume that overflows raise errors. `SafeCast` restores this intuition by\r\n * reverting the transaction when such an operation overflows.\r\n *\r\n * Using this library instead of the unchecked operations eliminates an entire\r\n * class of bugs, so it's recommended to use it always.\r\n */\r\nlibrary SafeCast {\r\n    /**\r\n     * @dev Value doesn't fit in an uint of `bits` size.\r\n     */\r\n    error SafeCastOverflowedUintDowncast(uint8 bits, uint256 value);\r\n\r\n    /**\r\n     * @dev An int value doesn't fit in an uint of `bits` size.\r\n     */\r\n    error SafeCastOverflowedIntToUint(int256 value);\r\n\r\n    /**\r\n     * @dev Value doesn't fit in an int of `bits` size.\r\n     */\r\n    error SafeCastOverflowedIntDowncast(uint8 bits, int256 value);\r\n\r\n    /**\r\n     * @dev An uint value doesn't fit in an int of `bits` size.\r\n     */\r\n    error SafeCastOverflowedUintToInt(uint256 value);\r\n\r\n    /**\r\n     * @dev Returns the downcasted uint248 from uint256, reverting on\r\n     * overflow (when the input is greater than largest uint248).\r\n     *\r\n     * Counterpart to Solidity's `uint248` operator.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - input must fit into 248 bits\r\n     */\r\n    function toUint248(uint256 value) internal pure returns (uint248) {\r\n        if (value > type(uint248).max) {\r\n            revert SafeCastOverflowedUintDowncast(248, value);\r\n        }\r\n        return uint248(value);\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the downcasted uint240 from uint256, reverting on\r\n     * overflow (when the input is greater than largest uint240).\r\n     *\r\n     * Counterpart to Solidity's `uint240` operator.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - input must fit into 240 bits\r\n     */\r\n    function toUint240(uint256 value) internal pure returns (uint240) {\r\n        if (value > type(uint240).max) {\r\n            revert SafeCastOverflowedUintDowncast(240, value);\r\n        }\r\n        return uint240(value);\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the downcasted uint232 from uint256, reverting on\r\n     * overflow (when the input is greater than largest uint232).\r\n     *\r\n     * Counterpart to Solidity's `uint232` operator.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - input must fit into 232 bits\r\n     */\r\n    function toUint232(uint256 value) internal pure returns (uint232) {\r\n        if (value > type(uint232).max) {\r\n            revert SafeCastOverflowedUintDowncast(232, value);\r\n        }\r\n        return uint232(value);\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the downcasted uint224 from uint256, reverting on\r\n     * overflow (when the input is greater than largest uint224).\r\n     *\r\n     * Counterpart to Solidity's `uint224` operator.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - input must fit into 224 bits\r\n     */\r\n    function toUint224(uint256 value) internal pure returns (uint224) {\r\n        if (value > type(uint224).max) {\r\n            revert SafeCastOverflowedUintDowncast(224, value);\r\n        }\r\n        return uint224(value);\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the downcasted uint216 from uint256, reverting on\r\n     * overflow (when the input is greater than largest uint216).\r\n     *\r\n     * Counterpart to Solidity's `uint216` operator.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - input must fit into 216 bits\r\n     */\r\n    function toUint216(uint256 value) internal pure returns (uint216) {\r\n        if (value > type(uint216).max) {\r\n            revert SafeCastOverflowedUintDowncast(216, value);\r\n        }\r\n        return uint216(value);\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the downcasted uint208 from uint256, reverting on\r\n     * overflow (when the input is greater than largest uint208).\r\n     *\r\n     * Counterpart to Solidity's `uint208` operator.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - input must fit into 208 bits\r\n     */\r\n    function toUint208(uint256 value) internal pure returns (uint208) {\r\n        if (value > type(uint208).max) {\r\n            revert SafeCastOverflowedUintDowncast(208, value);\r\n        }\r\n        return uint208(value);\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the downcasted uint200 from uint256, reverting on\r\n     * overflow (when the input is greater than largest uint200).\r\n     *\r\n     * Counterpart to Solidity's `uint200` operator.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - input must fit into 200 bits\r\n     */\r\n    function toUint200(uint256 value) internal pure returns (uint200) {\r\n        if (value > type(uint200).max) {\r\n            revert SafeCastOverflowedUintDowncast(200, value);\r\n        }\r\n        return uint200(value);\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the downcasted uint192 from uint256, reverting on\r\n     * overflow (when the input is greater than largest uint192).\r\n     *\r\n     * Counterpart to Solidity's `uint192` operator.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - input must fit into 192 bits\r\n     */\r\n    function toUint192(uint256 value) internal pure returns (uint192) {\r\n        if (value > type(uint192).max) {\r\n            revert SafeCastOverflowedUintDowncast(192, value);\r\n        }\r\n        return uint192(value);\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the downcasted uint184 from uint256, reverting on\r\n     * overflow (when the input is greater than largest uint184).\r\n     *\r\n     * Counterpart to Solidity's `uint184` operator.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - input must fit into 184 bits\r\n     */\r\n    function toUint184(uint256 value) internal pure returns (uint184) {\r\n        if (value > type(uint184).max) {\r\n            revert SafeCastOverflowedUintDowncast(184, value);\r\n        }\r\n        return uint184(value);\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the downcasted uint176 from uint256, reverting on\r\n     * overflow (when the input is greater than largest uint176).\r\n     *\r\n     * Counterpart to Solidity's `uint176` operator.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - input must fit into 176 bits\r\n     */\r\n    function toUint176(uint256 value) internal pure returns (uint176) {\r\n        if (value > type(uint176).max) {\r\n            revert SafeCastOverflowedUintDowncast(176, value);\r\n        }\r\n        return uint176(value);\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the downcasted uint168 from uint256, reverting on\r\n     * overflow (when the input is greater than largest uint168).\r\n     *\r\n     * Counterpart to Solidity's `uint168` operator.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - input must fit into 168 bits\r\n     */\r\n    function toUint168(uint256 value) internal pure returns (uint168) {\r\n        if (value > type(uint168).max) {\r\n            revert SafeCastOverflowedUintDowncast(168, value);\r\n        }\r\n        return uint168(value);\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the downcasted uint160 from uint256, reverting on\r\n     * overflow (when the input is greater than largest uint160).\r\n     *\r\n     * Counterpart to Solidity's `uint160` operator.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - input must fit into 160 bits\r\n     */\r\n    function toUint160(uint256 value) internal pure returns (uint160) {\r\n        if (value > type(uint160).max) {\r\n            revert SafeCastOverflowedUintDowncast(160, value);\r\n        }\r\n        return uint160(value);\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the downcasted uint152 from uint256, reverting on\r\n     * overflow (when the input is greater than largest uint152).\r\n     *\r\n     * Counterpart to Solidity's `uint152` operator.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - input must fit into 152 bits\r\n     */\r\n    function toUint152(uint256 value) internal pure returns (uint152) {\r\n        if (value > type(uint152).max) {\r\n            revert SafeCastOverflowedUintDowncast(152, value);\r\n        }\r\n        return uint152(value);\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the downcasted uint144 from uint256, reverting on\r\n     * overflow (when the input is greater than largest uint144).\r\n     *\r\n     * Counterpart to Solidity's `uint144` operator.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - input must fit into 144 bits\r\n     */\r\n    function toUint144(uint256 value) internal pure returns (uint144) {\r\n        if (value > type(uint144).max) {\r\n            revert SafeCastOverflowedUintDowncast(144, value);\r\n        }\r\n        return uint144(value);\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the downcasted uint136 from uint256, reverting on\r\n     * overflow (when the input is greater than largest uint136).\r\n     *\r\n     * Counterpart to Solidity's `uint136` operator.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - input must fit into 136 bits\r\n     */\r\n    function toUint136(uint256 value) internal pure returns (uint136) {\r\n        if (value > type(uint136).max) {\r\n            revert SafeCastOverflowedUintDowncast(136, value);\r\n        }\r\n        return uint136(value);\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the downcasted uint128 from uint256, reverting on\r\n     * overflow (when the input is greater than largest uint128).\r\n     *\r\n     * Counterpart to Solidity's `uint128` operator.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - input must fit into 128 bits\r\n     */\r\n    function toUint128(uint256 value) internal pure returns (uint128) {\r\n        if (value > type(uint128).max) {\r\n            revert SafeCastOverflowedUintDowncast(128, value);\r\n        }\r\n        return uint128(value);\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the downcasted uint120 from uint256, reverting on\r\n     * overflow (when the input is greater than largest uint120).\r\n     *\r\n     * Counterpart to Solidity's `uint120` operator.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - input must fit into 120 bits\r\n     */\r\n    function toUint120(uint256 value) internal pure returns (uint120) {\r\n        if (value > type(uint120).max) {\r\n            revert SafeCastOverflowedUintDowncast(120, value);\r\n        }\r\n        return uint120(value);\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the downcasted uint112 from uint256, reverting on\r\n     * overflow (when the input is greater than largest uint112).\r\n     *\r\n     * Counterpart to Solidity's `uint112` operator.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - input must fit into 112 bits\r\n     */\r\n    function toUint112(uint256 value) internal pure returns (uint112) {\r\n        if (value > type(uint112).max) {\r\n            revert SafeCastOverflowedUintDowncast(112, value);\r\n        }\r\n        return uint112(value);\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the downcasted uint104 from uint256, reverting on\r\n     * overflow (when the input is greater than largest uint104).\r\n     *\r\n     * Counterpart to Solidity's `uint104` operator.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - input must fit into 104 bits\r\n     */\r\n    function toUint104(uint256 value) internal pure returns (uint104) {\r\n        if (value > type(uint104).max) {\r\n            revert SafeCastOverflowedUintDowncast(104, value);\r\n        }\r\n        return uint104(value);\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the downcasted uint96 from uint256, reverting on\r\n     * overflow (when the input is greater than largest uint96).\r\n     *\r\n     * Counterpart to Solidity's `uint96` operator.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - input must fit into 96 bits\r\n     */\r\n    function toUint96(uint256 value) internal pure returns (uint96) {\r\n        if (value > type(uint96).max) {\r\n            revert SafeCastOverflowedUintDowncast(96, value);\r\n        }\r\n        return uint96(value);\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the downcasted uint88 from uint256, reverting on\r\n     * overflow (when the input is greater than largest uint88).\r\n     *\r\n     * Counterpart to Solidity's `uint88` operator.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - input must fit into 88 bits\r\n     */\r\n    function toUint88(uint256 value) internal pure returns (uint88) {\r\n        if (value > type(uint88).max) {\r\n            revert SafeCastOverflowedUintDowncast(88, value);\r\n        }\r\n        return uint88(value);\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the downcasted uint80 from uint256, reverting on\r\n     * overflow (when the input is greater than largest uint80).\r\n     *\r\n     * Counterpart to Solidity's `uint80` operator.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - input must fit into 80 bits\r\n     */\r\n    function toUint80(uint256 value) internal pure returns (uint80) {\r\n        if (value > type(uint80).max) {\r\n            revert SafeCastOverflowedUintDowncast(80, value);\r\n        }\r\n        return uint80(value);\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the downcasted uint72 from uint256, reverting on\r\n     * overflow (when the input is greater than largest uint72).\r\n     *\r\n     * Counterpart to Solidity's `uint72` operator.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - input must fit into 72 bits\r\n     */\r\n    function toUint72(uint256 value) internal pure returns (uint72) {\r\n        if (value > type(uint72).max) {\r\n            revert SafeCastOverflowedUintDowncast(72, value);\r\n        }\r\n        return uint72(value);\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the downcasted uint64 from uint256, reverting on\r\n     * overflow (when the input is greater than largest uint64).\r\n     *\r\n     * Counterpart to Solidity's `uint64` operator.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - input must fit into 64 bits\r\n     */\r\n    function toUint64(uint256 value) internal pure returns (uint64) {\r\n        if (value > type(uint64).max) {\r\n            revert SafeCastOverflowedUintDowncast(64, value);\r\n        }\r\n        return uint64(value);\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the downcasted uint56 from uint256, reverting on\r\n     * overflow (when the input is greater than largest uint56).\r\n     *\r\n     * Counterpart to Solidity's `uint56` operator.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - input must fit into 56 bits\r\n     */\r\n    function toUint56(uint256 value) internal pure returns (uint56) {\r\n        if (value > type(uint56).max) {\r\n            revert SafeCastOverflowedUintDowncast(56, value);\r\n        }\r\n        return uint56(value);\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the downcasted uint48 from uint256, reverting on\r\n     * overflow (when the input is greater than largest uint48).\r\n     *\r\n     * Counterpart to Solidity's `uint48` operator.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - input must fit into 48 bits\r\n     */\r\n    function toUint48(uint256 value) internal pure returns (uint48) {\r\n        if (value > type(uint48).max) {\r\n            revert SafeCastOverflowedUintDowncast(48, value);\r\n        }\r\n        return uint48(value);\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the downcasted uint40 from uint256, reverting on\r\n     * overflow (when the input is greater than largest uint40).\r\n     *\r\n     * Counterpart to Solidity's `uint40` operator.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - input must fit into 40 bits\r\n     */\r\n    function toUint40(uint256 value) internal pure returns (uint40) {\r\n        if (value > type(uint40).max) {\r\n            revert SafeCastOverflowedUintDowncast(40, value);\r\n        }\r\n        return uint40(value);\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the downcasted uint32 from uint256, reverting on\r\n     * overflow (when the input is greater than largest uint32).\r\n     *\r\n     * Counterpart to Solidity's `uint32` operator.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - input must fit into 32 bits\r\n     */\r\n    function toUint32(uint256 value) internal pure returns (uint32) {\r\n        if (value > type(uint32).max) {\r\n            revert SafeCastOverflowedUintDowncast(32, value);\r\n        }\r\n        return uint32(value);\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the downcasted uint24 from uint256, reverting on\r\n     * overflow (when the input is greater than largest uint24).\r\n     *\r\n     * Counterpart to Solidity's `uint24` operator.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - input must fit into 24 bits\r\n     */\r\n    function toUint24(uint256 value) internal pure returns (uint24) {\r\n        if (value > type(uint24).max) {\r\n            revert SafeCastOverflowedUintDowncast(24, value);\r\n        }\r\n        return uint24(value);\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the downcasted uint16 from uint256, reverting on\r\n     * overflow (when the input is greater than largest uint16).\r\n     *\r\n     * Counterpart to Solidity's `uint16` operator.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - input must fit into 16 bits\r\n     */\r\n    function toUint16(uint256 value) internal pure returns (uint16) {\r\n        if (value > type(uint16).max) {\r\n            revert SafeCastOverflowedUintDowncast(16, value);\r\n        }\r\n        return uint16(value);\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the downcasted uint8 from uint256, reverting on\r\n     * overflow (when the input is greater than largest uint8).\r\n     *\r\n     * Counterpart to Solidity's `uint8` operator.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - input must fit into 8 bits\r\n     */\r\n    function toUint8(uint256 value) internal pure returns (uint8) {\r\n        if (value > type(uint8).max) {\r\n            revert SafeCastOverflowedUintDowncast(8, value);\r\n        }\r\n        return uint8(value);\r\n    }\r\n\r\n    /**\r\n     * @dev Converts a signed int256 into an unsigned uint256.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - input must be greater than or equal to 0.\r\n     */\r\n    function toUint256(int256 value) internal pure returns (uint256) {\r\n        if (value < 0) {\r\n            revert SafeCastOverflowedIntToUint(value);\r\n        }\r\n        return uint256(value);\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the downcasted int248 from int256, reverting on\r\n     * overflow (when the input is less than smallest int248 or\r\n     * greater than largest int248).\r\n     *\r\n     * Counterpart to Solidity's `int248` operator.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - input must fit into 248 bits\r\n     */\r\n    function toInt248(int256 value) internal pure returns (int248 downcasted) {\r\n        downcasted = int248(value);\r\n        if (downcasted != value) {\r\n            revert SafeCastOverflowedIntDowncast(248, value);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the downcasted int240 from int256, reverting on\r\n     * overflow (when the input is less than smallest int240 or\r\n     * greater than largest int240).\r\n     *\r\n     * Counterpart to Solidity's `int240` operator.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - input must fit into 240 bits\r\n     */\r\n    function toInt240(int256 value) internal pure returns (int240 downcasted) {\r\n        downcasted = int240(value);\r\n        if (downcasted != value) {\r\n            revert SafeCastOverflowedIntDowncast(240, value);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the downcasted int232 from int256, reverting on\r\n     * overflow (when the input is less than smallest int232 or\r\n     * greater than largest int232).\r\n     *\r\n     * Counterpart to Solidity's `int232` operator.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - input must fit into 232 bits\r\n     */\r\n    function toInt232(int256 value) internal pure returns (int232 downcasted) {\r\n        downcasted = int232(value);\r\n        if (downcasted != value) {\r\n            revert SafeCastOverflowedIntDowncast(232, value);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the downcasted int224 from int256, reverting on\r\n     * overflow (when the input is less than smallest int224 or\r\n     * greater than largest int224).\r\n     *\r\n     * Counterpart to Solidity's `int224` operator.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - input must fit into 224 bits\r\n     */\r\n    function toInt224(int256 value) internal pure returns (int224 downcasted) {\r\n        downcasted = int224(value);\r\n        if (downcasted != value) {\r\n            revert SafeCastOverflowedIntDowncast(224, value);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the downcasted int216 from int256, reverting on\r\n     * overflow (when the input is less than smallest int216 or\r\n     * greater than largest int216).\r\n     *\r\n     * Counterpart to Solidity's `int216` operator.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - input must fit into 216 bits\r\n     */\r\n    function toInt216(int256 value) internal pure returns (int216 downcasted) {\r\n        downcasted = int216(value);\r\n        if (downcasted != value) {\r\n            revert SafeCastOverflowedIntDowncast(216, value);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the downcasted int208 from int256, reverting on\r\n     * overflow (when the input is less than smallest int208 or\r\n     * greater than largest int208).\r\n     *\r\n     * Counterpart to Solidity's `int208` operator.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - input must fit into 208 bits\r\n     */\r\n    function toInt208(int256 value) internal pure returns (int208 downcasted) {\r\n        downcasted = int208(value);\r\n        if (downcasted != value) {\r\n            revert SafeCastOverflowedIntDowncast(208, value);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the downcasted int200 from int256, reverting on\r\n     * overflow (when the input is less than smallest int200 or\r\n     * greater than largest int200).\r\n     *\r\n     * Counterpart to Solidity's `int200` operator.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - input must fit into 200 bits\r\n     */\r\n    function toInt200(int256 value) internal pure returns (int200 downcasted) {\r\n        downcasted = int200(value);\r\n        if (downcasted != value) {\r\n            revert SafeCastOverflowedIntDowncast(200, value);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the downcasted int192 from int256, reverting on\r\n     * overflow (when the input is less than smallest int192 or\r\n     * greater than largest int192).\r\n     *\r\n     * Counterpart to Solidity's `int192` operator.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - input must fit into 192 bits\r\n     */\r\n    function toInt192(int256 value) internal pure returns (int192 downcasted) {\r\n        downcasted = int192(value);\r\n        if (downcasted != value) {\r\n            revert SafeCastOverflowedIntDowncast(192, value);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the downcasted int184 from int256, reverting on\r\n     * overflow (when the input is less than smallest int184 or\r\n     * greater than largest int184).\r\n     *\r\n     * Counterpart to Solidity's `int184` operator.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - input must fit into 184 bits\r\n     */\r\n    function toInt184(int256 value) internal pure returns (int184 downcasted) {\r\n        downcasted = int184(value);\r\n        if (downcasted != value) {\r\n            revert SafeCastOverflowedIntDowncast(184, value);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the downcasted int176 from int256, reverting on\r\n     * overflow (when the input is less than smallest int176 or\r\n     * greater than largest int176).\r\n     *\r\n     * Counterpart to Solidity's `int176` operator.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - input must fit into 176 bits\r\n     */\r\n    function toInt176(int256 value) internal pure returns (int176 downcasted) {\r\n        downcasted = int176(value);\r\n        if (downcasted != value) {\r\n            revert SafeCastOverflowedIntDowncast(176, value);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the downcasted int168 from int256, reverting on\r\n     * overflow (when the input is less than smallest int168 or\r\n     * greater than largest int168).\r\n     *\r\n     * Counterpart to Solidity's `int168` operator.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - input must fit into 168 bits\r\n     */\r\n    function toInt168(int256 value) internal pure returns (int168 downcasted) {\r\n        downcasted = int168(value);\r\n        if (downcasted != value) {\r\n            revert SafeCastOverflowedIntDowncast(168, value);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the downcasted int160 from int256, reverting on\r\n     * overflow (when the input is less than smallest int160 or\r\n     * greater than largest int160).\r\n     *\r\n     * Counterpart to Solidity's `int160` operator.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - input must fit into 160 bits\r\n     */\r\n    function toInt160(int256 value) internal pure returns (int160 downcasted) {\r\n        downcasted = int160(value);\r\n        if (downcasted != value) {\r\n            revert SafeCastOverflowedIntDowncast(160, value);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the downcasted int152 from int256, reverting on\r\n     * overflow (when the input is less than smallest int152 or\r\n     * greater than largest int152).\r\n     *\r\n     * Counterpart to Solidity's `int152` operator.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - input must fit into 152 bits\r\n     */\r\n    function toInt152(int256 value) internal pure returns (int152 downcasted) {\r\n        downcasted = int152(value);\r\n        if (downcasted != value) {\r\n            revert SafeCastOverflowedIntDowncast(152, value);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the downcasted int144 from int256, reverting on\r\n     * overflow (when the input is less than smallest int144 or\r\n     * greater than largest int144).\r\n     *\r\n     * Counterpart to Solidity's `int144` operator.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - input must fit into 144 bits\r\n     */\r\n    function toInt144(int256 value) internal pure returns (int144 downcasted) {\r\n        downcasted = int144(value);\r\n        if (downcasted != value) {\r\n            revert SafeCastOverflowedIntDowncast(144, value);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the downcasted int136 from int256, reverting on\r\n     * overflow (when the input is less than smallest int136 or\r\n     * greater than largest int136).\r\n     *\r\n     * Counterpart to Solidity's `int136` operator.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - input must fit into 136 bits\r\n     */\r\n    function toInt136(int256 value) internal pure returns (int136 downcasted) {\r\n        downcasted = int136(value);\r\n        if (downcasted != value) {\r\n            revert SafeCastOverflowedIntDowncast(136, value);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the downcasted int128 from int256, reverting on\r\n     * overflow (when the input is less than smallest int128 or\r\n     * greater than largest int128).\r\n     *\r\n     * Counterpart to Solidity's `int128` operator.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - input must fit into 128 bits\r\n     */\r\n    function toInt128(int256 value) internal pure returns (int128 downcasted) {\r\n        downcasted = int128(value);\r\n        if (downcasted != value) {\r\n            revert SafeCastOverflowedIntDowncast(128, value);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the downcasted int120 from int256, reverting on\r\n     * overflow (when the input is less than smallest int120 or\r\n     * greater than largest int120).\r\n     *\r\n     * Counterpart to Solidity's `int120` operator.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - input must fit into 120 bits\r\n     */\r\n    function toInt120(int256 value) internal pure returns (int120 downcasted) {\r\n        downcasted = int120(value);\r\n        if (downcasted != value) {\r\n            revert SafeCastOverflowedIntDowncast(120, value);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the downcasted int112 from int256, reverting on\r\n     * overflow (when the input is less than smallest int112 or\r\n     * greater than largest int112).\r\n     *\r\n     * Counterpart to Solidity's `int112` operator.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - input must fit into 112 bits\r\n     */\r\n    function toInt112(int256 value) internal pure returns (int112 downcasted) {\r\n        downcasted = int112(value);\r\n        if (downcasted != value) {\r\n            revert SafeCastOverflowedIntDowncast(112, value);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the downcasted int104 from int256, reverting on\r\n     * overflow (when the input is less than smallest int104 or\r\n     * greater than largest int104).\r\n     *\r\n     * Counterpart to Solidity's `int104` operator.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - input must fit into 104 bits\r\n     */\r\n    function toInt104(int256 value) internal pure returns (int104 downcasted) {\r\n        downcasted = int104(value);\r\n        if (downcasted != value) {\r\n            revert SafeCastOverflowedIntDowncast(104, value);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the downcasted int96 from int256, reverting on\r\n     * overflow (when the input is less than smallest int96 or\r\n     * greater than largest int96).\r\n     *\r\n     * Counterpart to Solidity's `int96` operator.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - input must fit into 96 bits\r\n     */\r\n    function toInt96(int256 value) internal pure returns (int96 downcasted) {\r\n        downcasted = int96(value);\r\n        if (downcasted != value) {\r\n            revert SafeCastOverflowedIntDowncast(96, value);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the downcasted int88 from int256, reverting on\r\n     * overflow (when the input is less than smallest int88 or\r\n     * greater than largest int88).\r\n     *\r\n     * Counterpart to Solidity's `int88` operator.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - input must fit into 88 bits\r\n     */\r\n    function toInt88(int256 value) internal pure returns (int88 downcasted) {\r\n        downcasted = int88(value);\r\n        if (downcasted != value) {\r\n            revert SafeCastOverflowedIntDowncast(88, value);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the downcasted int80 from int256, reverting on\r\n     * overflow (when the input is less than smallest int80 or\r\n     * greater than largest int80).\r\n     *\r\n     * Counterpart to Solidity's `int80` operator.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - input must fit into 80 bits\r\n     */\r\n    function toInt80(int256 value) internal pure returns (int80 downcasted) {\r\n        downcasted = int80(value);\r\n        if (downcasted != value) {\r\n            revert SafeCastOverflowedIntDowncast(80, value);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the downcasted int72 from int256, reverting on\r\n     * overflow (when the input is less than smallest int72 or\r\n     * greater than largest int72).\r\n     *\r\n     * Counterpart to Solidity's `int72` operator.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - input must fit into 72 bits\r\n     */\r\n    function toInt72(int256 value) internal pure returns (int72 downcasted) {\r\n        downcasted = int72(value);\r\n        if (downcasted != value) {\r\n            revert SafeCastOverflowedIntDowncast(72, value);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the downcasted int64 from int256, reverting on\r\n     * overflow (when the input is less than smallest int64 or\r\n     * greater than largest int64).\r\n     *\r\n     * Counterpart to Solidity's `int64` operator.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - input must fit into 64 bits\r\n     */\r\n    function toInt64(int256 value) internal pure returns (int64 downcasted) {\r\n        downcasted = int64(value);\r\n        if (downcasted != value) {\r\n            revert SafeCastOverflowedIntDowncast(64, value);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the downcasted int56 from int256, reverting on\r\n     * overflow (when the input is less than smallest int56 or\r\n     * greater than largest int56).\r\n     *\r\n     * Counterpart to Solidity's `int56` operator.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - input must fit into 56 bits\r\n     */\r\n    function toInt56(int256 value) internal pure returns (int56 downcasted) {\r\n        downcasted = int56(value);\r\n        if (downcasted != value) {\r\n            revert SafeCastOverflowedIntDowncast(56, value);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the downcasted int48 from int256, reverting on\r\n     * overflow (when the input is less than smallest int48 or\r\n     * greater than largest int48).\r\n     *\r\n     * Counterpart to Solidity's `int48` operator.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - input must fit into 48 bits\r\n     */\r\n    function toInt48(int256 value) internal pure returns (int48 downcasted) {\r\n        downcasted = int48(value);\r\n        if (downcasted != value) {\r\n            revert SafeCastOverflowedIntDowncast(48, value);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the downcasted int40 from int256, reverting on\r\n     * overflow (when the input is less than smallest int40 or\r\n     * greater than largest int40).\r\n     *\r\n     * Counterpart to Solidity's `int40` operator.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - input must fit into 40 bits\r\n     */\r\n    function toInt40(int256 value) internal pure returns (int40 downcasted) {\r\n        downcasted = int40(value);\r\n        if (downcasted != value) {\r\n            revert SafeCastOverflowedIntDowncast(40, value);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the downcasted int32 from int256, reverting on\r\n     * overflow (when the input is less than smallest int32 or\r\n     * greater than largest int32).\r\n     *\r\n     * Counterpart to Solidity's `int32` operator.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - input must fit into 32 bits\r\n     */\r\n    function toInt32(int256 value) internal pure returns (int32 downcasted) {\r\n        downcasted = int32(value);\r\n        if (downcasted != value) {\r\n            revert SafeCastOverflowedIntDowncast(32, value);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the downcasted int24 from int256, reverting on\r\n     * overflow (when the input is less than smallest int24 or\r\n     * greater than largest int24).\r\n     *\r\n     * Counterpart to Solidity's `int24` operator.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - input must fit into 24 bits\r\n     */\r\n    function toInt24(int256 value) internal pure returns (int24 downcasted) {\r\n        downcasted = int24(value);\r\n        if (downcasted != value) {\r\n            revert SafeCastOverflowedIntDowncast(24, value);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the downcasted int16 from int256, reverting on\r\n     * overflow (when the input is less than smallest int16 or\r\n     * greater than largest int16).\r\n     *\r\n     * Counterpart to Solidity's `int16` operator.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - input must fit into 16 bits\r\n     */\r\n    function toInt16(int256 value) internal pure returns (int16 downcasted) {\r\n        downcasted = int16(value);\r\n        if (downcasted != value) {\r\n            revert SafeCastOverflowedIntDowncast(16, value);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the downcasted int8 from int256, reverting on\r\n     * overflow (when the input is less than smallest int8 or\r\n     * greater than largest int8).\r\n     *\r\n     * Counterpart to Solidity's `int8` operator.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - input must fit into 8 bits\r\n     */\r\n    function toInt8(int256 value) internal pure returns (int8 downcasted) {\r\n        downcasted = int8(value);\r\n        if (downcasted != value) {\r\n            revert SafeCastOverflowedIntDowncast(8, value);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Converts an unsigned uint256 into a signed int256.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - input must be less than or equal to maxInt256.\r\n     */\r\n    function toInt256(uint256 value) internal pure returns (int256) {\r\n        // Note: Unsafe cast below is okay because `type(int256).max` is guaranteed to be positive\r\n        if (value > uint256(type(int256).max)) {\r\n            revert SafeCastOverflowedUintToInt(value);\r\n        }\r\n        return int256(value);\r\n    }\r\n\r\n    /**\r\n     * @dev Cast a boolean (false or true) to a uint256 (0 or 1) with no jump.\r\n     */\r\n    function toUint(bool b) internal pure returns (uint256 u) {\r\n        assembly (\"memory-safe\") {\r\n            u := iszero(iszero(b))\r\n        }\r\n    }\r\n}\r\n"},"@openzeppelin/contracts/utils/math/SignedMath.sol":{"content":"// SPDX-License-Identifier: MIT\r\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/math/SignedMath.sol)\r\n\r\npragma solidity ^0.8.20;\r\n\r\nimport {SafeCast} from \"./SafeCast.sol\";\r\n\r\n/**\r\n * @dev Standard signed math utilities missing in the Solidity language.\r\n */\r\nlibrary SignedMath {\r\n    /**\r\n     * @dev Branchless ternary evaluation for `a ? b : c`. Gas costs are constant.\r\n     *\r\n     * IMPORTANT: This function may reduce bytecode size and consume less gas when used standalone.\r\n     * However, the compiler may optimize Solidity ternary operations (i.e. `a ? b : c`) to only compute\r\n     * one branch when needed, making this function more expensive.\r\n     */\r\n    function ternary(bool condition, int256 a, int256 b) internal pure returns (int256) {\r\n        unchecked {\r\n            // branchless ternary works because:\r\n            // b ^ (a ^ b) == a\r\n            // b ^ 0 == b\r\n            return b ^ ((a ^ b) * int256(SafeCast.toUint(condition)));\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the largest of two signed numbers.\r\n     */\r\n    function max(int256 a, int256 b) internal pure returns (int256) {\r\n        return ternary(a > b, a, b);\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the smallest of two signed numbers.\r\n     */\r\n    function min(int256 a, int256 b) internal pure returns (int256) {\r\n        return ternary(a < b, a, b);\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the average of two signed numbers without overflow.\r\n     * The result is rounded towards zero.\r\n     */\r\n    function average(int256 a, int256 b) internal pure returns (int256) {\r\n        // Formula from the book \"Hacker's Delight\"\r\n        int256 x = (a & b) + ((a ^ b) >> 1);\r\n        return x + (int256(uint256(x) >> 255) & (a ^ b));\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the absolute unsigned value of a signed value.\r\n     */\r\n    function abs(int256 n) internal pure returns (uint256) {\r\n        unchecked {\r\n            // Formula from the \"Bit Twiddling Hacks\" by Sean Eron Anderson.\r\n            // Since `n` is a signed integer, the generated bytecode will use the SAR opcode to perform the right shift,\r\n            // taking advantage of the most significant (or \"sign\" bit) in two's complement representation.\r\n            // This opcode adds new most significant bits set to the value of the previous most significant bit. As a result,\r\n            // the mask will either be `bytes32(0)` (if n is positive) or `~bytes32(0)` (if n is negative).\r\n            int256 mask = n >> 255;\r\n\r\n            // A `bytes32(0)` mask leaves the input unchanged, while a `~bytes32(0)` mask complements it.\r\n            return uint256((n + mask) ^ mask);\r\n        }\r\n    }\r\n}\r\n"},"@openzeppelin/contracts/utils/Panic.sol":{"content":"// SPDX-License-Identifier: MIT\r\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/Panic.sol)\r\n\r\npragma solidity ^0.8.20;\r\n\r\n/**\r\n * @dev Helper library for emitting standardized panic codes.\r\n *\r\n * ```solidity\r\n * contract Example {\r\n *      using Panic for uint256;\r\n *\r\n *      // Use any of the declared internal constants\r\n *      function foo() { Panic.GENERIC.panic(); }\r\n *\r\n *      // Alternatively\r\n *      function foo() { Panic.panic(Panic.GENERIC); }\r\n * }\r\n * ```\r\n *\r\n * Follows the list from https://github.com/ethereum/solidity/blob/v0.8.24/libsolutil/ErrorCodes.h[libsolutil].\r\n *\r\n * _Available since v5.1._\r\n */\r\n// slither-disable-next-line unused-state\r\nlibrary Panic {\r\n    /// @dev generic / unspecified error\r\n    uint256 internal constant GENERIC = 0x00;\r\n    /// @dev used by the assert() builtin\r\n    uint256 internal constant ASSERT = 0x01;\r\n    /// @dev arithmetic underflow or overflow\r\n    uint256 internal constant UNDER_OVERFLOW = 0x11;\r\n    /// @dev division or modulo by zero\r\n    uint256 internal constant DIVISION_BY_ZERO = 0x12;\r\n    /// @dev enum conversion error\r\n    uint256 internal constant ENUM_CONVERSION_ERROR = 0x21;\r\n    /// @dev invalid encoding in storage\r\n    uint256 internal constant STORAGE_ENCODING_ERROR = 0x22;\r\n    /// @dev empty array pop\r\n    uint256 internal constant EMPTY_ARRAY_POP = 0x31;\r\n    /// @dev array out of bounds access\r\n    uint256 internal constant ARRAY_OUT_OF_BOUNDS = 0x32;\r\n    /// @dev resource error (too large allocation or too large array)\r\n    uint256 internal constant RESOURCE_ERROR = 0x41;\r\n    /// @dev calling invalid internal function\r\n    uint256 internal constant INVALID_INTERNAL_FUNCTION = 0x51;\r\n\r\n    /// @dev Reverts with a panic code. Recommended to use with\r\n    /// the internal constants with predefined codes.\r\n    function panic(uint256 code) internal pure {\r\n        assembly (\"memory-safe\") {\r\n            mstore(0x00, 0x4e487b71)\r\n            mstore(0x20, code)\r\n            revert(0x1c, 0x24)\r\n        }\r\n    }\r\n}\r\n"},"@openzeppelin/contracts/utils/StorageSlot.sol":{"content":"// SPDX-License-Identifier: MIT\r\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/StorageSlot.sol)\r\n// This file was procedurally generated from scripts/generate/templates/StorageSlot.js.\r\n\r\npragma solidity ^0.8.20;\r\n\r\n/**\r\n * @dev Library for reading and writing primitive types to specific storage slots.\r\n *\r\n * Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts.\r\n * This library helps with reading and writing to such slots without the need for inline assembly.\r\n *\r\n * The functions in this library return Slot structs that contain a `value` member that can be used to read or write.\r\n *\r\n * Example usage to set ERC-1967 implementation slot:\r\n * ```solidity\r\n * contract ERC1967 {\r\n *     // Define the slot. Alternatively, use the SlotDerivation library to derive the slot.\r\n *     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\r\n *\r\n *     function _getImplementation() internal view returns (address) {\r\n *         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\r\n *     }\r\n *\r\n *     function _setImplementation(address newImplementation) internal {\r\n *         require(newImplementation.code.length > 0);\r\n *         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\r\n *     }\r\n * }\r\n * ```\r\n *\r\n * TIP: Consider using this library along with {SlotDerivation}.\r\n */\r\nlibrary StorageSlot {\r\n    struct AddressSlot {\r\n        address value;\r\n    }\r\n\r\n    struct BooleanSlot {\r\n        bool value;\r\n    }\r\n\r\n    struct Bytes32Slot {\r\n        bytes32 value;\r\n    }\r\n\r\n    struct Uint256Slot {\r\n        uint256 value;\r\n    }\r\n\r\n    struct Int256Slot {\r\n        int256 value;\r\n    }\r\n\r\n    struct StringSlot {\r\n        string value;\r\n    }\r\n\r\n    struct BytesSlot {\r\n        bytes value;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns an `AddressSlot` with member `value` located at `slot`.\r\n     */\r\n    function getAddressSlot(bytes32 slot) internal pure returns (AddressSlot storage r) {\r\n        assembly (\"memory-safe\") {\r\n            r.slot := slot\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Returns a `BooleanSlot` with member `value` located at `slot`.\r\n     */\r\n    function getBooleanSlot(bytes32 slot) internal pure returns (BooleanSlot storage r) {\r\n        assembly (\"memory-safe\") {\r\n            r.slot := slot\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Returns a `Bytes32Slot` with member `value` located at `slot`.\r\n     */\r\n    function getBytes32Slot(bytes32 slot) internal pure returns (Bytes32Slot storage r) {\r\n        assembly (\"memory-safe\") {\r\n            r.slot := slot\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Returns a `Uint256Slot` with member `value` located at `slot`.\r\n     */\r\n    function getUint256Slot(bytes32 slot) internal pure returns (Uint256Slot storage r) {\r\n        assembly (\"memory-safe\") {\r\n            r.slot := slot\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Returns a `Int256Slot` with member `value` located at `slot`.\r\n     */\r\n    function getInt256Slot(bytes32 slot) internal pure returns (Int256Slot storage r) {\r\n        assembly (\"memory-safe\") {\r\n            r.slot := slot\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Returns a `StringSlot` with member `value` located at `slot`.\r\n     */\r\n    function getStringSlot(bytes32 slot) internal pure returns (StringSlot storage r) {\r\n        assembly (\"memory-safe\") {\r\n            r.slot := slot\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Returns an `StringSlot` representation of the string storage pointer `store`.\r\n     */\r\n    function getStringSlot(string storage store) internal pure returns (StringSlot storage r) {\r\n        assembly (\"memory-safe\") {\r\n            r.slot := store.slot\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Returns a `BytesSlot` with member `value` located at `slot`.\r\n     */\r\n    function getBytesSlot(bytes32 slot) internal pure returns (BytesSlot storage r) {\r\n        assembly (\"memory-safe\") {\r\n            r.slot := slot\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Returns an `BytesSlot` representation of the bytes storage pointer `store`.\r\n     */\r\n    function getBytesSlot(bytes storage store) internal pure returns (BytesSlot storage r) {\r\n        assembly (\"memory-safe\") {\r\n            r.slot := store.slot\r\n        }\r\n    }\r\n}\r\n"},"@openzeppelin/contracts/utils/Strings.sol":{"content":"// SPDX-License-Identifier: MIT\r\n// OpenZeppelin Contracts (last updated v5.3.0) (utils/Strings.sol)\r\n\r\npragma solidity ^0.8.20;\r\n\r\nimport {Math} from \"./math/Math.sol\";\r\nimport {SafeCast} from \"./math/SafeCast.sol\";\r\nimport {SignedMath} from \"./math/SignedMath.sol\";\r\n\r\n/**\r\n * @dev String operations.\r\n */\r\nlibrary Strings {\r\n    using SafeCast for *;\r\n\r\n    bytes16 private constant HEX_DIGITS = \"0123456789abcdef\";\r\n    uint8 private constant ADDRESS_LENGTH = 20;\r\n    uint256 private constant SPECIAL_CHARS_LOOKUP =\r\n        (1 << 0x08) | // backspace\r\n            (1 << 0x09) | // tab\r\n            (1 << 0x0a) | // newline\r\n            (1 << 0x0c) | // form feed\r\n            (1 << 0x0d) | // carriage return\r\n            (1 << 0x22) | // double quote\r\n            (1 << 0x5c); // backslash\r\n\r\n    /**\r\n     * @dev The `value` string doesn't fit in the specified `length`.\r\n     */\r\n    error StringsInsufficientHexLength(uint256 value, uint256 length);\r\n\r\n    /**\r\n     * @dev The string being parsed contains characters that are not in scope of the given base.\r\n     */\r\n    error StringsInvalidChar();\r\n\r\n    /**\r\n     * @dev The string being parsed is not a properly formatted address.\r\n     */\r\n    error StringsInvalidAddressFormat();\r\n\r\n    /**\r\n     * @dev Converts a `uint256` to its ASCII `string` decimal representation.\r\n     */\r\n    function toString(uint256 value) internal pure returns (string memory) {\r\n        unchecked {\r\n            uint256 length = Math.log10(value) + 1;\r\n            string memory buffer = new string(length);\r\n            uint256 ptr;\r\n            assembly (\"memory-safe\") {\r\n                ptr := add(buffer, add(32, length))\r\n            }\r\n            while (true) {\r\n                ptr--;\r\n                assembly (\"memory-safe\") {\r\n                    mstore8(ptr, byte(mod(value, 10), HEX_DIGITS))\r\n                }\r\n                value /= 10;\r\n                if (value == 0) break;\r\n            }\r\n            return buffer;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Converts a `int256` to its ASCII `string` decimal representation.\r\n     */\r\n    function toStringSigned(int256 value) internal pure returns (string memory) {\r\n        return string.concat(value < 0 ? \"-\" : \"\", toString(SignedMath.abs(value)));\r\n    }\r\n\r\n    /**\r\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation.\r\n     */\r\n    function toHexString(uint256 value) internal pure returns (string memory) {\r\n        unchecked {\r\n            return toHexString(value, Math.log256(value) + 1);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length.\r\n     */\r\n    function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {\r\n        uint256 localValue = value;\r\n        bytes memory buffer = new bytes(2 * length + 2);\r\n        buffer[0] = \"0\";\r\n        buffer[1] = \"x\";\r\n        for (uint256 i = 2 * length + 1; i > 1; --i) {\r\n            buffer[i] = HEX_DIGITS[localValue & 0xf];\r\n            localValue >>= 4;\r\n        }\r\n        if (localValue != 0) {\r\n            revert StringsInsufficientHexLength(value, length);\r\n        }\r\n        return string(buffer);\r\n    }\r\n\r\n    /**\r\n     * @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal\r\n     * representation.\r\n     */\r\n    function toHexString(address addr) internal pure returns (string memory) {\r\n        return toHexString(uint256(uint160(addr)), ADDRESS_LENGTH);\r\n    }\r\n\r\n    /**\r\n     * @dev Converts an `address` with fixed length of 20 bytes to its checksummed ASCII `string` hexadecimal\r\n     * representation, according to EIP-55.\r\n     */\r\n    function toChecksumHexString(address addr) internal pure returns (string memory) {\r\n        bytes memory buffer = bytes(toHexString(addr));\r\n\r\n        // hash the hex part of buffer (skip length + 2 bytes, length 40)\r\n        uint256 hashValue;\r\n        assembly (\"memory-safe\") {\r\n            hashValue := shr(96, keccak256(add(buffer, 0x22), 40))\r\n        }\r\n\r\n        for (uint256 i = 41; i > 1; --i) {\r\n            // possible values for buffer[i] are 48 (0) to 57 (9) and 97 (a) to 102 (f)\r\n            if (hashValue & 0xf > 7 && uint8(buffer[i]) > 96) {\r\n                // case shift by xoring with 0x20\r\n                buffer[i] ^= 0x20;\r\n            }\r\n            hashValue >>= 4;\r\n        }\r\n        return string(buffer);\r\n    }\r\n\r\n    /**\r\n     * @dev Returns true if the two strings are equal.\r\n     */\r\n    function equal(string memory a, string memory b) internal pure returns (bool) {\r\n        return bytes(a).length == bytes(b).length && keccak256(bytes(a)) == keccak256(bytes(b));\r\n    }\r\n\r\n    /**\r\n     * @dev Parse a decimal string and returns the value as a `uint256`.\r\n     *\r\n     * Requirements:\r\n     * - The string must be formatted as `[0-9]*`\r\n     * - The result must fit into an `uint256` type\r\n     */\r\n    function parseUint(string memory input) internal pure returns (uint256) {\r\n        return parseUint(input, 0, bytes(input).length);\r\n    }\r\n\r\n    /**\r\n     * @dev Variant of {parseUint-string} that parses a substring of `input` located between position `begin` (included) and\r\n     * `end` (excluded).\r\n     *\r\n     * Requirements:\r\n     * - The substring must be formatted as `[0-9]*`\r\n     * - The result must fit into an `uint256` type\r\n     */\r\n    function parseUint(string memory input, uint256 begin, uint256 end) internal pure returns (uint256) {\r\n        (bool success, uint256 value) = tryParseUint(input, begin, end);\r\n        if (!success) revert StringsInvalidChar();\r\n        return value;\r\n    }\r\n\r\n    /**\r\n     * @dev Variant of {parseUint-string} that returns false if the parsing fails because of an invalid character.\r\n     *\r\n     * NOTE: This function will revert if the result does not fit in a `uint256`.\r\n     */\r\n    function tryParseUint(string memory input) internal pure returns (bool success, uint256 value) {\r\n        return _tryParseUintUncheckedBounds(input, 0, bytes(input).length);\r\n    }\r\n\r\n    /**\r\n     * @dev Variant of {parseUint-string-uint256-uint256} that returns false if the parsing fails because of an invalid\r\n     * character.\r\n     *\r\n     * NOTE: This function will revert if the result does not fit in a `uint256`.\r\n     */\r\n    function tryParseUint(\r\n        string memory input,\r\n        uint256 begin,\r\n        uint256 end\r\n    ) internal pure returns (bool success, uint256 value) {\r\n        if (end > bytes(input).length || begin > end) return (false, 0);\r\n        return _tryParseUintUncheckedBounds(input, begin, end);\r\n    }\r\n\r\n    /**\r\n     * @dev Implementation of {tryParseUint-string-uint256-uint256} that does not check bounds. Caller should make sure that\r\n     * `begin <= end <= input.length`. Other inputs would result in undefined behavior.\r\n     */\r\n    function _tryParseUintUncheckedBounds(\r\n        string memory input,\r\n        uint256 begin,\r\n        uint256 end\r\n    ) private pure returns (bool success, uint256 value) {\r\n        bytes memory buffer = bytes(input);\r\n\r\n        uint256 result = 0;\r\n        for (uint256 i = begin; i < end; ++i) {\r\n            uint8 chr = _tryParseChr(bytes1(_unsafeReadBytesOffset(buffer, i)));\r\n            if (chr > 9) return (false, 0);\r\n            result *= 10;\r\n            result += chr;\r\n        }\r\n        return (true, result);\r\n    }\r\n\r\n    /**\r\n     * @dev Parse a decimal string and returns the value as a `int256`.\r\n     *\r\n     * Requirements:\r\n     * - The string must be formatted as `[-+]?[0-9]*`\r\n     * - The result must fit in an `int256` type.\r\n     */\r\n    function parseInt(string memory input) internal pure returns (int256) {\r\n        return parseInt(input, 0, bytes(input).length);\r\n    }\r\n\r\n    /**\r\n     * @dev Variant of {parseInt-string} that parses a substring of `input` located between position `begin` (included) and\r\n     * `end` (excluded).\r\n     *\r\n     * Requirements:\r\n     * - The substring must be formatted as `[-+]?[0-9]*`\r\n     * - The result must fit in an `int256` type.\r\n     */\r\n    function parseInt(string memory input, uint256 begin, uint256 end) internal pure returns (int256) {\r\n        (bool success, int256 value) = tryParseInt(input, begin, end);\r\n        if (!success) revert StringsInvalidChar();\r\n        return value;\r\n    }\r\n\r\n    /**\r\n     * @dev Variant of {parseInt-string} that returns false if the parsing fails because of an invalid character or if\r\n     * the result does not fit in a `int256`.\r\n     *\r\n     * NOTE: This function will revert if the absolute value of the result does not fit in a `uint256`.\r\n     */\r\n    function tryParseInt(string memory input) internal pure returns (bool success, int256 value) {\r\n        return _tryParseIntUncheckedBounds(input, 0, bytes(input).length);\r\n    }\r\n\r\n    uint256 private constant ABS_MIN_INT256 = 2 ** 255;\r\n\r\n    /**\r\n     * @dev Variant of {parseInt-string-uint256-uint256} that returns false if the parsing fails because of an invalid\r\n     * character or if the result does not fit in a `int256`.\r\n     *\r\n     * NOTE: This function will revert if the absolute value of the result does not fit in a `uint256`.\r\n     */\r\n    function tryParseInt(\r\n        string memory input,\r\n        uint256 begin,\r\n        uint256 end\r\n    ) internal pure returns (bool success, int256 value) {\r\n        if (end > bytes(input).length || begin > end) return (false, 0);\r\n        return _tryParseIntUncheckedBounds(input, begin, end);\r\n    }\r\n\r\n    /**\r\n     * @dev Implementation of {tryParseInt-string-uint256-uint256} that does not check bounds. Caller should make sure that\r\n     * `begin <= end <= input.length`. Other inputs would result in undefined behavior.\r\n     */\r\n    function _tryParseIntUncheckedBounds(\r\n        string memory input,\r\n        uint256 begin,\r\n        uint256 end\r\n    ) private pure returns (bool success, int256 value) {\r\n        bytes memory buffer = bytes(input);\r\n\r\n        // Check presence of a negative sign.\r\n        bytes1 sign = begin == end ? bytes1(0) : bytes1(_unsafeReadBytesOffset(buffer, begin)); // don't do out-of-bound (possibly unsafe) read if sub-string is empty\r\n        bool positiveSign = sign == bytes1(\"+\");\r\n        bool negativeSign = sign == bytes1(\"-\");\r\n        uint256 offset = (positiveSign || negativeSign).toUint();\r\n\r\n        (bool absSuccess, uint256 absValue) = tryParseUint(input, begin + offset, end);\r\n\r\n        if (absSuccess && absValue < ABS_MIN_INT256) {\r\n            return (true, negativeSign ? -int256(absValue) : int256(absValue));\r\n        } else if (absSuccess && negativeSign && absValue == ABS_MIN_INT256) {\r\n            return (true, type(int256).min);\r\n        } else return (false, 0);\r\n    }\r\n\r\n    /**\r\n     * @dev Parse a hexadecimal string (with or without \"0x\" prefix), and returns the value as a `uint256`.\r\n     *\r\n     * Requirements:\r\n     * - The string must be formatted as `(0x)?[0-9a-fA-F]*`\r\n     * - The result must fit in an `uint256` type.\r\n     */\r\n    function parseHexUint(string memory input) internal pure returns (uint256) {\r\n        return parseHexUint(input, 0, bytes(input).length);\r\n    }\r\n\r\n    /**\r\n     * @dev Variant of {parseHexUint-string} that parses a substring of `input` located between position `begin` (included) and\r\n     * `end` (excluded).\r\n     *\r\n     * Requirements:\r\n     * - The substring must be formatted as `(0x)?[0-9a-fA-F]*`\r\n     * - The result must fit in an `uint256` type.\r\n     */\r\n    function parseHexUint(string memory input, uint256 begin, uint256 end) internal pure returns (uint256) {\r\n        (bool success, uint256 value) = tryParseHexUint(input, begin, end);\r\n        if (!success) revert StringsInvalidChar();\r\n        return value;\r\n    }\r\n\r\n    /**\r\n     * @dev Variant of {parseHexUint-string} that returns false if the parsing fails because of an invalid character.\r\n     *\r\n     * NOTE: This function will revert if the result does not fit in a `uint256`.\r\n     */\r\n    function tryParseHexUint(string memory input) internal pure returns (bool success, uint256 value) {\r\n        return _tryParseHexUintUncheckedBounds(input, 0, bytes(input).length);\r\n    }\r\n\r\n    /**\r\n     * @dev Variant of {parseHexUint-string-uint256-uint256} that returns false if the parsing fails because of an\r\n     * invalid character.\r\n     *\r\n     * NOTE: This function will revert if the result does not fit in a `uint256`.\r\n     */\r\n    function tryParseHexUint(\r\n        string memory input,\r\n        uint256 begin,\r\n        uint256 end\r\n    ) internal pure returns (bool success, uint256 value) {\r\n        if (end > bytes(input).length || begin > end) return (false, 0);\r\n        return _tryParseHexUintUncheckedBounds(input, begin, end);\r\n    }\r\n\r\n    /**\r\n     * @dev Implementation of {tryParseHexUint-string-uint256-uint256} that does not check bounds. Caller should make sure that\r\n     * `begin <= end <= input.length`. Other inputs would result in undefined behavior.\r\n     */\r\n    function _tryParseHexUintUncheckedBounds(\r\n        string memory input,\r\n        uint256 begin,\r\n        uint256 end\r\n    ) private pure returns (bool success, uint256 value) {\r\n        bytes memory buffer = bytes(input);\r\n\r\n        // skip 0x prefix if present\r\n        bool hasPrefix = (end > begin + 1) && bytes2(_unsafeReadBytesOffset(buffer, begin)) == bytes2(\"0x\"); // don't do out-of-bound (possibly unsafe) read if sub-string is empty\r\n        uint256 offset = hasPrefix.toUint() * 2;\r\n\r\n        uint256 result = 0;\r\n        for (uint256 i = begin + offset; i < end; ++i) {\r\n            uint8 chr = _tryParseChr(bytes1(_unsafeReadBytesOffset(buffer, i)));\r\n            if (chr > 15) return (false, 0);\r\n            result *= 16;\r\n            unchecked {\r\n                // Multiplying by 16 is equivalent to a shift of 4 bits (with additional overflow check).\r\n                // This guarantees that adding a value < 16 will not cause an overflow, hence the unchecked.\r\n                result += chr;\r\n            }\r\n        }\r\n        return (true, result);\r\n    }\r\n\r\n    /**\r\n     * @dev Parse a hexadecimal string (with or without \"0x\" prefix), and returns the value as an `address`.\r\n     *\r\n     * Requirements:\r\n     * - The string must be formatted as `(0x)?[0-9a-fA-F]{40}`\r\n     */\r\n    function parseAddress(string memory input) internal pure returns (address) {\r\n        return parseAddress(input, 0, bytes(input).length);\r\n    }\r\n\r\n    /**\r\n     * @dev Variant of {parseAddress-string} that parses a substring of `input` located between position `begin` (included) and\r\n     * `end` (excluded).\r\n     *\r\n     * Requirements:\r\n     * - The substring must be formatted as `(0x)?[0-9a-fA-F]{40}`\r\n     */\r\n    function parseAddress(string memory input, uint256 begin, uint256 end) internal pure returns (address) {\r\n        (bool success, address value) = tryParseAddress(input, begin, end);\r\n        if (!success) revert StringsInvalidAddressFormat();\r\n        return value;\r\n    }\r\n\r\n    /**\r\n     * @dev Variant of {parseAddress-string} that returns false if the parsing fails because the input is not a properly\r\n     * formatted address. See {parseAddress-string} requirements.\r\n     */\r\n    function tryParseAddress(string memory input) internal pure returns (bool success, address value) {\r\n        return tryParseAddress(input, 0, bytes(input).length);\r\n    }\r\n\r\n    /**\r\n     * @dev Variant of {parseAddress-string-uint256-uint256} that returns false if the parsing fails because input is not a properly\r\n     * formatted address. See {parseAddress-string-uint256-uint256} requirements.\r\n     */\r\n    function tryParseAddress(\r\n        string memory input,\r\n        uint256 begin,\r\n        uint256 end\r\n    ) internal pure returns (bool success, address value) {\r\n        if (end > bytes(input).length || begin > end) return (false, address(0));\r\n\r\n        bool hasPrefix = (end > begin + 1) && bytes2(_unsafeReadBytesOffset(bytes(input), begin)) == bytes2(\"0x\"); // don't do out-of-bound (possibly unsafe) read if sub-string is empty\r\n        uint256 expectedLength = 40 + hasPrefix.toUint() * 2;\r\n\r\n        // check that input is the correct length\r\n        if (end - begin == expectedLength) {\r\n            // length guarantees that this does not overflow, and value is at most type(uint160).max\r\n            (bool s, uint256 v) = _tryParseHexUintUncheckedBounds(input, begin, end);\r\n            return (s, address(uint160(v)));\r\n        } else {\r\n            return (false, address(0));\r\n        }\r\n    }\r\n\r\n    function _tryParseChr(bytes1 chr) private pure returns (uint8) {\r\n        uint8 value = uint8(chr);\r\n\r\n        // Try to parse `chr`:\r\n        // - Case 1: [0-9]\r\n        // - Case 2: [a-f]\r\n        // - Case 3: [A-F]\r\n        // - otherwise not supported\r\n        unchecked {\r\n            if (value > 47 && value < 58) value -= 48;\r\n            else if (value > 96 && value < 103) value -= 87;\r\n            else if (value > 64 && value < 71) value -= 55;\r\n            else return type(uint8).max;\r\n        }\r\n\r\n        return value;\r\n    }\r\n\r\n    /**\r\n     * @dev Escape special characters in JSON strings. This can be useful to prevent JSON injection in NFT metadata.\r\n     *\r\n     * WARNING: This function should only be used in double quoted JSON strings. Single quotes are not escaped.\r\n     *\r\n     * NOTE: This function escapes all unicode characters, and not just the ones in ranges defined in section 2.5 of\r\n     * RFC-4627 (U+0000 to U+001F, U+0022 and U+005C). ECMAScript's `JSON.parse` does recover escaped unicode\r\n     * characters that are not in this range, but other tooling may provide different results.\r\n     */\r\n    function escapeJSON(string memory input) internal pure returns (string memory) {\r\n        bytes memory buffer = bytes(input);\r\n        bytes memory output = new bytes(2 * buffer.length); // worst case scenario\r\n        uint256 outputLength = 0;\r\n\r\n        for (uint256 i; i < buffer.length; ++i) {\r\n            bytes1 char = bytes1(_unsafeReadBytesOffset(buffer, i));\r\n            if (((SPECIAL_CHARS_LOOKUP & (1 << uint8(char))) != 0)) {\r\n                output[outputLength++] = \"\\\\\";\r\n                if (char == 0x08) output[outputLength++] = \"b\";\r\n                else if (char == 0x09) output[outputLength++] = \"t\";\r\n                else if (char == 0x0a) output[outputLength++] = \"n\";\r\n                else if (char == 0x0c) output[outputLength++] = \"f\";\r\n                else if (char == 0x0d) output[outputLength++] = \"r\";\r\n                else if (char == 0x5c) output[outputLength++] = \"\\\\\";\r\n                else if (char == 0x22) {\r\n                    // solhint-disable-next-line quotes\r\n                    output[outputLength++] = '\"';\r\n                }\r\n            } else {\r\n                output[outputLength++] = char;\r\n            }\r\n        }\r\n        // write the actual length and deallocate unused memory\r\n        assembly (\"memory-safe\") {\r\n            mstore(output, outputLength)\r\n            mstore(0x40, add(output, shl(5, shr(5, add(outputLength, 63)))))\r\n        }\r\n\r\n        return string(output);\r\n    }\r\n\r\n    /**\r\n     * @dev Reads a bytes32 from a bytes array without bounds checking.\r\n     *\r\n     * NOTE: making this function internal would mean it could be used with memory unsafe offset, and marking the\r\n     * assembly block as such would prevent some optimizations.\r\n     */\r\n    function _unsafeReadBytesOffset(bytes memory buffer, uint256 offset) private pure returns (bytes32 value) {\r\n        // This is not memory safe in the general case, but all calls to this private function are within bounds.\r\n        assembly (\"memory-safe\") {\r\n            value := mload(add(buffer, add(0x20, offset)))\r\n        }\r\n    }\r\n}\r\n"},"contracts/PADTokenV2.sol":{"content":"// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.20;\r\n\r\nimport \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\";\r\nimport \"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20PermitUpgradeable.sol\";\r\nimport \"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\";\r\nimport \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\";\r\nimport \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\";\r\nimport \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\";\r\n\r\n/**\r\n * @title PADTokenV2\r\n * @dev Upgradeable PAD Token with proxy support\r\n * @notice BEP-20 compatible token with upgradeability\r\n */\r\ncontract PADTokenV2 is Initializable, ERC20Upgradeable, ERC20PermitUpgradeable, PausableUpgradeable, AccessControlUpgradeable, UUPSUpgradeable {\r\n    \r\n    // Roles\r\n    bytes32 public constant PAUSER_ROLE = keccak256(\"PAUSER_ROLE\");\r\n    bytes32 public constant MINTER_ROLE = keccak256(\"MINTER_ROLE\");\r\n    \r\n    // State variables\r\n    address public gnosisSafe;\r\n    uint256 public cooldownPeriod;\r\n    mapping(address => uint256) public cooldowns;\r\n    \r\n    // Events\r\n    event GnosisSafeUpdated(address indexed oldSafe, address indexed newSafe);\r\n    event CooldownPeriodUpdated(uint256 oldPeriod, uint256 newPeriod);\r\n    event CooldownSet(address indexed account, uint256 cooldown);\r\n    \r\n    // Errors\r\n    error CooldownNotExpired(address account, uint256 cooldown);\r\n    \r\n    /// @custom:oz-upgrades-unsafe-allow constructor\r\n    constructor() {\r\n        _disableInitializers();\r\n    }\r\n    \r\n    /**\r\n     * @dev Initialize the token\r\n     * @param initialSupply Initial token supply (1 billion tokens)\r\n     */\r\n    function initialize(uint256 initialSupply) public initializer {\r\n        __ERC20_init(\"PAD Token\", \"PAD\");\r\n        __ERC20Permit_init(\"PAD Token\");\r\n        __Pausable_init();\r\n        __AccessControl_init();\r\n        __UUPSUpgradeable_init();\r\n        \r\n        // Set up roles\r\n        _grantRole(DEFAULT_ADMIN_ROLE, msg.sender);\r\n        _grantRole(PAUSER_ROLE, msg.sender);\r\n        _grantRole(MINTER_ROLE, msg.sender);\r\n        \r\n        // Mint initial supply\r\n        _mint(msg.sender, initialSupply);\r\n        \r\n        // Set default cooldown period (24 hours)\r\n        cooldownPeriod = 24 * 60 * 60;\r\n    }\r\n    \r\n    /**\r\n     * @dev Pause token transfers\r\n     */\r\n    function pause() public onlyRole(PAUSER_ROLE) {\r\n        _pause();\r\n    }\r\n    \r\n    /**\r\n     * @dev Unpause token transfers\r\n     */\r\n    function unpause() public onlyRole(PAUSER_ROLE) {\r\n        _unpause();\r\n    }\r\n    \r\n    /**\r\n     * @dev Set Gnosis Safe address\r\n     */\r\n    function setGnosisSafe(address _gnosisSafe) external onlyRole(DEFAULT_ADMIN_ROLE) {\r\n        address oldSafe = gnosisSafe;\r\n        gnosisSafe = _gnosisSafe;\r\n        emit GnosisSafeUpdated(oldSafe, _gnosisSafe);\r\n    }\r\n    \r\n    /**\r\n     * @dev Set cooldown period\r\n     */\r\n    function setCooldownPeriod(uint256 _cooldownPeriod) external onlyRole(DEFAULT_ADMIN_ROLE) {\r\n        uint256 oldPeriod = cooldownPeriod;\r\n        cooldownPeriod = _cooldownPeriod;\r\n        emit CooldownPeriodUpdated(oldPeriod, _cooldownPeriod);\r\n    }\r\n    \r\n    /**\r\n     * @dev Set cooldown for an account\r\n     */\r\n    function setCooldown(address account, uint256 cooldown) external onlyRole(DEFAULT_ADMIN_ROLE) {\r\n        cooldowns[account] = cooldown;\r\n        emit CooldownSet(account, cooldown);\r\n    }\r\n    \r\n    /**\r\n     * @dev Batch transfer function\r\n     */\r\n    function batchTransfer(address[] calldata recipients, uint256[] calldata amounts) external {\r\n        require(recipients.length == amounts.length, \"Arrays length mismatch\");\r\n        \r\n        for (uint256 i = 0; i < recipients.length; i++) {\r\n            _transfer(msg.sender, recipients[i], amounts[i]);\r\n        }\r\n    }\r\n    \r\n    /**\r\n     * @dev Override transfer to check cooldown\r\n     */\r\n    function _update(address from, address to, uint256 value) internal override virtual {\r\n        // Check cooldown for transfers (except minting and burning)\r\n        if (from != address(0) && to != address(0)) {\r\n            if (cooldowns[from] > block.timestamp) {\r\n                revert CooldownNotExpired(from, cooldowns[from]);\r\n            }\r\n        }\r\n        \r\n        super._update(from, to, value);\r\n    }\r\n    \r\n    /**\r\n     * @dev Authorize upgrade (only admin)\r\n     */\r\n    function _authorizeUpgrade(address newImplementation) internal override onlyRole(DEFAULT_ADMIN_ROLE) {\r\n        // Only admin can authorize upgrades\r\n    }\r\n    \r\n    /**\r\n     * @dev Get version\r\n     */\r\n    function version() external pure virtual returns (string memory) {\r\n        return \"2.0.0\";\r\n    }\r\n}\r\n"},"contracts/PADTokenV3.sol":{"content":"// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.20;\r\n\r\nimport \"./PADTokenV2.sol\";\r\n\r\n/**\r\n * @title PADTokenV3\r\n * @dev Version 3 with Blacklist functionality for token transfers\r\n * @notice Adds blacklist management to prevent certain addresses from transferring tokens\r\n */\r\ncontract PADTokenV3 is PADTokenV2 {\r\n    \r\n    // Blacklist mapping\r\n    mapping(address => bool) private _blacklisted;\r\n    \r\n    // Events\r\n    event AddressBlacklisted(address indexed account, address indexed admin);\r\n    event AddressRemovedFromBlacklist(address indexed account, address indexed admin);\r\n    \r\n    // Errors\r\n    error AddressIsBlacklisted(address account);\r\n    \r\n    /**\r\n     * @dev Initialize V3 - only callable once\r\n     */\r\n    function initializeV3() external reinitializer(3) {\r\n        // V3 initialization - blacklist functionality is ready\r\n    }\r\n    \r\n    /**\r\n     * @dev Check if address is blacklisted\r\n     * @param account Address to check\r\n     * @return bool True if blacklisted\r\n     */\r\n    function isBlacklisted(address account) external view returns (bool) {\r\n        return _blacklisted[account];\r\n    }\r\n    \r\n    /**\r\n     * @dev Add address to blacklist (Admin only)\r\n     * @param account Address to blacklist\r\n     */\r\n    function addToBlacklist(address account) external onlyRole(DEFAULT_ADMIN_ROLE) {\r\n        require(account != address(0), \"Cannot blacklist zero address\");\r\n        require(!_blacklisted[account], \"Address already blacklisted\");\r\n        \r\n        _blacklisted[account] = true;\r\n        emit AddressBlacklisted(account, msg.sender);\r\n    }\r\n    \r\n    /**\r\n     * @dev Remove address from blacklist (Admin only)\r\n     * @param account Address to remove from blacklist\r\n     */\r\n    function removeFromBlacklist(address account) external onlyRole(DEFAULT_ADMIN_ROLE) {\r\n        require(_blacklisted[account], \"Address not blacklisted\");\r\n        \r\n        _blacklisted[account] = false;\r\n        emit AddressRemovedFromBlacklist(account, msg.sender);\r\n    }\r\n    \r\n    /**\r\n     * @dev Batch add addresses to blacklist (Admin only)\r\n     * @param accounts Array of addresses to blacklist\r\n     */\r\n    function batchAddToBlacklist(address[] calldata accounts) external onlyRole(DEFAULT_ADMIN_ROLE) {\r\n        for (uint256 i = 0; i < accounts.length; i++) {\r\n            address account = accounts[i];\r\n            if (account != address(0) && !_blacklisted[account]) {\r\n                _blacklisted[account] = true;\r\n                emit AddressBlacklisted(account, msg.sender);\r\n            }\r\n        }\r\n    }\r\n    \r\n    /**\r\n     * @dev Batch remove addresses from blacklist (Admin only)\r\n     * @param accounts Array of addresses to remove from blacklist\r\n     */\r\n    function batchRemoveFromBlacklist(address[] calldata accounts) external onlyRole(DEFAULT_ADMIN_ROLE) {\r\n        for (uint256 i = 0; i < accounts.length; i++) {\r\n            address account = accounts[i];\r\n            if (_blacklisted[account]) {\r\n                _blacklisted[account] = false;\r\n                emit AddressRemovedFromBlacklist(account, msg.sender);\r\n            }\r\n        }\r\n    }\r\n    \r\n    /**\r\n     * @dev Modifier to check if address is not blacklisted\r\n     */\r\n    modifier notBlacklisted(address account) {\r\n        if (_blacklisted[account]) {\r\n            revert AddressIsBlacklisted(account);\r\n        }\r\n        _;\r\n    }\r\n    \r\n    /**\r\n     * @dev Override _update to check blacklist for transfers\r\n     */\r\n    function _update(address from, address to, uint256 value) internal override notBlacklisted(from) notBlacklisted(to) {\r\n        // Check cooldown for transfers (except minting and burning)\r\n        if (from != address(0) && to != address(0)) {\r\n            if (cooldowns[from] > block.timestamp) {\r\n                revert CooldownNotExpired(from, cooldowns[from]);\r\n            }\r\n        }\r\n        \r\n        super._update(from, to, value);\r\n    }\r\n    \r\n    /**\r\n     * @dev Get blacklist status for multiple addresses\r\n     * @param accounts Array of addresses to check\r\n     * @return statuses Array of blacklist statuses\r\n     */\r\n    function getBlacklistStatus(address[] calldata accounts) external view returns (bool[] memory statuses) {\r\n        statuses = new bool[](accounts.length);\r\n        for (uint256 i = 0; i < accounts.length; i++) {\r\n            statuses[i] = _blacklisted[accounts[i]];\r\n        }\r\n    }\r\n    \r\n    /**\r\n     * @dev Get version of the contract\r\n     * @return string Version string\r\n     */\r\n    function version() external pure override returns (string memory) {\r\n        return \"3.0.0\";\r\n    }\r\n}\r\n"}},"settings":{"optimizer":{"enabled":true,"runs":200},"evmVersion":"paris","outputSelection":{"*":{"*":["abi","evm.bytecode","evm.deployedBytecode","evm.methodIdentifiers","metadata","storageLayout"],"":["ast"]}}}},"output":{"sources":{"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol","exportedSymbols":{"AccessControlUpgradeable":[364],"ContextUpgradeable":[1646],"ERC165Upgradeable":[2301],"IAccessControl":[2384],"IERC165":[5327],"Initializable":[632]},"id":365,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"108:24:0"},{"absolutePath":"@openzeppelin/contracts/access/IAccessControl.sol","file":"@openzeppelin/contracts/access/IAccessControl.sol","id":3,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":365,"sourceUnit":2385,"src":"134:81:0","symbolAliases":[{"foreign":{"id":2,"name":"IAccessControl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2384,"src":"142:14:0","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol","file":"../utils/ContextUpgradeable.sol","id":5,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":365,"sourceUnit":1647,"src":"216:67:0","symbolAliases":[{"foreign":{"id":4,"name":"ContextUpgradeable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1646,"src":"224:18:0","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/introspection/IERC165.sol","file":"@openzeppelin/contracts/utils/introspection/IERC165.sol","id":7,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":365,"sourceUnit":5328,"src":"284:80:0","symbolAliases":[{"foreign":{"id":6,"name":"IERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5327,"src":"292:7:0","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol","file":"../utils/introspection/ERC165Upgradeable.sol","id":9,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":365,"sourceUnit":2302,"src":"365:79:0","symbolAliases":[{"foreign":{"id":8,"name":"ERC165Upgradeable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2301,"src":"373:17:0","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol","file":"../proxy/utils/Initializable.sol","id":11,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":365,"sourceUnit":633,"src":"445:63:0","symbolAliases":[{"foreign":{"id":10,"name":"Initializable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":632,"src":"453:13:0","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":13,"name":"Initializable","nameLocations":["2217:13:0"],"nodeType":"IdentifierPath","referencedDeclaration":632,"src":"2217:13:0"},"id":14,"nodeType":"InheritanceSpecifier","src":"2217:13:0"},{"baseName":{"id":15,"name":"ContextUpgradeable","nameLocations":["2232:18:0"],"nodeType":"IdentifierPath","referencedDeclaration":1646,"src":"2232:18:0"},"id":16,"nodeType":"InheritanceSpecifier","src":"2232:18:0"},{"baseName":{"id":17,"name":"IAccessControl","nameLocations":["2252:14:0"],"nodeType":"IdentifierPath","referencedDeclaration":2384,"src":"2252:14:0"},"id":18,"nodeType":"InheritanceSpecifier","src":"2252:14:0"},{"baseName":{"id":19,"name":"ERC165Upgradeable","nameLocations":["2268:17:0"],"nodeType":"IdentifierPath","referencedDeclaration":2301,"src":"2268:17:0"},"id":20,"nodeType":"InheritanceSpecifier","src":"2268:17:0"}],"canonicalName":"AccessControlUpgradeable","contractDependencies":[],"contractKind":"contract","documentation":{"id":12,"nodeType":"StructuredDocumentation","src":"510:1660:0","text":" @dev Contract module that allows children to implement role-based access\n control mechanisms. This is a lightweight version that doesn't allow enumerating role\n members except through off-chain means by accessing the contract event logs. Some\n applications may benefit from on-chain enumerability, for those cases see\n {AccessControlEnumerable}.\n Roles are referred to by their `bytes32` identifier. These should be exposed\n in the external API and be unique. The best way to achieve this is by\n using `public constant` hash digests:\n ```solidity\n bytes32 public constant MY_ROLE = keccak256(\"MY_ROLE\");\n ```\n Roles can be used to represent a set of permissions. To restrict access to a\n function call, use {hasRole}:\n ```solidity\n function foo() public {\n     require(hasRole(MY_ROLE, msg.sender));\n     ...\n }\n ```\n Roles can be granted and revoked dynamically via the {grantRole} and\n {revokeRole} functions. Each role has an associated admin role, and only\n accounts that have a role's admin role can call {grantRole} and {revokeRole}.\n By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means\n that only accounts with this role will be able to grant or revoke other\n roles. More complex role relationships can be created by using\n {_setRoleAdmin}.\n WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to\n grant and revoke this role. Extra precautions should be taken to secure\n accounts that have been granted it. We recommend using {AccessControlDefaultAdminRules}\n to enforce additional security measures for this role."},"fullyImplemented":true,"id":364,"linearizedBaseContracts":[364,2301,5327,2384,1646,632],"name":"AccessControlUpgradeable","nameLocation":"2189:24:0","nodeType":"ContractDefinition","nodes":[{"canonicalName":"AccessControlUpgradeable.RoleData","id":27,"members":[{"constant":false,"id":24,"mutability":"mutable","name":"hasRole","nameLocation":"2351:7:0","nodeType":"VariableDeclaration","scope":27,"src":"2318:40:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"},"typeName":{"id":23,"keyName":"account","keyNameLocation":"2334:7:0","keyType":{"id":21,"name":"address","nodeType":"ElementaryTypeName","src":"2326:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"2318:32:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":22,"name":"bool","nodeType":"ElementaryTypeName","src":"2345:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}},"visibility":"internal"},{"constant":false,"id":26,"mutability":"mutable","name":"adminRole","nameLocation":"2376:9:0","nodeType":"VariableDeclaration","scope":27,"src":"2368:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":25,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2368:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"name":"RoleData","nameLocation":"2299:8:0","nodeType":"StructDefinition","scope":364,"src":"2292:100:0","visibility":"public"},{"constant":true,"functionSelector":"a217fddf","id":30,"mutability":"constant","name":"DEFAULT_ADMIN_ROLE","nameLocation":"2422:18:0","nodeType":"VariableDeclaration","scope":364,"src":"2398:49:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":28,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2398:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"hexValue":"30783030","id":29,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2443:4:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0x00"},"visibility":"public"},{"canonicalName":"AccessControlUpgradeable.AccessControlStorage","documentation":{"id":31,"nodeType":"StructuredDocumentation","src":"2455:71:0","text":"@custom:storage-location erc7201:openzeppelin.storage.AccessControl"},"id":37,"members":[{"constant":false,"id":36,"mutability":"mutable","name":"_roles","nameLocation":"2603:6:0","nodeType":"VariableDeclaration","scope":37,"src":"2569:40:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_RoleData_$27_storage_$","typeString":"mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"},"typeName":{"id":35,"keyName":"role","keyNameLocation":"2585:4:0","keyType":{"id":32,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2577:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Mapping","src":"2569:33:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_RoleData_$27_storage_$","typeString":"mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":34,"nodeType":"UserDefinedTypeName","pathNode":{"id":33,"name":"RoleData","nameLocations":["2593:8:0"],"nodeType":"IdentifierPath","referencedDeclaration":27,"src":"2593:8:0"},"referencedDeclaration":27,"src":"2593:8:0","typeDescriptions":{"typeIdentifier":"t_struct$_RoleData_$27_storage_ptr","typeString":"struct AccessControlUpgradeable.RoleData"}}},"visibility":"internal"}],"name":"AccessControlStorage","nameLocation":"2538:20:0","nodeType":"StructDefinition","scope":364,"src":"2531:85:0","visibility":"public"},{"constant":true,"id":40,"mutability":"constant","name":"AccessControlStorageLocation","nameLocation":"2764:28:0","nodeType":"VariableDeclaration","scope":364,"src":"2739:122:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":38,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2739:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"hexValue":"307830326464376263376465633464636565646461373735653538646435343165303861313136633663353338313563306264303238313932663762363236383030","id":39,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2795:66:0","typeDescriptions":{"typeIdentifier":"t_rational_1295953201772911215391058989745868821651057887752387839782086074958115661824_by_1","typeString":"int_const 1295...(68 digits omitted)...1824"},"value":"0x02dd7bc7dec4dceedda775e58dd541e08a116c6c53815c0bd028192f7b626800"},"visibility":"private"},{"body":{"id":47,"nodeType":"Block","src":"2958:87:0","statements":[{"AST":{"nativeSrc":"2977:62:0","nodeType":"YulBlock","src":"2977:62:0","statements":[{"nativeSrc":"2991:38:0","nodeType":"YulAssignment","src":"2991:38:0","value":{"name":"AccessControlStorageLocation","nativeSrc":"3001:28:0","nodeType":"YulIdentifier","src":"3001:28:0"},"variableNames":[{"name":"$.slot","nativeSrc":"2991:6:0","nodeType":"YulIdentifier","src":"2991:6:0"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":44,"isOffset":false,"isSlot":true,"src":"2991:6:0","suffix":"slot","valueSize":1},{"declaration":40,"isOffset":false,"isSlot":false,"src":"3001:28:0","valueSize":1}],"id":46,"nodeType":"InlineAssembly","src":"2968:71:0"}]},"id":48,"implemented":true,"kind":"function","modifiers":[],"name":"_getAccessControlStorage","nameLocation":"2877:24:0","nodeType":"FunctionDefinition","parameters":{"id":41,"nodeType":"ParameterList","parameters":[],"src":"2901:2:0"},"returnParameters":{"id":45,"nodeType":"ParameterList","parameters":[{"constant":false,"id":44,"mutability":"mutable","name":"$","nameLocation":"2955:1:0","nodeType":"VariableDeclaration","scope":48,"src":"2926:30:0","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_AccessControlStorage_$37_storage_ptr","typeString":"struct AccessControlUpgradeable.AccessControlStorage"},"typeName":{"id":43,"nodeType":"UserDefinedTypeName","pathNode":{"id":42,"name":"AccessControlStorage","nameLocations":["2926:20:0"],"nodeType":"IdentifierPath","referencedDeclaration":37,"src":"2926:20:0"},"referencedDeclaration":37,"src":"2926:20:0","typeDescriptions":{"typeIdentifier":"t_struct$_AccessControlStorage_$37_storage_ptr","typeString":"struct AccessControlUpgradeable.AccessControlStorage"}},"visibility":"internal"}],"src":"2925:32:0"},"scope":364,"src":"2868:177:0","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":58,"nodeType":"Block","src":"3262:44:0","statements":[{"expression":{"arguments":[{"id":54,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":51,"src":"3283:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":53,"name":"_checkRole","nodeType":"Identifier","overloadedDeclarations":[131,152],"referencedDeclaration":131,"src":"3272:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$returns$__$","typeString":"function (bytes32) view"}},"id":55,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3272:16:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":56,"nodeType":"ExpressionStatement","src":"3272:16:0"},{"id":57,"nodeType":"PlaceholderStatement","src":"3298:1:0"}]},"documentation":{"id":49,"nodeType":"StructuredDocumentation","src":"3051:174:0","text":" @dev Modifier that checks that an account has a specific role. Reverts\n with an {AccessControlUnauthorizedAccount} error including the required role."},"id":59,"name":"onlyRole","nameLocation":"3239:8:0","nodeType":"ModifierDefinition","parameters":{"id":52,"nodeType":"ParameterList","parameters":[{"constant":false,"id":51,"mutability":"mutable","name":"role","nameLocation":"3256:4:0","nodeType":"VariableDeclaration","scope":59,"src":"3248:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":50,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3248:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3247:14:0"},"src":"3230:76:0","virtual":false,"visibility":"internal"},{"body":{"id":64,"nodeType":"Block","src":"3370:7:0","statements":[]},"id":65,"implemented":true,"kind":"function","modifiers":[{"id":62,"kind":"modifierInvocation","modifierName":{"id":61,"name":"onlyInitializing","nameLocations":["3353:16:0"],"nodeType":"IdentifierPath","referencedDeclaration":527,"src":"3353:16:0"},"nodeType":"ModifierInvocation","src":"3353:16:0"}],"name":"__AccessControl_init","nameLocation":"3321:20:0","nodeType":"FunctionDefinition","parameters":{"id":60,"nodeType":"ParameterList","parameters":[],"src":"3341:2:0"},"returnParameters":{"id":63,"nodeType":"ParameterList","parameters":[],"src":"3370:0:0"},"scope":364,"src":"3312:65:0","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":70,"nodeType":"Block","src":"3451:7:0","statements":[]},"id":71,"implemented":true,"kind":"function","modifiers":[{"id":68,"kind":"modifierInvocation","modifierName":{"id":67,"name":"onlyInitializing","nameLocations":["3434:16:0"],"nodeType":"IdentifierPath","referencedDeclaration":527,"src":"3434:16:0"},"nodeType":"ModifierInvocation","src":"3434:16:0"}],"name":"__AccessControl_init_unchained","nameLocation":"3392:30:0","nodeType":"FunctionDefinition","parameters":{"id":66,"nodeType":"ParameterList","parameters":[],"src":"3422:2:0"},"returnParameters":{"id":69,"nodeType":"ParameterList","parameters":[],"src":"3451:0:0"},"scope":364,"src":"3383:75:0","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"baseFunctions":[2300],"body":{"id":92,"nodeType":"Block","src":"3582:111:0","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":90,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":85,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":80,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":74,"src":"3599:11:0","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":82,"name":"IAccessControl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2384,"src":"3619:14:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IAccessControl_$2384_$","typeString":"type(contract IAccessControl)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_contract$_IAccessControl_$2384_$","typeString":"type(contract IAccessControl)"}],"id":81,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"3614:4:0","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":83,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3614:20:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_contract$_IAccessControl_$2384","typeString":"type(contract IAccessControl)"}},"id":84,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3635:11:0","memberName":"interfaceId","nodeType":"MemberAccess","src":"3614:32:0","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"3599:47:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"arguments":[{"id":88,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":74,"src":"3674:11:0","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"}],"expression":{"id":86,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"3650:5:0","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_AccessControlUpgradeable_$364_$","typeString":"type(contract super AccessControlUpgradeable)"}},"id":87,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3656:17:0","memberName":"supportsInterface","nodeType":"MemberAccess","referencedDeclaration":2300,"src":"3650:23:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes4_$returns$_t_bool_$","typeString":"function (bytes4) view returns (bool)"}},"id":89,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3650:36:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"3599:87:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":79,"id":91,"nodeType":"Return","src":"3592:94:0"}]},"documentation":{"id":72,"nodeType":"StructuredDocumentation","src":"3463:23:0","text":"@inheritdoc IERC165"},"functionSelector":"01ffc9a7","id":93,"implemented":true,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"3500:17:0","nodeType":"FunctionDefinition","overrides":{"id":76,"nodeType":"OverrideSpecifier","overrides":[],"src":"3558:8:0"},"parameters":{"id":75,"nodeType":"ParameterList","parameters":[{"constant":false,"id":74,"mutability":"mutable","name":"interfaceId","nameLocation":"3525:11:0","nodeType":"VariableDeclaration","scope":93,"src":"3518:18:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":73,"name":"bytes4","nodeType":"ElementaryTypeName","src":"3518:6:0","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"3517:20:0"},"returnParameters":{"id":79,"nodeType":"ParameterList","parameters":[{"constant":false,"id":78,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":93,"src":"3576:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":77,"name":"bool","nodeType":"ElementaryTypeName","src":"3576:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3575:6:0"},"scope":364,"src":"3491:202:0","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[2351],"body":{"id":117,"nodeType":"Block","src":"3863:124:0","statements":[{"assignments":[105],"declarations":[{"constant":false,"id":105,"mutability":"mutable","name":"$","nameLocation":"3902:1:0","nodeType":"VariableDeclaration","scope":117,"src":"3873:30:0","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_AccessControlStorage_$37_storage_ptr","typeString":"struct AccessControlUpgradeable.AccessControlStorage"},"typeName":{"id":104,"nodeType":"UserDefinedTypeName","pathNode":{"id":103,"name":"AccessControlStorage","nameLocations":["3873:20:0"],"nodeType":"IdentifierPath","referencedDeclaration":37,"src":"3873:20:0"},"referencedDeclaration":37,"src":"3873:20:0","typeDescriptions":{"typeIdentifier":"t_struct$_AccessControlStorage_$37_storage_ptr","typeString":"struct AccessControlUpgradeable.AccessControlStorage"}},"visibility":"internal"}],"id":108,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":106,"name":"_getAccessControlStorage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":48,"src":"3906:24:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_AccessControlStorage_$37_storage_ptr_$","typeString":"function () pure returns (struct AccessControlUpgradeable.AccessControlStorage storage pointer)"}},"id":107,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3906:26:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_AccessControlStorage_$37_storage_ptr","typeString":"struct AccessControlUpgradeable.AccessControlStorage storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"3873:59:0"},{"expression":{"baseExpression":{"expression":{"baseExpression":{"expression":{"id":109,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":105,"src":"3949:1:0","typeDescriptions":{"typeIdentifier":"t_struct$_AccessControlStorage_$37_storage_ptr","typeString":"struct AccessControlUpgradeable.AccessControlStorage storage pointer"}},"id":110,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3951:6:0","memberName":"_roles","nodeType":"MemberAccess","referencedDeclaration":36,"src":"3949:8:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_RoleData_$27_storage_$","typeString":"mapping(bytes32 => struct AccessControlUpgradeable.RoleData storage ref)"}},"id":112,"indexExpression":{"id":111,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":96,"src":"3958:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3949:14:0","typeDescriptions":{"typeIdentifier":"t_struct$_RoleData_$27_storage","typeString":"struct AccessControlUpgradeable.RoleData storage ref"}},"id":113,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3964:7:0","memberName":"hasRole","nodeType":"MemberAccess","referencedDeclaration":24,"src":"3949:22:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":115,"indexExpression":{"id":114,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":98,"src":"3972:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3949:31:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":102,"id":116,"nodeType":"Return","src":"3942:38:0"}]},"documentation":{"id":94,"nodeType":"StructuredDocumentation","src":"3699:76:0","text":" @dev Returns `true` if `account` has been granted `role`."},"functionSelector":"91d14854","id":118,"implemented":true,"kind":"function","modifiers":[],"name":"hasRole","nameLocation":"3789:7:0","nodeType":"FunctionDefinition","parameters":{"id":99,"nodeType":"ParameterList","parameters":[{"constant":false,"id":96,"mutability":"mutable","name":"role","nameLocation":"3805:4:0","nodeType":"VariableDeclaration","scope":118,"src":"3797:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":95,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3797:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":98,"mutability":"mutable","name":"account","nameLocation":"3819:7:0","nodeType":"VariableDeclaration","scope":118,"src":"3811:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":97,"name":"address","nodeType":"ElementaryTypeName","src":"3811:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3796:31:0"},"returnParameters":{"id":102,"nodeType":"ParameterList","parameters":[{"constant":false,"id":101,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":118,"src":"3857:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":100,"name":"bool","nodeType":"ElementaryTypeName","src":"3857:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3856:6:0"},"scope":364,"src":"3780:207:0","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":130,"nodeType":"Block","src":"4252:47:0","statements":[{"expression":{"arguments":[{"id":125,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":121,"src":"4273:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"arguments":[],"expression":{"argumentTypes":[],"id":126,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1628,"src":"4279:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":127,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4279:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":124,"name":"_checkRole","nodeType":"Identifier","overloadedDeclarations":[131,152],"referencedDeclaration":152,"src":"4262:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_address_$returns$__$","typeString":"function (bytes32,address) view"}},"id":128,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4262:30:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":129,"nodeType":"ExpressionStatement","src":"4262:30:0"}]},"documentation":{"id":119,"nodeType":"StructuredDocumentation","src":"3993:198:0","text":" @dev Reverts with an {AccessControlUnauthorizedAccount} error if `_msgSender()`\n is missing `role`. Overriding this function changes the behavior of the {onlyRole} modifier."},"id":131,"implemented":true,"kind":"function","modifiers":[],"name":"_checkRole","nameLocation":"4205:10:0","nodeType":"FunctionDefinition","parameters":{"id":122,"nodeType":"ParameterList","parameters":[{"constant":false,"id":121,"mutability":"mutable","name":"role","nameLocation":"4224:4:0","nodeType":"VariableDeclaration","scope":131,"src":"4216:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":120,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4216:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4215:14:0"},"returnParameters":{"id":123,"nodeType":"ParameterList","parameters":[],"src":"4252:0:0"},"scope":364,"src":"4196:103:0","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":151,"nodeType":"Block","src":"4502:124:0","statements":[{"condition":{"id":143,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"4516:23:0","subExpression":{"arguments":[{"id":140,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":134,"src":"4525:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":141,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":136,"src":"4531:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":139,"name":"hasRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":118,"src":"4517:7:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) view returns (bool)"}},"id":142,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4517:22:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":150,"nodeType":"IfStatement","src":"4512:108:0","trueBody":{"id":149,"nodeType":"Block","src":"4541:79:0","statements":[{"errorCall":{"arguments":[{"id":145,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":136,"src":"4595:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":146,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":134,"src":"4604:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":144,"name":"AccessControlUnauthorizedAccount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2311,"src":"4562:32:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$_t_bytes32_$returns$_t_error_$","typeString":"function (address,bytes32) pure returns (error)"}},"id":147,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4562:47:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":148,"nodeType":"RevertStatement","src":"4555:54:0"}]}}]},"documentation":{"id":132,"nodeType":"StructuredDocumentation","src":"4305:119:0","text":" @dev Reverts with an {AccessControlUnauthorizedAccount} error if `account`\n is missing `role`."},"id":152,"implemented":true,"kind":"function","modifiers":[],"name":"_checkRole","nameLocation":"4438:10:0","nodeType":"FunctionDefinition","parameters":{"id":137,"nodeType":"ParameterList","parameters":[{"constant":false,"id":134,"mutability":"mutable","name":"role","nameLocation":"4457:4:0","nodeType":"VariableDeclaration","scope":152,"src":"4449:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":133,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4449:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":136,"mutability":"mutable","name":"account","nameLocation":"4471:7:0","nodeType":"VariableDeclaration","scope":152,"src":"4463:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":135,"name":"address","nodeType":"ElementaryTypeName","src":"4463:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4448:31:0"},"returnParameters":{"id":138,"nodeType":"ParameterList","parameters":[],"src":"4502:0:0"},"scope":364,"src":"4429:197:0","stateMutability":"view","virtual":true,"visibility":"internal"},{"baseFunctions":[2359],"body":{"id":172,"nodeType":"Block","src":"4881:117:0","statements":[{"assignments":[162],"declarations":[{"constant":false,"id":162,"mutability":"mutable","name":"$","nameLocation":"4920:1:0","nodeType":"VariableDeclaration","scope":172,"src":"4891:30:0","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_AccessControlStorage_$37_storage_ptr","typeString":"struct AccessControlUpgradeable.AccessControlStorage"},"typeName":{"id":161,"nodeType":"UserDefinedTypeName","pathNode":{"id":160,"name":"AccessControlStorage","nameLocations":["4891:20:0"],"nodeType":"IdentifierPath","referencedDeclaration":37,"src":"4891:20:0"},"referencedDeclaration":37,"src":"4891:20:0","typeDescriptions":{"typeIdentifier":"t_struct$_AccessControlStorage_$37_storage_ptr","typeString":"struct AccessControlUpgradeable.AccessControlStorage"}},"visibility":"internal"}],"id":165,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":163,"name":"_getAccessControlStorage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":48,"src":"4924:24:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_AccessControlStorage_$37_storage_ptr_$","typeString":"function () pure returns (struct AccessControlUpgradeable.AccessControlStorage storage pointer)"}},"id":164,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4924:26:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_AccessControlStorage_$37_storage_ptr","typeString":"struct AccessControlUpgradeable.AccessControlStorage storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"4891:59:0"},{"expression":{"expression":{"baseExpression":{"expression":{"id":166,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":162,"src":"4967:1:0","typeDescriptions":{"typeIdentifier":"t_struct$_AccessControlStorage_$37_storage_ptr","typeString":"struct AccessControlUpgradeable.AccessControlStorage storage pointer"}},"id":167,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4969:6:0","memberName":"_roles","nodeType":"MemberAccess","referencedDeclaration":36,"src":"4967:8:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_RoleData_$27_storage_$","typeString":"mapping(bytes32 => struct AccessControlUpgradeable.RoleData storage ref)"}},"id":169,"indexExpression":{"id":168,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":155,"src":"4976:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4967:14:0","typeDescriptions":{"typeIdentifier":"t_struct$_RoleData_$27_storage","typeString":"struct AccessControlUpgradeable.RoleData storage ref"}},"id":170,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4982:9:0","memberName":"adminRole","nodeType":"MemberAccess","referencedDeclaration":26,"src":"4967:24:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":159,"id":171,"nodeType":"Return","src":"4960:31:0"}]},"documentation":{"id":153,"nodeType":"StructuredDocumentation","src":"4632:170:0","text":" @dev Returns the admin role that controls `role`. See {grantRole} and\n {revokeRole}.\n To change a role's admin, use {_setRoleAdmin}."},"functionSelector":"248a9ca3","id":173,"implemented":true,"kind":"function","modifiers":[],"name":"getRoleAdmin","nameLocation":"4816:12:0","nodeType":"FunctionDefinition","parameters":{"id":156,"nodeType":"ParameterList","parameters":[{"constant":false,"id":155,"mutability":"mutable","name":"role","nameLocation":"4837:4:0","nodeType":"VariableDeclaration","scope":173,"src":"4829:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":154,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4829:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4828:14:0"},"returnParameters":{"id":159,"nodeType":"ParameterList","parameters":[{"constant":false,"id":158,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":173,"src":"4872:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":157,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4872:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4871:9:0"},"scope":364,"src":"4807:191:0","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[2367],"body":{"id":191,"nodeType":"Block","src":"5388:42:0","statements":[{"expression":{"arguments":[{"id":187,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":176,"src":"5409:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":188,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":178,"src":"5415:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":186,"name":"_grantRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":317,"src":"5398:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) returns (bool)"}},"id":189,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5398:25:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":190,"nodeType":"ExpressionStatement","src":"5398:25:0"}]},"documentation":{"id":174,"nodeType":"StructuredDocumentation","src":"5004:285:0","text":" @dev Grants `role` to `account`.\n If `account` had not been already granted `role`, emits a {RoleGranted}\n event.\n Requirements:\n - the caller must have ``role``'s admin role.\n May emit a {RoleGranted} event."},"functionSelector":"2f2ff15d","id":192,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"arguments":[{"id":182,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":176,"src":"5381:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":181,"name":"getRoleAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":173,"src":"5368:12:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32) view returns (bytes32)"}},"id":183,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5368:18:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":184,"kind":"modifierInvocation","modifierName":{"id":180,"name":"onlyRole","nameLocations":["5359:8:0"],"nodeType":"IdentifierPath","referencedDeclaration":59,"src":"5359:8:0"},"nodeType":"ModifierInvocation","src":"5359:28:0"}],"name":"grantRole","nameLocation":"5303:9:0","nodeType":"FunctionDefinition","parameters":{"id":179,"nodeType":"ParameterList","parameters":[{"constant":false,"id":176,"mutability":"mutable","name":"role","nameLocation":"5321:4:0","nodeType":"VariableDeclaration","scope":192,"src":"5313:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":175,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5313:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":178,"mutability":"mutable","name":"account","nameLocation":"5335:7:0","nodeType":"VariableDeclaration","scope":192,"src":"5327:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":177,"name":"address","nodeType":"ElementaryTypeName","src":"5327:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5312:31:0"},"returnParameters":{"id":185,"nodeType":"ParameterList","parameters":[],"src":"5388:0:0"},"scope":364,"src":"5294:136:0","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[2375],"body":{"id":210,"nodeType":"Block","src":"5805:43:0","statements":[{"expression":{"arguments":[{"id":206,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":195,"src":"5827:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":207,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":197,"src":"5833:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":205,"name":"_revokeRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":363,"src":"5815:11:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) returns (bool)"}},"id":208,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5815:26:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":209,"nodeType":"ExpressionStatement","src":"5815:26:0"}]},"documentation":{"id":193,"nodeType":"StructuredDocumentation","src":"5436:269:0","text":" @dev Revokes `role` from `account`.\n If `account` had been granted `role`, emits a {RoleRevoked} event.\n Requirements:\n - the caller must have ``role``'s admin role.\n May emit a {RoleRevoked} event."},"functionSelector":"d547741f","id":211,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"arguments":[{"id":201,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":195,"src":"5798:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":200,"name":"getRoleAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":173,"src":"5785:12:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32) view returns (bytes32)"}},"id":202,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5785:18:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":203,"kind":"modifierInvocation","modifierName":{"id":199,"name":"onlyRole","nameLocations":["5776:8:0"],"nodeType":"IdentifierPath","referencedDeclaration":59,"src":"5776:8:0"},"nodeType":"ModifierInvocation","src":"5776:28:0"}],"name":"revokeRole","nameLocation":"5719:10:0","nodeType":"FunctionDefinition","parameters":{"id":198,"nodeType":"ParameterList","parameters":[{"constant":false,"id":195,"mutability":"mutable","name":"role","nameLocation":"5738:4:0","nodeType":"VariableDeclaration","scope":211,"src":"5730:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":194,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5730:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":197,"mutability":"mutable","name":"account","nameLocation":"5752:7:0","nodeType":"VariableDeclaration","scope":211,"src":"5744:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":196,"name":"address","nodeType":"ElementaryTypeName","src":"5744:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5729:31:0"},"returnParameters":{"id":204,"nodeType":"ParameterList","parameters":[],"src":"5805:0:0"},"scope":364,"src":"5710:138:0","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[2383],"body":{"id":233,"nodeType":"Block","src":"6475:166:0","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":222,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":219,"name":"callerConfirmation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":216,"src":"6489:18:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":220,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1628,"src":"6511:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":221,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6511:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6489:34:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":227,"nodeType":"IfStatement","src":"6485:102:0","trueBody":{"id":226,"nodeType":"Block","src":"6525:62:0","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":223,"name":"AccessControlBadConfirmation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2314,"src":"6546:28:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$_t_error_$","typeString":"function () pure returns (error)"}},"id":224,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6546:30:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":225,"nodeType":"RevertStatement","src":"6539:37:0"}]}},{"expression":{"arguments":[{"id":229,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":214,"src":"6609:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":230,"name":"callerConfirmation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":216,"src":"6615:18:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":228,"name":"_revokeRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":363,"src":"6597:11:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) returns (bool)"}},"id":231,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6597:37:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":232,"nodeType":"ExpressionStatement","src":"6597:37:0"}]},"documentation":{"id":212,"nodeType":"StructuredDocumentation","src":"5854:537:0","text":" @dev Revokes `role` from the calling account.\n Roles are often managed via {grantRole} and {revokeRole}: this function's\n purpose is to provide a mechanism for accounts to lose their privileges\n if they are compromised (such as when a trusted device is misplaced).\n If the calling account had been revoked `role`, emits a {RoleRevoked}\n event.\n Requirements:\n - the caller must be `callerConfirmation`.\n May emit a {RoleRevoked} event."},"functionSelector":"36568abe","id":234,"implemented":true,"kind":"function","modifiers":[],"name":"renounceRole","nameLocation":"6405:12:0","nodeType":"FunctionDefinition","parameters":{"id":217,"nodeType":"ParameterList","parameters":[{"constant":false,"id":214,"mutability":"mutable","name":"role","nameLocation":"6426:4:0","nodeType":"VariableDeclaration","scope":234,"src":"6418:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":213,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6418:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":216,"mutability":"mutable","name":"callerConfirmation","nameLocation":"6440:18:0","nodeType":"VariableDeclaration","scope":234,"src":"6432:26:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":215,"name":"address","nodeType":"ElementaryTypeName","src":"6432:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6417:42:0"},"returnParameters":{"id":218,"nodeType":"ParameterList","parameters":[],"src":"6475:0:0"},"scope":364,"src":"6396:245:0","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":269,"nodeType":"Block","src":"6839:245:0","statements":[{"assignments":[244],"declarations":[{"constant":false,"id":244,"mutability":"mutable","name":"$","nameLocation":"6878:1:0","nodeType":"VariableDeclaration","scope":269,"src":"6849:30:0","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_AccessControlStorage_$37_storage_ptr","typeString":"struct AccessControlUpgradeable.AccessControlStorage"},"typeName":{"id":243,"nodeType":"UserDefinedTypeName","pathNode":{"id":242,"name":"AccessControlStorage","nameLocations":["6849:20:0"],"nodeType":"IdentifierPath","referencedDeclaration":37,"src":"6849:20:0"},"referencedDeclaration":37,"src":"6849:20:0","typeDescriptions":{"typeIdentifier":"t_struct$_AccessControlStorage_$37_storage_ptr","typeString":"struct AccessControlUpgradeable.AccessControlStorage"}},"visibility":"internal"}],"id":247,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":245,"name":"_getAccessControlStorage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":48,"src":"6882:24:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_AccessControlStorage_$37_storage_ptr_$","typeString":"function () pure returns (struct AccessControlUpgradeable.AccessControlStorage storage pointer)"}},"id":246,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6882:26:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_AccessControlStorage_$37_storage_ptr","typeString":"struct AccessControlUpgradeable.AccessControlStorage storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"6849:59:0"},{"assignments":[249],"declarations":[{"constant":false,"id":249,"mutability":"mutable","name":"previousAdminRole","nameLocation":"6926:17:0","nodeType":"VariableDeclaration","scope":269,"src":"6918:25:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":248,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6918:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":253,"initialValue":{"arguments":[{"id":251,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":237,"src":"6959:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":250,"name":"getRoleAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":173,"src":"6946:12:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32) view returns (bytes32)"}},"id":252,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6946:18:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"6918:46:0"},{"expression":{"id":261,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"baseExpression":{"expression":{"id":254,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":244,"src":"6974:1:0","typeDescriptions":{"typeIdentifier":"t_struct$_AccessControlStorage_$37_storage_ptr","typeString":"struct AccessControlUpgradeable.AccessControlStorage storage pointer"}},"id":257,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6976:6:0","memberName":"_roles","nodeType":"MemberAccess","referencedDeclaration":36,"src":"6974:8:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_RoleData_$27_storage_$","typeString":"mapping(bytes32 => struct AccessControlUpgradeable.RoleData storage ref)"}},"id":258,"indexExpression":{"id":256,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":237,"src":"6983:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6974:14:0","typeDescriptions":{"typeIdentifier":"t_struct$_RoleData_$27_storage","typeString":"struct AccessControlUpgradeable.RoleData storage ref"}},"id":259,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"6989:9:0","memberName":"adminRole","nodeType":"MemberAccess","referencedDeclaration":26,"src":"6974:24:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":260,"name":"adminRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":239,"src":"7001:9:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"6974:36:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":262,"nodeType":"ExpressionStatement","src":"6974:36:0"},{"eventCall":{"arguments":[{"id":264,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":237,"src":"7042:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":265,"name":"previousAdminRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":249,"src":"7048:17:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":266,"name":"adminRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":239,"src":"7067:9:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":263,"name":"RoleAdminChanged","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2323,"src":"7025:16:0","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_bytes32_$_t_bytes32_$_t_bytes32_$returns$__$","typeString":"function (bytes32,bytes32,bytes32)"}},"id":267,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7025:52:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":268,"nodeType":"EmitStatement","src":"7020:57:0"}]},"documentation":{"id":235,"nodeType":"StructuredDocumentation","src":"6647:114:0","text":" @dev Sets `adminRole` as ``role``'s admin role.\n Emits a {RoleAdminChanged} event."},"id":270,"implemented":true,"kind":"function","modifiers":[],"name":"_setRoleAdmin","nameLocation":"6775:13:0","nodeType":"FunctionDefinition","parameters":{"id":240,"nodeType":"ParameterList","parameters":[{"constant":false,"id":237,"mutability":"mutable","name":"role","nameLocation":"6797:4:0","nodeType":"VariableDeclaration","scope":270,"src":"6789:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":236,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6789:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":239,"mutability":"mutable","name":"adminRole","nameLocation":"6811:9:0","nodeType":"VariableDeclaration","scope":270,"src":"6803:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":238,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6803:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"6788:33:0"},"returnParameters":{"id":241,"nodeType":"ParameterList","parameters":[],"src":"6839:0:0"},"scope":364,"src":"6766:318:0","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":316,"nodeType":"Block","src":"7401:304:0","statements":[{"assignments":[282],"declarations":[{"constant":false,"id":282,"mutability":"mutable","name":"$","nameLocation":"7440:1:0","nodeType":"VariableDeclaration","scope":316,"src":"7411:30:0","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_AccessControlStorage_$37_storage_ptr","typeString":"struct AccessControlUpgradeable.AccessControlStorage"},"typeName":{"id":281,"nodeType":"UserDefinedTypeName","pathNode":{"id":280,"name":"AccessControlStorage","nameLocations":["7411:20:0"],"nodeType":"IdentifierPath","referencedDeclaration":37,"src":"7411:20:0"},"referencedDeclaration":37,"src":"7411:20:0","typeDescriptions":{"typeIdentifier":"t_struct$_AccessControlStorage_$37_storage_ptr","typeString":"struct AccessControlUpgradeable.AccessControlStorage"}},"visibility":"internal"}],"id":285,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":283,"name":"_getAccessControlStorage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":48,"src":"7444:24:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_AccessControlStorage_$37_storage_ptr_$","typeString":"function () pure returns (struct AccessControlUpgradeable.AccessControlStorage storage pointer)"}},"id":284,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7444:26:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_AccessControlStorage_$37_storage_ptr","typeString":"struct AccessControlUpgradeable.AccessControlStorage storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"7411:59:0"},{"condition":{"id":290,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"7484:23:0","subExpression":{"arguments":[{"id":287,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":273,"src":"7493:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":288,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":275,"src":"7499:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":286,"name":"hasRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":118,"src":"7485:7:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) view returns (bool)"}},"id":289,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7485:22:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":314,"nodeType":"Block","src":"7662:37:0","statements":[{"expression":{"hexValue":"66616c7365","id":312,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"7683:5:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"functionReturnParameters":279,"id":313,"nodeType":"Return","src":"7676:12:0"}]},"id":315,"nodeType":"IfStatement","src":"7480:219:0","trueBody":{"id":311,"nodeType":"Block","src":"7509:147:0","statements":[{"expression":{"id":300,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"expression":{"baseExpression":{"expression":{"id":291,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":282,"src":"7523:1:0","typeDescriptions":{"typeIdentifier":"t_struct$_AccessControlStorage_$37_storage_ptr","typeString":"struct AccessControlUpgradeable.AccessControlStorage storage pointer"}},"id":294,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7525:6:0","memberName":"_roles","nodeType":"MemberAccess","referencedDeclaration":36,"src":"7523:8:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_RoleData_$27_storage_$","typeString":"mapping(bytes32 => struct AccessControlUpgradeable.RoleData storage ref)"}},"id":295,"indexExpression":{"id":293,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":273,"src":"7532:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7523:14:0","typeDescriptions":{"typeIdentifier":"t_struct$_RoleData_$27_storage","typeString":"struct AccessControlUpgradeable.RoleData storage ref"}},"id":296,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7538:7:0","memberName":"hasRole","nodeType":"MemberAccess","referencedDeclaration":24,"src":"7523:22:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":298,"indexExpression":{"id":297,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":275,"src":"7546:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"7523:31:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":299,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"7557:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"7523:38:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":301,"nodeType":"ExpressionStatement","src":"7523:38:0"},{"eventCall":{"arguments":[{"id":303,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":273,"src":"7592:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":304,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":275,"src":"7598:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[],"expression":{"argumentTypes":[],"id":305,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1628,"src":"7607:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":306,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7607:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":302,"name":"RoleGranted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2332,"src":"7580:11:0","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_bytes32_$_t_address_$_t_address_$returns$__$","typeString":"function (bytes32,address,address)"}},"id":307,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7580:40:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":308,"nodeType":"EmitStatement","src":"7575:45:0"},{"expression":{"hexValue":"74727565","id":309,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"7641:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":279,"id":310,"nodeType":"Return","src":"7634:11:0"}]}}]},"documentation":{"id":271,"nodeType":"StructuredDocumentation","src":"7090:223:0","text":" @dev Attempts to grant `role` to `account` and returns a boolean indicating if `role` was granted.\n Internal function without access restriction.\n May emit a {RoleGranted} event."},"id":317,"implemented":true,"kind":"function","modifiers":[],"name":"_grantRole","nameLocation":"7327:10:0","nodeType":"FunctionDefinition","parameters":{"id":276,"nodeType":"ParameterList","parameters":[{"constant":false,"id":273,"mutability":"mutable","name":"role","nameLocation":"7346:4:0","nodeType":"VariableDeclaration","scope":317,"src":"7338:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":272,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7338:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":275,"mutability":"mutable","name":"account","nameLocation":"7360:7:0","nodeType":"VariableDeclaration","scope":317,"src":"7352:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":274,"name":"address","nodeType":"ElementaryTypeName","src":"7352:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"7337:31:0"},"returnParameters":{"id":279,"nodeType":"ParameterList","parameters":[{"constant":false,"id":278,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":317,"src":"7395:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":277,"name":"bool","nodeType":"ElementaryTypeName","src":"7395:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"7394:6:0"},"scope":364,"src":"7318:387:0","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":362,"nodeType":"Block","src":"8026:304:0","statements":[{"assignments":[329],"declarations":[{"constant":false,"id":329,"mutability":"mutable","name":"$","nameLocation":"8065:1:0","nodeType":"VariableDeclaration","scope":362,"src":"8036:30:0","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_AccessControlStorage_$37_storage_ptr","typeString":"struct AccessControlUpgradeable.AccessControlStorage"},"typeName":{"id":328,"nodeType":"UserDefinedTypeName","pathNode":{"id":327,"name":"AccessControlStorage","nameLocations":["8036:20:0"],"nodeType":"IdentifierPath","referencedDeclaration":37,"src":"8036:20:0"},"referencedDeclaration":37,"src":"8036:20:0","typeDescriptions":{"typeIdentifier":"t_struct$_AccessControlStorage_$37_storage_ptr","typeString":"struct AccessControlUpgradeable.AccessControlStorage"}},"visibility":"internal"}],"id":332,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":330,"name":"_getAccessControlStorage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":48,"src":"8069:24:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_AccessControlStorage_$37_storage_ptr_$","typeString":"function () pure returns (struct AccessControlUpgradeable.AccessControlStorage storage pointer)"}},"id":331,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8069:26:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_AccessControlStorage_$37_storage_ptr","typeString":"struct AccessControlUpgradeable.AccessControlStorage storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"8036:59:0"},{"condition":{"arguments":[{"id":334,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":320,"src":"8117:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":335,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":322,"src":"8123:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":333,"name":"hasRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":118,"src":"8109:7:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) view returns (bool)"}},"id":336,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8109:22:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":360,"nodeType":"Block","src":"8287:37:0","statements":[{"expression":{"hexValue":"66616c7365","id":358,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"8308:5:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"functionReturnParameters":326,"id":359,"nodeType":"Return","src":"8301:12:0"}]},"id":361,"nodeType":"IfStatement","src":"8105:219:0","trueBody":{"id":357,"nodeType":"Block","src":"8133:148:0","statements":[{"expression":{"id":346,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"expression":{"baseExpression":{"expression":{"id":337,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":329,"src":"8147:1:0","typeDescriptions":{"typeIdentifier":"t_struct$_AccessControlStorage_$37_storage_ptr","typeString":"struct AccessControlUpgradeable.AccessControlStorage storage pointer"}},"id":340,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8149:6:0","memberName":"_roles","nodeType":"MemberAccess","referencedDeclaration":36,"src":"8147:8:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_RoleData_$27_storage_$","typeString":"mapping(bytes32 => struct AccessControlUpgradeable.RoleData storage ref)"}},"id":341,"indexExpression":{"id":339,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":320,"src":"8156:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8147:14:0","typeDescriptions":{"typeIdentifier":"t_struct$_RoleData_$27_storage","typeString":"struct AccessControlUpgradeable.RoleData storage ref"}},"id":342,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8162:7:0","memberName":"hasRole","nodeType":"MemberAccess","referencedDeclaration":24,"src":"8147:22:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":344,"indexExpression":{"id":343,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":322,"src":"8170:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"8147:31:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"66616c7365","id":345,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"8181:5:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"src":"8147:39:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":347,"nodeType":"ExpressionStatement","src":"8147:39:0"},{"eventCall":{"arguments":[{"id":349,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":320,"src":"8217:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":350,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":322,"src":"8223:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[],"expression":{"argumentTypes":[],"id":351,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1628,"src":"8232:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":352,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8232:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":348,"name":"RoleRevoked","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2341,"src":"8205:11:0","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_bytes32_$_t_address_$_t_address_$returns$__$","typeString":"function (bytes32,address,address)"}},"id":353,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8205:40:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":354,"nodeType":"EmitStatement","src":"8200:45:0"},{"expression":{"hexValue":"74727565","id":355,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"8266:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":326,"id":356,"nodeType":"Return","src":"8259:11:0"}]}}]},"documentation":{"id":318,"nodeType":"StructuredDocumentation","src":"7711:226:0","text":" @dev Attempts to revoke `role` from `account` and returns a boolean indicating if `role` was revoked.\n Internal function without access restriction.\n May emit a {RoleRevoked} event."},"id":363,"implemented":true,"kind":"function","modifiers":[],"name":"_revokeRole","nameLocation":"7951:11:0","nodeType":"FunctionDefinition","parameters":{"id":323,"nodeType":"ParameterList","parameters":[{"constant":false,"id":320,"mutability":"mutable","name":"role","nameLocation":"7971:4:0","nodeType":"VariableDeclaration","scope":363,"src":"7963:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":319,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7963:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":322,"mutability":"mutable","name":"account","nameLocation":"7985:7:0","nodeType":"VariableDeclaration","scope":363,"src":"7977:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":321,"name":"address","nodeType":"ElementaryTypeName","src":"7977:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"7962:31:0"},"returnParameters":{"id":326,"nodeType":"ParameterList","parameters":[{"constant":false,"id":325,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":363,"src":"8020:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":324,"name":"bool","nodeType":"ElementaryTypeName","src":"8020:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"8019:6:0"},"scope":364,"src":"7942:388:0","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":365,"src":"2171:6161:0","usedErrors":[381,384,2311,2314],"usedEvents":[389,2323,2332,2341]}],"src":"108:8225:0"},"id":0},"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol","exportedSymbols":{"Initializable":[632]},"id":633,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":366,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"113:24:1"},{"abstract":true,"baseContracts":[],"canonicalName":"Initializable","contractDependencies":[],"contractKind":"contract","documentation":{"id":367,"nodeType":"StructuredDocumentation","src":"139:2209:1","text":" @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\n behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\n external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\n function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\n The initialization functions use a version number. Once a version number is used, it is consumed and cannot be\n reused. This mechanism prevents re-execution of each \"step\" but allows the creation of new initialization steps in\n case an upgrade adds a module that needs to be initialized.\n For example:\n [.hljs-theme-light.nopadding]\n ```solidity\n contract MyToken is ERC20Upgradeable {\n     function initialize() initializer public {\n         __ERC20_init(\"MyToken\", \"MTK\");\n     }\n }\n contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {\n     function initializeV2() reinitializer(2) public {\n         __ERC20Permit_init(\"MyToken\");\n     }\n }\n ```\n TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\n possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\n CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\n that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\n [CAUTION]\n ====\n Avoid leaving a contract uninitialized.\n An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\n contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke\n the {_disableInitializers} function in the constructor to automatically lock it when it is deployed:\n [.hljs-theme-light.nopadding]\n ```\n /// @custom:oz-upgrades-unsafe-allow constructor\n constructor() {\n     _disableInitializers();\n }\n ```\n ===="},"fullyImplemented":true,"id":632,"linearizedBaseContracts":[632],"name":"Initializable","nameLocation":"2367:13:1","nodeType":"ContractDefinition","nodes":[{"canonicalName":"Initializable.InitializableStorage","documentation":{"id":368,"nodeType":"StructuredDocumentation","src":"2387:293:1","text":" @dev Storage of the initializable contract.\n It's implemented on a custom ERC-7201 namespace to reduce the risk of storage collisions\n when using with upgradeable contracts.\n @custom:storage-location erc7201:openzeppelin.storage.Initializable"},"id":375,"members":[{"constant":false,"id":371,"mutability":"mutable","name":"_initialized","nameLocation":"2820:12:1","nodeType":"VariableDeclaration","scope":375,"src":"2813:19:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":370,"name":"uint64","nodeType":"ElementaryTypeName","src":"2813:6:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":374,"mutability":"mutable","name":"_initializing","nameLocation":"2955:13:1","nodeType":"VariableDeclaration","scope":375,"src":"2950:18:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":373,"name":"bool","nodeType":"ElementaryTypeName","src":"2950:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"name":"InitializableStorage","nameLocation":"2692:20:1","nodeType":"StructDefinition","scope":632,"src":"2685:290:1","visibility":"public"},{"constant":true,"id":378,"mutability":"constant","name":"INITIALIZABLE_STORAGE","nameLocation":"3123:21:1","nodeType":"VariableDeclaration","scope":632,"src":"3098:115:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":376,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3098:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"hexValue":"307866306335376531363834306466303430663135303838646332663831666533393163333932336265633733653233613936363265666339633232396336613030","id":377,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3147:66:1","typeDescriptions":{"typeIdentifier":"t_rational_108904022758810753673719992590105913556127789646572562039383141376366747609600_by_1","typeString":"int_const 1089...(70 digits omitted)...9600"},"value":"0xf0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00"},"visibility":"private"},{"documentation":{"id":379,"nodeType":"StructuredDocumentation","src":"3220:60:1","text":" @dev The contract is already initialized."},"errorSelector":"f92ee8a9","id":381,"name":"InvalidInitialization","nameLocation":"3291:21:1","nodeType":"ErrorDefinition","parameters":{"id":380,"nodeType":"ParameterList","parameters":[],"src":"3312:2:1"},"src":"3285:30:1"},{"documentation":{"id":382,"nodeType":"StructuredDocumentation","src":"3321:57:1","text":" @dev The contract is not initializing."},"errorSelector":"d7e6bcf8","id":384,"name":"NotInitializing","nameLocation":"3389:15:1","nodeType":"ErrorDefinition","parameters":{"id":383,"nodeType":"ParameterList","parameters":[],"src":"3404:2:1"},"src":"3383:24:1"},{"anonymous":false,"documentation":{"id":385,"nodeType":"StructuredDocumentation","src":"3413:90:1","text":" @dev Triggered when the contract has been initialized or reinitialized."},"eventSelector":"c7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d2","id":389,"name":"Initialized","nameLocation":"3514:11:1","nodeType":"EventDefinition","parameters":{"id":388,"nodeType":"ParameterList","parameters":[{"constant":false,"id":387,"indexed":false,"mutability":"mutable","name":"version","nameLocation":"3533:7:1","nodeType":"VariableDeclaration","scope":389,"src":"3526:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":386,"name":"uint64","nodeType":"ElementaryTypeName","src":"3526:6:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"3525:16:1"},"src":"3508:34:1"},{"body":{"id":471,"nodeType":"Block","src":"4092:1079:1","statements":[{"assignments":[394],"declarations":[{"constant":false,"id":394,"mutability":"mutable","name":"$","nameLocation":"4187:1:1","nodeType":"VariableDeclaration","scope":471,"src":"4158:30:1","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$375_storage_ptr","typeString":"struct Initializable.InitializableStorage"},"typeName":{"id":393,"nodeType":"UserDefinedTypeName","pathNode":{"id":392,"name":"InitializableStorage","nameLocations":["4158:20:1"],"nodeType":"IdentifierPath","referencedDeclaration":375,"src":"4158:20:1"},"referencedDeclaration":375,"src":"4158:20:1","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$375_storage_ptr","typeString":"struct Initializable.InitializableStorage"}},"visibility":"internal"}],"id":397,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":395,"name":"_getInitializableStorage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":631,"src":"4191:24:1","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_InitializableStorage_$375_storage_ptr_$","typeString":"function () pure returns (struct Initializable.InitializableStorage storage pointer)"}},"id":396,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4191:26:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$375_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"4158:59:1"},{"assignments":[399],"declarations":[{"constant":false,"id":399,"mutability":"mutable","name":"isTopLevelCall","nameLocation":"4284:14:1","nodeType":"VariableDeclaration","scope":471,"src":"4279:19:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":398,"name":"bool","nodeType":"ElementaryTypeName","src":"4279:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":403,"initialValue":{"id":402,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"4301:16:1","subExpression":{"expression":{"id":400,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":394,"src":"4302:1:1","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$375_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"id":401,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4304:13:1","memberName":"_initializing","nodeType":"MemberAccess","referencedDeclaration":374,"src":"4302:15:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"4279:38:1"},{"assignments":[405],"declarations":[{"constant":false,"id":405,"mutability":"mutable","name":"initialized","nameLocation":"4334:11:1","nodeType":"VariableDeclaration","scope":471,"src":"4327:18:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":404,"name":"uint64","nodeType":"ElementaryTypeName","src":"4327:6:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"id":408,"initialValue":{"expression":{"id":406,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":394,"src":"4348:1:1","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$375_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"id":407,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4350:12:1","memberName":"_initialized","nodeType":"MemberAccess","referencedDeclaration":371,"src":"4348:14:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"nodeType":"VariableDeclarationStatement","src":"4327:35:1"},{"assignments":[410],"declarations":[{"constant":false,"id":410,"mutability":"mutable","name":"initialSetup","nameLocation":"4709:12:1","nodeType":"VariableDeclaration","scope":471,"src":"4704:17:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":409,"name":"bool","nodeType":"ElementaryTypeName","src":"4704:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":416,"initialValue":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":415,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint64","typeString":"uint64"},"id":413,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":411,"name":"initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":405,"src":"4724:11:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":412,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4739:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"4724:16:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"id":414,"name":"isTopLevelCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":399,"src":"4744:14:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"4724:34:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"4704:54:1"},{"assignments":[418],"declarations":[{"constant":false,"id":418,"mutability":"mutable","name":"construction","nameLocation":"4773:12:1","nodeType":"VariableDeclaration","scope":471,"src":"4768:17:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":417,"name":"bool","nodeType":"ElementaryTypeName","src":"4768:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":431,"initialValue":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":430,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint64","typeString":"uint64"},"id":421,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":419,"name":"initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":405,"src":"4788:11:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"31","id":420,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4803:1:1","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"4788:16:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":429,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"arguments":[{"id":424,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"4816:4:1","typeDescriptions":{"typeIdentifier":"t_contract$_Initializable_$632","typeString":"contract Initializable"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Initializable_$632","typeString":"contract Initializable"}],"id":423,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4808:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":422,"name":"address","nodeType":"ElementaryTypeName","src":"4808:7:1","typeDescriptions":{}}},"id":425,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4808:13:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":426,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4822:4:1","memberName":"code","nodeType":"MemberAccess","src":"4808:18:1","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":427,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4827:6:1","memberName":"length","nodeType":"MemberAccess","src":"4808:25:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":428,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4837:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"4808:30:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"4788:50:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"4768:70:1"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":436,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":433,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"4853:13:1","subExpression":{"id":432,"name":"initialSetup","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":410,"src":"4854:12:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"id":435,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"4870:13:1","subExpression":{"id":434,"name":"construction","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":418,"src":"4871:12:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"4853:30:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":441,"nodeType":"IfStatement","src":"4849:91:1","trueBody":{"id":440,"nodeType":"Block","src":"4885:55:1","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":437,"name":"InvalidInitialization","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":381,"src":"4906:21:1","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$_t_error_$","typeString":"function () pure returns (error)"}},"id":438,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4906:23:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":439,"nodeType":"RevertStatement","src":"4899:30:1"}]}},{"expression":{"id":446,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":442,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":394,"src":"4949:1:1","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$375_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"id":444,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"4951:12:1","memberName":"_initialized","nodeType":"MemberAccess","referencedDeclaration":371,"src":"4949:14:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"31","id":445,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4966:1:1","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"4949:18:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"id":447,"nodeType":"ExpressionStatement","src":"4949:18:1"},{"condition":{"id":448,"name":"isTopLevelCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":399,"src":"4981:14:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":456,"nodeType":"IfStatement","src":"4977:67:1","trueBody":{"id":455,"nodeType":"Block","src":"4997:47:1","statements":[{"expression":{"id":453,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":449,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":394,"src":"5011:1:1","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$375_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"id":451,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"5013:13:1","memberName":"_initializing","nodeType":"MemberAccess","referencedDeclaration":374,"src":"5011:15:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":452,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"5029:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"5011:22:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":454,"nodeType":"ExpressionStatement","src":"5011:22:1"}]}},{"id":457,"nodeType":"PlaceholderStatement","src":"5053:1:1"},{"condition":{"id":458,"name":"isTopLevelCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":399,"src":"5068:14:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":470,"nodeType":"IfStatement","src":"5064:101:1","trueBody":{"id":469,"nodeType":"Block","src":"5084:81:1","statements":[{"expression":{"id":463,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":459,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":394,"src":"5098:1:1","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$375_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"id":461,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"5100:13:1","memberName":"_initializing","nodeType":"MemberAccess","referencedDeclaration":374,"src":"5098:15:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"66616c7365","id":462,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"5116:5:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"src":"5098:23:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":464,"nodeType":"ExpressionStatement","src":"5098:23:1"},{"eventCall":{"arguments":[{"hexValue":"31","id":466,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5152:1:1","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"}],"id":465,"name":"Initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":389,"src":"5140:11:1","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint64_$returns$__$","typeString":"function (uint64)"}},"id":467,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5140:14:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":468,"nodeType":"EmitStatement","src":"5135:19:1"}]}}]},"documentation":{"id":390,"nodeType":"StructuredDocumentation","src":"3548:516:1","text":" @dev A modifier that defines a protected initializer function that can be invoked at most once. In its scope,\n `onlyInitializing` functions can be used to initialize parent contracts.\n Similar to `reinitializer(1)`, except that in the context of a constructor an `initializer` may be invoked any\n number of times. This behavior in the constructor can be useful during testing and is not expected to be used in\n production.\n Emits an {Initialized} event."},"id":472,"name":"initializer","nameLocation":"4078:11:1","nodeType":"ModifierDefinition","parameters":{"id":391,"nodeType":"ParameterList","parameters":[],"src":"4089:2:1"},"src":"4069:1102:1","virtual":false,"visibility":"internal"},{"body":{"id":518,"nodeType":"Block","src":"6289:392:1","statements":[{"assignments":[479],"declarations":[{"constant":false,"id":479,"mutability":"mutable","name":"$","nameLocation":"6384:1:1","nodeType":"VariableDeclaration","scope":518,"src":"6355:30:1","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$375_storage_ptr","typeString":"struct Initializable.InitializableStorage"},"typeName":{"id":478,"nodeType":"UserDefinedTypeName","pathNode":{"id":477,"name":"InitializableStorage","nameLocations":["6355:20:1"],"nodeType":"IdentifierPath","referencedDeclaration":375,"src":"6355:20:1"},"referencedDeclaration":375,"src":"6355:20:1","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$375_storage_ptr","typeString":"struct Initializable.InitializableStorage"}},"visibility":"internal"}],"id":482,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":480,"name":"_getInitializableStorage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":631,"src":"6388:24:1","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_InitializableStorage_$375_storage_ptr_$","typeString":"function () pure returns (struct Initializable.InitializableStorage storage pointer)"}},"id":481,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6388:26:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$375_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"6355:59:1"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":489,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":483,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":479,"src":"6429:1:1","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$375_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"id":484,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6431:13:1","memberName":"_initializing","nodeType":"MemberAccess","referencedDeclaration":374,"src":"6429:15:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_uint64","typeString":"uint64"},"id":488,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":485,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":479,"src":"6448:1:1","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$375_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"id":486,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6450:12:1","memberName":"_initialized","nodeType":"MemberAccess","referencedDeclaration":371,"src":"6448:14:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":487,"name":"version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":475,"src":"6466:7:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"src":"6448:25:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"6429:44:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":494,"nodeType":"IfStatement","src":"6425:105:1","trueBody":{"id":493,"nodeType":"Block","src":"6475:55:1","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":490,"name":"InvalidInitialization","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":381,"src":"6496:21:1","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$_t_error_$","typeString":"function () pure returns (error)"}},"id":491,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6496:23:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":492,"nodeType":"RevertStatement","src":"6489:30:1"}]}},{"expression":{"id":499,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":495,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":479,"src":"6539:1:1","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$375_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"id":497,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"6541:12:1","memberName":"_initialized","nodeType":"MemberAccess","referencedDeclaration":371,"src":"6539:14:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":498,"name":"version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":475,"src":"6556:7:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"src":"6539:24:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"id":500,"nodeType":"ExpressionStatement","src":"6539:24:1"},{"expression":{"id":505,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":501,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":479,"src":"6573:1:1","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$375_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"id":503,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"6575:13:1","memberName":"_initializing","nodeType":"MemberAccess","referencedDeclaration":374,"src":"6573:15:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":504,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"6591:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"6573:22:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":506,"nodeType":"ExpressionStatement","src":"6573:22:1"},{"id":507,"nodeType":"PlaceholderStatement","src":"6605:1:1"},{"expression":{"id":512,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":508,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":479,"src":"6616:1:1","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$375_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"id":510,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"6618:13:1","memberName":"_initializing","nodeType":"MemberAccess","referencedDeclaration":374,"src":"6616:15:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"66616c7365","id":511,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"6634:5:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"src":"6616:23:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":513,"nodeType":"ExpressionStatement","src":"6616:23:1"},{"eventCall":{"arguments":[{"id":515,"name":"version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":475,"src":"6666:7:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint64","typeString":"uint64"}],"id":514,"name":"Initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":389,"src":"6654:11:1","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint64_$returns$__$","typeString":"function (uint64)"}},"id":516,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6654:20:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":517,"nodeType":"EmitStatement","src":"6649:25:1"}]},"documentation":{"id":473,"nodeType":"StructuredDocumentation","src":"5177:1068:1","text":" @dev A modifier that defines a protected reinitializer function that can be invoked at most once, and only if the\n contract hasn't been initialized to a greater version before. In its scope, `onlyInitializing` functions can be\n used to initialize parent contracts.\n A reinitializer may be used after the original initialization step. This is essential to configure modules that\n are added through upgrades and that require initialization.\n When `version` is 1, this modifier is similar to `initializer`, except that functions marked with `reinitializer`\n cannot be nested. If one is invoked in the context of another, execution will revert.\n Note that versions can jump in increments greater than 1; this implies that if multiple reinitializers coexist in\n a contract, executing them in the right order is up to the developer or operator.\n WARNING: Setting the version to 2**64 - 1 will prevent any future reinitialization.\n Emits an {Initialized} event."},"id":519,"name":"reinitializer","nameLocation":"6259:13:1","nodeType":"ModifierDefinition","parameters":{"id":476,"nodeType":"ParameterList","parameters":[{"constant":false,"id":475,"mutability":"mutable","name":"version","nameLocation":"6280:7:1","nodeType":"VariableDeclaration","scope":519,"src":"6273:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":474,"name":"uint64","nodeType":"ElementaryTypeName","src":"6273:6:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"6272:16:1"},"src":"6250:431:1","virtual":false,"visibility":"internal"},{"body":{"id":526,"nodeType":"Block","src":"6919:48:1","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":522,"name":"_checkInitializing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":540,"src":"6929:18:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$__$","typeString":"function () view"}},"id":523,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6929:20:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":524,"nodeType":"ExpressionStatement","src":"6929:20:1"},{"id":525,"nodeType":"PlaceholderStatement","src":"6959:1:1"}]},"documentation":{"id":520,"nodeType":"StructuredDocumentation","src":"6687:199:1","text":" @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\n {initializer} and {reinitializer} modifiers, directly or indirectly."},"id":527,"name":"onlyInitializing","nameLocation":"6900:16:1","nodeType":"ModifierDefinition","parameters":{"id":521,"nodeType":"ParameterList","parameters":[],"src":"6916:2:1"},"src":"6891:76:1","virtual":false,"visibility":"internal"},{"body":{"id":539,"nodeType":"Block","src":"7134:89:1","statements":[{"condition":{"id":533,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"7148:18:1","subExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":531,"name":"_isInitializing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":608,"src":"7149:15:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_bool_$","typeString":"function () view returns (bool)"}},"id":532,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7149:17:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":538,"nodeType":"IfStatement","src":"7144:73:1","trueBody":{"id":537,"nodeType":"Block","src":"7168:49:1","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":534,"name":"NotInitializing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":384,"src":"7189:15:1","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$_t_error_$","typeString":"function () pure returns (error)"}},"id":535,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7189:17:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":536,"nodeType":"RevertStatement","src":"7182:24:1"}]}}]},"documentation":{"id":528,"nodeType":"StructuredDocumentation","src":"6973:104:1","text":" @dev Reverts if the contract is not in an initializing state. See {onlyInitializing}."},"id":540,"implemented":true,"kind":"function","modifiers":[],"name":"_checkInitializing","nameLocation":"7091:18:1","nodeType":"FunctionDefinition","parameters":{"id":529,"nodeType":"ParameterList","parameters":[],"src":"7109:2:1"},"returnParameters":{"id":530,"nodeType":"ParameterList","parameters":[],"src":"7134:0:1"},"scope":632,"src":"7082:141:1","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":585,"nodeType":"Block","src":"7758:373:1","statements":[{"assignments":[546],"declarations":[{"constant":false,"id":546,"mutability":"mutable","name":"$","nameLocation":"7853:1:1","nodeType":"VariableDeclaration","scope":585,"src":"7824:30:1","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$375_storage_ptr","typeString":"struct Initializable.InitializableStorage"},"typeName":{"id":545,"nodeType":"UserDefinedTypeName","pathNode":{"id":544,"name":"InitializableStorage","nameLocations":["7824:20:1"],"nodeType":"IdentifierPath","referencedDeclaration":375,"src":"7824:20:1"},"referencedDeclaration":375,"src":"7824:20:1","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$375_storage_ptr","typeString":"struct Initializable.InitializableStorage"}},"visibility":"internal"}],"id":549,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":547,"name":"_getInitializableStorage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":631,"src":"7857:24:1","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_InitializableStorage_$375_storage_ptr_$","typeString":"function () pure returns (struct Initializable.InitializableStorage storage pointer)"}},"id":548,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7857:26:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$375_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"7824:59:1"},{"condition":{"expression":{"id":550,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":546,"src":"7898:1:1","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$375_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"id":551,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7900:13:1","memberName":"_initializing","nodeType":"MemberAccess","referencedDeclaration":374,"src":"7898:15:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":556,"nodeType":"IfStatement","src":"7894:76:1","trueBody":{"id":555,"nodeType":"Block","src":"7915:55:1","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":552,"name":"InvalidInitialization","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":381,"src":"7936:21:1","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$_t_error_$","typeString":"function () pure returns (error)"}},"id":553,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7936:23:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":554,"nodeType":"RevertStatement","src":"7929:30:1"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint64","typeString":"uint64"},"id":564,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":557,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":546,"src":"7983:1:1","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$375_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"id":558,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7985:12:1","memberName":"_initialized","nodeType":"MemberAccess","referencedDeclaration":371,"src":"7983:14:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"expression":{"arguments":[{"id":561,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8006:6:1","typeDescriptions":{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"},"typeName":{"id":560,"name":"uint64","nodeType":"ElementaryTypeName","src":"8006:6:1","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"}],"id":559,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"8001:4:1","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":562,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8001:12:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint64","typeString":"type(uint64)"}},"id":563,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"8014:3:1","memberName":"max","nodeType":"MemberAccess","src":"8001:16:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"src":"7983:34:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":584,"nodeType":"IfStatement","src":"7979:146:1","trueBody":{"id":583,"nodeType":"Block","src":"8019:106:1","statements":[{"expression":{"id":573,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":565,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":546,"src":"8033:1:1","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$375_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"id":567,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"8035:12:1","memberName":"_initialized","nodeType":"MemberAccess","referencedDeclaration":371,"src":"8033:14:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"arguments":[{"id":570,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8055:6:1","typeDescriptions":{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"},"typeName":{"id":569,"name":"uint64","nodeType":"ElementaryTypeName","src":"8055:6:1","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"}],"id":568,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"8050:4:1","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":571,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8050:12:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint64","typeString":"type(uint64)"}},"id":572,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"8063:3:1","memberName":"max","nodeType":"MemberAccess","src":"8050:16:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"src":"8033:33:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"id":574,"nodeType":"ExpressionStatement","src":"8033:33:1"},{"eventCall":{"arguments":[{"expression":{"arguments":[{"id":578,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8102:6:1","typeDescriptions":{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"},"typeName":{"id":577,"name":"uint64","nodeType":"ElementaryTypeName","src":"8102:6:1","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"}],"id":576,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"8097:4:1","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":579,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8097:12:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint64","typeString":"type(uint64)"}},"id":580,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"8110:3:1","memberName":"max","nodeType":"MemberAccess","src":"8097:16:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint64","typeString":"uint64"}],"id":575,"name":"Initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":389,"src":"8085:11:1","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint64_$returns$__$","typeString":"function (uint64)"}},"id":581,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8085:29:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":582,"nodeType":"EmitStatement","src":"8080:34:1"}]}}]},"documentation":{"id":541,"nodeType":"StructuredDocumentation","src":"7229:475:1","text":" @dev Locks the contract, preventing any future reinitialization. This cannot be part of an initializer call.\n Calling this in the constructor of a contract will prevent that contract from being initialized or reinitialized\n to any version. It is recommended to use this to lock implementation contracts that are designed to be called\n through proxies.\n Emits an {Initialized} event the first time it is successfully executed."},"id":586,"implemented":true,"kind":"function","modifiers":[],"name":"_disableInitializers","nameLocation":"7718:20:1","nodeType":"FunctionDefinition","parameters":{"id":542,"nodeType":"ParameterList","parameters":[],"src":"7738:2:1"},"returnParameters":{"id":543,"nodeType":"ParameterList","parameters":[],"src":"7758:0:1"},"scope":632,"src":"7709:422:1","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":596,"nodeType":"Block","src":"8306:63:1","statements":[{"expression":{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":592,"name":"_getInitializableStorage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":631,"src":"8323:24:1","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_InitializableStorage_$375_storage_ptr_$","typeString":"function () pure returns (struct Initializable.InitializableStorage storage pointer)"}},"id":593,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8323:26:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$375_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"id":594,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8350:12:1","memberName":"_initialized","nodeType":"MemberAccess","referencedDeclaration":371,"src":"8323:39:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"functionReturnParameters":591,"id":595,"nodeType":"Return","src":"8316:46:1"}]},"documentation":{"id":587,"nodeType":"StructuredDocumentation","src":"8137:99:1","text":" @dev Returns the highest version that has been initialized. See {reinitializer}."},"id":597,"implemented":true,"kind":"function","modifiers":[],"name":"_getInitializedVersion","nameLocation":"8250:22:1","nodeType":"FunctionDefinition","parameters":{"id":588,"nodeType":"ParameterList","parameters":[],"src":"8272:2:1"},"returnParameters":{"id":591,"nodeType":"ParameterList","parameters":[{"constant":false,"id":590,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":597,"src":"8298:6:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":589,"name":"uint64","nodeType":"ElementaryTypeName","src":"8298:6:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"8297:8:1"},"scope":632,"src":"8241:128:1","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":607,"nodeType":"Block","src":"8541:64:1","statements":[{"expression":{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":603,"name":"_getInitializableStorage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":631,"src":"8558:24:1","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_InitializableStorage_$375_storage_ptr_$","typeString":"function () pure returns (struct Initializable.InitializableStorage storage pointer)"}},"id":604,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8558:26:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$375_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"id":605,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8585:13:1","memberName":"_initializing","nodeType":"MemberAccess","referencedDeclaration":374,"src":"8558:40:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":602,"id":606,"nodeType":"Return","src":"8551:47:1"}]},"documentation":{"id":598,"nodeType":"StructuredDocumentation","src":"8375:105:1","text":" @dev Returns `true` if the contract is currently initializing. See {onlyInitializing}."},"id":608,"implemented":true,"kind":"function","modifiers":[],"name":"_isInitializing","nameLocation":"8494:15:1","nodeType":"FunctionDefinition","parameters":{"id":599,"nodeType":"ParameterList","parameters":[],"src":"8509:2:1"},"returnParameters":{"id":602,"nodeType":"ParameterList","parameters":[{"constant":false,"id":601,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":608,"src":"8535:4:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":600,"name":"bool","nodeType":"ElementaryTypeName","src":"8535:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"8534:6:1"},"scope":632,"src":"8485:120:1","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":616,"nodeType":"Block","src":"8896:45:1","statements":[{"expression":{"id":614,"name":"INITIALIZABLE_STORAGE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":378,"src":"8913:21:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":613,"id":615,"nodeType":"Return","src":"8906:28:1"}]},"documentation":{"id":609,"nodeType":"StructuredDocumentation","src":"8611:203:1","text":" @dev Pointer to storage slot. Allows integrators to override it with a custom storage location.\n NOTE: Consider following the ERC-7201 formula to derive storage locations."},"id":617,"implemented":true,"kind":"function","modifiers":[],"name":"_initializableStorageSlot","nameLocation":"8828:25:1","nodeType":"FunctionDefinition","parameters":{"id":610,"nodeType":"ParameterList","parameters":[],"src":"8853:2:1"},"returnParameters":{"id":613,"nodeType":"ParameterList","parameters":[{"constant":false,"id":612,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":617,"src":"8887:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":611,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8887:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"8886:9:1"},"scope":632,"src":"8819:122:1","stateMutability":"pure","virtual":true,"visibility":"internal"},{"body":{"id":630,"nodeType":"Block","src":"9161:115:1","statements":[{"assignments":[625],"declarations":[{"constant":false,"id":625,"mutability":"mutable","name":"slot","nameLocation":"9179:4:1","nodeType":"VariableDeclaration","scope":630,"src":"9171:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":624,"name":"bytes32","nodeType":"ElementaryTypeName","src":"9171:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":628,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":626,"name":"_initializableStorageSlot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":617,"src":"9186:25:1","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_bytes32_$","typeString":"function () pure returns (bytes32)"}},"id":627,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9186:27:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"9171:42:1"},{"AST":{"nativeSrc":"9232:38:1","nodeType":"YulBlock","src":"9232:38:1","statements":[{"nativeSrc":"9246:14:1","nodeType":"YulAssignment","src":"9246:14:1","value":{"name":"slot","nativeSrc":"9256:4:1","nodeType":"YulIdentifier","src":"9256:4:1"},"variableNames":[{"name":"$.slot","nativeSrc":"9246:6:1","nodeType":"YulIdentifier","src":"9246:6:1"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":622,"isOffset":false,"isSlot":true,"src":"9246:6:1","suffix":"slot","valueSize":1},{"declaration":625,"isOffset":false,"isSlot":false,"src":"9256:4:1","valueSize":1}],"id":629,"nodeType":"InlineAssembly","src":"9223:47:1"}]},"documentation":{"id":618,"nodeType":"StructuredDocumentation","src":"8947:67:1","text":" @dev Returns a pointer to the storage namespace."},"id":631,"implemented":true,"kind":"function","modifiers":[],"name":"_getInitializableStorage","nameLocation":"9080:24:1","nodeType":"FunctionDefinition","parameters":{"id":619,"nodeType":"ParameterList","parameters":[],"src":"9104:2:1"},"returnParameters":{"id":623,"nodeType":"ParameterList","parameters":[{"constant":false,"id":622,"mutability":"mutable","name":"$","nameLocation":"9158:1:1","nodeType":"VariableDeclaration","scope":631,"src":"9129:30:1","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$375_storage_ptr","typeString":"struct Initializable.InitializableStorage"},"typeName":{"id":621,"nodeType":"UserDefinedTypeName","pathNode":{"id":620,"name":"InitializableStorage","nameLocations":["9129:20:1"],"nodeType":"IdentifierPath","referencedDeclaration":375,"src":"9129:20:1"},"referencedDeclaration":375,"src":"9129:20:1","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$375_storage_ptr","typeString":"struct Initializable.InitializableStorage"}},"visibility":"internal"}],"src":"9128:32:1"},"scope":632,"src":"9071:205:1","stateMutability":"pure","virtual":false,"visibility":"private"}],"scope":633,"src":"2349:6929:1","usedErrors":[381,384],"usedEvents":[389]}],"src":"113:9166:1"},"id":1},"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol","exportedSymbols":{"ERC1967Utils":[2871],"IERC1822Proxiable":[2440],"Initializable":[632],"UUPSUpgradeable":[814]},"id":815,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":634,"literals":["solidity","^","0.8",".22"],"nodeType":"PragmaDirective","src":"115:24:2"},{"absolutePath":"@openzeppelin/contracts/interfaces/draft-IERC1822.sol","file":"@openzeppelin/contracts/interfaces/draft-IERC1822.sol","id":636,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":815,"sourceUnit":2441,"src":"141:88:2","symbolAliases":[{"foreign":{"id":635,"name":"IERC1822Proxiable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2440,"src":"149:17:2","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol","file":"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol","id":638,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":815,"sourceUnit":2872,"src":"230:84:2","symbolAliases":[{"foreign":{"id":637,"name":"ERC1967Utils","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2871,"src":"238:12:2","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol","file":"./Initializable.sol","id":640,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":815,"sourceUnit":633,"src":"315:50:2","symbolAliases":[{"foreign":{"id":639,"name":"Initializable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":632,"src":"323:13:2","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":642,"name":"Initializable","nameLocations":["1023:13:2"],"nodeType":"IdentifierPath","referencedDeclaration":632,"src":"1023:13:2"},"id":643,"nodeType":"InheritanceSpecifier","src":"1023:13:2"},{"baseName":{"id":644,"name":"IERC1822Proxiable","nameLocations":["1038:17:2"],"nodeType":"IdentifierPath","referencedDeclaration":2440,"src":"1038:17:2"},"id":645,"nodeType":"InheritanceSpecifier","src":"1038:17:2"}],"canonicalName":"UUPSUpgradeable","contractDependencies":[],"contractKind":"contract","documentation":{"id":641,"nodeType":"StructuredDocumentation","src":"367:618:2","text":" @dev An upgradeability mechanism designed for UUPS proxies. The functions included here can perform an upgrade of an\n {ERC1967Proxy}, when this contract is set as the implementation behind such a proxy.\n A security mechanism ensures that an upgrade does not turn off upgradeability accidentally, although this risk is\n reinstated if the upgrade retains upgradeability but removes the security mechanism, e.g. by replacing\n `UUPSUpgradeable` with a custom implementation of upgrades.\n The {_authorizeUpgrade} function must be overridden to include access restriction to the upgrade mechanism."},"fullyImplemented":false,"id":814,"linearizedBaseContracts":[814,2440,632],"name":"UUPSUpgradeable","nameLocation":"1004:15:2","nodeType":"ContractDefinition","nodes":[{"constant":false,"documentation":{"id":646,"nodeType":"StructuredDocumentation","src":"1062:61:2","text":"@custom:oz-upgrades-unsafe-allow state-variable-immutable"},"id":652,"mutability":"immutable","name":"__self","nameLocation":"1154:6:2","nodeType":"VariableDeclaration","scope":814,"src":"1128:48:2","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":647,"name":"address","nodeType":"ElementaryTypeName","src":"1128:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":{"arguments":[{"id":650,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"1171:4:2","typeDescriptions":{"typeIdentifier":"t_contract$_UUPSUpgradeable_$814","typeString":"contract UUPSUpgradeable"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_UUPSUpgradeable_$814","typeString":"contract UUPSUpgradeable"}],"id":649,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1163:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":648,"name":"address","nodeType":"ElementaryTypeName","src":"1163:7:2","typeDescriptions":{}}},"id":651,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1163:13:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"private"},{"constant":true,"documentation":{"id":653,"nodeType":"StructuredDocumentation","src":"1183:631:2","text":" @dev The version of the upgrade interface of the contract. If this getter is missing, both `upgradeTo(address)`\n and `upgradeToAndCall(address,bytes)` are present, and `upgradeTo` must be used if no function should be called,\n while `upgradeToAndCall` will invoke the `receive` function if the second argument is the empty byte string.\n If the getter returns `\"5.0.0\"`, only `upgradeToAndCall(address,bytes)` is present, and the second argument must\n be the empty byte string if no function should be called, making it impossible to invoke the `receive` function\n during an upgrade."},"functionSelector":"ad3cb1cc","id":656,"mutability":"constant","name":"UPGRADE_INTERFACE_VERSION","nameLocation":"1842:25:2","nodeType":"VariableDeclaration","scope":814,"src":"1819:58:2","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":654,"name":"string","nodeType":"ElementaryTypeName","src":"1819:6:2","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"value":{"hexValue":"352e302e30","id":655,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1870:7:2","typeDescriptions":{"typeIdentifier":"t_stringliteral_2ade050ecfcf8ae20ae1d10a23573f9d7e0bad85e74a2cf8338a65401e64558c","typeString":"literal_string \"5.0.0\""},"value":"5.0.0"},"visibility":"public"},{"documentation":{"id":657,"nodeType":"StructuredDocumentation","src":"1884:65:2","text":" @dev The call is from an unauthorized context."},"errorSelector":"e07c8dba","id":659,"name":"UUPSUnauthorizedCallContext","nameLocation":"1960:27:2","nodeType":"ErrorDefinition","parameters":{"id":658,"nodeType":"ParameterList","parameters":[],"src":"1987:2:2"},"src":"1954:36:2"},{"documentation":{"id":660,"nodeType":"StructuredDocumentation","src":"1996:68:2","text":" @dev The storage `slot` is unsupported as a UUID."},"errorSelector":"aa1d49a4","id":664,"name":"UUPSUnsupportedProxiableUUID","nameLocation":"2075:28:2","nodeType":"ErrorDefinition","parameters":{"id":663,"nodeType":"ParameterList","parameters":[{"constant":false,"id":662,"mutability":"mutable","name":"slot","nameLocation":"2112:4:2","nodeType":"VariableDeclaration","scope":664,"src":"2104:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":661,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2104:7:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2103:14:2"},"src":"2069:49:2"},{"body":{"id":671,"nodeType":"Block","src":"2645:41:2","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":667,"name":"_checkProxy","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":746,"src":"2655:11:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$__$","typeString":"function () view"}},"id":668,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2655:13:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":669,"nodeType":"ExpressionStatement","src":"2655:13:2"},{"id":670,"nodeType":"PlaceholderStatement","src":"2678:1:2"}]},"documentation":{"id":665,"nodeType":"StructuredDocumentation","src":"2124:495:2","text":" @dev Check that the execution is being performed through a delegatecall call and that the execution context is\n a proxy contract with an implementation (as defined in ERC-1967) pointing to self. This should only be the case\n for UUPS and transparent proxies that are using the current contract as their implementation. Execution of a\n function through ERC-1167 minimal proxies (clones) would not normally pass this test, but is not guaranteed to\n fail."},"id":672,"name":"onlyProxy","nameLocation":"2633:9:2","nodeType":"ModifierDefinition","parameters":{"id":666,"nodeType":"ParameterList","parameters":[],"src":"2642:2:2"},"src":"2624:62:2","virtual":false,"visibility":"internal"},{"body":{"id":679,"nodeType":"Block","src":"2916:48:2","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":675,"name":"_checkNotDelegated","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":762,"src":"2926:18:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$__$","typeString":"function () view"}},"id":676,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2926:20:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":677,"nodeType":"ExpressionStatement","src":"2926:20:2"},{"id":678,"nodeType":"PlaceholderStatement","src":"2956:1:2"}]},"documentation":{"id":673,"nodeType":"StructuredDocumentation","src":"2692:195:2","text":" @dev Check that the execution is not being performed through a delegate call. This allows a function to be\n callable on the implementing contract but not through proxies."},"id":680,"name":"notDelegated","nameLocation":"2901:12:2","nodeType":"ModifierDefinition","parameters":{"id":674,"nodeType":"ParameterList","parameters":[],"src":"2913:2:2"},"src":"2892:72:2","virtual":false,"visibility":"internal"},{"body":{"id":685,"nodeType":"Block","src":"3030:7:2","statements":[]},"id":686,"implemented":true,"kind":"function","modifiers":[{"id":683,"kind":"modifierInvocation","modifierName":{"id":682,"name":"onlyInitializing","nameLocations":["3013:16:2"],"nodeType":"IdentifierPath","referencedDeclaration":527,"src":"3013:16:2"},"nodeType":"ModifierInvocation","src":"3013:16:2"}],"name":"__UUPSUpgradeable_init","nameLocation":"2979:22:2","nodeType":"FunctionDefinition","parameters":{"id":681,"nodeType":"ParameterList","parameters":[],"src":"3001:2:2"},"returnParameters":{"id":684,"nodeType":"ParameterList","parameters":[],"src":"3030:0:2"},"scope":814,"src":"2970:67:2","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":691,"nodeType":"Block","src":"3113:7:2","statements":[]},"id":692,"implemented":true,"kind":"function","modifiers":[{"id":689,"kind":"modifierInvocation","modifierName":{"id":688,"name":"onlyInitializing","nameLocations":["3096:16:2"],"nodeType":"IdentifierPath","referencedDeclaration":527,"src":"3096:16:2"},"nodeType":"ModifierInvocation","src":"3096:16:2"}],"name":"__UUPSUpgradeable_init_unchained","nameLocation":"3052:32:2","nodeType":"FunctionDefinition","parameters":{"id":687,"nodeType":"ParameterList","parameters":[],"src":"3084:2:2"},"returnParameters":{"id":690,"nodeType":"ParameterList","parameters":[],"src":"3113:0:2"},"scope":814,"src":"3043:77:2","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"baseFunctions":[2439],"body":{"id":703,"nodeType":"Block","src":"3786:56:2","statements":[{"expression":{"expression":{"id":700,"name":"ERC1967Utils","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2871,"src":"3803:12:2","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC1967Utils_$2871_$","typeString":"type(library ERC1967Utils)"}},"id":701,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3816:19:2","memberName":"IMPLEMENTATION_SLOT","nodeType":"MemberAccess","referencedDeclaration":2592,"src":"3803:32:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":699,"id":702,"nodeType":"Return","src":"3796:39:2"}]},"documentation":{"id":693,"nodeType":"StructuredDocumentation","src":"3125:578:2","text":" @dev Implementation of the ERC-1822 {proxiableUUID} function. This returns the storage slot used by the\n implementation. It is used to validate the implementation's compatibility when performing an upgrade.\n IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks\n bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this\n function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier."},"functionSelector":"52d1902d","id":704,"implemented":true,"kind":"function","modifiers":[{"id":696,"kind":"modifierInvocation","modifierName":{"id":695,"name":"notDelegated","nameLocations":["3755:12:2"],"nodeType":"IdentifierPath","referencedDeclaration":680,"src":"3755:12:2"},"nodeType":"ModifierInvocation","src":"3755:12:2"}],"name":"proxiableUUID","nameLocation":"3717:13:2","nodeType":"FunctionDefinition","parameters":{"id":694,"nodeType":"ParameterList","parameters":[],"src":"3730:2:2"},"returnParameters":{"id":699,"nodeType":"ParameterList","parameters":[{"constant":false,"id":698,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":704,"src":"3777:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":697,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3777:7:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3776:9:2"},"scope":814,"src":"3708:134:2","stateMutability":"view","virtual":true,"visibility":"external"},{"body":{"id":723,"nodeType":"Block","src":"4266:109:2","statements":[{"expression":{"arguments":[{"id":715,"name":"newImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":707,"src":"4294:17:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":714,"name":"_authorizeUpgrade","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":768,"src":"4276:17:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":716,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4276:36:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":717,"nodeType":"ExpressionStatement","src":"4276:36:2"},{"expression":{"arguments":[{"id":719,"name":"newImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":707,"src":"4344:17:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":720,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":709,"src":"4363:4:2","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":718,"name":"_upgradeToAndCallUUPS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":813,"src":"4322:21:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,bytes memory)"}},"id":721,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4322:46:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":722,"nodeType":"ExpressionStatement","src":"4322:46:2"}]},"documentation":{"id":705,"nodeType":"StructuredDocumentation","src":"3848:308:2","text":" @dev Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call\n encoded in `data`.\n Calls {_authorizeUpgrade}.\n Emits an {Upgraded} event.\n @custom:oz-upgrades-unsafe-allow-reachable delegatecall"},"functionSelector":"4f1ef286","id":724,"implemented":true,"kind":"function","modifiers":[{"id":712,"kind":"modifierInvocation","modifierName":{"id":711,"name":"onlyProxy","nameLocations":["4256:9:2"],"nodeType":"IdentifierPath","referencedDeclaration":672,"src":"4256:9:2"},"nodeType":"ModifierInvocation","src":"4256:9:2"}],"name":"upgradeToAndCall","nameLocation":"4170:16:2","nodeType":"FunctionDefinition","parameters":{"id":710,"nodeType":"ParameterList","parameters":[{"constant":false,"id":707,"mutability":"mutable","name":"newImplementation","nameLocation":"4195:17:2","nodeType":"VariableDeclaration","scope":724,"src":"4187:25:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":706,"name":"address","nodeType":"ElementaryTypeName","src":"4187:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":709,"mutability":"mutable","name":"data","nameLocation":"4227:4:2","nodeType":"VariableDeclaration","scope":724,"src":"4214:17:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":708,"name":"bytes","nodeType":"ElementaryTypeName","src":"4214:5:2","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4186:46:2"},"returnParameters":{"id":713,"nodeType":"ParameterList","parameters":[],"src":"4266:0:2"},"scope":814,"src":"4161:214:2","stateMutability":"payable","virtual":true,"visibility":"public"},{"body":{"id":745,"nodeType":"Block","src":"4623:267:2","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":739,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":733,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":730,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"4658:4:2","typeDescriptions":{"typeIdentifier":"t_contract$_UUPSUpgradeable_$814","typeString":"contract UUPSUpgradeable"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_UUPSUpgradeable_$814","typeString":"contract UUPSUpgradeable"}],"id":729,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4650:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":728,"name":"address","nodeType":"ElementaryTypeName","src":"4650:7:2","typeDescriptions":{}}},"id":731,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4650:13:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":732,"name":"__self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":652,"src":"4667:6:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"4650:23:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":738,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":734,"name":"ERC1967Utils","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2871,"src":"4728:12:2","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC1967Utils_$2871_$","typeString":"type(library ERC1967Utils)"}},"id":735,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4741:17:2","memberName":"getImplementation","nodeType":"MemberAccess","referencedDeclaration":2623,"src":"4728:30:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":736,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4728:32:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":737,"name":"__self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":652,"src":"4764:6:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"4728:42:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"4650:120:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":744,"nodeType":"IfStatement","src":"4633:251:2","trueBody":{"id":743,"nodeType":"Block","src":"4823:61:2","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":740,"name":"UUPSUnauthorizedCallContext","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":659,"src":"4844:27:2","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$_t_error_$","typeString":"function () pure returns (error)"}},"id":741,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4844:29:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":742,"nodeType":"RevertStatement","src":"4837:36:2"}]}}]},"documentation":{"id":725,"nodeType":"StructuredDocumentation","src":"4381:192:2","text":" @dev Reverts if the execution is not performed via delegatecall or the execution\n context is not of a proxy with an ERC-1967 compliant implementation pointing to self."},"id":746,"implemented":true,"kind":"function","modifiers":[],"name":"_checkProxy","nameLocation":"4587:11:2","nodeType":"FunctionDefinition","parameters":{"id":726,"nodeType":"ParameterList","parameters":[],"src":"4598:2:2"},"returnParameters":{"id":727,"nodeType":"ParameterList","parameters":[],"src":"4623:0:2"},"scope":814,"src":"4578:312:2","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":761,"nodeType":"Block","src":"5059:161:2","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":755,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":752,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"5081:4:2","typeDescriptions":{"typeIdentifier":"t_contract$_UUPSUpgradeable_$814","typeString":"contract UUPSUpgradeable"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_UUPSUpgradeable_$814","typeString":"contract UUPSUpgradeable"}],"id":751,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5073:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":750,"name":"address","nodeType":"ElementaryTypeName","src":"5073:7:2","typeDescriptions":{}}},"id":753,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5073:13:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":754,"name":"__self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":652,"src":"5090:6:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5073:23:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":760,"nodeType":"IfStatement","src":"5069:145:2","trueBody":{"id":759,"nodeType":"Block","src":"5098:116:2","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":756,"name":"UUPSUnauthorizedCallContext","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":659,"src":"5174:27:2","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$_t_error_$","typeString":"function () pure returns (error)"}},"id":757,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5174:29:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":758,"nodeType":"RevertStatement","src":"5167:36:2"}]}}]},"documentation":{"id":747,"nodeType":"StructuredDocumentation","src":"4896:106:2","text":" @dev Reverts if the execution is performed via delegatecall.\n See {notDelegated}."},"id":762,"implemented":true,"kind":"function","modifiers":[],"name":"_checkNotDelegated","nameLocation":"5016:18:2","nodeType":"FunctionDefinition","parameters":{"id":748,"nodeType":"ParameterList","parameters":[],"src":"5034:2:2"},"returnParameters":{"id":749,"nodeType":"ParameterList","parameters":[],"src":"5059:0:2"},"scope":814,"src":"5007:213:2","stateMutability":"view","virtual":true,"visibility":"internal"},{"documentation":{"id":763,"nodeType":"StructuredDocumentation","src":"5226:372:2","text":" @dev Function that should revert when `msg.sender` is not authorized to upgrade the contract. Called by\n {upgradeToAndCall}.\n Normally, this function will use an xref:access.adoc[access control] modifier such as {Ownable-onlyOwner}.\n ```solidity\n function _authorizeUpgrade(address) internal onlyOwner {}\n ```"},"id":768,"implemented":false,"kind":"function","modifiers":[],"name":"_authorizeUpgrade","nameLocation":"5612:17:2","nodeType":"FunctionDefinition","parameters":{"id":766,"nodeType":"ParameterList","parameters":[{"constant":false,"id":765,"mutability":"mutable","name":"newImplementation","nameLocation":"5638:17:2","nodeType":"VariableDeclaration","scope":768,"src":"5630:25:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":764,"name":"address","nodeType":"ElementaryTypeName","src":"5630:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5629:27:2"},"returnParameters":{"id":767,"nodeType":"ParameterList","parameters":[],"src":"5673:0:2"},"scope":814,"src":"5603:71:2","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":812,"nodeType":"Block","src":"6117:453:2","statements":[{"clauses":[{"block":{"id":801,"nodeType":"Block","src":"6207:212:2","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":787,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":784,"name":"slot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":782,"src":"6225:4:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"expression":{"id":785,"name":"ERC1967Utils","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2871,"src":"6233:12:2","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC1967Utils_$2871_$","typeString":"type(library ERC1967Utils)"}},"id":786,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6246:19:2","memberName":"IMPLEMENTATION_SLOT","nodeType":"MemberAccess","referencedDeclaration":2592,"src":"6233:32:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"6225:40:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":793,"nodeType":"IfStatement","src":"6221:120:2","trueBody":{"id":792,"nodeType":"Block","src":"6267:74:2","statements":[{"errorCall":{"arguments":[{"id":789,"name":"slot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":782,"src":"6321:4:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":788,"name":"UUPSUnsupportedProxiableUUID","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":664,"src":"6292:28:2","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_bytes32_$returns$_t_error_$","typeString":"function (bytes32) pure returns (error)"}},"id":790,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6292:34:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":791,"nodeType":"RevertStatement","src":"6285:41:2"}]}},{"expression":{"arguments":[{"id":797,"name":"newImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":771,"src":"6384:17:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":798,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":773,"src":"6403:4:2","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":794,"name":"ERC1967Utils","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2871,"src":"6354:12:2","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC1967Utils_$2871_$","typeString":"type(library ERC1967Utils)"}},"id":796,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6367:16:2","memberName":"upgradeToAndCall","nodeType":"MemberAccess","referencedDeclaration":2686,"src":"6354:29:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,bytes memory)"}},"id":799,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6354:54:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":800,"nodeType":"ExpressionStatement","src":"6354:54:2"}]},"errorName":"","id":802,"nodeType":"TryCatchClause","parameters":{"id":783,"nodeType":"ParameterList","parameters":[{"constant":false,"id":782,"mutability":"mutable","name":"slot","nameLocation":"6201:4:2","nodeType":"VariableDeclaration","scope":802,"src":"6193:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":781,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6193:7:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"6192:14:2"},"src":"6184:235:2"},{"block":{"id":809,"nodeType":"Block","src":"6426:138:2","statements":[{"errorCall":{"arguments":[{"id":806,"name":"newImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":771,"src":"6535:17:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":803,"name":"ERC1967Utils","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2871,"src":"6493:12:2","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC1967Utils_$2871_$","typeString":"type(library ERC1967Utils)"}},"id":805,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6506:28:2","memberName":"ERC1967InvalidImplementation","nodeType":"MemberAccess","referencedDeclaration":2597,"src":"6493:41:2","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$_t_error_$","typeString":"function (address) pure returns (error)"}},"id":807,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6493:60:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":808,"nodeType":"RevertStatement","src":"6486:67:2"}]},"errorName":"","id":810,"nodeType":"TryCatchClause","src":"6420:144:2"}],"externalCall":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"arguments":[{"id":777,"name":"newImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":771,"src":"6149:17:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":776,"name":"IERC1822Proxiable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2440,"src":"6131:17:2","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC1822Proxiable_$2440_$","typeString":"type(contract IERC1822Proxiable)"}},"id":778,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6131:36:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC1822Proxiable_$2440","typeString":"contract IERC1822Proxiable"}},"id":779,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6168:13:2","memberName":"proxiableUUID","nodeType":"MemberAccess","referencedDeclaration":2439,"src":"6131:50:2","typeDescriptions":{"typeIdentifier":"t_function_external_view$__$returns$_t_bytes32_$","typeString":"function () view external returns (bytes32)"}},"id":780,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6131:52:2","tryCall":true,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":811,"nodeType":"TryStatement","src":"6127:437:2"}]},"documentation":{"id":769,"nodeType":"StructuredDocumentation","src":"5680:347:2","text":" @dev Performs an implementation upgrade with a security check for UUPS proxies, and additional setup call.\n As a security check, {proxiableUUID} is invoked in the new implementation, and the return value\n is expected to be the implementation slot in ERC-1967.\n Emits an {IERC1967-Upgraded} event."},"id":813,"implemented":true,"kind":"function","modifiers":[],"name":"_upgradeToAndCallUUPS","nameLocation":"6041:21:2","nodeType":"FunctionDefinition","parameters":{"id":774,"nodeType":"ParameterList","parameters":[{"constant":false,"id":771,"mutability":"mutable","name":"newImplementation","nameLocation":"6071:17:2","nodeType":"VariableDeclaration","scope":813,"src":"6063:25:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":770,"name":"address","nodeType":"ElementaryTypeName","src":"6063:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":773,"mutability":"mutable","name":"data","nameLocation":"6103:4:2","nodeType":"VariableDeclaration","scope":813,"src":"6090:17:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":772,"name":"bytes","nodeType":"ElementaryTypeName","src":"6090:5:2","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"6062:46:2"},"returnParameters":{"id":775,"nodeType":"ParameterList","parameters":[],"src":"6117:0:2"},"scope":814,"src":"6032:538:2","stateMutability":"nonpayable","virtual":false,"visibility":"private"}],"scope":815,"src":"986:5586:2","usedErrors":[381,384,659,664,2597,2610,3031,3294],"usedEvents":[389,2392]}],"src":"115:6458:2"},"id":2},"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol","exportedSymbols":{"ContextUpgradeable":[1646],"ERC20Upgradeable":[1431],"IERC20":[2959],"IERC20Errors":[2482],"IERC20Metadata":[2985],"Initializable":[632]},"id":1432,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":816,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"105:24:3"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","file":"@openzeppelin/contracts/token/ERC20/IERC20.sol","id":818,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1432,"sourceUnit":2960,"src":"131:70:3","symbolAliases":[{"foreign":{"id":817,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2959,"src":"139:6:3","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol","file":"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol","id":820,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1432,"sourceUnit":2986,"src":"202:97:3","symbolAliases":[{"foreign":{"id":819,"name":"IERC20Metadata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2985,"src":"210:14:3","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol","file":"../../utils/ContextUpgradeable.sol","id":822,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1432,"sourceUnit":1647,"src":"300:70:3","symbolAliases":[{"foreign":{"id":821,"name":"ContextUpgradeable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1646,"src":"308:18:3","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/interfaces/draft-IERC6093.sol","file":"@openzeppelin/contracts/interfaces/draft-IERC6093.sol","id":824,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1432,"sourceUnit":2578,"src":"371:83:3","symbolAliases":[{"foreign":{"id":823,"name":"IERC20Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2482,"src":"379:12:3","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol","file":"../../proxy/utils/Initializable.sol","id":826,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1432,"sourceUnit":633,"src":"455:66:3","symbolAliases":[{"foreign":{"id":825,"name":"Initializable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":632,"src":"463:13:3","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":828,"name":"Initializable","nameLocations":["1319:13:3"],"nodeType":"IdentifierPath","referencedDeclaration":632,"src":"1319:13:3"},"id":829,"nodeType":"InheritanceSpecifier","src":"1319:13:3"},{"baseName":{"id":830,"name":"ContextUpgradeable","nameLocations":["1334:18:3"],"nodeType":"IdentifierPath","referencedDeclaration":1646,"src":"1334:18:3"},"id":831,"nodeType":"InheritanceSpecifier","src":"1334:18:3"},{"baseName":{"id":832,"name":"IERC20","nameLocations":["1354:6:3"],"nodeType":"IdentifierPath","referencedDeclaration":2959,"src":"1354:6:3"},"id":833,"nodeType":"InheritanceSpecifier","src":"1354:6:3"},{"baseName":{"id":834,"name":"IERC20Metadata","nameLocations":["1362:14:3"],"nodeType":"IdentifierPath","referencedDeclaration":2985,"src":"1362:14:3"},"id":835,"nodeType":"InheritanceSpecifier","src":"1362:14:3"},{"baseName":{"id":836,"name":"IERC20Errors","nameLocations":["1378:12:3"],"nodeType":"IdentifierPath","referencedDeclaration":2482,"src":"1378:12:3"},"id":837,"nodeType":"InheritanceSpecifier","src":"1378:12:3"}],"canonicalName":"ERC20Upgradeable","contractDependencies":[],"contractKind":"contract","documentation":{"id":827,"nodeType":"StructuredDocumentation","src":"523:757:3","text":" @dev Implementation of the {IERC20} interface.\n This implementation is agnostic to the way tokens are created. This means\n that a supply mechanism has to be added in a derived contract using {_mint}.\n TIP: For a detailed writeup see our guide\n https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n to implement supply mechanisms].\n The default value of {decimals} is 18. To change this, you should override\n this function so it returns a different value.\n We have followed general OpenZeppelin Contracts guidelines: functions revert\n instead returning `false` on failure. This behavior is nonetheless\n conventional and does not conflict with the expectations of ERC-20\n applications."},"fullyImplemented":true,"id":1431,"linearizedBaseContracts":[1431,2482,2985,2959,1646,632],"name":"ERC20Upgradeable","nameLocation":"1299:16:3","nodeType":"ContractDefinition","nodes":[{"canonicalName":"ERC20Upgradeable.ERC20Storage","documentation":{"id":838,"nodeType":"StructuredDocumentation","src":"1397:63:3","text":"@custom:storage-location erc7201:openzeppelin.storage.ERC20"},"id":855,"members":[{"constant":false,"id":842,"mutability":"mutable","name":"_balances","nameLocation":"1531:9:3","nodeType":"VariableDeclaration","scope":855,"src":"1495:45:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"typeName":{"id":841,"keyName":"account","keyNameLocation":"1511:7:3","keyType":{"id":839,"name":"address","nodeType":"ElementaryTypeName","src":"1503:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1495:35:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":840,"name":"uint256","nodeType":"ElementaryTypeName","src":"1522:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"internal"},{"constant":false,"id":848,"mutability":"mutable","name":"_allowances","nameLocation":"1615:11:3","nodeType":"VariableDeclaration","scope":855,"src":"1551:75:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"},"typeName":{"id":847,"keyName":"account","keyNameLocation":"1567:7:3","keyType":{"id":843,"name":"address","nodeType":"ElementaryTypeName","src":"1559:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1551:63:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":846,"keyName":"spender","keyNameLocation":"1594:7:3","keyType":{"id":844,"name":"address","nodeType":"ElementaryTypeName","src":"1586:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1578:35:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":845,"name":"uint256","nodeType":"ElementaryTypeName","src":"1605:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}}},"visibility":"internal"},{"constant":false,"id":850,"mutability":"mutable","name":"_totalSupply","nameLocation":"1645:12:3","nodeType":"VariableDeclaration","scope":855,"src":"1637:20:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":849,"name":"uint256","nodeType":"ElementaryTypeName","src":"1637:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":852,"mutability":"mutable","name":"_name","nameLocation":"1675:5:3","nodeType":"VariableDeclaration","scope":855,"src":"1668:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":851,"name":"string","nodeType":"ElementaryTypeName","src":"1668:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":854,"mutability":"mutable","name":"_symbol","nameLocation":"1697:7:3","nodeType":"VariableDeclaration","scope":855,"src":"1690:14:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":853,"name":"string","nodeType":"ElementaryTypeName","src":"1690:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"name":"ERC20Storage","nameLocation":"1472:12:3","nodeType":"StructDefinition","scope":1431,"src":"1465:246:3","visibility":"public"},{"constant":true,"id":858,"mutability":"constant","name":"ERC20StorageLocation","nameLocation":"1851:20:3","nodeType":"VariableDeclaration","scope":1431,"src":"1826:114:3","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":856,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1826:7:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"hexValue":"307835326336333234376531663437646231396435636530343630303330633439376630363763613463656266373162613938656561646162653230626163653030","id":857,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1874:66:3","typeDescriptions":{"typeIdentifier":"t_rational_37439836327923360225337895871394760624280537466773280374265222508165906222592_by_1","typeString":"int_const 3743...(69 digits omitted)...2592"},"value":"0x52c63247e1f47db19d5ce0460030c497f067ca4cebf71ba98eeadabe20bace00"},"visibility":"private"},{"body":{"id":865,"nodeType":"Block","src":"2021:79:3","statements":[{"AST":{"nativeSrc":"2040:54:3","nodeType":"YulBlock","src":"2040:54:3","statements":[{"nativeSrc":"2054:30:3","nodeType":"YulAssignment","src":"2054:30:3","value":{"name":"ERC20StorageLocation","nativeSrc":"2064:20:3","nodeType":"YulIdentifier","src":"2064:20:3"},"variableNames":[{"name":"$.slot","nativeSrc":"2054:6:3","nodeType":"YulIdentifier","src":"2054:6:3"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":862,"isOffset":false,"isSlot":true,"src":"2054:6:3","suffix":"slot","valueSize":1},{"declaration":858,"isOffset":false,"isSlot":false,"src":"2064:20:3","valueSize":1}],"id":864,"nodeType":"InlineAssembly","src":"2031:63:3"}]},"id":866,"implemented":true,"kind":"function","modifiers":[],"name":"_getERC20Storage","nameLocation":"1956:16:3","nodeType":"FunctionDefinition","parameters":{"id":859,"nodeType":"ParameterList","parameters":[],"src":"1972:2:3"},"returnParameters":{"id":863,"nodeType":"ParameterList","parameters":[{"constant":false,"id":862,"mutability":"mutable","name":"$","nameLocation":"2018:1:3","nodeType":"VariableDeclaration","scope":866,"src":"1997:22:3","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_ERC20Storage_$855_storage_ptr","typeString":"struct ERC20Upgradeable.ERC20Storage"},"typeName":{"id":861,"nodeType":"UserDefinedTypeName","pathNode":{"id":860,"name":"ERC20Storage","nameLocations":["1997:12:3"],"nodeType":"IdentifierPath","referencedDeclaration":855,"src":"1997:12:3"},"referencedDeclaration":855,"src":"1997:12:3","typeDescriptions":{"typeIdentifier":"t_struct$_ERC20Storage_$855_storage_ptr","typeString":"struct ERC20Upgradeable.ERC20Storage"}},"visibility":"internal"}],"src":"1996:24:3"},"scope":1431,"src":"1947:153:3","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":881,"nodeType":"Block","src":"2355:55:3","statements":[{"expression":{"arguments":[{"id":877,"name":"name_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":869,"src":"2388:5:3","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":878,"name":"symbol_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":871,"src":"2395:7:3","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":876,"name":"__ERC20_init_unchained","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":910,"src":"2365:22:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory,string memory)"}},"id":879,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2365:38:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":880,"nodeType":"ExpressionStatement","src":"2365:38:3"}]},"documentation":{"id":867,"nodeType":"StructuredDocumentation","src":"2106:152:3","text":" @dev Sets the values for {name} and {symbol}.\n Both values are immutable: they can only be set once during construction."},"id":882,"implemented":true,"kind":"function","modifiers":[{"id":874,"kind":"modifierInvocation","modifierName":{"id":873,"name":"onlyInitializing","nameLocations":["2338:16:3"],"nodeType":"IdentifierPath","referencedDeclaration":527,"src":"2338:16:3"},"nodeType":"ModifierInvocation","src":"2338:16:3"}],"name":"__ERC20_init","nameLocation":"2272:12:3","nodeType":"FunctionDefinition","parameters":{"id":872,"nodeType":"ParameterList","parameters":[{"constant":false,"id":869,"mutability":"mutable","name":"name_","nameLocation":"2299:5:3","nodeType":"VariableDeclaration","scope":882,"src":"2285:19:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":868,"name":"string","nodeType":"ElementaryTypeName","src":"2285:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":871,"mutability":"mutable","name":"symbol_","nameLocation":"2320:7:3","nodeType":"VariableDeclaration","scope":882,"src":"2306:21:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":870,"name":"string","nodeType":"ElementaryTypeName","src":"2306:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2284:44:3"},"returnParameters":{"id":875,"nodeType":"ParameterList","parameters":[],"src":"2355:0:3"},"scope":1431,"src":"2263:147:3","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":909,"nodeType":"Block","src":"2518:114:3","statements":[{"assignments":[893],"declarations":[{"constant":false,"id":893,"mutability":"mutable","name":"$","nameLocation":"2549:1:3","nodeType":"VariableDeclaration","scope":909,"src":"2528:22:3","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_ERC20Storage_$855_storage_ptr","typeString":"struct ERC20Upgradeable.ERC20Storage"},"typeName":{"id":892,"nodeType":"UserDefinedTypeName","pathNode":{"id":891,"name":"ERC20Storage","nameLocations":["2528:12:3"],"nodeType":"IdentifierPath","referencedDeclaration":855,"src":"2528:12:3"},"referencedDeclaration":855,"src":"2528:12:3","typeDescriptions":{"typeIdentifier":"t_struct$_ERC20Storage_$855_storage_ptr","typeString":"struct ERC20Upgradeable.ERC20Storage"}},"visibility":"internal"}],"id":896,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":894,"name":"_getERC20Storage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":866,"src":"2553:16:3","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_ERC20Storage_$855_storage_ptr_$","typeString":"function () pure returns (struct ERC20Upgradeable.ERC20Storage storage pointer)"}},"id":895,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2553:18:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_ERC20Storage_$855_storage_ptr","typeString":"struct ERC20Upgradeable.ERC20Storage storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"2528:43:3"},{"expression":{"id":901,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":897,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":893,"src":"2581:1:3","typeDescriptions":{"typeIdentifier":"t_struct$_ERC20Storage_$855_storage_ptr","typeString":"struct ERC20Upgradeable.ERC20Storage storage pointer"}},"id":899,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"2583:5:3","memberName":"_name","nodeType":"MemberAccess","referencedDeclaration":852,"src":"2581:7:3","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":900,"name":"name_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":884,"src":"2591:5:3","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"2581:15:3","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":902,"nodeType":"ExpressionStatement","src":"2581:15:3"},{"expression":{"id":907,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":903,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":893,"src":"2606:1:3","typeDescriptions":{"typeIdentifier":"t_struct$_ERC20Storage_$855_storage_ptr","typeString":"struct ERC20Upgradeable.ERC20Storage storage pointer"}},"id":905,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"2608:7:3","memberName":"_symbol","nodeType":"MemberAccess","referencedDeclaration":854,"src":"2606:9:3","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":906,"name":"symbol_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":886,"src":"2618:7:3","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"2606:19:3","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":908,"nodeType":"ExpressionStatement","src":"2606:19:3"}]},"id":910,"implemented":true,"kind":"function","modifiers":[{"id":889,"kind":"modifierInvocation","modifierName":{"id":888,"name":"onlyInitializing","nameLocations":["2501:16:3"],"nodeType":"IdentifierPath","referencedDeclaration":527,"src":"2501:16:3"},"nodeType":"ModifierInvocation","src":"2501:16:3"}],"name":"__ERC20_init_unchained","nameLocation":"2425:22:3","nodeType":"FunctionDefinition","parameters":{"id":887,"nodeType":"ParameterList","parameters":[{"constant":false,"id":884,"mutability":"mutable","name":"name_","nameLocation":"2462:5:3","nodeType":"VariableDeclaration","scope":910,"src":"2448:19:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":883,"name":"string","nodeType":"ElementaryTypeName","src":"2448:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":886,"mutability":"mutable","name":"symbol_","nameLocation":"2483:7:3","nodeType":"VariableDeclaration","scope":910,"src":"2469:21:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":885,"name":"string","nodeType":"ElementaryTypeName","src":"2469:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2447:44:3"},"returnParameters":{"id":890,"nodeType":"ParameterList","parameters":[],"src":"2518:0:3"},"scope":1431,"src":"2416:216:3","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"baseFunctions":[2972],"body":{"id":925,"nodeType":"Block","src":"2757:84:3","statements":[{"assignments":[918],"declarations":[{"constant":false,"id":918,"mutability":"mutable","name":"$","nameLocation":"2788:1:3","nodeType":"VariableDeclaration","scope":925,"src":"2767:22:3","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_ERC20Storage_$855_storage_ptr","typeString":"struct ERC20Upgradeable.ERC20Storage"},"typeName":{"id":917,"nodeType":"UserDefinedTypeName","pathNode":{"id":916,"name":"ERC20Storage","nameLocations":["2767:12:3"],"nodeType":"IdentifierPath","referencedDeclaration":855,"src":"2767:12:3"},"referencedDeclaration":855,"src":"2767:12:3","typeDescriptions":{"typeIdentifier":"t_struct$_ERC20Storage_$855_storage_ptr","typeString":"struct ERC20Upgradeable.ERC20Storage"}},"visibility":"internal"}],"id":921,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":919,"name":"_getERC20Storage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":866,"src":"2792:16:3","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_ERC20Storage_$855_storage_ptr_$","typeString":"function () pure returns (struct ERC20Upgradeable.ERC20Storage storage pointer)"}},"id":920,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2792:18:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_ERC20Storage_$855_storage_ptr","typeString":"struct ERC20Upgradeable.ERC20Storage storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"2767:43:3"},{"expression":{"expression":{"id":922,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":918,"src":"2827:1:3","typeDescriptions":{"typeIdentifier":"t_struct$_ERC20Storage_$855_storage_ptr","typeString":"struct ERC20Upgradeable.ERC20Storage storage pointer"}},"id":923,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2829:5:3","memberName":"_name","nodeType":"MemberAccess","referencedDeclaration":852,"src":"2827:7:3","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"functionReturnParameters":915,"id":924,"nodeType":"Return","src":"2820:14:3"}]},"documentation":{"id":911,"nodeType":"StructuredDocumentation","src":"2638:54:3","text":" @dev Returns the name of the token."},"functionSelector":"06fdde03","id":926,"implemented":true,"kind":"function","modifiers":[],"name":"name","nameLocation":"2706:4:3","nodeType":"FunctionDefinition","parameters":{"id":912,"nodeType":"ParameterList","parameters":[],"src":"2710:2:3"},"returnParameters":{"id":915,"nodeType":"ParameterList","parameters":[{"constant":false,"id":914,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":926,"src":"2742:13:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":913,"name":"string","nodeType":"ElementaryTypeName","src":"2742:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2741:15:3"},"scope":1431,"src":"2697:144:3","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[2978],"body":{"id":941,"nodeType":"Block","src":"3016:86:3","statements":[{"assignments":[934],"declarations":[{"constant":false,"id":934,"mutability":"mutable","name":"$","nameLocation":"3047:1:3","nodeType":"VariableDeclaration","scope":941,"src":"3026:22:3","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_ERC20Storage_$855_storage_ptr","typeString":"struct ERC20Upgradeable.ERC20Storage"},"typeName":{"id":933,"nodeType":"UserDefinedTypeName","pathNode":{"id":932,"name":"ERC20Storage","nameLocations":["3026:12:3"],"nodeType":"IdentifierPath","referencedDeclaration":855,"src":"3026:12:3"},"referencedDeclaration":855,"src":"3026:12:3","typeDescriptions":{"typeIdentifier":"t_struct$_ERC20Storage_$855_storage_ptr","typeString":"struct ERC20Upgradeable.ERC20Storage"}},"visibility":"internal"}],"id":937,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":935,"name":"_getERC20Storage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":866,"src":"3051:16:3","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_ERC20Storage_$855_storage_ptr_$","typeString":"function () pure returns (struct ERC20Upgradeable.ERC20Storage storage pointer)"}},"id":936,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3051:18:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_ERC20Storage_$855_storage_ptr","typeString":"struct ERC20Upgradeable.ERC20Storage storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"3026:43:3"},{"expression":{"expression":{"id":938,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":934,"src":"3086:1:3","typeDescriptions":{"typeIdentifier":"t_struct$_ERC20Storage_$855_storage_ptr","typeString":"struct ERC20Upgradeable.ERC20Storage storage pointer"}},"id":939,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3088:7:3","memberName":"_symbol","nodeType":"MemberAccess","referencedDeclaration":854,"src":"3086:9:3","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"functionReturnParameters":931,"id":940,"nodeType":"Return","src":"3079:16:3"}]},"documentation":{"id":927,"nodeType":"StructuredDocumentation","src":"2847:102:3","text":" @dev Returns the symbol of the token, usually a shorter version of the\n name."},"functionSelector":"95d89b41","id":942,"implemented":true,"kind":"function","modifiers":[],"name":"symbol","nameLocation":"2963:6:3","nodeType":"FunctionDefinition","parameters":{"id":928,"nodeType":"ParameterList","parameters":[],"src":"2969:2:3"},"returnParameters":{"id":931,"nodeType":"ParameterList","parameters":[{"constant":false,"id":930,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":942,"src":"3001:13:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":929,"name":"string","nodeType":"ElementaryTypeName","src":"3001:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3000:15:3"},"scope":1431,"src":"2954:148:3","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[2984],"body":{"id":950,"nodeType":"Block","src":"3791:26:3","statements":[{"expression":{"hexValue":"3138","id":948,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3808:2:3","typeDescriptions":{"typeIdentifier":"t_rational_18_by_1","typeString":"int_const 18"},"value":"18"},"functionReturnParameters":947,"id":949,"nodeType":"Return","src":"3801:9:3"}]},"documentation":{"id":943,"nodeType":"StructuredDocumentation","src":"3108:622:3","text":" @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5.05` (`505 / 10 ** 2`).\n Tokens usually opt for a value of 18, imitating the relationship between\n Ether and Wei. This is the default value returned by this function, unless\n it's overridden.\n NOTE: This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {IERC20-balanceOf} and {IERC20-transfer}."},"functionSelector":"313ce567","id":951,"implemented":true,"kind":"function","modifiers":[],"name":"decimals","nameLocation":"3744:8:3","nodeType":"FunctionDefinition","parameters":{"id":944,"nodeType":"ParameterList","parameters":[],"src":"3752:2:3"},"returnParameters":{"id":947,"nodeType":"ParameterList","parameters":[{"constant":false,"id":946,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":951,"src":"3784:5:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":945,"name":"uint8","nodeType":"ElementaryTypeName","src":"3784:5:3","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"3783:7:3"},"scope":1431,"src":"3735:82:3","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[2908],"body":{"id":966,"nodeType":"Block","src":"3911:91:3","statements":[{"assignments":[959],"declarations":[{"constant":false,"id":959,"mutability":"mutable","name":"$","nameLocation":"3942:1:3","nodeType":"VariableDeclaration","scope":966,"src":"3921:22:3","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_ERC20Storage_$855_storage_ptr","typeString":"struct ERC20Upgradeable.ERC20Storage"},"typeName":{"id":958,"nodeType":"UserDefinedTypeName","pathNode":{"id":957,"name":"ERC20Storage","nameLocations":["3921:12:3"],"nodeType":"IdentifierPath","referencedDeclaration":855,"src":"3921:12:3"},"referencedDeclaration":855,"src":"3921:12:3","typeDescriptions":{"typeIdentifier":"t_struct$_ERC20Storage_$855_storage_ptr","typeString":"struct ERC20Upgradeable.ERC20Storage"}},"visibility":"internal"}],"id":962,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":960,"name":"_getERC20Storage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":866,"src":"3946:16:3","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_ERC20Storage_$855_storage_ptr_$","typeString":"function () pure returns (struct ERC20Upgradeable.ERC20Storage storage pointer)"}},"id":961,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3946:18:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_ERC20Storage_$855_storage_ptr","typeString":"struct ERC20Upgradeable.ERC20Storage storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"3921:43:3"},{"expression":{"expression":{"id":963,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":959,"src":"3981:1:3","typeDescriptions":{"typeIdentifier":"t_struct$_ERC20Storage_$855_storage_ptr","typeString":"struct ERC20Upgradeable.ERC20Storage storage pointer"}},"id":964,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3983:12:3","memberName":"_totalSupply","nodeType":"MemberAccess","referencedDeclaration":850,"src":"3981:14:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":956,"id":965,"nodeType":"Return","src":"3974:21:3"}]},"documentation":{"id":952,"nodeType":"StructuredDocumentation","src":"3823:22:3","text":"@inheritdoc IERC20"},"functionSelector":"18160ddd","id":967,"implemented":true,"kind":"function","modifiers":[],"name":"totalSupply","nameLocation":"3859:11:3","nodeType":"FunctionDefinition","parameters":{"id":953,"nodeType":"ParameterList","parameters":[],"src":"3870:2:3"},"returnParameters":{"id":956,"nodeType":"ParameterList","parameters":[{"constant":false,"id":955,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":967,"src":"3902:7:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":954,"name":"uint256","nodeType":"ElementaryTypeName","src":"3902:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3901:9:3"},"scope":1431,"src":"3850:152:3","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[2916],"body":{"id":986,"nodeType":"Block","src":"4109:97:3","statements":[{"assignments":[977],"declarations":[{"constant":false,"id":977,"mutability":"mutable","name":"$","nameLocation":"4140:1:3","nodeType":"VariableDeclaration","scope":986,"src":"4119:22:3","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_ERC20Storage_$855_storage_ptr","typeString":"struct ERC20Upgradeable.ERC20Storage"},"typeName":{"id":976,"nodeType":"UserDefinedTypeName","pathNode":{"id":975,"name":"ERC20Storage","nameLocations":["4119:12:3"],"nodeType":"IdentifierPath","referencedDeclaration":855,"src":"4119:12:3"},"referencedDeclaration":855,"src":"4119:12:3","typeDescriptions":{"typeIdentifier":"t_struct$_ERC20Storage_$855_storage_ptr","typeString":"struct ERC20Upgradeable.ERC20Storage"}},"visibility":"internal"}],"id":980,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":978,"name":"_getERC20Storage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":866,"src":"4144:16:3","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_ERC20Storage_$855_storage_ptr_$","typeString":"function () pure returns (struct ERC20Upgradeable.ERC20Storage storage pointer)"}},"id":979,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4144:18:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_ERC20Storage_$855_storage_ptr","typeString":"struct ERC20Upgradeable.ERC20Storage storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"4119:43:3"},{"expression":{"baseExpression":{"expression":{"id":981,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":977,"src":"4179:1:3","typeDescriptions":{"typeIdentifier":"t_struct$_ERC20Storage_$855_storage_ptr","typeString":"struct ERC20Upgradeable.ERC20Storage storage pointer"}},"id":982,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4181:9:3","memberName":"_balances","nodeType":"MemberAccess","referencedDeclaration":842,"src":"4179:11:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":984,"indexExpression":{"id":983,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":970,"src":"4191:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4179:20:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":974,"id":985,"nodeType":"Return","src":"4172:27:3"}]},"documentation":{"id":968,"nodeType":"StructuredDocumentation","src":"4008:22:3","text":"@inheritdoc IERC20"},"functionSelector":"70a08231","id":987,"implemented":true,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"4044:9:3","nodeType":"FunctionDefinition","parameters":{"id":971,"nodeType":"ParameterList","parameters":[{"constant":false,"id":970,"mutability":"mutable","name":"account","nameLocation":"4062:7:3","nodeType":"VariableDeclaration","scope":987,"src":"4054:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":969,"name":"address","nodeType":"ElementaryTypeName","src":"4054:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4053:17:3"},"returnParameters":{"id":974,"nodeType":"ParameterList","parameters":[{"constant":false,"id":973,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":987,"src":"4100:7:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":972,"name":"uint256","nodeType":"ElementaryTypeName","src":"4100:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4099:9:3"},"scope":1431,"src":"4035:171:3","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[2926],"body":{"id":1010,"nodeType":"Block","src":"4476:103:3","statements":[{"assignments":[998],"declarations":[{"constant":false,"id":998,"mutability":"mutable","name":"owner","nameLocation":"4494:5:3","nodeType":"VariableDeclaration","scope":1010,"src":"4486:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":997,"name":"address","nodeType":"ElementaryTypeName","src":"4486:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":1001,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":999,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1628,"src":"4502:10:3","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1000,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4502:12:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"4486:28:3"},{"expression":{"arguments":[{"id":1003,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":998,"src":"4534:5:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1004,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":990,"src":"4541:2:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1005,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":992,"src":"4545:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1002,"name":"_transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1138,"src":"4524:9:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1006,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4524:27:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1007,"nodeType":"ExpressionStatement","src":"4524:27:3"},{"expression":{"hexValue":"74727565","id":1008,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"4568:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":996,"id":1009,"nodeType":"Return","src":"4561:11:3"}]},"documentation":{"id":988,"nodeType":"StructuredDocumentation","src":"4212:184:3","text":" @dev See {IERC20-transfer}.\n Requirements:\n - `to` cannot be the zero address.\n - the caller must have a balance of at least `value`."},"functionSelector":"a9059cbb","id":1011,"implemented":true,"kind":"function","modifiers":[],"name":"transfer","nameLocation":"4410:8:3","nodeType":"FunctionDefinition","parameters":{"id":993,"nodeType":"ParameterList","parameters":[{"constant":false,"id":990,"mutability":"mutable","name":"to","nameLocation":"4427:2:3","nodeType":"VariableDeclaration","scope":1011,"src":"4419:10:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":989,"name":"address","nodeType":"ElementaryTypeName","src":"4419:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":992,"mutability":"mutable","name":"value","nameLocation":"4439:5:3","nodeType":"VariableDeclaration","scope":1011,"src":"4431:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":991,"name":"uint256","nodeType":"ElementaryTypeName","src":"4431:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4418:27:3"},"returnParameters":{"id":996,"nodeType":"ParameterList","parameters":[{"constant":false,"id":995,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1011,"src":"4470:4:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":994,"name":"bool","nodeType":"ElementaryTypeName","src":"4470:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4469:6:3"},"scope":1431,"src":"4401:178:3","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[2936],"body":{"id":1034,"nodeType":"Block","src":"4701:106:3","statements":[{"assignments":[1023],"declarations":[{"constant":false,"id":1023,"mutability":"mutable","name":"$","nameLocation":"4732:1:3","nodeType":"VariableDeclaration","scope":1034,"src":"4711:22:3","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_ERC20Storage_$855_storage_ptr","typeString":"struct ERC20Upgradeable.ERC20Storage"},"typeName":{"id":1022,"nodeType":"UserDefinedTypeName","pathNode":{"id":1021,"name":"ERC20Storage","nameLocations":["4711:12:3"],"nodeType":"IdentifierPath","referencedDeclaration":855,"src":"4711:12:3"},"referencedDeclaration":855,"src":"4711:12:3","typeDescriptions":{"typeIdentifier":"t_struct$_ERC20Storage_$855_storage_ptr","typeString":"struct ERC20Upgradeable.ERC20Storage"}},"visibility":"internal"}],"id":1026,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":1024,"name":"_getERC20Storage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":866,"src":"4736:16:3","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_ERC20Storage_$855_storage_ptr_$","typeString":"function () pure returns (struct ERC20Upgradeable.ERC20Storage storage pointer)"}},"id":1025,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4736:18:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_ERC20Storage_$855_storage_ptr","typeString":"struct ERC20Upgradeable.ERC20Storage storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"4711:43:3"},{"expression":{"baseExpression":{"baseExpression":{"expression":{"id":1027,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1023,"src":"4771:1:3","typeDescriptions":{"typeIdentifier":"t_struct$_ERC20Storage_$855_storage_ptr","typeString":"struct ERC20Upgradeable.ERC20Storage storage pointer"}},"id":1028,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4773:11:3","memberName":"_allowances","nodeType":"MemberAccess","referencedDeclaration":848,"src":"4771:13:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"}},"id":1030,"indexExpression":{"id":1029,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1014,"src":"4785:5:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4771:20:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1032,"indexExpression":{"id":1031,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1016,"src":"4792:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4771:29:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1020,"id":1033,"nodeType":"Return","src":"4764:36:3"}]},"documentation":{"id":1012,"nodeType":"StructuredDocumentation","src":"4585:22:3","text":"@inheritdoc IERC20"},"functionSelector":"dd62ed3e","id":1035,"implemented":true,"kind":"function","modifiers":[],"name":"allowance","nameLocation":"4621:9:3","nodeType":"FunctionDefinition","parameters":{"id":1017,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1014,"mutability":"mutable","name":"owner","nameLocation":"4639:5:3","nodeType":"VariableDeclaration","scope":1035,"src":"4631:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1013,"name":"address","nodeType":"ElementaryTypeName","src":"4631:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1016,"mutability":"mutable","name":"spender","nameLocation":"4654:7:3","nodeType":"VariableDeclaration","scope":1035,"src":"4646:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1015,"name":"address","nodeType":"ElementaryTypeName","src":"4646:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4630:32:3"},"returnParameters":{"id":1020,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1019,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1035,"src":"4692:7:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1018,"name":"uint256","nodeType":"ElementaryTypeName","src":"4692:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4691:9:3"},"scope":1431,"src":"4612:195:3","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[2946],"body":{"id":1058,"nodeType":"Block","src":"5193:107:3","statements":[{"assignments":[1046],"declarations":[{"constant":false,"id":1046,"mutability":"mutable","name":"owner","nameLocation":"5211:5:3","nodeType":"VariableDeclaration","scope":1058,"src":"5203:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1045,"name":"address","nodeType":"ElementaryTypeName","src":"5203:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":1049,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":1047,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1628,"src":"5219:10:3","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1048,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5219:12:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"5203:28:3"},{"expression":{"arguments":[{"id":1051,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1046,"src":"5250:5:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1052,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1038,"src":"5257:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1053,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1040,"src":"5266:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1050,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[1314,1382],"referencedDeclaration":1314,"src":"5241:8:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1054,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5241:31:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1055,"nodeType":"ExpressionStatement","src":"5241:31:3"},{"expression":{"hexValue":"74727565","id":1056,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"5289:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":1044,"id":1057,"nodeType":"Return","src":"5282:11:3"}]},"documentation":{"id":1036,"nodeType":"StructuredDocumentation","src":"4813:296:3","text":" @dev See {IERC20-approve}.\n NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n `transferFrom`. This is semantically equivalent to an infinite approval.\n Requirements:\n - `spender` cannot be the zero address."},"functionSelector":"095ea7b3","id":1059,"implemented":true,"kind":"function","modifiers":[],"name":"approve","nameLocation":"5123:7:3","nodeType":"FunctionDefinition","parameters":{"id":1041,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1038,"mutability":"mutable","name":"spender","nameLocation":"5139:7:3","nodeType":"VariableDeclaration","scope":1059,"src":"5131:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1037,"name":"address","nodeType":"ElementaryTypeName","src":"5131:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1040,"mutability":"mutable","name":"value","nameLocation":"5156:5:3","nodeType":"VariableDeclaration","scope":1059,"src":"5148:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1039,"name":"uint256","nodeType":"ElementaryTypeName","src":"5148:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5130:32:3"},"returnParameters":{"id":1044,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1043,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1059,"src":"5187:4:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1042,"name":"bool","nodeType":"ElementaryTypeName","src":"5187:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"5186:6:3"},"scope":1431,"src":"5114:186:3","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[2958],"body":{"id":1090,"nodeType":"Block","src":"5985:151:3","statements":[{"assignments":[1072],"declarations":[{"constant":false,"id":1072,"mutability":"mutable","name":"spender","nameLocation":"6003:7:3","nodeType":"VariableDeclaration","scope":1090,"src":"5995:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1071,"name":"address","nodeType":"ElementaryTypeName","src":"5995:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":1075,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":1073,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1628,"src":"6013:10:3","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1074,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6013:12:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"5995:30:3"},{"expression":{"arguments":[{"id":1077,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1062,"src":"6051:4:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1078,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1072,"src":"6057:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1079,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1066,"src":"6066:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1076,"name":"_spendAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1430,"src":"6035:15:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1080,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6035:37:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1081,"nodeType":"ExpressionStatement","src":"6035:37:3"},{"expression":{"arguments":[{"id":1083,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1062,"src":"6092:4:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1084,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1064,"src":"6098:2:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1085,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1066,"src":"6102:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1082,"name":"_transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1138,"src":"6082:9:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1086,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6082:26:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1087,"nodeType":"ExpressionStatement","src":"6082:26:3"},{"expression":{"hexValue":"74727565","id":1088,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"6125:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":1070,"id":1089,"nodeType":"Return","src":"6118:11:3"}]},"documentation":{"id":1060,"nodeType":"StructuredDocumentation","src":"5306:581:3","text":" @dev See {IERC20-transferFrom}.\n Skips emitting an {Approval} event indicating an allowance update. This is not\n required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve].\n NOTE: Does not update the allowance if the current allowance\n is the maximum `uint256`.\n Requirements:\n - `from` and `to` cannot be the zero address.\n - `from` must have a balance of at least `value`.\n - the caller must have allowance for ``from``'s tokens of at least\n `value`."},"functionSelector":"23b872dd","id":1091,"implemented":true,"kind":"function","modifiers":[],"name":"transferFrom","nameLocation":"5901:12:3","nodeType":"FunctionDefinition","parameters":{"id":1067,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1062,"mutability":"mutable","name":"from","nameLocation":"5922:4:3","nodeType":"VariableDeclaration","scope":1091,"src":"5914:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1061,"name":"address","nodeType":"ElementaryTypeName","src":"5914:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1064,"mutability":"mutable","name":"to","nameLocation":"5936:2:3","nodeType":"VariableDeclaration","scope":1091,"src":"5928:10:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1063,"name":"address","nodeType":"ElementaryTypeName","src":"5928:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1066,"mutability":"mutable","name":"value","nameLocation":"5948:5:3","nodeType":"VariableDeclaration","scope":1091,"src":"5940:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1065,"name":"uint256","nodeType":"ElementaryTypeName","src":"5940:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5913:41:3"},"returnParameters":{"id":1070,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1069,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1091,"src":"5979:4:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1068,"name":"bool","nodeType":"ElementaryTypeName","src":"5979:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"5978:6:3"},"scope":1431,"src":"5892:244:3","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":1137,"nodeType":"Block","src":"6578:231:3","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1106,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1101,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1094,"src":"6592:4:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1104,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6608:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1103,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6600:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1102,"name":"address","nodeType":"ElementaryTypeName","src":"6600:7:3","typeDescriptions":{}}},"id":1105,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6600:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6592:18:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1115,"nodeType":"IfStatement","src":"6588:86:3","trueBody":{"id":1114,"nodeType":"Block","src":"6612:62:3","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":1110,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6660:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1109,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6652:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1108,"name":"address","nodeType":"ElementaryTypeName","src":"6652:7:3","typeDescriptions":{}}},"id":1111,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6652:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1107,"name":"ERC20InvalidSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2457,"src":"6633:18:3","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$_t_error_$","typeString":"function (address) pure returns (error)"}},"id":1112,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6633:30:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":1113,"nodeType":"RevertStatement","src":"6626:37:3"}]}},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1121,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1116,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1096,"src":"6687:2:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1119,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6701:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1118,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6693:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1117,"name":"address","nodeType":"ElementaryTypeName","src":"6693:7:3","typeDescriptions":{}}},"id":1120,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6693:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6687:16:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1130,"nodeType":"IfStatement","src":"6683:86:3","trueBody":{"id":1129,"nodeType":"Block","src":"6705:64:3","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":1125,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6755:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1124,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6747:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1123,"name":"address","nodeType":"ElementaryTypeName","src":"6747:7:3","typeDescriptions":{}}},"id":1126,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6747:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1122,"name":"ERC20InvalidReceiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2462,"src":"6726:20:3","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$_t_error_$","typeString":"function (address) pure returns (error)"}},"id":1127,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6726:32:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":1128,"nodeType":"RevertStatement","src":"6719:39:3"}]}},{"expression":{"arguments":[{"id":1132,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1094,"src":"6786:4:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1133,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1096,"src":"6792:2:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1134,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1098,"src":"6796:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1131,"name":"_update","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1230,"src":"6778:7:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1135,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6778:24:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1136,"nodeType":"ExpressionStatement","src":"6778:24:3"}]},"documentation":{"id":1092,"nodeType":"StructuredDocumentation","src":"6142:362:3","text":" @dev Moves a `value` amount of tokens from `from` to `to`.\n This internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n NOTE: This function is not virtual, {_update} should be overridden instead."},"id":1138,"implemented":true,"kind":"function","modifiers":[],"name":"_transfer","nameLocation":"6518:9:3","nodeType":"FunctionDefinition","parameters":{"id":1099,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1094,"mutability":"mutable","name":"from","nameLocation":"6536:4:3","nodeType":"VariableDeclaration","scope":1138,"src":"6528:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1093,"name":"address","nodeType":"ElementaryTypeName","src":"6528:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1096,"mutability":"mutable","name":"to","nameLocation":"6550:2:3","nodeType":"VariableDeclaration","scope":1138,"src":"6542:10:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1095,"name":"address","nodeType":"ElementaryTypeName","src":"6542:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1098,"mutability":"mutable","name":"value","nameLocation":"6562:5:3","nodeType":"VariableDeclaration","scope":1138,"src":"6554:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1097,"name":"uint256","nodeType":"ElementaryTypeName","src":"6554:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6527:41:3"},"returnParameters":{"id":1100,"nodeType":"ParameterList","parameters":[],"src":"6578:0:3"},"scope":1431,"src":"6509:300:3","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1229,"nodeType":"Block","src":"7199:1095:3","statements":[{"assignments":[1150],"declarations":[{"constant":false,"id":1150,"mutability":"mutable","name":"$","nameLocation":"7230:1:3","nodeType":"VariableDeclaration","scope":1229,"src":"7209:22:3","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_ERC20Storage_$855_storage_ptr","typeString":"struct ERC20Upgradeable.ERC20Storage"},"typeName":{"id":1149,"nodeType":"UserDefinedTypeName","pathNode":{"id":1148,"name":"ERC20Storage","nameLocations":["7209:12:3"],"nodeType":"IdentifierPath","referencedDeclaration":855,"src":"7209:12:3"},"referencedDeclaration":855,"src":"7209:12:3","typeDescriptions":{"typeIdentifier":"t_struct$_ERC20Storage_$855_storage_ptr","typeString":"struct ERC20Upgradeable.ERC20Storage"}},"visibility":"internal"}],"id":1153,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":1151,"name":"_getERC20Storage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":866,"src":"7234:16:3","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_ERC20Storage_$855_storage_ptr_$","typeString":"function () pure returns (struct ERC20Upgradeable.ERC20Storage storage pointer)"}},"id":1152,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7234:18:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_ERC20Storage_$855_storage_ptr","typeString":"struct ERC20Upgradeable.ERC20Storage storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"7209:43:3"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1159,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1154,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1141,"src":"7266:4:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1157,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7282:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1156,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7274:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1155,"name":"address","nodeType":"ElementaryTypeName","src":"7274:7:3","typeDescriptions":{}}},"id":1158,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7274:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"7266:18:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1196,"nodeType":"Block","src":"7442:366:3","statements":[{"assignments":[1168],"declarations":[{"constant":false,"id":1168,"mutability":"mutable","name":"fromBalance","nameLocation":"7464:11:3","nodeType":"VariableDeclaration","scope":1196,"src":"7456:19:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1167,"name":"uint256","nodeType":"ElementaryTypeName","src":"7456:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1173,"initialValue":{"baseExpression":{"expression":{"id":1169,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1150,"src":"7478:1:3","typeDescriptions":{"typeIdentifier":"t_struct$_ERC20Storage_$855_storage_ptr","typeString":"struct ERC20Upgradeable.ERC20Storage storage pointer"}},"id":1170,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7480:9:3","memberName":"_balances","nodeType":"MemberAccess","referencedDeclaration":842,"src":"7478:11:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1172,"indexExpression":{"id":1171,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1141,"src":"7490:4:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7478:17:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"7456:39:3"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1176,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1174,"name":"fromBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1168,"src":"7513:11:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":1175,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1145,"src":"7527:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7513:19:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1184,"nodeType":"IfStatement","src":"7509:115:3","trueBody":{"id":1183,"nodeType":"Block","src":"7534:90:3","statements":[{"errorCall":{"arguments":[{"id":1178,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1141,"src":"7584:4:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1179,"name":"fromBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1168,"src":"7590:11:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1180,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1145,"src":"7603:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1177,"name":"ERC20InsufficientBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2452,"src":"7559:24:3","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$_t_error_$","typeString":"function (address,uint256,uint256) pure returns (error)"}},"id":1181,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7559:50:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":1182,"nodeType":"RevertStatement","src":"7552:57:3"}]}},{"id":1195,"nodeType":"UncheckedBlock","src":"7637:161:3","statements":[{"expression":{"id":1193,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"expression":{"id":1185,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1150,"src":"7744:1:3","typeDescriptions":{"typeIdentifier":"t_struct$_ERC20Storage_$855_storage_ptr","typeString":"struct ERC20Upgradeable.ERC20Storage storage pointer"}},"id":1188,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7746:9:3","memberName":"_balances","nodeType":"MemberAccess","referencedDeclaration":842,"src":"7744:11:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1189,"indexExpression":{"id":1187,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1141,"src":"7756:4:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"7744:17:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1192,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1190,"name":"fromBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1168,"src":"7764:11:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":1191,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1145,"src":"7778:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7764:19:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7744:39:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1194,"nodeType":"ExpressionStatement","src":"7744:39:3"}]}]},"id":1197,"nodeType":"IfStatement","src":"7262:546:3","trueBody":{"id":1166,"nodeType":"Block","src":"7286:150:3","statements":[{"expression":{"id":1164,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":1160,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1150,"src":"7402:1:3","typeDescriptions":{"typeIdentifier":"t_struct$_ERC20Storage_$855_storage_ptr","typeString":"struct ERC20Upgradeable.ERC20Storage storage pointer"}},"id":1162,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"7404:12:3","memberName":"_totalSupply","nodeType":"MemberAccess","referencedDeclaration":850,"src":"7402:14:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":1163,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1145,"src":"7420:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7402:23:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1165,"nodeType":"ExpressionStatement","src":"7402:23:3"}]}},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1203,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1198,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1143,"src":"7822:2:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1201,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7836:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1200,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7828:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1199,"name":"address","nodeType":"ElementaryTypeName","src":"7828:7:3","typeDescriptions":{}}},"id":1202,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7828:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"7822:16:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1221,"nodeType":"Block","src":"8039:208:3","statements":[{"id":1220,"nodeType":"UncheckedBlock","src":"8053:184:3","statements":[{"expression":{"id":1218,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"expression":{"id":1212,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1150,"src":"8198:1:3","typeDescriptions":{"typeIdentifier":"t_struct$_ERC20Storage_$855_storage_ptr","typeString":"struct ERC20Upgradeable.ERC20Storage storage pointer"}},"id":1215,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8200:9:3","memberName":"_balances","nodeType":"MemberAccess","referencedDeclaration":842,"src":"8198:11:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1216,"indexExpression":{"id":1214,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1143,"src":"8210:2:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"8198:15:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":1217,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1145,"src":"8217:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8198:24:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1219,"nodeType":"ExpressionStatement","src":"8198:24:3"}]}]},"id":1222,"nodeType":"IfStatement","src":"7818:429:3","trueBody":{"id":1211,"nodeType":"Block","src":"7840:193:3","statements":[{"id":1210,"nodeType":"UncheckedBlock","src":"7854:169:3","statements":[{"expression":{"id":1208,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":1204,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1150,"src":"7985:1:3","typeDescriptions":{"typeIdentifier":"t_struct$_ERC20Storage_$855_storage_ptr","typeString":"struct ERC20Upgradeable.ERC20Storage storage pointer"}},"id":1206,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"7987:12:3","memberName":"_totalSupply","nodeType":"MemberAccess","referencedDeclaration":850,"src":"7985:14:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"id":1207,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1145,"src":"8003:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7985:23:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1209,"nodeType":"ExpressionStatement","src":"7985:23:3"}]}]}},{"eventCall":{"arguments":[{"id":1224,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1141,"src":"8271:4:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1225,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1143,"src":"8277:2:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1226,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1145,"src":"8281:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1223,"name":"Transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2893,"src":"8262:8:3","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1227,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8262:25:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1228,"nodeType":"EmitStatement","src":"8257:30:3"}]},"documentation":{"id":1139,"nodeType":"StructuredDocumentation","src":"6815:304:3","text":" @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n this function.\n Emits a {Transfer} event."},"id":1230,"implemented":true,"kind":"function","modifiers":[],"name":"_update","nameLocation":"7133:7:3","nodeType":"FunctionDefinition","parameters":{"id":1146,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1141,"mutability":"mutable","name":"from","nameLocation":"7149:4:3","nodeType":"VariableDeclaration","scope":1230,"src":"7141:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1140,"name":"address","nodeType":"ElementaryTypeName","src":"7141:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1143,"mutability":"mutable","name":"to","nameLocation":"7163:2:3","nodeType":"VariableDeclaration","scope":1230,"src":"7155:10:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1142,"name":"address","nodeType":"ElementaryTypeName","src":"7155:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1145,"mutability":"mutable","name":"value","nameLocation":"7175:5:3","nodeType":"VariableDeclaration","scope":1230,"src":"7167:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1144,"name":"uint256","nodeType":"ElementaryTypeName","src":"7167:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7140:41:3"},"returnParameters":{"id":1147,"nodeType":"ParameterList","parameters":[],"src":"7199:0:3"},"scope":1431,"src":"7124:1170:3","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1262,"nodeType":"Block","src":"8693:152:3","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1243,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1238,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1233,"src":"8707:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1241,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8726:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1240,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8718:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1239,"name":"address","nodeType":"ElementaryTypeName","src":"8718:7:3","typeDescriptions":{}}},"id":1242,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8718:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"8707:21:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1252,"nodeType":"IfStatement","src":"8703:91:3","trueBody":{"id":1251,"nodeType":"Block","src":"8730:64:3","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":1247,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8780:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1246,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8772:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1245,"name":"address","nodeType":"ElementaryTypeName","src":"8772:7:3","typeDescriptions":{}}},"id":1248,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8772:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1244,"name":"ERC20InvalidReceiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2462,"src":"8751:20:3","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$_t_error_$","typeString":"function (address) pure returns (error)"}},"id":1249,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8751:32:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":1250,"nodeType":"RevertStatement","src":"8744:39:3"}]}},{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":1256,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8819:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1255,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8811:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1254,"name":"address","nodeType":"ElementaryTypeName","src":"8811:7:3","typeDescriptions":{}}},"id":1257,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8811:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1258,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1233,"src":"8823:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1259,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1235,"src":"8832:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1253,"name":"_update","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1230,"src":"8803:7:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1260,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8803:35:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1261,"nodeType":"ExpressionStatement","src":"8803:35:3"}]},"documentation":{"id":1231,"nodeType":"StructuredDocumentation","src":"8300:332:3","text":" @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n Relies on the `_update` mechanism\n Emits a {Transfer} event with `from` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead."},"id":1263,"implemented":true,"kind":"function","modifiers":[],"name":"_mint","nameLocation":"8646:5:3","nodeType":"FunctionDefinition","parameters":{"id":1236,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1233,"mutability":"mutable","name":"account","nameLocation":"8660:7:3","nodeType":"VariableDeclaration","scope":1263,"src":"8652:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1232,"name":"address","nodeType":"ElementaryTypeName","src":"8652:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1235,"mutability":"mutable","name":"value","nameLocation":"8677:5:3","nodeType":"VariableDeclaration","scope":1263,"src":"8669:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1234,"name":"uint256","nodeType":"ElementaryTypeName","src":"8669:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8651:32:3"},"returnParameters":{"id":1237,"nodeType":"ParameterList","parameters":[],"src":"8693:0:3"},"scope":1431,"src":"8637:208:3","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1295,"nodeType":"Block","src":"9219:150:3","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1276,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1271,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1266,"src":"9233:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1274,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9252:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1273,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9244:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1272,"name":"address","nodeType":"ElementaryTypeName","src":"9244:7:3","typeDescriptions":{}}},"id":1275,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9244:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"9233:21:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1285,"nodeType":"IfStatement","src":"9229:89:3","trueBody":{"id":1284,"nodeType":"Block","src":"9256:62:3","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":1280,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9304:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1279,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9296:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1278,"name":"address","nodeType":"ElementaryTypeName","src":"9296:7:3","typeDescriptions":{}}},"id":1281,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9296:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1277,"name":"ERC20InvalidSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2457,"src":"9277:18:3","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$_t_error_$","typeString":"function (address) pure returns (error)"}},"id":1282,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9277:30:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":1283,"nodeType":"RevertStatement","src":"9270:37:3"}]}},{"expression":{"arguments":[{"id":1287,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1266,"src":"9335:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":1290,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9352:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1289,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9344:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1288,"name":"address","nodeType":"ElementaryTypeName","src":"9344:7:3","typeDescriptions":{}}},"id":1291,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9344:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1292,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1268,"src":"9356:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1286,"name":"_update","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1230,"src":"9327:7:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1293,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9327:35:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1294,"nodeType":"ExpressionStatement","src":"9327:35:3"}]},"documentation":{"id":1264,"nodeType":"StructuredDocumentation","src":"8851:307:3","text":" @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n Relies on the `_update` mechanism.\n Emits a {Transfer} event with `to` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead"},"id":1296,"implemented":true,"kind":"function","modifiers":[],"name":"_burn","nameLocation":"9172:5:3","nodeType":"FunctionDefinition","parameters":{"id":1269,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1266,"mutability":"mutable","name":"account","nameLocation":"9186:7:3","nodeType":"VariableDeclaration","scope":1296,"src":"9178:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1265,"name":"address","nodeType":"ElementaryTypeName","src":"9178:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1268,"mutability":"mutable","name":"value","nameLocation":"9203:5:3","nodeType":"VariableDeclaration","scope":1296,"src":"9195:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1267,"name":"uint256","nodeType":"ElementaryTypeName","src":"9195:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9177:32:3"},"returnParameters":{"id":1270,"nodeType":"ParameterList","parameters":[],"src":"9219:0:3"},"scope":1431,"src":"9163:206:3","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1313,"nodeType":"Block","src":"9979:54:3","statements":[{"expression":{"arguments":[{"id":1307,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1299,"src":"9998:5:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1308,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1301,"src":"10005:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1309,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1303,"src":"10014:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"74727565","id":1310,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"10021:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":1306,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[1314,1382],"referencedDeclaration":1382,"src":"9989:8:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$","typeString":"function (address,address,uint256,bool)"}},"id":1311,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9989:37:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1312,"nodeType":"ExpressionStatement","src":"9989:37:3"}]},"documentation":{"id":1297,"nodeType":"StructuredDocumentation","src":"9375:525:3","text":" @dev Sets `value` as the allowance of `spender` over the `owner`'s tokens.\n This internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address.\n Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument."},"id":1314,"implemented":true,"kind":"function","modifiers":[],"name":"_approve","nameLocation":"9914:8:3","nodeType":"FunctionDefinition","parameters":{"id":1304,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1299,"mutability":"mutable","name":"owner","nameLocation":"9931:5:3","nodeType":"VariableDeclaration","scope":1314,"src":"9923:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1298,"name":"address","nodeType":"ElementaryTypeName","src":"9923:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1301,"mutability":"mutable","name":"spender","nameLocation":"9946:7:3","nodeType":"VariableDeclaration","scope":1314,"src":"9938:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1300,"name":"address","nodeType":"ElementaryTypeName","src":"9938:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1303,"mutability":"mutable","name":"value","nameLocation":"9963:5:3","nodeType":"VariableDeclaration","scope":1314,"src":"9955:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1302,"name":"uint256","nodeType":"ElementaryTypeName","src":"9955:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9922:47:3"},"returnParameters":{"id":1305,"nodeType":"ParameterList","parameters":[],"src":"9979:0:3"},"scope":1431,"src":"9905:128:3","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1381,"nodeType":"Block","src":"10978:389:3","statements":[{"assignments":[1328],"declarations":[{"constant":false,"id":1328,"mutability":"mutable","name":"$","nameLocation":"11009:1:3","nodeType":"VariableDeclaration","scope":1381,"src":"10988:22:3","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_ERC20Storage_$855_storage_ptr","typeString":"struct ERC20Upgradeable.ERC20Storage"},"typeName":{"id":1327,"nodeType":"UserDefinedTypeName","pathNode":{"id":1326,"name":"ERC20Storage","nameLocations":["10988:12:3"],"nodeType":"IdentifierPath","referencedDeclaration":855,"src":"10988:12:3"},"referencedDeclaration":855,"src":"10988:12:3","typeDescriptions":{"typeIdentifier":"t_struct$_ERC20Storage_$855_storage_ptr","typeString":"struct ERC20Upgradeable.ERC20Storage"}},"visibility":"internal"}],"id":1331,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":1329,"name":"_getERC20Storage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":866,"src":"11013:16:3","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_ERC20Storage_$855_storage_ptr_$","typeString":"function () pure returns (struct ERC20Upgradeable.ERC20Storage storage pointer)"}},"id":1330,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11013:18:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_ERC20Storage_$855_storage_ptr","typeString":"struct ERC20Upgradeable.ERC20Storage storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"10988:43:3"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1337,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1332,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1317,"src":"11045:5:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1335,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11062:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1334,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11054:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1333,"name":"address","nodeType":"ElementaryTypeName","src":"11054:7:3","typeDescriptions":{}}},"id":1336,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11054:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"11045:19:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1346,"nodeType":"IfStatement","src":"11041:89:3","trueBody":{"id":1345,"nodeType":"Block","src":"11066:64:3","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":1341,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11116:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1340,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11108:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1339,"name":"address","nodeType":"ElementaryTypeName","src":"11108:7:3","typeDescriptions":{}}},"id":1342,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11108:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1338,"name":"ERC20InvalidApprover","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2476,"src":"11087:20:3","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$_t_error_$","typeString":"function (address) pure returns (error)"}},"id":1343,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11087:32:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":1344,"nodeType":"RevertStatement","src":"11080:39:3"}]}},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1352,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1347,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1319,"src":"11143:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1350,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11162:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1349,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11154:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1348,"name":"address","nodeType":"ElementaryTypeName","src":"11154:7:3","typeDescriptions":{}}},"id":1351,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11154:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"11143:21:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1361,"nodeType":"IfStatement","src":"11139:90:3","trueBody":{"id":1360,"nodeType":"Block","src":"11166:63:3","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":1356,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11215:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1355,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11207:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1354,"name":"address","nodeType":"ElementaryTypeName","src":"11207:7:3","typeDescriptions":{}}},"id":1357,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11207:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1353,"name":"ERC20InvalidSpender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2481,"src":"11187:19:3","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$_t_error_$","typeString":"function (address) pure returns (error)"}},"id":1358,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11187:31:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":1359,"nodeType":"RevertStatement","src":"11180:38:3"}]}},{"expression":{"id":1370,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"expression":{"id":1362,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1328,"src":"11238:1:3","typeDescriptions":{"typeIdentifier":"t_struct$_ERC20Storage_$855_storage_ptr","typeString":"struct ERC20Upgradeable.ERC20Storage storage pointer"}},"id":1366,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"11240:11:3","memberName":"_allowances","nodeType":"MemberAccess","referencedDeclaration":848,"src":"11238:13:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"}},"id":1367,"indexExpression":{"id":1364,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1317,"src":"11252:5:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"11238:20:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1368,"indexExpression":{"id":1365,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1319,"src":"11259:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"11238:29:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1369,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1321,"src":"11270:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11238:37:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1371,"nodeType":"ExpressionStatement","src":"11238:37:3"},{"condition":{"id":1372,"name":"emitEvent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1323,"src":"11289:9:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1380,"nodeType":"IfStatement","src":"11285:76:3","trueBody":{"id":1379,"nodeType":"Block","src":"11300:61:3","statements":[{"eventCall":{"arguments":[{"id":1374,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1317,"src":"11328:5:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1375,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1319,"src":"11335:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1376,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1321,"src":"11344:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1373,"name":"Approval","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2902,"src":"11319:8:3","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1377,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11319:31:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1378,"nodeType":"EmitStatement","src":"11314:36:3"}]}}]},"documentation":{"id":1315,"nodeType":"StructuredDocumentation","src":"10039:836:3","text":" @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n `Approval` event during `transferFrom` operations.\n Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n true using the following override:\n ```solidity\n function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     super._approve(owner, spender, value, true);\n }\n ```\n Requirements are the same as {_approve}."},"id":1382,"implemented":true,"kind":"function","modifiers":[],"name":"_approve","nameLocation":"10889:8:3","nodeType":"FunctionDefinition","parameters":{"id":1324,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1317,"mutability":"mutable","name":"owner","nameLocation":"10906:5:3","nodeType":"VariableDeclaration","scope":1382,"src":"10898:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1316,"name":"address","nodeType":"ElementaryTypeName","src":"10898:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1319,"mutability":"mutable","name":"spender","nameLocation":"10921:7:3","nodeType":"VariableDeclaration","scope":1382,"src":"10913:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1318,"name":"address","nodeType":"ElementaryTypeName","src":"10913:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1321,"mutability":"mutable","name":"value","nameLocation":"10938:5:3","nodeType":"VariableDeclaration","scope":1382,"src":"10930:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1320,"name":"uint256","nodeType":"ElementaryTypeName","src":"10930:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1323,"mutability":"mutable","name":"emitEvent","nameLocation":"10950:9:3","nodeType":"VariableDeclaration","scope":1382,"src":"10945:14:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1322,"name":"bool","nodeType":"ElementaryTypeName","src":"10945:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"10897:63:3"},"returnParameters":{"id":1325,"nodeType":"ParameterList","parameters":[],"src":"10978:0:3"},"scope":1431,"src":"10880:487:3","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1429,"nodeType":"Block","src":"11738:387:3","statements":[{"assignments":[1393],"declarations":[{"constant":false,"id":1393,"mutability":"mutable","name":"currentAllowance","nameLocation":"11756:16:3","nodeType":"VariableDeclaration","scope":1429,"src":"11748:24:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1392,"name":"uint256","nodeType":"ElementaryTypeName","src":"11748:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1398,"initialValue":{"arguments":[{"id":1395,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1385,"src":"11785:5:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1396,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1387,"src":"11792:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":1394,"name":"allowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1035,"src":"11775:9:3","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address) view returns (uint256)"}},"id":1397,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11775:25:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"11748:52:3"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1405,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1399,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1393,"src":"11814:16:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"arguments":[{"id":1402,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11838:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":1401,"name":"uint256","nodeType":"ElementaryTypeName","src":"11838:7:3","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"}],"id":1400,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"11833:4:3","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":1403,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11833:13:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint256","typeString":"type(uint256)"}},"id":1404,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"11847:3:3","memberName":"max","nodeType":"MemberAccess","src":"11833:17:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11814:36:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1428,"nodeType":"IfStatement","src":"11810:309:3","trueBody":{"id":1427,"nodeType":"Block","src":"11852:267:3","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1408,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1406,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1393,"src":"11870:16:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":1407,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1389,"src":"11889:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11870:24:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1416,"nodeType":"IfStatement","src":"11866:130:3","trueBody":{"id":1415,"nodeType":"Block","src":"11896:100:3","statements":[{"errorCall":{"arguments":[{"id":1410,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1387,"src":"11948:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1411,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1393,"src":"11957:16:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1412,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1389,"src":"11975:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1409,"name":"ERC20InsufficientAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2471,"src":"11921:26:3","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$_t_error_$","typeString":"function (address,uint256,uint256) pure returns (error)"}},"id":1413,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11921:60:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":1414,"nodeType":"RevertStatement","src":"11914:67:3"}]}},{"id":1426,"nodeType":"UncheckedBlock","src":"12009:100:3","statements":[{"expression":{"arguments":[{"id":1418,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1385,"src":"12046:5:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1419,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1387,"src":"12053:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1422,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1420,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1393,"src":"12062:16:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":1421,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1389,"src":"12081:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12062:24:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"66616c7365","id":1423,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"12088:5:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":1417,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[1314,1382],"referencedDeclaration":1382,"src":"12037:8:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$","typeString":"function (address,address,uint256,bool)"}},"id":1424,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12037:57:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1425,"nodeType":"ExpressionStatement","src":"12037:57:3"}]}]}}]},"documentation":{"id":1383,"nodeType":"StructuredDocumentation","src":"11373:271:3","text":" @dev Updates `owner`'s allowance for `spender` based on spent `value`.\n Does not update the allowance value in case of infinite allowance.\n Revert if not enough allowance is available.\n Does not emit an {Approval} event."},"id":1430,"implemented":true,"kind":"function","modifiers":[],"name":"_spendAllowance","nameLocation":"11658:15:3","nodeType":"FunctionDefinition","parameters":{"id":1390,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1385,"mutability":"mutable","name":"owner","nameLocation":"11682:5:3","nodeType":"VariableDeclaration","scope":1430,"src":"11674:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1384,"name":"address","nodeType":"ElementaryTypeName","src":"11674:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1387,"mutability":"mutable","name":"spender","nameLocation":"11697:7:3","nodeType":"VariableDeclaration","scope":1430,"src":"11689:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1386,"name":"address","nodeType":"ElementaryTypeName","src":"11689:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1389,"mutability":"mutable","name":"value","nameLocation":"11714:5:3","nodeType":"VariableDeclaration","scope":1430,"src":"11706:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1388,"name":"uint256","nodeType":"ElementaryTypeName","src":"11706:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11673:47:3"},"returnParameters":{"id":1391,"nodeType":"ParameterList","parameters":[],"src":"11738:0:3"},"scope":1431,"src":"11649:476:3","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":1432,"src":"1281:10846:3","usedErrors":[381,384,2452,2457,2462,2471,2476,2481],"usedEvents":[389,2893,2902]}],"src":"105:12023:3"},"id":3},"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20PermitUpgradeable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20PermitUpgradeable.sol","exportedSymbols":{"ECDSA":[5229],"EIP712Upgradeable":[2261],"ERC20PermitUpgradeable":[1600],"ERC20Upgradeable":[1431],"IERC20Permit":[3021],"Initializable":[632],"NoncesUpgradeable":[1757]},"id":1601,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1433,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"122:24:4"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol","file":"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol","id":1435,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1601,"sourceUnit":3022,"src":"148:93:4","symbolAliases":[{"foreign":{"id":1434,"name":"IERC20Permit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3021,"src":"156:12:4","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol","file":"../ERC20Upgradeable.sol","id":1437,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1601,"sourceUnit":1432,"src":"242:57:4","symbolAliases":[{"foreign":{"id":1436,"name":"ERC20Upgradeable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1431,"src":"250:16:4","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/cryptography/ECDSA.sol","file":"@openzeppelin/contracts/utils/cryptography/ECDSA.sol","id":1439,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1601,"sourceUnit":5230,"src":"300:75:4","symbolAliases":[{"foreign":{"id":1438,"name":"ECDSA","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5229,"src":"308:5:4","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol","file":"../../../utils/cryptography/EIP712Upgradeable.sol","id":1441,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1601,"sourceUnit":2262,"src":"376:84:4","symbolAliases":[{"foreign":{"id":1440,"name":"EIP712Upgradeable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2261,"src":"384:17:4","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/utils/NoncesUpgradeable.sol","file":"../../../utils/NoncesUpgradeable.sol","id":1443,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1601,"sourceUnit":1758,"src":"461:71:4","symbolAliases":[{"foreign":{"id":1442,"name":"NoncesUpgradeable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1757,"src":"469:17:4","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol","file":"../../../proxy/utils/Initializable.sol","id":1445,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1601,"sourceUnit":633,"src":"533:69:4","symbolAliases":[{"foreign":{"id":1444,"name":"Initializable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":632,"src":"541:13:4","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":1447,"name":"Initializable","nameLocations":["1138:13:4"],"nodeType":"IdentifierPath","referencedDeclaration":632,"src":"1138:13:4"},"id":1448,"nodeType":"InheritanceSpecifier","src":"1138:13:4"},{"baseName":{"id":1449,"name":"ERC20Upgradeable","nameLocations":["1153:16:4"],"nodeType":"IdentifierPath","referencedDeclaration":1431,"src":"1153:16:4"},"id":1450,"nodeType":"InheritanceSpecifier","src":"1153:16:4"},{"baseName":{"id":1451,"name":"IERC20Permit","nameLocations":["1171:12:4"],"nodeType":"IdentifierPath","referencedDeclaration":3021,"src":"1171:12:4"},"id":1452,"nodeType":"InheritanceSpecifier","src":"1171:12:4"},{"baseName":{"id":1453,"name":"EIP712Upgradeable","nameLocations":["1185:17:4"],"nodeType":"IdentifierPath","referencedDeclaration":2261,"src":"1185:17:4"},"id":1454,"nodeType":"InheritanceSpecifier","src":"1185:17:4"},{"baseName":{"id":1455,"name":"NoncesUpgradeable","nameLocations":["1204:17:4"],"nodeType":"IdentifierPath","referencedDeclaration":1757,"src":"1204:17:4"},"id":1456,"nodeType":"InheritanceSpecifier","src":"1204:17:4"}],"canonicalName":"ERC20PermitUpgradeable","contractDependencies":[],"contractKind":"contract","documentation":{"id":1446,"nodeType":"StructuredDocumentation","src":"604:489:4","text":" @dev Implementation of the ERC-20 Permit extension allowing approvals to be made via signatures, as defined in\n https://eips.ethereum.org/EIPS/eip-2612[ERC-2612].\n Adds the {permit} method, which can be used to change an account's ERC-20 allowance (see {IERC20-allowance}) by\n presenting a message signed by the account. By not relying on `{IERC20-approve}`, the token holder account doesn't\n need to send a transaction, and thus is not required to hold Ether at all."},"fullyImplemented":true,"id":1600,"linearizedBaseContracts":[1600,1757,2261,2430,3021,1431,2482,2985,2959,1646,632],"name":"ERC20PermitUpgradeable","nameLocation":"1112:22:4","nodeType":"ContractDefinition","nodes":[{"constant":true,"id":1461,"mutability":"constant","name":"PERMIT_TYPEHASH","nameLocation":"1253:15:4","nodeType":"VariableDeclaration","scope":1600,"src":"1228:146:4","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1457,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1228:7:4","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"arguments":[{"hexValue":"5065726d69742861646472657373206f776e65722c61646472657373207370656e6465722c75696e743235362076616c75652c75696e74323536206e6f6e63652c75696e7432353620646561646c696e6529","id":1459,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1289:84:4","typeDescriptions":{"typeIdentifier":"t_stringliteral_6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9","typeString":"literal_string \"Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)\""},"value":"Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9","typeString":"literal_string \"Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)\""}],"id":1458,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"1279:9:4","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":1460,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1279:95:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"private"},{"documentation":{"id":1462,"nodeType":"StructuredDocumentation","src":"1381:52:4","text":" @dev Permit deadline has expired."},"errorSelector":"62791302","id":1466,"name":"ERC2612ExpiredSignature","nameLocation":"1444:23:4","nodeType":"ErrorDefinition","parameters":{"id":1465,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1464,"mutability":"mutable","name":"deadline","nameLocation":"1476:8:4","nodeType":"VariableDeclaration","scope":1466,"src":"1468:16:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1463,"name":"uint256","nodeType":"ElementaryTypeName","src":"1468:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1467:18:4"},"src":"1438:48:4"},{"documentation":{"id":1467,"nodeType":"StructuredDocumentation","src":"1492:45:4","text":" @dev Mismatched signature."},"errorSelector":"4b800e46","id":1473,"name":"ERC2612InvalidSigner","nameLocation":"1548:20:4","nodeType":"ErrorDefinition","parameters":{"id":1472,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1469,"mutability":"mutable","name":"signer","nameLocation":"1577:6:4","nodeType":"VariableDeclaration","scope":1473,"src":"1569:14:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1468,"name":"address","nodeType":"ElementaryTypeName","src":"1569:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1471,"mutability":"mutable","name":"owner","nameLocation":"1593:5:4","nodeType":"VariableDeclaration","scope":1473,"src":"1585:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1470,"name":"address","nodeType":"ElementaryTypeName","src":"1585:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1568:31:4"},"src":"1542:58:4"},{"body":{"id":1486,"nodeType":"Block","src":"1906:51:4","statements":[{"expression":{"arguments":[{"id":1482,"name":"name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1476,"src":"1940:4:4","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"31","id":1483,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1946:3:4","typeDescriptions":{"typeIdentifier":"t_stringliteral_c89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc6","typeString":"literal_string \"1\""},"value":"1"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_stringliteral_c89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc6","typeString":"literal_string \"1\""}],"id":1481,"name":"__EIP712_init_unchained","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2014,"src":"1916:23:4","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory,string memory)"}},"id":1484,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1916:34:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1485,"nodeType":"ExpressionStatement","src":"1916:34:4"}]},"documentation":{"id":1474,"nodeType":"StructuredDocumentation","src":"1606:221:4","text":" @dev Initializes the {EIP712} domain separator using the `name` parameter, and setting `version` to `\"1\"`.\n It's a good idea to use the same `name` that is defined as the ERC-20 token name."},"id":1487,"implemented":true,"kind":"function","modifiers":[{"id":1479,"kind":"modifierInvocation","modifierName":{"id":1478,"name":"onlyInitializing","nameLocations":["1889:16:4"],"nodeType":"IdentifierPath","referencedDeclaration":527,"src":"1889:16:4"},"nodeType":"ModifierInvocation","src":"1889:16:4"}],"name":"__ERC20Permit_init","nameLocation":"1841:18:4","nodeType":"FunctionDefinition","parameters":{"id":1477,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1476,"mutability":"mutable","name":"name","nameLocation":"1874:4:4","nodeType":"VariableDeclaration","scope":1487,"src":"1860:18:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1475,"name":"string","nodeType":"ElementaryTypeName","src":"1860:6:4","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1859:20:4"},"returnParameters":{"id":1480,"nodeType":"ParameterList","parameters":[],"src":"1906:0:4"},"scope":1600,"src":"1832:125:4","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1494,"nodeType":"Block","src":"2042:2:4","statements":[]},"id":1495,"implemented":true,"kind":"function","modifiers":[{"id":1492,"kind":"modifierInvocation","modifierName":{"id":1491,"name":"onlyInitializing","nameLocations":["2025:16:4"],"nodeType":"IdentifierPath","referencedDeclaration":527,"src":"2025:16:4"},"nodeType":"ModifierInvocation","src":"2025:16:4"}],"name":"__ERC20Permit_init_unchained","nameLocation":"1972:28:4","nodeType":"FunctionDefinition","parameters":{"id":1490,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1489,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1495,"src":"2001:13:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1488,"name":"string","nodeType":"ElementaryTypeName","src":"2001:6:4","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2000:15:4"},"returnParameters":{"id":1493,"nodeType":"ParameterList","parameters":[],"src":"2042:0:4"},"scope":1600,"src":"1963:81:4","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"baseFunctions":[3006],"body":{"id":1571,"nodeType":"Block","src":"2272:483:4","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1516,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1513,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"2286:5:4","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":1514,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2292:9:4","memberName":"timestamp","nodeType":"MemberAccess","src":"2286:15:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":1515,"name":"deadline","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1504,"src":"2304:8:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2286:26:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1522,"nodeType":"IfStatement","src":"2282:97:4","trueBody":{"id":1521,"nodeType":"Block","src":"2314:65:4","statements":[{"errorCall":{"arguments":[{"id":1518,"name":"deadline","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1504,"src":"2359:8:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1517,"name":"ERC2612ExpiredSignature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1466,"src":"2335:23:4","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$returns$_t_error_$","typeString":"function (uint256) pure returns (error)"}},"id":1519,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2335:33:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":1520,"nodeType":"RevertStatement","src":"2328:40:4"}]}},{"assignments":[1524],"declarations":[{"constant":false,"id":1524,"mutability":"mutable","name":"structHash","nameLocation":"2397:10:4","nodeType":"VariableDeclaration","scope":1571,"src":"2389:18:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1523,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2389:7:4","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":1538,"initialValue":{"arguments":[{"arguments":[{"id":1528,"name":"PERMIT_TYPEHASH","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1461,"src":"2431:15:4","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":1529,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1498,"src":"2448:5:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1530,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1500,"src":"2455:7:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1531,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1502,"src":"2464:5:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"id":1533,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1498,"src":"2481:5:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1532,"name":"_useNonce","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1731,"src":"2471:9:4","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$_t_uint256_$","typeString":"function (address) returns (uint256)"}},"id":1534,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2471:16:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1535,"name":"deadline","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1504,"src":"2489:8:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1526,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"2420:3:4","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":1527,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2424:6:4","memberName":"encode","nodeType":"MemberAccess","src":"2420:10:4","typeDescriptions":{"typeIdentifier":"t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":1536,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2420:78:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1525,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"2410:9:4","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":1537,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2410:89:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"2389:110:4"},{"assignments":[1540],"declarations":[{"constant":false,"id":1540,"mutability":"mutable","name":"hash","nameLocation":"2518:4:4","nodeType":"VariableDeclaration","scope":1571,"src":"2510:12:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1539,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2510:7:4","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":1544,"initialValue":{"arguments":[{"id":1542,"name":"structHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1524,"src":"2542:10:4","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":1541,"name":"_hashTypedDataV4","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2063,"src":"2525:16:4","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32) view returns (bytes32)"}},"id":1543,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2525:28:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"2510:43:4"},{"assignments":[1546],"declarations":[{"constant":false,"id":1546,"mutability":"mutable","name":"signer","nameLocation":"2572:6:4","nodeType":"VariableDeclaration","scope":1571,"src":"2564:14:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1545,"name":"address","nodeType":"ElementaryTypeName","src":"2564:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":1554,"initialValue":{"arguments":[{"id":1549,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1540,"src":"2595:4:4","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":1550,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1506,"src":"2601:1:4","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":1551,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1508,"src":"2604:1:4","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":1552,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1510,"src":"2607:1:4","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":1547,"name":"ECDSA","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5229,"src":"2581:5:4","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ECDSA_$5229_$","typeString":"type(library ECDSA)"}},"id":1548,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2587:7:4","memberName":"recover","nodeType":"MemberAccess","referencedDeclaration":5179,"src":"2581:13:4","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$","typeString":"function (bytes32,uint8,bytes32,bytes32) pure returns (address)"}},"id":1553,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2581:28:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"2564:45:4"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1557,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1555,"name":"signer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1546,"src":"2623:6:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":1556,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1498,"src":"2633:5:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2623:15:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1564,"nodeType":"IfStatement","src":"2619:88:4","trueBody":{"id":1563,"nodeType":"Block","src":"2640:67:4","statements":[{"errorCall":{"arguments":[{"id":1559,"name":"signer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1546,"src":"2682:6:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1560,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1498,"src":"2690:5:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":1558,"name":"ERC2612InvalidSigner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1473,"src":"2661:20:4","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$_t_address_$returns$_t_error_$","typeString":"function (address,address) pure returns (error)"}},"id":1561,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2661:35:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":1562,"nodeType":"RevertStatement","src":"2654:42:4"}]}},{"expression":{"arguments":[{"id":1566,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1498,"src":"2726:5:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1567,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1500,"src":"2733:7:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1568,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1502,"src":"2742:5:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1565,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[1314,1382],"referencedDeclaration":1314,"src":"2717:8:4","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1569,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2717:31:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1570,"nodeType":"ExpressionStatement","src":"2717:31:4"}]},"documentation":{"id":1496,"nodeType":"StructuredDocumentation","src":"2050:28:4","text":"@inheritdoc IERC20Permit"},"functionSelector":"d505accf","id":1572,"implemented":true,"kind":"function","modifiers":[],"name":"permit","nameLocation":"2092:6:4","nodeType":"FunctionDefinition","parameters":{"id":1511,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1498,"mutability":"mutable","name":"owner","nameLocation":"2116:5:4","nodeType":"VariableDeclaration","scope":1572,"src":"2108:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1497,"name":"address","nodeType":"ElementaryTypeName","src":"2108:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1500,"mutability":"mutable","name":"spender","nameLocation":"2139:7:4","nodeType":"VariableDeclaration","scope":1572,"src":"2131:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1499,"name":"address","nodeType":"ElementaryTypeName","src":"2131:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1502,"mutability":"mutable","name":"value","nameLocation":"2164:5:4","nodeType":"VariableDeclaration","scope":1572,"src":"2156:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1501,"name":"uint256","nodeType":"ElementaryTypeName","src":"2156:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1504,"mutability":"mutable","name":"deadline","nameLocation":"2187:8:4","nodeType":"VariableDeclaration","scope":1572,"src":"2179:16:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1503,"name":"uint256","nodeType":"ElementaryTypeName","src":"2179:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1506,"mutability":"mutable","name":"v","nameLocation":"2211:1:4","nodeType":"VariableDeclaration","scope":1572,"src":"2205:7:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":1505,"name":"uint8","nodeType":"ElementaryTypeName","src":"2205:5:4","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":1508,"mutability":"mutable","name":"r","nameLocation":"2230:1:4","nodeType":"VariableDeclaration","scope":1572,"src":"2222:9:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1507,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2222:7:4","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1510,"mutability":"mutable","name":"s","nameLocation":"2249:1:4","nodeType":"VariableDeclaration","scope":1572,"src":"2241:9:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1509,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2241:7:4","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2098:158:4"},"returnParameters":{"id":1512,"nodeType":"ParameterList","parameters":[],"src":"2272:0:4"},"scope":1600,"src":"2083:672:4","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[1709,3014],"body":{"id":1588,"nodeType":"Block","src":"2905:43:4","statements":[{"expression":{"arguments":[{"id":1585,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1575,"src":"2935:5:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":1583,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"2922:5:4","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_ERC20PermitUpgradeable_$1600_$","typeString":"type(contract super ERC20PermitUpgradeable)"}},"id":1584,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2928:6:4","memberName":"nonces","nodeType":"MemberAccess","referencedDeclaration":1709,"src":"2922:12:4","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view returns (uint256)"}},"id":1586,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2922:19:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1582,"id":1587,"nodeType":"Return","src":"2915:26:4"}]},"documentation":{"id":1573,"nodeType":"StructuredDocumentation","src":"2761:28:4","text":"@inheritdoc IERC20Permit"},"functionSelector":"7ecebe00","id":1589,"implemented":true,"kind":"function","modifiers":[],"name":"nonces","nameLocation":"2803:6:4","nodeType":"FunctionDefinition","overrides":{"id":1579,"nodeType":"OverrideSpecifier","overrides":[{"id":1577,"name":"IERC20Permit","nameLocations":["2854:12:4"],"nodeType":"IdentifierPath","referencedDeclaration":3021,"src":"2854:12:4"},{"id":1578,"name":"NoncesUpgradeable","nameLocations":["2868:17:4"],"nodeType":"IdentifierPath","referencedDeclaration":1757,"src":"2868:17:4"}],"src":"2845:41:4"},"parameters":{"id":1576,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1575,"mutability":"mutable","name":"owner","nameLocation":"2818:5:4","nodeType":"VariableDeclaration","scope":1589,"src":"2810:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1574,"name":"address","nodeType":"ElementaryTypeName","src":"2810:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2809:15:4"},"returnParameters":{"id":1582,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1581,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1589,"src":"2896:7:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1580,"name":"uint256","nodeType":"ElementaryTypeName","src":"2896:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2895:9:4"},"scope":1600,"src":"2794:154:4","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[3020],"body":{"id":1598,"nodeType":"Block","src":"3108:44:4","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":1595,"name":"_domainSeparatorV4","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2024,"src":"3125:18:4","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_bytes32_$","typeString":"function () view returns (bytes32)"}},"id":1596,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3125:20:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":1594,"id":1597,"nodeType":"Return","src":"3118:27:4"}]},"documentation":{"id":1590,"nodeType":"StructuredDocumentation","src":"2954:28:4","text":"@inheritdoc IERC20Permit"},"functionSelector":"3644e515","id":1599,"implemented":true,"kind":"function","modifiers":[],"name":"DOMAIN_SEPARATOR","nameLocation":"3049:16:4","nodeType":"FunctionDefinition","parameters":{"id":1591,"nodeType":"ParameterList","parameters":[],"src":"3065:2:4"},"returnParameters":{"id":1594,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1593,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1599,"src":"3099:7:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1592,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3099:7:4","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3098:9:4"},"scope":1600,"src":"3040:112:4","stateMutability":"view","virtual":true,"visibility":"external"}],"scope":1601,"src":"1094:2060:4","usedErrors":[381,384,1466,1473,1660,2452,2457,2462,2471,2476,2481,4892,4897,4902],"usedEvents":[389,2410,2893,2902]}],"src":"122:3033:4"},"id":4},"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol","exportedSymbols":{"ContextUpgradeable":[1646],"Initializable":[632]},"id":1647,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1602,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"101:24:5"},{"absolutePath":"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol","file":"../proxy/utils/Initializable.sol","id":1604,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1647,"sourceUnit":633,"src":"126:63:5","symbolAliases":[{"foreign":{"id":1603,"name":"Initializable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":632,"src":"134:13:5","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":1606,"name":"Initializable","nameLocations":["728:13:5"],"nodeType":"IdentifierPath","referencedDeclaration":632,"src":"728:13:5"},"id":1607,"nodeType":"InheritanceSpecifier","src":"728:13:5"}],"canonicalName":"ContextUpgradeable","contractDependencies":[],"contractKind":"contract","documentation":{"id":1605,"nodeType":"StructuredDocumentation","src":"191:496:5","text":" @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."},"fullyImplemented":true,"id":1646,"linearizedBaseContracts":[1646,632],"name":"ContextUpgradeable","nameLocation":"706:18:5","nodeType":"ContractDefinition","nodes":[{"body":{"id":1612,"nodeType":"Block","src":"800:7:5","statements":[]},"id":1613,"implemented":true,"kind":"function","modifiers":[{"id":1610,"kind":"modifierInvocation","modifierName":{"id":1609,"name":"onlyInitializing","nameLocations":["783:16:5"],"nodeType":"IdentifierPath","referencedDeclaration":527,"src":"783:16:5"},"nodeType":"ModifierInvocation","src":"783:16:5"}],"name":"__Context_init","nameLocation":"757:14:5","nodeType":"FunctionDefinition","parameters":{"id":1608,"nodeType":"ParameterList","parameters":[],"src":"771:2:5"},"returnParameters":{"id":1611,"nodeType":"ParameterList","parameters":[],"src":"800:0:5"},"scope":1646,"src":"748:59:5","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1618,"nodeType":"Block","src":"875:7:5","statements":[]},"id":1619,"implemented":true,"kind":"function","modifiers":[{"id":1616,"kind":"modifierInvocation","modifierName":{"id":1615,"name":"onlyInitializing","nameLocations":["858:16:5"],"nodeType":"IdentifierPath","referencedDeclaration":527,"src":"858:16:5"},"nodeType":"ModifierInvocation","src":"858:16:5"}],"name":"__Context_init_unchained","nameLocation":"822:24:5","nodeType":"FunctionDefinition","parameters":{"id":1614,"nodeType":"ParameterList","parameters":[],"src":"846:2:5"},"returnParameters":{"id":1617,"nodeType":"ParameterList","parameters":[],"src":"875:0:5"},"scope":1646,"src":"813:69:5","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1627,"nodeType":"Block","src":"949:34:5","statements":[{"expression":{"expression":{"id":1624,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"966:3:5","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1625,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"970:6:5","memberName":"sender","nodeType":"MemberAccess","src":"966:10:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":1623,"id":1626,"nodeType":"Return","src":"959:17:5"}]},"id":1628,"implemented":true,"kind":"function","modifiers":[],"name":"_msgSender","nameLocation":"896:10:5","nodeType":"FunctionDefinition","parameters":{"id":1620,"nodeType":"ParameterList","parameters":[],"src":"906:2:5"},"returnParameters":{"id":1623,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1622,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1628,"src":"940:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1621,"name":"address","nodeType":"ElementaryTypeName","src":"940:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"939:9:5"},"scope":1646,"src":"887:96:5","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":1636,"nodeType":"Block","src":"1056:32:5","statements":[{"expression":{"expression":{"id":1633,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1073:3:5","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1634,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1077:4:5","memberName":"data","nodeType":"MemberAccess","src":"1073:8:5","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"functionReturnParameters":1632,"id":1635,"nodeType":"Return","src":"1066:15:5"}]},"id":1637,"implemented":true,"kind":"function","modifiers":[],"name":"_msgData","nameLocation":"998:8:5","nodeType":"FunctionDefinition","parameters":{"id":1629,"nodeType":"ParameterList","parameters":[],"src":"1006:2:5"},"returnParameters":{"id":1632,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1631,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1637,"src":"1040:14:5","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":1630,"name":"bytes","nodeType":"ElementaryTypeName","src":"1040:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1039:16:5"},"scope":1646,"src":"989:99:5","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":1644,"nodeType":"Block","src":"1166:25:5","statements":[{"expression":{"hexValue":"30","id":1642,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1183:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":1641,"id":1643,"nodeType":"Return","src":"1176:8:5"}]},"id":1645,"implemented":true,"kind":"function","modifiers":[],"name":"_contextSuffixLength","nameLocation":"1103:20:5","nodeType":"FunctionDefinition","parameters":{"id":1638,"nodeType":"ParameterList","parameters":[],"src":"1123:2:5"},"returnParameters":{"id":1641,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1640,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1645,"src":"1157:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1639,"name":"uint256","nodeType":"ElementaryTypeName","src":"1157:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1156:9:5"},"scope":1646,"src":"1094:97:5","stateMutability":"view","virtual":true,"visibility":"internal"}],"scope":1647,"src":"688:505:5","usedErrors":[381,384],"usedEvents":[389]}],"src":"101:1093:5"},"id":5},"@openzeppelin/contracts-upgradeable/utils/NoncesUpgradeable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts-upgradeable/utils/NoncesUpgradeable.sol","exportedSymbols":{"Initializable":[632],"NoncesUpgradeable":[1757]},"id":1758,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1648,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"99:24:6"},{"absolutePath":"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol","file":"../proxy/utils/Initializable.sol","id":1650,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1758,"sourceUnit":633,"src":"124:63:6","symbolAliases":[{"foreign":{"id":1649,"name":"Initializable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":632,"src":"132:13:6","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":1652,"name":"Initializable","nameLocations":["312:13:6"],"nodeType":"IdentifierPath","referencedDeclaration":632,"src":"312:13:6"},"id":1653,"nodeType":"InheritanceSpecifier","src":"312:13:6"}],"canonicalName":"NoncesUpgradeable","contractDependencies":[],"contractKind":"contract","documentation":{"id":1651,"nodeType":"StructuredDocumentation","src":"189:83:6","text":" @dev Provides tracking nonces for addresses. Nonces will only increment."},"fullyImplemented":true,"id":1757,"linearizedBaseContracts":[1757,632],"name":"NoncesUpgradeable","nameLocation":"291:17:6","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":1654,"nodeType":"StructuredDocumentation","src":"332:90:6","text":" @dev The nonce used for an `account` is not the expected current nonce."},"errorSelector":"752d88c0","id":1660,"name":"InvalidAccountNonce","nameLocation":"433:19:6","nodeType":"ErrorDefinition","parameters":{"id":1659,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1656,"mutability":"mutable","name":"account","nameLocation":"461:7:6","nodeType":"VariableDeclaration","scope":1660,"src":"453:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1655,"name":"address","nodeType":"ElementaryTypeName","src":"453:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1658,"mutability":"mutable","name":"currentNonce","nameLocation":"478:12:6","nodeType":"VariableDeclaration","scope":1660,"src":"470:20:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1657,"name":"uint256","nodeType":"ElementaryTypeName","src":"470:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"452:39:6"},"src":"427:65:6"},{"canonicalName":"NoncesUpgradeable.NoncesStorage","documentation":{"id":1661,"nodeType":"StructuredDocumentation","src":"498:64:6","text":"@custom:storage-location erc7201:openzeppelin.storage.Nonces"},"id":1666,"members":[{"constant":false,"id":1665,"mutability":"mutable","name":"_nonces","nameLocation":"634:7:6","nodeType":"VariableDeclaration","scope":1666,"src":"598:43:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"typeName":{"id":1664,"keyName":"account","keyNameLocation":"614:7:6","keyType":{"id":1662,"name":"address","nodeType":"ElementaryTypeName","src":"606:7:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"598:35:6","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":1663,"name":"uint256","nodeType":"ElementaryTypeName","src":"625:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"internal"}],"name":"NoncesStorage","nameLocation":"574:13:6","nodeType":"StructDefinition","scope":1757,"src":"567:81:6","visibility":"public"},{"constant":true,"id":1669,"mutability":"constant","name":"NoncesStorageLocation","nameLocation":"789:21:6","nodeType":"VariableDeclaration","scope":1757,"src":"764:115:6","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1667,"name":"bytes32","nodeType":"ElementaryTypeName","src":"764:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"hexValue":"307835616234326365643632383838383235396330386163393864623165623063663730326663313530313334343331316438623130306364316266653462623030","id":1668,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"813:66:6","typeDescriptions":{"typeIdentifier":"t_rational_41026498920877473550552694860415970151284396403628511442111957027090812156672_by_1","typeString":"int_const 4102...(69 digits omitted)...6672"},"value":"0x5ab42ced628888259c08ac98db1eb0cf702fc1501344311d8b100cd1bfe4bb00"},"visibility":"private"},{"body":{"id":1676,"nodeType":"Block","src":"962:80:6","statements":[{"AST":{"nativeSrc":"981:55:6","nodeType":"YulBlock","src":"981:55:6","statements":[{"nativeSrc":"995:31:6","nodeType":"YulAssignment","src":"995:31:6","value":{"name":"NoncesStorageLocation","nativeSrc":"1005:21:6","nodeType":"YulIdentifier","src":"1005:21:6"},"variableNames":[{"name":"$.slot","nativeSrc":"995:6:6","nodeType":"YulIdentifier","src":"995:6:6"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":1673,"isOffset":false,"isSlot":true,"src":"995:6:6","suffix":"slot","valueSize":1},{"declaration":1669,"isOffset":false,"isSlot":false,"src":"1005:21:6","valueSize":1}],"id":1675,"nodeType":"InlineAssembly","src":"972:64:6"}]},"id":1677,"implemented":true,"kind":"function","modifiers":[],"name":"_getNoncesStorage","nameLocation":"895:17:6","nodeType":"FunctionDefinition","parameters":{"id":1670,"nodeType":"ParameterList","parameters":[],"src":"912:2:6"},"returnParameters":{"id":1674,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1673,"mutability":"mutable","name":"$","nameLocation":"959:1:6","nodeType":"VariableDeclaration","scope":1677,"src":"937:23:6","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_NoncesStorage_$1666_storage_ptr","typeString":"struct NoncesUpgradeable.NoncesStorage"},"typeName":{"id":1672,"nodeType":"UserDefinedTypeName","pathNode":{"id":1671,"name":"NoncesStorage","nameLocations":["937:13:6"],"nodeType":"IdentifierPath","referencedDeclaration":1666,"src":"937:13:6"},"referencedDeclaration":1666,"src":"937:13:6","typeDescriptions":{"typeIdentifier":"t_struct$_NoncesStorage_$1666_storage_ptr","typeString":"struct NoncesUpgradeable.NoncesStorage"}},"visibility":"internal"}],"src":"936:25:6"},"scope":1757,"src":"886:156:6","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":1682,"nodeType":"Block","src":"1099:7:6","statements":[]},"id":1683,"implemented":true,"kind":"function","modifiers":[{"id":1680,"kind":"modifierInvocation","modifierName":{"id":1679,"name":"onlyInitializing","nameLocations":["1082:16:6"],"nodeType":"IdentifierPath","referencedDeclaration":527,"src":"1082:16:6"},"nodeType":"ModifierInvocation","src":"1082:16:6"}],"name":"__Nonces_init","nameLocation":"1057:13:6","nodeType":"FunctionDefinition","parameters":{"id":1678,"nodeType":"ParameterList","parameters":[],"src":"1070:2:6"},"returnParameters":{"id":1681,"nodeType":"ParameterList","parameters":[],"src":"1099:0:6"},"scope":1757,"src":"1048:58:6","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1688,"nodeType":"Block","src":"1173:7:6","statements":[]},"id":1689,"implemented":true,"kind":"function","modifiers":[{"id":1686,"kind":"modifierInvocation","modifierName":{"id":1685,"name":"onlyInitializing","nameLocations":["1156:16:6"],"nodeType":"IdentifierPath","referencedDeclaration":527,"src":"1156:16:6"},"nodeType":"ModifierInvocation","src":"1156:16:6"}],"name":"__Nonces_init_unchained","nameLocation":"1121:23:6","nodeType":"FunctionDefinition","parameters":{"id":1684,"nodeType":"ParameterList","parameters":[],"src":"1144:2:6"},"returnParameters":{"id":1687,"nodeType":"ParameterList","parameters":[],"src":"1173:0:6"},"scope":1757,"src":"1112:68:6","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1708,"nodeType":"Block","src":"1328:95:6","statements":[{"assignments":[1699],"declarations":[{"constant":false,"id":1699,"mutability":"mutable","name":"$","nameLocation":"1360:1:6","nodeType":"VariableDeclaration","scope":1708,"src":"1338:23:6","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_NoncesStorage_$1666_storage_ptr","typeString":"struct NoncesUpgradeable.NoncesStorage"},"typeName":{"id":1698,"nodeType":"UserDefinedTypeName","pathNode":{"id":1697,"name":"NoncesStorage","nameLocations":["1338:13:6"],"nodeType":"IdentifierPath","referencedDeclaration":1666,"src":"1338:13:6"},"referencedDeclaration":1666,"src":"1338:13:6","typeDescriptions":{"typeIdentifier":"t_struct$_NoncesStorage_$1666_storage_ptr","typeString":"struct NoncesUpgradeable.NoncesStorage"}},"visibility":"internal"}],"id":1702,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":1700,"name":"_getNoncesStorage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1677,"src":"1364:17:6","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_NoncesStorage_$1666_storage_ptr_$","typeString":"function () pure returns (struct NoncesUpgradeable.NoncesStorage storage pointer)"}},"id":1701,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1364:19:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_NoncesStorage_$1666_storage_ptr","typeString":"struct NoncesUpgradeable.NoncesStorage storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"1338:45:6"},{"expression":{"baseExpression":{"expression":{"id":1703,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1699,"src":"1400:1:6","typeDescriptions":{"typeIdentifier":"t_struct$_NoncesStorage_$1666_storage_ptr","typeString":"struct NoncesUpgradeable.NoncesStorage storage pointer"}},"id":1704,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"1402:7:6","memberName":"_nonces","nodeType":"MemberAccess","referencedDeclaration":1665,"src":"1400:9:6","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1706,"indexExpression":{"id":1705,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1692,"src":"1410:5:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1400:16:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1696,"id":1707,"nodeType":"Return","src":"1393:23:6"}]},"documentation":{"id":1690,"nodeType":"StructuredDocumentation","src":"1185:69:6","text":" @dev Returns the next unused nonce for an address."},"functionSelector":"7ecebe00","id":1709,"implemented":true,"kind":"function","modifiers":[],"name":"nonces","nameLocation":"1268:6:6","nodeType":"FunctionDefinition","parameters":{"id":1693,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1692,"mutability":"mutable","name":"owner","nameLocation":"1283:5:6","nodeType":"VariableDeclaration","scope":1709,"src":"1275:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1691,"name":"address","nodeType":"ElementaryTypeName","src":"1275:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1274:15:6"},"returnParameters":{"id":1696,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1695,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1709,"src":"1319:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1694,"name":"uint256","nodeType":"ElementaryTypeName","src":"1319:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1318:9:6"},"scope":1757,"src":"1259:164:6","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":1730,"nodeType":"Block","src":"1606:383:6","statements":[{"assignments":[1719],"declarations":[{"constant":false,"id":1719,"mutability":"mutable","name":"$","nameLocation":"1638:1:6","nodeType":"VariableDeclaration","scope":1730,"src":"1616:23:6","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_NoncesStorage_$1666_storage_ptr","typeString":"struct NoncesUpgradeable.NoncesStorage"},"typeName":{"id":1718,"nodeType":"UserDefinedTypeName","pathNode":{"id":1717,"name":"NoncesStorage","nameLocations":["1616:13:6"],"nodeType":"IdentifierPath","referencedDeclaration":1666,"src":"1616:13:6"},"referencedDeclaration":1666,"src":"1616:13:6","typeDescriptions":{"typeIdentifier":"t_struct$_NoncesStorage_$1666_storage_ptr","typeString":"struct NoncesUpgradeable.NoncesStorage"}},"visibility":"internal"}],"id":1722,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":1720,"name":"_getNoncesStorage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1677,"src":"1642:17:6","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_NoncesStorage_$1666_storage_ptr_$","typeString":"function () pure returns (struct NoncesUpgradeable.NoncesStorage storage pointer)"}},"id":1721,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1642:19:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_NoncesStorage_$1666_storage_ptr","typeString":"struct NoncesUpgradeable.NoncesStorage storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"1616:45:6"},{"id":1729,"nodeType":"UncheckedBlock","src":"1864:119:6","statements":[{"expression":{"id":1727,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"1954:18:6","subExpression":{"baseExpression":{"expression":{"id":1723,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1719,"src":"1954:1:6","typeDescriptions":{"typeIdentifier":"t_struct$_NoncesStorage_$1666_storage_ptr","typeString":"struct NoncesUpgradeable.NoncesStorage storage pointer"}},"id":1724,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"1956:7:6","memberName":"_nonces","nodeType":"MemberAccess","referencedDeclaration":1665,"src":"1954:9:6","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1726,"indexExpression":{"id":1725,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1712,"src":"1964:5:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"1954:16:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1716,"id":1728,"nodeType":"Return","src":"1947:25:6"}]}]},"documentation":{"id":1710,"nodeType":"StructuredDocumentation","src":"1429:103:6","text":" @dev Consumes a nonce.\n Returns the current value and increments nonce."},"id":1731,"implemented":true,"kind":"function","modifiers":[],"name":"_useNonce","nameLocation":"1546:9:6","nodeType":"FunctionDefinition","parameters":{"id":1713,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1712,"mutability":"mutable","name":"owner","nameLocation":"1564:5:6","nodeType":"VariableDeclaration","scope":1731,"src":"1556:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1711,"name":"address","nodeType":"ElementaryTypeName","src":"1556:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1555:15:6"},"returnParameters":{"id":1716,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1715,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1731,"src":"1597:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1714,"name":"uint256","nodeType":"ElementaryTypeName","src":"1597:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1596:9:6"},"scope":1757,"src":"1537:452:6","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1755,"nodeType":"Block","src":"2173:149:6","statements":[{"assignments":[1740],"declarations":[{"constant":false,"id":1740,"mutability":"mutable","name":"current","nameLocation":"2191:7:6","nodeType":"VariableDeclaration","scope":1755,"src":"2183:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1739,"name":"uint256","nodeType":"ElementaryTypeName","src":"2183:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1744,"initialValue":{"arguments":[{"id":1742,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1734,"src":"2211:5:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1741,"name":"_useNonce","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1731,"src":"2201:9:6","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$_t_uint256_$","typeString":"function (address) returns (uint256)"}},"id":1743,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2201:16:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2183:34:6"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1747,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1745,"name":"nonce","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1736,"src":"2231:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":1746,"name":"current","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1740,"src":"2240:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2231:16:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1754,"nodeType":"IfStatement","src":"2227:89:6","trueBody":{"id":1753,"nodeType":"Block","src":"2249:67:6","statements":[{"errorCall":{"arguments":[{"id":1749,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1734,"src":"2290:5:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1750,"name":"current","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1740,"src":"2297:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1748,"name":"InvalidAccountNonce","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1660,"src":"2270:19:6","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$_t_uint256_$returns$_t_error_$","typeString":"function (address,uint256) pure returns (error)"}},"id":1751,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2270:35:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":1752,"nodeType":"RevertStatement","src":"2263:42:6"}]}}]},"documentation":{"id":1732,"nodeType":"StructuredDocumentation","src":"1995:100:6","text":" @dev Same as {_useNonce} but checking that `nonce` is the next valid for `owner`."},"id":1756,"implemented":true,"kind":"function","modifiers":[],"name":"_useCheckedNonce","nameLocation":"2109:16:6","nodeType":"FunctionDefinition","parameters":{"id":1737,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1734,"mutability":"mutable","name":"owner","nameLocation":"2134:5:6","nodeType":"VariableDeclaration","scope":1756,"src":"2126:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1733,"name":"address","nodeType":"ElementaryTypeName","src":"2126:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1736,"mutability":"mutable","name":"nonce","nameLocation":"2149:5:6","nodeType":"VariableDeclaration","scope":1756,"src":"2141:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1735,"name":"uint256","nodeType":"ElementaryTypeName","src":"2141:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2125:30:6"},"returnParameters":{"id":1738,"nodeType":"ParameterList","parameters":[],"src":"2173:0:6"},"scope":1757,"src":"2100:222:6","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":1758,"src":"273:2051:6","usedErrors":[381,384,1660],"usedEvents":[389]}],"src":"99:2226:6"},"id":6},"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol","exportedSymbols":{"ContextUpgradeable":[1646],"Initializable":[632],"PausableUpgradeable":[1917]},"id":1918,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1759,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"102:24:7"},{"absolutePath":"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol","file":"../utils/ContextUpgradeable.sol","id":1761,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1918,"sourceUnit":1647,"src":"128:67:7","symbolAliases":[{"foreign":{"id":1760,"name":"ContextUpgradeable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1646,"src":"136:18:7","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol","file":"../proxy/utils/Initializable.sol","id":1763,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1918,"sourceUnit":633,"src":"196:63:7","symbolAliases":[{"foreign":{"id":1762,"name":"Initializable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":632,"src":"204:13:7","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":1765,"name":"Initializable","nameLocations":["742:13:7"],"nodeType":"IdentifierPath","referencedDeclaration":632,"src":"742:13:7"},"id":1766,"nodeType":"InheritanceSpecifier","src":"742:13:7"},{"baseName":{"id":1767,"name":"ContextUpgradeable","nameLocations":["757:18:7"],"nodeType":"IdentifierPath","referencedDeclaration":1646,"src":"757:18:7"},"id":1768,"nodeType":"InheritanceSpecifier","src":"757:18:7"}],"canonicalName":"PausableUpgradeable","contractDependencies":[],"contractKind":"contract","documentation":{"id":1764,"nodeType":"StructuredDocumentation","src":"261:439:7","text":" @dev Contract module which allows children to implement an emergency stop\n mechanism that can be triggered by an authorized account.\n This module is used through inheritance. It will make available the\n modifiers `whenNotPaused` and `whenPaused`, which can be applied to\n the functions of your contract. Note that they will not be pausable by\n simply including this module, only once the modifiers are put in place."},"fullyImplemented":true,"id":1917,"linearizedBaseContracts":[1917,1646,632],"name":"PausableUpgradeable","nameLocation":"719:19:7","nodeType":"ContractDefinition","nodes":[{"canonicalName":"PausableUpgradeable.PausableStorage","documentation":{"id":1769,"nodeType":"StructuredDocumentation","src":"782:66:7","text":"@custom:storage-location erc7201:openzeppelin.storage.Pausable"},"id":1772,"members":[{"constant":false,"id":1771,"mutability":"mutable","name":"_paused","nameLocation":"891:7:7","nodeType":"VariableDeclaration","scope":1772,"src":"886:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1770,"name":"bool","nodeType":"ElementaryTypeName","src":"886:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"name":"PausableStorage","nameLocation":"860:15:7","nodeType":"StructDefinition","scope":1917,"src":"853:52:7","visibility":"public"},{"constant":true,"id":1775,"mutability":"constant","name":"PausableStorageLocation","nameLocation":"1048:23:7","nodeType":"VariableDeclaration","scope":1917,"src":"1023:117:7","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1773,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1023:7:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"hexValue":"307863643565643135633665313837653737653961656538383138346332316634663231383261623538323763623362376530376662656463643633663033333030","id":1774,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1074:66:7","typeDescriptions":{"typeIdentifier":"t_rational_92891662540554778686986514950364265630913525426840345632122912437671245656832_by_1","typeString":"int_const 9289...(69 digits omitted)...6832"},"value":"0xcd5ed15c6e187e77e9aee88184c21f4f2182ab5827cb3b7e07fbedcd63f03300"},"visibility":"private"},{"body":{"id":1782,"nodeType":"Block","src":"1227:82:7","statements":[{"AST":{"nativeSrc":"1246:57:7","nodeType":"YulBlock","src":"1246:57:7","statements":[{"nativeSrc":"1260:33:7","nodeType":"YulAssignment","src":"1260:33:7","value":{"name":"PausableStorageLocation","nativeSrc":"1270:23:7","nodeType":"YulIdentifier","src":"1270:23:7"},"variableNames":[{"name":"$.slot","nativeSrc":"1260:6:7","nodeType":"YulIdentifier","src":"1260:6:7"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":1779,"isOffset":false,"isSlot":true,"src":"1260:6:7","suffix":"slot","valueSize":1},{"declaration":1775,"isOffset":false,"isSlot":false,"src":"1270:23:7","valueSize":1}],"id":1781,"nodeType":"InlineAssembly","src":"1237:66:7"}]},"id":1783,"implemented":true,"kind":"function","modifiers":[],"name":"_getPausableStorage","nameLocation":"1156:19:7","nodeType":"FunctionDefinition","parameters":{"id":1776,"nodeType":"ParameterList","parameters":[],"src":"1175:2:7"},"returnParameters":{"id":1780,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1779,"mutability":"mutable","name":"$","nameLocation":"1224:1:7","nodeType":"VariableDeclaration","scope":1783,"src":"1200:25:7","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_PausableStorage_$1772_storage_ptr","typeString":"struct PausableUpgradeable.PausableStorage"},"typeName":{"id":1778,"nodeType":"UserDefinedTypeName","pathNode":{"id":1777,"name":"PausableStorage","nameLocations":["1200:15:7"],"nodeType":"IdentifierPath","referencedDeclaration":1772,"src":"1200:15:7"},"referencedDeclaration":1772,"src":"1200:15:7","typeDescriptions":{"typeIdentifier":"t_struct$_PausableStorage_$1772_storage_ptr","typeString":"struct PausableUpgradeable.PausableStorage"}},"visibility":"internal"}],"src":"1199:27:7"},"scope":1917,"src":"1147:162:7","stateMutability":"pure","virtual":false,"visibility":"private"},{"anonymous":false,"documentation":{"id":1784,"nodeType":"StructuredDocumentation","src":"1315:73:7","text":" @dev Emitted when the pause is triggered by `account`."},"eventSelector":"62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258","id":1788,"name":"Paused","nameLocation":"1399:6:7","nodeType":"EventDefinition","parameters":{"id":1787,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1786,"indexed":false,"mutability":"mutable","name":"account","nameLocation":"1414:7:7","nodeType":"VariableDeclaration","scope":1788,"src":"1406:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1785,"name":"address","nodeType":"ElementaryTypeName","src":"1406:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1405:17:7"},"src":"1393:30:7"},{"anonymous":false,"documentation":{"id":1789,"nodeType":"StructuredDocumentation","src":"1429:70:7","text":" @dev Emitted when the pause is lifted by `account`."},"eventSelector":"5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa","id":1793,"name":"Unpaused","nameLocation":"1510:8:7","nodeType":"EventDefinition","parameters":{"id":1792,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1791,"indexed":false,"mutability":"mutable","name":"account","nameLocation":"1527:7:7","nodeType":"VariableDeclaration","scope":1793,"src":"1519:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1790,"name":"address","nodeType":"ElementaryTypeName","src":"1519:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1518:17:7"},"src":"1504:32:7"},{"documentation":{"id":1794,"nodeType":"StructuredDocumentation","src":"1542:76:7","text":" @dev The operation failed because the contract is paused."},"errorSelector":"d93c0665","id":1796,"name":"EnforcedPause","nameLocation":"1629:13:7","nodeType":"ErrorDefinition","parameters":{"id":1795,"nodeType":"ParameterList","parameters":[],"src":"1642:2:7"},"src":"1623:22:7"},{"documentation":{"id":1797,"nodeType":"StructuredDocumentation","src":"1651:80:7","text":" @dev The operation failed because the contract is not paused."},"errorSelector":"8dfc202b","id":1799,"name":"ExpectedPause","nameLocation":"1742:13:7","nodeType":"ErrorDefinition","parameters":{"id":1798,"nodeType":"ParameterList","parameters":[],"src":"1755:2:7"},"src":"1736:22:7"},{"body":{"id":1806,"nodeType":"Block","src":"1969:47:7","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":1802,"name":"_requireNotPaused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1855,"src":"1979:17:7","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$__$","typeString":"function () view"}},"id":1803,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1979:19:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1804,"nodeType":"ExpressionStatement","src":"1979:19:7"},{"id":1805,"nodeType":"PlaceholderStatement","src":"2008:1:7"}]},"documentation":{"id":1800,"nodeType":"StructuredDocumentation","src":"1764:175:7","text":" @dev Modifier to make a function callable only when the contract is not paused.\n Requirements:\n - The contract must not be paused."},"id":1807,"name":"whenNotPaused","nameLocation":"1953:13:7","nodeType":"ModifierDefinition","parameters":{"id":1801,"nodeType":"ParameterList","parameters":[],"src":"1966:2:7"},"src":"1944:72:7","virtual":false,"visibility":"internal"},{"body":{"id":1814,"nodeType":"Block","src":"2216:44:7","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":1810,"name":"_requirePaused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1868,"src":"2226:14:7","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$__$","typeString":"function () view"}},"id":1811,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2226:16:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1812,"nodeType":"ExpressionStatement","src":"2226:16:7"},{"id":1813,"nodeType":"PlaceholderStatement","src":"2252:1:7"}]},"documentation":{"id":1808,"nodeType":"StructuredDocumentation","src":"2022:167:7","text":" @dev Modifier to make a function callable only when the contract is paused.\n Requirements:\n - The contract must be paused."},"id":1815,"name":"whenPaused","nameLocation":"2203:10:7","nodeType":"ModifierDefinition","parameters":{"id":1809,"nodeType":"ParameterList","parameters":[],"src":"2213:2:7"},"src":"2194:66:7","virtual":false,"visibility":"internal"},{"body":{"id":1820,"nodeType":"Block","src":"2319:7:7","statements":[]},"id":1821,"implemented":true,"kind":"function","modifiers":[{"id":1818,"kind":"modifierInvocation","modifierName":{"id":1817,"name":"onlyInitializing","nameLocations":["2302:16:7"],"nodeType":"IdentifierPath","referencedDeclaration":527,"src":"2302:16:7"},"nodeType":"ModifierInvocation","src":"2302:16:7"}],"name":"__Pausable_init","nameLocation":"2275:15:7","nodeType":"FunctionDefinition","parameters":{"id":1816,"nodeType":"ParameterList","parameters":[],"src":"2290:2:7"},"returnParameters":{"id":1819,"nodeType":"ParameterList","parameters":[],"src":"2319:0:7"},"scope":1917,"src":"2266:60:7","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1826,"nodeType":"Block","src":"2395:7:7","statements":[]},"id":1827,"implemented":true,"kind":"function","modifiers":[{"id":1824,"kind":"modifierInvocation","modifierName":{"id":1823,"name":"onlyInitializing","nameLocations":["2378:16:7"],"nodeType":"IdentifierPath","referencedDeclaration":527,"src":"2378:16:7"},"nodeType":"ModifierInvocation","src":"2378:16:7"}],"name":"__Pausable_init_unchained","nameLocation":"2341:25:7","nodeType":"FunctionDefinition","parameters":{"id":1822,"nodeType":"ParameterList","parameters":[],"src":"2366:2:7"},"returnParameters":{"id":1825,"nodeType":"ParameterList","parameters":[],"src":"2395:0:7"},"scope":1917,"src":"2332:70:7","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1842,"nodeType":"Block","src":"2549:92:7","statements":[{"assignments":[1835],"declarations":[{"constant":false,"id":1835,"mutability":"mutable","name":"$","nameLocation":"2583:1:7","nodeType":"VariableDeclaration","scope":1842,"src":"2559:25:7","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_PausableStorage_$1772_storage_ptr","typeString":"struct PausableUpgradeable.PausableStorage"},"typeName":{"id":1834,"nodeType":"UserDefinedTypeName","pathNode":{"id":1833,"name":"PausableStorage","nameLocations":["2559:15:7"],"nodeType":"IdentifierPath","referencedDeclaration":1772,"src":"2559:15:7"},"referencedDeclaration":1772,"src":"2559:15:7","typeDescriptions":{"typeIdentifier":"t_struct$_PausableStorage_$1772_storage_ptr","typeString":"struct PausableUpgradeable.PausableStorage"}},"visibility":"internal"}],"id":1838,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":1836,"name":"_getPausableStorage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1783,"src":"2587:19:7","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_PausableStorage_$1772_storage_ptr_$","typeString":"function () pure returns (struct PausableUpgradeable.PausableStorage storage pointer)"}},"id":1837,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2587:21:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_PausableStorage_$1772_storage_ptr","typeString":"struct PausableUpgradeable.PausableStorage storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"2559:49:7"},{"expression":{"expression":{"id":1839,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1835,"src":"2625:1:7","typeDescriptions":{"typeIdentifier":"t_struct$_PausableStorage_$1772_storage_ptr","typeString":"struct PausableUpgradeable.PausableStorage storage pointer"}},"id":1840,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2627:7:7","memberName":"_paused","nodeType":"MemberAccess","referencedDeclaration":1771,"src":"2625:9:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":1832,"id":1841,"nodeType":"Return","src":"2618:16:7"}]},"documentation":{"id":1828,"nodeType":"StructuredDocumentation","src":"2407:84:7","text":" @dev Returns true if the contract is paused, and false otherwise."},"functionSelector":"5c975abb","id":1843,"implemented":true,"kind":"function","modifiers":[],"name":"paused","nameLocation":"2505:6:7","nodeType":"FunctionDefinition","parameters":{"id":1829,"nodeType":"ParameterList","parameters":[],"src":"2511:2:7"},"returnParameters":{"id":1832,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1831,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1843,"src":"2543:4:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1830,"name":"bool","nodeType":"ElementaryTypeName","src":"2543:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2542:6:7"},"scope":1917,"src":"2496:145:7","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":1854,"nodeType":"Block","src":"2760:77:7","statements":[{"condition":{"arguments":[],"expression":{"argumentTypes":[],"id":1847,"name":"paused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1843,"src":"2774:6:7","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_bool_$","typeString":"function () view returns (bool)"}},"id":1848,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2774:8:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1853,"nodeType":"IfStatement","src":"2770:61:7","trueBody":{"id":1852,"nodeType":"Block","src":"2784:47:7","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":1849,"name":"EnforcedPause","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1796,"src":"2805:13:7","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$_t_error_$","typeString":"function () pure returns (error)"}},"id":1850,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2805:15:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":1851,"nodeType":"RevertStatement","src":"2798:22:7"}]}}]},"documentation":{"id":1844,"nodeType":"StructuredDocumentation","src":"2647:57:7","text":" @dev Throws if the contract is paused."},"id":1855,"implemented":true,"kind":"function","modifiers":[],"name":"_requireNotPaused","nameLocation":"2718:17:7","nodeType":"FunctionDefinition","parameters":{"id":1845,"nodeType":"ParameterList","parameters":[],"src":"2735:2:7"},"returnParameters":{"id":1846,"nodeType":"ParameterList","parameters":[],"src":"2760:0:7"},"scope":1917,"src":"2709:128:7","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":1867,"nodeType":"Block","src":"2957:78:7","statements":[{"condition":{"id":1861,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"2971:9:7","subExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":1859,"name":"paused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1843,"src":"2972:6:7","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_bool_$","typeString":"function () view returns (bool)"}},"id":1860,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2972:8:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1866,"nodeType":"IfStatement","src":"2967:62:7","trueBody":{"id":1865,"nodeType":"Block","src":"2982:47:7","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":1862,"name":"ExpectedPause","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1799,"src":"3003:13:7","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$_t_error_$","typeString":"function () pure returns (error)"}},"id":1863,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3003:15:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":1864,"nodeType":"RevertStatement","src":"2996:22:7"}]}}]},"documentation":{"id":1856,"nodeType":"StructuredDocumentation","src":"2843:61:7","text":" @dev Throws if the contract is not paused."},"id":1868,"implemented":true,"kind":"function","modifiers":[],"name":"_requirePaused","nameLocation":"2918:14:7","nodeType":"FunctionDefinition","parameters":{"id":1857,"nodeType":"ParameterList","parameters":[],"src":"2932:2:7"},"returnParameters":{"id":1858,"nodeType":"ParameterList","parameters":[],"src":"2957:0:7"},"scope":1917,"src":"2909:126:7","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":1891,"nodeType":"Block","src":"3219:127:7","statements":[{"assignments":[1876],"declarations":[{"constant":false,"id":1876,"mutability":"mutable","name":"$","nameLocation":"3253:1:7","nodeType":"VariableDeclaration","scope":1891,"src":"3229:25:7","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_PausableStorage_$1772_storage_ptr","typeString":"struct PausableUpgradeable.PausableStorage"},"typeName":{"id":1875,"nodeType":"UserDefinedTypeName","pathNode":{"id":1874,"name":"PausableStorage","nameLocations":["3229:15:7"],"nodeType":"IdentifierPath","referencedDeclaration":1772,"src":"3229:15:7"},"referencedDeclaration":1772,"src":"3229:15:7","typeDescriptions":{"typeIdentifier":"t_struct$_PausableStorage_$1772_storage_ptr","typeString":"struct PausableUpgradeable.PausableStorage"}},"visibility":"internal"}],"id":1879,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":1877,"name":"_getPausableStorage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1783,"src":"3257:19:7","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_PausableStorage_$1772_storage_ptr_$","typeString":"function () pure returns (struct PausableUpgradeable.PausableStorage storage pointer)"}},"id":1878,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3257:21:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_PausableStorage_$1772_storage_ptr","typeString":"struct PausableUpgradeable.PausableStorage storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"3229:49:7"},{"expression":{"id":1884,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":1880,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1876,"src":"3288:1:7","typeDescriptions":{"typeIdentifier":"t_struct$_PausableStorage_$1772_storage_ptr","typeString":"struct PausableUpgradeable.PausableStorage storage pointer"}},"id":1882,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"3290:7:7","memberName":"_paused","nodeType":"MemberAccess","referencedDeclaration":1771,"src":"3288:9:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":1883,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"3300:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"3288:16:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1885,"nodeType":"ExpressionStatement","src":"3288:16:7"},{"eventCall":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":1887,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1628,"src":"3326:10:7","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1888,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3326:12:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1886,"name":"Paused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1788,"src":"3319:6:7","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":1889,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3319:20:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1890,"nodeType":"EmitStatement","src":"3314:25:7"}]},"documentation":{"id":1869,"nodeType":"StructuredDocumentation","src":"3041:124:7","text":" @dev Triggers stopped state.\n Requirements:\n - The contract must not be paused."},"id":1892,"implemented":true,"kind":"function","modifiers":[{"id":1872,"kind":"modifierInvocation","modifierName":{"id":1871,"name":"whenNotPaused","nameLocations":["3205:13:7"],"nodeType":"IdentifierPath","referencedDeclaration":1807,"src":"3205:13:7"},"nodeType":"ModifierInvocation","src":"3205:13:7"}],"name":"_pause","nameLocation":"3179:6:7","nodeType":"FunctionDefinition","parameters":{"id":1870,"nodeType":"ParameterList","parameters":[],"src":"3185:2:7"},"returnParameters":{"id":1873,"nodeType":"ParameterList","parameters":[],"src":"3219:0:7"},"scope":1917,"src":"3170:176:7","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1915,"nodeType":"Block","src":"3526:130:7","statements":[{"assignments":[1900],"declarations":[{"constant":false,"id":1900,"mutability":"mutable","name":"$","nameLocation":"3560:1:7","nodeType":"VariableDeclaration","scope":1915,"src":"3536:25:7","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_PausableStorage_$1772_storage_ptr","typeString":"struct PausableUpgradeable.PausableStorage"},"typeName":{"id":1899,"nodeType":"UserDefinedTypeName","pathNode":{"id":1898,"name":"PausableStorage","nameLocations":["3536:15:7"],"nodeType":"IdentifierPath","referencedDeclaration":1772,"src":"3536:15:7"},"referencedDeclaration":1772,"src":"3536:15:7","typeDescriptions":{"typeIdentifier":"t_struct$_PausableStorage_$1772_storage_ptr","typeString":"struct PausableUpgradeable.PausableStorage"}},"visibility":"internal"}],"id":1903,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":1901,"name":"_getPausableStorage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1783,"src":"3564:19:7","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_PausableStorage_$1772_storage_ptr_$","typeString":"function () pure returns (struct PausableUpgradeable.PausableStorage storage pointer)"}},"id":1902,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3564:21:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_PausableStorage_$1772_storage_ptr","typeString":"struct PausableUpgradeable.PausableStorage storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"3536:49:7"},{"expression":{"id":1908,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":1904,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1900,"src":"3595:1:7","typeDescriptions":{"typeIdentifier":"t_struct$_PausableStorage_$1772_storage_ptr","typeString":"struct PausableUpgradeable.PausableStorage storage pointer"}},"id":1906,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"3597:7:7","memberName":"_paused","nodeType":"MemberAccess","referencedDeclaration":1771,"src":"3595:9:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"66616c7365","id":1907,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"3607:5:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"src":"3595:17:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1909,"nodeType":"ExpressionStatement","src":"3595:17:7"},{"eventCall":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":1911,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1628,"src":"3636:10:7","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1912,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3636:12:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1910,"name":"Unpaused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1793,"src":"3627:8:7","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":1913,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3627:22:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1914,"nodeType":"EmitStatement","src":"3622:27:7"}]},"documentation":{"id":1893,"nodeType":"StructuredDocumentation","src":"3352:121:7","text":" @dev Returns to normal state.\n Requirements:\n - The contract must be paused."},"id":1916,"implemented":true,"kind":"function","modifiers":[{"id":1896,"kind":"modifierInvocation","modifierName":{"id":1895,"name":"whenPaused","nameLocations":["3515:10:7"],"nodeType":"IdentifierPath","referencedDeclaration":1815,"src":"3515:10:7"},"nodeType":"ModifierInvocation","src":"3515:10:7"}],"name":"_unpause","nameLocation":"3487:8:7","nodeType":"FunctionDefinition","parameters":{"id":1894,"nodeType":"ParameterList","parameters":[],"src":"3495:2:7"},"returnParameters":{"id":1897,"nodeType":"ParameterList","parameters":[],"src":"3526:0:7"},"scope":1917,"src":"3478:178:7","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":1918,"src":"701:2957:7","usedErrors":[381,384,1796,1799],"usedEvents":[389,1788,1793]}],"src":"102:3557:7"},"id":7},"@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol","exportedSymbols":{"EIP712Upgradeable":[2261],"IERC5267":[2430],"Initializable":[632],"MessageHashUtils":[5315]},"id":2262,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1919,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"113:24:8"},{"absolutePath":"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol","file":"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol","id":1921,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2262,"sourceUnit":5316,"src":"139:97:8","symbolAliases":[{"foreign":{"id":1920,"name":"MessageHashUtils","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5315,"src":"147:16:8","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/interfaces/IERC5267.sol","file":"@openzeppelin/contracts/interfaces/IERC5267.sol","id":1923,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2262,"sourceUnit":2431,"src":"237:73:8","symbolAliases":[{"foreign":{"id":1922,"name":"IERC5267","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2430,"src":"245:8:8","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol","file":"../../proxy/utils/Initializable.sol","id":1925,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2262,"sourceUnit":633,"src":"311:66:8","symbolAliases":[{"foreign":{"id":1924,"name":"Initializable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":632,"src":"319:13:8","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":1927,"name":"Initializable","nameLocations":["1884:13:8"],"nodeType":"IdentifierPath","referencedDeclaration":632,"src":"1884:13:8"},"id":1928,"nodeType":"InheritanceSpecifier","src":"1884:13:8"},{"baseName":{"id":1929,"name":"IERC5267","nameLocations":["1899:8:8"],"nodeType":"IdentifierPath","referencedDeclaration":2430,"src":"1899:8:8"},"id":1930,"nodeType":"InheritanceSpecifier","src":"1899:8:8"}],"canonicalName":"EIP712Upgradeable","contractDependencies":[],"contractKind":"contract","documentation":{"id":1926,"nodeType":"StructuredDocumentation","src":"379:1465:8","text":" @dev https://eips.ethereum.org/EIPS/eip-712[EIP-712] is a standard for hashing and signing of typed structured data.\n The encoding scheme specified in the EIP requires a domain separator and a hash of the typed structured data, whose\n encoding is very generic and therefore its implementation in Solidity is not feasible, thus this contract\n does not implement the encoding itself. Protocols need to implement the type-specific encoding they need in order to\n produce the hash of their typed data using a combination of `abi.encode` and `keccak256`.\n This contract implements the EIP-712 domain separator ({_domainSeparatorV4}) that is used as part of the encoding\n scheme, and the final step of the encoding to obtain the message digest that is then signed via ECDSA\n ({_hashTypedDataV4}).\n The implementation of the domain separator was designed to be as efficient as possible while still properly updating\n the chain id to protect against replay attacks on an eventual fork of the chain.\n NOTE: This contract implements the version of the encoding known as \"v4\", as implemented by the JSON RPC method\n https://docs.metamask.io/guide/signing-data.html[`eth_signTypedDataV4` in MetaMask].\n NOTE: The upgradeable version of this contract does not use an immutable cache and recomputes the domain separator\n each time {_domainSeparatorV4} is called. That is cheaper than accessing a cached version in cold storage."},"fullyImplemented":true,"id":2261,"linearizedBaseContracts":[2261,2430,632],"name":"EIP712Upgradeable","nameLocation":"1863:17:8","nodeType":"ContractDefinition","nodes":[{"constant":true,"id":1935,"mutability":"constant","name":"TYPE_HASH","nameLocation":"1939:9:8","nodeType":"VariableDeclaration","scope":2261,"src":"1914:140:8","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1931,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1914:7:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"arguments":[{"hexValue":"454950373132446f6d61696e28737472696e67206e616d652c737472696e672076657273696f6e2c75696e7432353620636861696e49642c6164647265737320766572696679696e67436f6e747261637429","id":1933,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1969:84:8","typeDescriptions":{"typeIdentifier":"t_stringliteral_8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f","typeString":"literal_string \"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\""},"value":"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f","typeString":"literal_string \"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\""}],"id":1932,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"1959:9:8","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":1934,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1959:95:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"private"},{"canonicalName":"EIP712Upgradeable.EIP712Storage","documentation":{"id":1936,"nodeType":"StructuredDocumentation","src":"2061:64:8","text":"@custom:storage-location erc7201:openzeppelin.storage.EIP712"},"id":1947,"members":[{"constant":false,"id":1939,"mutability":"mutable","name":"_hashedName","nameLocation":"2218:11:8","nodeType":"VariableDeclaration","scope":1947,"src":"2210:19:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1938,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2210:7:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1942,"mutability":"mutable","name":"_hashedVersion","nameLocation":"2299:14:8","nodeType":"VariableDeclaration","scope":1947,"src":"2291:22:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1941,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2291:7:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1944,"mutability":"mutable","name":"_name","nameLocation":"2331:5:8","nodeType":"VariableDeclaration","scope":1947,"src":"2324:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":1943,"name":"string","nodeType":"ElementaryTypeName","src":"2324:6:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":1946,"mutability":"mutable","name":"_version","nameLocation":"2353:8:8","nodeType":"VariableDeclaration","scope":1947,"src":"2346:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":1945,"name":"string","nodeType":"ElementaryTypeName","src":"2346:6:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"name":"EIP712Storage","nameLocation":"2137:13:8","nodeType":"StructDefinition","scope":2261,"src":"2130:238:8","visibility":"public"},{"constant":true,"id":1950,"mutability":"constant","name":"EIP712StorageLocation","nameLocation":"2509:21:8","nodeType":"VariableDeclaration","scope":2261,"src":"2484:115:8","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1948,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2484:7:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"hexValue":"307861313661343664393432363163373531376363386666383966363163306365393335393865336338343938303130313164656536343961366135353764313030","id":1949,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2533:66:8","typeDescriptions":{"typeIdentifier":"t_rational_73010143390315934406010559831118728393600729754696197287367516085911467577600_by_1","typeString":"int_const 7301...(69 digits omitted)...7600"},"value":"0xa16a46d94261c7517cc8ff89f61c0ce93598e3c849801011dee649a6a557d100"},"visibility":"private"},{"body":{"id":1957,"nodeType":"Block","src":"2682:80:8","statements":[{"AST":{"nativeSrc":"2701:55:8","nodeType":"YulBlock","src":"2701:55:8","statements":[{"nativeSrc":"2715:31:8","nodeType":"YulAssignment","src":"2715:31:8","value":{"name":"EIP712StorageLocation","nativeSrc":"2725:21:8","nodeType":"YulIdentifier","src":"2725:21:8"},"variableNames":[{"name":"$.slot","nativeSrc":"2715:6:8","nodeType":"YulIdentifier","src":"2715:6:8"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":1954,"isOffset":false,"isSlot":true,"src":"2715:6:8","suffix":"slot","valueSize":1},{"declaration":1950,"isOffset":false,"isSlot":false,"src":"2725:21:8","valueSize":1}],"id":1956,"nodeType":"InlineAssembly","src":"2692:64:8"}]},"id":1958,"implemented":true,"kind":"function","modifiers":[],"name":"_getEIP712Storage","nameLocation":"2615:17:8","nodeType":"FunctionDefinition","parameters":{"id":1951,"nodeType":"ParameterList","parameters":[],"src":"2632:2:8"},"returnParameters":{"id":1955,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1954,"mutability":"mutable","name":"$","nameLocation":"2679:1:8","nodeType":"VariableDeclaration","scope":1958,"src":"2657:23:8","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_EIP712Storage_$1947_storage_ptr","typeString":"struct EIP712Upgradeable.EIP712Storage"},"typeName":{"id":1953,"nodeType":"UserDefinedTypeName","pathNode":{"id":1952,"name":"EIP712Storage","nameLocations":["2657:13:8"],"nodeType":"IdentifierPath","referencedDeclaration":1947,"src":"2657:13:8"},"referencedDeclaration":1947,"src":"2657:13:8","typeDescriptions":{"typeIdentifier":"t_struct$_EIP712Storage_$1947_storage_ptr","typeString":"struct EIP712Upgradeable.EIP712Storage"}},"visibility":"internal"}],"src":"2656:25:8"},"scope":2261,"src":"2606:156:8","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":1973,"nodeType":"Block","src":"3424:55:8","statements":[{"expression":{"arguments":[{"id":1969,"name":"name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1961,"src":"3458:4:8","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":1970,"name":"version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1963,"src":"3464:7:8","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1968,"name":"__EIP712_init_unchained","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2014,"src":"3434:23:8","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory,string memory)"}},"id":1971,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3434:38:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1972,"nodeType":"ExpressionStatement","src":"3434:38:8"}]},"documentation":{"id":1959,"nodeType":"StructuredDocumentation","src":"2768:559:8","text":" @dev Initializes the domain separator and parameter caches.\n The meaning of `name` and `version` is specified in\n https://eips.ethereum.org/EIPS/eip-712#definition-of-domainseparator[EIP-712]:\n - `name`: the user readable name of the signing domain, i.e. the name of the DApp or the protocol.\n - `version`: the current major version of the signing domain.\n NOTE: These parameters cannot be changed except through a xref:learn::upgrading-smart-contracts.adoc[smart\n contract upgrade]."},"id":1974,"implemented":true,"kind":"function","modifiers":[{"id":1966,"kind":"modifierInvocation","modifierName":{"id":1965,"name":"onlyInitializing","nameLocations":["3407:16:8"],"nodeType":"IdentifierPath","referencedDeclaration":527,"src":"3407:16:8"},"nodeType":"ModifierInvocation","src":"3407:16:8"}],"name":"__EIP712_init","nameLocation":"3341:13:8","nodeType":"FunctionDefinition","parameters":{"id":1964,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1961,"mutability":"mutable","name":"name","nameLocation":"3369:4:8","nodeType":"VariableDeclaration","scope":1974,"src":"3355:18:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1960,"name":"string","nodeType":"ElementaryTypeName","src":"3355:6:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":1963,"mutability":"mutable","name":"version","nameLocation":"3389:7:8","nodeType":"VariableDeclaration","scope":1974,"src":"3375:21:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1962,"name":"string","nodeType":"ElementaryTypeName","src":"3375:6:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3354:43:8"},"returnParameters":{"id":1967,"nodeType":"ParameterList","parameters":[],"src":"3424:0:8"},"scope":2261,"src":"3332:147:8","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2013,"nodeType":"Block","src":"3587:228:8","statements":[{"assignments":[1985],"declarations":[{"constant":false,"id":1985,"mutability":"mutable","name":"$","nameLocation":"3619:1:8","nodeType":"VariableDeclaration","scope":2013,"src":"3597:23:8","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_EIP712Storage_$1947_storage_ptr","typeString":"struct EIP712Upgradeable.EIP712Storage"},"typeName":{"id":1984,"nodeType":"UserDefinedTypeName","pathNode":{"id":1983,"name":"EIP712Storage","nameLocations":["3597:13:8"],"nodeType":"IdentifierPath","referencedDeclaration":1947,"src":"3597:13:8"},"referencedDeclaration":1947,"src":"3597:13:8","typeDescriptions":{"typeIdentifier":"t_struct$_EIP712Storage_$1947_storage_ptr","typeString":"struct EIP712Upgradeable.EIP712Storage"}},"visibility":"internal"}],"id":1988,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":1986,"name":"_getEIP712Storage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1958,"src":"3623:17:8","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_EIP712Storage_$1947_storage_ptr_$","typeString":"function () pure returns (struct EIP712Upgradeable.EIP712Storage storage pointer)"}},"id":1987,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3623:19:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_EIP712Storage_$1947_storage_ptr","typeString":"struct EIP712Upgradeable.EIP712Storage storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"3597:45:8"},{"expression":{"id":1993,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":1989,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1985,"src":"3652:1:8","typeDescriptions":{"typeIdentifier":"t_struct$_EIP712Storage_$1947_storage_ptr","typeString":"struct EIP712Upgradeable.EIP712Storage storage pointer"}},"id":1991,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"3654:5:8","memberName":"_name","nodeType":"MemberAccess","referencedDeclaration":1944,"src":"3652:7:8","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1992,"name":"name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1976,"src":"3662:4:8","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"3652:14:8","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":1994,"nodeType":"ExpressionStatement","src":"3652:14:8"},{"expression":{"id":1999,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":1995,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1985,"src":"3676:1:8","typeDescriptions":{"typeIdentifier":"t_struct$_EIP712Storage_$1947_storage_ptr","typeString":"struct EIP712Upgradeable.EIP712Storage storage pointer"}},"id":1997,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"3678:8:8","memberName":"_version","nodeType":"MemberAccess","referencedDeclaration":1946,"src":"3676:10:8","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1998,"name":"version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1978,"src":"3689:7:8","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"3676:20:8","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":2000,"nodeType":"ExpressionStatement","src":"3676:20:8"},{"expression":{"id":2005,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":2001,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1985,"src":"3761:1:8","typeDescriptions":{"typeIdentifier":"t_struct$_EIP712Storage_$1947_storage_ptr","typeString":"struct EIP712Upgradeable.EIP712Storage storage pointer"}},"id":2003,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"3763:11:8","memberName":"_hashedName","nodeType":"MemberAccess","referencedDeclaration":1939,"src":"3761:13:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"30","id":2004,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3777:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3761:17:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":2006,"nodeType":"ExpressionStatement","src":"3761:17:8"},{"expression":{"id":2011,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":2007,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1985,"src":"3788:1:8","typeDescriptions":{"typeIdentifier":"t_struct$_EIP712Storage_$1947_storage_ptr","typeString":"struct EIP712Upgradeable.EIP712Storage storage pointer"}},"id":2009,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"3790:14:8","memberName":"_hashedVersion","nodeType":"MemberAccess","referencedDeclaration":1942,"src":"3788:16:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"30","id":2010,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3807:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3788:20:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":2012,"nodeType":"ExpressionStatement","src":"3788:20:8"}]},"id":2014,"implemented":true,"kind":"function","modifiers":[{"id":1981,"kind":"modifierInvocation","modifierName":{"id":1980,"name":"onlyInitializing","nameLocations":["3570:16:8"],"nodeType":"IdentifierPath","referencedDeclaration":527,"src":"3570:16:8"},"nodeType":"ModifierInvocation","src":"3570:16:8"}],"name":"__EIP712_init_unchained","nameLocation":"3494:23:8","nodeType":"FunctionDefinition","parameters":{"id":1979,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1976,"mutability":"mutable","name":"name","nameLocation":"3532:4:8","nodeType":"VariableDeclaration","scope":2014,"src":"3518:18:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1975,"name":"string","nodeType":"ElementaryTypeName","src":"3518:6:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":1978,"mutability":"mutable","name":"version","nameLocation":"3552:7:8","nodeType":"VariableDeclaration","scope":2014,"src":"3538:21:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1977,"name":"string","nodeType":"ElementaryTypeName","src":"3538:6:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3517:43:8"},"returnParameters":{"id":1982,"nodeType":"ParameterList","parameters":[],"src":"3587:0:8"},"scope":2261,"src":"3485:330:8","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2023,"nodeType":"Block","src":"3963:47:8","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":2020,"name":"_buildDomainSeparator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2047,"src":"3980:21:8","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_bytes32_$","typeString":"function () view returns (bytes32)"}},"id":2021,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3980:23:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":2019,"id":2022,"nodeType":"Return","src":"3973:30:8"}]},"documentation":{"id":2015,"nodeType":"StructuredDocumentation","src":"3821:75:8","text":" @dev Returns the domain separator for the current chain."},"id":2024,"implemented":true,"kind":"function","modifiers":[],"name":"_domainSeparatorV4","nameLocation":"3910:18:8","nodeType":"FunctionDefinition","parameters":{"id":2016,"nodeType":"ParameterList","parameters":[],"src":"3928:2:8"},"returnParameters":{"id":2019,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2018,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2024,"src":"3954:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2017,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3954:7:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3953:9:8"},"scope":2261,"src":"3901:109:8","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":2046,"nodeType":"Block","src":"4080:127:8","statements":[{"expression":{"arguments":[{"arguments":[{"id":2032,"name":"TYPE_HASH","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1935,"src":"4118:9:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"arguments":[],"expression":{"argumentTypes":[],"id":2033,"name":"_EIP712NameHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2208,"src":"4129:15:8","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_bytes32_$","typeString":"function () view returns (bytes32)"}},"id":2034,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4129:17:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"arguments":[],"expression":{"argumentTypes":[],"id":2035,"name":"_EIP712VersionHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2260,"src":"4148:18:8","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_bytes32_$","typeString":"function () view returns (bytes32)"}},"id":2036,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4148:20:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"expression":{"id":2037,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"4170:5:8","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":2038,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4176:7:8","memberName":"chainid","nodeType":"MemberAccess","src":"4170:13:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"id":2041,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"4193:4:8","typeDescriptions":{"typeIdentifier":"t_contract$_EIP712Upgradeable_$2261","typeString":"contract EIP712Upgradeable"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_EIP712Upgradeable_$2261","typeString":"contract EIP712Upgradeable"}],"id":2040,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4185:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2039,"name":"address","nodeType":"ElementaryTypeName","src":"4185:7:8","typeDescriptions":{}}},"id":2042,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4185:13:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":2030,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"4107:3:8","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":2031,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4111:6:8","memberName":"encode","nodeType":"MemberAccess","src":"4107:10:8","typeDescriptions":{"typeIdentifier":"t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":2043,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4107:92:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2029,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"4097:9:8","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":2044,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4097:103:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":2028,"id":2045,"nodeType":"Return","src":"4090:110:8"}]},"id":2047,"implemented":true,"kind":"function","modifiers":[],"name":"_buildDomainSeparator","nameLocation":"4025:21:8","nodeType":"FunctionDefinition","parameters":{"id":2025,"nodeType":"ParameterList","parameters":[],"src":"4046:2:8"},"returnParameters":{"id":2028,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2027,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2047,"src":"4071:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2026,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4071:7:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4070:9:8"},"scope":2261,"src":"4016:191:8","stateMutability":"view","virtual":false,"visibility":"private"},{"body":{"id":2062,"nodeType":"Block","src":"4918:90:8","statements":[{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":2057,"name":"_domainSeparatorV4","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2024,"src":"4968:18:8","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_bytes32_$","typeString":"function () view returns (bytes32)"}},"id":2058,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4968:20:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":2059,"name":"structHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2050,"src":"4990:10:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":2055,"name":"MessageHashUtils","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5315,"src":"4935:16:8","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_MessageHashUtils_$5315_$","typeString":"type(library MessageHashUtils)"}},"id":2056,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4952:15:8","memberName":"toTypedDataHash","nodeType":"MemberAccess","referencedDeclaration":5314,"src":"4935:32:8","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32,bytes32) pure returns (bytes32)"}},"id":2060,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4935:66:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":2054,"id":2061,"nodeType":"Return","src":"4928:73:8"}]},"documentation":{"id":2048,"nodeType":"StructuredDocumentation","src":"4213:614:8","text":" @dev Given an already https://eips.ethereum.org/EIPS/eip-712#definition-of-hashstruct[hashed struct], this\n function returns the hash of the fully encoded EIP712 message for this domain.\n This hash can be used together with {ECDSA-recover} to obtain the signer of a message. For example:\n ```solidity\n bytes32 digest = _hashTypedDataV4(keccak256(abi.encode(\n     keccak256(\"Mail(address to,string contents)\"),\n     mailTo,\n     keccak256(bytes(mailContents))\n )));\n address signer = ECDSA.recover(digest, signature);\n ```"},"id":2063,"implemented":true,"kind":"function","modifiers":[],"name":"_hashTypedDataV4","nameLocation":"4841:16:8","nodeType":"FunctionDefinition","parameters":{"id":2051,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2050,"mutability":"mutable","name":"structHash","nameLocation":"4866:10:8","nodeType":"VariableDeclaration","scope":2063,"src":"4858:18:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2049,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4858:7:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4857:20:8"},"returnParameters":{"id":2054,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2053,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2063,"src":"4909:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2052,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4909:7:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4908:9:8"},"scope":2261,"src":"4832:176:8","stateMutability":"view","virtual":true,"visibility":"internal"},{"baseFunctions":[2429],"body":{"id":2123,"nodeType":"Block","src":"5371:575:8","statements":[{"assignments":[2084],"declarations":[{"constant":false,"id":2084,"mutability":"mutable","name":"$","nameLocation":"5403:1:8","nodeType":"VariableDeclaration","scope":2123,"src":"5381:23:8","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_EIP712Storage_$1947_storage_ptr","typeString":"struct EIP712Upgradeable.EIP712Storage"},"typeName":{"id":2083,"nodeType":"UserDefinedTypeName","pathNode":{"id":2082,"name":"EIP712Storage","nameLocations":["5381:13:8"],"nodeType":"IdentifierPath","referencedDeclaration":1947,"src":"5381:13:8"},"referencedDeclaration":1947,"src":"5381:13:8","typeDescriptions":{"typeIdentifier":"t_struct$_EIP712Storage_$1947_storage_ptr","typeString":"struct EIP712Upgradeable.EIP712Storage"}},"visibility":"internal"}],"id":2087,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":2085,"name":"_getEIP712Storage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1958,"src":"5407:17:8","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_EIP712Storage_$1947_storage_ptr_$","typeString":"function () pure returns (struct EIP712Upgradeable.EIP712Storage storage pointer)"}},"id":2086,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5407:19:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_EIP712Storage_$1947_storage_ptr","typeString":"struct EIP712Upgradeable.EIP712Storage storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"5381:45:8"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2097,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":2092,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2089,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2084,"src":"5647:1:8","typeDescriptions":{"typeIdentifier":"t_struct$_EIP712Storage_$1947_storage_ptr","typeString":"struct EIP712Upgradeable.EIP712Storage storage pointer"}},"id":2090,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5649:11:8","memberName":"_hashedName","nodeType":"MemberAccess","referencedDeclaration":1939,"src":"5647:13:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2091,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5664:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"5647:18:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":2096,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2093,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2084,"src":"5669:1:8","typeDescriptions":{"typeIdentifier":"t_struct$_EIP712Storage_$1947_storage_ptr","typeString":"struct EIP712Upgradeable.EIP712Storage storage pointer"}},"id":2094,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5671:14:8","memberName":"_hashedVersion","nodeType":"MemberAccess","referencedDeclaration":1942,"src":"5669:16:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2095,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5689:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"5669:21:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"5647:43:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4549503731323a20556e696e697469616c697a6564","id":2098,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5692:23:8","typeDescriptions":{"typeIdentifier":"t_stringliteral_2e5045ff73280aa8e8acd8c82710f23812497f87f7f576e2220a2ddd0d45eade","typeString":"literal_string \"EIP712: Uninitialized\""},"value":"EIP712: Uninitialized"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_2e5045ff73280aa8e8acd8c82710f23812497f87f7f576e2220a2ddd0d45eade","typeString":"literal_string \"EIP712: Uninitialized\""}],"id":2088,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"5639:7:8","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2099,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5639:77:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2100,"nodeType":"ExpressionStatement","src":"5639:77:8"},{"expression":{"components":[{"hexValue":"0f","id":2101,"isConstant":false,"isLValue":false,"isPure":true,"kind":"hexString","lValueRequested":false,"nodeType":"Literal","src":"5748:7:8","typeDescriptions":{"typeIdentifier":"t_stringliteral_3d725c5ee53025f027da36bea8d3af3b6a3e9d2d1542d47c162631de48e66c1c","typeString":"literal_string hex\"0f\""},"value":"\u000f"},{"arguments":[],"expression":{"argumentTypes":[],"id":2102,"name":"_EIP712Name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2140,"src":"5778:11:8","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_string_memory_ptr_$","typeString":"function () view returns (string memory)"}},"id":2103,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5778:13:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"arguments":[],"expression":{"argumentTypes":[],"id":2104,"name":"_EIP712Version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2156,"src":"5805:14:8","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_string_memory_ptr_$","typeString":"function () view returns (string memory)"}},"id":2105,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5805:16:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"expression":{"id":2106,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"5835:5:8","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":2107,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5841:7:8","memberName":"chainid","nodeType":"MemberAccess","src":"5835:13:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"id":2110,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"5870:4:8","typeDescriptions":{"typeIdentifier":"t_contract$_EIP712Upgradeable_$2261","typeString":"contract EIP712Upgradeable"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_EIP712Upgradeable_$2261","typeString":"contract EIP712Upgradeable"}],"id":2109,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5862:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2108,"name":"address","nodeType":"ElementaryTypeName","src":"5862:7:8","typeDescriptions":{}}},"id":2111,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5862:13:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":2114,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5897:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2113,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5889:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":2112,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5889:7:8","typeDescriptions":{}}},"id":2115,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5889:10:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"arguments":[{"hexValue":"30","id":2119,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5927:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2118,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"5913:13:8","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (uint256[] memory)"},"typeName":{"baseType":{"id":2116,"name":"uint256","nodeType":"ElementaryTypeName","src":"5917:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2117,"nodeType":"ArrayTypeName","src":"5917:9:8","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}}},"id":2120,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5913:16:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}}],"id":2121,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"5734:205:8","typeDescriptions":{"typeIdentifier":"t_tuple$_t_stringliteral_3d725c5ee53025f027da36bea8d3af3b6a3e9d2d1542d47c162631de48e66c1c_$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_uint256_$_t_address_$_t_bytes32_$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"tuple(literal_string hex\"0f\",string memory,string memory,uint256,address,bytes32,uint256[] memory)"}},"functionReturnParameters":2081,"id":2122,"nodeType":"Return","src":"5727:212:8"}]},"documentation":{"id":2064,"nodeType":"StructuredDocumentation","src":"5014:24:8","text":"@inheritdoc IERC5267"},"functionSelector":"84b0196e","id":2124,"implemented":true,"kind":"function","modifiers":[],"name":"eip712Domain","nameLocation":"5052:12:8","nodeType":"FunctionDefinition","parameters":{"id":2065,"nodeType":"ParameterList","parameters":[],"src":"5064:2:8"},"returnParameters":{"id":2081,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2067,"mutability":"mutable","name":"fields","nameLocation":"5148:6:8","nodeType":"VariableDeclaration","scope":2124,"src":"5141:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"typeName":{"id":2066,"name":"bytes1","nodeType":"ElementaryTypeName","src":"5141:6:8","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"visibility":"internal"},{"constant":false,"id":2069,"mutability":"mutable","name":"name","nameLocation":"5182:4:8","nodeType":"VariableDeclaration","scope":2124,"src":"5168:18:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2068,"name":"string","nodeType":"ElementaryTypeName","src":"5168:6:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2071,"mutability":"mutable","name":"version","nameLocation":"5214:7:8","nodeType":"VariableDeclaration","scope":2124,"src":"5200:21:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2070,"name":"string","nodeType":"ElementaryTypeName","src":"5200:6:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2073,"mutability":"mutable","name":"chainId","nameLocation":"5243:7:8","nodeType":"VariableDeclaration","scope":2124,"src":"5235:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2072,"name":"uint256","nodeType":"ElementaryTypeName","src":"5235:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2075,"mutability":"mutable","name":"verifyingContract","nameLocation":"5272:17:8","nodeType":"VariableDeclaration","scope":2124,"src":"5264:25:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2074,"name":"address","nodeType":"ElementaryTypeName","src":"5264:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2077,"mutability":"mutable","name":"salt","nameLocation":"5311:4:8","nodeType":"VariableDeclaration","scope":2124,"src":"5303:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2076,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5303:7:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2080,"mutability":"mutable","name":"extensions","nameLocation":"5346:10:8","nodeType":"VariableDeclaration","scope":2124,"src":"5329:27:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":2078,"name":"uint256","nodeType":"ElementaryTypeName","src":"5329:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2079,"nodeType":"ArrayTypeName","src":"5329:9:8","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"5127:239:8"},"scope":2261,"src":"5043:903:8","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":2139,"nodeType":"Block","src":"6239:86:8","statements":[{"assignments":[2132],"declarations":[{"constant":false,"id":2132,"mutability":"mutable","name":"$","nameLocation":"6271:1:8","nodeType":"VariableDeclaration","scope":2139,"src":"6249:23:8","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_EIP712Storage_$1947_storage_ptr","typeString":"struct EIP712Upgradeable.EIP712Storage"},"typeName":{"id":2131,"nodeType":"UserDefinedTypeName","pathNode":{"id":2130,"name":"EIP712Storage","nameLocations":["6249:13:8"],"nodeType":"IdentifierPath","referencedDeclaration":1947,"src":"6249:13:8"},"referencedDeclaration":1947,"src":"6249:13:8","typeDescriptions":{"typeIdentifier":"t_struct$_EIP712Storage_$1947_storage_ptr","typeString":"struct EIP712Upgradeable.EIP712Storage"}},"visibility":"internal"}],"id":2135,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":2133,"name":"_getEIP712Storage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1958,"src":"6275:17:8","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_EIP712Storage_$1947_storage_ptr_$","typeString":"function () pure returns (struct EIP712Upgradeable.EIP712Storage storage pointer)"}},"id":2134,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6275:19:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_EIP712Storage_$1947_storage_ptr","typeString":"struct EIP712Upgradeable.EIP712Storage storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"6249:45:8"},{"expression":{"expression":{"id":2136,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2132,"src":"6311:1:8","typeDescriptions":{"typeIdentifier":"t_struct$_EIP712Storage_$1947_storage_ptr","typeString":"struct EIP712Upgradeable.EIP712Storage storage pointer"}},"id":2137,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6313:5:8","memberName":"_name","nodeType":"MemberAccess","referencedDeclaration":1944,"src":"6311:7:8","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"functionReturnParameters":2129,"id":2138,"nodeType":"Return","src":"6304:14:8"}]},"documentation":{"id":2125,"nodeType":"StructuredDocumentation","src":"5952:213:8","text":" @dev The name parameter for the EIP712 domain.\n NOTE: This function reads from storage by default, but can be redefined to return a constant value if gas costs\n are a concern."},"id":2140,"implemented":true,"kind":"function","modifiers":[],"name":"_EIP712Name","nameLocation":"6179:11:8","nodeType":"FunctionDefinition","parameters":{"id":2126,"nodeType":"ParameterList","parameters":[],"src":"6190:2:8"},"returnParameters":{"id":2129,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2128,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2140,"src":"6224:13:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2127,"name":"string","nodeType":"ElementaryTypeName","src":"6224:6:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"6223:15:8"},"scope":2261,"src":"6170:155:8","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":2155,"nodeType":"Block","src":"6624:89:8","statements":[{"assignments":[2148],"declarations":[{"constant":false,"id":2148,"mutability":"mutable","name":"$","nameLocation":"6656:1:8","nodeType":"VariableDeclaration","scope":2155,"src":"6634:23:8","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_EIP712Storage_$1947_storage_ptr","typeString":"struct EIP712Upgradeable.EIP712Storage"},"typeName":{"id":2147,"nodeType":"UserDefinedTypeName","pathNode":{"id":2146,"name":"EIP712Storage","nameLocations":["6634:13:8"],"nodeType":"IdentifierPath","referencedDeclaration":1947,"src":"6634:13:8"},"referencedDeclaration":1947,"src":"6634:13:8","typeDescriptions":{"typeIdentifier":"t_struct$_EIP712Storage_$1947_storage_ptr","typeString":"struct EIP712Upgradeable.EIP712Storage"}},"visibility":"internal"}],"id":2151,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":2149,"name":"_getEIP712Storage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1958,"src":"6660:17:8","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_EIP712Storage_$1947_storage_ptr_$","typeString":"function () pure returns (struct EIP712Upgradeable.EIP712Storage storage pointer)"}},"id":2150,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6660:19:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_EIP712Storage_$1947_storage_ptr","typeString":"struct EIP712Upgradeable.EIP712Storage storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"6634:45:8"},{"expression":{"expression":{"id":2152,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2148,"src":"6696:1:8","typeDescriptions":{"typeIdentifier":"t_struct$_EIP712Storage_$1947_storage_ptr","typeString":"struct EIP712Upgradeable.EIP712Storage storage pointer"}},"id":2153,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6698:8:8","memberName":"_version","nodeType":"MemberAccess","referencedDeclaration":1946,"src":"6696:10:8","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"functionReturnParameters":2145,"id":2154,"nodeType":"Return","src":"6689:17:8"}]},"documentation":{"id":2141,"nodeType":"StructuredDocumentation","src":"6331:216:8","text":" @dev The version parameter for the EIP712 domain.\n NOTE: This function reads from storage by default, but can be redefined to return a constant value if gas costs\n are a concern."},"id":2156,"implemented":true,"kind":"function","modifiers":[],"name":"_EIP712Version","nameLocation":"6561:14:8","nodeType":"FunctionDefinition","parameters":{"id":2142,"nodeType":"ParameterList","parameters":[],"src":"6575:2:8"},"returnParameters":{"id":2145,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2144,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2156,"src":"6609:13:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2143,"name":"string","nodeType":"ElementaryTypeName","src":"6609:6:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"6608:15:8"},"scope":2261,"src":"6552:161:8","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":2207,"nodeType":"Block","src":"6987:628:8","statements":[{"assignments":[2164],"declarations":[{"constant":false,"id":2164,"mutability":"mutable","name":"$","nameLocation":"7019:1:8","nodeType":"VariableDeclaration","scope":2207,"src":"6997:23:8","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_EIP712Storage_$1947_storage_ptr","typeString":"struct EIP712Upgradeable.EIP712Storage"},"typeName":{"id":2163,"nodeType":"UserDefinedTypeName","pathNode":{"id":2162,"name":"EIP712Storage","nameLocations":["6997:13:8"],"nodeType":"IdentifierPath","referencedDeclaration":1947,"src":"6997:13:8"},"referencedDeclaration":1947,"src":"6997:13:8","typeDescriptions":{"typeIdentifier":"t_struct$_EIP712Storage_$1947_storage_ptr","typeString":"struct EIP712Upgradeable.EIP712Storage"}},"visibility":"internal"}],"id":2167,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":2165,"name":"_getEIP712Storage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1958,"src":"7023:17:8","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_EIP712Storage_$1947_storage_ptr_$","typeString":"function () pure returns (struct EIP712Upgradeable.EIP712Storage storage pointer)"}},"id":2166,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7023:19:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_EIP712Storage_$1947_storage_ptr","typeString":"struct EIP712Upgradeable.EIP712Storage storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"6997:45:8"},{"assignments":[2169],"declarations":[{"constant":false,"id":2169,"mutability":"mutable","name":"name","nameLocation":"7066:4:8","nodeType":"VariableDeclaration","scope":2207,"src":"7052:18:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2168,"name":"string","nodeType":"ElementaryTypeName","src":"7052:6:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"id":2172,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":2170,"name":"_EIP712Name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2140,"src":"7073:11:8","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_string_memory_ptr_$","typeString":"function () view returns (string memory)"}},"id":2171,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7073:13:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"nodeType":"VariableDeclarationStatement","src":"7052:34:8"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2179,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":2175,"name":"name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2169,"src":"7106:4:8","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2174,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7100:5:8","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2173,"name":"bytes","nodeType":"ElementaryTypeName","src":"7100:5:8","typeDescriptions":{}}},"id":2176,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7100:11:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2177,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7112:6:8","memberName":"length","nodeType":"MemberAccess","src":"7100:18:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2178,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7121:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"7100:22:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":2205,"nodeType":"Block","src":"7184:425:8","statements":[{"assignments":[2189],"declarations":[{"constant":false,"id":2189,"mutability":"mutable","name":"hashedName","nameLocation":"7429:10:8","nodeType":"VariableDeclaration","scope":2205,"src":"7421:18:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2188,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7421:7:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":2192,"initialValue":{"expression":{"id":2190,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2164,"src":"7442:1:8","typeDescriptions":{"typeIdentifier":"t_struct$_EIP712Storage_$1947_storage_ptr","typeString":"struct EIP712Upgradeable.EIP712Storage storage pointer"}},"id":2191,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7444:11:8","memberName":"_hashedName","nodeType":"MemberAccess","referencedDeclaration":1939,"src":"7442:13:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"7421:34:8"},{"condition":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":2195,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2193,"name":"hashedName","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2189,"src":"7473:10:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":2194,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7487:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"7473:15:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":2203,"nodeType":"Block","src":"7546:53:8","statements":[{"expression":{"arguments":[{"hexValue":"","id":2200,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7581:2:8","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"id":2199,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"7571:9:8","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":2201,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7571:13:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":2161,"id":2202,"nodeType":"Return","src":"7564:20:8"}]},"id":2204,"nodeType":"IfStatement","src":"7469:130:8","trueBody":{"id":2198,"nodeType":"Block","src":"7490:50:8","statements":[{"expression":{"id":2196,"name":"hashedName","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2189,"src":"7515:10:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":2161,"id":2197,"nodeType":"Return","src":"7508:17:8"}]}}]},"id":2206,"nodeType":"IfStatement","src":"7096:513:8","trueBody":{"id":2187,"nodeType":"Block","src":"7124:54:8","statements":[{"expression":{"arguments":[{"arguments":[{"id":2183,"name":"name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2169,"src":"7161:4:8","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2182,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7155:5:8","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2181,"name":"bytes","nodeType":"ElementaryTypeName","src":"7155:5:8","typeDescriptions":{}}},"id":2184,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7155:11:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2180,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"7145:9:8","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":2185,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7145:22:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":2161,"id":2186,"nodeType":"Return","src":"7138:29:8"}]}}]},"documentation":{"id":2157,"nodeType":"StructuredDocumentation","src":"6719:204:8","text":" @dev The hash of the name parameter for the EIP712 domain.\n NOTE: In previous versions this function was virtual. In this version you should override `_EIP712Name` instead."},"id":2208,"implemented":true,"kind":"function","modifiers":[],"name":"_EIP712NameHash","nameLocation":"6937:15:8","nodeType":"FunctionDefinition","parameters":{"id":2158,"nodeType":"ParameterList","parameters":[],"src":"6952:2:8"},"returnParameters":{"id":2161,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2160,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2208,"src":"6978:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2159,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6978:7:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"6977:9:8"},"scope":2261,"src":"6928:687:8","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":2259,"nodeType":"Block","src":"7898:661:8","statements":[{"assignments":[2216],"declarations":[{"constant":false,"id":2216,"mutability":"mutable","name":"$","nameLocation":"7930:1:8","nodeType":"VariableDeclaration","scope":2259,"src":"7908:23:8","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_EIP712Storage_$1947_storage_ptr","typeString":"struct EIP712Upgradeable.EIP712Storage"},"typeName":{"id":2215,"nodeType":"UserDefinedTypeName","pathNode":{"id":2214,"name":"EIP712Storage","nameLocations":["7908:13:8"],"nodeType":"IdentifierPath","referencedDeclaration":1947,"src":"7908:13:8"},"referencedDeclaration":1947,"src":"7908:13:8","typeDescriptions":{"typeIdentifier":"t_struct$_EIP712Storage_$1947_storage_ptr","typeString":"struct EIP712Upgradeable.EIP712Storage"}},"visibility":"internal"}],"id":2219,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":2217,"name":"_getEIP712Storage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1958,"src":"7934:17:8","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_EIP712Storage_$1947_storage_ptr_$","typeString":"function () pure returns (struct EIP712Upgradeable.EIP712Storage storage pointer)"}},"id":2218,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7934:19:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_EIP712Storage_$1947_storage_ptr","typeString":"struct EIP712Upgradeable.EIP712Storage storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"7908:45:8"},{"assignments":[2221],"declarations":[{"constant":false,"id":2221,"mutability":"mutable","name":"version","nameLocation":"7977:7:8","nodeType":"VariableDeclaration","scope":2259,"src":"7963:21:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2220,"name":"string","nodeType":"ElementaryTypeName","src":"7963:6:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"id":2224,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":2222,"name":"_EIP712Version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2156,"src":"7987:14:8","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_string_memory_ptr_$","typeString":"function () view returns (string memory)"}},"id":2223,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7987:16:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"nodeType":"VariableDeclarationStatement","src":"7963:40:8"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2231,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":2227,"name":"version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2221,"src":"8023:7:8","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2226,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8017:5:8","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2225,"name":"bytes","nodeType":"ElementaryTypeName","src":"8017:5:8","typeDescriptions":{}}},"id":2228,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8017:14:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2229,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8032:6:8","memberName":"length","nodeType":"MemberAccess","src":"8017:21:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2230,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8041:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8017:25:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":2257,"nodeType":"Block","src":"8107:446:8","statements":[{"assignments":[2241],"declarations":[{"constant":false,"id":2241,"mutability":"mutable","name":"hashedVersion","nameLocation":"8361:13:8","nodeType":"VariableDeclaration","scope":2257,"src":"8353:21:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2240,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8353:7:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":2244,"initialValue":{"expression":{"id":2242,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2216,"src":"8377:1:8","typeDescriptions":{"typeIdentifier":"t_struct$_EIP712Storage_$1947_storage_ptr","typeString":"struct EIP712Upgradeable.EIP712Storage storage pointer"}},"id":2243,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8379:14:8","memberName":"_hashedVersion","nodeType":"MemberAccess","referencedDeclaration":1942,"src":"8377:16:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"8353:40:8"},{"condition":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":2247,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2245,"name":"hashedVersion","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2241,"src":"8411:13:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":2246,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8428:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8411:18:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":2255,"nodeType":"Block","src":"8490:53:8","statements":[{"expression":{"arguments":[{"hexValue":"","id":2252,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"8525:2:8","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"id":2251,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"8515:9:8","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":2253,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8515:13:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":2213,"id":2254,"nodeType":"Return","src":"8508:20:8"}]},"id":2256,"nodeType":"IfStatement","src":"8407:136:8","trueBody":{"id":2250,"nodeType":"Block","src":"8431:53:8","statements":[{"expression":{"id":2248,"name":"hashedVersion","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2241,"src":"8456:13:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":2213,"id":2249,"nodeType":"Return","src":"8449:20:8"}]}}]},"id":2258,"nodeType":"IfStatement","src":"8013:540:8","trueBody":{"id":2239,"nodeType":"Block","src":"8044:57:8","statements":[{"expression":{"arguments":[{"arguments":[{"id":2235,"name":"version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2221,"src":"8081:7:8","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2234,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8075:5:8","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2233,"name":"bytes","nodeType":"ElementaryTypeName","src":"8075:5:8","typeDescriptions":{}}},"id":2236,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8075:14:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2232,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"8065:9:8","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":2237,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8065:25:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":2213,"id":2238,"nodeType":"Return","src":"8058:32:8"}]}}]},"documentation":{"id":2209,"nodeType":"StructuredDocumentation","src":"7621:210:8","text":" @dev The hash of the version parameter for the EIP712 domain.\n NOTE: In previous versions this function was virtual. In this version you should override `_EIP712Version` instead."},"id":2260,"implemented":true,"kind":"function","modifiers":[],"name":"_EIP712VersionHash","nameLocation":"7845:18:8","nodeType":"FunctionDefinition","parameters":{"id":2210,"nodeType":"ParameterList","parameters":[],"src":"7863:2:8"},"returnParameters":{"id":2213,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2212,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2260,"src":"7889:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2211,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7889:7:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"7888:9:8"},"scope":2261,"src":"7836:723:8","stateMutability":"view","virtual":false,"visibility":"internal"}],"scope":2262,"src":"1845:6716:8","usedErrors":[381,384],"usedEvents":[389,2410]}],"src":"113:8449:8"},"id":8},"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol","exportedSymbols":{"ERC165Upgradeable":[2301],"IERC165":[5327],"Initializable":[632]},"id":2302,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2263,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"114:24:9"},{"absolutePath":"@openzeppelin/contracts/utils/introspection/IERC165.sol","file":"@openzeppelin/contracts/utils/introspection/IERC165.sol","id":2265,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2302,"sourceUnit":5328,"src":"140:80:9","symbolAliases":[{"foreign":{"id":2264,"name":"IERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5327,"src":"148:7:9","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol","file":"../../proxy/utils/Initializable.sol","id":2267,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2302,"sourceUnit":633,"src":"221:66:9","symbolAliases":[{"foreign":{"id":2266,"name":"Initializable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":632,"src":"229:13:9","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":2269,"name":"Initializable","nameLocations":["808:13:9"],"nodeType":"IdentifierPath","referencedDeclaration":632,"src":"808:13:9"},"id":2270,"nodeType":"InheritanceSpecifier","src":"808:13:9"},{"baseName":{"id":2271,"name":"IERC165","nameLocations":["823:7:9"],"nodeType":"IdentifierPath","referencedDeclaration":5327,"src":"823:7:9"},"id":2272,"nodeType":"InheritanceSpecifier","src":"823:7:9"}],"canonicalName":"ERC165Upgradeable","contractDependencies":[],"contractKind":"contract","documentation":{"id":2268,"nodeType":"StructuredDocumentation","src":"289:479:9","text":" @dev Implementation of the {IERC165} interface.\n Contracts that want to implement ERC-165 should inherit from this contract and override {supportsInterface} to check\n for the additional interface id that will be supported. For example:\n ```solidity\n function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n }\n ```"},"fullyImplemented":true,"id":2301,"linearizedBaseContracts":[2301,5327,632],"name":"ERC165Upgradeable","nameLocation":"787:17:9","nodeType":"ContractDefinition","nodes":[{"body":{"id":2277,"nodeType":"Block","src":"888:7:9","statements":[]},"id":2278,"implemented":true,"kind":"function","modifiers":[{"id":2275,"kind":"modifierInvocation","modifierName":{"id":2274,"name":"onlyInitializing","nameLocations":["871:16:9"],"nodeType":"IdentifierPath","referencedDeclaration":527,"src":"871:16:9"},"nodeType":"ModifierInvocation","src":"871:16:9"}],"name":"__ERC165_init","nameLocation":"846:13:9","nodeType":"FunctionDefinition","parameters":{"id":2273,"nodeType":"ParameterList","parameters":[],"src":"859:2:9"},"returnParameters":{"id":2276,"nodeType":"ParameterList","parameters":[],"src":"888:0:9"},"scope":2301,"src":"837:58:9","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2283,"nodeType":"Block","src":"962:7:9","statements":[]},"id":2284,"implemented":true,"kind":"function","modifiers":[{"id":2281,"kind":"modifierInvocation","modifierName":{"id":2280,"name":"onlyInitializing","nameLocations":["945:16:9"],"nodeType":"IdentifierPath","referencedDeclaration":527,"src":"945:16:9"},"nodeType":"ModifierInvocation","src":"945:16:9"}],"name":"__ERC165_init_unchained","nameLocation":"910:23:9","nodeType":"FunctionDefinition","parameters":{"id":2279,"nodeType":"ParameterList","parameters":[],"src":"933:2:9"},"returnParameters":{"id":2282,"nodeType":"ParameterList","parameters":[],"src":"962:0:9"},"scope":2301,"src":"901:68:9","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"baseFunctions":[5326],"body":{"id":2299,"nodeType":"Block","src":"1084:64:9","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":2297,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2292,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2287,"src":"1101:11:9","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":2294,"name":"IERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5327,"src":"1121:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC165_$5327_$","typeString":"type(contract IERC165)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_contract$_IERC165_$5327_$","typeString":"type(contract IERC165)"}],"id":2293,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"1116:4:9","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":2295,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1116:13:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_contract$_IERC165_$5327","typeString":"type(contract IERC165)"}},"id":2296,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1130:11:9","memberName":"interfaceId","nodeType":"MemberAccess","src":"1116:25:9","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"1101:40:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":2291,"id":2298,"nodeType":"Return","src":"1094:47:9"}]},"documentation":{"id":2285,"nodeType":"StructuredDocumentation","src":"974:23:9","text":"@inheritdoc IERC165"},"functionSelector":"01ffc9a7","id":2300,"implemented":true,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"1011:17:9","nodeType":"FunctionDefinition","parameters":{"id":2288,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2287,"mutability":"mutable","name":"interfaceId","nameLocation":"1036:11:9","nodeType":"VariableDeclaration","scope":2300,"src":"1029:18:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":2286,"name":"bytes4","nodeType":"ElementaryTypeName","src":"1029:6:9","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"1028:20:9"},"returnParameters":{"id":2291,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2290,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2300,"src":"1078:4:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2289,"name":"bool","nodeType":"ElementaryTypeName","src":"1078:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1077:6:9"},"scope":2301,"src":"1002:146:9","stateMutability":"view","virtual":true,"visibility":"public"}],"scope":2302,"src":"769:381:9","usedErrors":[381,384],"usedEvents":[389]}],"src":"114:1037:9"},"id":9},"@openzeppelin/contracts/access/IAccessControl.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/access/IAccessControl.sol","exportedSymbols":{"IAccessControl":[2384]},"id":2385,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2303,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"112:24:10"},{"abstract":false,"baseContracts":[],"canonicalName":"IAccessControl","contractDependencies":[],"contractKind":"interface","documentation":{"id":2304,"nodeType":"StructuredDocumentation","src":"140:92:10","text":" @dev External interface of AccessControl declared to support ERC-165 detection."},"fullyImplemented":false,"id":2384,"linearizedBaseContracts":[2384],"name":"IAccessControl","nameLocation":"244:14:10","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":2305,"nodeType":"StructuredDocumentation","src":"266:58:10","text":" @dev The `account` is missing a role."},"errorSelector":"e2517d3f","id":2311,"name":"AccessControlUnauthorizedAccount","nameLocation":"336:32:10","nodeType":"ErrorDefinition","parameters":{"id":2310,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2307,"mutability":"mutable","name":"account","nameLocation":"377:7:10","nodeType":"VariableDeclaration","scope":2311,"src":"369:15:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2306,"name":"address","nodeType":"ElementaryTypeName","src":"369:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2309,"mutability":"mutable","name":"neededRole","nameLocation":"394:10:10","nodeType":"VariableDeclaration","scope":2311,"src":"386:18:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2308,"name":"bytes32","nodeType":"ElementaryTypeName","src":"386:7:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"368:37:10"},"src":"330:76:10"},{"documentation":{"id":2312,"nodeType":"StructuredDocumentation","src":"414:152:10","text":" @dev The caller of a function is not the expected one.\n NOTE: Don't confuse with {AccessControlUnauthorizedAccount}."},"errorSelector":"6697b232","id":2314,"name":"AccessControlBadConfirmation","nameLocation":"578:28:10","nodeType":"ErrorDefinition","parameters":{"id":2313,"nodeType":"ParameterList","parameters":[],"src":"606:2:10"},"src":"572:37:10"},{"anonymous":false,"documentation":{"id":2315,"nodeType":"StructuredDocumentation","src":"617:259:10","text":" @dev Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole`\n `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite\n {RoleAdminChanged} not being emitted to signal this."},"eventSelector":"bd79b86ffe0ab8e8776151514217cd7cacd52c909f66475c3af44e129f0b00ff","id":2323,"name":"RoleAdminChanged","nameLocation":"888:16:10","nodeType":"EventDefinition","parameters":{"id":2322,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2317,"indexed":true,"mutability":"mutable","name":"role","nameLocation":"921:4:10","nodeType":"VariableDeclaration","scope":2323,"src":"905:20:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2316,"name":"bytes32","nodeType":"ElementaryTypeName","src":"905:7:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2319,"indexed":true,"mutability":"mutable","name":"previousAdminRole","nameLocation":"943:17:10","nodeType":"VariableDeclaration","scope":2323,"src":"927:33:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2318,"name":"bytes32","nodeType":"ElementaryTypeName","src":"927:7:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2321,"indexed":true,"mutability":"mutable","name":"newAdminRole","nameLocation":"978:12:10","nodeType":"VariableDeclaration","scope":2323,"src":"962:28:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2320,"name":"bytes32","nodeType":"ElementaryTypeName","src":"962:7:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"904:87:10"},"src":"882:110:10"},{"anonymous":false,"documentation":{"id":2324,"nodeType":"StructuredDocumentation","src":"1000:300:10","text":" @dev Emitted when `account` is granted `role`.\n `sender` is the account that originated the contract call. This account bears the admin role (for the granted role).\n Expected in cases where the role was granted using the internal {AccessControl-_grantRole}."},"eventSelector":"2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d","id":2332,"name":"RoleGranted","nameLocation":"1312:11:10","nodeType":"EventDefinition","parameters":{"id":2331,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2326,"indexed":true,"mutability":"mutable","name":"role","nameLocation":"1340:4:10","nodeType":"VariableDeclaration","scope":2332,"src":"1324:20:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2325,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1324:7:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2328,"indexed":true,"mutability":"mutable","name":"account","nameLocation":"1362:7:10","nodeType":"VariableDeclaration","scope":2332,"src":"1346:23:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2327,"name":"address","nodeType":"ElementaryTypeName","src":"1346:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2330,"indexed":true,"mutability":"mutable","name":"sender","nameLocation":"1387:6:10","nodeType":"VariableDeclaration","scope":2332,"src":"1371:22:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2329,"name":"address","nodeType":"ElementaryTypeName","src":"1371:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1323:71:10"},"src":"1306:89:10"},{"anonymous":false,"documentation":{"id":2333,"nodeType":"StructuredDocumentation","src":"1403:281:10","text":" @dev Emitted when `account` is revoked `role`.\n `sender` is the account that originated the contract call:\n   - if using `revokeRole`, it is the admin role bearer\n   - if using `renounceRole`, it is the role bearer (i.e. `account`)"},"eventSelector":"f6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b","id":2341,"name":"RoleRevoked","nameLocation":"1696:11:10","nodeType":"EventDefinition","parameters":{"id":2340,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2335,"indexed":true,"mutability":"mutable","name":"role","nameLocation":"1724:4:10","nodeType":"VariableDeclaration","scope":2341,"src":"1708:20:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2334,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1708:7:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2337,"indexed":true,"mutability":"mutable","name":"account","nameLocation":"1746:7:10","nodeType":"VariableDeclaration","scope":2341,"src":"1730:23:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2336,"name":"address","nodeType":"ElementaryTypeName","src":"1730:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2339,"indexed":true,"mutability":"mutable","name":"sender","nameLocation":"1771:6:10","nodeType":"VariableDeclaration","scope":2341,"src":"1755:22:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2338,"name":"address","nodeType":"ElementaryTypeName","src":"1755:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1707:71:10"},"src":"1690:89:10"},{"documentation":{"id":2342,"nodeType":"StructuredDocumentation","src":"1787:78:10","text":" @dev Returns `true` if `account` has been granted `role`."},"functionSelector":"91d14854","id":2351,"implemented":false,"kind":"function","modifiers":[],"name":"hasRole","nameLocation":"1880:7:10","nodeType":"FunctionDefinition","parameters":{"id":2347,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2344,"mutability":"mutable","name":"role","nameLocation":"1896:4:10","nodeType":"VariableDeclaration","scope":2351,"src":"1888:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2343,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1888:7:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2346,"mutability":"mutable","name":"account","nameLocation":"1910:7:10","nodeType":"VariableDeclaration","scope":2351,"src":"1902:15:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2345,"name":"address","nodeType":"ElementaryTypeName","src":"1902:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1887:31:10"},"returnParameters":{"id":2350,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2349,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2351,"src":"1942:4:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2348,"name":"bool","nodeType":"ElementaryTypeName","src":"1942:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1941:6:10"},"scope":2384,"src":"1871:77:10","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":2352,"nodeType":"StructuredDocumentation","src":"1956:189:10","text":" @dev Returns the admin role that controls `role`. See {grantRole} and\n {revokeRole}.\n To change a role's admin, use {AccessControl-_setRoleAdmin}."},"functionSelector":"248a9ca3","id":2359,"implemented":false,"kind":"function","modifiers":[],"name":"getRoleAdmin","nameLocation":"2160:12:10","nodeType":"FunctionDefinition","parameters":{"id":2355,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2354,"mutability":"mutable","name":"role","nameLocation":"2181:4:10","nodeType":"VariableDeclaration","scope":2359,"src":"2173:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2353,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2173:7:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2172:14:10"},"returnParameters":{"id":2358,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2357,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2359,"src":"2210:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2356,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2210:7:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2209:9:10"},"scope":2384,"src":"2151:68:10","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":2360,"nodeType":"StructuredDocumentation","src":"2227:248:10","text":" @dev Grants `role` to `account`.\n If `account` had not been already granted `role`, emits a {RoleGranted}\n event.\n Requirements:\n - the caller must have ``role``'s admin role."},"functionSelector":"2f2ff15d","id":2367,"implemented":false,"kind":"function","modifiers":[],"name":"grantRole","nameLocation":"2490:9:10","nodeType":"FunctionDefinition","parameters":{"id":2365,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2362,"mutability":"mutable","name":"role","nameLocation":"2508:4:10","nodeType":"VariableDeclaration","scope":2367,"src":"2500:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2361,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2500:7:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2364,"mutability":"mutable","name":"account","nameLocation":"2522:7:10","nodeType":"VariableDeclaration","scope":2367,"src":"2514:15:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2363,"name":"address","nodeType":"ElementaryTypeName","src":"2514:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2499:31:10"},"returnParameters":{"id":2366,"nodeType":"ParameterList","parameters":[],"src":"2539:0:10"},"scope":2384,"src":"2481:59:10","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":2368,"nodeType":"StructuredDocumentation","src":"2548:231:10","text":" @dev Revokes `role` from `account`.\n If `account` had been granted `role`, emits a {RoleRevoked} event.\n Requirements:\n - the caller must have ``role``'s admin role."},"functionSelector":"d547741f","id":2375,"implemented":false,"kind":"function","modifiers":[],"name":"revokeRole","nameLocation":"2794:10:10","nodeType":"FunctionDefinition","parameters":{"id":2373,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2370,"mutability":"mutable","name":"role","nameLocation":"2813:4:10","nodeType":"VariableDeclaration","scope":2375,"src":"2805:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2369,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2805:7:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2372,"mutability":"mutable","name":"account","nameLocation":"2827:7:10","nodeType":"VariableDeclaration","scope":2375,"src":"2819:15:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2371,"name":"address","nodeType":"ElementaryTypeName","src":"2819:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2804:31:10"},"returnParameters":{"id":2374,"nodeType":"ParameterList","parameters":[],"src":"2844:0:10"},"scope":2384,"src":"2785:60:10","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":2376,"nodeType":"StructuredDocumentation","src":"2853:504:10","text":" @dev Revokes `role` from the calling account.\n Roles are often managed via {grantRole} and {revokeRole}: this function's\n purpose is to provide a mechanism for accounts to lose their privileges\n if they are compromised (such as when a trusted device is misplaced).\n If the calling account had been granted `role`, emits a {RoleRevoked}\n event.\n Requirements:\n - the caller must be `callerConfirmation`."},"functionSelector":"36568abe","id":2383,"implemented":false,"kind":"function","modifiers":[],"name":"renounceRole","nameLocation":"3372:12:10","nodeType":"FunctionDefinition","parameters":{"id":2381,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2378,"mutability":"mutable","name":"role","nameLocation":"3393:4:10","nodeType":"VariableDeclaration","scope":2383,"src":"3385:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2377,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3385:7:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2380,"mutability":"mutable","name":"callerConfirmation","nameLocation":"3407:18:10","nodeType":"VariableDeclaration","scope":2383,"src":"3399:26:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2379,"name":"address","nodeType":"ElementaryTypeName","src":"3399:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3384:42:10"},"returnParameters":{"id":2382,"nodeType":"ParameterList","parameters":[],"src":"3435:0:10"},"scope":2384,"src":"3363:73:10","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":2385,"src":"234:3205:10","usedErrors":[2311,2314],"usedEvents":[2323,2332,2341]}],"src":"112:3329:10"},"id":10},"@openzeppelin/contracts/interfaces/IERC1967.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/interfaces/IERC1967.sol","exportedSymbols":{"IERC1967":[2405]},"id":2406,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2386,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"110:24:11"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC1967","contractDependencies":[],"contractKind":"interface","documentation":{"id":2387,"nodeType":"StructuredDocumentation","src":"138:103:11","text":" @dev ERC-1967: Proxy Storage Slots. This interface contains the events defined in the ERC."},"fullyImplemented":true,"id":2405,"linearizedBaseContracts":[2405],"name":"IERC1967","nameLocation":"253:8:11","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":2388,"nodeType":"StructuredDocumentation","src":"269:70:11","text":" @dev Emitted when the implementation is upgraded."},"eventSelector":"bc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b","id":2392,"name":"Upgraded","nameLocation":"351:8:11","nodeType":"EventDefinition","parameters":{"id":2391,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2390,"indexed":true,"mutability":"mutable","name":"implementation","nameLocation":"376:14:11","nodeType":"VariableDeclaration","scope":2392,"src":"360:30:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2389,"name":"address","nodeType":"ElementaryTypeName","src":"360:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"359:32:11"},"src":"345:47:11"},{"anonymous":false,"documentation":{"id":2393,"nodeType":"StructuredDocumentation","src":"400:69:11","text":" @dev Emitted when the admin account has changed."},"eventSelector":"7e644d79422f17c01e4894b5f4f588d331ebfa28653d42ae832dc59e38c9798f","id":2399,"name":"AdminChanged","nameLocation":"481:12:11","nodeType":"EventDefinition","parameters":{"id":2398,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2395,"indexed":false,"mutability":"mutable","name":"previousAdmin","nameLocation":"502:13:11","nodeType":"VariableDeclaration","scope":2399,"src":"494:21:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2394,"name":"address","nodeType":"ElementaryTypeName","src":"494:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2397,"indexed":false,"mutability":"mutable","name":"newAdmin","nameLocation":"525:8:11","nodeType":"VariableDeclaration","scope":2399,"src":"517:16:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2396,"name":"address","nodeType":"ElementaryTypeName","src":"517:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"493:41:11"},"src":"475:60:11"},{"anonymous":false,"documentation":{"id":2400,"nodeType":"StructuredDocumentation","src":"543:61:11","text":" @dev Emitted when the beacon is changed."},"eventSelector":"1cf3b03a6cf19fa2baba4df148e9dcabedea7f8a5c07840e207e5c089be95d3e","id":2404,"name":"BeaconUpgraded","nameLocation":"616:14:11","nodeType":"EventDefinition","parameters":{"id":2403,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2402,"indexed":true,"mutability":"mutable","name":"beacon","nameLocation":"647:6:11","nodeType":"VariableDeclaration","scope":2404,"src":"631:22:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2401,"name":"address","nodeType":"ElementaryTypeName","src":"631:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"630:24:11"},"src":"610:45:11"}],"scope":2406,"src":"243:415:11","usedErrors":[],"usedEvents":[2392,2399,2404]}],"src":"110:550:11"},"id":11},"@openzeppelin/contracts/interfaces/IERC5267.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/interfaces/IERC5267.sol","exportedSymbols":{"IERC5267":[2430]},"id":2431,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2407,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"110:24:12"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC5267","contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":2430,"linearizedBaseContracts":[2430],"name":"IERC5267","nameLocation":"148:8:12","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":2408,"nodeType":"StructuredDocumentation","src":"164:86:12","text":" @dev MAY be emitted to signal that the domain could have changed."},"eventSelector":"0a6387c9ea3628b88a633bb4f3b151770f70085117a15f9bf3787cda53f13d31","id":2410,"name":"EIP712DomainChanged","nameLocation":"262:19:12","nodeType":"EventDefinition","parameters":{"id":2409,"nodeType":"ParameterList","parameters":[],"src":"281:2:12"},"src":"256:28:12"},{"documentation":{"id":2411,"nodeType":"StructuredDocumentation","src":"292:143:12","text":" @dev returns the fields and values that describe the domain separator used by this contract for EIP-712\n signature."},"functionSelector":"84b0196e","id":2429,"implemented":false,"kind":"function","modifiers":[],"name":"eip712Domain","nameLocation":"450:12:12","nodeType":"FunctionDefinition","parameters":{"id":2412,"nodeType":"ParameterList","parameters":[],"src":"462:2:12"},"returnParameters":{"id":2428,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2414,"mutability":"mutable","name":"fields","nameLocation":"536:6:12","nodeType":"VariableDeclaration","scope":2429,"src":"529:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"typeName":{"id":2413,"name":"bytes1","nodeType":"ElementaryTypeName","src":"529:6:12","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"visibility":"internal"},{"constant":false,"id":2416,"mutability":"mutable","name":"name","nameLocation":"571:4:12","nodeType":"VariableDeclaration","scope":2429,"src":"557:18:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2415,"name":"string","nodeType":"ElementaryTypeName","src":"557:6:12","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2418,"mutability":"mutable","name":"version","nameLocation":"604:7:12","nodeType":"VariableDeclaration","scope":2429,"src":"590:21:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2417,"name":"string","nodeType":"ElementaryTypeName","src":"590:6:12","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2420,"mutability":"mutable","name":"chainId","nameLocation":"634:7:12","nodeType":"VariableDeclaration","scope":2429,"src":"626:15:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2419,"name":"uint256","nodeType":"ElementaryTypeName","src":"626:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2422,"mutability":"mutable","name":"verifyingContract","nameLocation":"664:17:12","nodeType":"VariableDeclaration","scope":2429,"src":"656:25:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2421,"name":"address","nodeType":"ElementaryTypeName","src":"656:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2424,"mutability":"mutable","name":"salt","nameLocation":"704:4:12","nodeType":"VariableDeclaration","scope":2429,"src":"696:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2423,"name":"bytes32","nodeType":"ElementaryTypeName","src":"696:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2427,"mutability":"mutable","name":"extensions","nameLocation":"740:10:12","nodeType":"VariableDeclaration","scope":2429,"src":"723:27:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":2425,"name":"uint256","nodeType":"ElementaryTypeName","src":"723:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2426,"nodeType":"ArrayTypeName","src":"723:9:12","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"514:247:12"},"scope":2430,"src":"441:321:12","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":2431,"src":"138:627:12","usedErrors":[],"usedEvents":[2410]}],"src":"110:657:12"},"id":12},"@openzeppelin/contracts/interfaces/draft-IERC1822.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/interfaces/draft-IERC1822.sol","exportedSymbols":{"IERC1822Proxiable":[2440]},"id":2441,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2432,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"116:24:13"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC1822Proxiable","contractDependencies":[],"contractKind":"interface","documentation":{"id":2433,"nodeType":"StructuredDocumentation","src":"144:207:13","text":" @dev ERC-1822: Universal Upgradeable Proxy Standard (UUPS) documents a method for upgradeability through a simplified\n proxy whose upgrades are fully controlled by the current implementation."},"fullyImplemented":false,"id":2440,"linearizedBaseContracts":[2440],"name":"IERC1822Proxiable","nameLocation":"363:17:13","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":2434,"nodeType":"StructuredDocumentation","src":"388:445:13","text":" @dev Returns the storage slot that the proxiable contract assumes is being used to store the implementation\n address.\n IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks\n bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this\n function revert if invoked through a proxy."},"functionSelector":"52d1902d","id":2439,"implemented":false,"kind":"function","modifiers":[],"name":"proxiableUUID","nameLocation":"848:13:13","nodeType":"FunctionDefinition","parameters":{"id":2435,"nodeType":"ParameterList","parameters":[],"src":"861:2:13"},"returnParameters":{"id":2438,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2437,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2439,"src":"887:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2436,"name":"bytes32","nodeType":"ElementaryTypeName","src":"887:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"886:9:13"},"scope":2440,"src":"839:57:13","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":2441,"src":"353:546:13","usedErrors":[],"usedEvents":[]}],"src":"116:785:13"},"id":13},"@openzeppelin/contracts/interfaces/draft-IERC6093.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/interfaces/draft-IERC6093.sol","exportedSymbols":{"IERC1155Errors":[2577],"IERC20Errors":[2482],"IERC721Errors":[2530]},"id":2578,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2442,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"114:24:14"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC20Errors","contractDependencies":[],"contractKind":"interface","documentation":{"id":2443,"nodeType":"StructuredDocumentation","src":"142:144:14","text":" @dev Standard ERC-20 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens."},"fullyImplemented":true,"id":2482,"linearizedBaseContracts":[2482],"name":"IERC20Errors","nameLocation":"298:12:14","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":2444,"nodeType":"StructuredDocumentation","src":"318:314:14","text":" @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer."},"errorSelector":"e450d38c","id":2452,"name":"ERC20InsufficientBalance","nameLocation":"644:24:14","nodeType":"ErrorDefinition","parameters":{"id":2451,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2446,"mutability":"mutable","name":"sender","nameLocation":"677:6:14","nodeType":"VariableDeclaration","scope":2452,"src":"669:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2445,"name":"address","nodeType":"ElementaryTypeName","src":"669:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2448,"mutability":"mutable","name":"balance","nameLocation":"693:7:14","nodeType":"VariableDeclaration","scope":2452,"src":"685:15:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2447,"name":"uint256","nodeType":"ElementaryTypeName","src":"685:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2450,"mutability":"mutable","name":"needed","nameLocation":"710:6:14","nodeType":"VariableDeclaration","scope":2452,"src":"702:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2449,"name":"uint256","nodeType":"ElementaryTypeName","src":"702:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"668:49:14"},"src":"638:80:14"},{"documentation":{"id":2453,"nodeType":"StructuredDocumentation","src":"726:155:14","text":" @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."},"errorSelector":"96c6fd1e","id":2457,"name":"ERC20InvalidSender","nameLocation":"893:18:14","nodeType":"ErrorDefinition","parameters":{"id":2456,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2455,"mutability":"mutable","name":"sender","nameLocation":"920:6:14","nodeType":"VariableDeclaration","scope":2457,"src":"912:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2454,"name":"address","nodeType":"ElementaryTypeName","src":"912:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"911:16:14"},"src":"887:41:14"},{"documentation":{"id":2458,"nodeType":"StructuredDocumentation","src":"936:162:14","text":" @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."},"errorSelector":"ec442f05","id":2462,"name":"ERC20InvalidReceiver","nameLocation":"1110:20:14","nodeType":"ErrorDefinition","parameters":{"id":2461,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2460,"mutability":"mutable","name":"receiver","nameLocation":"1139:8:14","nodeType":"VariableDeclaration","scope":2462,"src":"1131:16:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2459,"name":"address","nodeType":"ElementaryTypeName","src":"1131:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1130:18:14"},"src":"1104:45:14"},{"documentation":{"id":2463,"nodeType":"StructuredDocumentation","src":"1157:350:14","text":" @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n @param spender Address that may be allowed to operate on tokens without being their owner.\n @param allowance Amount of tokens a `spender` is allowed to operate with.\n @param needed Minimum amount required to perform a transfer."},"errorSelector":"fb8f41b2","id":2471,"name":"ERC20InsufficientAllowance","nameLocation":"1519:26:14","nodeType":"ErrorDefinition","parameters":{"id":2470,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2465,"mutability":"mutable","name":"spender","nameLocation":"1554:7:14","nodeType":"VariableDeclaration","scope":2471,"src":"1546:15:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2464,"name":"address","nodeType":"ElementaryTypeName","src":"1546:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2467,"mutability":"mutable","name":"allowance","nameLocation":"1571:9:14","nodeType":"VariableDeclaration","scope":2471,"src":"1563:17:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2466,"name":"uint256","nodeType":"ElementaryTypeName","src":"1563:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2469,"mutability":"mutable","name":"needed","nameLocation":"1590:6:14","nodeType":"VariableDeclaration","scope":2471,"src":"1582:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2468,"name":"uint256","nodeType":"ElementaryTypeName","src":"1582:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1545:52:14"},"src":"1513:85:14"},{"documentation":{"id":2472,"nodeType":"StructuredDocumentation","src":"1606:177:14","text":" @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."},"errorSelector":"e602df05","id":2476,"name":"ERC20InvalidApprover","nameLocation":"1795:20:14","nodeType":"ErrorDefinition","parameters":{"id":2475,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2474,"mutability":"mutable","name":"approver","nameLocation":"1824:8:14","nodeType":"VariableDeclaration","scope":2476,"src":"1816:16:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2473,"name":"address","nodeType":"ElementaryTypeName","src":"1816:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1815:18:14"},"src":"1789:45:14"},{"documentation":{"id":2477,"nodeType":"StructuredDocumentation","src":"1842:198:14","text":" @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n @param spender Address that may be allowed to operate on tokens without being their owner."},"errorSelector":"94280d62","id":2481,"name":"ERC20InvalidSpender","nameLocation":"2052:19:14","nodeType":"ErrorDefinition","parameters":{"id":2480,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2479,"mutability":"mutable","name":"spender","nameLocation":"2080:7:14","nodeType":"VariableDeclaration","scope":2481,"src":"2072:15:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2478,"name":"address","nodeType":"ElementaryTypeName","src":"2072:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2071:17:14"},"src":"2046:43:14"}],"scope":2578,"src":"288:1804:14","usedErrors":[2452,2457,2462,2471,2476,2481],"usedEvents":[]},{"abstract":false,"baseContracts":[],"canonicalName":"IERC721Errors","contractDependencies":[],"contractKind":"interface","documentation":{"id":2483,"nodeType":"StructuredDocumentation","src":"2096:146:14","text":" @dev Standard ERC-721 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens."},"fullyImplemented":true,"id":2530,"linearizedBaseContracts":[2530],"name":"IERC721Errors","nameLocation":"2254:13:14","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":2484,"nodeType":"StructuredDocumentation","src":"2275:223:14","text":" @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20.\n Used in balance queries.\n @param owner Address of the current owner of a token."},"errorSelector":"89c62b64","id":2488,"name":"ERC721InvalidOwner","nameLocation":"2510:18:14","nodeType":"ErrorDefinition","parameters":{"id":2487,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2486,"mutability":"mutable","name":"owner","nameLocation":"2537:5:14","nodeType":"VariableDeclaration","scope":2488,"src":"2529:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2485,"name":"address","nodeType":"ElementaryTypeName","src":"2529:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2528:15:14"},"src":"2504:40:14"},{"documentation":{"id":2489,"nodeType":"StructuredDocumentation","src":"2552:135:14","text":" @dev Indicates a `tokenId` whose `owner` is the zero address.\n @param tokenId Identifier number of a token."},"errorSelector":"7e273289","id":2493,"name":"ERC721NonexistentToken","nameLocation":"2699:22:14","nodeType":"ErrorDefinition","parameters":{"id":2492,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2491,"mutability":"mutable","name":"tokenId","nameLocation":"2730:7:14","nodeType":"VariableDeclaration","scope":2493,"src":"2722:15:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2490,"name":"uint256","nodeType":"ElementaryTypeName","src":"2722:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2721:17:14"},"src":"2693:46:14"},{"documentation":{"id":2494,"nodeType":"StructuredDocumentation","src":"2747:294:14","text":" @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param tokenId Identifier number of a token.\n @param owner Address of the current owner of a token."},"errorSelector":"64283d7b","id":2502,"name":"ERC721IncorrectOwner","nameLocation":"3053:20:14","nodeType":"ErrorDefinition","parameters":{"id":2501,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2496,"mutability":"mutable","name":"sender","nameLocation":"3082:6:14","nodeType":"VariableDeclaration","scope":2502,"src":"3074:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2495,"name":"address","nodeType":"ElementaryTypeName","src":"3074:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2498,"mutability":"mutable","name":"tokenId","nameLocation":"3098:7:14","nodeType":"VariableDeclaration","scope":2502,"src":"3090:15:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2497,"name":"uint256","nodeType":"ElementaryTypeName","src":"3090:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2500,"mutability":"mutable","name":"owner","nameLocation":"3115:5:14","nodeType":"VariableDeclaration","scope":2502,"src":"3107:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2499,"name":"address","nodeType":"ElementaryTypeName","src":"3107:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3073:48:14"},"src":"3047:75:14"},{"documentation":{"id":2503,"nodeType":"StructuredDocumentation","src":"3130:155:14","text":" @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."},"errorSelector":"73c6ac6e","id":2507,"name":"ERC721InvalidSender","nameLocation":"3297:19:14","nodeType":"ErrorDefinition","parameters":{"id":2506,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2505,"mutability":"mutable","name":"sender","nameLocation":"3325:6:14","nodeType":"VariableDeclaration","scope":2507,"src":"3317:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2504,"name":"address","nodeType":"ElementaryTypeName","src":"3317:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3316:16:14"},"src":"3291:42:14"},{"documentation":{"id":2508,"nodeType":"StructuredDocumentation","src":"3341:162:14","text":" @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."},"errorSelector":"64a0ae92","id":2512,"name":"ERC721InvalidReceiver","nameLocation":"3515:21:14","nodeType":"ErrorDefinition","parameters":{"id":2511,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2510,"mutability":"mutable","name":"receiver","nameLocation":"3545:8:14","nodeType":"VariableDeclaration","scope":2512,"src":"3537:16:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2509,"name":"address","nodeType":"ElementaryTypeName","src":"3537:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3536:18:14"},"src":"3509:46:14"},{"documentation":{"id":2513,"nodeType":"StructuredDocumentation","src":"3563:251:14","text":" @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param tokenId Identifier number of a token."},"errorSelector":"177e802f","id":2519,"name":"ERC721InsufficientApproval","nameLocation":"3826:26:14","nodeType":"ErrorDefinition","parameters":{"id":2518,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2515,"mutability":"mutable","name":"operator","nameLocation":"3861:8:14","nodeType":"VariableDeclaration","scope":2519,"src":"3853:16:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2514,"name":"address","nodeType":"ElementaryTypeName","src":"3853:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2517,"mutability":"mutable","name":"tokenId","nameLocation":"3879:7:14","nodeType":"VariableDeclaration","scope":2519,"src":"3871:15:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2516,"name":"uint256","nodeType":"ElementaryTypeName","src":"3871:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3852:35:14"},"src":"3820:68:14"},{"documentation":{"id":2520,"nodeType":"StructuredDocumentation","src":"3896:177:14","text":" @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."},"errorSelector":"a9fbf51f","id":2524,"name":"ERC721InvalidApprover","nameLocation":"4085:21:14","nodeType":"ErrorDefinition","parameters":{"id":2523,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2522,"mutability":"mutable","name":"approver","nameLocation":"4115:8:14","nodeType":"VariableDeclaration","scope":2524,"src":"4107:16:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2521,"name":"address","nodeType":"ElementaryTypeName","src":"4107:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4106:18:14"},"src":"4079:46:14"},{"documentation":{"id":2525,"nodeType":"StructuredDocumentation","src":"4133:200:14","text":" @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."},"errorSelector":"5b08ba18","id":2529,"name":"ERC721InvalidOperator","nameLocation":"4345:21:14","nodeType":"ErrorDefinition","parameters":{"id":2528,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2527,"mutability":"mutable","name":"operator","nameLocation":"4375:8:14","nodeType":"VariableDeclaration","scope":2529,"src":"4367:16:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2526,"name":"address","nodeType":"ElementaryTypeName","src":"4367:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4366:18:14"},"src":"4339:46:14"}],"scope":2578,"src":"2244:2144:14","usedErrors":[2488,2493,2502,2507,2512,2519,2524,2529],"usedEvents":[]},{"abstract":false,"baseContracts":[],"canonicalName":"IERC1155Errors","contractDependencies":[],"contractKind":"interface","documentation":{"id":2531,"nodeType":"StructuredDocumentation","src":"4392:148:14","text":" @dev Standard ERC-1155 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens."},"fullyImplemented":true,"id":2577,"linearizedBaseContracts":[2577],"name":"IERC1155Errors","nameLocation":"4552:14:14","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":2532,"nodeType":"StructuredDocumentation","src":"4574:367:14","text":" @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer.\n @param tokenId Identifier number of a token."},"errorSelector":"03dee4c5","id":2542,"name":"ERC1155InsufficientBalance","nameLocation":"4953:26:14","nodeType":"ErrorDefinition","parameters":{"id":2541,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2534,"mutability":"mutable","name":"sender","nameLocation":"4988:6:14","nodeType":"VariableDeclaration","scope":2542,"src":"4980:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2533,"name":"address","nodeType":"ElementaryTypeName","src":"4980:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2536,"mutability":"mutable","name":"balance","nameLocation":"5004:7:14","nodeType":"VariableDeclaration","scope":2542,"src":"4996:15:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2535,"name":"uint256","nodeType":"ElementaryTypeName","src":"4996:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2538,"mutability":"mutable","name":"needed","nameLocation":"5021:6:14","nodeType":"VariableDeclaration","scope":2542,"src":"5013:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2537,"name":"uint256","nodeType":"ElementaryTypeName","src":"5013:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2540,"mutability":"mutable","name":"tokenId","nameLocation":"5037:7:14","nodeType":"VariableDeclaration","scope":2542,"src":"5029:15:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2539,"name":"uint256","nodeType":"ElementaryTypeName","src":"5029:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4979:66:14"},"src":"4947:99:14"},{"documentation":{"id":2543,"nodeType":"StructuredDocumentation","src":"5054:155:14","text":" @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."},"errorSelector":"01a83514","id":2547,"name":"ERC1155InvalidSender","nameLocation":"5221:20:14","nodeType":"ErrorDefinition","parameters":{"id":2546,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2545,"mutability":"mutable","name":"sender","nameLocation":"5250:6:14","nodeType":"VariableDeclaration","scope":2547,"src":"5242:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2544,"name":"address","nodeType":"ElementaryTypeName","src":"5242:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5241:16:14"},"src":"5215:43:14"},{"documentation":{"id":2548,"nodeType":"StructuredDocumentation","src":"5266:162:14","text":" @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."},"errorSelector":"57f447ce","id":2552,"name":"ERC1155InvalidReceiver","nameLocation":"5440:22:14","nodeType":"ErrorDefinition","parameters":{"id":2551,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2550,"mutability":"mutable","name":"receiver","nameLocation":"5471:8:14","nodeType":"VariableDeclaration","scope":2552,"src":"5463:16:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2549,"name":"address","nodeType":"ElementaryTypeName","src":"5463:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5462:18:14"},"src":"5434:47:14"},{"documentation":{"id":2553,"nodeType":"StructuredDocumentation","src":"5489:260:14","text":" @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param owner Address of the current owner of a token."},"errorSelector":"e237d922","id":2559,"name":"ERC1155MissingApprovalForAll","nameLocation":"5761:28:14","nodeType":"ErrorDefinition","parameters":{"id":2558,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2555,"mutability":"mutable","name":"operator","nameLocation":"5798:8:14","nodeType":"VariableDeclaration","scope":2559,"src":"5790:16:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2554,"name":"address","nodeType":"ElementaryTypeName","src":"5790:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2557,"mutability":"mutable","name":"owner","nameLocation":"5816:5:14","nodeType":"VariableDeclaration","scope":2559,"src":"5808:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2556,"name":"address","nodeType":"ElementaryTypeName","src":"5808:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5789:33:14"},"src":"5755:68:14"},{"documentation":{"id":2560,"nodeType":"StructuredDocumentation","src":"5831:177:14","text":" @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."},"errorSelector":"3e31884e","id":2564,"name":"ERC1155InvalidApprover","nameLocation":"6020:22:14","nodeType":"ErrorDefinition","parameters":{"id":2563,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2562,"mutability":"mutable","name":"approver","nameLocation":"6051:8:14","nodeType":"VariableDeclaration","scope":2564,"src":"6043:16:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2561,"name":"address","nodeType":"ElementaryTypeName","src":"6043:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6042:18:14"},"src":"6014:47:14"},{"documentation":{"id":2565,"nodeType":"StructuredDocumentation","src":"6069:200:14","text":" @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."},"errorSelector":"ced3e100","id":2569,"name":"ERC1155InvalidOperator","nameLocation":"6281:22:14","nodeType":"ErrorDefinition","parameters":{"id":2568,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2567,"mutability":"mutable","name":"operator","nameLocation":"6312:8:14","nodeType":"VariableDeclaration","scope":2569,"src":"6304:16:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2566,"name":"address","nodeType":"ElementaryTypeName","src":"6304:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6303:18:14"},"src":"6275:47:14"},{"documentation":{"id":2570,"nodeType":"StructuredDocumentation","src":"6330:285:14","text":" @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n Used in batch transfers.\n @param idsLength Length of the array of token identifiers\n @param valuesLength Length of the array of token amounts"},"errorSelector":"5b059991","id":2576,"name":"ERC1155InvalidArrayLength","nameLocation":"6627:25:14","nodeType":"ErrorDefinition","parameters":{"id":2575,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2572,"mutability":"mutable","name":"idsLength","nameLocation":"6661:9:14","nodeType":"VariableDeclaration","scope":2576,"src":"6653:17:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2571,"name":"uint256","nodeType":"ElementaryTypeName","src":"6653:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2574,"mutability":"mutable","name":"valuesLength","nameLocation":"6680:12:14","nodeType":"VariableDeclaration","scope":2576,"src":"6672:20:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2573,"name":"uint256","nodeType":"ElementaryTypeName","src":"6672:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6652:41:14"},"src":"6621:73:14"}],"scope":2578,"src":"4542:2155:14","usedErrors":[2542,2547,2552,2559,2564,2569,2576],"usedEvents":[]}],"src":"114:6585:14"},"id":14},"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol","exportedSymbols":{"Address":[3281],"ERC1967Utils":[2871],"IBeacon":[2881],"IERC1967":[2405],"StorageSlot":[3479]},"id":2872,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2579,"literals":["solidity","^","0.8",".22"],"nodeType":"PragmaDirective","src":"117:24:15"},{"absolutePath":"@openzeppelin/contracts/proxy/beacon/IBeacon.sol","file":"../beacon/IBeacon.sol","id":2581,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2872,"sourceUnit":2882,"src":"145:46:15","symbolAliases":[{"foreign":{"id":2580,"name":"IBeacon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2881,"src":"153:7:15","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/interfaces/IERC1967.sol","file":"../../interfaces/IERC1967.sol","id":2583,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2872,"sourceUnit":2406,"src":"193:55:15","symbolAliases":[{"foreign":{"id":2582,"name":"IERC1967","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2405,"src":"201:8:15","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Address.sol","file":"../../utils/Address.sol","id":2585,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2872,"sourceUnit":3282,"src":"250:48:15","symbolAliases":[{"foreign":{"id":2584,"name":"Address","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3281,"src":"258:7:15","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/StorageSlot.sol","file":"../../utils/StorageSlot.sol","id":2587,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2872,"sourceUnit":3480,"src":"300:56:15","symbolAliases":[{"foreign":{"id":2586,"name":"StorageSlot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3479,"src":"308:11:15","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"ERC1967Utils","contractDependencies":[],"contractKind":"library","documentation":{"id":2588,"nodeType":"StructuredDocumentation","src":"360:148:15","text":" @dev This library provides getters and event emitting update functions for\n https://eips.ethereum.org/EIPS/eip-1967[ERC-1967] slots."},"fullyImplemented":true,"id":2871,"linearizedBaseContracts":[2871],"name":"ERC1967Utils","nameLocation":"518:12:15","nodeType":"ContractDefinition","nodes":[{"constant":true,"documentation":{"id":2589,"nodeType":"StructuredDocumentation","src":"538:173:15","text":" @dev Storage slot with the address of the current implementation.\n This is the keccak-256 hash of \"eip1967.proxy.implementation\" subtracted by 1."},"id":2592,"mutability":"constant","name":"IMPLEMENTATION_SLOT","nameLocation":"809:19:15","nodeType":"VariableDeclaration","scope":2871,"src":"783:114:15","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2590,"name":"bytes32","nodeType":"ElementaryTypeName","src":"783:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"hexValue":"307833363038393461313362613161333231303636376338323834393264623938646361336532303736636333373335613932306133636135303564333832626263","id":2591,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"831:66:15","typeDescriptions":{"typeIdentifier":"t_rational_24440054405305269366569402256811496959409073762505157381672968839269610695612_by_1","typeString":"int_const 2444...(69 digits omitted)...5612"},"value":"0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc"},"visibility":"internal"},{"documentation":{"id":2593,"nodeType":"StructuredDocumentation","src":"906:71:15","text":" @dev The `implementation` of the proxy is invalid."},"errorSelector":"4c9c8ce3","id":2597,"name":"ERC1967InvalidImplementation","nameLocation":"989:28:15","nodeType":"ErrorDefinition","parameters":{"id":2596,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2595,"mutability":"mutable","name":"implementation","nameLocation":"1026:14:15","nodeType":"VariableDeclaration","scope":2597,"src":"1018:22:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2594,"name":"address","nodeType":"ElementaryTypeName","src":"1018:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1017:24:15"},"src":"983:59:15"},{"documentation":{"id":2598,"nodeType":"StructuredDocumentation","src":"1050:62:15","text":" @dev The `admin` of the proxy is invalid."},"errorSelector":"62e77ba2","id":2602,"name":"ERC1967InvalidAdmin","nameLocation":"1124:19:15","nodeType":"ErrorDefinition","parameters":{"id":2601,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2600,"mutability":"mutable","name":"admin","nameLocation":"1152:5:15","nodeType":"VariableDeclaration","scope":2602,"src":"1144:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2599,"name":"address","nodeType":"ElementaryTypeName","src":"1144:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1143:15:15"},"src":"1118:41:15"},{"documentation":{"id":2603,"nodeType":"StructuredDocumentation","src":"1167:63:15","text":" @dev The `beacon` of the proxy is invalid."},"errorSelector":"64ced0ec","id":2607,"name":"ERC1967InvalidBeacon","nameLocation":"1242:20:15","nodeType":"ErrorDefinition","parameters":{"id":2606,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2605,"mutability":"mutable","name":"beacon","nameLocation":"1271:6:15","nodeType":"VariableDeclaration","scope":2607,"src":"1263:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2604,"name":"address","nodeType":"ElementaryTypeName","src":"1263:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1262:16:15"},"src":"1236:43:15"},{"documentation":{"id":2608,"nodeType":"StructuredDocumentation","src":"1287:84:15","text":" @dev An upgrade function sees `msg.value > 0` that may be lost."},"errorSelector":"b398979f","id":2610,"name":"ERC1967NonPayable","nameLocation":"1383:17:15","nodeType":"ErrorDefinition","parameters":{"id":2609,"nodeType":"ParameterList","parameters":[],"src":"1400:2:15"},"src":"1377:26:15"},{"body":{"id":2622,"nodeType":"Block","src":"1547:79:15","statements":[{"expression":{"expression":{"arguments":[{"id":2618,"name":"IMPLEMENTATION_SLOT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2592,"src":"1592:19:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":2616,"name":"StorageSlot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3479,"src":"1565:11:15","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_StorageSlot_$3479_$","typeString":"type(library StorageSlot)"}},"id":2617,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1577:14:15","memberName":"getAddressSlot","nodeType":"MemberAccess","referencedDeclaration":3390,"src":"1565:26:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$3361_storage_ptr_$","typeString":"function (bytes32) pure returns (struct StorageSlot.AddressSlot storage pointer)"}},"id":2619,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1565:47:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_AddressSlot_$3361_storage_ptr","typeString":"struct StorageSlot.AddressSlot storage pointer"}},"id":2620,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"1613:5:15","memberName":"value","nodeType":"MemberAccess","referencedDeclaration":3360,"src":"1565:53:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":2615,"id":2621,"nodeType":"Return","src":"1558:60:15"}]},"documentation":{"id":2611,"nodeType":"StructuredDocumentation","src":"1411:69:15","text":" @dev Returns the current implementation address."},"id":2623,"implemented":true,"kind":"function","modifiers":[],"name":"getImplementation","nameLocation":"1495:17:15","nodeType":"FunctionDefinition","parameters":{"id":2612,"nodeType":"ParameterList","parameters":[],"src":"1512:2:15"},"returnParameters":{"id":2615,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2614,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2623,"src":"1538:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2613,"name":"address","nodeType":"ElementaryTypeName","src":"1538:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1537:9:15"},"scope":2871,"src":"1486:140:15","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":2649,"nodeType":"Block","src":"1786:223:15","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2633,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":2629,"name":"newImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2626,"src":"1801:17:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2630,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1819:4:15","memberName":"code","nodeType":"MemberAccess","src":"1801:22:15","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2631,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1824:6:15","memberName":"length","nodeType":"MemberAccess","src":"1801:29:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2632,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1834:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1801:34:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2639,"nodeType":"IfStatement","src":"1797:121:15","trueBody":{"id":2638,"nodeType":"Block","src":"1837:81:15","statements":[{"errorCall":{"arguments":[{"id":2635,"name":"newImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2626,"src":"1888:17:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2634,"name":"ERC1967InvalidImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2597,"src":"1859:28:15","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$_t_error_$","typeString":"function (address) pure returns (error)"}},"id":2636,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1859:47:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":2637,"nodeType":"RevertStatement","src":"1852:54:15"}]}},{"expression":{"id":2647,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"arguments":[{"id":2643,"name":"IMPLEMENTATION_SLOT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2592,"src":"1955:19:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":2640,"name":"StorageSlot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3479,"src":"1928:11:15","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_StorageSlot_$3479_$","typeString":"type(library StorageSlot)"}},"id":2642,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1940:14:15","memberName":"getAddressSlot","nodeType":"MemberAccess","referencedDeclaration":3390,"src":"1928:26:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$3361_storage_ptr_$","typeString":"function (bytes32) pure returns (struct StorageSlot.AddressSlot storage pointer)"}},"id":2644,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1928:47:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_AddressSlot_$3361_storage_ptr","typeString":"struct StorageSlot.AddressSlot storage pointer"}},"id":2645,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"1976:5:15","memberName":"value","nodeType":"MemberAccess","referencedDeclaration":3360,"src":"1928:53:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2646,"name":"newImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2626,"src":"1984:17:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1928:73:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2648,"nodeType":"ExpressionStatement","src":"1928:73:15"}]},"documentation":{"id":2624,"nodeType":"StructuredDocumentation","src":"1634:83:15","text":" @dev Stores a new address in the ERC-1967 implementation slot."},"id":2650,"implemented":true,"kind":"function","modifiers":[],"name":"_setImplementation","nameLocation":"1732:18:15","nodeType":"FunctionDefinition","parameters":{"id":2627,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2626,"mutability":"mutable","name":"newImplementation","nameLocation":"1759:17:15","nodeType":"VariableDeclaration","scope":2650,"src":"1751:25:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2625,"name":"address","nodeType":"ElementaryTypeName","src":"1751:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1750:27:15"},"returnParameters":{"id":2628,"nodeType":"ParameterList","parameters":[],"src":"1786:0:15"},"scope":2871,"src":"1723:286:15","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":2685,"nodeType":"Block","src":"2411:272:15","statements":[{"expression":{"arguments":[{"id":2659,"name":"newImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2653,"src":"2441:17:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2658,"name":"_setImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2650,"src":"2422:18:15","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":2660,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2422:37:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2661,"nodeType":"ExpressionStatement","src":"2422:37:15"},{"eventCall":{"arguments":[{"id":2665,"name":"newImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2653,"src":"2493:17:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":2662,"name":"IERC1967","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2405,"src":"2475:8:15","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC1967_$2405_$","typeString":"type(contract IERC1967)"}},"id":2664,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2484:8:15","memberName":"Upgraded","nodeType":"MemberAccess","referencedDeclaration":2392,"src":"2475:17:15","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":2666,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2475:36:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2667,"nodeType":"EmitStatement","src":"2470:41:15"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2671,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2668,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2655,"src":"2528:4:15","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2669,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2533:6:15","memberName":"length","nodeType":"MemberAccess","src":"2528:11:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2670,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2542:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2528:15:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":2683,"nodeType":"Block","src":"2631:45:15","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":2680,"name":"_checkNonPayable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2870,"src":"2646:16:15","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":2681,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2646:18:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2682,"nodeType":"ExpressionStatement","src":"2646:18:15"}]},"id":2684,"nodeType":"IfStatement","src":"2524:152:15","trueBody":{"id":2679,"nodeType":"Block","src":"2545:80:15","statements":[{"expression":{"arguments":[{"id":2675,"name":"newImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2653,"src":"2589:17:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2676,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2655,"src":"2608:4:15","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":2672,"name":"Address","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3281,"src":"2560:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Address_$3281_$","typeString":"type(library Address)"}},"id":2674,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2568:20:15","memberName":"functionDelegateCall","nodeType":"MemberAccess","referencedDeclaration":3198,"src":"2560:28:15","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory) returns (bytes memory)"}},"id":2677,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2560:53:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2678,"nodeType":"ExpressionStatement","src":"2560:53:15"}]}}]},"documentation":{"id":2651,"nodeType":"StructuredDocumentation","src":"2017:307:15","text":" @dev Performs implementation upgrade with additional setup call if data is nonempty.\n This function is payable only if the setup call is performed, otherwise `msg.value` is rejected\n to avoid stuck value in the contract.\n Emits an {IERC1967-Upgraded} event."},"id":2686,"implemented":true,"kind":"function","modifiers":[],"name":"upgradeToAndCall","nameLocation":"2339:16:15","nodeType":"FunctionDefinition","parameters":{"id":2656,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2653,"mutability":"mutable","name":"newImplementation","nameLocation":"2364:17:15","nodeType":"VariableDeclaration","scope":2686,"src":"2356:25:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2652,"name":"address","nodeType":"ElementaryTypeName","src":"2356:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2655,"mutability":"mutable","name":"data","nameLocation":"2396:4:15","nodeType":"VariableDeclaration","scope":2686,"src":"2383:17:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2654,"name":"bytes","nodeType":"ElementaryTypeName","src":"2383:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2355:46:15"},"returnParameters":{"id":2657,"nodeType":"ParameterList","parameters":[],"src":"2411:0:15"},"scope":2871,"src":"2330:353:15","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"constant":true,"documentation":{"id":2687,"nodeType":"StructuredDocumentation","src":"2691:148:15","text":" @dev Storage slot with the admin of the contract.\n This is the keccak-256 hash of \"eip1967.proxy.admin\" subtracted by 1."},"id":2690,"mutability":"constant","name":"ADMIN_SLOT","nameLocation":"2937:10:15","nodeType":"VariableDeclaration","scope":2871,"src":"2911:105:15","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2688,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2911:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"hexValue":"307862353331323736383461353638623331373361653133623966386136303136653234336536336236653865653131373864366137313738353062356436313033","id":2689,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2950:66:15","typeDescriptions":{"typeIdentifier":"t_rational_81955473079516046949633743016697847541294818689821282749996681496272635257091_by_1","typeString":"int_const 8195...(69 digits omitted)...7091"},"value":"0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103"},"visibility":"internal"},{"body":{"id":2702,"nodeType":"Block","src":"3430:70:15","statements":[{"expression":{"expression":{"arguments":[{"id":2698,"name":"ADMIN_SLOT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2690,"src":"3475:10:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":2696,"name":"StorageSlot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3479,"src":"3448:11:15","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_StorageSlot_$3479_$","typeString":"type(library StorageSlot)"}},"id":2697,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3460:14:15","memberName":"getAddressSlot","nodeType":"MemberAccess","referencedDeclaration":3390,"src":"3448:26:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$3361_storage_ptr_$","typeString":"function (bytes32) pure returns (struct StorageSlot.AddressSlot storage pointer)"}},"id":2699,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3448:38:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_AddressSlot_$3361_storage_ptr","typeString":"struct StorageSlot.AddressSlot storage pointer"}},"id":2700,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3487:5:15","memberName":"value","nodeType":"MemberAccess","referencedDeclaration":3360,"src":"3448:44:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":2695,"id":2701,"nodeType":"Return","src":"3441:51:15"}]},"documentation":{"id":2691,"nodeType":"StructuredDocumentation","src":"3025:347:15","text":" @dev Returns the current admin.\n TIP: To get this value clients can read directly from the storage slot shown below (specified by ERC-1967) using\n the https://eth.wiki/json-rpc/API#eth_getstorageat[`eth_getStorageAt`] RPC call.\n `0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103`"},"id":2703,"implemented":true,"kind":"function","modifiers":[],"name":"getAdmin","nameLocation":"3387:8:15","nodeType":"FunctionDefinition","parameters":{"id":2692,"nodeType":"ParameterList","parameters":[],"src":"3395:2:15"},"returnParameters":{"id":2695,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2694,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2703,"src":"3421:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2693,"name":"address","nodeType":"ElementaryTypeName","src":"3421:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3420:9:15"},"scope":2871,"src":"3378:122:15","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":2733,"nodeType":"Block","src":"3633:177:15","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2714,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2709,"name":"newAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2706,"src":"3648:8:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":2712,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3668:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2711,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3660:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2710,"name":"address","nodeType":"ElementaryTypeName","src":"3660:7:15","typeDescriptions":{}}},"id":2713,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3660:10:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3648:22:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2723,"nodeType":"IfStatement","src":"3644:93:15","trueBody":{"id":2722,"nodeType":"Block","src":"3672:65:15","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":2718,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3722:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2717,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3714:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2716,"name":"address","nodeType":"ElementaryTypeName","src":"3714:7:15","typeDescriptions":{}}},"id":2719,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3714:10:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2715,"name":"ERC1967InvalidAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2602,"src":"3694:19:15","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$_t_error_$","typeString":"function (address) pure returns (error)"}},"id":2720,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3694:31:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":2721,"nodeType":"RevertStatement","src":"3687:38:15"}]}},{"expression":{"id":2731,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"arguments":[{"id":2727,"name":"ADMIN_SLOT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2690,"src":"3774:10:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":2724,"name":"StorageSlot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3479,"src":"3747:11:15","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_StorageSlot_$3479_$","typeString":"type(library StorageSlot)"}},"id":2726,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3759:14:15","memberName":"getAddressSlot","nodeType":"MemberAccess","referencedDeclaration":3390,"src":"3747:26:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$3361_storage_ptr_$","typeString":"function (bytes32) pure returns (struct StorageSlot.AddressSlot storage pointer)"}},"id":2728,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3747:38:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_AddressSlot_$3361_storage_ptr","typeString":"struct StorageSlot.AddressSlot storage pointer"}},"id":2729,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"3786:5:15","memberName":"value","nodeType":"MemberAccess","referencedDeclaration":3360,"src":"3747:44:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2730,"name":"newAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2706,"src":"3794:8:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3747:55:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2732,"nodeType":"ExpressionStatement","src":"3747:55:15"}]},"documentation":{"id":2704,"nodeType":"StructuredDocumentation","src":"3508:74:15","text":" @dev Stores a new address in the ERC-1967 admin slot."},"id":2734,"implemented":true,"kind":"function","modifiers":[],"name":"_setAdmin","nameLocation":"3597:9:15","nodeType":"FunctionDefinition","parameters":{"id":2707,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2706,"mutability":"mutable","name":"newAdmin","nameLocation":"3615:8:15","nodeType":"VariableDeclaration","scope":2734,"src":"3607:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2705,"name":"address","nodeType":"ElementaryTypeName","src":"3607:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3606:18:15"},"returnParameters":{"id":2708,"nodeType":"ParameterList","parameters":[],"src":"3633:0:15"},"scope":2871,"src":"3588:222:15","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":2752,"nodeType":"Block","src":"3985:97:15","statements":[{"eventCall":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":2743,"name":"getAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2703,"src":"4023:8:15","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":2744,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4023:10:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2745,"name":"newAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2737,"src":"4035:8:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":2740,"name":"IERC1967","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2405,"src":"4001:8:15","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC1967_$2405_$","typeString":"type(contract IERC1967)"}},"id":2742,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4010:12:15","memberName":"AdminChanged","nodeType":"MemberAccess","referencedDeclaration":2399,"src":"4001:21:15","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$returns$__$","typeString":"function (address,address)"}},"id":2746,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4001:43:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2747,"nodeType":"EmitStatement","src":"3996:48:15"},{"expression":{"arguments":[{"id":2749,"name":"newAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2737,"src":"4065:8:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2748,"name":"_setAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2734,"src":"4055:9:15","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":2750,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4055:19:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2751,"nodeType":"ExpressionStatement","src":"4055:19:15"}]},"documentation":{"id":2735,"nodeType":"StructuredDocumentation","src":"3818:113:15","text":" @dev Changes the admin of the proxy.\n Emits an {IERC1967-AdminChanged} event."},"id":2753,"implemented":true,"kind":"function","modifiers":[],"name":"changeAdmin","nameLocation":"3946:11:15","nodeType":"FunctionDefinition","parameters":{"id":2738,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2737,"mutability":"mutable","name":"newAdmin","nameLocation":"3966:8:15","nodeType":"VariableDeclaration","scope":2753,"src":"3958:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2736,"name":"address","nodeType":"ElementaryTypeName","src":"3958:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3957:18:15"},"returnParameters":{"id":2739,"nodeType":"ParameterList","parameters":[],"src":"3985:0:15"},"scope":2871,"src":"3937:145:15","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"constant":true,"documentation":{"id":2754,"nodeType":"StructuredDocumentation","src":"4090:204:15","text":" @dev The storage slot of the UpgradeableBeacon contract which defines the implementation for this proxy.\n This is the keccak-256 hash of \"eip1967.proxy.beacon\" subtracted by 1."},"id":2757,"mutability":"constant","name":"BEACON_SLOT","nameLocation":"4392:11:15","nodeType":"VariableDeclaration","scope":2871,"src":"4366:106:15","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2755,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4366:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"hexValue":"307861336630616437346535343233616562666438306433656634333436353738333335613961373261656165653539666636636233353832623335313333643530","id":2756,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4406:66:15","typeDescriptions":{"typeIdentifier":"t_rational_74152234768234802001998023604048924213078445070507226371336425913862612794704_by_1","typeString":"int_const 7415...(69 digits omitted)...4704"},"value":"0xa3f0ad74e5423aebfd80d3ef4346578335a9a72aeaee59ff6cb3582b35133d50"},"visibility":"internal"},{"body":{"id":2769,"nodeType":"Block","src":"4593:71:15","statements":[{"expression":{"expression":{"arguments":[{"id":2765,"name":"BEACON_SLOT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2757,"src":"4638:11:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":2763,"name":"StorageSlot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3479,"src":"4611:11:15","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_StorageSlot_$3479_$","typeString":"type(library StorageSlot)"}},"id":2764,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4623:14:15","memberName":"getAddressSlot","nodeType":"MemberAccess","referencedDeclaration":3390,"src":"4611:26:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$3361_storage_ptr_$","typeString":"function (bytes32) pure returns (struct StorageSlot.AddressSlot storage pointer)"}},"id":2766,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4611:39:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_AddressSlot_$3361_storage_ptr","typeString":"struct StorageSlot.AddressSlot storage pointer"}},"id":2767,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4651:5:15","memberName":"value","nodeType":"MemberAccess","referencedDeclaration":3360,"src":"4611:45:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":2762,"id":2768,"nodeType":"Return","src":"4604:52:15"}]},"documentation":{"id":2758,"nodeType":"StructuredDocumentation","src":"4481:53:15","text":" @dev Returns the current beacon."},"id":2770,"implemented":true,"kind":"function","modifiers":[],"name":"getBeacon","nameLocation":"4549:9:15","nodeType":"FunctionDefinition","parameters":{"id":2759,"nodeType":"ParameterList","parameters":[],"src":"4558:2:15"},"returnParameters":{"id":2762,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2761,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2770,"src":"4584:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2760,"name":"address","nodeType":"ElementaryTypeName","src":"4584:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4583:9:15"},"scope":2871,"src":"4540:124:15","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":2815,"nodeType":"Block","src":"4799:401:15","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2780,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":2776,"name":"newBeacon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2773,"src":"4814:9:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2777,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4824:4:15","memberName":"code","nodeType":"MemberAccess","src":"4814:14:15","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2778,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4829:6:15","memberName":"length","nodeType":"MemberAccess","src":"4814:21:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2779,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4839:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"4814:26:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2786,"nodeType":"IfStatement","src":"4810:97:15","trueBody":{"id":2785,"nodeType":"Block","src":"4842:65:15","statements":[{"errorCall":{"arguments":[{"id":2782,"name":"newBeacon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2773,"src":"4885:9:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2781,"name":"ERC1967InvalidBeacon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2607,"src":"4864:20:15","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$_t_error_$","typeString":"function (address) pure returns (error)"}},"id":2783,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4864:31:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":2784,"nodeType":"RevertStatement","src":"4857:38:15"}]}},{"expression":{"id":2794,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"arguments":[{"id":2790,"name":"BEACON_SLOT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2757,"src":"4946:11:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":2787,"name":"StorageSlot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3479,"src":"4919:11:15","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_StorageSlot_$3479_$","typeString":"type(library StorageSlot)"}},"id":2789,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4931:14:15","memberName":"getAddressSlot","nodeType":"MemberAccess","referencedDeclaration":3390,"src":"4919:26:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$3361_storage_ptr_$","typeString":"function (bytes32) pure returns (struct StorageSlot.AddressSlot storage pointer)"}},"id":2791,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4919:39:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_AddressSlot_$3361_storage_ptr","typeString":"struct StorageSlot.AddressSlot storage pointer"}},"id":2792,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"4959:5:15","memberName":"value","nodeType":"MemberAccess","referencedDeclaration":3360,"src":"4919:45:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2793,"name":"newBeacon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2773,"src":"4967:9:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"4919:57:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2795,"nodeType":"ExpressionStatement","src":"4919:57:15"},{"assignments":[2797],"declarations":[{"constant":false,"id":2797,"mutability":"mutable","name":"beaconImplementation","nameLocation":"4997:20:15","nodeType":"VariableDeclaration","scope":2815,"src":"4989:28:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2796,"name":"address","nodeType":"ElementaryTypeName","src":"4989:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":2803,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"arguments":[{"id":2799,"name":"newBeacon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2773,"src":"5028:9:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2798,"name":"IBeacon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2881,"src":"5020:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IBeacon_$2881_$","typeString":"type(contract IBeacon)"}},"id":2800,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5020:18:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IBeacon_$2881","typeString":"contract IBeacon"}},"id":2801,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5039:14:15","memberName":"implementation","nodeType":"MemberAccess","referencedDeclaration":2880,"src":"5020:33:15","typeDescriptions":{"typeIdentifier":"t_function_external_view$__$returns$_t_address_$","typeString":"function () view external returns (address)"}},"id":2802,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5020:35:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"4989:66:15"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2808,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":2804,"name":"beaconImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2797,"src":"5070:20:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2805,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5091:4:15","memberName":"code","nodeType":"MemberAccess","src":"5070:25:15","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2806,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5096:6:15","memberName":"length","nodeType":"MemberAccess","src":"5070:32:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2807,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5106:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"5070:37:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2814,"nodeType":"IfStatement","src":"5066:127:15","trueBody":{"id":2813,"nodeType":"Block","src":"5109:84:15","statements":[{"errorCall":{"arguments":[{"id":2810,"name":"beaconImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2797,"src":"5160:20:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2809,"name":"ERC1967InvalidImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2597,"src":"5131:28:15","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$_t_error_$","typeString":"function (address) pure returns (error)"}},"id":2811,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5131:50:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":2812,"nodeType":"RevertStatement","src":"5124:57:15"}]}}]},"documentation":{"id":2771,"nodeType":"StructuredDocumentation","src":"4672:74:15","text":" @dev Stores a new beacon in the ERC-1967 beacon slot."},"id":2816,"implemented":true,"kind":"function","modifiers":[],"name":"_setBeacon","nameLocation":"4761:10:15","nodeType":"FunctionDefinition","parameters":{"id":2774,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2773,"mutability":"mutable","name":"newBeacon","nameLocation":"4780:9:15","nodeType":"VariableDeclaration","scope":2816,"src":"4772:17:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2772,"name":"address","nodeType":"ElementaryTypeName","src":"4772:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4771:19:15"},"returnParameters":{"id":2775,"nodeType":"ParameterList","parameters":[],"src":"4799:0:15"},"scope":2871,"src":"4752:448:15","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":2855,"nodeType":"Block","src":"5817:272:15","statements":[{"expression":{"arguments":[{"id":2825,"name":"newBeacon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2819,"src":"5839:9:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2824,"name":"_setBeacon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2816,"src":"5828:10:15","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":2826,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5828:21:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2827,"nodeType":"ExpressionStatement","src":"5828:21:15"},{"eventCall":{"arguments":[{"id":2831,"name":"newBeacon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2819,"src":"5889:9:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":2828,"name":"IERC1967","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2405,"src":"5865:8:15","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC1967_$2405_$","typeString":"type(contract IERC1967)"}},"id":2830,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5874:14:15","memberName":"BeaconUpgraded","nodeType":"MemberAccess","referencedDeclaration":2404,"src":"5865:23:15","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":2832,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5865:34:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2833,"nodeType":"EmitStatement","src":"5860:39:15"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2837,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2834,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2821,"src":"5916:4:15","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2835,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5921:6:15","memberName":"length","nodeType":"MemberAccess","src":"5916:11:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2836,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5930:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"5916:15:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":2853,"nodeType":"Block","src":"6037:45:15","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":2850,"name":"_checkNonPayable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2870,"src":"6052:16:15","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":2851,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6052:18:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2852,"nodeType":"ExpressionStatement","src":"6052:18:15"}]},"id":2854,"nodeType":"IfStatement","src":"5912:170:15","trueBody":{"id":2849,"nodeType":"Block","src":"5933:98:15","statements":[{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"expression":{"arguments":[{"id":2842,"name":"newBeacon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2819,"src":"5985:9:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2841,"name":"IBeacon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2881,"src":"5977:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IBeacon_$2881_$","typeString":"type(contract IBeacon)"}},"id":2843,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5977:18:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IBeacon_$2881","typeString":"contract IBeacon"}},"id":2844,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5996:14:15","memberName":"implementation","nodeType":"MemberAccess","referencedDeclaration":2880,"src":"5977:33:15","typeDescriptions":{"typeIdentifier":"t_function_external_view$__$returns$_t_address_$","typeString":"function () view external returns (address)"}},"id":2845,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5977:35:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2846,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2821,"src":"6014:4:15","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":2838,"name":"Address","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3281,"src":"5948:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Address_$3281_$","typeString":"type(library Address)"}},"id":2840,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5956:20:15","memberName":"functionDelegateCall","nodeType":"MemberAccess","referencedDeclaration":3198,"src":"5948:28:15","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory) returns (bytes memory)"}},"id":2847,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5948:71:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2848,"nodeType":"ExpressionStatement","src":"5948:71:15"}]}}]},"documentation":{"id":2817,"nodeType":"StructuredDocumentation","src":"5208:524:15","text":" @dev Change the beacon and trigger a setup call if data is nonempty.\n This function is payable only if the setup call is performed, otherwise `msg.value` is rejected\n to avoid stuck value in the contract.\n Emits an {IERC1967-BeaconUpgraded} event.\n CAUTION: Invoking this function has no effect on an instance of {BeaconProxy} since v5, since\n it uses an immutable beacon without looking at the value of the ERC-1967 beacon slot for\n efficiency."},"id":2856,"implemented":true,"kind":"function","modifiers":[],"name":"upgradeBeaconToAndCall","nameLocation":"5747:22:15","nodeType":"FunctionDefinition","parameters":{"id":2822,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2819,"mutability":"mutable","name":"newBeacon","nameLocation":"5778:9:15","nodeType":"VariableDeclaration","scope":2856,"src":"5770:17:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2818,"name":"address","nodeType":"ElementaryTypeName","src":"5770:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2821,"mutability":"mutable","name":"data","nameLocation":"5802:4:15","nodeType":"VariableDeclaration","scope":2856,"src":"5789:17:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2820,"name":"bytes","nodeType":"ElementaryTypeName","src":"5789:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5769:38:15"},"returnParameters":{"id":2823,"nodeType":"ParameterList","parameters":[],"src":"5817:0:15"},"scope":2871,"src":"5738:351:15","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2869,"nodeType":"Block","src":"6320:90:15","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2863,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2860,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"6335:3:15","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2861,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6339:5:15","memberName":"value","nodeType":"MemberAccess","src":"6335:9:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2862,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6347:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6335:13:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2868,"nodeType":"IfStatement","src":"6331:72:15","trueBody":{"id":2867,"nodeType":"Block","src":"6350:53:15","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":2864,"name":"ERC1967NonPayable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2610,"src":"6372:17:15","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$_t_error_$","typeString":"function () pure returns (error)"}},"id":2865,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6372:19:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":2866,"nodeType":"RevertStatement","src":"6365:26:15"}]}}]},"documentation":{"id":2857,"nodeType":"StructuredDocumentation","src":"6097:181:15","text":" @dev Reverts if `msg.value` is not zero. It can be used to avoid `msg.value` stuck in the contract\n if an upgrade doesn't perform an initialization call."},"id":2870,"implemented":true,"kind":"function","modifiers":[],"name":"_checkNonPayable","nameLocation":"6293:16:15","nodeType":"FunctionDefinition","parameters":{"id":2858,"nodeType":"ParameterList","parameters":[],"src":"6309:2:15"},"returnParameters":{"id":2859,"nodeType":"ParameterList","parameters":[],"src":"6320:0:15"},"scope":2871,"src":"6284:126:15","stateMutability":"nonpayable","virtual":false,"visibility":"private"}],"scope":2872,"src":"510:5903:15","usedErrors":[2597,2602,2607,2610],"usedEvents":[]}],"src":"117:6298:15"},"id":15},"@openzeppelin/contracts/proxy/beacon/IBeacon.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/proxy/beacon/IBeacon.sol","exportedSymbols":{"IBeacon":[2881]},"id":2882,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2873,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"111:24:16"},{"abstract":false,"baseContracts":[],"canonicalName":"IBeacon","contractDependencies":[],"contractKind":"interface","documentation":{"id":2874,"nodeType":"StructuredDocumentation","src":"139:81:16","text":" @dev This is the interface that {BeaconProxy} expects of its beacon."},"fullyImplemented":false,"id":2881,"linearizedBaseContracts":[2881],"name":"IBeacon","nameLocation":"232:7:16","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":2875,"nodeType":"StructuredDocumentation","src":"247:172:16","text":" @dev Must return an address that can be used as a delegate call target.\n {UpgradeableBeacon} will check that this address is a contract."},"functionSelector":"5c60da1b","id":2880,"implemented":false,"kind":"function","modifiers":[],"name":"implementation","nameLocation":"434:14:16","nodeType":"FunctionDefinition","parameters":{"id":2876,"nodeType":"ParameterList","parameters":[],"src":"448:2:16"},"returnParameters":{"id":2879,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2878,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2880,"src":"474:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2877,"name":"address","nodeType":"ElementaryTypeName","src":"474:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"473:9:16"},"scope":2881,"src":"425:58:16","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":2882,"src":"222:264:16","usedErrors":[],"usedEvents":[]}],"src":"111:377:16"},"id":16},"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","exportedSymbols":{"IERC20":[2959]},"id":2960,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2883,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"109:24:17"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC20","contractDependencies":[],"contractKind":"interface","documentation":{"id":2884,"nodeType":"StructuredDocumentation","src":"137:73:17","text":" @dev Interface of the ERC-20 standard as defined in the ERC."},"fullyImplemented":false,"id":2959,"linearizedBaseContracts":[2959],"name":"IERC20","nameLocation":"222:6:17","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":2885,"nodeType":"StructuredDocumentation","src":"236:163:17","text":" @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."},"eventSelector":"ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef","id":2893,"name":"Transfer","nameLocation":"411:8:17","nodeType":"EventDefinition","parameters":{"id":2892,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2887,"indexed":true,"mutability":"mutable","name":"from","nameLocation":"436:4:17","nodeType":"VariableDeclaration","scope":2893,"src":"420:20:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2886,"name":"address","nodeType":"ElementaryTypeName","src":"420:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2889,"indexed":true,"mutability":"mutable","name":"to","nameLocation":"458:2:17","nodeType":"VariableDeclaration","scope":2893,"src":"442:18:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2888,"name":"address","nodeType":"ElementaryTypeName","src":"442:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2891,"indexed":false,"mutability":"mutable","name":"value","nameLocation":"470:5:17","nodeType":"VariableDeclaration","scope":2893,"src":"462:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2890,"name":"uint256","nodeType":"ElementaryTypeName","src":"462:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"419:57:17"},"src":"405:72:17"},{"anonymous":false,"documentation":{"id":2894,"nodeType":"StructuredDocumentation","src":"485:151:17","text":" @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."},"eventSelector":"8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925","id":2902,"name":"Approval","nameLocation":"648:8:17","nodeType":"EventDefinition","parameters":{"id":2901,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2896,"indexed":true,"mutability":"mutable","name":"owner","nameLocation":"673:5:17","nodeType":"VariableDeclaration","scope":2902,"src":"657:21:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2895,"name":"address","nodeType":"ElementaryTypeName","src":"657:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2898,"indexed":true,"mutability":"mutable","name":"spender","nameLocation":"696:7:17","nodeType":"VariableDeclaration","scope":2902,"src":"680:23:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2897,"name":"address","nodeType":"ElementaryTypeName","src":"680:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2900,"indexed":false,"mutability":"mutable","name":"value","nameLocation":"713:5:17","nodeType":"VariableDeclaration","scope":2902,"src":"705:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2899,"name":"uint256","nodeType":"ElementaryTypeName","src":"705:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"656:63:17"},"src":"642:78:17"},{"documentation":{"id":2903,"nodeType":"StructuredDocumentation","src":"728:67:17","text":" @dev Returns the value of tokens in existence."},"functionSelector":"18160ddd","id":2908,"implemented":false,"kind":"function","modifiers":[],"name":"totalSupply","nameLocation":"810:11:17","nodeType":"FunctionDefinition","parameters":{"id":2904,"nodeType":"ParameterList","parameters":[],"src":"821:2:17"},"returnParameters":{"id":2907,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2906,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2908,"src":"847:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2905,"name":"uint256","nodeType":"ElementaryTypeName","src":"847:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"846:9:17"},"scope":2959,"src":"801:55:17","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":2909,"nodeType":"StructuredDocumentation","src":"864:73:17","text":" @dev Returns the value of tokens owned by `account`."},"functionSelector":"70a08231","id":2916,"implemented":false,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"952:9:17","nodeType":"FunctionDefinition","parameters":{"id":2912,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2911,"mutability":"mutable","name":"account","nameLocation":"970:7:17","nodeType":"VariableDeclaration","scope":2916,"src":"962:15:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2910,"name":"address","nodeType":"ElementaryTypeName","src":"962:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"961:17:17"},"returnParameters":{"id":2915,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2914,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2916,"src":"1002:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2913,"name":"uint256","nodeType":"ElementaryTypeName","src":"1002:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1001:9:17"},"scope":2959,"src":"943:68:17","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":2917,"nodeType":"StructuredDocumentation","src":"1019:219:17","text":" @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."},"functionSelector":"a9059cbb","id":2926,"implemented":false,"kind":"function","modifiers":[],"name":"transfer","nameLocation":"1253:8:17","nodeType":"FunctionDefinition","parameters":{"id":2922,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2919,"mutability":"mutable","name":"to","nameLocation":"1270:2:17","nodeType":"VariableDeclaration","scope":2926,"src":"1262:10:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2918,"name":"address","nodeType":"ElementaryTypeName","src":"1262:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2921,"mutability":"mutable","name":"value","nameLocation":"1282:5:17","nodeType":"VariableDeclaration","scope":2926,"src":"1274:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2920,"name":"uint256","nodeType":"ElementaryTypeName","src":"1274:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1261:27:17"},"returnParameters":{"id":2925,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2924,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2926,"src":"1307:4:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2923,"name":"bool","nodeType":"ElementaryTypeName","src":"1307:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1306:6:17"},"scope":2959,"src":"1244:69:17","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":2927,"nodeType":"StructuredDocumentation","src":"1321:270:17","text":" @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."},"functionSelector":"dd62ed3e","id":2936,"implemented":false,"kind":"function","modifiers":[],"name":"allowance","nameLocation":"1606:9:17","nodeType":"FunctionDefinition","parameters":{"id":2932,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2929,"mutability":"mutable","name":"owner","nameLocation":"1624:5:17","nodeType":"VariableDeclaration","scope":2936,"src":"1616:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2928,"name":"address","nodeType":"ElementaryTypeName","src":"1616:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2931,"mutability":"mutable","name":"spender","nameLocation":"1639:7:17","nodeType":"VariableDeclaration","scope":2936,"src":"1631:15:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2930,"name":"address","nodeType":"ElementaryTypeName","src":"1631:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1615:32:17"},"returnParameters":{"id":2935,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2934,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2936,"src":"1671:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2933,"name":"uint256","nodeType":"ElementaryTypeName","src":"1671:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1670:9:17"},"scope":2959,"src":"1597:83:17","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":2937,"nodeType":"StructuredDocumentation","src":"1688:681:17","text":" @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."},"functionSelector":"095ea7b3","id":2946,"implemented":false,"kind":"function","modifiers":[],"name":"approve","nameLocation":"2384:7:17","nodeType":"FunctionDefinition","parameters":{"id":2942,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2939,"mutability":"mutable","name":"spender","nameLocation":"2400:7:17","nodeType":"VariableDeclaration","scope":2946,"src":"2392:15:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2938,"name":"address","nodeType":"ElementaryTypeName","src":"2392:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2941,"mutability":"mutable","name":"value","nameLocation":"2417:5:17","nodeType":"VariableDeclaration","scope":2946,"src":"2409:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2940,"name":"uint256","nodeType":"ElementaryTypeName","src":"2409:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2391:32:17"},"returnParameters":{"id":2945,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2944,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2946,"src":"2442:4:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2943,"name":"bool","nodeType":"ElementaryTypeName","src":"2442:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2441:6:17"},"scope":2959,"src":"2375:73:17","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":2947,"nodeType":"StructuredDocumentation","src":"2456:305:17","text":" @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."},"functionSelector":"23b872dd","id":2958,"implemented":false,"kind":"function","modifiers":[],"name":"transferFrom","nameLocation":"2776:12:17","nodeType":"FunctionDefinition","parameters":{"id":2954,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2949,"mutability":"mutable","name":"from","nameLocation":"2797:4:17","nodeType":"VariableDeclaration","scope":2958,"src":"2789:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2948,"name":"address","nodeType":"ElementaryTypeName","src":"2789:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2951,"mutability":"mutable","name":"to","nameLocation":"2811:2:17","nodeType":"VariableDeclaration","scope":2958,"src":"2803:10:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2950,"name":"address","nodeType":"ElementaryTypeName","src":"2803:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2953,"mutability":"mutable","name":"value","nameLocation":"2823:5:17","nodeType":"VariableDeclaration","scope":2958,"src":"2815:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2952,"name":"uint256","nodeType":"ElementaryTypeName","src":"2815:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2788:41:17"},"returnParameters":{"id":2957,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2956,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2958,"src":"2848:4:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2955,"name":"bool","nodeType":"ElementaryTypeName","src":"2848:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2847:6:17"},"scope":2959,"src":"2767:87:17","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":2960,"src":"212:2645:17","usedErrors":[],"usedEvents":[2893,2902]}],"src":"109:2750:17"},"id":17},"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol","exportedSymbols":{"IERC20":[2959],"IERC20Metadata":[2985]},"id":2986,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2961,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"128:24:18"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","file":"../IERC20.sol","id":2963,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2986,"sourceUnit":2960,"src":"156:37:18","symbolAliases":[{"foreign":{"id":2962,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2959,"src":"164:6:18","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":2965,"name":"IERC20","nameLocations":["316:6:18"],"nodeType":"IdentifierPath","referencedDeclaration":2959,"src":"316:6:18"},"id":2966,"nodeType":"InheritanceSpecifier","src":"316:6:18"}],"canonicalName":"IERC20Metadata","contractDependencies":[],"contractKind":"interface","documentation":{"id":2964,"nodeType":"StructuredDocumentation","src":"197:89:18","text":" @dev Interface for the optional metadata functions from the ERC-20 standard."},"fullyImplemented":false,"id":2985,"linearizedBaseContracts":[2985,2959],"name":"IERC20Metadata","nameLocation":"298:14:18","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":2967,"nodeType":"StructuredDocumentation","src":"330:56:18","text":" @dev Returns the name of the token."},"functionSelector":"06fdde03","id":2972,"implemented":false,"kind":"function","modifiers":[],"name":"name","nameLocation":"401:4:18","nodeType":"FunctionDefinition","parameters":{"id":2968,"nodeType":"ParameterList","parameters":[],"src":"405:2:18"},"returnParameters":{"id":2971,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2970,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2972,"src":"431:13:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2969,"name":"string","nodeType":"ElementaryTypeName","src":"431:6:18","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"430:15:18"},"scope":2985,"src":"392:54:18","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":2973,"nodeType":"StructuredDocumentation","src":"454:58:18","text":" @dev Returns the symbol of the token."},"functionSelector":"95d89b41","id":2978,"implemented":false,"kind":"function","modifiers":[],"name":"symbol","nameLocation":"527:6:18","nodeType":"FunctionDefinition","parameters":{"id":2974,"nodeType":"ParameterList","parameters":[],"src":"533:2:18"},"returnParameters":{"id":2977,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2976,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2978,"src":"559:13:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2975,"name":"string","nodeType":"ElementaryTypeName","src":"559:6:18","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"558:15:18"},"scope":2985,"src":"518:56:18","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":2979,"nodeType":"StructuredDocumentation","src":"582:67:18","text":" @dev Returns the decimals places of the token."},"functionSelector":"313ce567","id":2984,"implemented":false,"kind":"function","modifiers":[],"name":"decimals","nameLocation":"664:8:18","nodeType":"FunctionDefinition","parameters":{"id":2980,"nodeType":"ParameterList","parameters":[],"src":"672:2:18"},"returnParameters":{"id":2983,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2982,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2984,"src":"698:5:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":2981,"name":"uint8","nodeType":"ElementaryTypeName","src":"698:5:18","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"697:7:18"},"scope":2985,"src":"655:50:18","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":2986,"src":"288:420:18","usedErrors":[],"usedEvents":[2893,2902]}],"src":"128:582:18"},"id":18},"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol","exportedSymbols":{"IERC20Permit":[3021]},"id":3022,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2987,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"126:24:19"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC20Permit","contractDependencies":[],"contractKind":"interface","documentation":{"id":2988,"nodeType":"StructuredDocumentation","src":"154:2000:19","text":" @dev Interface of the ERC-20 Permit extension allowing approvals to be made via signatures, as defined in\n https://eips.ethereum.org/EIPS/eip-2612[ERC-2612].\n Adds the {permit} method, which can be used to change an account's ERC-20 allowance (see {IERC20-allowance}) by\n presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't\n need to send a transaction, and thus is not required to hold Ether at all.\n ==== Security Considerations\n There are two important considerations concerning the use of `permit`. The first is that a valid permit signature\n expresses an allowance, and it should not be assumed to convey additional meaning. In particular, it should not be\n considered as an intention to spend the allowance in any specific way. The second is that because permits have\n built-in replay protection and can be submitted by anyone, they can be frontrun. A protocol that uses permits should\n take this into consideration and allow a `permit` call to fail. Combining these two aspects, a pattern that may be\n generally recommended is:\n ```solidity\n function doThingWithPermit(..., uint256 value, uint256 deadline, uint8 v, bytes32 r, bytes32 s) public {\n     try token.permit(msg.sender, address(this), value, deadline, v, r, s) {} catch {}\n     doThing(..., value);\n }\n function doThing(..., uint256 value) public {\n     token.safeTransferFrom(msg.sender, address(this), value);\n     ...\n }\n ```\n Observe that: 1) `msg.sender` is used as the owner, leaving no ambiguity as to the signer intent, and 2) the use of\n `try/catch` allows the permit to fail and makes the code tolerant to frontrunning. (See also\n {SafeERC20-safeTransferFrom}).\n Additionally, note that smart contract wallets (such as Argent or Safe) are not able to produce permit signatures, so\n contracts should have entry points that don't rely on permit."},"fullyImplemented":false,"id":3021,"linearizedBaseContracts":[3021],"name":"IERC20Permit","nameLocation":"2166:12:19","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":2989,"nodeType":"StructuredDocumentation","src":"2186:872:19","text":" @dev Sets `value` as the allowance of `spender` over ``owner``'s tokens,\n given ``owner``'s signed approval.\n IMPORTANT: The same issues {IERC20-approve} has related to transaction\n ordering also apply here.\n Emits an {Approval} event.\n Requirements:\n - `spender` cannot be the zero address.\n - `deadline` must be a timestamp in the future.\n - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner`\n over the EIP712-formatted function arguments.\n - the signature must use ``owner``'s current nonce (see {nonces}).\n For more information on the signature format, see the\n https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP\n section].\n CAUTION: See Security Considerations above."},"functionSelector":"d505accf","id":3006,"implemented":false,"kind":"function","modifiers":[],"name":"permit","nameLocation":"3073:6:19","nodeType":"FunctionDefinition","parameters":{"id":3004,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2991,"mutability":"mutable","name":"owner","nameLocation":"3098:5:19","nodeType":"VariableDeclaration","scope":3006,"src":"3090:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2990,"name":"address","nodeType":"ElementaryTypeName","src":"3090:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2993,"mutability":"mutable","name":"spender","nameLocation":"3122:7:19","nodeType":"VariableDeclaration","scope":3006,"src":"3114:15:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2992,"name":"address","nodeType":"ElementaryTypeName","src":"3114:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2995,"mutability":"mutable","name":"value","nameLocation":"3148:5:19","nodeType":"VariableDeclaration","scope":3006,"src":"3140:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2994,"name":"uint256","nodeType":"ElementaryTypeName","src":"3140:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2997,"mutability":"mutable","name":"deadline","nameLocation":"3172:8:19","nodeType":"VariableDeclaration","scope":3006,"src":"3164:16:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2996,"name":"uint256","nodeType":"ElementaryTypeName","src":"3164:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2999,"mutability":"mutable","name":"v","nameLocation":"3197:1:19","nodeType":"VariableDeclaration","scope":3006,"src":"3191:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":2998,"name":"uint8","nodeType":"ElementaryTypeName","src":"3191:5:19","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":3001,"mutability":"mutable","name":"r","nameLocation":"3217:1:19","nodeType":"VariableDeclaration","scope":3006,"src":"3209:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3000,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3209:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3003,"mutability":"mutable","name":"s","nameLocation":"3237:1:19","nodeType":"VariableDeclaration","scope":3006,"src":"3229:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3002,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3229:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3079:166:19"},"returnParameters":{"id":3005,"nodeType":"ParameterList","parameters":[],"src":"3254:0:19"},"scope":3021,"src":"3064:191:19","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":3007,"nodeType":"StructuredDocumentation","src":"3263:300:19","text":" @dev Returns the current nonce for `owner`. This value must be\n included whenever a signature is generated for {permit}.\n Every successful call to {permit} increases ``owner``'s nonce by one. This\n prevents a signature from being used multiple times."},"functionSelector":"7ecebe00","id":3014,"implemented":false,"kind":"function","modifiers":[],"name":"nonces","nameLocation":"3578:6:19","nodeType":"FunctionDefinition","parameters":{"id":3010,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3009,"mutability":"mutable","name":"owner","nameLocation":"3593:5:19","nodeType":"VariableDeclaration","scope":3014,"src":"3585:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3008,"name":"address","nodeType":"ElementaryTypeName","src":"3585:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3584:15:19"},"returnParameters":{"id":3013,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3012,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3014,"src":"3623:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3011,"name":"uint256","nodeType":"ElementaryTypeName","src":"3623:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3622:9:19"},"scope":3021,"src":"3569:63:19","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":3015,"nodeType":"StructuredDocumentation","src":"3640:130:19","text":" @dev Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}."},"functionSelector":"3644e515","id":3020,"implemented":false,"kind":"function","modifiers":[],"name":"DOMAIN_SEPARATOR","nameLocation":"3839:16:19","nodeType":"FunctionDefinition","parameters":{"id":3016,"nodeType":"ParameterList","parameters":[],"src":"3855:2:19"},"returnParameters":{"id":3019,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3018,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3020,"src":"3881:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3017,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3881:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3880:9:19"},"scope":3021,"src":"3830:60:19","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":3022,"src":"2156:1737:19","usedErrors":[],"usedEvents":[]}],"src":"126:3769:19"},"id":19},"@openzeppelin/contracts/utils/Address.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Address.sol","exportedSymbols":{"Address":[3281],"Errors":[3303]},"id":3282,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":3023,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"104:24:20"},{"absolutePath":"@openzeppelin/contracts/utils/Errors.sol","file":"./Errors.sol","id":3025,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3282,"sourceUnit":3304,"src":"132:36:20","symbolAliases":[{"foreign":{"id":3024,"name":"Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3303,"src":"140:6:20","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"Address","contractDependencies":[],"contractKind":"library","documentation":{"id":3026,"nodeType":"StructuredDocumentation","src":"172:69:20","text":" @dev Collection of functions related to the address type"},"fullyImplemented":true,"id":3281,"linearizedBaseContracts":[3281],"name":"Address","nameLocation":"251:7:20","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":3027,"nodeType":"StructuredDocumentation","src":"266:77:20","text":" @dev There's no code at `target` (it is not a contract)."},"errorSelector":"9996b315","id":3031,"name":"AddressEmptyCode","nameLocation":"355:16:20","nodeType":"ErrorDefinition","parameters":{"id":3030,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3029,"mutability":"mutable","name":"target","nameLocation":"380:6:20","nodeType":"VariableDeclaration","scope":3031,"src":"372:14:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3028,"name":"address","nodeType":"ElementaryTypeName","src":"372:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"371:16:20"},"src":"349:39:20"},{"body":{"id":3078,"nodeType":"Block","src":"1393:303:20","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3045,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":3041,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"1416:4:20","typeDescriptions":{"typeIdentifier":"t_contract$_Address_$3281","typeString":"library Address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Address_$3281","typeString":"library Address"}],"id":3040,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1408:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3039,"name":"address","nodeType":"ElementaryTypeName","src":"1408:7:20","typeDescriptions":{}}},"id":3042,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1408:13:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3043,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1422:7:20","memberName":"balance","nodeType":"MemberAccess","src":"1408:21:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":3044,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3036,"src":"1432:6:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1408:30:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3058,"nodeType":"IfStatement","src":"1404:127:20","trueBody":{"id":3057,"nodeType":"Block","src":"1440:91:20","statements":[{"errorCall":{"arguments":[{"expression":{"arguments":[{"id":3051,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"1497:4:20","typeDescriptions":{"typeIdentifier":"t_contract$_Address_$3281","typeString":"library Address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Address_$3281","typeString":"library Address"}],"id":3050,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1489:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3049,"name":"address","nodeType":"ElementaryTypeName","src":"1489:7:20","typeDescriptions":{}}},"id":3052,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1489:13:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3053,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1503:7:20","memberName":"balance","nodeType":"MemberAccess","src":"1489:21:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3054,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3036,"src":"1512:6:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":3046,"name":"Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3303,"src":"1462:6:20","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Errors_$3303_$","typeString":"type(library Errors)"}},"id":3048,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1469:19:20","memberName":"InsufficientBalance","nodeType":"MemberAccess","referencedDeclaration":3291,"src":"1462:26:20","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$_t_uint256_$returns$_t_error_$","typeString":"function (uint256,uint256) pure returns (error)"}},"id":3055,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1462:57:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":3056,"nodeType":"RevertStatement","src":"1455:64:20"}]}},{"assignments":[3060,3062],"declarations":[{"constant":false,"id":3060,"mutability":"mutable","name":"success","nameLocation":"1549:7:20","nodeType":"VariableDeclaration","scope":3078,"src":"1544:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3059,"name":"bool","nodeType":"ElementaryTypeName","src":"1544:4:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3062,"mutability":"mutable","name":"returndata","nameLocation":"1571:10:20","nodeType":"VariableDeclaration","scope":3078,"src":"1558:23:20","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3061,"name":"bytes","nodeType":"ElementaryTypeName","src":"1558:5:20","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":3069,"initialValue":{"arguments":[{"hexValue":"","id":3067,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1615:2:20","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"id":3063,"name":"recipient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3034,"src":"1585:9:20","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"id":3064,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1595:4:20","memberName":"call","nodeType":"MemberAccess","src":"1585:14:20","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":3066,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"id":3065,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3036,"src":"1607:6:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"1585:29:20","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":3068,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1585:33:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"1543:75:20"},{"condition":{"id":3071,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"1633:8:20","subExpression":{"id":3070,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3060,"src":"1634:7:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3077,"nodeType":"IfStatement","src":"1629:60:20","trueBody":{"id":3076,"nodeType":"Block","src":"1643:46:20","statements":[{"expression":{"arguments":[{"id":3073,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3062,"src":"1666:10:20","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":3072,"name":"_revert","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3280,"src":"1658:7:20","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$returns$__$","typeString":"function (bytes memory) pure"}},"id":3074,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1658:19:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3075,"nodeType":"ExpressionStatement","src":"1658:19:20"}]}}]},"documentation":{"id":3032,"nodeType":"StructuredDocumentation","src":"396:920:20","text":" @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n `recipient`, forwarding all available gas and reverting on errors.\n https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n of certain opcodes, possibly making contracts go over the 2300 gas limit\n imposed by `transfer`, making them unable to receive funds via\n `transfer`. {sendValue} removes this limitation.\n https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n IMPORTANT: because control is transferred to `recipient`, care must be\n taken to not create reentrancy vulnerabilities. Consider using\n {ReentrancyGuard} or the\n https://solidity.readthedocs.io/en/v0.8.20/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern]."},"id":3079,"implemented":true,"kind":"function","modifiers":[],"name":"sendValue","nameLocation":"1331:9:20","nodeType":"FunctionDefinition","parameters":{"id":3037,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3034,"mutability":"mutable","name":"recipient","nameLocation":"1357:9:20","nodeType":"VariableDeclaration","scope":3079,"src":"1341:25:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"},"typeName":{"id":3033,"name":"address","nodeType":"ElementaryTypeName","src":"1341:15:20","stateMutability":"payable","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"visibility":"internal"},{"constant":false,"id":3036,"mutability":"mutable","name":"amount","nameLocation":"1376:6:20","nodeType":"VariableDeclaration","scope":3079,"src":"1368:14:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3035,"name":"uint256","nodeType":"ElementaryTypeName","src":"1368:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1340:43:20"},"returnParameters":{"id":3038,"nodeType":"ParameterList","parameters":[],"src":"1393:0:20"},"scope":3281,"src":"1322:374:20","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":3095,"nodeType":"Block","src":"2650:64:20","statements":[{"expression":{"arguments":[{"id":3090,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3082,"src":"2690:6:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3091,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3084,"src":"2698:4:20","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"30","id":3092,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2704:1:20","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3089,"name":"functionCallWithValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3146,"src":"2668:21:20","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,uint256) returns (bytes memory)"}},"id":3093,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2668:38:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":3088,"id":3094,"nodeType":"Return","src":"2661:45:20"}]},"documentation":{"id":3080,"nodeType":"StructuredDocumentation","src":"1704:851:20","text":" @dev Performs a Solidity function call using a low level `call`. A\n plain `call` is an unsafe replacement for a function call: use this\n function instead.\n If `target` reverts with a revert reason or custom error, it is bubbled\n up by this function (like regular Solidity function calls). However, if\n the call reverted with no returned reason, this function reverts with a\n {Errors.FailedCall} error.\n Returns the raw returned data. To convert to the expected return value,\n use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n Requirements:\n - `target` must be a contract.\n - calling `target` with `data` must not revert."},"id":3096,"implemented":true,"kind":"function","modifiers":[],"name":"functionCall","nameLocation":"2570:12:20","nodeType":"FunctionDefinition","parameters":{"id":3085,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3082,"mutability":"mutable","name":"target","nameLocation":"2591:6:20","nodeType":"VariableDeclaration","scope":3096,"src":"2583:14:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3081,"name":"address","nodeType":"ElementaryTypeName","src":"2583:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3084,"mutability":"mutable","name":"data","nameLocation":"2612:4:20","nodeType":"VariableDeclaration","scope":3096,"src":"2599:17:20","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3083,"name":"bytes","nodeType":"ElementaryTypeName","src":"2599:5:20","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2582:35:20"},"returnParameters":{"id":3088,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3087,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3096,"src":"2636:12:20","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3086,"name":"bytes","nodeType":"ElementaryTypeName","src":"2636:5:20","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2635:14:20"},"scope":3281,"src":"2561:153:20","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":3145,"nodeType":"Block","src":"3162:300:20","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3114,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":3110,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"3185:4:20","typeDescriptions":{"typeIdentifier":"t_contract$_Address_$3281","typeString":"library Address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Address_$3281","typeString":"library Address"}],"id":3109,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3177:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3108,"name":"address","nodeType":"ElementaryTypeName","src":"3177:7:20","typeDescriptions":{}}},"id":3111,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3177:13:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3112,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3191:7:20","memberName":"balance","nodeType":"MemberAccess","src":"3177:21:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":3113,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3103,"src":"3201:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3177:29:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3127,"nodeType":"IfStatement","src":"3173:125:20","trueBody":{"id":3126,"nodeType":"Block","src":"3208:90:20","statements":[{"errorCall":{"arguments":[{"expression":{"arguments":[{"id":3120,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"3265:4:20","typeDescriptions":{"typeIdentifier":"t_contract$_Address_$3281","typeString":"library Address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Address_$3281","typeString":"library Address"}],"id":3119,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3257:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3118,"name":"address","nodeType":"ElementaryTypeName","src":"3257:7:20","typeDescriptions":{}}},"id":3121,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3257:13:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3122,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3271:7:20","memberName":"balance","nodeType":"MemberAccess","src":"3257:21:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3123,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3103,"src":"3280:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":3115,"name":"Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3303,"src":"3230:6:20","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Errors_$3303_$","typeString":"type(library Errors)"}},"id":3117,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3237:19:20","memberName":"InsufficientBalance","nodeType":"MemberAccess","referencedDeclaration":3291,"src":"3230:26:20","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$_t_uint256_$returns$_t_error_$","typeString":"function (uint256,uint256) pure returns (error)"}},"id":3124,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3230:56:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":3125,"nodeType":"RevertStatement","src":"3223:63:20"}]}},{"assignments":[3129,3131],"declarations":[{"constant":false,"id":3129,"mutability":"mutable","name":"success","nameLocation":"3314:7:20","nodeType":"VariableDeclaration","scope":3145,"src":"3309:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3128,"name":"bool","nodeType":"ElementaryTypeName","src":"3309:4:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3131,"mutability":"mutable","name":"returndata","nameLocation":"3336:10:20","nodeType":"VariableDeclaration","scope":3145,"src":"3323:23:20","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3130,"name":"bytes","nodeType":"ElementaryTypeName","src":"3323:5:20","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":3138,"initialValue":{"arguments":[{"id":3136,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3101,"src":"3376:4:20","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":3132,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3099,"src":"3350:6:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3133,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3357:4:20","memberName":"call","nodeType":"MemberAccess","src":"3350:11:20","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":3135,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"id":3134,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3103,"src":"3369:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"3350:25:20","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":3137,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3350:31:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"3308:73:20"},{"expression":{"arguments":[{"id":3140,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3099,"src":"3426:6:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3141,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3129,"src":"3434:7:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":3142,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3131,"src":"3443:10:20","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":3139,"name":"verifyCallResultFromTarget","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3238,"src":"3399:26:20","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bool,bytes memory) view returns (bytes memory)"}},"id":3143,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3399:55:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":3107,"id":3144,"nodeType":"Return","src":"3392:62:20"}]},"documentation":{"id":3097,"nodeType":"StructuredDocumentation","src":"2722:321:20","text":" @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but also transferring `value` wei to `target`.\n Requirements:\n - the calling contract must have an ETH balance of at least `value`.\n - the called Solidity function must be `payable`."},"id":3146,"implemented":true,"kind":"function","modifiers":[],"name":"functionCallWithValue","nameLocation":"3058:21:20","nodeType":"FunctionDefinition","parameters":{"id":3104,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3099,"mutability":"mutable","name":"target","nameLocation":"3088:6:20","nodeType":"VariableDeclaration","scope":3146,"src":"3080:14:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3098,"name":"address","nodeType":"ElementaryTypeName","src":"3080:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3101,"mutability":"mutable","name":"data","nameLocation":"3109:4:20","nodeType":"VariableDeclaration","scope":3146,"src":"3096:17:20","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3100,"name":"bytes","nodeType":"ElementaryTypeName","src":"3096:5:20","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":3103,"mutability":"mutable","name":"value","nameLocation":"3123:5:20","nodeType":"VariableDeclaration","scope":3146,"src":"3115:13:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3102,"name":"uint256","nodeType":"ElementaryTypeName","src":"3115:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3079:50:20"},"returnParameters":{"id":3107,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3106,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3146,"src":"3148:12:20","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3105,"name":"bytes","nodeType":"ElementaryTypeName","src":"3148:5:20","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3147:14:20"},"scope":3281,"src":"3049:413:20","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":3171,"nodeType":"Block","src":"3707:157:20","statements":[{"assignments":[3157,3159],"declarations":[{"constant":false,"id":3157,"mutability":"mutable","name":"success","nameLocation":"3724:7:20","nodeType":"VariableDeclaration","scope":3171,"src":"3719:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3156,"name":"bool","nodeType":"ElementaryTypeName","src":"3719:4:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3159,"mutability":"mutable","name":"returndata","nameLocation":"3746:10:20","nodeType":"VariableDeclaration","scope":3171,"src":"3733:23:20","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3158,"name":"bytes","nodeType":"ElementaryTypeName","src":"3733:5:20","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":3164,"initialValue":{"arguments":[{"id":3162,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3151,"src":"3778:4:20","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":3160,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3149,"src":"3760:6:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3161,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3767:10:20","memberName":"staticcall","nodeType":"MemberAccess","src":"3760:17:20","typeDescriptions":{"typeIdentifier":"t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) view returns (bool,bytes memory)"}},"id":3163,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3760:23:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"3718:65:20"},{"expression":{"arguments":[{"id":3166,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3149,"src":"3828:6:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3167,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3157,"src":"3836:7:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":3168,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3159,"src":"3845:10:20","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":3165,"name":"verifyCallResultFromTarget","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3238,"src":"3801:26:20","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bool,bytes memory) view returns (bytes memory)"}},"id":3169,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3801:55:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":3155,"id":3170,"nodeType":"Return","src":"3794:62:20"}]},"documentation":{"id":3147,"nodeType":"StructuredDocumentation","src":"3470:131:20","text":" @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a static call."},"id":3172,"implemented":true,"kind":"function","modifiers":[],"name":"functionStaticCall","nameLocation":"3616:18:20","nodeType":"FunctionDefinition","parameters":{"id":3152,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3149,"mutability":"mutable","name":"target","nameLocation":"3643:6:20","nodeType":"VariableDeclaration","scope":3172,"src":"3635:14:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3148,"name":"address","nodeType":"ElementaryTypeName","src":"3635:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3151,"mutability":"mutable","name":"data","nameLocation":"3664:4:20","nodeType":"VariableDeclaration","scope":3172,"src":"3651:17:20","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3150,"name":"bytes","nodeType":"ElementaryTypeName","src":"3651:5:20","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3634:35:20"},"returnParameters":{"id":3155,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3154,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3172,"src":"3693:12:20","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3153,"name":"bytes","nodeType":"ElementaryTypeName","src":"3693:5:20","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3692:14:20"},"scope":3281,"src":"3607:257:20","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":3197,"nodeType":"Block","src":"4108:159:20","statements":[{"assignments":[3183,3185],"declarations":[{"constant":false,"id":3183,"mutability":"mutable","name":"success","nameLocation":"4125:7:20","nodeType":"VariableDeclaration","scope":3197,"src":"4120:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3182,"name":"bool","nodeType":"ElementaryTypeName","src":"4120:4:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3185,"mutability":"mutable","name":"returndata","nameLocation":"4147:10:20","nodeType":"VariableDeclaration","scope":3197,"src":"4134:23:20","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3184,"name":"bytes","nodeType":"ElementaryTypeName","src":"4134:5:20","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":3190,"initialValue":{"arguments":[{"id":3188,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3177,"src":"4181:4:20","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":3186,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3175,"src":"4161:6:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3187,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4168:12:20","memberName":"delegatecall","nodeType":"MemberAccess","src":"4161:19:20","typeDescriptions":{"typeIdentifier":"t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) returns (bool,bytes memory)"}},"id":3189,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4161:25:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"4119:67:20"},{"expression":{"arguments":[{"id":3192,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3175,"src":"4231:6:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3193,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3183,"src":"4239:7:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":3194,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3185,"src":"4248:10:20","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":3191,"name":"verifyCallResultFromTarget","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3238,"src":"4204:26:20","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bool,bytes memory) view returns (bytes memory)"}},"id":3195,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4204:55:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":3181,"id":3196,"nodeType":"Return","src":"4197:62:20"}]},"documentation":{"id":3173,"nodeType":"StructuredDocumentation","src":"3872:133:20","text":" @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a delegate call."},"id":3198,"implemented":true,"kind":"function","modifiers":[],"name":"functionDelegateCall","nameLocation":"4020:20:20","nodeType":"FunctionDefinition","parameters":{"id":3178,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3175,"mutability":"mutable","name":"target","nameLocation":"4049:6:20","nodeType":"VariableDeclaration","scope":3198,"src":"4041:14:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3174,"name":"address","nodeType":"ElementaryTypeName","src":"4041:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3177,"mutability":"mutable","name":"data","nameLocation":"4070:4:20","nodeType":"VariableDeclaration","scope":3198,"src":"4057:17:20","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3176,"name":"bytes","nodeType":"ElementaryTypeName","src":"4057:5:20","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4040:35:20"},"returnParameters":{"id":3181,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3180,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3198,"src":"4094:12:20","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3179,"name":"bytes","nodeType":"ElementaryTypeName","src":"4094:5:20","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4093:14:20"},"scope":3281,"src":"4011:256:20","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":3237,"nodeType":"Block","src":"4704:435:20","statements":[{"condition":{"id":3211,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"4719:8:20","subExpression":{"id":3210,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3203,"src":"4720:7:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":3235,"nodeType":"Block","src":"4781:351:20","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3226,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3220,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":3217,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3205,"src":"4972:10:20","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3218,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4983:6:20","memberName":"length","nodeType":"MemberAccess","src":"4972:17:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":3219,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4993:1:20","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"4972:22:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3225,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":3221,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3201,"src":"4998:6:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3222,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5005:4:20","memberName":"code","nodeType":"MemberAccess","src":"4998:11:20","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3223,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5010:6:20","memberName":"length","nodeType":"MemberAccess","src":"4998:18:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":3224,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5020:1:20","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"4998:23:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"4972:49:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3232,"nodeType":"IfStatement","src":"4968:121:20","trueBody":{"id":3231,"nodeType":"Block","src":"5023:66:20","statements":[{"errorCall":{"arguments":[{"id":3228,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3201,"src":"5066:6:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3227,"name":"AddressEmptyCode","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3031,"src":"5049:16:20","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$_t_error_$","typeString":"function (address) pure returns (error)"}},"id":3229,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5049:24:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":3230,"nodeType":"RevertStatement","src":"5042:31:20"}]}},{"expression":{"id":3233,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3205,"src":"5110:10:20","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":3209,"id":3234,"nodeType":"Return","src":"5103:17:20"}]},"id":3236,"nodeType":"IfStatement","src":"4715:417:20","trueBody":{"id":3216,"nodeType":"Block","src":"4729:46:20","statements":[{"expression":{"arguments":[{"id":3213,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3205,"src":"4752:10:20","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":3212,"name":"_revert","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3280,"src":"4744:7:20","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$returns$__$","typeString":"function (bytes memory) pure"}},"id":3214,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4744:19:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3215,"nodeType":"ExpressionStatement","src":"4744:19:20"}]}}]},"documentation":{"id":3199,"nodeType":"StructuredDocumentation","src":"4275:261:20","text":" @dev Tool to verify that a low level call to smart-contract was successful, and reverts if the target\n was not a contract or bubbling up the revert reason (falling back to {Errors.FailedCall}) in case\n of an unsuccessful call."},"id":3238,"implemented":true,"kind":"function","modifiers":[],"name":"verifyCallResultFromTarget","nameLocation":"4551:26:20","nodeType":"FunctionDefinition","parameters":{"id":3206,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3201,"mutability":"mutable","name":"target","nameLocation":"4596:6:20","nodeType":"VariableDeclaration","scope":3238,"src":"4588:14:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3200,"name":"address","nodeType":"ElementaryTypeName","src":"4588:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3203,"mutability":"mutable","name":"success","nameLocation":"4618:7:20","nodeType":"VariableDeclaration","scope":3238,"src":"4613:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3202,"name":"bool","nodeType":"ElementaryTypeName","src":"4613:4:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3205,"mutability":"mutable","name":"returndata","nameLocation":"4649:10:20","nodeType":"VariableDeclaration","scope":3238,"src":"4636:23:20","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3204,"name":"bytes","nodeType":"ElementaryTypeName","src":"4636:5:20","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4577:89:20"},"returnParameters":{"id":3209,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3208,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3238,"src":"4690:12:20","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3207,"name":"bytes","nodeType":"ElementaryTypeName","src":"4690:5:20","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4689:14:20"},"scope":3281,"src":"4542:597:20","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":3259,"nodeType":"Block","src":"5449:128:20","statements":[{"condition":{"id":3249,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"5464:8:20","subExpression":{"id":3248,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3241,"src":"5465:7:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":3257,"nodeType":"Block","src":"5526:44:20","statements":[{"expression":{"id":3255,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3243,"src":"5548:10:20","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":3247,"id":3256,"nodeType":"Return","src":"5541:17:20"}]},"id":3258,"nodeType":"IfStatement","src":"5460:110:20","trueBody":{"id":3254,"nodeType":"Block","src":"5474:46:20","statements":[{"expression":{"arguments":[{"id":3251,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3243,"src":"5497:10:20","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":3250,"name":"_revert","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3280,"src":"5489:7:20","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$returns$__$","typeString":"function (bytes memory) pure"}},"id":3252,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5489:19:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3253,"nodeType":"ExpressionStatement","src":"5489:19:20"}]}}]},"documentation":{"id":3239,"nodeType":"StructuredDocumentation","src":"5147:194:20","text":" @dev Tool to verify that a low level call was successful, and reverts if it wasn't, either by bubbling the\n revert reason or with a default {Errors.FailedCall} error."},"id":3260,"implemented":true,"kind":"function","modifiers":[],"name":"verifyCallResult","nameLocation":"5356:16:20","nodeType":"FunctionDefinition","parameters":{"id":3244,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3241,"mutability":"mutable","name":"success","nameLocation":"5378:7:20","nodeType":"VariableDeclaration","scope":3260,"src":"5373:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3240,"name":"bool","nodeType":"ElementaryTypeName","src":"5373:4:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3243,"mutability":"mutable","name":"returndata","nameLocation":"5400:10:20","nodeType":"VariableDeclaration","scope":3260,"src":"5387:23:20","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3242,"name":"bytes","nodeType":"ElementaryTypeName","src":"5387:5:20","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5372:39:20"},"returnParameters":{"id":3247,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3246,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3260,"src":"5435:12:20","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3245,"name":"bytes","nodeType":"ElementaryTypeName","src":"5435:5:20","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5434:14:20"},"scope":3281,"src":"5347:230:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3279,"nodeType":"Block","src":"5751:443:20","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3269,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":3266,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3263,"src":"5829:10:20","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3267,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5840:6:20","memberName":"length","nodeType":"MemberAccess","src":"5829:17:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3268,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5849:1:20","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"5829:21:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":3277,"nodeType":"Block","src":"6134:53:20","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":3272,"name":"Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3303,"src":"6156:6:20","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Errors_$3303_$","typeString":"type(library Errors)"}},"id":3274,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6163:10:20","memberName":"FailedCall","nodeType":"MemberAccess","referencedDeclaration":3294,"src":"6156:17:20","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$_t_error_$","typeString":"function () pure returns (error)"}},"id":3275,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6156:19:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":3276,"nodeType":"RevertStatement","src":"6149:26:20"}]},"id":3278,"nodeType":"IfStatement","src":"5825:362:20","trueBody":{"id":3271,"nodeType":"Block","src":"5852:276:20","statements":[{"AST":{"nativeSrc":"5981:136:20","nodeType":"YulBlock","src":"5981:136:20","statements":[{"nativeSrc":"6000:40:20","nodeType":"YulVariableDeclaration","src":"6000:40:20","value":{"arguments":[{"name":"returndata","nativeSrc":"6029:10:20","nodeType":"YulIdentifier","src":"6029:10:20"}],"functionName":{"name":"mload","nativeSrc":"6023:5:20","nodeType":"YulIdentifier","src":"6023:5:20"},"nativeSrc":"6023:17:20","nodeType":"YulFunctionCall","src":"6023:17:20"},"variables":[{"name":"returndata_size","nativeSrc":"6004:15:20","nodeType":"YulTypedName","src":"6004:15:20","type":""}]},{"expression":{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"6069:2:20","nodeType":"YulLiteral","src":"6069:2:20","type":"","value":"32"},{"name":"returndata","nativeSrc":"6073:10:20","nodeType":"YulIdentifier","src":"6073:10:20"}],"functionName":{"name":"add","nativeSrc":"6065:3:20","nodeType":"YulIdentifier","src":"6065:3:20"},"nativeSrc":"6065:19:20","nodeType":"YulFunctionCall","src":"6065:19:20"},{"name":"returndata_size","nativeSrc":"6086:15:20","nodeType":"YulIdentifier","src":"6086:15:20"}],"functionName":{"name":"revert","nativeSrc":"6058:6:20","nodeType":"YulIdentifier","src":"6058:6:20"},"nativeSrc":"6058:44:20","nodeType":"YulFunctionCall","src":"6058:44:20"},"nativeSrc":"6058:44:20","nodeType":"YulExpressionStatement","src":"6058:44:20"}]},"evmVersion":"paris","externalReferences":[{"declaration":3263,"isOffset":false,"isSlot":false,"src":"6029:10:20","valueSize":1},{"declaration":3263,"isOffset":false,"isSlot":false,"src":"6073:10:20","valueSize":1}],"flags":["memory-safe"],"id":3270,"nodeType":"InlineAssembly","src":"5956:161:20"}]}}]},"documentation":{"id":3261,"nodeType":"StructuredDocumentation","src":"5585:105:20","text":" @dev Reverts with returndata if present. Otherwise reverts with {Errors.FailedCall}."},"id":3280,"implemented":true,"kind":"function","modifiers":[],"name":"_revert","nameLocation":"5705:7:20","nodeType":"FunctionDefinition","parameters":{"id":3264,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3263,"mutability":"mutable","name":"returndata","nameLocation":"5726:10:20","nodeType":"VariableDeclaration","scope":3280,"src":"5713:23:20","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3262,"name":"bytes","nodeType":"ElementaryTypeName","src":"5713:5:20","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5712:25:20"},"returnParameters":{"id":3265,"nodeType":"ParameterList","parameters":[],"src":"5751:0:20"},"scope":3281,"src":"5696:498:20","stateMutability":"pure","virtual":false,"visibility":"private"}],"scope":3282,"src":"243:5954:20","usedErrors":[3031],"usedEvents":[]}],"src":"104:6095:20"},"id":20},"@openzeppelin/contracts/utils/Errors.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Errors.sol","exportedSymbols":{"Errors":[3303]},"id":3304,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":3283,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"103:24:21"},{"abstract":false,"baseContracts":[],"canonicalName":"Errors","contractDependencies":[],"contractKind":"library","documentation":{"id":3284,"nodeType":"StructuredDocumentation","src":"131:291:21","text":" @dev Collection of common custom errors used in multiple contracts\n IMPORTANT: Backwards compatibility is not guaranteed in future versions of the library.\n It is recommended to avoid relying on the error API for critical functionality.\n _Available since v5.1._"},"fullyImplemented":true,"id":3303,"linearizedBaseContracts":[3303],"name":"Errors","nameLocation":"432:6:21","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":3285,"nodeType":"StructuredDocumentation","src":"446:96:21","text":" @dev The ETH balance of the account is not enough to perform the operation."},"errorSelector":"cf479181","id":3291,"name":"InsufficientBalance","nameLocation":"554:19:21","nodeType":"ErrorDefinition","parameters":{"id":3290,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3287,"mutability":"mutable","name":"balance","nameLocation":"582:7:21","nodeType":"VariableDeclaration","scope":3291,"src":"574:15:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3286,"name":"uint256","nodeType":"ElementaryTypeName","src":"574:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3289,"mutability":"mutable","name":"needed","nameLocation":"599:6:21","nodeType":"VariableDeclaration","scope":3291,"src":"591:14:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3288,"name":"uint256","nodeType":"ElementaryTypeName","src":"591:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"573:33:21"},"src":"548:59:21"},{"documentation":{"id":3292,"nodeType":"StructuredDocumentation","src":"615:91:21","text":" @dev A call to an address target failed. The target may have reverted."},"errorSelector":"d6bda275","id":3294,"name":"FailedCall","nameLocation":"718:10:21","nodeType":"ErrorDefinition","parameters":{"id":3293,"nodeType":"ParameterList","parameters":[],"src":"728:2:21"},"src":"712:19:21"},{"documentation":{"id":3295,"nodeType":"StructuredDocumentation","src":"739:48:21","text":" @dev The deployment failed."},"errorSelector":"b06ebf3d","id":3297,"name":"FailedDeployment","nameLocation":"799:16:21","nodeType":"ErrorDefinition","parameters":{"id":3296,"nodeType":"ParameterList","parameters":[],"src":"815:2:21"},"src":"793:25:21"},{"documentation":{"id":3298,"nodeType":"StructuredDocumentation","src":"826:60:21","text":" @dev A necessary precompile is missing."},"errorSelector":"42b01bce","id":3302,"name":"MissingPrecompile","nameLocation":"898:17:21","nodeType":"ErrorDefinition","parameters":{"id":3301,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3300,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3302,"src":"916:7:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3299,"name":"address","nodeType":"ElementaryTypeName","src":"916:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"915:9:21"},"src":"892:33:21"}],"scope":3304,"src":"424:504:21","usedErrors":[3291,3294,3297,3302],"usedEvents":[]}],"src":"103:827:21"},"id":21},"@openzeppelin/contracts/utils/Panic.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Panic.sol","exportedSymbols":{"Panic":[3355]},"id":3356,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":3305,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"102:24:22"},{"abstract":false,"baseContracts":[],"canonicalName":"Panic","contractDependencies":[],"contractKind":"library","documentation":{"id":3306,"nodeType":"StructuredDocumentation","src":"130:507:22","text":" @dev Helper library for emitting standardized panic codes.\n ```solidity\n contract Example {\n      using Panic for uint256;\n      // Use any of the declared internal constants\n      function foo() { Panic.GENERIC.panic(); }\n      // Alternatively\n      function foo() { Panic.panic(Panic.GENERIC); }\n }\n ```\n Follows the list from https://github.com/ethereum/solidity/blob/v0.8.24/libsolutil/ErrorCodes.h[libsolutil].\n _Available since v5.1._"},"fullyImplemented":true,"id":3355,"linearizedBaseContracts":[3355],"name":"Panic","nameLocation":"690:5:22","nodeType":"ContractDefinition","nodes":[{"constant":true,"documentation":{"id":3307,"nodeType":"StructuredDocumentation","src":"703:36:22","text":"@dev generic / unspecified error"},"id":3310,"mutability":"constant","name":"GENERIC","nameLocation":"771:7:22","nodeType":"VariableDeclaration","scope":3355,"src":"745:40:22","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3308,"name":"uint256","nodeType":"ElementaryTypeName","src":"745:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783030","id":3309,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"781:4:22","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0x00"},"visibility":"internal"},{"constant":true,"documentation":{"id":3311,"nodeType":"StructuredDocumentation","src":"792:37:22","text":"@dev used by the assert() builtin"},"id":3314,"mutability":"constant","name":"ASSERT","nameLocation":"861:6:22","nodeType":"VariableDeclaration","scope":3355,"src":"835:39:22","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3312,"name":"uint256","nodeType":"ElementaryTypeName","src":"835:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783031","id":3313,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"870:4:22","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"0x01"},"visibility":"internal"},{"constant":true,"documentation":{"id":3315,"nodeType":"StructuredDocumentation","src":"881:41:22","text":"@dev arithmetic underflow or overflow"},"id":3318,"mutability":"constant","name":"UNDER_OVERFLOW","nameLocation":"954:14:22","nodeType":"VariableDeclaration","scope":3355,"src":"928:47:22","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3316,"name":"uint256","nodeType":"ElementaryTypeName","src":"928:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783131","id":3317,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"971:4:22","typeDescriptions":{"typeIdentifier":"t_rational_17_by_1","typeString":"int_const 17"},"value":"0x11"},"visibility":"internal"},{"constant":true,"documentation":{"id":3319,"nodeType":"StructuredDocumentation","src":"982:35:22","text":"@dev division or modulo by zero"},"id":3322,"mutability":"constant","name":"DIVISION_BY_ZERO","nameLocation":"1049:16:22","nodeType":"VariableDeclaration","scope":3355,"src":"1023:49:22","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3320,"name":"uint256","nodeType":"ElementaryTypeName","src":"1023:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783132","id":3321,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1068:4:22","typeDescriptions":{"typeIdentifier":"t_rational_18_by_1","typeString":"int_const 18"},"value":"0x12"},"visibility":"internal"},{"constant":true,"documentation":{"id":3323,"nodeType":"StructuredDocumentation","src":"1079:30:22","text":"@dev enum conversion error"},"id":3326,"mutability":"constant","name":"ENUM_CONVERSION_ERROR","nameLocation":"1141:21:22","nodeType":"VariableDeclaration","scope":3355,"src":"1115:54:22","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3324,"name":"uint256","nodeType":"ElementaryTypeName","src":"1115:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783231","id":3325,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1165:4:22","typeDescriptions":{"typeIdentifier":"t_rational_33_by_1","typeString":"int_const 33"},"value":"0x21"},"visibility":"internal"},{"constant":true,"documentation":{"id":3327,"nodeType":"StructuredDocumentation","src":"1176:36:22","text":"@dev invalid encoding in storage"},"id":3330,"mutability":"constant","name":"STORAGE_ENCODING_ERROR","nameLocation":"1244:22:22","nodeType":"VariableDeclaration","scope":3355,"src":"1218:55:22","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3328,"name":"uint256","nodeType":"ElementaryTypeName","src":"1218:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783232","id":3329,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1269:4:22","typeDescriptions":{"typeIdentifier":"t_rational_34_by_1","typeString":"int_const 34"},"value":"0x22"},"visibility":"internal"},{"constant":true,"documentation":{"id":3331,"nodeType":"StructuredDocumentation","src":"1280:24:22","text":"@dev empty array pop"},"id":3334,"mutability":"constant","name":"EMPTY_ARRAY_POP","nameLocation":"1336:15:22","nodeType":"VariableDeclaration","scope":3355,"src":"1310:48:22","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3332,"name":"uint256","nodeType":"ElementaryTypeName","src":"1310:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783331","id":3333,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1354:4:22","typeDescriptions":{"typeIdentifier":"t_rational_49_by_1","typeString":"int_const 49"},"value":"0x31"},"visibility":"internal"},{"constant":true,"documentation":{"id":3335,"nodeType":"StructuredDocumentation","src":"1365:35:22","text":"@dev array out of bounds access"},"id":3338,"mutability":"constant","name":"ARRAY_OUT_OF_BOUNDS","nameLocation":"1432:19:22","nodeType":"VariableDeclaration","scope":3355,"src":"1406:52:22","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3336,"name":"uint256","nodeType":"ElementaryTypeName","src":"1406:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783332","id":3337,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1454:4:22","typeDescriptions":{"typeIdentifier":"t_rational_50_by_1","typeString":"int_const 50"},"value":"0x32"},"visibility":"internal"},{"constant":true,"documentation":{"id":3339,"nodeType":"StructuredDocumentation","src":"1465:65:22","text":"@dev resource error (too large allocation or too large array)"},"id":3342,"mutability":"constant","name":"RESOURCE_ERROR","nameLocation":"1562:14:22","nodeType":"VariableDeclaration","scope":3355,"src":"1536:47:22","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3340,"name":"uint256","nodeType":"ElementaryTypeName","src":"1536:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783431","id":3341,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1579:4:22","typeDescriptions":{"typeIdentifier":"t_rational_65_by_1","typeString":"int_const 65"},"value":"0x41"},"visibility":"internal"},{"constant":true,"documentation":{"id":3343,"nodeType":"StructuredDocumentation","src":"1590:42:22","text":"@dev calling invalid internal function"},"id":3346,"mutability":"constant","name":"INVALID_INTERNAL_FUNCTION","nameLocation":"1664:25:22","nodeType":"VariableDeclaration","scope":3355,"src":"1638:58:22","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3344,"name":"uint256","nodeType":"ElementaryTypeName","src":"1638:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783531","id":3345,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1692:4:22","typeDescriptions":{"typeIdentifier":"t_rational_81_by_1","typeString":"int_const 81"},"value":"0x51"},"visibility":"internal"},{"body":{"id":3353,"nodeType":"Block","src":"1868:157:22","statements":[{"AST":{"nativeSrc":"1904:114:22","nodeType":"YulBlock","src":"1904:114:22","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"1926:4:22","nodeType":"YulLiteral","src":"1926:4:22","type":"","value":"0x00"},{"kind":"number","nativeSrc":"1932:10:22","nodeType":"YulLiteral","src":"1932:10:22","type":"","value":"0x4e487b71"}],"functionName":{"name":"mstore","nativeSrc":"1919:6:22","nodeType":"YulIdentifier","src":"1919:6:22"},"nativeSrc":"1919:24:22","nodeType":"YulFunctionCall","src":"1919:24:22"},"nativeSrc":"1919:24:22","nodeType":"YulExpressionStatement","src":"1919:24:22"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"1964:4:22","nodeType":"YulLiteral","src":"1964:4:22","type":"","value":"0x20"},{"name":"code","nativeSrc":"1970:4:22","nodeType":"YulIdentifier","src":"1970:4:22"}],"functionName":{"name":"mstore","nativeSrc":"1957:6:22","nodeType":"YulIdentifier","src":"1957:6:22"},"nativeSrc":"1957:18:22","nodeType":"YulFunctionCall","src":"1957:18:22"},"nativeSrc":"1957:18:22","nodeType":"YulExpressionStatement","src":"1957:18:22"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"1996:4:22","nodeType":"YulLiteral","src":"1996:4:22","type":"","value":"0x1c"},{"kind":"number","nativeSrc":"2002:4:22","nodeType":"YulLiteral","src":"2002:4:22","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"1989:6:22","nodeType":"YulIdentifier","src":"1989:6:22"},"nativeSrc":"1989:18:22","nodeType":"YulFunctionCall","src":"1989:18:22"},"nativeSrc":"1989:18:22","nodeType":"YulExpressionStatement","src":"1989:18:22"}]},"evmVersion":"paris","externalReferences":[{"declaration":3349,"isOffset":false,"isSlot":false,"src":"1970:4:22","valueSize":1}],"flags":["memory-safe"],"id":3352,"nodeType":"InlineAssembly","src":"1879:139:22"}]},"documentation":{"id":3347,"nodeType":"StructuredDocumentation","src":"1705:114:22","text":"@dev Reverts with a panic code. Recommended to use with\n the internal constants with predefined codes."},"id":3354,"implemented":true,"kind":"function","modifiers":[],"name":"panic","nameLocation":"1834:5:22","nodeType":"FunctionDefinition","parameters":{"id":3350,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3349,"mutability":"mutable","name":"code","nameLocation":"1848:4:22","nodeType":"VariableDeclaration","scope":3354,"src":"1840:12:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3348,"name":"uint256","nodeType":"ElementaryTypeName","src":"1840:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1839:14:22"},"returnParameters":{"id":3351,"nodeType":"ParameterList","parameters":[],"src":"1868:0:22"},"scope":3355,"src":"1825:200:22","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":3356,"src":"682:1346:22","usedErrors":[],"usedEvents":[]}],"src":"102:1928:22"},"id":22},"@openzeppelin/contracts/utils/StorageSlot.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/StorageSlot.sol","exportedSymbols":{"StorageSlot":[3479]},"id":3480,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":3357,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"197:24:23"},{"abstract":false,"baseContracts":[],"canonicalName":"StorageSlot","contractDependencies":[],"contractKind":"library","documentation":{"id":3358,"nodeType":"StructuredDocumentation","src":"225:1213:23","text":" @dev Library for reading and writing primitive types to specific storage slots.\n Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts.\n This library helps with reading and writing to such slots without the need for inline assembly.\n The functions in this library return Slot structs that contain a `value` member that can be used to read or write.\n Example usage to set ERC-1967 implementation slot:\n ```solidity\n contract ERC1967 {\n     // Define the slot. Alternatively, use the SlotDerivation library to derive the slot.\n     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\n     function _getImplementation() internal view returns (address) {\n         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\n     }\n     function _setImplementation(address newImplementation) internal {\n         require(newImplementation.code.length > 0);\n         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\n     }\n }\n ```\n TIP: Consider using this library along with {SlotDerivation}."},"fullyImplemented":true,"id":3479,"linearizedBaseContracts":[3479],"name":"StorageSlot","nameLocation":"1448:11:23","nodeType":"ContractDefinition","nodes":[{"canonicalName":"StorageSlot.AddressSlot","id":3361,"members":[{"constant":false,"id":3360,"mutability":"mutable","name":"value","nameLocation":"1505:5:23","nodeType":"VariableDeclaration","scope":3361,"src":"1497:13:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3359,"name":"address","nodeType":"ElementaryTypeName","src":"1497:7:23","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"name":"AddressSlot","nameLocation":"1474:11:23","nodeType":"StructDefinition","scope":3479,"src":"1467:51:23","visibility":"public"},{"canonicalName":"StorageSlot.BooleanSlot","id":3364,"members":[{"constant":false,"id":3363,"mutability":"mutable","name":"value","nameLocation":"1561:5:23","nodeType":"VariableDeclaration","scope":3364,"src":"1556:10:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3362,"name":"bool","nodeType":"ElementaryTypeName","src":"1556:4:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"name":"BooleanSlot","nameLocation":"1533:11:23","nodeType":"StructDefinition","scope":3479,"src":"1526:48:23","visibility":"public"},{"canonicalName":"StorageSlot.Bytes32Slot","id":3367,"members":[{"constant":false,"id":3366,"mutability":"mutable","name":"value","nameLocation":"1620:5:23","nodeType":"VariableDeclaration","scope":3367,"src":"1612:13:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3365,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1612:7:23","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"name":"Bytes32Slot","nameLocation":"1589:11:23","nodeType":"StructDefinition","scope":3479,"src":"1582:51:23","visibility":"public"},{"canonicalName":"StorageSlot.Uint256Slot","id":3370,"members":[{"constant":false,"id":3369,"mutability":"mutable","name":"value","nameLocation":"1679:5:23","nodeType":"VariableDeclaration","scope":3370,"src":"1671:13:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3368,"name":"uint256","nodeType":"ElementaryTypeName","src":"1671:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"Uint256Slot","nameLocation":"1648:11:23","nodeType":"StructDefinition","scope":3479,"src":"1641:51:23","visibility":"public"},{"canonicalName":"StorageSlot.Int256Slot","id":3373,"members":[{"constant":false,"id":3372,"mutability":"mutable","name":"value","nameLocation":"1736:5:23","nodeType":"VariableDeclaration","scope":3373,"src":"1729:12:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3371,"name":"int256","nodeType":"ElementaryTypeName","src":"1729:6:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"name":"Int256Slot","nameLocation":"1707:10:23","nodeType":"StructDefinition","scope":3479,"src":"1700:49:23","visibility":"public"},{"canonicalName":"StorageSlot.StringSlot","id":3376,"members":[{"constant":false,"id":3375,"mutability":"mutable","name":"value","nameLocation":"1793:5:23","nodeType":"VariableDeclaration","scope":3376,"src":"1786:12:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":3374,"name":"string","nodeType":"ElementaryTypeName","src":"1786:6:23","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"name":"StringSlot","nameLocation":"1764:10:23","nodeType":"StructDefinition","scope":3479,"src":"1757:49:23","visibility":"public"},{"canonicalName":"StorageSlot.BytesSlot","id":3379,"members":[{"constant":false,"id":3378,"mutability":"mutable","name":"value","nameLocation":"1848:5:23","nodeType":"VariableDeclaration","scope":3379,"src":"1842:11:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":3377,"name":"bytes","nodeType":"ElementaryTypeName","src":"1842:5:23","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"name":"BytesSlot","nameLocation":"1821:9:23","nodeType":"StructDefinition","scope":3479,"src":"1814:47:23","visibility":"public"},{"body":{"id":3389,"nodeType":"Block","src":"2048:83:23","statements":[{"AST":{"nativeSrc":"2084:40:23","nodeType":"YulBlock","src":"2084:40:23","statements":[{"nativeSrc":"2099:14:23","nodeType":"YulAssignment","src":"2099:14:23","value":{"name":"slot","nativeSrc":"2109:4:23","nodeType":"YulIdentifier","src":"2109:4:23"},"variableNames":[{"name":"r.slot","nativeSrc":"2099:6:23","nodeType":"YulIdentifier","src":"2099:6:23"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":3386,"isOffset":false,"isSlot":true,"src":"2099:6:23","suffix":"slot","valueSize":1},{"declaration":3382,"isOffset":false,"isSlot":false,"src":"2109:4:23","valueSize":1}],"flags":["memory-safe"],"id":3388,"nodeType":"InlineAssembly","src":"2059:65:23"}]},"documentation":{"id":3380,"nodeType":"StructuredDocumentation","src":"1869:89:23","text":" @dev Returns an `AddressSlot` with member `value` located at `slot`."},"id":3390,"implemented":true,"kind":"function","modifiers":[],"name":"getAddressSlot","nameLocation":"1973:14:23","nodeType":"FunctionDefinition","parameters":{"id":3383,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3382,"mutability":"mutable","name":"slot","nameLocation":"1996:4:23","nodeType":"VariableDeclaration","scope":3390,"src":"1988:12:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3381,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1988:7:23","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1987:14:23"},"returnParameters":{"id":3387,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3386,"mutability":"mutable","name":"r","nameLocation":"2045:1:23","nodeType":"VariableDeclaration","scope":3390,"src":"2025:21:23","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSlot_$3361_storage_ptr","typeString":"struct StorageSlot.AddressSlot"},"typeName":{"id":3385,"nodeType":"UserDefinedTypeName","pathNode":{"id":3384,"name":"AddressSlot","nameLocations":["2025:11:23"],"nodeType":"IdentifierPath","referencedDeclaration":3361,"src":"2025:11:23"},"referencedDeclaration":3361,"src":"2025:11:23","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSlot_$3361_storage_ptr","typeString":"struct StorageSlot.AddressSlot"}},"visibility":"internal"}],"src":"2024:23:23"},"scope":3479,"src":"1964:167:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3400,"nodeType":"Block","src":"2317:83:23","statements":[{"AST":{"nativeSrc":"2353:40:23","nodeType":"YulBlock","src":"2353:40:23","statements":[{"nativeSrc":"2368:14:23","nodeType":"YulAssignment","src":"2368:14:23","value":{"name":"slot","nativeSrc":"2378:4:23","nodeType":"YulIdentifier","src":"2378:4:23"},"variableNames":[{"name":"r.slot","nativeSrc":"2368:6:23","nodeType":"YulIdentifier","src":"2368:6:23"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":3397,"isOffset":false,"isSlot":true,"src":"2368:6:23","suffix":"slot","valueSize":1},{"declaration":3393,"isOffset":false,"isSlot":false,"src":"2378:4:23","valueSize":1}],"flags":["memory-safe"],"id":3399,"nodeType":"InlineAssembly","src":"2328:65:23"}]},"documentation":{"id":3391,"nodeType":"StructuredDocumentation","src":"2139:88:23","text":" @dev Returns a `BooleanSlot` with member `value` located at `slot`."},"id":3401,"implemented":true,"kind":"function","modifiers":[],"name":"getBooleanSlot","nameLocation":"2242:14:23","nodeType":"FunctionDefinition","parameters":{"id":3394,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3393,"mutability":"mutable","name":"slot","nameLocation":"2265:4:23","nodeType":"VariableDeclaration","scope":3401,"src":"2257:12:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3392,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2257:7:23","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2256:14:23"},"returnParameters":{"id":3398,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3397,"mutability":"mutable","name":"r","nameLocation":"2314:1:23","nodeType":"VariableDeclaration","scope":3401,"src":"2294:21:23","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_BooleanSlot_$3364_storage_ptr","typeString":"struct StorageSlot.BooleanSlot"},"typeName":{"id":3396,"nodeType":"UserDefinedTypeName","pathNode":{"id":3395,"name":"BooleanSlot","nameLocations":["2294:11:23"],"nodeType":"IdentifierPath","referencedDeclaration":3364,"src":"2294:11:23"},"referencedDeclaration":3364,"src":"2294:11:23","typeDescriptions":{"typeIdentifier":"t_struct$_BooleanSlot_$3364_storage_ptr","typeString":"struct StorageSlot.BooleanSlot"}},"visibility":"internal"}],"src":"2293:23:23"},"scope":3479,"src":"2233:167:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3411,"nodeType":"Block","src":"2586:83:23","statements":[{"AST":{"nativeSrc":"2622:40:23","nodeType":"YulBlock","src":"2622:40:23","statements":[{"nativeSrc":"2637:14:23","nodeType":"YulAssignment","src":"2637:14:23","value":{"name":"slot","nativeSrc":"2647:4:23","nodeType":"YulIdentifier","src":"2647:4:23"},"variableNames":[{"name":"r.slot","nativeSrc":"2637:6:23","nodeType":"YulIdentifier","src":"2637:6:23"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":3408,"isOffset":false,"isSlot":true,"src":"2637:6:23","suffix":"slot","valueSize":1},{"declaration":3404,"isOffset":false,"isSlot":false,"src":"2647:4:23","valueSize":1}],"flags":["memory-safe"],"id":3410,"nodeType":"InlineAssembly","src":"2597:65:23"}]},"documentation":{"id":3402,"nodeType":"StructuredDocumentation","src":"2408:88:23","text":" @dev Returns a `Bytes32Slot` with member `value` located at `slot`."},"id":3412,"implemented":true,"kind":"function","modifiers":[],"name":"getBytes32Slot","nameLocation":"2511:14:23","nodeType":"FunctionDefinition","parameters":{"id":3405,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3404,"mutability":"mutable","name":"slot","nameLocation":"2534:4:23","nodeType":"VariableDeclaration","scope":3412,"src":"2526:12:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3403,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2526:7:23","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2525:14:23"},"returnParameters":{"id":3409,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3408,"mutability":"mutable","name":"r","nameLocation":"2583:1:23","nodeType":"VariableDeclaration","scope":3412,"src":"2563:21:23","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Slot_$3367_storage_ptr","typeString":"struct StorageSlot.Bytes32Slot"},"typeName":{"id":3407,"nodeType":"UserDefinedTypeName","pathNode":{"id":3406,"name":"Bytes32Slot","nameLocations":["2563:11:23"],"nodeType":"IdentifierPath","referencedDeclaration":3367,"src":"2563:11:23"},"referencedDeclaration":3367,"src":"2563:11:23","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Slot_$3367_storage_ptr","typeString":"struct StorageSlot.Bytes32Slot"}},"visibility":"internal"}],"src":"2562:23:23"},"scope":3479,"src":"2502:167:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3422,"nodeType":"Block","src":"2855:83:23","statements":[{"AST":{"nativeSrc":"2891:40:23","nodeType":"YulBlock","src":"2891:40:23","statements":[{"nativeSrc":"2906:14:23","nodeType":"YulAssignment","src":"2906:14:23","value":{"name":"slot","nativeSrc":"2916:4:23","nodeType":"YulIdentifier","src":"2916:4:23"},"variableNames":[{"name":"r.slot","nativeSrc":"2906:6:23","nodeType":"YulIdentifier","src":"2906:6:23"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":3419,"isOffset":false,"isSlot":true,"src":"2906:6:23","suffix":"slot","valueSize":1},{"declaration":3415,"isOffset":false,"isSlot":false,"src":"2916:4:23","valueSize":1}],"flags":["memory-safe"],"id":3421,"nodeType":"InlineAssembly","src":"2866:65:23"}]},"documentation":{"id":3413,"nodeType":"StructuredDocumentation","src":"2677:88:23","text":" @dev Returns a `Uint256Slot` with member `value` located at `slot`."},"id":3423,"implemented":true,"kind":"function","modifiers":[],"name":"getUint256Slot","nameLocation":"2780:14:23","nodeType":"FunctionDefinition","parameters":{"id":3416,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3415,"mutability":"mutable","name":"slot","nameLocation":"2803:4:23","nodeType":"VariableDeclaration","scope":3423,"src":"2795:12:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3414,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2795:7:23","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2794:14:23"},"returnParameters":{"id":3420,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3419,"mutability":"mutable","name":"r","nameLocation":"2852:1:23","nodeType":"VariableDeclaration","scope":3423,"src":"2832:21:23","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Uint256Slot_$3370_storage_ptr","typeString":"struct StorageSlot.Uint256Slot"},"typeName":{"id":3418,"nodeType":"UserDefinedTypeName","pathNode":{"id":3417,"name":"Uint256Slot","nameLocations":["2832:11:23"],"nodeType":"IdentifierPath","referencedDeclaration":3370,"src":"2832:11:23"},"referencedDeclaration":3370,"src":"2832:11:23","typeDescriptions":{"typeIdentifier":"t_struct$_Uint256Slot_$3370_storage_ptr","typeString":"struct StorageSlot.Uint256Slot"}},"visibility":"internal"}],"src":"2831:23:23"},"scope":3479,"src":"2771:167:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3433,"nodeType":"Block","src":"3121:83:23","statements":[{"AST":{"nativeSrc":"3157:40:23","nodeType":"YulBlock","src":"3157:40:23","statements":[{"nativeSrc":"3172:14:23","nodeType":"YulAssignment","src":"3172:14:23","value":{"name":"slot","nativeSrc":"3182:4:23","nodeType":"YulIdentifier","src":"3182:4:23"},"variableNames":[{"name":"r.slot","nativeSrc":"3172:6:23","nodeType":"YulIdentifier","src":"3172:6:23"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":3430,"isOffset":false,"isSlot":true,"src":"3172:6:23","suffix":"slot","valueSize":1},{"declaration":3426,"isOffset":false,"isSlot":false,"src":"3182:4:23","valueSize":1}],"flags":["memory-safe"],"id":3432,"nodeType":"InlineAssembly","src":"3132:65:23"}]},"documentation":{"id":3424,"nodeType":"StructuredDocumentation","src":"2946:87:23","text":" @dev Returns a `Int256Slot` with member `value` located at `slot`."},"id":3434,"implemented":true,"kind":"function","modifiers":[],"name":"getInt256Slot","nameLocation":"3048:13:23","nodeType":"FunctionDefinition","parameters":{"id":3427,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3426,"mutability":"mutable","name":"slot","nameLocation":"3070:4:23","nodeType":"VariableDeclaration","scope":3434,"src":"3062:12:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3425,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3062:7:23","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3061:14:23"},"returnParameters":{"id":3431,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3430,"mutability":"mutable","name":"r","nameLocation":"3118:1:23","nodeType":"VariableDeclaration","scope":3434,"src":"3099:20:23","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Int256Slot_$3373_storage_ptr","typeString":"struct StorageSlot.Int256Slot"},"typeName":{"id":3429,"nodeType":"UserDefinedTypeName","pathNode":{"id":3428,"name":"Int256Slot","nameLocations":["3099:10:23"],"nodeType":"IdentifierPath","referencedDeclaration":3373,"src":"3099:10:23"},"referencedDeclaration":3373,"src":"3099:10:23","typeDescriptions":{"typeIdentifier":"t_struct$_Int256Slot_$3373_storage_ptr","typeString":"struct StorageSlot.Int256Slot"}},"visibility":"internal"}],"src":"3098:22:23"},"scope":3479,"src":"3039:165:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3444,"nodeType":"Block","src":"3387:83:23","statements":[{"AST":{"nativeSrc":"3423:40:23","nodeType":"YulBlock","src":"3423:40:23","statements":[{"nativeSrc":"3438:14:23","nodeType":"YulAssignment","src":"3438:14:23","value":{"name":"slot","nativeSrc":"3448:4:23","nodeType":"YulIdentifier","src":"3448:4:23"},"variableNames":[{"name":"r.slot","nativeSrc":"3438:6:23","nodeType":"YulIdentifier","src":"3438:6:23"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":3441,"isOffset":false,"isSlot":true,"src":"3438:6:23","suffix":"slot","valueSize":1},{"declaration":3437,"isOffset":false,"isSlot":false,"src":"3448:4:23","valueSize":1}],"flags":["memory-safe"],"id":3443,"nodeType":"InlineAssembly","src":"3398:65:23"}]},"documentation":{"id":3435,"nodeType":"StructuredDocumentation","src":"3212:87:23","text":" @dev Returns a `StringSlot` with member `value` located at `slot`."},"id":3445,"implemented":true,"kind":"function","modifiers":[],"name":"getStringSlot","nameLocation":"3314:13:23","nodeType":"FunctionDefinition","parameters":{"id":3438,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3437,"mutability":"mutable","name":"slot","nameLocation":"3336:4:23","nodeType":"VariableDeclaration","scope":3445,"src":"3328:12:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3436,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3328:7:23","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3327:14:23"},"returnParameters":{"id":3442,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3441,"mutability":"mutable","name":"r","nameLocation":"3384:1:23","nodeType":"VariableDeclaration","scope":3445,"src":"3365:20:23","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_StringSlot_$3376_storage_ptr","typeString":"struct StorageSlot.StringSlot"},"typeName":{"id":3440,"nodeType":"UserDefinedTypeName","pathNode":{"id":3439,"name":"StringSlot","nameLocations":["3365:10:23"],"nodeType":"IdentifierPath","referencedDeclaration":3376,"src":"3365:10:23"},"referencedDeclaration":3376,"src":"3365:10:23","typeDescriptions":{"typeIdentifier":"t_struct$_StringSlot_$3376_storage_ptr","typeString":"struct StorageSlot.StringSlot"}},"visibility":"internal"}],"src":"3364:22:23"},"scope":3479,"src":"3305:165:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3455,"nodeType":"Block","src":"3677:89:23","statements":[{"AST":{"nativeSrc":"3713:46:23","nodeType":"YulBlock","src":"3713:46:23","statements":[{"nativeSrc":"3728:20:23","nodeType":"YulAssignment","src":"3728:20:23","value":{"name":"store.slot","nativeSrc":"3738:10:23","nodeType":"YulIdentifier","src":"3738:10:23"},"variableNames":[{"name":"r.slot","nativeSrc":"3728:6:23","nodeType":"YulIdentifier","src":"3728:6:23"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":3452,"isOffset":false,"isSlot":true,"src":"3728:6:23","suffix":"slot","valueSize":1},{"declaration":3448,"isOffset":false,"isSlot":true,"src":"3738:10:23","suffix":"slot","valueSize":1}],"flags":["memory-safe"],"id":3454,"nodeType":"InlineAssembly","src":"3688:71:23"}]},"documentation":{"id":3446,"nodeType":"StructuredDocumentation","src":"3478:103:23","text":" @dev Returns an `StringSlot` representation of the string storage pointer `store`."},"id":3456,"implemented":true,"kind":"function","modifiers":[],"name":"getStringSlot","nameLocation":"3596:13:23","nodeType":"FunctionDefinition","parameters":{"id":3449,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3448,"mutability":"mutable","name":"store","nameLocation":"3625:5:23","nodeType":"VariableDeclaration","scope":3456,"src":"3610:20:23","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":3447,"name":"string","nodeType":"ElementaryTypeName","src":"3610:6:23","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3609:22:23"},"returnParameters":{"id":3453,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3452,"mutability":"mutable","name":"r","nameLocation":"3674:1:23","nodeType":"VariableDeclaration","scope":3456,"src":"3655:20:23","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_StringSlot_$3376_storage_ptr","typeString":"struct StorageSlot.StringSlot"},"typeName":{"id":3451,"nodeType":"UserDefinedTypeName","pathNode":{"id":3450,"name":"StringSlot","nameLocations":["3655:10:23"],"nodeType":"IdentifierPath","referencedDeclaration":3376,"src":"3655:10:23"},"referencedDeclaration":3376,"src":"3655:10:23","typeDescriptions":{"typeIdentifier":"t_struct$_StringSlot_$3376_storage_ptr","typeString":"struct StorageSlot.StringSlot"}},"visibility":"internal"}],"src":"3654:22:23"},"scope":3479,"src":"3587:179:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3466,"nodeType":"Block","src":"3946:83:23","statements":[{"AST":{"nativeSrc":"3982:40:23","nodeType":"YulBlock","src":"3982:40:23","statements":[{"nativeSrc":"3997:14:23","nodeType":"YulAssignment","src":"3997:14:23","value":{"name":"slot","nativeSrc":"4007:4:23","nodeType":"YulIdentifier","src":"4007:4:23"},"variableNames":[{"name":"r.slot","nativeSrc":"3997:6:23","nodeType":"YulIdentifier","src":"3997:6:23"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":3463,"isOffset":false,"isSlot":true,"src":"3997:6:23","suffix":"slot","valueSize":1},{"declaration":3459,"isOffset":false,"isSlot":false,"src":"4007:4:23","valueSize":1}],"flags":["memory-safe"],"id":3465,"nodeType":"InlineAssembly","src":"3957:65:23"}]},"documentation":{"id":3457,"nodeType":"StructuredDocumentation","src":"3774:86:23","text":" @dev Returns a `BytesSlot` with member `value` located at `slot`."},"id":3467,"implemented":true,"kind":"function","modifiers":[],"name":"getBytesSlot","nameLocation":"3875:12:23","nodeType":"FunctionDefinition","parameters":{"id":3460,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3459,"mutability":"mutable","name":"slot","nameLocation":"3896:4:23","nodeType":"VariableDeclaration","scope":3467,"src":"3888:12:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3458,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3888:7:23","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3887:14:23"},"returnParameters":{"id":3464,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3463,"mutability":"mutable","name":"r","nameLocation":"3943:1:23","nodeType":"VariableDeclaration","scope":3467,"src":"3925:19:23","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_BytesSlot_$3379_storage_ptr","typeString":"struct StorageSlot.BytesSlot"},"typeName":{"id":3462,"nodeType":"UserDefinedTypeName","pathNode":{"id":3461,"name":"BytesSlot","nameLocations":["3925:9:23"],"nodeType":"IdentifierPath","referencedDeclaration":3379,"src":"3925:9:23"},"referencedDeclaration":3379,"src":"3925:9:23","typeDescriptions":{"typeIdentifier":"t_struct$_BytesSlot_$3379_storage_ptr","typeString":"struct StorageSlot.BytesSlot"}},"visibility":"internal"}],"src":"3924:21:23"},"scope":3479,"src":"3866:163:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3477,"nodeType":"Block","src":"4231:89:23","statements":[{"AST":{"nativeSrc":"4267:46:23","nodeType":"YulBlock","src":"4267:46:23","statements":[{"nativeSrc":"4282:20:23","nodeType":"YulAssignment","src":"4282:20:23","value":{"name":"store.slot","nativeSrc":"4292:10:23","nodeType":"YulIdentifier","src":"4292:10:23"},"variableNames":[{"name":"r.slot","nativeSrc":"4282:6:23","nodeType":"YulIdentifier","src":"4282:6:23"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":3474,"isOffset":false,"isSlot":true,"src":"4282:6:23","suffix":"slot","valueSize":1},{"declaration":3470,"isOffset":false,"isSlot":true,"src":"4292:10:23","suffix":"slot","valueSize":1}],"flags":["memory-safe"],"id":3476,"nodeType":"InlineAssembly","src":"4242:71:23"}]},"documentation":{"id":3468,"nodeType":"StructuredDocumentation","src":"4037:101:23","text":" @dev Returns an `BytesSlot` representation of the bytes storage pointer `store`."},"id":3478,"implemented":true,"kind":"function","modifiers":[],"name":"getBytesSlot","nameLocation":"4153:12:23","nodeType":"FunctionDefinition","parameters":{"id":3471,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3470,"mutability":"mutable","name":"store","nameLocation":"4180:5:23","nodeType":"VariableDeclaration","scope":3478,"src":"4166:19:23","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":3469,"name":"bytes","nodeType":"ElementaryTypeName","src":"4166:5:23","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4165:21:23"},"returnParameters":{"id":3475,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3474,"mutability":"mutable","name":"r","nameLocation":"4228:1:23","nodeType":"VariableDeclaration","scope":3478,"src":"4210:19:23","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_BytesSlot_$3379_storage_ptr","typeString":"struct StorageSlot.BytesSlot"},"typeName":{"id":3473,"nodeType":"UserDefinedTypeName","pathNode":{"id":3472,"name":"BytesSlot","nameLocations":["4210:9:23"],"nodeType":"IdentifierPath","referencedDeclaration":3379,"src":"4210:9:23"},"referencedDeclaration":3379,"src":"4210:9:23","typeDescriptions":{"typeIdentifier":"t_struct$_BytesSlot_$3379_storage_ptr","typeString":"struct StorageSlot.BytesSlot"}},"visibility":"internal"}],"src":"4209:21:23"},"scope":3479,"src":"4144:176:23","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":3480,"src":"1440:2883:23","usedErrors":[],"usedEvents":[]}],"src":"197:4128:23"},"id":23},"@openzeppelin/contracts/utils/Strings.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Strings.sol","exportedSymbols":{"Math":[6948],"SafeCast":[8713],"SignedMath":[8857],"Strings":[4881]},"id":4882,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":3481,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"104:24:24"},{"absolutePath":"@openzeppelin/contracts/utils/math/Math.sol","file":"./math/Math.sol","id":3483,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4882,"sourceUnit":6949,"src":"132:37:24","symbolAliases":[{"foreign":{"id":3482,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6948,"src":"140:4:24","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/math/SafeCast.sol","file":"./math/SafeCast.sol","id":3485,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4882,"sourceUnit":8714,"src":"171:45:24","symbolAliases":[{"foreign":{"id":3484,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8713,"src":"179:8:24","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/math/SignedMath.sol","file":"./math/SignedMath.sol","id":3487,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4882,"sourceUnit":8858,"src":"218:49:24","symbolAliases":[{"foreign":{"id":3486,"name":"SignedMath","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8857,"src":"226:10:24","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"Strings","contractDependencies":[],"contractKind":"library","documentation":{"id":3488,"nodeType":"StructuredDocumentation","src":"271:36:24","text":" @dev String operations."},"fullyImplemented":true,"id":4881,"linearizedBaseContracts":[4881],"name":"Strings","nameLocation":"317:7:24","nodeType":"ContractDefinition","nodes":[{"global":false,"id":3490,"libraryName":{"id":3489,"name":"SafeCast","nameLocations":["338:8:24"],"nodeType":"IdentifierPath","referencedDeclaration":8713,"src":"338:8:24"},"nodeType":"UsingForDirective","src":"332:21:24"},{"constant":true,"id":3493,"mutability":"constant","name":"HEX_DIGITS","nameLocation":"386:10:24","nodeType":"VariableDeclaration","scope":4881,"src":"361:56:24","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"},"typeName":{"id":3491,"name":"bytes16","nodeType":"ElementaryTypeName","src":"361:7:24","typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"}},"value":{"hexValue":"30313233343536373839616263646566","id":3492,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"399:18:24","typeDescriptions":{"typeIdentifier":"t_stringliteral_cb29997ed99ead0db59ce4d12b7d3723198c827273e5796737c926d78019c39f","typeString":"literal_string \"0123456789abcdef\""},"value":"0123456789abcdef"},"visibility":"private"},{"constant":true,"id":3496,"mutability":"constant","name":"ADDRESS_LENGTH","nameLocation":"447:14:24","nodeType":"VariableDeclaration","scope":4881,"src":"424:42:24","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":3494,"name":"uint8","nodeType":"ElementaryTypeName","src":"424:5:24","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"value":{"hexValue":"3230","id":3495,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"464:2:24","typeDescriptions":{"typeIdentifier":"t_rational_20_by_1","typeString":"int_const 20"},"value":"20"},"visibility":"private"},{"constant":true,"id":3532,"mutability":"constant","name":"SPECIAL_CHARS_LOOKUP","nameLocation":"498:20:24","nodeType":"VariableDeclaration","scope":4881,"src":"473:309:24","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3497,"name":"uint256","nodeType":"ElementaryTypeName","src":"473:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"commonType":{"typeIdentifier":"t_rational_4951760157141521116776380160_by_1","typeString":"int_const 4951760157141521116776380160"},"id":3531,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_rational_17179883264_by_1","typeString":"int_const 17179883264"},"id":3526,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_rational_14080_by_1","typeString":"int_const 14080"},"id":3521,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_rational_5888_by_1","typeString":"int_const 5888"},"id":3516,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_rational_1792_by_1","typeString":"int_const 1792"},"id":3511,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_rational_768_by_1","typeString":"int_const 768"},"id":3506,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"},"id":3500,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":3498,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"531:1:24","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"30783038","id":3499,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"536:4:24","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"0x08"},"src":"531:9:24","typeDescriptions":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"}}],"id":3501,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"530:11:24","typeDescriptions":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_512_by_1","typeString":"int_const 512"},"id":3504,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":3502,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"571:1:24","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"30783039","id":3503,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"576:4:24","typeDescriptions":{"typeIdentifier":"t_rational_9_by_1","typeString":"int_const 9"},"value":"0x09"},"src":"571:9:24","typeDescriptions":{"typeIdentifier":"t_rational_512_by_1","typeString":"int_const 512"}}],"id":3505,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"570:11:24","typeDescriptions":{"typeIdentifier":"t_rational_512_by_1","typeString":"int_const 512"}},"src":"530:51:24","typeDescriptions":{"typeIdentifier":"t_rational_768_by_1","typeString":"int_const 768"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_1024_by_1","typeString":"int_const 1024"},"id":3509,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":3507,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"605:1:24","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"30783061","id":3508,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"610:4:24","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"0x0a"},"src":"605:9:24","typeDescriptions":{"typeIdentifier":"t_rational_1024_by_1","typeString":"int_const 1024"}}],"id":3510,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"604:11:24","typeDescriptions":{"typeIdentifier":"t_rational_1024_by_1","typeString":"int_const 1024"}},"src":"530:85:24","typeDescriptions":{"typeIdentifier":"t_rational_1792_by_1","typeString":"int_const 1792"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_4096_by_1","typeString":"int_const 4096"},"id":3514,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":3512,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"643:1:24","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"30783063","id":3513,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"648:4:24","typeDescriptions":{"typeIdentifier":"t_rational_12_by_1","typeString":"int_const 12"},"value":"0x0c"},"src":"643:9:24","typeDescriptions":{"typeIdentifier":"t_rational_4096_by_1","typeString":"int_const 4096"}}],"id":3515,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"642:11:24","typeDescriptions":{"typeIdentifier":"t_rational_4096_by_1","typeString":"int_const 4096"}},"src":"530:123:24","typeDescriptions":{"typeIdentifier":"t_rational_5888_by_1","typeString":"int_const 5888"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_8192_by_1","typeString":"int_const 8192"},"id":3519,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":3517,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"683:1:24","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"30783064","id":3518,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"688:4:24","typeDescriptions":{"typeIdentifier":"t_rational_13_by_1","typeString":"int_const 13"},"value":"0x0d"},"src":"683:9:24","typeDescriptions":{"typeIdentifier":"t_rational_8192_by_1","typeString":"int_const 8192"}}],"id":3520,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"682:11:24","typeDescriptions":{"typeIdentifier":"t_rational_8192_by_1","typeString":"int_const 8192"}},"src":"530:163:24","typeDescriptions":{"typeIdentifier":"t_rational_14080_by_1","typeString":"int_const 14080"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_17179869184_by_1","typeString":"int_const 17179869184"},"id":3524,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":3522,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"729:1:24","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"30783232","id":3523,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"734:4:24","typeDescriptions":{"typeIdentifier":"t_rational_34_by_1","typeString":"int_const 34"},"value":"0x22"},"src":"729:9:24","typeDescriptions":{"typeIdentifier":"t_rational_17179869184_by_1","typeString":"int_const 17179869184"}}],"id":3525,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"728:11:24","typeDescriptions":{"typeIdentifier":"t_rational_17179869184_by_1","typeString":"int_const 17179869184"}},"src":"530:209:24","typeDescriptions":{"typeIdentifier":"t_rational_17179883264_by_1","typeString":"int_const 17179883264"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_4951760157141521099596496896_by_1","typeString":"int_const 4951760157141521099596496896"},"id":3529,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":3527,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"772:1:24","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"30783563","id":3528,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"777:4:24","typeDescriptions":{"typeIdentifier":"t_rational_92_by_1","typeString":"int_const 92"},"value":"0x5c"},"src":"772:9:24","typeDescriptions":{"typeIdentifier":"t_rational_4951760157141521099596496896_by_1","typeString":"int_const 4951760157141521099596496896"}}],"id":3530,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"771:11:24","typeDescriptions":{"typeIdentifier":"t_rational_4951760157141521099596496896_by_1","typeString":"int_const 4951760157141521099596496896"}},"src":"530:252:24","typeDescriptions":{"typeIdentifier":"t_rational_4951760157141521116776380160_by_1","typeString":"int_const 4951760157141521116776380160"}},"visibility":"private"},{"documentation":{"id":3533,"nodeType":"StructuredDocumentation","src":"804:83:24","text":" @dev The `value` string doesn't fit in the specified `length`."},"errorSelector":"e22e27eb","id":3539,"name":"StringsInsufficientHexLength","nameLocation":"899:28:24","nodeType":"ErrorDefinition","parameters":{"id":3538,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3535,"mutability":"mutable","name":"value","nameLocation":"936:5:24","nodeType":"VariableDeclaration","scope":3539,"src":"928:13:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3534,"name":"uint256","nodeType":"ElementaryTypeName","src":"928:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3537,"mutability":"mutable","name":"length","nameLocation":"951:6:24","nodeType":"VariableDeclaration","scope":3539,"src":"943:14:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3536,"name":"uint256","nodeType":"ElementaryTypeName","src":"943:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"927:31:24"},"src":"893:66:24"},{"documentation":{"id":3540,"nodeType":"StructuredDocumentation","src":"967:110:24","text":" @dev The string being parsed contains characters that are not in scope of the given base."},"errorSelector":"94e2737e","id":3542,"name":"StringsInvalidChar","nameLocation":"1089:18:24","nodeType":"ErrorDefinition","parameters":{"id":3541,"nodeType":"ParameterList","parameters":[],"src":"1107:2:24"},"src":"1083:27:24"},{"documentation":{"id":3543,"nodeType":"StructuredDocumentation","src":"1118:86:24","text":" @dev The string being parsed is not a properly formatted address."},"errorSelector":"1d15ae44","id":3545,"name":"StringsInvalidAddressFormat","nameLocation":"1216:27:24","nodeType":"ErrorDefinition","parameters":{"id":3544,"nodeType":"ParameterList","parameters":[],"src":"1243:2:24"},"src":"1210:36:24"},{"body":{"id":3592,"nodeType":"Block","src":"1423:579:24","statements":[{"id":3591,"nodeType":"UncheckedBlock","src":"1434:561:24","statements":[{"assignments":[3554],"declarations":[{"constant":false,"id":3554,"mutability":"mutable","name":"length","nameLocation":"1467:6:24","nodeType":"VariableDeclaration","scope":3591,"src":"1459:14:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3553,"name":"uint256","nodeType":"ElementaryTypeName","src":"1459:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3561,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3560,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":3557,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3548,"src":"1487:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":3555,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6948,"src":"1476:4:24","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$6948_$","typeString":"type(library Math)"}},"id":3556,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1481:5:24","memberName":"log10","nodeType":"MemberAccess","referencedDeclaration":6780,"src":"1476:10:24","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":3558,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1476:17:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":3559,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1496:1:24","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1476:21:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1459:38:24"},{"assignments":[3563],"declarations":[{"constant":false,"id":3563,"mutability":"mutable","name":"buffer","nameLocation":"1526:6:24","nodeType":"VariableDeclaration","scope":3591,"src":"1512:20:24","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3562,"name":"string","nodeType":"ElementaryTypeName","src":"1512:6:24","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"id":3568,"initialValue":{"arguments":[{"id":3566,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3554,"src":"1546:6:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3565,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"1535:10:24","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) pure returns (string memory)"},"typeName":{"id":3564,"name":"string","nodeType":"ElementaryTypeName","src":"1539:6:24","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}}},"id":3567,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1535:18:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"nodeType":"VariableDeclarationStatement","src":"1512:41:24"},{"assignments":[3570],"declarations":[{"constant":false,"id":3570,"mutability":"mutable","name":"ptr","nameLocation":"1576:3:24","nodeType":"VariableDeclaration","scope":3591,"src":"1568:11:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3569,"name":"uint256","nodeType":"ElementaryTypeName","src":"1568:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3571,"nodeType":"VariableDeclarationStatement","src":"1568:11:24"},{"AST":{"nativeSrc":"1619:69:24","nodeType":"YulBlock","src":"1619:69:24","statements":[{"nativeSrc":"1638:35:24","nodeType":"YulAssignment","src":"1638:35:24","value":{"arguments":[{"name":"buffer","nativeSrc":"1649:6:24","nodeType":"YulIdentifier","src":"1649:6:24"},{"arguments":[{"kind":"number","nativeSrc":"1661:2:24","nodeType":"YulLiteral","src":"1661:2:24","type":"","value":"32"},{"name":"length","nativeSrc":"1665:6:24","nodeType":"YulIdentifier","src":"1665:6:24"}],"functionName":{"name":"add","nativeSrc":"1657:3:24","nodeType":"YulIdentifier","src":"1657:3:24"},"nativeSrc":"1657:15:24","nodeType":"YulFunctionCall","src":"1657:15:24"}],"functionName":{"name":"add","nativeSrc":"1645:3:24","nodeType":"YulIdentifier","src":"1645:3:24"},"nativeSrc":"1645:28:24","nodeType":"YulFunctionCall","src":"1645:28:24"},"variableNames":[{"name":"ptr","nativeSrc":"1638:3:24","nodeType":"YulIdentifier","src":"1638:3:24"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":3563,"isOffset":false,"isSlot":false,"src":"1649:6:24","valueSize":1},{"declaration":3554,"isOffset":false,"isSlot":false,"src":"1665:6:24","valueSize":1},{"declaration":3570,"isOffset":false,"isSlot":false,"src":"1638:3:24","valueSize":1}],"flags":["memory-safe"],"id":3572,"nodeType":"InlineAssembly","src":"1594:94:24"},{"body":{"id":3587,"nodeType":"Block","src":"1715:241:24","statements":[{"expression":{"id":3575,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"--","prefix":false,"src":"1734:5:24","subExpression":{"id":3574,"name":"ptr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3570,"src":"1734:3:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3576,"nodeType":"ExpressionStatement","src":"1734:5:24"},{"AST":{"nativeSrc":"1783:88:24","nodeType":"YulBlock","src":"1783:88:24","statements":[{"expression":{"arguments":[{"name":"ptr","nativeSrc":"1814:3:24","nodeType":"YulIdentifier","src":"1814:3:24"},{"arguments":[{"arguments":[{"name":"value","nativeSrc":"1828:5:24","nodeType":"YulIdentifier","src":"1828:5:24"},{"kind":"number","nativeSrc":"1835:2:24","nodeType":"YulLiteral","src":"1835:2:24","type":"","value":"10"}],"functionName":{"name":"mod","nativeSrc":"1824:3:24","nodeType":"YulIdentifier","src":"1824:3:24"},"nativeSrc":"1824:14:24","nodeType":"YulFunctionCall","src":"1824:14:24"},{"name":"HEX_DIGITS","nativeSrc":"1840:10:24","nodeType":"YulIdentifier","src":"1840:10:24"}],"functionName":{"name":"byte","nativeSrc":"1819:4:24","nodeType":"YulIdentifier","src":"1819:4:24"},"nativeSrc":"1819:32:24","nodeType":"YulFunctionCall","src":"1819:32:24"}],"functionName":{"name":"mstore8","nativeSrc":"1806:7:24","nodeType":"YulIdentifier","src":"1806:7:24"},"nativeSrc":"1806:46:24","nodeType":"YulFunctionCall","src":"1806:46:24"},"nativeSrc":"1806:46:24","nodeType":"YulExpressionStatement","src":"1806:46:24"}]},"evmVersion":"paris","externalReferences":[{"declaration":3493,"isOffset":false,"isSlot":false,"src":"1840:10:24","valueSize":1},{"declaration":3570,"isOffset":false,"isSlot":false,"src":"1814:3:24","valueSize":1},{"declaration":3548,"isOffset":false,"isSlot":false,"src":"1828:5:24","valueSize":1}],"flags":["memory-safe"],"id":3577,"nodeType":"InlineAssembly","src":"1758:113:24"},{"expression":{"id":3580,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3578,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3548,"src":"1889:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"hexValue":"3130","id":3579,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1898:2:24","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"src":"1889:11:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3581,"nodeType":"ExpressionStatement","src":"1889:11:24"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3584,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3582,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3548,"src":"1923:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":3583,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1932:1:24","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1923:10:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3586,"nodeType":"IfStatement","src":"1919:21:24","trueBody":{"id":3585,"nodeType":"Break","src":"1935:5:24"}}]},"condition":{"hexValue":"74727565","id":3573,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1709:4:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"id":3588,"nodeType":"WhileStatement","src":"1702:254:24"},{"expression":{"id":3589,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3563,"src":"1977:6:24","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":3552,"id":3590,"nodeType":"Return","src":"1970:13:24"}]}]},"documentation":{"id":3546,"nodeType":"StructuredDocumentation","src":"1254:92:24","text":" @dev Converts a `uint256` to its ASCII `string` decimal representation."},"id":3593,"implemented":true,"kind":"function","modifiers":[],"name":"toString","nameLocation":"1361:8:24","nodeType":"FunctionDefinition","parameters":{"id":3549,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3548,"mutability":"mutable","name":"value","nameLocation":"1378:5:24","nodeType":"VariableDeclaration","scope":3593,"src":"1370:13:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3547,"name":"uint256","nodeType":"ElementaryTypeName","src":"1370:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1369:15:24"},"returnParameters":{"id":3552,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3551,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3593,"src":"1408:13:24","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3550,"name":"string","nodeType":"ElementaryTypeName","src":"1408:6:24","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1407:15:24"},"scope":4881,"src":"1352:650:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3618,"nodeType":"Block","src":"2183:94:24","statements":[{"expression":{"arguments":[{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":3606,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3604,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3596,"src":"2215:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"30","id":3605,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2223:1:24","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2215:9:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"","id":3608,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2233:2:24","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""},"id":3609,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"2215:20:24","trueExpression":{"hexValue":"2d","id":3607,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2227:3:24","typeDescriptions":{"typeIdentifier":"t_stringliteral_d3b8281179950f98149eefdb158d0e1acb56f56e8e343aa9fefafa7e36959561","typeString":"literal_string \"-\""},"value":"-"},"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"arguments":[{"arguments":[{"id":3613,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3596,"src":"2261:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"expression":{"id":3611,"name":"SignedMath","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8857,"src":"2246:10:24","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SignedMath_$8857_$","typeString":"type(library SignedMath)"}},"id":3612,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2257:3:24","memberName":"abs","nodeType":"MemberAccess","referencedDeclaration":8856,"src":"2246:14:24","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_int256_$returns$_t_uint256_$","typeString":"function (int256) pure returns (uint256)"}},"id":3614,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2246:21:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3610,"name":"toString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3593,"src":"2237:8:24","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) pure returns (string memory)"}},"id":3615,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2237:31:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"expression":{"id":3602,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2201:6:24","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":3601,"name":"string","nodeType":"ElementaryTypeName","src":"2201:6:24","typeDescriptions":{}}},"id":3603,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2208:6:24","memberName":"concat","nodeType":"MemberAccess","src":"2201:13:24","typeDescriptions":{"typeIdentifier":"t_function_stringconcat_pure$__$returns$_t_string_memory_ptr_$","typeString":"function () pure returns (string memory)"}},"id":3616,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2201:68:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":3600,"id":3617,"nodeType":"Return","src":"2194:75:24"}]},"documentation":{"id":3594,"nodeType":"StructuredDocumentation","src":"2010:91:24","text":" @dev Converts a `int256` to its ASCII `string` decimal representation."},"id":3619,"implemented":true,"kind":"function","modifiers":[],"name":"toStringSigned","nameLocation":"2116:14:24","nodeType":"FunctionDefinition","parameters":{"id":3597,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3596,"mutability":"mutable","name":"value","nameLocation":"2138:5:24","nodeType":"VariableDeclaration","scope":3619,"src":"2131:12:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3595,"name":"int256","nodeType":"ElementaryTypeName","src":"2131:6:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"2130:14:24"},"returnParameters":{"id":3600,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3599,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3619,"src":"2168:13:24","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3598,"name":"string","nodeType":"ElementaryTypeName","src":"2168:6:24","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2167:15:24"},"scope":4881,"src":"2107:170:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3638,"nodeType":"Block","src":"2461:104:24","statements":[{"id":3637,"nodeType":"UncheckedBlock","src":"2472:86:24","statements":[{"expression":{"arguments":[{"id":3628,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3622,"src":"2516:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3634,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":3631,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3622,"src":"2535:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":3629,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6948,"src":"2523:4:24","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$6948_$","typeString":"type(library Math)"}},"id":3630,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2528:6:24","memberName":"log256","nodeType":"MemberAccess","referencedDeclaration":6891,"src":"2523:11:24","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":3632,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2523:18:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":3633,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2544:1:24","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"2523:22:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3627,"name":"toHexString","nodeType":"Identifier","overloadedDeclarations":[3639,3722,3742],"referencedDeclaration":3722,"src":"2504:11:24","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256,uint256) pure returns (string memory)"}},"id":3635,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2504:42:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":3626,"id":3636,"nodeType":"Return","src":"2497:49:24"}]}]},"documentation":{"id":3620,"nodeType":"StructuredDocumentation","src":"2285:96:24","text":" @dev Converts a `uint256` to its ASCII `string` hexadecimal representation."},"id":3639,"implemented":true,"kind":"function","modifiers":[],"name":"toHexString","nameLocation":"2396:11:24","nodeType":"FunctionDefinition","parameters":{"id":3623,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3622,"mutability":"mutable","name":"value","nameLocation":"2416:5:24","nodeType":"VariableDeclaration","scope":3639,"src":"2408:13:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3621,"name":"uint256","nodeType":"ElementaryTypeName","src":"2408:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2407:15:24"},"returnParameters":{"id":3626,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3625,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3639,"src":"2446:13:24","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3624,"name":"string","nodeType":"ElementaryTypeName","src":"2446:6:24","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2445:15:24"},"scope":4881,"src":"2387:178:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3721,"nodeType":"Block","src":"2783:448:24","statements":[{"assignments":[3650],"declarations":[{"constant":false,"id":3650,"mutability":"mutable","name":"localValue","nameLocation":"2802:10:24","nodeType":"VariableDeclaration","scope":3721,"src":"2794:18:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3649,"name":"uint256","nodeType":"ElementaryTypeName","src":"2794:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3652,"initialValue":{"id":3651,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3642,"src":"2815:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2794:26:24"},{"assignments":[3654],"declarations":[{"constant":false,"id":3654,"mutability":"mutable","name":"buffer","nameLocation":"2844:6:24","nodeType":"VariableDeclaration","scope":3721,"src":"2831:19:24","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3653,"name":"bytes","nodeType":"ElementaryTypeName","src":"2831:5:24","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":3663,"initialValue":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3661,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3659,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":3657,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2863:1:24","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3658,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3644,"src":"2867:6:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2863:10:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"32","id":3660,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2876:1:24","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"2863:14:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3656,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"2853:9:24","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$","typeString":"function (uint256) pure returns (bytes memory)"},"typeName":{"id":3655,"name":"bytes","nodeType":"ElementaryTypeName","src":"2857:5:24","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}}},"id":3662,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2853:25:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"2831:47:24"},{"expression":{"id":3668,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":3664,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3654,"src":"2889:6:24","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3666,"indexExpression":{"hexValue":"30","id":3665,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2896:1:24","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2889:9:24","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"30","id":3667,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2901:3:24","typeDescriptions":{"typeIdentifier":"t_stringliteral_044852b2a670ade5407e78fb2863c51de9fcb96542a07186fe3aeda6bb8a116d","typeString":"literal_string \"0\""},"value":"0"},"src":"2889:15:24","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":3669,"nodeType":"ExpressionStatement","src":"2889:15:24"},{"expression":{"id":3674,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":3670,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3654,"src":"2915:6:24","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3672,"indexExpression":{"hexValue":"31","id":3671,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2922:1:24","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2915:9:24","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"78","id":3673,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2927:3:24","typeDescriptions":{"typeIdentifier":"t_stringliteral_7521d1cadbcfa91eec65aa16715b94ffc1c9654ba57ea2ef1a2127bca1127a83","typeString":"literal_string \"x\""},"value":"x"},"src":"2915:15:24","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":3675,"nodeType":"ExpressionStatement","src":"2915:15:24"},{"body":{"id":3704,"nodeType":"Block","src":"2986:98:24","statements":[{"expression":{"id":3698,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":3690,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3654,"src":"3001:6:24","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3692,"indexExpression":{"id":3691,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3677,"src":"3008:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"3001:9:24","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"baseExpression":{"id":3693,"name":"HEX_DIGITS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3493,"src":"3013:10:24","typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"}},"id":3697,"indexExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3696,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3694,"name":"localValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3650,"src":"3024:10:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"hexValue":"307866","id":3695,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3037:3:24","typeDescriptions":{"typeIdentifier":"t_rational_15_by_1","typeString":"int_const 15"},"value":"0xf"},"src":"3024:16:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3013:28:24","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"src":"3001:40:24","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":3699,"nodeType":"ExpressionStatement","src":"3001:40:24"},{"expression":{"id":3702,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3700,"name":"localValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3650,"src":"3056:10:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"34","id":3701,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3071:1:24","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"3056:16:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3703,"nodeType":"ExpressionStatement","src":"3056:16:24"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3686,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3684,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3677,"src":"2974:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"31","id":3685,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2978:1:24","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"2974:5:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3705,"initializationExpression":{"assignments":[3677],"declarations":[{"constant":false,"id":3677,"mutability":"mutable","name":"i","nameLocation":"2954:1:24","nodeType":"VariableDeclaration","scope":3705,"src":"2946:9:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3676,"name":"uint256","nodeType":"ElementaryTypeName","src":"2946:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3683,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3682,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3680,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":3678,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2958:1:24","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3679,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3644,"src":"2962:6:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2958:10:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":3681,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2971:1:24","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"2958:14:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2946:26:24"},"isSimpleCounterLoop":false,"loopExpression":{"expression":{"id":3688,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"--","prefix":true,"src":"2981:3:24","subExpression":{"id":3687,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3677,"src":"2983:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3689,"nodeType":"ExpressionStatement","src":"2981:3:24"},"nodeType":"ForStatement","src":"2941:143:24"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3708,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3706,"name":"localValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3650,"src":"3098:10:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":3707,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3112:1:24","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3098:15:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3715,"nodeType":"IfStatement","src":"3094:98:24","trueBody":{"id":3714,"nodeType":"Block","src":"3115:77:24","statements":[{"errorCall":{"arguments":[{"id":3710,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3642,"src":"3166:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3711,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3644,"src":"3173:6:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3709,"name":"StringsInsufficientHexLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3539,"src":"3137:28:24","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$_t_uint256_$returns$_t_error_$","typeString":"function (uint256,uint256) pure returns (error)"}},"id":3712,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3137:43:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":3713,"nodeType":"RevertStatement","src":"3130:50:24"}]}},{"expression":{"arguments":[{"id":3718,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3654,"src":"3216:6:24","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":3717,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3209:6:24","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":3716,"name":"string","nodeType":"ElementaryTypeName","src":"3209:6:24","typeDescriptions":{}}},"id":3719,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3209:14:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":3648,"id":3720,"nodeType":"Return","src":"3202:21:24"}]},"documentation":{"id":3640,"nodeType":"StructuredDocumentation","src":"2573:114:24","text":" @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length."},"id":3722,"implemented":true,"kind":"function","modifiers":[],"name":"toHexString","nameLocation":"2702:11:24","nodeType":"FunctionDefinition","parameters":{"id":3645,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3642,"mutability":"mutable","name":"value","nameLocation":"2722:5:24","nodeType":"VariableDeclaration","scope":3722,"src":"2714:13:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3641,"name":"uint256","nodeType":"ElementaryTypeName","src":"2714:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3644,"mutability":"mutable","name":"length","nameLocation":"2737:6:24","nodeType":"VariableDeclaration","scope":3722,"src":"2729:14:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3643,"name":"uint256","nodeType":"ElementaryTypeName","src":"2729:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2713:31:24"},"returnParameters":{"id":3648,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3647,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3722,"src":"2768:13:24","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3646,"name":"string","nodeType":"ElementaryTypeName","src":"2768:6:24","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2767:15:24"},"scope":4881,"src":"2693:538:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3741,"nodeType":"Block","src":"3469:77:24","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[{"id":3735,"name":"addr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3725,"src":"3515:4:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3734,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3507:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":3733,"name":"uint160","nodeType":"ElementaryTypeName","src":"3507:7:24","typeDescriptions":{}}},"id":3736,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3507:13:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":3732,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3499:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":3731,"name":"uint256","nodeType":"ElementaryTypeName","src":"3499:7:24","typeDescriptions":{}}},"id":3737,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3499:22:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3738,"name":"ADDRESS_LENGTH","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3496,"src":"3523:14:24","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint8","typeString":"uint8"}],"id":3730,"name":"toHexString","nodeType":"Identifier","overloadedDeclarations":[3639,3722,3742],"referencedDeclaration":3722,"src":"3487:11:24","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256,uint256) pure returns (string memory)"}},"id":3739,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3487:51:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":3729,"id":3740,"nodeType":"Return","src":"3480:58:24"}]},"documentation":{"id":3723,"nodeType":"StructuredDocumentation","src":"3239:151:24","text":" @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal\n representation."},"id":3742,"implemented":true,"kind":"function","modifiers":[],"name":"toHexString","nameLocation":"3405:11:24","nodeType":"FunctionDefinition","parameters":{"id":3726,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3725,"mutability":"mutable","name":"addr","nameLocation":"3425:4:24","nodeType":"VariableDeclaration","scope":3742,"src":"3417:12:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3724,"name":"address","nodeType":"ElementaryTypeName","src":"3417:7:24","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3416:14:24"},"returnParameters":{"id":3729,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3728,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3742,"src":"3454:13:24","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3727,"name":"string","nodeType":"ElementaryTypeName","src":"3454:6:24","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3453:15:24"},"scope":4881,"src":"3396:150:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3806,"nodeType":"Block","src":"3809:660:24","statements":[{"assignments":[3751],"declarations":[{"constant":false,"id":3751,"mutability":"mutable","name":"buffer","nameLocation":"3833:6:24","nodeType":"VariableDeclaration","scope":3806,"src":"3820:19:24","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3750,"name":"bytes","nodeType":"ElementaryTypeName","src":"3820:5:24","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":3758,"initialValue":{"arguments":[{"arguments":[{"id":3755,"name":"addr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3745,"src":"3860:4:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3754,"name":"toHexString","nodeType":"Identifier","overloadedDeclarations":[3639,3722,3742],"referencedDeclaration":3742,"src":"3848:11:24","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_address_$returns$_t_string_memory_ptr_$","typeString":"function (address) pure returns (string memory)"}},"id":3756,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3848:17:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3753,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3842:5:24","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":3752,"name":"bytes","nodeType":"ElementaryTypeName","src":"3842:5:24","typeDescriptions":{}}},"id":3757,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3842:24:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"3820:46:24"},{"assignments":[3760],"declarations":[{"constant":false,"id":3760,"mutability":"mutable","name":"hashValue","nameLocation":"3962:9:24","nodeType":"VariableDeclaration","scope":3806,"src":"3954:17:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3759,"name":"uint256","nodeType":"ElementaryTypeName","src":"3954:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3761,"nodeType":"VariableDeclarationStatement","src":"3954:17:24"},{"AST":{"nativeSrc":"4007:80:24","nodeType":"YulBlock","src":"4007:80:24","statements":[{"nativeSrc":"4022:54:24","nodeType":"YulAssignment","src":"4022:54:24","value":{"arguments":[{"kind":"number","nativeSrc":"4039:2:24","nodeType":"YulLiteral","src":"4039:2:24","type":"","value":"96"},{"arguments":[{"arguments":[{"name":"buffer","nativeSrc":"4057:6:24","nodeType":"YulIdentifier","src":"4057:6:24"},{"kind":"number","nativeSrc":"4065:4:24","nodeType":"YulLiteral","src":"4065:4:24","type":"","value":"0x22"}],"functionName":{"name":"add","nativeSrc":"4053:3:24","nodeType":"YulIdentifier","src":"4053:3:24"},"nativeSrc":"4053:17:24","nodeType":"YulFunctionCall","src":"4053:17:24"},{"kind":"number","nativeSrc":"4072:2:24","nodeType":"YulLiteral","src":"4072:2:24","type":"","value":"40"}],"functionName":{"name":"keccak256","nativeSrc":"4043:9:24","nodeType":"YulIdentifier","src":"4043:9:24"},"nativeSrc":"4043:32:24","nodeType":"YulFunctionCall","src":"4043:32:24"}],"functionName":{"name":"shr","nativeSrc":"4035:3:24","nodeType":"YulIdentifier","src":"4035:3:24"},"nativeSrc":"4035:41:24","nodeType":"YulFunctionCall","src":"4035:41:24"},"variableNames":[{"name":"hashValue","nativeSrc":"4022:9:24","nodeType":"YulIdentifier","src":"4022:9:24"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":3751,"isOffset":false,"isSlot":false,"src":"4057:6:24","valueSize":1},{"declaration":3760,"isOffset":false,"isSlot":false,"src":"4022:9:24","valueSize":1}],"flags":["memory-safe"],"id":3762,"nodeType":"InlineAssembly","src":"3982:105:24"},{"body":{"id":3799,"nodeType":"Block","src":"4132:298:24","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3786,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3777,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3775,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3773,"name":"hashValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3760,"src":"4240:9:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"hexValue":"307866","id":3774,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4252:3:24","typeDescriptions":{"typeIdentifier":"t_rational_15_by_1","typeString":"int_const 15"},"value":"0xf"},"src":"4240:15:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"37","id":3776,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4258:1:24","typeDescriptions":{"typeIdentifier":"t_rational_7_by_1","typeString":"int_const 7"},"value":"7"},"src":"4240:19:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":3785,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"baseExpression":{"id":3780,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3751,"src":"4269:6:24","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3782,"indexExpression":{"id":3781,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3764,"src":"4276:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4269:9:24","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes1","typeString":"bytes1"}],"id":3779,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4263:5:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":3778,"name":"uint8","nodeType":"ElementaryTypeName","src":"4263:5:24","typeDescriptions":{}}},"id":3783,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4263:16:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"3936","id":3784,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4282:2:24","typeDescriptions":{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},"value":"96"},"src":"4263:21:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"4240:44:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3794,"nodeType":"IfStatement","src":"4236:153:24","trueBody":{"id":3793,"nodeType":"Block","src":"4286:103:24","statements":[{"expression":{"id":3791,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":3787,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3751,"src":"4356:6:24","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3789,"indexExpression":{"id":3788,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3764,"src":"4363:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"4356:9:24","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"^=","rightHandSide":{"hexValue":"30783230","id":3790,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4369:4:24","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"0x20"},"src":"4356:17:24","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":3792,"nodeType":"ExpressionStatement","src":"4356:17:24"}]}},{"expression":{"id":3797,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3795,"name":"hashValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3760,"src":"4403:9:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"34","id":3796,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4417:1:24","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"4403:15:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3798,"nodeType":"ExpressionStatement","src":"4403:15:24"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3769,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3767,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3764,"src":"4120:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"31","id":3768,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4124:1:24","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"4120:5:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3800,"initializationExpression":{"assignments":[3764],"declarations":[{"constant":false,"id":3764,"mutability":"mutable","name":"i","nameLocation":"4112:1:24","nodeType":"VariableDeclaration","scope":3800,"src":"4104:9:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3763,"name":"uint256","nodeType":"ElementaryTypeName","src":"4104:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3766,"initialValue":{"hexValue":"3431","id":3765,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4116:2:24","typeDescriptions":{"typeIdentifier":"t_rational_41_by_1","typeString":"int_const 41"},"value":"41"},"nodeType":"VariableDeclarationStatement","src":"4104:14:24"},"isSimpleCounterLoop":false,"loopExpression":{"expression":{"id":3771,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"--","prefix":true,"src":"4127:3:24","subExpression":{"id":3770,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3764,"src":"4129:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3772,"nodeType":"ExpressionStatement","src":"4127:3:24"},"nodeType":"ForStatement","src":"4099:331:24"},{"expression":{"arguments":[{"id":3803,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3751,"src":"4454:6:24","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":3802,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4447:6:24","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":3801,"name":"string","nodeType":"ElementaryTypeName","src":"4447:6:24","typeDescriptions":{}}},"id":3804,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4447:14:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":3749,"id":3805,"nodeType":"Return","src":"4440:21:24"}]},"documentation":{"id":3743,"nodeType":"StructuredDocumentation","src":"3554:168:24","text":" @dev Converts an `address` with fixed length of 20 bytes to its checksummed ASCII `string` hexadecimal\n representation, according to EIP-55."},"id":3807,"implemented":true,"kind":"function","modifiers":[],"name":"toChecksumHexString","nameLocation":"3737:19:24","nodeType":"FunctionDefinition","parameters":{"id":3746,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3745,"mutability":"mutable","name":"addr","nameLocation":"3765:4:24","nodeType":"VariableDeclaration","scope":3807,"src":"3757:12:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3744,"name":"address","nodeType":"ElementaryTypeName","src":"3757:7:24","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3756:14:24"},"returnParameters":{"id":3749,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3748,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3807,"src":"3794:13:24","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3747,"name":"string","nodeType":"ElementaryTypeName","src":"3794:6:24","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3793:15:24"},"scope":4881,"src":"3728:741:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3843,"nodeType":"Block","src":"4629:106:24","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3841,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3827,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":3819,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3810,"src":"4653:1:24","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3818,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4647:5:24","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":3817,"name":"bytes","nodeType":"ElementaryTypeName","src":"4647:5:24","typeDescriptions":{}}},"id":3820,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4647:8:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3821,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4656:6:24","memberName":"length","nodeType":"MemberAccess","src":"4647:15:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":3824,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3812,"src":"4672:1:24","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3823,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4666:5:24","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":3822,"name":"bytes","nodeType":"ElementaryTypeName","src":"4666:5:24","typeDescriptions":{}}},"id":3825,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4666:8:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3826,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4675:6:24","memberName":"length","nodeType":"MemberAccess","src":"4666:15:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4647:34:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":3840,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"id":3831,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3810,"src":"4701:1:24","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3830,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4695:5:24","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":3829,"name":"bytes","nodeType":"ElementaryTypeName","src":"4695:5:24","typeDescriptions":{}}},"id":3832,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4695:8:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":3828,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"4685:9:24","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":3833,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4685:19:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"arguments":[{"id":3837,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3812,"src":"4724:1:24","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3836,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4718:5:24","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":3835,"name":"bytes","nodeType":"ElementaryTypeName","src":"4718:5:24","typeDescriptions":{}}},"id":3838,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4718:8:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":3834,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"4708:9:24","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":3839,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4708:19:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"4685:42:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"4647:80:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":3816,"id":3842,"nodeType":"Return","src":"4640:87:24"}]},"documentation":{"id":3808,"nodeType":"StructuredDocumentation","src":"4477:68:24","text":" @dev Returns true if the two strings are equal."},"id":3844,"implemented":true,"kind":"function","modifiers":[],"name":"equal","nameLocation":"4560:5:24","nodeType":"FunctionDefinition","parameters":{"id":3813,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3810,"mutability":"mutable","name":"a","nameLocation":"4580:1:24","nodeType":"VariableDeclaration","scope":3844,"src":"4566:15:24","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3809,"name":"string","nodeType":"ElementaryTypeName","src":"4566:6:24","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":3812,"mutability":"mutable","name":"b","nameLocation":"4597:1:24","nodeType":"VariableDeclaration","scope":3844,"src":"4583:15:24","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3811,"name":"string","nodeType":"ElementaryTypeName","src":"4583:6:24","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"4565:34:24"},"returnParameters":{"id":3816,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3815,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3844,"src":"4623:4:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3814,"name":"bool","nodeType":"ElementaryTypeName","src":"4623:4:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4622:6:24"},"scope":4881,"src":"4551:184:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3862,"nodeType":"Block","src":"5041:66:24","statements":[{"expression":{"arguments":[{"id":3853,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3847,"src":"5069:5:24","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"30","id":3854,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5076:1:24","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"expression":{"arguments":[{"id":3857,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3847,"src":"5085:5:24","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3856,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5079:5:24","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":3855,"name":"bytes","nodeType":"ElementaryTypeName","src":"5079:5:24","typeDescriptions":{}}},"id":3858,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5079:12:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3859,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5092:6:24","memberName":"length","nodeType":"MemberAccess","src":"5079:19:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3852,"name":"parseUint","nodeType":"Identifier","overloadedDeclarations":[3863,3894],"referencedDeclaration":3894,"src":"5059:9:24","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (uint256)"}},"id":3860,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5059:40:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3851,"id":3861,"nodeType":"Return","src":"5052:47:24"}]},"documentation":{"id":3845,"nodeType":"StructuredDocumentation","src":"4743:220:24","text":" @dev Parse a decimal string and returns the value as a `uint256`.\n Requirements:\n - The string must be formatted as `[0-9]*`\n - The result must fit into an `uint256` type"},"id":3863,"implemented":true,"kind":"function","modifiers":[],"name":"parseUint","nameLocation":"4978:9:24","nodeType":"FunctionDefinition","parameters":{"id":3848,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3847,"mutability":"mutable","name":"input","nameLocation":"5002:5:24","nodeType":"VariableDeclaration","scope":3863,"src":"4988:19:24","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3846,"name":"string","nodeType":"ElementaryTypeName","src":"4988:6:24","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"4987:21:24"},"returnParameters":{"id":3851,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3850,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3863,"src":"5032:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3849,"name":"uint256","nodeType":"ElementaryTypeName","src":"5032:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5031:9:24"},"scope":4881,"src":"4969:138:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3893,"nodeType":"Block","src":"5522:157:24","statements":[{"assignments":[3876,3878],"declarations":[{"constant":false,"id":3876,"mutability":"mutable","name":"success","nameLocation":"5539:7:24","nodeType":"VariableDeclaration","scope":3893,"src":"5534:12:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3875,"name":"bool","nodeType":"ElementaryTypeName","src":"5534:4:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3878,"mutability":"mutable","name":"value","nameLocation":"5556:5:24","nodeType":"VariableDeclaration","scope":3893,"src":"5548:13:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3877,"name":"uint256","nodeType":"ElementaryTypeName","src":"5548:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3884,"initialValue":{"arguments":[{"id":3880,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3866,"src":"5578:5:24","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":3881,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3868,"src":"5585:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3882,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3870,"src":"5592:3:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3879,"name":"tryParseUint","nodeType":"Identifier","overloadedDeclarations":[3915,3952],"referencedDeclaration":3952,"src":"5565:12:24","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,uint256)"}},"id":3883,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5565:31:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"5533:63:24"},{"condition":{"id":3886,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"5611:8:24","subExpression":{"id":3885,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3876,"src":"5612:7:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3890,"nodeType":"IfStatement","src":"5607:41:24","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":3887,"name":"StringsInvalidChar","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3542,"src":"5628:18:24","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$_t_error_$","typeString":"function () pure returns (error)"}},"id":3888,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5628:20:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":3889,"nodeType":"RevertStatement","src":"5621:27:24"}},{"expression":{"id":3891,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3878,"src":"5666:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3874,"id":3892,"nodeType":"Return","src":"5659:12:24"}]},"documentation":{"id":3864,"nodeType":"StructuredDocumentation","src":"5115:301:24","text":" @dev Variant of {parseUint-string} that parses a substring of `input` located between position `begin` (included) and\n `end` (excluded).\n Requirements:\n - The substring must be formatted as `[0-9]*`\n - The result must fit into an `uint256` type"},"id":3894,"implemented":true,"kind":"function","modifiers":[],"name":"parseUint","nameLocation":"5431:9:24","nodeType":"FunctionDefinition","parameters":{"id":3871,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3866,"mutability":"mutable","name":"input","nameLocation":"5455:5:24","nodeType":"VariableDeclaration","scope":3894,"src":"5441:19:24","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3865,"name":"string","nodeType":"ElementaryTypeName","src":"5441:6:24","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":3868,"mutability":"mutable","name":"begin","nameLocation":"5470:5:24","nodeType":"VariableDeclaration","scope":3894,"src":"5462:13:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3867,"name":"uint256","nodeType":"ElementaryTypeName","src":"5462:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3870,"mutability":"mutable","name":"end","nameLocation":"5485:3:24","nodeType":"VariableDeclaration","scope":3894,"src":"5477:11:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3869,"name":"uint256","nodeType":"ElementaryTypeName","src":"5477:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5440:49:24"},"returnParameters":{"id":3874,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3873,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3894,"src":"5513:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3872,"name":"uint256","nodeType":"ElementaryTypeName","src":"5513:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5512:9:24"},"scope":4881,"src":"5422:257:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3914,"nodeType":"Block","src":"6007:85:24","statements":[{"expression":{"arguments":[{"id":3905,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3897,"src":"6054:5:24","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"30","id":3906,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6061:1:24","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"expression":{"arguments":[{"id":3909,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3897,"src":"6070:5:24","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3908,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6064:5:24","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":3907,"name":"bytes","nodeType":"ElementaryTypeName","src":"6064:5:24","typeDescriptions":{}}},"id":3910,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6064:12:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3911,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6077:6:24","memberName":"length","nodeType":"MemberAccess","src":"6064:19:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3904,"name":"_tryParseUintUncheckedBounds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4022,"src":"6025:28:24","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,uint256)"}},"id":3912,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6025:59:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":3903,"id":3913,"nodeType":"Return","src":"6018:66:24"}]},"documentation":{"id":3895,"nodeType":"StructuredDocumentation","src":"5687:219:24","text":" @dev Variant of {parseUint-string} that returns false if the parsing fails because of an invalid character.\n NOTE: This function will revert if the result does not fit in a `uint256`."},"id":3915,"implemented":true,"kind":"function","modifiers":[],"name":"tryParseUint","nameLocation":"5921:12:24","nodeType":"FunctionDefinition","parameters":{"id":3898,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3897,"mutability":"mutable","name":"input","nameLocation":"5948:5:24","nodeType":"VariableDeclaration","scope":3915,"src":"5934:19:24","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3896,"name":"string","nodeType":"ElementaryTypeName","src":"5934:6:24","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"5933:21:24"},"returnParameters":{"id":3903,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3900,"mutability":"mutable","name":"success","nameLocation":"5983:7:24","nodeType":"VariableDeclaration","scope":3915,"src":"5978:12:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3899,"name":"bool","nodeType":"ElementaryTypeName","src":"5978:4:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3902,"mutability":"mutable","name":"value","nameLocation":"6000:5:24","nodeType":"VariableDeclaration","scope":3915,"src":"5992:13:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3901,"name":"uint256","nodeType":"ElementaryTypeName","src":"5992:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5977:29:24"},"scope":4881,"src":"5912:180:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3951,"nodeType":"Block","src":"6506:147:24","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3939,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3935,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3929,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3922,"src":"6521:3:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":3932,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3918,"src":"6533:5:24","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3931,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6527:5:24","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":3930,"name":"bytes","nodeType":"ElementaryTypeName","src":"6527:5:24","typeDescriptions":{}}},"id":3933,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6527:12:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3934,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6540:6:24","memberName":"length","nodeType":"MemberAccess","src":"6527:19:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6521:25:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3938,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3936,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3920,"src":"6550:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":3937,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3922,"src":"6558:3:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6550:11:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"6521:40:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3944,"nodeType":"IfStatement","src":"6517:63:24","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":3940,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"6571:5:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":3941,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6578:1:24","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":3942,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"6570:10:24","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":3928,"id":3943,"nodeType":"Return","src":"6563:17:24"}},{"expression":{"arguments":[{"id":3946,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3918,"src":"6627:5:24","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":3947,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3920,"src":"6634:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3948,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3922,"src":"6641:3:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3945,"name":"_tryParseUintUncheckedBounds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4022,"src":"6598:28:24","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,uint256)"}},"id":3949,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6598:47:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":3928,"id":3950,"nodeType":"Return","src":"6591:54:24"}]},"documentation":{"id":3916,"nodeType":"StructuredDocumentation","src":"6100:243:24","text":" @dev Variant of {parseUint-string-uint256-uint256} that returns false if the parsing fails because of an invalid\n character.\n NOTE: This function will revert if the result does not fit in a `uint256`."},"id":3952,"implemented":true,"kind":"function","modifiers":[],"name":"tryParseUint","nameLocation":"6358:12:24","nodeType":"FunctionDefinition","parameters":{"id":3923,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3918,"mutability":"mutable","name":"input","nameLocation":"6395:5:24","nodeType":"VariableDeclaration","scope":3952,"src":"6381:19:24","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3917,"name":"string","nodeType":"ElementaryTypeName","src":"6381:6:24","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":3920,"mutability":"mutable","name":"begin","nameLocation":"6419:5:24","nodeType":"VariableDeclaration","scope":3952,"src":"6411:13:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3919,"name":"uint256","nodeType":"ElementaryTypeName","src":"6411:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3922,"mutability":"mutable","name":"end","nameLocation":"6443:3:24","nodeType":"VariableDeclaration","scope":3952,"src":"6435:11:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3921,"name":"uint256","nodeType":"ElementaryTypeName","src":"6435:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6370:83:24"},"returnParameters":{"id":3928,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3925,"mutability":"mutable","name":"success","nameLocation":"6482:7:24","nodeType":"VariableDeclaration","scope":3952,"src":"6477:12:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3924,"name":"bool","nodeType":"ElementaryTypeName","src":"6477:4:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3927,"mutability":"mutable","name":"value","nameLocation":"6499:5:24","nodeType":"VariableDeclaration","scope":3952,"src":"6491:13:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3926,"name":"uint256","nodeType":"ElementaryTypeName","src":"6491:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6476:29:24"},"scope":4881,"src":"6349:304:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4021,"nodeType":"Block","src":"7066:358:24","statements":[{"assignments":[3967],"declarations":[{"constant":false,"id":3967,"mutability":"mutable","name":"buffer","nameLocation":"7090:6:24","nodeType":"VariableDeclaration","scope":4021,"src":"7077:19:24","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3966,"name":"bytes","nodeType":"ElementaryTypeName","src":"7077:5:24","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":3972,"initialValue":{"arguments":[{"id":3970,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3955,"src":"7105:5:24","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3969,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7099:5:24","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":3968,"name":"bytes","nodeType":"ElementaryTypeName","src":"7099:5:24","typeDescriptions":{}}},"id":3971,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7099:12:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"7077:34:24"},{"assignments":[3974],"declarations":[{"constant":false,"id":3974,"mutability":"mutable","name":"result","nameLocation":"7132:6:24","nodeType":"VariableDeclaration","scope":4021,"src":"7124:14:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3973,"name":"uint256","nodeType":"ElementaryTypeName","src":"7124:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3976,"initialValue":{"hexValue":"30","id":3975,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7141:1:24","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"7124:18:24"},{"body":{"id":4015,"nodeType":"Block","src":"7191:194:24","statements":[{"assignments":[3988],"declarations":[{"constant":false,"id":3988,"mutability":"mutable","name":"chr","nameLocation":"7212:3:24","nodeType":"VariableDeclaration","scope":4015,"src":"7206:9:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":3987,"name":"uint8","nodeType":"ElementaryTypeName","src":"7206:5:24","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"id":3998,"initialValue":{"arguments":[{"arguments":[{"arguments":[{"id":3993,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3967,"src":"7261:6:24","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":3994,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3978,"src":"7269:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3992,"name":"_unsafeReadBytesOffset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4880,"src":"7238:22:24","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_bytes32_$","typeString":"function (bytes memory,uint256) pure returns (bytes32)"}},"id":3995,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7238:33:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3991,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7231:6:24","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes1_$","typeString":"type(bytes1)"},"typeName":{"id":3990,"name":"bytes1","nodeType":"ElementaryTypeName","src":"7231:6:24","typeDescriptions":{}}},"id":3996,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7231:41:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes1","typeString":"bytes1"}],"id":3989,"name":"_tryParseChr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4702,"src":"7218:12:24","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes1_$returns$_t_uint8_$","typeString":"function (bytes1) pure returns (uint8)"}},"id":3997,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7218:55:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"VariableDeclarationStatement","src":"7206:67:24"},{"condition":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":4001,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3999,"name":"chr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3988,"src":"7292:3:24","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"39","id":4000,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7298:1:24","typeDescriptions":{"typeIdentifier":"t_rational_9_by_1","typeString":"int_const 9"},"value":"9"},"src":"7292:7:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4006,"nodeType":"IfStatement","src":"7288:30:24","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":4002,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"7309:5:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":4003,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7316:1:24","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":4004,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"7308:10:24","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":3965,"id":4005,"nodeType":"Return","src":"7301:17:24"}},{"expression":{"id":4009,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4007,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3974,"src":"7333:6:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"hexValue":"3130","id":4008,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7343:2:24","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"src":"7333:12:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4010,"nodeType":"ExpressionStatement","src":"7333:12:24"},{"expression":{"id":4013,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4011,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3974,"src":"7360:6:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":4012,"name":"chr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3988,"src":"7370:3:24","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"7360:13:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4014,"nodeType":"ExpressionStatement","src":"7360:13:24"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3983,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3981,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3978,"src":"7177:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":3982,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3959,"src":"7181:3:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7177:7:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4016,"initializationExpression":{"assignments":[3978],"declarations":[{"constant":false,"id":3978,"mutability":"mutable","name":"i","nameLocation":"7166:1:24","nodeType":"VariableDeclaration","scope":4016,"src":"7158:9:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3977,"name":"uint256","nodeType":"ElementaryTypeName","src":"7158:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3980,"initialValue":{"id":3979,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3957,"src":"7170:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"7158:17:24"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":3985,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":true,"src":"7186:3:24","subExpression":{"id":3984,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3978,"src":"7188:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3986,"nodeType":"ExpressionStatement","src":"7186:3:24"},"nodeType":"ForStatement","src":"7153:232:24"},{"expression":{"components":[{"hexValue":"74727565","id":4017,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"7403:4:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"id":4018,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3974,"src":"7409:6:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4019,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7402:14:24","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":3965,"id":4020,"nodeType":"Return","src":"7395:21:24"}]},"documentation":{"id":3953,"nodeType":"StructuredDocumentation","src":"6661:227:24","text":" @dev Implementation of {tryParseUint-string-uint256-uint256} that does not check bounds. Caller should make sure that\n `begin <= end <= input.length`. Other inputs would result in undefined behavior."},"id":4022,"implemented":true,"kind":"function","modifiers":[],"name":"_tryParseUintUncheckedBounds","nameLocation":"6903:28:24","nodeType":"FunctionDefinition","parameters":{"id":3960,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3955,"mutability":"mutable","name":"input","nameLocation":"6956:5:24","nodeType":"VariableDeclaration","scope":4022,"src":"6942:19:24","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3954,"name":"string","nodeType":"ElementaryTypeName","src":"6942:6:24","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":3957,"mutability":"mutable","name":"begin","nameLocation":"6980:5:24","nodeType":"VariableDeclaration","scope":4022,"src":"6972:13:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3956,"name":"uint256","nodeType":"ElementaryTypeName","src":"6972:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3959,"mutability":"mutable","name":"end","nameLocation":"7004:3:24","nodeType":"VariableDeclaration","scope":4022,"src":"6996:11:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3958,"name":"uint256","nodeType":"ElementaryTypeName","src":"6996:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6931:83:24"},"returnParameters":{"id":3965,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3962,"mutability":"mutable","name":"success","nameLocation":"7042:7:24","nodeType":"VariableDeclaration","scope":4022,"src":"7037:12:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3961,"name":"bool","nodeType":"ElementaryTypeName","src":"7037:4:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3964,"mutability":"mutable","name":"value","nameLocation":"7059:5:24","nodeType":"VariableDeclaration","scope":4022,"src":"7051:13:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3963,"name":"uint256","nodeType":"ElementaryTypeName","src":"7051:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7036:29:24"},"scope":4881,"src":"6894:530:24","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":4040,"nodeType":"Block","src":"7730:65:24","statements":[{"expression":{"arguments":[{"id":4031,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4025,"src":"7757:5:24","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"30","id":4032,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7764:1:24","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"expression":{"arguments":[{"id":4035,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4025,"src":"7773:5:24","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":4034,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7767:5:24","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":4033,"name":"bytes","nodeType":"ElementaryTypeName","src":"7767:5:24","typeDescriptions":{}}},"id":4036,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7767:12:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":4037,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7780:6:24","memberName":"length","nodeType":"MemberAccess","src":"7767:19:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4030,"name":"parseInt","nodeType":"Identifier","overloadedDeclarations":[4041,4072],"referencedDeclaration":4072,"src":"7748:8:24","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_int256_$","typeString":"function (string memory,uint256,uint256) pure returns (int256)"}},"id":4038,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7748:39:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":4029,"id":4039,"nodeType":"Return","src":"7741:46:24"}]},"documentation":{"id":4023,"nodeType":"StructuredDocumentation","src":"7432:222:24","text":" @dev Parse a decimal string and returns the value as a `int256`.\n Requirements:\n - The string must be formatted as `[-+]?[0-9]*`\n - The result must fit in an `int256` type."},"id":4041,"implemented":true,"kind":"function","modifiers":[],"name":"parseInt","nameLocation":"7669:8:24","nodeType":"FunctionDefinition","parameters":{"id":4026,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4025,"mutability":"mutable","name":"input","nameLocation":"7692:5:24","nodeType":"VariableDeclaration","scope":4041,"src":"7678:19:24","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":4024,"name":"string","nodeType":"ElementaryTypeName","src":"7678:6:24","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"7677:21:24"},"returnParameters":{"id":4029,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4028,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4041,"src":"7722:6:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4027,"name":"int256","nodeType":"ElementaryTypeName","src":"7722:6:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"7721:8:24"},"scope":4881,"src":"7660:135:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4071,"nodeType":"Block","src":"8210:155:24","statements":[{"assignments":[4054,4056],"declarations":[{"constant":false,"id":4054,"mutability":"mutable","name":"success","nameLocation":"8227:7:24","nodeType":"VariableDeclaration","scope":4071,"src":"8222:12:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4053,"name":"bool","nodeType":"ElementaryTypeName","src":"8222:4:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":4056,"mutability":"mutable","name":"value","nameLocation":"8243:5:24","nodeType":"VariableDeclaration","scope":4071,"src":"8236:12:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4055,"name":"int256","nodeType":"ElementaryTypeName","src":"8236:6:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"id":4062,"initialValue":{"arguments":[{"id":4058,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4044,"src":"8264:5:24","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":4059,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4046,"src":"8271:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4060,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4048,"src":"8278:3:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4057,"name":"tryParseInt","nodeType":"Identifier","overloadedDeclarations":[4093,4135],"referencedDeclaration":4135,"src":"8252:11:24","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_int256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,int256)"}},"id":4061,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8252:30:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_int256_$","typeString":"tuple(bool,int256)"}},"nodeType":"VariableDeclarationStatement","src":"8221:61:24"},{"condition":{"id":4064,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"8297:8:24","subExpression":{"id":4063,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4054,"src":"8298:7:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4068,"nodeType":"IfStatement","src":"8293:41:24","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":4065,"name":"StringsInvalidChar","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3542,"src":"8314:18:24","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$_t_error_$","typeString":"function () pure returns (error)"}},"id":4066,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8314:20:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":4067,"nodeType":"RevertStatement","src":"8307:27:24"}},{"expression":{"id":4069,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4056,"src":"8352:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":4052,"id":4070,"nodeType":"Return","src":"8345:12:24"}]},"documentation":{"id":4042,"nodeType":"StructuredDocumentation","src":"7803:303:24","text":" @dev Variant of {parseInt-string} that parses a substring of `input` located between position `begin` (included) and\n `end` (excluded).\n Requirements:\n - The substring must be formatted as `[-+]?[0-9]*`\n - The result must fit in an `int256` type."},"id":4072,"implemented":true,"kind":"function","modifiers":[],"name":"parseInt","nameLocation":"8121:8:24","nodeType":"FunctionDefinition","parameters":{"id":4049,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4044,"mutability":"mutable","name":"input","nameLocation":"8144:5:24","nodeType":"VariableDeclaration","scope":4072,"src":"8130:19:24","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":4043,"name":"string","nodeType":"ElementaryTypeName","src":"8130:6:24","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":4046,"mutability":"mutable","name":"begin","nameLocation":"8159:5:24","nodeType":"VariableDeclaration","scope":4072,"src":"8151:13:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4045,"name":"uint256","nodeType":"ElementaryTypeName","src":"8151:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4048,"mutability":"mutable","name":"end","nameLocation":"8174:3:24","nodeType":"VariableDeclaration","scope":4072,"src":"8166:11:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4047,"name":"uint256","nodeType":"ElementaryTypeName","src":"8166:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8129:49:24"},"returnParameters":{"id":4052,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4051,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4072,"src":"8202:6:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4050,"name":"int256","nodeType":"ElementaryTypeName","src":"8202:6:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"8201:8:24"},"scope":4881,"src":"8112:253:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4092,"nodeType":"Block","src":"8764:84:24","statements":[{"expression":{"arguments":[{"id":4083,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4075,"src":"8810:5:24","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"30","id":4084,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8817:1:24","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"expression":{"arguments":[{"id":4087,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4075,"src":"8826:5:24","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":4086,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8820:5:24","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":4085,"name":"bytes","nodeType":"ElementaryTypeName","src":"8820:5:24","typeDescriptions":{}}},"id":4088,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8820:12:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":4089,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8833:6:24","memberName":"length","nodeType":"MemberAccess","src":"8820:19:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4082,"name":"_tryParseIntUncheckedBounds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4256,"src":"8782:27:24","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_int256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,int256)"}},"id":4090,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8782:58:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_int256_$","typeString":"tuple(bool,int256)"}},"functionReturnParameters":4081,"id":4091,"nodeType":"Return","src":"8775:65:24"}]},"documentation":{"id":4073,"nodeType":"StructuredDocumentation","src":"8373:292:24","text":" @dev Variant of {parseInt-string} that returns false if the parsing fails because of an invalid character or if\n the result does not fit in a `int256`.\n NOTE: This function will revert if the absolute value of the result does not fit in a `uint256`."},"id":4093,"implemented":true,"kind":"function","modifiers":[],"name":"tryParseInt","nameLocation":"8680:11:24","nodeType":"FunctionDefinition","parameters":{"id":4076,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4075,"mutability":"mutable","name":"input","nameLocation":"8706:5:24","nodeType":"VariableDeclaration","scope":4093,"src":"8692:19:24","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":4074,"name":"string","nodeType":"ElementaryTypeName","src":"8692:6:24","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"8691:21:24"},"returnParameters":{"id":4081,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4078,"mutability":"mutable","name":"success","nameLocation":"8741:7:24","nodeType":"VariableDeclaration","scope":4093,"src":"8736:12:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4077,"name":"bool","nodeType":"ElementaryTypeName","src":"8736:4:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":4080,"mutability":"mutable","name":"value","nameLocation":"8757:5:24","nodeType":"VariableDeclaration","scope":4093,"src":"8750:12:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4079,"name":"int256","nodeType":"ElementaryTypeName","src":"8750:6:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"8735:28:24"},"scope":4881,"src":"8671:177:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"constant":true,"id":4098,"mutability":"constant","name":"ABS_MIN_INT256","nameLocation":"8881:14:24","nodeType":"VariableDeclaration","scope":4881,"src":"8856:50:24","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4094,"name":"uint256","nodeType":"ElementaryTypeName","src":"8856:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"commonType":{"typeIdentifier":"t_rational_57896044618658097711785492504343953926634992332820282019728792003956564819968_by_1","typeString":"int_const 5789...(69 digits omitted)...9968"},"id":4097,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":4095,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8898:1:24","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"323535","id":4096,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8903:3:24","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"255"},"src":"8898:8:24","typeDescriptions":{"typeIdentifier":"t_rational_57896044618658097711785492504343953926634992332820282019728792003956564819968_by_1","typeString":"int_const 5789...(69 digits omitted)...9968"}},"visibility":"private"},{"body":{"id":4134,"nodeType":"Block","src":"9384:146:24","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":4122,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4118,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4112,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4105,"src":"9399:3:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":4115,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4101,"src":"9411:5:24","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":4114,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9405:5:24","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":4113,"name":"bytes","nodeType":"ElementaryTypeName","src":"9405:5:24","typeDescriptions":{}}},"id":4116,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9405:12:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":4117,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9418:6:24","memberName":"length","nodeType":"MemberAccess","src":"9405:19:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9399:25:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4121,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4119,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4103,"src":"9428:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":4120,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4105,"src":"9436:3:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9428:11:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"9399:40:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4127,"nodeType":"IfStatement","src":"9395:63:24","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":4123,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"9449:5:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":4124,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9456:1:24","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":4125,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"9448:10:24","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":4111,"id":4126,"nodeType":"Return","src":"9441:17:24"}},{"expression":{"arguments":[{"id":4129,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4101,"src":"9504:5:24","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":4130,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4103,"src":"9511:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4131,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4105,"src":"9518:3:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4128,"name":"_tryParseIntUncheckedBounds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4256,"src":"9476:27:24","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_int256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,int256)"}},"id":4132,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9476:46:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_int256_$","typeString":"tuple(bool,int256)"}},"functionReturnParameters":4111,"id":4133,"nodeType":"Return","src":"9469:53:24"}]},"documentation":{"id":4099,"nodeType":"StructuredDocumentation","src":"8915:308:24","text":" @dev Variant of {parseInt-string-uint256-uint256} that returns false if the parsing fails because of an invalid\n character or if the result does not fit in a `int256`.\n NOTE: This function will revert if the absolute value of the result does not fit in a `uint256`."},"id":4135,"implemented":true,"kind":"function","modifiers":[],"name":"tryParseInt","nameLocation":"9238:11:24","nodeType":"FunctionDefinition","parameters":{"id":4106,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4101,"mutability":"mutable","name":"input","nameLocation":"9274:5:24","nodeType":"VariableDeclaration","scope":4135,"src":"9260:19:24","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":4100,"name":"string","nodeType":"ElementaryTypeName","src":"9260:6:24","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":4103,"mutability":"mutable","name":"begin","nameLocation":"9298:5:24","nodeType":"VariableDeclaration","scope":4135,"src":"9290:13:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4102,"name":"uint256","nodeType":"ElementaryTypeName","src":"9290:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4105,"mutability":"mutable","name":"end","nameLocation":"9322:3:24","nodeType":"VariableDeclaration","scope":4135,"src":"9314:11:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4104,"name":"uint256","nodeType":"ElementaryTypeName","src":"9314:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9249:83:24"},"returnParameters":{"id":4111,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4108,"mutability":"mutable","name":"success","nameLocation":"9361:7:24","nodeType":"VariableDeclaration","scope":4135,"src":"9356:12:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4107,"name":"bool","nodeType":"ElementaryTypeName","src":"9356:4:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":4110,"mutability":"mutable","name":"value","nameLocation":"9377:5:24","nodeType":"VariableDeclaration","scope":4135,"src":"9370:12:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4109,"name":"int256","nodeType":"ElementaryTypeName","src":"9370:6:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"9355:28:24"},"scope":4881,"src":"9229:301:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4255,"nodeType":"Block","src":"9940:828:24","statements":[{"assignments":[4150],"declarations":[{"constant":false,"id":4150,"mutability":"mutable","name":"buffer","nameLocation":"9964:6:24","nodeType":"VariableDeclaration","scope":4255,"src":"9951:19:24","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4149,"name":"bytes","nodeType":"ElementaryTypeName","src":"9951:5:24","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":4155,"initialValue":{"arguments":[{"id":4153,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4138,"src":"9979:5:24","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":4152,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9973:5:24","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":4151,"name":"bytes","nodeType":"ElementaryTypeName","src":"9973:5:24","typeDescriptions":{}}},"id":4154,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9973:12:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"9951:34:24"},{"assignments":[4157],"declarations":[{"constant":false,"id":4157,"mutability":"mutable","name":"sign","nameLocation":"10052:4:24","nodeType":"VariableDeclaration","scope":4255,"src":"10045:11:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"typeName":{"id":4156,"name":"bytes1","nodeType":"ElementaryTypeName","src":"10045:6:24","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"visibility":"internal"}],"id":4173,"initialValue":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4160,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4158,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4140,"src":"10059:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":4159,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4142,"src":"10068:3:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10059:12:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"arguments":[{"arguments":[{"id":4168,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4150,"src":"10116:6:24","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":4169,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4140,"src":"10124:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4167,"name":"_unsafeReadBytesOffset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4880,"src":"10093:22:24","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_bytes32_$","typeString":"function (bytes memory,uint256) pure returns (bytes32)"}},"id":4170,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10093:37:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":4166,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10086:6:24","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes1_$","typeString":"type(bytes1)"},"typeName":{"id":4165,"name":"bytes1","nodeType":"ElementaryTypeName","src":"10086:6:24","typeDescriptions":{}}},"id":4171,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10086:45:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":4172,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"10059:72:24","trueExpression":{"arguments":[{"hexValue":"30","id":4163,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10081:1:24","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":4162,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10074:6:24","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes1_$","typeString":"type(bytes1)"},"typeName":{"id":4161,"name":"bytes1","nodeType":"ElementaryTypeName","src":"10074:6:24","typeDescriptions":{}}},"id":4164,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10074:9:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"VariableDeclarationStatement","src":"10045:86:24"},{"assignments":[4175],"declarations":[{"constant":false,"id":4175,"mutability":"mutable","name":"positiveSign","nameLocation":"10218:12:24","nodeType":"VariableDeclaration","scope":4255,"src":"10213:17:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4174,"name":"bool","nodeType":"ElementaryTypeName","src":"10213:4:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":4182,"initialValue":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":4181,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4176,"name":"sign","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4157,"src":"10233:4:24","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"2b","id":4179,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"10248:3:24","typeDescriptions":{"typeIdentifier":"t_stringliteral_728b8dbbe730d9acd55e30e768e6a28a04bea0c61b88108287c2c87d79c98bb8","typeString":"literal_string \"+\""},"value":"+"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_728b8dbbe730d9acd55e30e768e6a28a04bea0c61b88108287c2c87d79c98bb8","typeString":"literal_string \"+\""}],"id":4178,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10241:6:24","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes1_$","typeString":"type(bytes1)"},"typeName":{"id":4177,"name":"bytes1","nodeType":"ElementaryTypeName","src":"10241:6:24","typeDescriptions":{}}},"id":4180,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10241:11:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"src":"10233:19:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"10213:39:24"},{"assignments":[4184],"declarations":[{"constant":false,"id":4184,"mutability":"mutable","name":"negativeSign","nameLocation":"10268:12:24","nodeType":"VariableDeclaration","scope":4255,"src":"10263:17:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4183,"name":"bool","nodeType":"ElementaryTypeName","src":"10263:4:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":4191,"initialValue":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":4190,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4185,"name":"sign","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4157,"src":"10283:4:24","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"2d","id":4188,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"10298:3:24","typeDescriptions":{"typeIdentifier":"t_stringliteral_d3b8281179950f98149eefdb158d0e1acb56f56e8e343aa9fefafa7e36959561","typeString":"literal_string \"-\""},"value":"-"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_d3b8281179950f98149eefdb158d0e1acb56f56e8e343aa9fefafa7e36959561","typeString":"literal_string \"-\""}],"id":4187,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10291:6:24","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes1_$","typeString":"type(bytes1)"},"typeName":{"id":4186,"name":"bytes1","nodeType":"ElementaryTypeName","src":"10291:6:24","typeDescriptions":{}}},"id":4189,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10291:11:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"src":"10283:19:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"10263:39:24"},{"assignments":[4193],"declarations":[{"constant":false,"id":4193,"mutability":"mutable","name":"offset","nameLocation":"10321:6:24","nodeType":"VariableDeclaration","scope":4255,"src":"10313:14:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4192,"name":"uint256","nodeType":"ElementaryTypeName","src":"10313:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4200,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"components":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":4196,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4194,"name":"positiveSign","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4175,"src":"10331:12:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"id":4195,"name":"negativeSign","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4184,"src":"10347:12:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"10331:28:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":4197,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"10330:30:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4198,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10361:6:24","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":8712,"src":"10330:37:24","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$attached_to$_t_bool_$","typeString":"function (bool) pure returns (uint256)"}},"id":4199,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10330:39:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"10313:56:24"},{"assignments":[4202,4204],"declarations":[{"constant":false,"id":4202,"mutability":"mutable","name":"absSuccess","nameLocation":"10388:10:24","nodeType":"VariableDeclaration","scope":4255,"src":"10383:15:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4201,"name":"bool","nodeType":"ElementaryTypeName","src":"10383:4:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":4204,"mutability":"mutable","name":"absValue","nameLocation":"10408:8:24","nodeType":"VariableDeclaration","scope":4255,"src":"10400:16:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4203,"name":"uint256","nodeType":"ElementaryTypeName","src":"10400:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4212,"initialValue":{"arguments":[{"id":4206,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4138,"src":"10433:5:24","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4209,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4207,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4140,"src":"10440:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":4208,"name":"offset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4193,"src":"10448:6:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10440:14:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4210,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4142,"src":"10456:3:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4205,"name":"tryParseUint","nodeType":"Identifier","overloadedDeclarations":[3915,3952],"referencedDeclaration":3952,"src":"10420:12:24","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,uint256)"}},"id":4211,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10420:40:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"10382:78:24"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":4217,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4213,"name":"absSuccess","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4202,"src":"10477:10:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4216,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4214,"name":"absValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4204,"src":"10491:8:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":4215,"name":"ABS_MIN_INT256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4098,"src":"10502:14:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10491:25:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"10477:39:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":4239,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":4235,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4233,"name":"absSuccess","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4202,"src":"10621:10:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"id":4234,"name":"negativeSign","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4184,"src":"10635:12:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"10621:26:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4238,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4236,"name":"absValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4204,"src":"10651:8:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":4237,"name":"ABS_MIN_INT256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4098,"src":"10663:14:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10651:26:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"10621:56:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"expression":{"components":[{"hexValue":"66616c7365","id":4249,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"10751:5:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":4250,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10758:1:24","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":4251,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"10750:10:24","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":4148,"id":4252,"nodeType":"Return","src":"10743:17:24"},"id":4253,"nodeType":"IfStatement","src":"10617:143:24","trueBody":{"id":4248,"nodeType":"Block","src":"10679:58:24","statements":[{"expression":{"components":[{"hexValue":"74727565","id":4240,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"10702:4:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"expression":{"arguments":[{"id":4243,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10713:6:24","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":4242,"name":"int256","nodeType":"ElementaryTypeName","src":"10713:6:24","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"}],"id":4241,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"10708:4:24","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4244,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10708:12:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_int256","typeString":"type(int256)"}},"id":4245,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"10721:3:24","memberName":"min","nodeType":"MemberAccess","src":"10708:16:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":4246,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"10701:24:24","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_int256_$","typeString":"tuple(bool,int256)"}},"functionReturnParameters":4148,"id":4247,"nodeType":"Return","src":"10694:31:24"}]}},"id":4254,"nodeType":"IfStatement","src":"10473:287:24","trueBody":{"id":4232,"nodeType":"Block","src":"10518:93:24","statements":[{"expression":{"components":[{"hexValue":"74727565","id":4218,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"10541:4:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"condition":{"id":4219,"name":"negativeSign","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4184,"src":"10547:12:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"arguments":[{"id":4227,"name":"absValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4204,"src":"10589:8:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4226,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10582:6:24","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":4225,"name":"int256","nodeType":"ElementaryTypeName","src":"10582:6:24","typeDescriptions":{}}},"id":4228,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10582:16:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":4229,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"10547:51:24","trueExpression":{"id":4224,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"-","prefix":true,"src":"10562:17:24","subExpression":{"arguments":[{"id":4222,"name":"absValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4204,"src":"10570:8:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4221,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10563:6:24","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":4220,"name":"int256","nodeType":"ElementaryTypeName","src":"10563:6:24","typeDescriptions":{}}},"id":4223,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10563:16:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":4230,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"10540:59:24","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_int256_$","typeString":"tuple(bool,int256)"}},"functionReturnParameters":4148,"id":4231,"nodeType":"Return","src":"10533:66:24"}]}}]},"documentation":{"id":4136,"nodeType":"StructuredDocumentation","src":"9538:226:24","text":" @dev Implementation of {tryParseInt-string-uint256-uint256} that does not check bounds. Caller should make sure that\n `begin <= end <= input.length`. Other inputs would result in undefined behavior."},"id":4256,"implemented":true,"kind":"function","modifiers":[],"name":"_tryParseIntUncheckedBounds","nameLocation":"9779:27:24","nodeType":"FunctionDefinition","parameters":{"id":4143,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4138,"mutability":"mutable","name":"input","nameLocation":"9831:5:24","nodeType":"VariableDeclaration","scope":4256,"src":"9817:19:24","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":4137,"name":"string","nodeType":"ElementaryTypeName","src":"9817:6:24","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":4140,"mutability":"mutable","name":"begin","nameLocation":"9855:5:24","nodeType":"VariableDeclaration","scope":4256,"src":"9847:13:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4139,"name":"uint256","nodeType":"ElementaryTypeName","src":"9847:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4142,"mutability":"mutable","name":"end","nameLocation":"9879:3:24","nodeType":"VariableDeclaration","scope":4256,"src":"9871:11:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4141,"name":"uint256","nodeType":"ElementaryTypeName","src":"9871:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9806:83:24"},"returnParameters":{"id":4148,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4145,"mutability":"mutable","name":"success","nameLocation":"9917:7:24","nodeType":"VariableDeclaration","scope":4256,"src":"9912:12:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4144,"name":"bool","nodeType":"ElementaryTypeName","src":"9912:4:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":4147,"mutability":"mutable","name":"value","nameLocation":"9933:5:24","nodeType":"VariableDeclaration","scope":4256,"src":"9926:12:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4146,"name":"int256","nodeType":"ElementaryTypeName","src":"9926:6:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"9911:28:24"},"scope":4881,"src":"9770:998:24","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":4274,"nodeType":"Block","src":"11122:69:24","statements":[{"expression":{"arguments":[{"id":4265,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4259,"src":"11153:5:24","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"30","id":4266,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11160:1:24","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"expression":{"arguments":[{"id":4269,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4259,"src":"11169:5:24","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":4268,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11163:5:24","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":4267,"name":"bytes","nodeType":"ElementaryTypeName","src":"11163:5:24","typeDescriptions":{}}},"id":4270,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11163:12:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":4271,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11176:6:24","memberName":"length","nodeType":"MemberAccess","src":"11163:19:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4264,"name":"parseHexUint","nodeType":"Identifier","overloadedDeclarations":[4275,4306],"referencedDeclaration":4306,"src":"11140:12:24","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (uint256)"}},"id":4272,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11140:43:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4263,"id":4273,"nodeType":"Return","src":"11133:50:24"}]},"documentation":{"id":4257,"nodeType":"StructuredDocumentation","src":"10776:265:24","text":" @dev Parse a hexadecimal string (with or without \"0x\" prefix), and returns the value as a `uint256`.\n Requirements:\n - The string must be formatted as `(0x)?[0-9a-fA-F]*`\n - The result must fit in an `uint256` type."},"id":4275,"implemented":true,"kind":"function","modifiers":[],"name":"parseHexUint","nameLocation":"11056:12:24","nodeType":"FunctionDefinition","parameters":{"id":4260,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4259,"mutability":"mutable","name":"input","nameLocation":"11083:5:24","nodeType":"VariableDeclaration","scope":4275,"src":"11069:19:24","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":4258,"name":"string","nodeType":"ElementaryTypeName","src":"11069:6:24","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"11068:21:24"},"returnParameters":{"id":4263,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4262,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4275,"src":"11113:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4261,"name":"uint256","nodeType":"ElementaryTypeName","src":"11113:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11112:9:24"},"scope":4881,"src":"11047:144:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4305,"nodeType":"Block","src":"11622:160:24","statements":[{"assignments":[4288,4290],"declarations":[{"constant":false,"id":4288,"mutability":"mutable","name":"success","nameLocation":"11639:7:24","nodeType":"VariableDeclaration","scope":4305,"src":"11634:12:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4287,"name":"bool","nodeType":"ElementaryTypeName","src":"11634:4:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":4290,"mutability":"mutable","name":"value","nameLocation":"11656:5:24","nodeType":"VariableDeclaration","scope":4305,"src":"11648:13:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4289,"name":"uint256","nodeType":"ElementaryTypeName","src":"11648:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4296,"initialValue":{"arguments":[{"id":4292,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4278,"src":"11681:5:24","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":4293,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4280,"src":"11688:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4294,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4282,"src":"11695:3:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4291,"name":"tryParseHexUint","nodeType":"Identifier","overloadedDeclarations":[4327,4364],"referencedDeclaration":4364,"src":"11665:15:24","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,uint256)"}},"id":4295,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11665:34:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"11633:66:24"},{"condition":{"id":4298,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"11714:8:24","subExpression":{"id":4297,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4288,"src":"11715:7:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4302,"nodeType":"IfStatement","src":"11710:41:24","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":4299,"name":"StringsInvalidChar","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3542,"src":"11731:18:24","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$_t_error_$","typeString":"function () pure returns (error)"}},"id":4300,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11731:20:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":4301,"nodeType":"RevertStatement","src":"11724:27:24"}},{"expression":{"id":4303,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4290,"src":"11769:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4286,"id":4304,"nodeType":"Return","src":"11762:12:24"}]},"documentation":{"id":4276,"nodeType":"StructuredDocumentation","src":"11199:314:24","text":" @dev Variant of {parseHexUint-string} that parses a substring of `input` located between position `begin` (included) and\n `end` (excluded).\n Requirements:\n - The substring must be formatted as `(0x)?[0-9a-fA-F]*`\n - The result must fit in an `uint256` type."},"id":4306,"implemented":true,"kind":"function","modifiers":[],"name":"parseHexUint","nameLocation":"11528:12:24","nodeType":"FunctionDefinition","parameters":{"id":4283,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4278,"mutability":"mutable","name":"input","nameLocation":"11555:5:24","nodeType":"VariableDeclaration","scope":4306,"src":"11541:19:24","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":4277,"name":"string","nodeType":"ElementaryTypeName","src":"11541:6:24","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":4280,"mutability":"mutable","name":"begin","nameLocation":"11570:5:24","nodeType":"VariableDeclaration","scope":4306,"src":"11562:13:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4279,"name":"uint256","nodeType":"ElementaryTypeName","src":"11562:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4282,"mutability":"mutable","name":"end","nameLocation":"11585:3:24","nodeType":"VariableDeclaration","scope":4306,"src":"11577:11:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4281,"name":"uint256","nodeType":"ElementaryTypeName","src":"11577:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11540:49:24"},"returnParameters":{"id":4286,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4285,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4306,"src":"11613:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4284,"name":"uint256","nodeType":"ElementaryTypeName","src":"11613:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11612:9:24"},"scope":4881,"src":"11519:263:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4326,"nodeType":"Block","src":"12116:88:24","statements":[{"expression":{"arguments":[{"id":4317,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4309,"src":"12166:5:24","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"30","id":4318,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12173:1:24","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"expression":{"arguments":[{"id":4321,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4309,"src":"12182:5:24","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":4320,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12176:5:24","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":4319,"name":"bytes","nodeType":"ElementaryTypeName","src":"12176:5:24","typeDescriptions":{}}},"id":4322,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12176:12:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":4323,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12189:6:24","memberName":"length","nodeType":"MemberAccess","src":"12176:19:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4316,"name":"_tryParseHexUintUncheckedBounds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4467,"src":"12134:31:24","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,uint256)"}},"id":4324,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12134:62:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":4315,"id":4325,"nodeType":"Return","src":"12127:69:24"}]},"documentation":{"id":4307,"nodeType":"StructuredDocumentation","src":"11790:222:24","text":" @dev Variant of {parseHexUint-string} that returns false if the parsing fails because of an invalid character.\n NOTE: This function will revert if the result does not fit in a `uint256`."},"id":4327,"implemented":true,"kind":"function","modifiers":[],"name":"tryParseHexUint","nameLocation":"12027:15:24","nodeType":"FunctionDefinition","parameters":{"id":4310,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4309,"mutability":"mutable","name":"input","nameLocation":"12057:5:24","nodeType":"VariableDeclaration","scope":4327,"src":"12043:19:24","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":4308,"name":"string","nodeType":"ElementaryTypeName","src":"12043:6:24","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"12042:21:24"},"returnParameters":{"id":4315,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4312,"mutability":"mutable","name":"success","nameLocation":"12092:7:24","nodeType":"VariableDeclaration","scope":4327,"src":"12087:12:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4311,"name":"bool","nodeType":"ElementaryTypeName","src":"12087:4:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":4314,"mutability":"mutable","name":"value","nameLocation":"12109:5:24","nodeType":"VariableDeclaration","scope":4327,"src":"12101:13:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4313,"name":"uint256","nodeType":"ElementaryTypeName","src":"12101:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12086:29:24"},"scope":4881,"src":"12018:186:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4363,"nodeType":"Block","src":"12624:150:24","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":4351,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4347,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4341,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4334,"src":"12639:3:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":4344,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4330,"src":"12651:5:24","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":4343,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12645:5:24","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":4342,"name":"bytes","nodeType":"ElementaryTypeName","src":"12645:5:24","typeDescriptions":{}}},"id":4345,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12645:12:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":4346,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12658:6:24","memberName":"length","nodeType":"MemberAccess","src":"12645:19:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12639:25:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4350,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4348,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4332,"src":"12668:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":4349,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4334,"src":"12676:3:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12668:11:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"12639:40:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4356,"nodeType":"IfStatement","src":"12635:63:24","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":4352,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"12689:5:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":4353,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12696:1:24","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":4354,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"12688:10:24","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":4340,"id":4355,"nodeType":"Return","src":"12681:17:24"}},{"expression":{"arguments":[{"id":4358,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4330,"src":"12748:5:24","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":4359,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4332,"src":"12755:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4360,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4334,"src":"12762:3:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4357,"name":"_tryParseHexUintUncheckedBounds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4467,"src":"12716:31:24","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,uint256)"}},"id":4361,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12716:50:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":4340,"id":4362,"nodeType":"Return","src":"12709:57:24"}]},"documentation":{"id":4328,"nodeType":"StructuredDocumentation","src":"12212:246:24","text":" @dev Variant of {parseHexUint-string-uint256-uint256} that returns false if the parsing fails because of an\n invalid character.\n NOTE: This function will revert if the result does not fit in a `uint256`."},"id":4364,"implemented":true,"kind":"function","modifiers":[],"name":"tryParseHexUint","nameLocation":"12473:15:24","nodeType":"FunctionDefinition","parameters":{"id":4335,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4330,"mutability":"mutable","name":"input","nameLocation":"12513:5:24","nodeType":"VariableDeclaration","scope":4364,"src":"12499:19:24","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":4329,"name":"string","nodeType":"ElementaryTypeName","src":"12499:6:24","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":4332,"mutability":"mutable","name":"begin","nameLocation":"12537:5:24","nodeType":"VariableDeclaration","scope":4364,"src":"12529:13:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4331,"name":"uint256","nodeType":"ElementaryTypeName","src":"12529:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4334,"mutability":"mutable","name":"end","nameLocation":"12561:3:24","nodeType":"VariableDeclaration","scope":4364,"src":"12553:11:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4333,"name":"uint256","nodeType":"ElementaryTypeName","src":"12553:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12488:83:24"},"returnParameters":{"id":4340,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4337,"mutability":"mutable","name":"success","nameLocation":"12600:7:24","nodeType":"VariableDeclaration","scope":4364,"src":"12595:12:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4336,"name":"bool","nodeType":"ElementaryTypeName","src":"12595:4:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":4339,"mutability":"mutable","name":"value","nameLocation":"12617:5:24","nodeType":"VariableDeclaration","scope":4364,"src":"12609:13:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4338,"name":"uint256","nodeType":"ElementaryTypeName","src":"12609:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12594:29:24"},"scope":4881,"src":"12464:310:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4466,"nodeType":"Block","src":"13193:900:24","statements":[{"assignments":[4379],"declarations":[{"constant":false,"id":4379,"mutability":"mutable","name":"buffer","nameLocation":"13217:6:24","nodeType":"VariableDeclaration","scope":4466,"src":"13204:19:24","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4378,"name":"bytes","nodeType":"ElementaryTypeName","src":"13204:5:24","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":4384,"initialValue":{"arguments":[{"id":4382,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4367,"src":"13232:5:24","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":4381,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13226:5:24","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":4380,"name":"bytes","nodeType":"ElementaryTypeName","src":"13226:5:24","typeDescriptions":{}}},"id":4383,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13226:12:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"13204:34:24"},{"assignments":[4386],"declarations":[{"constant":false,"id":4386,"mutability":"mutable","name":"hasPrefix","nameLocation":"13294:9:24","nodeType":"VariableDeclaration","scope":4466,"src":"13289:14:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4385,"name":"bool","nodeType":"ElementaryTypeName","src":"13289:4:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":4406,"initialValue":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":4405,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4391,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4387,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4371,"src":"13307:3:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4390,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4388,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4369,"src":"13313:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":4389,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13321:1:24","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"13313:9:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13307:15:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":4392,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"13306:17:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_bytes2","typeString":"bytes2"},"id":4404,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"id":4396,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4379,"src":"13357:6:24","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":4397,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4369,"src":"13365:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4395,"name":"_unsafeReadBytesOffset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4880,"src":"13334:22:24","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_bytes32_$","typeString":"function (bytes memory,uint256) pure returns (bytes32)"}},"id":4398,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13334:37:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":4394,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13327:6:24","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes2_$","typeString":"type(bytes2)"},"typeName":{"id":4393,"name":"bytes2","nodeType":"ElementaryTypeName","src":"13327:6:24","typeDescriptions":{}}},"id":4399,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13327:45:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes2","typeString":"bytes2"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"3078","id":4402,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"13383:4:24","typeDescriptions":{"typeIdentifier":"t_stringliteral_39bef1777deb3dfb14f64b9f81ced092c501fee72f90e93d03bb95ee89df9837","typeString":"literal_string \"0x\""},"value":"0x"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_39bef1777deb3dfb14f64b9f81ced092c501fee72f90e93d03bb95ee89df9837","typeString":"literal_string \"0x\""}],"id":4401,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13376:6:24","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes2_$","typeString":"type(bytes2)"},"typeName":{"id":4400,"name":"bytes2","nodeType":"ElementaryTypeName","src":"13376:6:24","typeDescriptions":{}}},"id":4403,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13376:12:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes2","typeString":"bytes2"}},"src":"13327:61:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"13306:82:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"13289:99:24"},{"assignments":[4408],"declarations":[{"constant":false,"id":4408,"mutability":"mutable","name":"offset","nameLocation":"13478:6:24","nodeType":"VariableDeclaration","scope":4466,"src":"13470:14:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4407,"name":"uint256","nodeType":"ElementaryTypeName","src":"13470:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4414,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4413,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":4409,"name":"hasPrefix","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4386,"src":"13487:9:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4410,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"13497:6:24","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":8712,"src":"13487:16:24","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$attached_to$_t_bool_$","typeString":"function (bool) pure returns (uint256)"}},"id":4411,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13487:18:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"32","id":4412,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13508:1:24","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"13487:22:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"13470:39:24"},{"assignments":[4416],"declarations":[{"constant":false,"id":4416,"mutability":"mutable","name":"result","nameLocation":"13530:6:24","nodeType":"VariableDeclaration","scope":4466,"src":"13522:14:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4415,"name":"uint256","nodeType":"ElementaryTypeName","src":"13522:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4418,"initialValue":{"hexValue":"30","id":4417,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13539:1:24","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"13522:18:24"},{"body":{"id":4460,"nodeType":"Block","src":"13598:456:24","statements":[{"assignments":[4432],"declarations":[{"constant":false,"id":4432,"mutability":"mutable","name":"chr","nameLocation":"13619:3:24","nodeType":"VariableDeclaration","scope":4460,"src":"13613:9:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":4431,"name":"uint8","nodeType":"ElementaryTypeName","src":"13613:5:24","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"id":4442,"initialValue":{"arguments":[{"arguments":[{"arguments":[{"id":4437,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4379,"src":"13668:6:24","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":4438,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4420,"src":"13676:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4436,"name":"_unsafeReadBytesOffset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4880,"src":"13645:22:24","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_bytes32_$","typeString":"function (bytes memory,uint256) pure returns (bytes32)"}},"id":4439,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13645:33:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":4435,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13638:6:24","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes1_$","typeString":"type(bytes1)"},"typeName":{"id":4434,"name":"bytes1","nodeType":"ElementaryTypeName","src":"13638:6:24","typeDescriptions":{}}},"id":4440,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13638:41:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes1","typeString":"bytes1"}],"id":4433,"name":"_tryParseChr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4702,"src":"13625:12:24","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes1_$returns$_t_uint8_$","typeString":"function (bytes1) pure returns (uint8)"}},"id":4441,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13625:55:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"VariableDeclarationStatement","src":"13613:67:24"},{"condition":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":4445,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4443,"name":"chr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4432,"src":"13699:3:24","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"3135","id":4444,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13705:2:24","typeDescriptions":{"typeIdentifier":"t_rational_15_by_1","typeString":"int_const 15"},"value":"15"},"src":"13699:8:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4450,"nodeType":"IfStatement","src":"13695:31:24","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":4446,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"13717:5:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":4447,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13724:1:24","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":4448,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"13716:10:24","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":4377,"id":4449,"nodeType":"Return","src":"13709:17:24"}},{"expression":{"id":4453,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4451,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4416,"src":"13741:6:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"hexValue":"3136","id":4452,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13751:2:24","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"13741:12:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4454,"nodeType":"ExpressionStatement","src":"13741:12:24"},{"id":4459,"nodeType":"UncheckedBlock","src":"13768:275:24","statements":[{"expression":{"id":4457,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4455,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4416,"src":"14014:6:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":4456,"name":"chr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4432,"src":"14024:3:24","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"14014:13:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4458,"nodeType":"ExpressionStatement","src":"14014:13:24"}]}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4427,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4425,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4420,"src":"13584:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":4426,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4371,"src":"13588:3:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13584:7:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4461,"initializationExpression":{"assignments":[4420],"declarations":[{"constant":false,"id":4420,"mutability":"mutable","name":"i","nameLocation":"13564:1:24","nodeType":"VariableDeclaration","scope":4461,"src":"13556:9:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4419,"name":"uint256","nodeType":"ElementaryTypeName","src":"13556:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4424,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4423,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4421,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4369,"src":"13568:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":4422,"name":"offset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4408,"src":"13576:6:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13568:14:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"13556:26:24"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":4429,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":true,"src":"13593:3:24","subExpression":{"id":4428,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4420,"src":"13595:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4430,"nodeType":"ExpressionStatement","src":"13593:3:24"},"nodeType":"ForStatement","src":"13551:503:24"},{"expression":{"components":[{"hexValue":"74727565","id":4462,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"14072:4:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"id":4463,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4416,"src":"14078:6:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4464,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"14071:14:24","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":4377,"id":4465,"nodeType":"Return","src":"14064:21:24"}]},"documentation":{"id":4365,"nodeType":"StructuredDocumentation","src":"12782:230:24","text":" @dev Implementation of {tryParseHexUint-string-uint256-uint256} that does not check bounds. Caller should make sure that\n `begin <= end <= input.length`. Other inputs would result in undefined behavior."},"id":4467,"implemented":true,"kind":"function","modifiers":[],"name":"_tryParseHexUintUncheckedBounds","nameLocation":"13027:31:24","nodeType":"FunctionDefinition","parameters":{"id":4372,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4367,"mutability":"mutable","name":"input","nameLocation":"13083:5:24","nodeType":"VariableDeclaration","scope":4467,"src":"13069:19:24","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":4366,"name":"string","nodeType":"ElementaryTypeName","src":"13069:6:24","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":4369,"mutability":"mutable","name":"begin","nameLocation":"13107:5:24","nodeType":"VariableDeclaration","scope":4467,"src":"13099:13:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4368,"name":"uint256","nodeType":"ElementaryTypeName","src":"13099:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4371,"mutability":"mutable","name":"end","nameLocation":"13131:3:24","nodeType":"VariableDeclaration","scope":4467,"src":"13123:11:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4370,"name":"uint256","nodeType":"ElementaryTypeName","src":"13123:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13058:83:24"},"returnParameters":{"id":4377,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4374,"mutability":"mutable","name":"success","nameLocation":"13169:7:24","nodeType":"VariableDeclaration","scope":4467,"src":"13164:12:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4373,"name":"bool","nodeType":"ElementaryTypeName","src":"13164:4:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":4376,"mutability":"mutable","name":"value","nameLocation":"13186:5:24","nodeType":"VariableDeclaration","scope":4467,"src":"13178:13:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4375,"name":"uint256","nodeType":"ElementaryTypeName","src":"13178:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13163:29:24"},"scope":4881,"src":"13018:1075:24","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":4485,"nodeType":"Block","src":"14399:69:24","statements":[{"expression":{"arguments":[{"id":4476,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4470,"src":"14430:5:24","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"30","id":4477,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14437:1:24","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"expression":{"arguments":[{"id":4480,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4470,"src":"14446:5:24","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":4479,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14440:5:24","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":4478,"name":"bytes","nodeType":"ElementaryTypeName","src":"14440:5:24","typeDescriptions":{}}},"id":4481,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14440:12:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":4482,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"14453:6:24","memberName":"length","nodeType":"MemberAccess","src":"14440:19:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4475,"name":"parseAddress","nodeType":"Identifier","overloadedDeclarations":[4486,4517],"referencedDeclaration":4517,"src":"14417:12:24","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_address_$","typeString":"function (string memory,uint256,uint256) pure returns (address)"}},"id":4483,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14417:43:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":4474,"id":4484,"nodeType":"Return","src":"14410:50:24"}]},"documentation":{"id":4468,"nodeType":"StructuredDocumentation","src":"14101:217:24","text":" @dev Parse a hexadecimal string (with or without \"0x\" prefix), and returns the value as an `address`.\n Requirements:\n - The string must be formatted as `(0x)?[0-9a-fA-F]{40}`"},"id":4486,"implemented":true,"kind":"function","modifiers":[],"name":"parseAddress","nameLocation":"14333:12:24","nodeType":"FunctionDefinition","parameters":{"id":4471,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4470,"mutability":"mutable","name":"input","nameLocation":"14360:5:24","nodeType":"VariableDeclaration","scope":4486,"src":"14346:19:24","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":4469,"name":"string","nodeType":"ElementaryTypeName","src":"14346:6:24","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"14345:21:24"},"returnParameters":{"id":4474,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4473,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4486,"src":"14390:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4472,"name":"address","nodeType":"ElementaryTypeName","src":"14390:7:24","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"14389:9:24"},"scope":4881,"src":"14324:144:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4516,"nodeType":"Block","src":"14850:169:24","statements":[{"assignments":[4499,4501],"declarations":[{"constant":false,"id":4499,"mutability":"mutable","name":"success","nameLocation":"14867:7:24","nodeType":"VariableDeclaration","scope":4516,"src":"14862:12:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4498,"name":"bool","nodeType":"ElementaryTypeName","src":"14862:4:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":4501,"mutability":"mutable","name":"value","nameLocation":"14884:5:24","nodeType":"VariableDeclaration","scope":4516,"src":"14876:13:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4500,"name":"address","nodeType":"ElementaryTypeName","src":"14876:7:24","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":4507,"initialValue":{"arguments":[{"id":4503,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4489,"src":"14909:5:24","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":4504,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4491,"src":"14916:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4505,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4493,"src":"14923:3:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4502,"name":"tryParseAddress","nodeType":"Identifier","overloadedDeclarations":[4538,4642],"referencedDeclaration":4642,"src":"14893:15:24","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_address_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,address)"}},"id":4506,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14893:34:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_address_$","typeString":"tuple(bool,address)"}},"nodeType":"VariableDeclarationStatement","src":"14861:66:24"},{"condition":{"id":4509,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"14942:8:24","subExpression":{"id":4508,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4499,"src":"14943:7:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4513,"nodeType":"IfStatement","src":"14938:50:24","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":4510,"name":"StringsInvalidAddressFormat","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3545,"src":"14959:27:24","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$_t_error_$","typeString":"function () pure returns (error)"}},"id":4511,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14959:29:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":4512,"nodeType":"RevertStatement","src":"14952:36:24"}},{"expression":{"id":4514,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4501,"src":"15006:5:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":4497,"id":4515,"nodeType":"Return","src":"14999:12:24"}]},"documentation":{"id":4487,"nodeType":"StructuredDocumentation","src":"14476:265:24","text":" @dev Variant of {parseAddress-string} that parses a substring of `input` located between position `begin` (included) and\n `end` (excluded).\n Requirements:\n - The substring must be formatted as `(0x)?[0-9a-fA-F]{40}`"},"id":4517,"implemented":true,"kind":"function","modifiers":[],"name":"parseAddress","nameLocation":"14756:12:24","nodeType":"FunctionDefinition","parameters":{"id":4494,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4489,"mutability":"mutable","name":"input","nameLocation":"14783:5:24","nodeType":"VariableDeclaration","scope":4517,"src":"14769:19:24","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":4488,"name":"string","nodeType":"ElementaryTypeName","src":"14769:6:24","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":4491,"mutability":"mutable","name":"begin","nameLocation":"14798:5:24","nodeType":"VariableDeclaration","scope":4517,"src":"14790:13:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4490,"name":"uint256","nodeType":"ElementaryTypeName","src":"14790:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4493,"mutability":"mutable","name":"end","nameLocation":"14813:3:24","nodeType":"VariableDeclaration","scope":4517,"src":"14805:11:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4492,"name":"uint256","nodeType":"ElementaryTypeName","src":"14805:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14768:49:24"},"returnParameters":{"id":4497,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4496,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4517,"src":"14841:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4495,"name":"address","nodeType":"ElementaryTypeName","src":"14841:7:24","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"14840:9:24"},"scope":4881,"src":"14747:272:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4537,"nodeType":"Block","src":"15332:72:24","statements":[{"expression":{"arguments":[{"id":4528,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4520,"src":"15366:5:24","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"30","id":4529,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15373:1:24","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"expression":{"arguments":[{"id":4532,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4520,"src":"15382:5:24","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":4531,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15376:5:24","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":4530,"name":"bytes","nodeType":"ElementaryTypeName","src":"15376:5:24","typeDescriptions":{}}},"id":4533,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15376:12:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":4534,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"15389:6:24","memberName":"length","nodeType":"MemberAccess","src":"15376:19:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4527,"name":"tryParseAddress","nodeType":"Identifier","overloadedDeclarations":[4538,4642],"referencedDeclaration":4642,"src":"15350:15:24","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_address_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,address)"}},"id":4535,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15350:46:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_address_$","typeString":"tuple(bool,address)"}},"functionReturnParameters":4526,"id":4536,"nodeType":"Return","src":"15343:53:24"}]},"documentation":{"id":4518,"nodeType":"StructuredDocumentation","src":"15027:201:24","text":" @dev Variant of {parseAddress-string} that returns false if the parsing fails because the input is not a properly\n formatted address. See {parseAddress-string} requirements."},"id":4538,"implemented":true,"kind":"function","modifiers":[],"name":"tryParseAddress","nameLocation":"15243:15:24","nodeType":"FunctionDefinition","parameters":{"id":4521,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4520,"mutability":"mutable","name":"input","nameLocation":"15273:5:24","nodeType":"VariableDeclaration","scope":4538,"src":"15259:19:24","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":4519,"name":"string","nodeType":"ElementaryTypeName","src":"15259:6:24","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"15258:21:24"},"returnParameters":{"id":4526,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4523,"mutability":"mutable","name":"success","nameLocation":"15308:7:24","nodeType":"VariableDeclaration","scope":4538,"src":"15303:12:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4522,"name":"bool","nodeType":"ElementaryTypeName","src":"15303:4:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":4525,"mutability":"mutable","name":"value","nameLocation":"15325:5:24","nodeType":"VariableDeclaration","scope":4538,"src":"15317:13:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4524,"name":"address","nodeType":"ElementaryTypeName","src":"15317:7:24","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"15302:29:24"},"scope":4881,"src":"15234:170:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4641,"nodeType":"Block","src":"15807:747:24","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":4562,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4558,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4552,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4545,"src":"15822:3:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":4555,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4541,"src":"15834:5:24","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":4554,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15828:5:24","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":4553,"name":"bytes","nodeType":"ElementaryTypeName","src":"15828:5:24","typeDescriptions":{}}},"id":4556,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15828:12:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":4557,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"15841:6:24","memberName":"length","nodeType":"MemberAccess","src":"15828:19:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15822:25:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4561,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4559,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4543,"src":"15851:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":4560,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4545,"src":"15859:3:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15851:11:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"15822:40:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4570,"nodeType":"IfStatement","src":"15818:72:24","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":4563,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"15872:5:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"arguments":[{"hexValue":"30","id":4566,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15887:1:24","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":4565,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15879:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":4564,"name":"address","nodeType":"ElementaryTypeName","src":"15879:7:24","typeDescriptions":{}}},"id":4567,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15879:10:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":4568,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"15871:19:24","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_address_$","typeString":"tuple(bool,address)"}},"functionReturnParameters":4551,"id":4569,"nodeType":"Return","src":"15864:26:24"}},{"assignments":[4572],"declarations":[{"constant":false,"id":4572,"mutability":"mutable","name":"hasPrefix","nameLocation":"15908:9:24","nodeType":"VariableDeclaration","scope":4641,"src":"15903:14:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4571,"name":"bool","nodeType":"ElementaryTypeName","src":"15903:4:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":4595,"initialValue":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":4594,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4577,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4573,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4545,"src":"15921:3:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4576,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4574,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4543,"src":"15927:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":4575,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15935:1:24","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"15927:9:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15921:15:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":4578,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"15920:17:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_bytes2","typeString":"bytes2"},"id":4593,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"arguments":[{"id":4584,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4541,"src":"15977:5:24","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":4583,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15971:5:24","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":4582,"name":"bytes","nodeType":"ElementaryTypeName","src":"15971:5:24","typeDescriptions":{}}},"id":4585,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15971:12:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":4586,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4543,"src":"15985:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4581,"name":"_unsafeReadBytesOffset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4880,"src":"15948:22:24","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_bytes32_$","typeString":"function (bytes memory,uint256) pure returns (bytes32)"}},"id":4587,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15948:43:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":4580,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15941:6:24","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes2_$","typeString":"type(bytes2)"},"typeName":{"id":4579,"name":"bytes2","nodeType":"ElementaryTypeName","src":"15941:6:24","typeDescriptions":{}}},"id":4588,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15941:51:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes2","typeString":"bytes2"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"3078","id":4591,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"16003:4:24","typeDescriptions":{"typeIdentifier":"t_stringliteral_39bef1777deb3dfb14f64b9f81ced092c501fee72f90e93d03bb95ee89df9837","typeString":"literal_string \"0x\""},"value":"0x"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_39bef1777deb3dfb14f64b9f81ced092c501fee72f90e93d03bb95ee89df9837","typeString":"literal_string \"0x\""}],"id":4590,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15996:6:24","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes2_$","typeString":"type(bytes2)"},"typeName":{"id":4589,"name":"bytes2","nodeType":"ElementaryTypeName","src":"15996:6:24","typeDescriptions":{}}},"id":4592,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15996:12:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes2","typeString":"bytes2"}},"src":"15941:67:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"15920:88:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"15903:105:24"},{"assignments":[4597],"declarations":[{"constant":false,"id":4597,"mutability":"mutable","name":"expectedLength","nameLocation":"16098:14:24","nodeType":"VariableDeclaration","scope":4641,"src":"16090:22:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4596,"name":"uint256","nodeType":"ElementaryTypeName","src":"16090:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4605,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4604,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"3430","id":4598,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16115:2:24","typeDescriptions":{"typeIdentifier":"t_rational_40_by_1","typeString":"int_const 40"},"value":"40"},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4603,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":4599,"name":"hasPrefix","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4572,"src":"16120:9:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4600,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"16130:6:24","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":8712,"src":"16120:16:24","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$attached_to$_t_bool_$","typeString":"function (bool) pure returns (uint256)"}},"id":4601,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16120:18:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"32","id":4602,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16141:1:24","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"16120:22:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"16115:27:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"16090:52:24"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4610,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4608,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4606,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4545,"src":"16210:3:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":4607,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4543,"src":"16216:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"16210:11:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":4609,"name":"expectedLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4597,"src":"16225:14:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"16210:29:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":4639,"nodeType":"Block","src":"16494:53:24","statements":[{"expression":{"components":[{"hexValue":"66616c7365","id":4632,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"16517:5:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"arguments":[{"hexValue":"30","id":4635,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16532:1:24","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":4634,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16524:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":4633,"name":"address","nodeType":"ElementaryTypeName","src":"16524:7:24","typeDescriptions":{}}},"id":4636,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16524:10:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":4637,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"16516:19:24","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_address_$","typeString":"tuple(bool,address)"}},"functionReturnParameters":4551,"id":4638,"nodeType":"Return","src":"16509:26:24"}]},"id":4640,"nodeType":"IfStatement","src":"16206:341:24","trueBody":{"id":4631,"nodeType":"Block","src":"16241:247:24","statements":[{"assignments":[4612,4614],"declarations":[{"constant":false,"id":4612,"mutability":"mutable","name":"s","nameLocation":"16364:1:24","nodeType":"VariableDeclaration","scope":4631,"src":"16359:6:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4611,"name":"bool","nodeType":"ElementaryTypeName","src":"16359:4:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":4614,"mutability":"mutable","name":"v","nameLocation":"16375:1:24","nodeType":"VariableDeclaration","scope":4631,"src":"16367:9:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4613,"name":"uint256","nodeType":"ElementaryTypeName","src":"16367:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4620,"initialValue":{"arguments":[{"id":4616,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4541,"src":"16412:5:24","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":4617,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4543,"src":"16419:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4618,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4545,"src":"16426:3:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4615,"name":"_tryParseHexUintUncheckedBounds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4467,"src":"16380:31:24","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,uint256)"}},"id":4619,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16380:50:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"16358:72:24"},{"expression":{"components":[{"id":4621,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4612,"src":"16453:1:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"arguments":[{"arguments":[{"id":4626,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4614,"src":"16472:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4625,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16464:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":4624,"name":"uint160","nodeType":"ElementaryTypeName","src":"16464:7:24","typeDescriptions":{}}},"id":4627,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16464:10:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":4623,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16456:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":4622,"name":"address","nodeType":"ElementaryTypeName","src":"16456:7:24","typeDescriptions":{}}},"id":4628,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16456:19:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":4629,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"16452:24:24","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_address_$","typeString":"tuple(bool,address)"}},"functionReturnParameters":4551,"id":4630,"nodeType":"Return","src":"16445:31:24"}]}}]},"documentation":{"id":4539,"nodeType":"StructuredDocumentation","src":"15412:229:24","text":" @dev Variant of {parseAddress-string-uint256-uint256} that returns false if the parsing fails because input is not a properly\n formatted address. See {parseAddress-string-uint256-uint256} requirements."},"id":4642,"implemented":true,"kind":"function","modifiers":[],"name":"tryParseAddress","nameLocation":"15656:15:24","nodeType":"FunctionDefinition","parameters":{"id":4546,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4541,"mutability":"mutable","name":"input","nameLocation":"15696:5:24","nodeType":"VariableDeclaration","scope":4642,"src":"15682:19:24","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":4540,"name":"string","nodeType":"ElementaryTypeName","src":"15682:6:24","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":4543,"mutability":"mutable","name":"begin","nameLocation":"15720:5:24","nodeType":"VariableDeclaration","scope":4642,"src":"15712:13:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4542,"name":"uint256","nodeType":"ElementaryTypeName","src":"15712:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4545,"mutability":"mutable","name":"end","nameLocation":"15744:3:24","nodeType":"VariableDeclaration","scope":4642,"src":"15736:11:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4544,"name":"uint256","nodeType":"ElementaryTypeName","src":"15736:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15671:83:24"},"returnParameters":{"id":4551,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4548,"mutability":"mutable","name":"success","nameLocation":"15783:7:24","nodeType":"VariableDeclaration","scope":4642,"src":"15778:12:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4547,"name":"bool","nodeType":"ElementaryTypeName","src":"15778:4:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":4550,"mutability":"mutable","name":"value","nameLocation":"15800:5:24","nodeType":"VariableDeclaration","scope":4642,"src":"15792:13:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4549,"name":"address","nodeType":"ElementaryTypeName","src":"15792:7:24","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"15777:29:24"},"scope":4881,"src":"15647:907:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4701,"nodeType":"Block","src":"16625:477:24","statements":[{"assignments":[4650],"declarations":[{"constant":false,"id":4650,"mutability":"mutable","name":"value","nameLocation":"16642:5:24","nodeType":"VariableDeclaration","scope":4701,"src":"16636:11:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":4649,"name":"uint8","nodeType":"ElementaryTypeName","src":"16636:5:24","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"id":4655,"initialValue":{"arguments":[{"id":4653,"name":"chr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4644,"src":"16656:3:24","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes1","typeString":"bytes1"}],"id":4652,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16650:5:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":4651,"name":"uint8","nodeType":"ElementaryTypeName","src":"16650:5:24","typeDescriptions":{}}},"id":4654,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16650:10:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"VariableDeclarationStatement","src":"16636:24:24"},{"id":4698,"nodeType":"UncheckedBlock","src":"16827:243:24","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":4662,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":4658,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4656,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4650,"src":"16856:5:24","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"3437","id":4657,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16864:2:24","typeDescriptions":{"typeIdentifier":"t_rational_47_by_1","typeString":"int_const 47"},"value":"47"},"src":"16856:10:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":4661,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4659,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4650,"src":"16870:5:24","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"3538","id":4660,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16878:2:24","typeDescriptions":{"typeIdentifier":"t_rational_58_by_1","typeString":"int_const 58"},"value":"58"},"src":"16870:10:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"16856:24:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":4673,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":4669,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4667,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4650,"src":"16917:5:24","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"3936","id":4668,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16925:2:24","typeDescriptions":{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},"value":"96"},"src":"16917:10:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":4672,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4670,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4650,"src":"16931:5:24","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"313033","id":4671,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16939:3:24","typeDescriptions":{"typeIdentifier":"t_rational_103_by_1","typeString":"int_const 103"},"value":"103"},"src":"16931:11:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"16917:25:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":4684,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":4680,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4678,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4650,"src":"16979:5:24","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"3634","id":4679,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16987:2:24","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"16979:10:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":4683,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4681,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4650,"src":"16993:5:24","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"3731","id":4682,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17001:2:24","typeDescriptions":{"typeIdentifier":"t_rational_71_by_1","typeString":"int_const 71"},"value":"71"},"src":"16993:10:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"16979:24:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"expression":{"expression":{"arguments":[{"id":4691,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"17048:5:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":4690,"name":"uint8","nodeType":"ElementaryTypeName","src":"17048:5:24","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"}],"id":4689,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"17043:4:24","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4692,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17043:11:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint8","typeString":"type(uint8)"}},"id":4693,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"17055:3:24","memberName":"max","nodeType":"MemberAccess","src":"17043:15:24","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"functionReturnParameters":4648,"id":4694,"nodeType":"Return","src":"17036:22:24"},"id":4695,"nodeType":"IfStatement","src":"16975:83:24","trueBody":{"expression":{"id":4687,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4685,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4650,"src":"17005:5:24","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"hexValue":"3535","id":4686,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17014:2:24","typeDescriptions":{"typeIdentifier":"t_rational_55_by_1","typeString":"int_const 55"},"value":"55"},"src":"17005:11:24","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"id":4688,"nodeType":"ExpressionStatement","src":"17005:11:24"}},"id":4696,"nodeType":"IfStatement","src":"16913:145:24","trueBody":{"expression":{"id":4676,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4674,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4650,"src":"16944:5:24","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"hexValue":"3837","id":4675,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16953:2:24","typeDescriptions":{"typeIdentifier":"t_rational_87_by_1","typeString":"int_const 87"},"value":"87"},"src":"16944:11:24","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"id":4677,"nodeType":"ExpressionStatement","src":"16944:11:24"}},"id":4697,"nodeType":"IfStatement","src":"16852:206:24","trueBody":{"expression":{"id":4665,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4663,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4650,"src":"16882:5:24","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"hexValue":"3438","id":4664,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16891:2:24","typeDescriptions":{"typeIdentifier":"t_rational_48_by_1","typeString":"int_const 48"},"value":"48"},"src":"16882:11:24","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"id":4666,"nodeType":"ExpressionStatement","src":"16882:11:24"}}]},{"expression":{"id":4699,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4650,"src":"17089:5:24","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"functionReturnParameters":4648,"id":4700,"nodeType":"Return","src":"17082:12:24"}]},"id":4702,"implemented":true,"kind":"function","modifiers":[],"name":"_tryParseChr","nameLocation":"16571:12:24","nodeType":"FunctionDefinition","parameters":{"id":4645,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4644,"mutability":"mutable","name":"chr","nameLocation":"16591:3:24","nodeType":"VariableDeclaration","scope":4702,"src":"16584:10:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"typeName":{"id":4643,"name":"bytes1","nodeType":"ElementaryTypeName","src":"16584:6:24","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"visibility":"internal"}],"src":"16583:12:24"},"returnParameters":{"id":4648,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4647,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4702,"src":"16618:5:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":4646,"name":"uint8","nodeType":"ElementaryTypeName","src":"16618:5:24","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"16617:7:24"},"scope":4881,"src":"16562:540:24","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":4867,"nodeType":"Block","src":"17779:1361:24","statements":[{"assignments":[4711],"declarations":[{"constant":false,"id":4711,"mutability":"mutable","name":"buffer","nameLocation":"17803:6:24","nodeType":"VariableDeclaration","scope":4867,"src":"17790:19:24","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4710,"name":"bytes","nodeType":"ElementaryTypeName","src":"17790:5:24","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":4716,"initialValue":{"arguments":[{"id":4714,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4705,"src":"17818:5:24","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":4713,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"17812:5:24","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":4712,"name":"bytes","nodeType":"ElementaryTypeName","src":"17812:5:24","typeDescriptions":{}}},"id":4715,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17812:12:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"17790:34:24"},{"assignments":[4718],"declarations":[{"constant":false,"id":4718,"mutability":"mutable","name":"output","nameLocation":"17848:6:24","nodeType":"VariableDeclaration","scope":4867,"src":"17835:19:24","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4717,"name":"bytes","nodeType":"ElementaryTypeName","src":"17835:5:24","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":4726,"initialValue":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4724,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":4721,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17867:1:24","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"expression":{"id":4722,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4711,"src":"17871:6:24","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":4723,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"17878:6:24","memberName":"length","nodeType":"MemberAccess","src":"17871:13:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"17867:17:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4720,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"17857:9:24","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$","typeString":"function (uint256) pure returns (bytes memory)"},"typeName":{"id":4719,"name":"bytes","nodeType":"ElementaryTypeName","src":"17861:5:24","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}}},"id":4725,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17857:28:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"17835:50:24"},{"assignments":[4728],"declarations":[{"constant":false,"id":4728,"mutability":"mutable","name":"outputLength","nameLocation":"17927:12:24","nodeType":"VariableDeclaration","scope":4867,"src":"17919:20:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4727,"name":"uint256","nodeType":"ElementaryTypeName","src":"17919:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4730,"initialValue":{"hexValue":"30","id":4729,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17942:1:24","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"17919:24:24"},{"body":{"id":4859,"nodeType":"Block","src":"17996:871:24","statements":[{"assignments":[4742],"declarations":[{"constant":false,"id":4742,"mutability":"mutable","name":"char","nameLocation":"18018:4:24","nodeType":"VariableDeclaration","scope":4859,"src":"18011:11:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"typeName":{"id":4741,"name":"bytes1","nodeType":"ElementaryTypeName","src":"18011:6:24","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"visibility":"internal"}],"id":4750,"initialValue":{"arguments":[{"arguments":[{"id":4746,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4711,"src":"18055:6:24","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":4747,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4732,"src":"18063:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4745,"name":"_unsafeReadBytesOffset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4880,"src":"18032:22:24","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_bytes32_$","typeString":"function (bytes memory,uint256) pure returns (bytes32)"}},"id":4748,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18032:33:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":4744,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"18025:6:24","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes1_$","typeString":"type(bytes1)"},"typeName":{"id":4743,"name":"bytes1","nodeType":"ElementaryTypeName","src":"18025:6:24","typeDescriptions":{}}},"id":4749,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18025:41:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"VariableDeclarationStatement","src":"18011:55:24"},{"condition":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4762,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4759,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4751,"name":"SPECIAL_CHARS_LOOKUP","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3532,"src":"18087:20:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4757,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":4752,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18111:1:24","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"arguments":[{"id":4755,"name":"char","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4742,"src":"18122:4:24","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes1","typeString":"bytes1"}],"id":4754,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"18116:5:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":4753,"name":"uint8","nodeType":"ElementaryTypeName","src":"18116:5:24","typeDescriptions":{}}},"id":4756,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18116:11:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"18111:16:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4758,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"18110:18:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"18087:41:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4760,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"18086:43:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":4761,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18133:1:24","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"18086:48:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":4763,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"18085:50:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":4857,"nodeType":"Block","src":"18792:64:24","statements":[{"expression":{"id":4855,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":4850,"name":"output","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4718,"src":"18811:6:24","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":4853,"indexExpression":{"id":4852,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"18818:14:24","subExpression":{"id":4851,"name":"outputLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4728,"src":"18818:12:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"18811:22:24","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":4854,"name":"char","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4742,"src":"18836:4:24","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"src":"18811:29:24","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":4856,"nodeType":"ExpressionStatement","src":"18811:29:24"}]},"id":4858,"nodeType":"IfStatement","src":"18081:775:24","trueBody":{"id":4849,"nodeType":"Block","src":"18137:649:24","statements":[{"expression":{"id":4769,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":4764,"name":"output","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4718,"src":"18156:6:24","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":4767,"indexExpression":{"id":4766,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"18163:14:24","subExpression":{"id":4765,"name":"outputLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4728,"src":"18163:12:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"18156:22:24","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"5c","id":4768,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"18181:4:24","typeDescriptions":{"typeIdentifier":"t_stringliteral_731553fa98541ade8b78284229adfe09a819380dee9244baac20dd1e0aa24095","typeString":"literal_string \"\\\""},"value":"\\"},"src":"18156:29:24","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":4770,"nodeType":"ExpressionStatement","src":"18156:29:24"},{"condition":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":4773,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4771,"name":"char","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4742,"src":"18208:4:24","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30783038","id":4772,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18216:4:24","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"0x08"},"src":"18208:12:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":4783,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4781,"name":"char","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4742,"src":"18278:4:24","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30783039","id":4782,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18286:4:24","typeDescriptions":{"typeIdentifier":"t_rational_9_by_1","typeString":"int_const 9"},"value":"0x09"},"src":"18278:12:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":4793,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4791,"name":"char","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4742,"src":"18348:4:24","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30783061","id":4792,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18356:4:24","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"0x0a"},"src":"18348:12:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":4803,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4801,"name":"char","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4742,"src":"18418:4:24","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30783063","id":4802,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18426:4:24","typeDescriptions":{"typeIdentifier":"t_rational_12_by_1","typeString":"int_const 12"},"value":"0x0c"},"src":"18418:12:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":4813,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4811,"name":"char","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4742,"src":"18488:4:24","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30783064","id":4812,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18496:4:24","typeDescriptions":{"typeIdentifier":"t_rational_13_by_1","typeString":"int_const 13"},"value":"0x0d"},"src":"18488:12:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":4823,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4821,"name":"char","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4742,"src":"18558:4:24","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30783563","id":4822,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18566:4:24","typeDescriptions":{"typeIdentifier":"t_rational_92_by_1","typeString":"int_const 92"},"value":"0x5c"},"src":"18558:12:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":4833,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4831,"name":"char","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4742,"src":"18629:4:24","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30783232","id":4832,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18637:4:24","typeDescriptions":{"typeIdentifier":"t_rational_34_by_1","typeString":"int_const 34"},"value":"0x22"},"src":"18629:12:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4842,"nodeType":"IfStatement","src":"18625:146:24","trueBody":{"id":4841,"nodeType":"Block","src":"18643:128:24","statements":[{"expression":{"id":4839,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":4834,"name":"output","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4718,"src":"18723:6:24","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":4837,"indexExpression":{"id":4836,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"18730:14:24","subExpression":{"id":4835,"name":"outputLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4728,"src":"18730:12:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"18723:22:24","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"22","id":4838,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"18748:3:24","typeDescriptions":{"typeIdentifier":"t_stringliteral_6e9f33448a4153023cdaf3eb759f1afdc24aba433a3e18b683f8c04a6eaa69f0","typeString":"literal_string \"\"\""},"value":"\""},"src":"18723:28:24","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":4840,"nodeType":"ExpressionStatement","src":"18723:28:24"}]}},"id":4843,"nodeType":"IfStatement","src":"18554:217:24","trueBody":{"expression":{"id":4829,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":4824,"name":"output","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4718,"src":"18572:6:24","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":4827,"indexExpression":{"id":4826,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"18579:14:24","subExpression":{"id":4825,"name":"outputLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4728,"src":"18579:12:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"18572:22:24","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"5c","id":4828,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"18597:4:24","typeDescriptions":{"typeIdentifier":"t_stringliteral_731553fa98541ade8b78284229adfe09a819380dee9244baac20dd1e0aa24095","typeString":"literal_string \"\\\""},"value":"\\"},"src":"18572:29:24","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":4830,"nodeType":"ExpressionStatement","src":"18572:29:24"}},"id":4844,"nodeType":"IfStatement","src":"18484:287:24","trueBody":{"expression":{"id":4819,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":4814,"name":"output","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4718,"src":"18502:6:24","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":4817,"indexExpression":{"id":4816,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"18509:14:24","subExpression":{"id":4815,"name":"outputLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4728,"src":"18509:12:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"18502:22:24","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"72","id":4818,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"18527:3:24","typeDescriptions":{"typeIdentifier":"t_stringliteral_414f72a4d550cad29f17d9d99a4af64b3776ec5538cd440cef0f03fef2e9e010","typeString":"literal_string \"r\""},"value":"r"},"src":"18502:28:24","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":4820,"nodeType":"ExpressionStatement","src":"18502:28:24"}},"id":4845,"nodeType":"IfStatement","src":"18414:357:24","trueBody":{"expression":{"id":4809,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":4804,"name":"output","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4718,"src":"18432:6:24","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":4807,"indexExpression":{"id":4806,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"18439:14:24","subExpression":{"id":4805,"name":"outputLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4728,"src":"18439:12:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"18432:22:24","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"66","id":4808,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"18457:3:24","typeDescriptions":{"typeIdentifier":"t_stringliteral_d1e8aeb79500496ef3dc2e57ba746a8315d048b7a664a2bf948db4fa91960483","typeString":"literal_string \"f\""},"value":"f"},"src":"18432:28:24","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":4810,"nodeType":"ExpressionStatement","src":"18432:28:24"}},"id":4846,"nodeType":"IfStatement","src":"18344:427:24","trueBody":{"expression":{"id":4799,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":4794,"name":"output","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4718,"src":"18362:6:24","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":4797,"indexExpression":{"id":4796,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"18369:14:24","subExpression":{"id":4795,"name":"outputLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4728,"src":"18369:12:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"18362:22:24","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"6e","id":4798,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"18387:3:24","typeDescriptions":{"typeIdentifier":"t_stringliteral_4b4ecedb4964a40fe416b16c7bd8b46092040ec42ef0aa69e59f09872f105cf3","typeString":"literal_string \"n\""},"value":"n"},"src":"18362:28:24","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":4800,"nodeType":"ExpressionStatement","src":"18362:28:24"}},"id":4847,"nodeType":"IfStatement","src":"18274:497:24","trueBody":{"expression":{"id":4789,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":4784,"name":"output","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4718,"src":"18292:6:24","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":4787,"indexExpression":{"id":4786,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"18299:14:24","subExpression":{"id":4785,"name":"outputLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4728,"src":"18299:12:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"18292:22:24","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74","id":4788,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"18317:3:24","typeDescriptions":{"typeIdentifier":"t_stringliteral_cac1bb71f0a97c8ac94ca9546b43178a9ad254c7b757ac07433aa6df35cd8089","typeString":"literal_string \"t\""},"value":"t"},"src":"18292:28:24","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":4790,"nodeType":"ExpressionStatement","src":"18292:28:24"}},"id":4848,"nodeType":"IfStatement","src":"18204:567:24","trueBody":{"expression":{"id":4779,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":4774,"name":"output","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4718,"src":"18222:6:24","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":4777,"indexExpression":{"id":4776,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"18229:14:24","subExpression":{"id":4775,"name":"outputLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4728,"src":"18229:12:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"18222:22:24","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"62","id":4778,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"18247:3:24","typeDescriptions":{"typeIdentifier":"t_stringliteral_b5553de315e0edf504d9150af82dafa5c4667fa618ed0a6f19c69b41166c5510","typeString":"literal_string \"b\""},"value":"b"},"src":"18222:28:24","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":4780,"nodeType":"ExpressionStatement","src":"18222:28:24"}}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4737,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4734,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4732,"src":"17972:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":4735,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4711,"src":"17976:6:24","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":4736,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"17983:6:24","memberName":"length","nodeType":"MemberAccess","src":"17976:13:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"17972:17:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4860,"initializationExpression":{"assignments":[4732],"declarations":[{"constant":false,"id":4732,"mutability":"mutable","name":"i","nameLocation":"17969:1:24","nodeType":"VariableDeclaration","scope":4860,"src":"17961:9:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4731,"name":"uint256","nodeType":"ElementaryTypeName","src":"17961:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4733,"nodeType":"VariableDeclarationStatement","src":"17961:9:24"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":4739,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":true,"src":"17991:3:24","subExpression":{"id":4738,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4732,"src":"17993:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4740,"nodeType":"ExpressionStatement","src":"17991:3:24"},"nodeType":"ForStatement","src":"17956:911:24"},{"AST":{"nativeSrc":"18967:132:24","nodeType":"YulBlock","src":"18967:132:24","statements":[{"expression":{"arguments":[{"name":"output","nativeSrc":"18989:6:24","nodeType":"YulIdentifier","src":"18989:6:24"},{"name":"outputLength","nativeSrc":"18997:12:24","nodeType":"YulIdentifier","src":"18997:12:24"}],"functionName":{"name":"mstore","nativeSrc":"18982:6:24","nodeType":"YulIdentifier","src":"18982:6:24"},"nativeSrc":"18982:28:24","nodeType":"YulFunctionCall","src":"18982:28:24"},"nativeSrc":"18982:28:24","nodeType":"YulExpressionStatement","src":"18982:28:24"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"19031:4:24","nodeType":"YulLiteral","src":"19031:4:24","type":"","value":"0x40"},{"arguments":[{"name":"output","nativeSrc":"19041:6:24","nodeType":"YulIdentifier","src":"19041:6:24"},{"arguments":[{"kind":"number","nativeSrc":"19053:1:24","nodeType":"YulLiteral","src":"19053:1:24","type":"","value":"5"},{"arguments":[{"kind":"number","nativeSrc":"19060:1:24","nodeType":"YulLiteral","src":"19060:1:24","type":"","value":"5"},{"arguments":[{"name":"outputLength","nativeSrc":"19067:12:24","nodeType":"YulIdentifier","src":"19067:12:24"},{"kind":"number","nativeSrc":"19081:2:24","nodeType":"YulLiteral","src":"19081:2:24","type":"","value":"63"}],"functionName":{"name":"add","nativeSrc":"19063:3:24","nodeType":"YulIdentifier","src":"19063:3:24"},"nativeSrc":"19063:21:24","nodeType":"YulFunctionCall","src":"19063:21:24"}],"functionName":{"name":"shr","nativeSrc":"19056:3:24","nodeType":"YulIdentifier","src":"19056:3:24"},"nativeSrc":"19056:29:24","nodeType":"YulFunctionCall","src":"19056:29:24"}],"functionName":{"name":"shl","nativeSrc":"19049:3:24","nodeType":"YulIdentifier","src":"19049:3:24"},"nativeSrc":"19049:37:24","nodeType":"YulFunctionCall","src":"19049:37:24"}],"functionName":{"name":"add","nativeSrc":"19037:3:24","nodeType":"YulIdentifier","src":"19037:3:24"},"nativeSrc":"19037:50:24","nodeType":"YulFunctionCall","src":"19037:50:24"}],"functionName":{"name":"mstore","nativeSrc":"19024:6:24","nodeType":"YulIdentifier","src":"19024:6:24"},"nativeSrc":"19024:64:24","nodeType":"YulFunctionCall","src":"19024:64:24"},"nativeSrc":"19024:64:24","nodeType":"YulExpressionStatement","src":"19024:64:24"}]},"evmVersion":"paris","externalReferences":[{"declaration":4718,"isOffset":false,"isSlot":false,"src":"18989:6:24","valueSize":1},{"declaration":4718,"isOffset":false,"isSlot":false,"src":"19041:6:24","valueSize":1},{"declaration":4728,"isOffset":false,"isSlot":false,"src":"18997:12:24","valueSize":1},{"declaration":4728,"isOffset":false,"isSlot":false,"src":"19067:12:24","valueSize":1}],"flags":["memory-safe"],"id":4861,"nodeType":"InlineAssembly","src":"18942:157:24"},{"expression":{"arguments":[{"id":4864,"name":"output","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4718,"src":"19125:6:24","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":4863,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"19118:6:24","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":4862,"name":"string","nodeType":"ElementaryTypeName","src":"19118:6:24","typeDescriptions":{}}},"id":4865,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19118:14:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":4709,"id":4866,"nodeType":"Return","src":"19111:21:24"}]},"documentation":{"id":4703,"nodeType":"StructuredDocumentation","src":"17110:584:24","text":" @dev Escape special characters in JSON strings. This can be useful to prevent JSON injection in NFT metadata.\n WARNING: This function should only be used in double quoted JSON strings. Single quotes are not escaped.\n NOTE: This function escapes all unicode characters, and not just the ones in ranges defined in section 2.5 of\n RFC-4627 (U+0000 to U+001F, U+0022 and U+005C). ECMAScript's `JSON.parse` does recover escaped unicode\n characters that are not in this range, but other tooling may provide different results."},"id":4868,"implemented":true,"kind":"function","modifiers":[],"name":"escapeJSON","nameLocation":"17709:10:24","nodeType":"FunctionDefinition","parameters":{"id":4706,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4705,"mutability":"mutable","name":"input","nameLocation":"17734:5:24","nodeType":"VariableDeclaration","scope":4868,"src":"17720:19:24","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":4704,"name":"string","nodeType":"ElementaryTypeName","src":"17720:6:24","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"17719:21:24"},"returnParameters":{"id":4709,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4708,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4868,"src":"17764:13:24","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":4707,"name":"string","nodeType":"ElementaryTypeName","src":"17764:6:24","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"17763:15:24"},"scope":4881,"src":"17700:1440:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4879,"nodeType":"Block","src":"19533:230:24","statements":[{"AST":{"nativeSrc":"19684:72:24","nodeType":"YulBlock","src":"19684:72:24","statements":[{"nativeSrc":"19699:46:24","nodeType":"YulAssignment","src":"19699:46:24","value":{"arguments":[{"arguments":[{"name":"buffer","nativeSrc":"19718:6:24","nodeType":"YulIdentifier","src":"19718:6:24"},{"arguments":[{"kind":"number","nativeSrc":"19730:4:24","nodeType":"YulLiteral","src":"19730:4:24","type":"","value":"0x20"},{"name":"offset","nativeSrc":"19736:6:24","nodeType":"YulIdentifier","src":"19736:6:24"}],"functionName":{"name":"add","nativeSrc":"19726:3:24","nodeType":"YulIdentifier","src":"19726:3:24"},"nativeSrc":"19726:17:24","nodeType":"YulFunctionCall","src":"19726:17:24"}],"functionName":{"name":"add","nativeSrc":"19714:3:24","nodeType":"YulIdentifier","src":"19714:3:24"},"nativeSrc":"19714:30:24","nodeType":"YulFunctionCall","src":"19714:30:24"}],"functionName":{"name":"mload","nativeSrc":"19708:5:24","nodeType":"YulIdentifier","src":"19708:5:24"},"nativeSrc":"19708:37:24","nodeType":"YulFunctionCall","src":"19708:37:24"},"variableNames":[{"name":"value","nativeSrc":"19699:5:24","nodeType":"YulIdentifier","src":"19699:5:24"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":4871,"isOffset":false,"isSlot":false,"src":"19718:6:24","valueSize":1},{"declaration":4873,"isOffset":false,"isSlot":false,"src":"19736:6:24","valueSize":1},{"declaration":4876,"isOffset":false,"isSlot":false,"src":"19699:5:24","valueSize":1}],"flags":["memory-safe"],"id":4878,"nodeType":"InlineAssembly","src":"19659:97:24"}]},"documentation":{"id":4869,"nodeType":"StructuredDocumentation","src":"19148:273:24","text":" @dev Reads a bytes32 from a bytes array without bounds checking.\n NOTE: making this function internal would mean it could be used with memory unsafe offset, and marking the\n assembly block as such would prevent some optimizations."},"id":4880,"implemented":true,"kind":"function","modifiers":[],"name":"_unsafeReadBytesOffset","nameLocation":"19436:22:24","nodeType":"FunctionDefinition","parameters":{"id":4874,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4871,"mutability":"mutable","name":"buffer","nameLocation":"19472:6:24","nodeType":"VariableDeclaration","scope":4880,"src":"19459:19:24","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4870,"name":"bytes","nodeType":"ElementaryTypeName","src":"19459:5:24","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":4873,"mutability":"mutable","name":"offset","nameLocation":"19488:6:24","nodeType":"VariableDeclaration","scope":4880,"src":"19480:14:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4872,"name":"uint256","nodeType":"ElementaryTypeName","src":"19480:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"19458:37:24"},"returnParameters":{"id":4877,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4876,"mutability":"mutable","name":"value","nameLocation":"19526:5:24","nodeType":"VariableDeclaration","scope":4880,"src":"19518:13:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4875,"name":"bytes32","nodeType":"ElementaryTypeName","src":"19518:7:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"19517:15:24"},"scope":4881,"src":"19427:336:24","stateMutability":"pure","virtual":false,"visibility":"private"}],"scope":4882,"src":"309:19457:24","usedErrors":[3539,3542,3545],"usedEvents":[]}],"src":"104:19664:24"},"id":24},"@openzeppelin/contracts/utils/cryptography/ECDSA.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/cryptography/ECDSA.sol","exportedSymbols":{"ECDSA":[5229]},"id":5230,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":4883,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"115:24:25"},{"abstract":false,"baseContracts":[],"canonicalName":"ECDSA","contractDependencies":[],"contractKind":"library","documentation":{"id":4884,"nodeType":"StructuredDocumentation","src":"143:210:25","text":" @dev Elliptic Curve Digital Signature Algorithm (ECDSA) operations.\n These functions can be used to verify that a message was signed by the holder\n of the private keys of a given address."},"fullyImplemented":true,"id":5229,"linearizedBaseContracts":[5229],"name":"ECDSA","nameLocation":"363:5:25","nodeType":"ContractDefinition","nodes":[{"canonicalName":"ECDSA.RecoverError","id":4889,"members":[{"id":4885,"name":"NoError","nameLocation":"405:7:25","nodeType":"EnumValue","src":"405:7:25"},{"id":4886,"name":"InvalidSignature","nameLocation":"423:16:25","nodeType":"EnumValue","src":"423:16:25"},{"id":4887,"name":"InvalidSignatureLength","nameLocation":"450:22:25","nodeType":"EnumValue","src":"450:22:25"},{"id":4888,"name":"InvalidSignatureS","nameLocation":"483:17:25","nodeType":"EnumValue","src":"483:17:25"}],"name":"RecoverError","nameLocation":"381:12:25","nodeType":"EnumDefinition","src":"376:131:25"},{"documentation":{"id":4890,"nodeType":"StructuredDocumentation","src":"515:65:25","text":" @dev The signature derives the `address(0)`."},"errorSelector":"f645eedf","id":4892,"name":"ECDSAInvalidSignature","nameLocation":"592:21:25","nodeType":"ErrorDefinition","parameters":{"id":4891,"nodeType":"ParameterList","parameters":[],"src":"613:2:25"},"src":"586:30:25"},{"documentation":{"id":4893,"nodeType":"StructuredDocumentation","src":"624:62:25","text":" @dev The signature has an invalid length."},"errorSelector":"fce698f7","id":4897,"name":"ECDSAInvalidSignatureLength","nameLocation":"698:27:25","nodeType":"ErrorDefinition","parameters":{"id":4896,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4895,"mutability":"mutable","name":"length","nameLocation":"734:6:25","nodeType":"VariableDeclaration","scope":4897,"src":"726:14:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4894,"name":"uint256","nodeType":"ElementaryTypeName","src":"726:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"725:16:25"},"src":"692:50:25"},{"documentation":{"id":4898,"nodeType":"StructuredDocumentation","src":"750:87:25","text":" @dev The signature has an S value that is in the upper half order."},"errorSelector":"d78bce0c","id":4902,"name":"ECDSAInvalidSignatureS","nameLocation":"849:22:25","nodeType":"ErrorDefinition","parameters":{"id":4901,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4900,"mutability":"mutable","name":"s","nameLocation":"880:1:25","nodeType":"VariableDeclaration","scope":4902,"src":"872:9:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4899,"name":"bytes32","nodeType":"ElementaryTypeName","src":"872:7:25","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"871:11:25"},"src":"843:40:25"},{"body":{"id":4954,"nodeType":"Block","src":"2343:638:25","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4920,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":4917,"name":"signature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4907,"src":"2358:9:25","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":4918,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2368:6:25","memberName":"length","nodeType":"MemberAccess","src":"2358:16:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"3635","id":4919,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2378:2:25","typeDescriptions":{"typeIdentifier":"t_rational_65_by_1","typeString":"int_const 65"},"value":"65"},"src":"2358:22:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":4952,"nodeType":"Block","src":"2864:110:25","statements":[{"expression":{"components":[{"arguments":[{"hexValue":"30","id":4941,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2895:1:25","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":4940,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2887:7:25","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":4939,"name":"address","nodeType":"ElementaryTypeName","src":"2887:7:25","typeDescriptions":{}}},"id":4942,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2887:10:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":4943,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4889,"src":"2899:12:25","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$4889_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":4944,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2912:22:25","memberName":"InvalidSignatureLength","nodeType":"MemberAccess","referencedDeclaration":4887,"src":"2899:35:25","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$4889","typeString":"enum ECDSA.RecoverError"}},{"arguments":[{"expression":{"id":4947,"name":"signature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4907,"src":"2944:9:25","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":4948,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2954:6:25","memberName":"length","nodeType":"MemberAccess","src":"2944:16:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4946,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2936:7:25","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":4945,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2936:7:25","typeDescriptions":{}}},"id":4949,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2936:25:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":4950,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2886:76:25","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$4889_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"functionReturnParameters":4916,"id":4951,"nodeType":"Return","src":"2879:83:25"}]},"id":4953,"nodeType":"IfStatement","src":"2354:620:25","trueBody":{"id":4938,"nodeType":"Block","src":"2382:476:25","statements":[{"assignments":[4922],"declarations":[{"constant":false,"id":4922,"mutability":"mutable","name":"r","nameLocation":"2405:1:25","nodeType":"VariableDeclaration","scope":4938,"src":"2397:9:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4921,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2397:7:25","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":4923,"nodeType":"VariableDeclarationStatement","src":"2397:9:25"},{"assignments":[4925],"declarations":[{"constant":false,"id":4925,"mutability":"mutable","name":"s","nameLocation":"2429:1:25","nodeType":"VariableDeclaration","scope":4938,"src":"2421:9:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4924,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2421:7:25","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":4926,"nodeType":"VariableDeclarationStatement","src":"2421:9:25"},{"assignments":[4928],"declarations":[{"constant":false,"id":4928,"mutability":"mutable","name":"v","nameLocation":"2451:1:25","nodeType":"VariableDeclaration","scope":4938,"src":"2445:7:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":4927,"name":"uint8","nodeType":"ElementaryTypeName","src":"2445:5:25","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"id":4929,"nodeType":"VariableDeclarationStatement","src":"2445:7:25"},{"AST":{"nativeSrc":"2625:175:25","nodeType":"YulBlock","src":"2625:175:25","statements":[{"nativeSrc":"2644:32:25","nodeType":"YulAssignment","src":"2644:32:25","value":{"arguments":[{"arguments":[{"name":"signature","nativeSrc":"2659:9:25","nodeType":"YulIdentifier","src":"2659:9:25"},{"kind":"number","nativeSrc":"2670:4:25","nodeType":"YulLiteral","src":"2670:4:25","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"2655:3:25","nodeType":"YulIdentifier","src":"2655:3:25"},"nativeSrc":"2655:20:25","nodeType":"YulFunctionCall","src":"2655:20:25"}],"functionName":{"name":"mload","nativeSrc":"2649:5:25","nodeType":"YulIdentifier","src":"2649:5:25"},"nativeSrc":"2649:27:25","nodeType":"YulFunctionCall","src":"2649:27:25"},"variableNames":[{"name":"r","nativeSrc":"2644:1:25","nodeType":"YulIdentifier","src":"2644:1:25"}]},{"nativeSrc":"2694:32:25","nodeType":"YulAssignment","src":"2694:32:25","value":{"arguments":[{"arguments":[{"name":"signature","nativeSrc":"2709:9:25","nodeType":"YulIdentifier","src":"2709:9:25"},{"kind":"number","nativeSrc":"2720:4:25","nodeType":"YulLiteral","src":"2720:4:25","type":"","value":"0x40"}],"functionName":{"name":"add","nativeSrc":"2705:3:25","nodeType":"YulIdentifier","src":"2705:3:25"},"nativeSrc":"2705:20:25","nodeType":"YulFunctionCall","src":"2705:20:25"}],"functionName":{"name":"mload","nativeSrc":"2699:5:25","nodeType":"YulIdentifier","src":"2699:5:25"},"nativeSrc":"2699:27:25","nodeType":"YulFunctionCall","src":"2699:27:25"},"variableNames":[{"name":"s","nativeSrc":"2694:1:25","nodeType":"YulIdentifier","src":"2694:1:25"}]},{"nativeSrc":"2744:41:25","nodeType":"YulAssignment","src":"2744:41:25","value":{"arguments":[{"kind":"number","nativeSrc":"2754:1:25","nodeType":"YulLiteral","src":"2754:1:25","type":"","value":"0"},{"arguments":[{"arguments":[{"name":"signature","nativeSrc":"2767:9:25","nodeType":"YulIdentifier","src":"2767:9:25"},{"kind":"number","nativeSrc":"2778:4:25","nodeType":"YulLiteral","src":"2778:4:25","type":"","value":"0x60"}],"functionName":{"name":"add","nativeSrc":"2763:3:25","nodeType":"YulIdentifier","src":"2763:3:25"},"nativeSrc":"2763:20:25","nodeType":"YulFunctionCall","src":"2763:20:25"}],"functionName":{"name":"mload","nativeSrc":"2757:5:25","nodeType":"YulIdentifier","src":"2757:5:25"},"nativeSrc":"2757:27:25","nodeType":"YulFunctionCall","src":"2757:27:25"}],"functionName":{"name":"byte","nativeSrc":"2749:4:25","nodeType":"YulIdentifier","src":"2749:4:25"},"nativeSrc":"2749:36:25","nodeType":"YulFunctionCall","src":"2749:36:25"},"variableNames":[{"name":"v","nativeSrc":"2744:1:25","nodeType":"YulIdentifier","src":"2744:1:25"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":4922,"isOffset":false,"isSlot":false,"src":"2644:1:25","valueSize":1},{"declaration":4925,"isOffset":false,"isSlot":false,"src":"2694:1:25","valueSize":1},{"declaration":4907,"isOffset":false,"isSlot":false,"src":"2659:9:25","valueSize":1},{"declaration":4907,"isOffset":false,"isSlot":false,"src":"2709:9:25","valueSize":1},{"declaration":4907,"isOffset":false,"isSlot":false,"src":"2767:9:25","valueSize":1},{"declaration":4928,"isOffset":false,"isSlot":false,"src":"2744:1:25","valueSize":1}],"flags":["memory-safe"],"id":4930,"nodeType":"InlineAssembly","src":"2600:200:25"},{"expression":{"arguments":[{"id":4932,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4905,"src":"2832:4:25","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":4933,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4928,"src":"2838:1:25","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":4934,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4922,"src":"2841:1:25","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":4935,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4925,"src":"2844:1:25","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":4931,"name":"tryRecover","nodeType":"Identifier","overloadedDeclarations":[4955,5035,5143],"referencedDeclaration":5143,"src":"2821:10:25","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$_t_enum$_RecoverError_$4889_$_t_bytes32_$","typeString":"function (bytes32,uint8,bytes32,bytes32) pure returns (address,enum ECDSA.RecoverError,bytes32)"}},"id":4936,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2821:25:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$4889_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"functionReturnParameters":4916,"id":4937,"nodeType":"Return","src":"2814:32:25"}]}}]},"documentation":{"id":4903,"nodeType":"StructuredDocumentation","src":"891:1287:25","text":" @dev Returns the address that signed a hashed message (`hash`) with `signature` or an error. This will not\n return address(0) without also returning an error description. Errors are documented using an enum (error type)\n and a bytes32 providing additional information about the error.\n If no error is returned, then the address can be used for verification purposes.\n The `ecrecover` EVM precompile allows for malleable (non-unique) signatures:\n this function rejects them by requiring the `s` value to be in the lower\n half order, and the `v` value to be either 27 or 28.\n IMPORTANT: `hash` _must_ be the result of a hash operation for the\n verification to be secure: it is possible to craft signatures that\n recover to arbitrary addresses for non-hashed data. A safe way to ensure\n this is by receiving a hash of the original message (which may otherwise\n be too long), and then calling {MessageHashUtils-toEthSignedMessageHash} on it.\n Documentation for signature generation:\n - with https://web3js.readthedocs.io/en/v1.3.4/web3-eth-accounts.html#sign[Web3.js]\n - with https://docs.ethers.io/v5/api/signer/#Signer-signMessage[ethers]"},"id":4955,"implemented":true,"kind":"function","modifiers":[],"name":"tryRecover","nameLocation":"2193:10:25","nodeType":"FunctionDefinition","parameters":{"id":4908,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4905,"mutability":"mutable","name":"hash","nameLocation":"2222:4:25","nodeType":"VariableDeclaration","scope":4955,"src":"2214:12:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4904,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2214:7:25","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":4907,"mutability":"mutable","name":"signature","nameLocation":"2250:9:25","nodeType":"VariableDeclaration","scope":4955,"src":"2237:22:25","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4906,"name":"bytes","nodeType":"ElementaryTypeName","src":"2237:5:25","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2203:63:25"},"returnParameters":{"id":4916,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4910,"mutability":"mutable","name":"recovered","nameLocation":"2298:9:25","nodeType":"VariableDeclaration","scope":4955,"src":"2290:17:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4909,"name":"address","nodeType":"ElementaryTypeName","src":"2290:7:25","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4913,"mutability":"mutable","name":"err","nameLocation":"2322:3:25","nodeType":"VariableDeclaration","scope":4955,"src":"2309:16:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$4889","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":4912,"nodeType":"UserDefinedTypeName","pathNode":{"id":4911,"name":"RecoverError","nameLocations":["2309:12:25"],"nodeType":"IdentifierPath","referencedDeclaration":4889,"src":"2309:12:25"},"referencedDeclaration":4889,"src":"2309:12:25","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$4889","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"},{"constant":false,"id":4915,"mutability":"mutable","name":"errArg","nameLocation":"2335:6:25","nodeType":"VariableDeclaration","scope":4955,"src":"2327:14:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4914,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2327:7:25","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2289:53:25"},"scope":5229,"src":"2184:797:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4984,"nodeType":"Block","src":"3891:172:25","statements":[{"assignments":[4966,4969,4971],"declarations":[{"constant":false,"id":4966,"mutability":"mutable","name":"recovered","nameLocation":"3911:9:25","nodeType":"VariableDeclaration","scope":4984,"src":"3903:17:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4965,"name":"address","nodeType":"ElementaryTypeName","src":"3903:7:25","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4969,"mutability":"mutable","name":"error","nameLocation":"3935:5:25","nodeType":"VariableDeclaration","scope":4984,"src":"3922:18:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$4889","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":4968,"nodeType":"UserDefinedTypeName","pathNode":{"id":4967,"name":"RecoverError","nameLocations":["3922:12:25"],"nodeType":"IdentifierPath","referencedDeclaration":4889,"src":"3922:12:25"},"referencedDeclaration":4889,"src":"3922:12:25","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$4889","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"},{"constant":false,"id":4971,"mutability":"mutable","name":"errorArg","nameLocation":"3950:8:25","nodeType":"VariableDeclaration","scope":4984,"src":"3942:16:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4970,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3942:7:25","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":4976,"initialValue":{"arguments":[{"id":4973,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4958,"src":"3973:4:25","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":4974,"name":"signature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4960,"src":"3979:9:25","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":4972,"name":"tryRecover","nodeType":"Identifier","overloadedDeclarations":[4955,5035,5143],"referencedDeclaration":4955,"src":"3962:10:25","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes_memory_ptr_$returns$_t_address_$_t_enum$_RecoverError_$4889_$_t_bytes32_$","typeString":"function (bytes32,bytes memory) pure returns (address,enum ECDSA.RecoverError,bytes32)"}},"id":4975,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3962:27:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$4889_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"nodeType":"VariableDeclarationStatement","src":"3902:87:25"},{"expression":{"arguments":[{"id":4978,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4969,"src":"4012:5:25","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$4889","typeString":"enum ECDSA.RecoverError"}},{"id":4979,"name":"errorArg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4971,"src":"4019:8:25","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_RecoverError_$4889","typeString":"enum ECDSA.RecoverError"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":4977,"name":"_throwError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5228,"src":"4000:11:25","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_RecoverError_$4889_$_t_bytes32_$returns$__$","typeString":"function (enum ECDSA.RecoverError,bytes32) pure"}},"id":4980,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4000:28:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4981,"nodeType":"ExpressionStatement","src":"4000:28:25"},{"expression":{"id":4982,"name":"recovered","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4966,"src":"4046:9:25","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":4964,"id":4983,"nodeType":"Return","src":"4039:16:25"}]},"documentation":{"id":4956,"nodeType":"StructuredDocumentation","src":"2989:809:25","text":" @dev Returns the address that signed a hashed message (`hash`) with\n `signature`. This address can then be used for verification purposes.\n The `ecrecover` EVM precompile allows for malleable (non-unique) signatures:\n this function rejects them by requiring the `s` value to be in the lower\n half order, and the `v` value to be either 27 or 28.\n IMPORTANT: `hash` _must_ be the result of a hash operation for the\n verification to be secure: it is possible to craft signatures that\n recover to arbitrary addresses for non-hashed data. A safe way to ensure\n this is by receiving a hash of the original message (which may otherwise\n be too long), and then calling {MessageHashUtils-toEthSignedMessageHash} on it."},"id":4985,"implemented":true,"kind":"function","modifiers":[],"name":"recover","nameLocation":"3813:7:25","nodeType":"FunctionDefinition","parameters":{"id":4961,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4958,"mutability":"mutable","name":"hash","nameLocation":"3829:4:25","nodeType":"VariableDeclaration","scope":4985,"src":"3821:12:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4957,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3821:7:25","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":4960,"mutability":"mutable","name":"signature","nameLocation":"3848:9:25","nodeType":"VariableDeclaration","scope":4985,"src":"3835:22:25","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4959,"name":"bytes","nodeType":"ElementaryTypeName","src":"3835:5:25","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3820:38:25"},"returnParameters":{"id":4964,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4963,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4985,"src":"3882:7:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4962,"name":"address","nodeType":"ElementaryTypeName","src":"3882:7:25","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3881:9:25"},"scope":5229,"src":"3804:259:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5034,"nodeType":"Block","src":"4453:349:25","statements":[{"id":5033,"nodeType":"UncheckedBlock","src":"4464:331:25","statements":[{"assignments":[5003],"declarations":[{"constant":false,"id":5003,"mutability":"mutable","name":"s","nameLocation":"4497:1:25","nodeType":"VariableDeclaration","scope":5033,"src":"4489:9:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":5002,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4489:7:25","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":5010,"initialValue":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":5009,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5004,"name":"vs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4992,"src":"4501:2:25","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"arguments":[{"hexValue":"307837666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666","id":5007,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4514:66:25","typeDescriptions":{"typeIdentifier":"t_rational_57896044618658097711785492504343953926634992332820282019728792003956564819967_by_1","typeString":"int_const 5789...(69 digits omitted)...9967"},"value":"0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_57896044618658097711785492504343953926634992332820282019728792003956564819967_by_1","typeString":"int_const 5789...(69 digits omitted)...9967"}],"id":5006,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4506:7:25","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":5005,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4506:7:25","typeDescriptions":{}}},"id":5008,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4506:75:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"4501:80:25","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"4489:92:25"},{"assignments":[5012],"declarations":[{"constant":false,"id":5012,"mutability":"mutable","name":"v","nameLocation":"4700:1:25","nodeType":"VariableDeclaration","scope":5033,"src":"4694:7:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":5011,"name":"uint8","nodeType":"ElementaryTypeName","src":"4694:5:25","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"id":5025,"initialValue":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5023,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5020,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":5017,"name":"vs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4992,"src":"4719:2:25","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":5016,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4711:7:25","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":5015,"name":"uint256","nodeType":"ElementaryTypeName","src":"4711:7:25","typeDescriptions":{}}},"id":5018,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4711:11:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"323535","id":5019,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4726:3:25","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"255"},"src":"4711:18:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5021,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"4710:20:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"3237","id":5022,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4733:2:25","typeDescriptions":{"typeIdentifier":"t_rational_27_by_1","typeString":"int_const 27"},"value":"27"},"src":"4710:25:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5014,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4704:5:25","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":5013,"name":"uint8","nodeType":"ElementaryTypeName","src":"4704:5:25","typeDescriptions":{}}},"id":5024,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4704:32:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"VariableDeclarationStatement","src":"4694:42:25"},{"expression":{"arguments":[{"id":5027,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4988,"src":"4769:4:25","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":5028,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5012,"src":"4775:1:25","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":5029,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4990,"src":"4778:1:25","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":5030,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5003,"src":"4781:1:25","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":5026,"name":"tryRecover","nodeType":"Identifier","overloadedDeclarations":[4955,5035,5143],"referencedDeclaration":5143,"src":"4758:10:25","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$_t_enum$_RecoverError_$4889_$_t_bytes32_$","typeString":"function (bytes32,uint8,bytes32,bytes32) pure returns (address,enum ECDSA.RecoverError,bytes32)"}},"id":5031,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4758:25:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$4889_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"functionReturnParameters":5001,"id":5032,"nodeType":"Return","src":"4751:32:25"}]}]},"documentation":{"id":4986,"nodeType":"StructuredDocumentation","src":"4071:209:25","text":" @dev Overload of {ECDSA-tryRecover} that receives the `r` and `vs` short-signature fields separately.\n See https://eips.ethereum.org/EIPS/eip-2098[ERC-2098 short signatures]"},"id":5035,"implemented":true,"kind":"function","modifiers":[],"name":"tryRecover","nameLocation":"4295:10:25","nodeType":"FunctionDefinition","parameters":{"id":4993,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4988,"mutability":"mutable","name":"hash","nameLocation":"4324:4:25","nodeType":"VariableDeclaration","scope":5035,"src":"4316:12:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4987,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4316:7:25","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":4990,"mutability":"mutable","name":"r","nameLocation":"4347:1:25","nodeType":"VariableDeclaration","scope":5035,"src":"4339:9:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4989,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4339:7:25","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":4992,"mutability":"mutable","name":"vs","nameLocation":"4367:2:25","nodeType":"VariableDeclaration","scope":5035,"src":"4359:10:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4991,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4359:7:25","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4305:71:25"},"returnParameters":{"id":5001,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4995,"mutability":"mutable","name":"recovered","nameLocation":"4408:9:25","nodeType":"VariableDeclaration","scope":5035,"src":"4400:17:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4994,"name":"address","nodeType":"ElementaryTypeName","src":"4400:7:25","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4998,"mutability":"mutable","name":"err","nameLocation":"4432:3:25","nodeType":"VariableDeclaration","scope":5035,"src":"4419:16:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$4889","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":4997,"nodeType":"UserDefinedTypeName","pathNode":{"id":4996,"name":"RecoverError","nameLocations":["4419:12:25"],"nodeType":"IdentifierPath","referencedDeclaration":4889,"src":"4419:12:25"},"referencedDeclaration":4889,"src":"4419:12:25","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$4889","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"},{"constant":false,"id":5000,"mutability":"mutable","name":"errArg","nameLocation":"4445:6:25","nodeType":"VariableDeclaration","scope":5035,"src":"4437:14:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4999,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4437:7:25","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4399:53:25"},"scope":5229,"src":"4286:516:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5067,"nodeType":"Block","src":"5020:168:25","statements":[{"assignments":[5048,5051,5053],"declarations":[{"constant":false,"id":5048,"mutability":"mutable","name":"recovered","nameLocation":"5040:9:25","nodeType":"VariableDeclaration","scope":5067,"src":"5032:17:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5047,"name":"address","nodeType":"ElementaryTypeName","src":"5032:7:25","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5051,"mutability":"mutable","name":"error","nameLocation":"5064:5:25","nodeType":"VariableDeclaration","scope":5067,"src":"5051:18:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$4889","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":5050,"nodeType":"UserDefinedTypeName","pathNode":{"id":5049,"name":"RecoverError","nameLocations":["5051:12:25"],"nodeType":"IdentifierPath","referencedDeclaration":4889,"src":"5051:12:25"},"referencedDeclaration":4889,"src":"5051:12:25","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$4889","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"},{"constant":false,"id":5053,"mutability":"mutable","name":"errorArg","nameLocation":"5079:8:25","nodeType":"VariableDeclaration","scope":5067,"src":"5071:16:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":5052,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5071:7:25","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":5059,"initialValue":{"arguments":[{"id":5055,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5038,"src":"5102:4:25","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":5056,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5040,"src":"5108:1:25","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":5057,"name":"vs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5042,"src":"5111:2:25","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":5054,"name":"tryRecover","nodeType":"Identifier","overloadedDeclarations":[4955,5035,5143],"referencedDeclaration":5035,"src":"5091:10:25","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes32_$_t_bytes32_$returns$_t_address_$_t_enum$_RecoverError_$4889_$_t_bytes32_$","typeString":"function (bytes32,bytes32,bytes32) pure returns (address,enum ECDSA.RecoverError,bytes32)"}},"id":5058,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5091:23:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$4889_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"nodeType":"VariableDeclarationStatement","src":"5031:83:25"},{"expression":{"arguments":[{"id":5061,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5051,"src":"5137:5:25","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$4889","typeString":"enum ECDSA.RecoverError"}},{"id":5062,"name":"errorArg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5053,"src":"5144:8:25","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_RecoverError_$4889","typeString":"enum ECDSA.RecoverError"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":5060,"name":"_throwError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5228,"src":"5125:11:25","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_RecoverError_$4889_$_t_bytes32_$returns$__$","typeString":"function (enum ECDSA.RecoverError,bytes32) pure"}},"id":5063,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5125:28:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5064,"nodeType":"ExpressionStatement","src":"5125:28:25"},{"expression":{"id":5065,"name":"recovered","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5048,"src":"5171:9:25","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":5046,"id":5066,"nodeType":"Return","src":"5164:16:25"}]},"documentation":{"id":5036,"nodeType":"StructuredDocumentation","src":"4810:118:25","text":" @dev Overload of {ECDSA-recover} that receives the `r and `vs` short-signature fields separately."},"id":5068,"implemented":true,"kind":"function","modifiers":[],"name":"recover","nameLocation":"4943:7:25","nodeType":"FunctionDefinition","parameters":{"id":5043,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5038,"mutability":"mutable","name":"hash","nameLocation":"4959:4:25","nodeType":"VariableDeclaration","scope":5068,"src":"4951:12:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":5037,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4951:7:25","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":5040,"mutability":"mutable","name":"r","nameLocation":"4973:1:25","nodeType":"VariableDeclaration","scope":5068,"src":"4965:9:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":5039,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4965:7:25","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":5042,"mutability":"mutable","name":"vs","nameLocation":"4984:2:25","nodeType":"VariableDeclaration","scope":5068,"src":"4976:10:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":5041,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4976:7:25","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4950:37:25"},"returnParameters":{"id":5046,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5045,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5068,"src":"5011:7:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5044,"name":"address","nodeType":"ElementaryTypeName","src":"5011:7:25","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5010:9:25"},"scope":5229,"src":"4934:254:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5142,"nodeType":"Block","src":"5514:1393:25","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5092,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":5089,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5077,"src":"6420:1:25","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":5088,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6412:7:25","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":5087,"name":"uint256","nodeType":"ElementaryTypeName","src":"6412:7:25","typeDescriptions":{}}},"id":5090,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6412:10:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"307837464646464646464646464646464646464646464646464646464646464646463544353736453733353741343530314444464539324634363638314232304130","id":5091,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6425:66:25","typeDescriptions":{"typeIdentifier":"t_rational_57896044618658097711785492504343953926418782139537452191302581570759080747168_by_1","typeString":"int_const 5789...(69 digits omitted)...7168"},"value":"0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0"},"src":"6412:79:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5103,"nodeType":"IfStatement","src":"6408:166:25","trueBody":{"id":5102,"nodeType":"Block","src":"6493:81:25","statements":[{"expression":{"components":[{"arguments":[{"hexValue":"30","id":5095,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6524:1:25","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":5094,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6516:7:25","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":5093,"name":"address","nodeType":"ElementaryTypeName","src":"6516:7:25","typeDescriptions":{}}},"id":5096,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6516:10:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":5097,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4889,"src":"6528:12:25","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$4889_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":5098,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6541:17:25","memberName":"InvalidSignatureS","nodeType":"MemberAccess","referencedDeclaration":4888,"src":"6528:30:25","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$4889","typeString":"enum ECDSA.RecoverError"}},{"id":5099,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5077,"src":"6560:1:25","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":5100,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"6515:47:25","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$4889_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"functionReturnParameters":5086,"id":5101,"nodeType":"Return","src":"6508:54:25"}]}},{"assignments":[5105],"declarations":[{"constant":false,"id":5105,"mutability":"mutable","name":"signer","nameLocation":"6679:6:25","nodeType":"VariableDeclaration","scope":5142,"src":"6671:14:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5104,"name":"address","nodeType":"ElementaryTypeName","src":"6671:7:25","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":5112,"initialValue":{"arguments":[{"id":5107,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5071,"src":"6698:4:25","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":5108,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5073,"src":"6704:1:25","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":5109,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5075,"src":"6707:1:25","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":5110,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5077,"src":"6710:1:25","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":5106,"name":"ecrecover","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-6,"src":"6688:9:25","typeDescriptions":{"typeIdentifier":"t_function_ecrecover_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$","typeString":"function (bytes32,uint8,bytes32,bytes32) pure returns (address)"}},"id":5111,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6688:24:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"6671:41:25"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":5118,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5113,"name":"signer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5105,"src":"6727:6:25","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":5116,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6745:1:25","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":5115,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6737:7:25","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":5114,"name":"address","nodeType":"ElementaryTypeName","src":"6737:7:25","typeDescriptions":{}}},"id":5117,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6737:10:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6727:20:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5132,"nodeType":"IfStatement","src":"6723:115:25","trueBody":{"id":5131,"nodeType":"Block","src":"6749:89:25","statements":[{"expression":{"components":[{"arguments":[{"hexValue":"30","id":5121,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6780:1:25","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":5120,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6772:7:25","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":5119,"name":"address","nodeType":"ElementaryTypeName","src":"6772:7:25","typeDescriptions":{}}},"id":5122,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6772:10:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":5123,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4889,"src":"6784:12:25","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$4889_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":5124,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6797:16:25","memberName":"InvalidSignature","nodeType":"MemberAccess","referencedDeclaration":4886,"src":"6784:29:25","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$4889","typeString":"enum ECDSA.RecoverError"}},{"arguments":[{"hexValue":"30","id":5127,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6823:1:25","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":5126,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6815:7:25","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":5125,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6815:7:25","typeDescriptions":{}}},"id":5128,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6815:10:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":5129,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"6771:55:25","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$4889_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"functionReturnParameters":5086,"id":5130,"nodeType":"Return","src":"6764:62:25"}]}},{"expression":{"components":[{"id":5133,"name":"signer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5105,"src":"6858:6:25","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":5134,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4889,"src":"6866:12:25","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$4889_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":5135,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6879:7:25","memberName":"NoError","nodeType":"MemberAccess","referencedDeclaration":4885,"src":"6866:20:25","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$4889","typeString":"enum ECDSA.RecoverError"}},{"arguments":[{"hexValue":"30","id":5138,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6896:1:25","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":5137,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6888:7:25","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":5136,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6888:7:25","typeDescriptions":{}}},"id":5139,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6888:10:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":5140,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"6857:42:25","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$4889_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"functionReturnParameters":5086,"id":5141,"nodeType":"Return","src":"6850:49:25"}]},"documentation":{"id":5069,"nodeType":"StructuredDocumentation","src":"5196:128:25","text":" @dev Overload of {ECDSA-tryRecover} that receives the `v`,\n `r` and `s` signature fields separately."},"id":5143,"implemented":true,"kind":"function","modifiers":[],"name":"tryRecover","nameLocation":"5339:10:25","nodeType":"FunctionDefinition","parameters":{"id":5078,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5071,"mutability":"mutable","name":"hash","nameLocation":"5368:4:25","nodeType":"VariableDeclaration","scope":5143,"src":"5360:12:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":5070,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5360:7:25","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":5073,"mutability":"mutable","name":"v","nameLocation":"5389:1:25","nodeType":"VariableDeclaration","scope":5143,"src":"5383:7:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":5072,"name":"uint8","nodeType":"ElementaryTypeName","src":"5383:5:25","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":5075,"mutability":"mutable","name":"r","nameLocation":"5409:1:25","nodeType":"VariableDeclaration","scope":5143,"src":"5401:9:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":5074,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5401:7:25","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":5077,"mutability":"mutable","name":"s","nameLocation":"5429:1:25","nodeType":"VariableDeclaration","scope":5143,"src":"5421:9:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":5076,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5421:7:25","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"5349:88:25"},"returnParameters":{"id":5086,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5080,"mutability":"mutable","name":"recovered","nameLocation":"5469:9:25","nodeType":"VariableDeclaration","scope":5143,"src":"5461:17:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5079,"name":"address","nodeType":"ElementaryTypeName","src":"5461:7:25","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5083,"mutability":"mutable","name":"err","nameLocation":"5493:3:25","nodeType":"VariableDeclaration","scope":5143,"src":"5480:16:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$4889","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":5082,"nodeType":"UserDefinedTypeName","pathNode":{"id":5081,"name":"RecoverError","nameLocations":["5480:12:25"],"nodeType":"IdentifierPath","referencedDeclaration":4889,"src":"5480:12:25"},"referencedDeclaration":4889,"src":"5480:12:25","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$4889","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"},{"constant":false,"id":5085,"mutability":"mutable","name":"errArg","nameLocation":"5506:6:25","nodeType":"VariableDeclaration","scope":5143,"src":"5498:14:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":5084,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5498:7:25","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"5460:53:25"},"scope":5229,"src":"5330:1577:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5178,"nodeType":"Block","src":"7140:170:25","statements":[{"assignments":[5158,5161,5163],"declarations":[{"constant":false,"id":5158,"mutability":"mutable","name":"recovered","nameLocation":"7160:9:25","nodeType":"VariableDeclaration","scope":5178,"src":"7152:17:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5157,"name":"address","nodeType":"ElementaryTypeName","src":"7152:7:25","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5161,"mutability":"mutable","name":"error","nameLocation":"7184:5:25","nodeType":"VariableDeclaration","scope":5178,"src":"7171:18:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$4889","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":5160,"nodeType":"UserDefinedTypeName","pathNode":{"id":5159,"name":"RecoverError","nameLocations":["7171:12:25"],"nodeType":"IdentifierPath","referencedDeclaration":4889,"src":"7171:12:25"},"referencedDeclaration":4889,"src":"7171:12:25","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$4889","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"},{"constant":false,"id":5163,"mutability":"mutable","name":"errorArg","nameLocation":"7199:8:25","nodeType":"VariableDeclaration","scope":5178,"src":"7191:16:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":5162,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7191:7:25","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":5170,"initialValue":{"arguments":[{"id":5165,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5146,"src":"7222:4:25","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":5166,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5148,"src":"7228:1:25","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":5167,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5150,"src":"7231:1:25","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":5168,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5152,"src":"7234:1:25","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":5164,"name":"tryRecover","nodeType":"Identifier","overloadedDeclarations":[4955,5035,5143],"referencedDeclaration":5143,"src":"7211:10:25","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$_t_enum$_RecoverError_$4889_$_t_bytes32_$","typeString":"function (bytes32,uint8,bytes32,bytes32) pure returns (address,enum ECDSA.RecoverError,bytes32)"}},"id":5169,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7211:25:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$4889_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"nodeType":"VariableDeclarationStatement","src":"7151:85:25"},{"expression":{"arguments":[{"id":5172,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5161,"src":"7259:5:25","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$4889","typeString":"enum ECDSA.RecoverError"}},{"id":5173,"name":"errorArg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5163,"src":"7266:8:25","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_RecoverError_$4889","typeString":"enum ECDSA.RecoverError"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":5171,"name":"_throwError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5228,"src":"7247:11:25","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_RecoverError_$4889_$_t_bytes32_$returns$__$","typeString":"function (enum ECDSA.RecoverError,bytes32) pure"}},"id":5174,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7247:28:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5175,"nodeType":"ExpressionStatement","src":"7247:28:25"},{"expression":{"id":5176,"name":"recovered","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5158,"src":"7293:9:25","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":5156,"id":5177,"nodeType":"Return","src":"7286:16:25"}]},"documentation":{"id":5144,"nodeType":"StructuredDocumentation","src":"6915:125:25","text":" @dev Overload of {ECDSA-recover} that receives the `v`,\n `r` and `s` signature fields separately."},"id":5179,"implemented":true,"kind":"function","modifiers":[],"name":"recover","nameLocation":"7055:7:25","nodeType":"FunctionDefinition","parameters":{"id":5153,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5146,"mutability":"mutable","name":"hash","nameLocation":"7071:4:25","nodeType":"VariableDeclaration","scope":5179,"src":"7063:12:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":5145,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7063:7:25","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":5148,"mutability":"mutable","name":"v","nameLocation":"7083:1:25","nodeType":"VariableDeclaration","scope":5179,"src":"7077:7:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":5147,"name":"uint8","nodeType":"ElementaryTypeName","src":"7077:5:25","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":5150,"mutability":"mutable","name":"r","nameLocation":"7094:1:25","nodeType":"VariableDeclaration","scope":5179,"src":"7086:9:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":5149,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7086:7:25","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":5152,"mutability":"mutable","name":"s","nameLocation":"7105:1:25","nodeType":"VariableDeclaration","scope":5179,"src":"7097:9:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":5151,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7097:7:25","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"7062:45:25"},"returnParameters":{"id":5156,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5155,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5179,"src":"7131:7:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5154,"name":"address","nodeType":"ElementaryTypeName","src":"7131:7:25","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"7130:9:25"},"scope":5229,"src":"7046:264:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5227,"nodeType":"Block","src":"7520:470:25","statements":[{"condition":{"commonType":{"typeIdentifier":"t_enum$_RecoverError_$4889","typeString":"enum ECDSA.RecoverError"},"id":5191,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5188,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5183,"src":"7535:5:25","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$4889","typeString":"enum ECDSA.RecoverError"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":5189,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4889,"src":"7544:12:25","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$4889_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":5190,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7557:7:25","memberName":"NoError","nodeType":"MemberAccess","referencedDeclaration":4885,"src":"7544:20:25","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$4889","typeString":"enum ECDSA.RecoverError"}},"src":"7535:29:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_enum$_RecoverError_$4889","typeString":"enum ECDSA.RecoverError"},"id":5197,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5194,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5183,"src":"7633:5:25","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$4889","typeString":"enum ECDSA.RecoverError"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":5195,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4889,"src":"7642:12:25","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$4889_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":5196,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7655:16:25","memberName":"InvalidSignature","nodeType":"MemberAccess","referencedDeclaration":4886,"src":"7642:29:25","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$4889","typeString":"enum ECDSA.RecoverError"}},"src":"7633:38:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_enum$_RecoverError_$4889","typeString":"enum ECDSA.RecoverError"},"id":5205,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5202,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5183,"src":"7740:5:25","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$4889","typeString":"enum ECDSA.RecoverError"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":5203,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4889,"src":"7749:12:25","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$4889_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":5204,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7762:22:25","memberName":"InvalidSignatureLength","nodeType":"MemberAccess","referencedDeclaration":4887,"src":"7749:35:25","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$4889","typeString":"enum ECDSA.RecoverError"}},"src":"7740:44:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_enum$_RecoverError_$4889","typeString":"enum ECDSA.RecoverError"},"id":5217,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5214,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5183,"src":"7876:5:25","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$4889","typeString":"enum ECDSA.RecoverError"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":5215,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4889,"src":"7885:12:25","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$4889_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":5216,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7898:17:25","memberName":"InvalidSignatureS","nodeType":"MemberAccess","referencedDeclaration":4888,"src":"7885:30:25","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$4889","typeString":"enum ECDSA.RecoverError"}},"src":"7876:39:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5223,"nodeType":"IfStatement","src":"7872:111:25","trueBody":{"id":5222,"nodeType":"Block","src":"7917:66:25","statements":[{"errorCall":{"arguments":[{"id":5219,"name":"errorArg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5185,"src":"7962:8:25","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":5218,"name":"ECDSAInvalidSignatureS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4902,"src":"7939:22:25","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_bytes32_$returns$_t_error_$","typeString":"function (bytes32) pure returns (error)"}},"id":5220,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7939:32:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":5221,"nodeType":"RevertStatement","src":"7932:39:25"}]}},"id":5224,"nodeType":"IfStatement","src":"7736:247:25","trueBody":{"id":5213,"nodeType":"Block","src":"7786:80:25","statements":[{"errorCall":{"arguments":[{"arguments":[{"id":5209,"name":"errorArg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5185,"src":"7844:8:25","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":5208,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7836:7:25","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":5207,"name":"uint256","nodeType":"ElementaryTypeName","src":"7836:7:25","typeDescriptions":{}}},"id":5210,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7836:17:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5206,"name":"ECDSAInvalidSignatureLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4897,"src":"7808:27:25","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$returns$_t_error_$","typeString":"function (uint256) pure returns (error)"}},"id":5211,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7808:46:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":5212,"nodeType":"RevertStatement","src":"7801:53:25"}]}},"id":5225,"nodeType":"IfStatement","src":"7629:354:25","trueBody":{"id":5201,"nodeType":"Block","src":"7673:57:25","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":5198,"name":"ECDSAInvalidSignature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4892,"src":"7695:21:25","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$_t_error_$","typeString":"function () pure returns (error)"}},"id":5199,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7695:23:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":5200,"nodeType":"RevertStatement","src":"7688:30:25"}]}},"id":5226,"nodeType":"IfStatement","src":"7531:452:25","trueBody":{"id":5193,"nodeType":"Block","src":"7566:57:25","statements":[{"functionReturnParameters":5187,"id":5192,"nodeType":"Return","src":"7581:7:25"}]}}]},"documentation":{"id":5180,"nodeType":"StructuredDocumentation","src":"7318:124:25","text":" @dev Optionally reverts with the corresponding custom error according to the `error` argument provided."},"id":5228,"implemented":true,"kind":"function","modifiers":[],"name":"_throwError","nameLocation":"7457:11:25","nodeType":"FunctionDefinition","parameters":{"id":5186,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5183,"mutability":"mutable","name":"error","nameLocation":"7482:5:25","nodeType":"VariableDeclaration","scope":5228,"src":"7469:18:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$4889","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":5182,"nodeType":"UserDefinedTypeName","pathNode":{"id":5181,"name":"RecoverError","nameLocations":["7469:12:25"],"nodeType":"IdentifierPath","referencedDeclaration":4889,"src":"7469:12:25"},"referencedDeclaration":4889,"src":"7469:12:25","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$4889","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"},{"constant":false,"id":5185,"mutability":"mutable","name":"errorArg","nameLocation":"7497:8:25","nodeType":"VariableDeclaration","scope":5228,"src":"7489:16:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":5184,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7489:7:25","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"7468:38:25"},"returnParameters":{"id":5187,"nodeType":"ParameterList","parameters":[],"src":"7520:0:25"},"scope":5229,"src":"7448:542:25","stateMutability":"pure","virtual":false,"visibility":"private"}],"scope":5230,"src":"355:7638:25","usedErrors":[4892,4897,4902],"usedEvents":[]}],"src":"115:7880:25"},"id":25},"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol","exportedSymbols":{"MessageHashUtils":[5315],"Strings":[4881]},"id":5316,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":5231,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"126:24:26"},{"absolutePath":"@openzeppelin/contracts/utils/Strings.sol","file":"../Strings.sol","id":5233,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":5316,"sourceUnit":4882,"src":"154:39:26","symbolAliases":[{"foreign":{"id":5232,"name":"Strings","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4881,"src":"162:7:26","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"MessageHashUtils","contractDependencies":[],"contractKind":"library","documentation":{"id":5234,"nodeType":"StructuredDocumentation","src":"197:336:26","text":" @dev Signature message hash utilities for producing digests to be consumed by {ECDSA} recovery or signing.\n The library provides methods for generating a hash of a message that conforms to the\n https://eips.ethereum.org/EIPS/eip-191[ERC-191] and https://eips.ethereum.org/EIPS/eip-712[EIP 712]\n specifications."},"fullyImplemented":true,"id":5315,"linearizedBaseContracts":[5315],"name":"MessageHashUtils","nameLocation":"543:16:26","nodeType":"ContractDefinition","nodes":[{"body":{"id":5243,"nodeType":"Block","src":"1368:347:26","statements":[{"AST":{"nativeSrc":"1404:304:26","nodeType":"YulBlock","src":"1404:304:26","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"1426:4:26","nodeType":"YulLiteral","src":"1426:4:26","type":"","value":"0x00"},{"hexValue":"19457468657265756d205369676e6564204d6573736167653a0a3332","kind":"string","nativeSrc":"1432:34:26","nodeType":"YulLiteral","src":"1432:34:26","type":"","value":"\u0019Ethereum Signed Message:\n32"}],"functionName":{"name":"mstore","nativeSrc":"1419:6:26","nodeType":"YulIdentifier","src":"1419:6:26"},"nativeSrc":"1419:48:26","nodeType":"YulFunctionCall","src":"1419:48:26"},"nativeSrc":"1419:48:26","nodeType":"YulExpressionStatement","src":"1419:48:26"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"1529:4:26","nodeType":"YulLiteral","src":"1529:4:26","type":"","value":"0x1c"},{"name":"messageHash","nativeSrc":"1535:11:26","nodeType":"YulIdentifier","src":"1535:11:26"}],"functionName":{"name":"mstore","nativeSrc":"1522:6:26","nodeType":"YulIdentifier","src":"1522:6:26"},"nativeSrc":"1522:25:26","nodeType":"YulFunctionCall","src":"1522:25:26"},"nativeSrc":"1522:25:26","nodeType":"YulExpressionStatement","src":"1522:25:26"},{"nativeSrc":"1602:31:26","nodeType":"YulAssignment","src":"1602:31:26","value":{"arguments":[{"kind":"number","nativeSrc":"1622:4:26","nodeType":"YulLiteral","src":"1622:4:26","type":"","value":"0x00"},{"kind":"number","nativeSrc":"1628:4:26","nodeType":"YulLiteral","src":"1628:4:26","type":"","value":"0x3c"}],"functionName":{"name":"keccak256","nativeSrc":"1612:9:26","nodeType":"YulIdentifier","src":"1612:9:26"},"nativeSrc":"1612:21:26","nodeType":"YulFunctionCall","src":"1612:21:26"},"variableNames":[{"name":"digest","nativeSrc":"1602:6:26","nodeType":"YulIdentifier","src":"1602:6:26"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":5240,"isOffset":false,"isSlot":false,"src":"1602:6:26","valueSize":1},{"declaration":5237,"isOffset":false,"isSlot":false,"src":"1535:11:26","valueSize":1}],"flags":["memory-safe"],"id":5242,"nodeType":"InlineAssembly","src":"1379:329:26"}]},"documentation":{"id":5235,"nodeType":"StructuredDocumentation","src":"567:703:26","text":" @dev Returns the keccak256 digest of an ERC-191 signed data with version\n `0x45` (`personal_sign` messages).\n The digest is calculated by prefixing a bytes32 `messageHash` with\n `\"\\x19Ethereum Signed Message:\\n32\"` and hashing the result. It corresponds with the\n hash signed when using the https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_sign[`eth_sign`] JSON-RPC method.\n NOTE: The `messageHash` parameter is intended to be the result of hashing a raw message with\n keccak256, although any bytes32 value can be safely used because the final digest will\n be re-hashed.\n See {ECDSA-recover}."},"id":5244,"implemented":true,"kind":"function","modifiers":[],"name":"toEthSignedMessageHash","nameLocation":"1285:22:26","nodeType":"FunctionDefinition","parameters":{"id":5238,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5237,"mutability":"mutable","name":"messageHash","nameLocation":"1316:11:26","nodeType":"VariableDeclaration","scope":5244,"src":"1308:19:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":5236,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1308:7:26","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1307:21:26"},"returnParameters":{"id":5241,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5240,"mutability":"mutable","name":"digest","nameLocation":"1360:6:26","nodeType":"VariableDeclaration","scope":5244,"src":"1352:14:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":5239,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1352:7:26","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1351:16:26"},"scope":5315,"src":"1276:439:26","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5269,"nodeType":"Block","src":"2304:146:26","statements":[{"expression":{"arguments":[{"arguments":[{"hexValue":"19457468657265756d205369676e6564204d6573736167653a0a","id":5256,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2358:32:26","typeDescriptions":{"typeIdentifier":"t_stringliteral_9af2d9c228f6cfddaa6d1e5b94e0bce4ab16bd9a472a2b7fbfd74ebff4c720b4","typeString":"literal_string hex\"19457468657265756d205369676e6564204d6573736167653a0a\""},"value":"\u0019Ethereum Signed Message:\n"},{"arguments":[{"arguments":[{"expression":{"id":5261,"name":"message","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5247,"src":"2415:7:26","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":5262,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2423:6:26","memberName":"length","nodeType":"MemberAccess","src":"2415:14:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":5259,"name":"Strings","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4881,"src":"2398:7:26","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Strings_$4881_$","typeString":"type(library Strings)"}},"id":5260,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2406:8:26","memberName":"toString","nodeType":"MemberAccess","referencedDeclaration":3593,"src":"2398:16:26","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) pure returns (string memory)"}},"id":5263,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2398:32:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":5258,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2392:5:26","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":5257,"name":"bytes","nodeType":"ElementaryTypeName","src":"2392:5:26","typeDescriptions":{}}},"id":5264,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2392:39:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":5265,"name":"message","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5247,"src":"2433:7:26","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_9af2d9c228f6cfddaa6d1e5b94e0bce4ab16bd9a472a2b7fbfd74ebff4c720b4","typeString":"literal_string hex\"19457468657265756d205369676e6564204d6573736167653a0a\""},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":5254,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2345:5:26","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":5253,"name":"bytes","nodeType":"ElementaryTypeName","src":"2345:5:26","typeDescriptions":{}}},"id":5255,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2351:6:26","memberName":"concat","nodeType":"MemberAccess","src":"2345:12:26","typeDescriptions":{"typeIdentifier":"t_function_bytesconcat_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":5266,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2345:96:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":5252,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"2335:9:26","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":5267,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2335:107:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":5251,"id":5268,"nodeType":"Return","src":"2315:127:26"}]},"documentation":{"id":5245,"nodeType":"StructuredDocumentation","src":"1723:489:26","text":" @dev Returns the keccak256 digest of an ERC-191 signed data with version\n `0x45` (`personal_sign` messages).\n The digest is calculated by prefixing an arbitrary `message` with\n `\"\\x19Ethereum Signed Message:\\n\" + len(message)` and hashing the result. It corresponds with the\n hash signed when using the https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_sign[`eth_sign`] JSON-RPC method.\n See {ECDSA-recover}."},"id":5270,"implemented":true,"kind":"function","modifiers":[],"name":"toEthSignedMessageHash","nameLocation":"2227:22:26","nodeType":"FunctionDefinition","parameters":{"id":5248,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5247,"mutability":"mutable","name":"message","nameLocation":"2263:7:26","nodeType":"VariableDeclaration","scope":5270,"src":"2250:20:26","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":5246,"name":"bytes","nodeType":"ElementaryTypeName","src":"2250:5:26","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2249:22:26"},"returnParameters":{"id":5251,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5250,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5270,"src":"2295:7:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":5249,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2295:7:26","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2294:9:26"},"scope":5315,"src":"2218:232:26","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5289,"nodeType":"Block","src":"2915:82:26","statements":[{"expression":{"arguments":[{"arguments":[{"hexValue":"1900","id":5283,"isConstant":false,"isLValue":false,"isPure":true,"kind":"hexString","lValueRequested":false,"nodeType":"Literal","src":"2960:10:26","typeDescriptions":{"typeIdentifier":"t_stringliteral_73fd5d154550a4a103564cb191928cd38898034de1b952dc21b290898b4b697a","typeString":"literal_string hex\"1900\""},"value":"\u0019\u0000"},{"id":5284,"name":"validator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5273,"src":"2972:9:26","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":5285,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5275,"src":"2983:4:26","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_73fd5d154550a4a103564cb191928cd38898034de1b952dc21b290898b4b697a","typeString":"literal_string hex\"1900\""},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":5281,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"2943:3:26","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":5282,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2947:12:26","memberName":"encodePacked","nodeType":"MemberAccess","src":"2943:16:26","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":5286,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2943:45:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":5280,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"2933:9:26","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":5287,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2933:56:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":5279,"id":5288,"nodeType":"Return","src":"2926:63:26"}]},"documentation":{"id":5271,"nodeType":"StructuredDocumentation","src":"2458:340:26","text":" @dev Returns the keccak256 digest of an ERC-191 signed data with version\n `0x00` (data with intended validator).\n The digest is calculated by prefixing an arbitrary `data` with `\"\\x19\\x00\"` and the intended\n `validator` address. Then hashing the result.\n See {ECDSA-recover}."},"id":5290,"implemented":true,"kind":"function","modifiers":[],"name":"toDataWithIntendedValidatorHash","nameLocation":"2813:31:26","nodeType":"FunctionDefinition","parameters":{"id":5276,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5273,"mutability":"mutable","name":"validator","nameLocation":"2853:9:26","nodeType":"VariableDeclaration","scope":5290,"src":"2845:17:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5272,"name":"address","nodeType":"ElementaryTypeName","src":"2845:7:26","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5275,"mutability":"mutable","name":"data","nameLocation":"2877:4:26","nodeType":"VariableDeclaration","scope":5290,"src":"2864:17:26","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":5274,"name":"bytes","nodeType":"ElementaryTypeName","src":"2864:5:26","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2844:38:26"},"returnParameters":{"id":5279,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5278,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5290,"src":"2906:7:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":5277,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2906:7:26","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2905:9:26"},"scope":5315,"src":"2804:193:26","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5301,"nodeType":"Block","src":"3287:223:26","statements":[{"AST":{"nativeSrc":"3323:180:26","nodeType":"YulBlock","src":"3323:180:26","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"3345:4:26","nodeType":"YulLiteral","src":"3345:4:26","type":"","value":"0x00"},{"hexValue":"1900","kind":"string","nativeSrc":"3351:10:26","nodeType":"YulLiteral","src":"3351:10:26","type":"","value":"\u0019\u0000"}],"functionName":{"name":"mstore","nativeSrc":"3338:6:26","nodeType":"YulIdentifier","src":"3338:6:26"},"nativeSrc":"3338:24:26","nodeType":"YulFunctionCall","src":"3338:24:26"},"nativeSrc":"3338:24:26","nodeType":"YulExpressionStatement","src":"3338:24:26"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"3383:4:26","nodeType":"YulLiteral","src":"3383:4:26","type":"","value":"0x02"},{"arguments":[{"kind":"number","nativeSrc":"3393:2:26","nodeType":"YulLiteral","src":"3393:2:26","type":"","value":"96"},{"name":"validator","nativeSrc":"3397:9:26","nodeType":"YulIdentifier","src":"3397:9:26"}],"functionName":{"name":"shl","nativeSrc":"3389:3:26","nodeType":"YulIdentifier","src":"3389:3:26"},"nativeSrc":"3389:18:26","nodeType":"YulFunctionCall","src":"3389:18:26"}],"functionName":{"name":"mstore","nativeSrc":"3376:6:26","nodeType":"YulIdentifier","src":"3376:6:26"},"nativeSrc":"3376:32:26","nodeType":"YulFunctionCall","src":"3376:32:26"},"nativeSrc":"3376:32:26","nodeType":"YulExpressionStatement","src":"3376:32:26"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"3429:4:26","nodeType":"YulLiteral","src":"3429:4:26","type":"","value":"0x16"},{"name":"messageHash","nativeSrc":"3435:11:26","nodeType":"YulIdentifier","src":"3435:11:26"}],"functionName":{"name":"mstore","nativeSrc":"3422:6:26","nodeType":"YulIdentifier","src":"3422:6:26"},"nativeSrc":"3422:25:26","nodeType":"YulFunctionCall","src":"3422:25:26"},"nativeSrc":"3422:25:26","nodeType":"YulExpressionStatement","src":"3422:25:26"},{"nativeSrc":"3461:31:26","nodeType":"YulAssignment","src":"3461:31:26","value":{"arguments":[{"kind":"number","nativeSrc":"3481:4:26","nodeType":"YulLiteral","src":"3481:4:26","type":"","value":"0x00"},{"kind":"number","nativeSrc":"3487:4:26","nodeType":"YulLiteral","src":"3487:4:26","type":"","value":"0x36"}],"functionName":{"name":"keccak256","nativeSrc":"3471:9:26","nodeType":"YulIdentifier","src":"3471:9:26"},"nativeSrc":"3471:21:26","nodeType":"YulFunctionCall","src":"3471:21:26"},"variableNames":[{"name":"digest","nativeSrc":"3461:6:26","nodeType":"YulIdentifier","src":"3461:6:26"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":5298,"isOffset":false,"isSlot":false,"src":"3461:6:26","valueSize":1},{"declaration":5295,"isOffset":false,"isSlot":false,"src":"3435:11:26","valueSize":1},{"declaration":5293,"isOffset":false,"isSlot":false,"src":"3397:9:26","valueSize":1}],"flags":["memory-safe"],"id":5300,"nodeType":"InlineAssembly","src":"3298:205:26"}]},"documentation":{"id":5291,"nodeType":"StructuredDocumentation","src":"3005:131:26","text":" @dev Variant of {toDataWithIntendedValidatorHash-address-bytes} optimized for cases where `data` is a bytes32."},"id":5302,"implemented":true,"kind":"function","modifiers":[],"name":"toDataWithIntendedValidatorHash","nameLocation":"3151:31:26","nodeType":"FunctionDefinition","parameters":{"id":5296,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5293,"mutability":"mutable","name":"validator","nameLocation":"3201:9:26","nodeType":"VariableDeclaration","scope":5302,"src":"3193:17:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5292,"name":"address","nodeType":"ElementaryTypeName","src":"3193:7:26","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5295,"mutability":"mutable","name":"messageHash","nameLocation":"3229:11:26","nodeType":"VariableDeclaration","scope":5302,"src":"3221:19:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":5294,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3221:7:26","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3182:65:26"},"returnParameters":{"id":5299,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5298,"mutability":"mutable","name":"digest","nameLocation":"3279:6:26","nodeType":"VariableDeclaration","scope":5302,"src":"3271:14:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":5297,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3271:7:26","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3270:16:26"},"scope":5315,"src":"3142:368:26","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5313,"nodeType":"Block","src":"4072:273:26","statements":[{"AST":{"nativeSrc":"4108:230:26","nodeType":"YulBlock","src":"4108:230:26","statements":[{"nativeSrc":"4123:22:26","nodeType":"YulVariableDeclaration","src":"4123:22:26","value":{"arguments":[{"kind":"number","nativeSrc":"4140:4:26","nodeType":"YulLiteral","src":"4140:4:26","type":"","value":"0x40"}],"functionName":{"name":"mload","nativeSrc":"4134:5:26","nodeType":"YulIdentifier","src":"4134:5:26"},"nativeSrc":"4134:11:26","nodeType":"YulFunctionCall","src":"4134:11:26"},"variables":[{"name":"ptr","nativeSrc":"4127:3:26","nodeType":"YulTypedName","src":"4127:3:26","type":""}]},{"expression":{"arguments":[{"name":"ptr","nativeSrc":"4166:3:26","nodeType":"YulIdentifier","src":"4166:3:26"},{"hexValue":"1901","kind":"string","nativeSrc":"4171:10:26","nodeType":"YulLiteral","src":"4171:10:26","type":"","value":"\u0019\u0001"}],"functionName":{"name":"mstore","nativeSrc":"4159:6:26","nodeType":"YulIdentifier","src":"4159:6:26"},"nativeSrc":"4159:23:26","nodeType":"YulFunctionCall","src":"4159:23:26"},"nativeSrc":"4159:23:26","nodeType":"YulExpressionStatement","src":"4159:23:26"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nativeSrc":"4207:3:26","nodeType":"YulIdentifier","src":"4207:3:26"},{"kind":"number","nativeSrc":"4212:4:26","nodeType":"YulLiteral","src":"4212:4:26","type":"","value":"0x02"}],"functionName":{"name":"add","nativeSrc":"4203:3:26","nodeType":"YulIdentifier","src":"4203:3:26"},"nativeSrc":"4203:14:26","nodeType":"YulFunctionCall","src":"4203:14:26"},{"name":"domainSeparator","nativeSrc":"4219:15:26","nodeType":"YulIdentifier","src":"4219:15:26"}],"functionName":{"name":"mstore","nativeSrc":"4196:6:26","nodeType":"YulIdentifier","src":"4196:6:26"},"nativeSrc":"4196:39:26","nodeType":"YulFunctionCall","src":"4196:39:26"},"nativeSrc":"4196:39:26","nodeType":"YulExpressionStatement","src":"4196:39:26"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nativeSrc":"4260:3:26","nodeType":"YulIdentifier","src":"4260:3:26"},{"kind":"number","nativeSrc":"4265:4:26","nodeType":"YulLiteral","src":"4265:4:26","type":"","value":"0x22"}],"functionName":{"name":"add","nativeSrc":"4256:3:26","nodeType":"YulIdentifier","src":"4256:3:26"},"nativeSrc":"4256:14:26","nodeType":"YulFunctionCall","src":"4256:14:26"},{"name":"structHash","nativeSrc":"4272:10:26","nodeType":"YulIdentifier","src":"4272:10:26"}],"functionName":{"name":"mstore","nativeSrc":"4249:6:26","nodeType":"YulIdentifier","src":"4249:6:26"},"nativeSrc":"4249:34:26","nodeType":"YulFunctionCall","src":"4249:34:26"},"nativeSrc":"4249:34:26","nodeType":"YulExpressionStatement","src":"4249:34:26"},{"nativeSrc":"4297:30:26","nodeType":"YulAssignment","src":"4297:30:26","value":{"arguments":[{"name":"ptr","nativeSrc":"4317:3:26","nodeType":"YulIdentifier","src":"4317:3:26"},{"kind":"number","nativeSrc":"4322:4:26","nodeType":"YulLiteral","src":"4322:4:26","type":"","value":"0x42"}],"functionName":{"name":"keccak256","nativeSrc":"4307:9:26","nodeType":"YulIdentifier","src":"4307:9:26"},"nativeSrc":"4307:20:26","nodeType":"YulFunctionCall","src":"4307:20:26"},"variableNames":[{"name":"digest","nativeSrc":"4297:6:26","nodeType":"YulIdentifier","src":"4297:6:26"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":5310,"isOffset":false,"isSlot":false,"src":"4297:6:26","valueSize":1},{"declaration":5305,"isOffset":false,"isSlot":false,"src":"4219:15:26","valueSize":1},{"declaration":5307,"isOffset":false,"isSlot":false,"src":"4272:10:26","valueSize":1}],"flags":["memory-safe"],"id":5312,"nodeType":"InlineAssembly","src":"4083:255:26"}]},"documentation":{"id":5303,"nodeType":"StructuredDocumentation","src":"3518:439:26","text":" @dev Returns the keccak256 digest of an EIP-712 typed data (ERC-191 version `0x01`).\n The digest is calculated from a `domainSeparator` and a `structHash`, by prefixing them with\n `\\x19\\x01` and hashing the result. It corresponds to the hash signed by the\n https://eips.ethereum.org/EIPS/eip-712[`eth_signTypedData`] JSON-RPC method as part of EIP-712.\n See {ECDSA-recover}."},"id":5314,"implemented":true,"kind":"function","modifiers":[],"name":"toTypedDataHash","nameLocation":"3972:15:26","nodeType":"FunctionDefinition","parameters":{"id":5308,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5305,"mutability":"mutable","name":"domainSeparator","nameLocation":"3996:15:26","nodeType":"VariableDeclaration","scope":5314,"src":"3988:23:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":5304,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3988:7:26","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":5307,"mutability":"mutable","name":"structHash","nameLocation":"4021:10:26","nodeType":"VariableDeclaration","scope":5314,"src":"4013:18:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":5306,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4013:7:26","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3987:45:26"},"returnParameters":{"id":5311,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5310,"mutability":"mutable","name":"digest","nameLocation":"4064:6:26","nodeType":"VariableDeclaration","scope":5314,"src":"4056:14:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":5309,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4056:7:26","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4055:16:26"},"scope":5315,"src":"3963:382:26","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":5316,"src":"535:3813:26","usedErrors":[],"usedEvents":[]}],"src":"126:4224:26"},"id":26},"@openzeppelin/contracts/utils/introspection/IERC165.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/introspection/IERC165.sol","exportedSymbols":{"IERC165":[5327]},"id":5328,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":5317,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"118:24:27"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC165","contractDependencies":[],"contractKind":"interface","documentation":{"id":5318,"nodeType":"StructuredDocumentation","src":"146:288:27","text":" @dev Interface of the ERC-165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[ERC].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."},"fullyImplemented":false,"id":5327,"linearizedBaseContracts":[5327],"name":"IERC165","nameLocation":"446:7:27","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":5319,"nodeType":"StructuredDocumentation","src":"461:347:27","text":" @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."},"functionSelector":"01ffc9a7","id":5326,"implemented":false,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"823:17:27","nodeType":"FunctionDefinition","parameters":{"id":5322,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5321,"mutability":"mutable","name":"interfaceId","nameLocation":"848:11:27","nodeType":"VariableDeclaration","scope":5326,"src":"841:18:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":5320,"name":"bytes4","nodeType":"ElementaryTypeName","src":"841:6:27","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"840:20:27"},"returnParameters":{"id":5325,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5324,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5326,"src":"884:4:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5323,"name":"bool","nodeType":"ElementaryTypeName","src":"884:4:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"883:6:27"},"scope":5327,"src":"814:76:27","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":5328,"src":"436:457:27","usedErrors":[],"usedEvents":[]}],"src":"118:777:27"},"id":27},"@openzeppelin/contracts/utils/math/Math.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/math/Math.sol","exportedSymbols":{"Math":[6948],"Panic":[3355],"SafeCast":[8713]},"id":6949,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":5329,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"106:24:28"},{"absolutePath":"@openzeppelin/contracts/utils/Panic.sol","file":"../Panic.sol","id":5331,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":6949,"sourceUnit":3356,"src":"134:35:28","symbolAliases":[{"foreign":{"id":5330,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3355,"src":"142:5:28","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/math/SafeCast.sol","file":"./SafeCast.sol","id":5333,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":6949,"sourceUnit":8714,"src":"171:40:28","symbolAliases":[{"foreign":{"id":5332,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8713,"src":"179:8:28","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"Math","contractDependencies":[],"contractKind":"library","documentation":{"id":5334,"nodeType":"StructuredDocumentation","src":"215:75:28","text":" @dev Standard math utilities missing in the Solidity language."},"fullyImplemented":true,"id":6948,"linearizedBaseContracts":[6948],"name":"Math","nameLocation":"300:4:28","nodeType":"ContractDefinition","nodes":[{"canonicalName":"Math.Rounding","id":5339,"members":[{"id":5335,"name":"Floor","nameLocation":"337:5:28","nodeType":"EnumValue","src":"337:5:28"},{"id":5336,"name":"Ceil","nameLocation":"381:4:28","nodeType":"EnumValue","src":"381:4:28"},{"id":5337,"name":"Trunc","nameLocation":"424:5:28","nodeType":"EnumValue","src":"424:5:28"},{"id":5338,"name":"Expand","nameLocation":"455:6:28","nodeType":"EnumValue","src":"455:6:28"}],"name":"Rounding","nameLocation":"317:8:28","nodeType":"EnumDefinition","src":"312:174:28"},{"body":{"id":5352,"nodeType":"Block","src":"755:117:28","statements":[{"AST":{"nativeSrc":"791:74:28","nodeType":"YulBlock","src":"791:74:28","statements":[{"nativeSrc":"806:16:28","nodeType":"YulAssignment","src":"806:16:28","value":{"arguments":[{"name":"a","nativeSrc":"817:1:28","nodeType":"YulIdentifier","src":"817:1:28"},{"name":"b","nativeSrc":"820:1:28","nodeType":"YulIdentifier","src":"820:1:28"}],"functionName":{"name":"add","nativeSrc":"813:3:28","nodeType":"YulIdentifier","src":"813:3:28"},"nativeSrc":"813:9:28","nodeType":"YulFunctionCall","src":"813:9:28"},"variableNames":[{"name":"low","nativeSrc":"806:3:28","nodeType":"YulIdentifier","src":"806:3:28"}]},{"nativeSrc":"836:18:28","nodeType":"YulAssignment","src":"836:18:28","value":{"arguments":[{"name":"low","nativeSrc":"847:3:28","nodeType":"YulIdentifier","src":"847:3:28"},{"name":"a","nativeSrc":"852:1:28","nodeType":"YulIdentifier","src":"852:1:28"}],"functionName":{"name":"lt","nativeSrc":"844:2:28","nodeType":"YulIdentifier","src":"844:2:28"},"nativeSrc":"844:10:28","nodeType":"YulFunctionCall","src":"844:10:28"},"variableNames":[{"name":"high","nativeSrc":"836:4:28","nodeType":"YulIdentifier","src":"836:4:28"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":5342,"isOffset":false,"isSlot":false,"src":"817:1:28","valueSize":1},{"declaration":5342,"isOffset":false,"isSlot":false,"src":"852:1:28","valueSize":1},{"declaration":5344,"isOffset":false,"isSlot":false,"src":"820:1:28","valueSize":1},{"declaration":5347,"isOffset":false,"isSlot":false,"src":"836:4:28","valueSize":1},{"declaration":5349,"isOffset":false,"isSlot":false,"src":"806:3:28","valueSize":1},{"declaration":5349,"isOffset":false,"isSlot":false,"src":"847:3:28","valueSize":1}],"flags":["memory-safe"],"id":5351,"nodeType":"InlineAssembly","src":"766:99:28"}]},"documentation":{"id":5340,"nodeType":"StructuredDocumentation","src":"494:167:28","text":" @dev Return the 512-bit addition of two uint256.\n The result is stored in two 256 variables such that sum = high * 2²⁵⁶ + low."},"id":5353,"implemented":true,"kind":"function","modifiers":[],"name":"add512","nameLocation":"676:6:28","nodeType":"FunctionDefinition","parameters":{"id":5345,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5342,"mutability":"mutable","name":"a","nameLocation":"691:1:28","nodeType":"VariableDeclaration","scope":5353,"src":"683:9:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5341,"name":"uint256","nodeType":"ElementaryTypeName","src":"683:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5344,"mutability":"mutable","name":"b","nameLocation":"702:1:28","nodeType":"VariableDeclaration","scope":5353,"src":"694:9:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5343,"name":"uint256","nodeType":"ElementaryTypeName","src":"694:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"682:22:28"},"returnParameters":{"id":5350,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5347,"mutability":"mutable","name":"high","nameLocation":"736:4:28","nodeType":"VariableDeclaration","scope":5353,"src":"728:12:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5346,"name":"uint256","nodeType":"ElementaryTypeName","src":"728:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5349,"mutability":"mutable","name":"low","nameLocation":"750:3:28","nodeType":"VariableDeclaration","scope":5353,"src":"742:11:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5348,"name":"uint256","nodeType":"ElementaryTypeName","src":"742:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"727:27:28"},"scope":6948,"src":"667:205:28","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5366,"nodeType":"Block","src":"1151:471:28","statements":[{"AST":{"nativeSrc":"1477:138:28","nodeType":"YulBlock","src":"1477:138:28","statements":[{"nativeSrc":"1492:30:28","nodeType":"YulVariableDeclaration","src":"1492:30:28","value":{"arguments":[{"name":"a","nativeSrc":"1509:1:28","nodeType":"YulIdentifier","src":"1509:1:28"},{"name":"b","nativeSrc":"1512:1:28","nodeType":"YulIdentifier","src":"1512:1:28"},{"arguments":[{"kind":"number","nativeSrc":"1519:1:28","nodeType":"YulLiteral","src":"1519:1:28","type":"","value":"0"}],"functionName":{"name":"not","nativeSrc":"1515:3:28","nodeType":"YulIdentifier","src":"1515:3:28"},"nativeSrc":"1515:6:28","nodeType":"YulFunctionCall","src":"1515:6:28"}],"functionName":{"name":"mulmod","nativeSrc":"1502:6:28","nodeType":"YulIdentifier","src":"1502:6:28"},"nativeSrc":"1502:20:28","nodeType":"YulFunctionCall","src":"1502:20:28"},"variables":[{"name":"mm","nativeSrc":"1496:2:28","nodeType":"YulTypedName","src":"1496:2:28","type":""}]},{"nativeSrc":"1536:16:28","nodeType":"YulAssignment","src":"1536:16:28","value":{"arguments":[{"name":"a","nativeSrc":"1547:1:28","nodeType":"YulIdentifier","src":"1547:1:28"},{"name":"b","nativeSrc":"1550:1:28","nodeType":"YulIdentifier","src":"1550:1:28"}],"functionName":{"name":"mul","nativeSrc":"1543:3:28","nodeType":"YulIdentifier","src":"1543:3:28"},"nativeSrc":"1543:9:28","nodeType":"YulFunctionCall","src":"1543:9:28"},"variableNames":[{"name":"low","nativeSrc":"1536:3:28","nodeType":"YulIdentifier","src":"1536:3:28"}]},{"nativeSrc":"1566:38:28","nodeType":"YulAssignment","src":"1566:38:28","value":{"arguments":[{"arguments":[{"name":"mm","nativeSrc":"1582:2:28","nodeType":"YulIdentifier","src":"1582:2:28"},{"name":"low","nativeSrc":"1586:3:28","nodeType":"YulIdentifier","src":"1586:3:28"}],"functionName":{"name":"sub","nativeSrc":"1578:3:28","nodeType":"YulIdentifier","src":"1578:3:28"},"nativeSrc":"1578:12:28","nodeType":"YulFunctionCall","src":"1578:12:28"},{"arguments":[{"name":"mm","nativeSrc":"1595:2:28","nodeType":"YulIdentifier","src":"1595:2:28"},{"name":"low","nativeSrc":"1599:3:28","nodeType":"YulIdentifier","src":"1599:3:28"}],"functionName":{"name":"lt","nativeSrc":"1592:2:28","nodeType":"YulIdentifier","src":"1592:2:28"},"nativeSrc":"1592:11:28","nodeType":"YulFunctionCall","src":"1592:11:28"}],"functionName":{"name":"sub","nativeSrc":"1574:3:28","nodeType":"YulIdentifier","src":"1574:3:28"},"nativeSrc":"1574:30:28","nodeType":"YulFunctionCall","src":"1574:30:28"},"variableNames":[{"name":"high","nativeSrc":"1566:4:28","nodeType":"YulIdentifier","src":"1566:4:28"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":5356,"isOffset":false,"isSlot":false,"src":"1509:1:28","valueSize":1},{"declaration":5356,"isOffset":false,"isSlot":false,"src":"1547:1:28","valueSize":1},{"declaration":5358,"isOffset":false,"isSlot":false,"src":"1512:1:28","valueSize":1},{"declaration":5358,"isOffset":false,"isSlot":false,"src":"1550:1:28","valueSize":1},{"declaration":5361,"isOffset":false,"isSlot":false,"src":"1566:4:28","valueSize":1},{"declaration":5363,"isOffset":false,"isSlot":false,"src":"1536:3:28","valueSize":1},{"declaration":5363,"isOffset":false,"isSlot":false,"src":"1586:3:28","valueSize":1},{"declaration":5363,"isOffset":false,"isSlot":false,"src":"1599:3:28","valueSize":1}],"flags":["memory-safe"],"id":5365,"nodeType":"InlineAssembly","src":"1452:163:28"}]},"documentation":{"id":5354,"nodeType":"StructuredDocumentation","src":"880:177:28","text":" @dev Return the 512-bit multiplication of two uint256.\n The result is stored in two 256 variables such that product = high * 2²⁵⁶ + low."},"id":5367,"implemented":true,"kind":"function","modifiers":[],"name":"mul512","nameLocation":"1072:6:28","nodeType":"FunctionDefinition","parameters":{"id":5359,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5356,"mutability":"mutable","name":"a","nameLocation":"1087:1:28","nodeType":"VariableDeclaration","scope":5367,"src":"1079:9:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5355,"name":"uint256","nodeType":"ElementaryTypeName","src":"1079:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5358,"mutability":"mutable","name":"b","nameLocation":"1098:1:28","nodeType":"VariableDeclaration","scope":5367,"src":"1090:9:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5357,"name":"uint256","nodeType":"ElementaryTypeName","src":"1090:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1078:22:28"},"returnParameters":{"id":5364,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5361,"mutability":"mutable","name":"high","nameLocation":"1132:4:28","nodeType":"VariableDeclaration","scope":5367,"src":"1124:12:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5360,"name":"uint256","nodeType":"ElementaryTypeName","src":"1124:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5363,"mutability":"mutable","name":"low","nameLocation":"1146:3:28","nodeType":"VariableDeclaration","scope":5367,"src":"1138:11:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5362,"name":"uint256","nodeType":"ElementaryTypeName","src":"1138:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1123:27:28"},"scope":6948,"src":"1063:559:28","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5401,"nodeType":"Block","src":"1834:155:28","statements":[{"id":5400,"nodeType":"UncheckedBlock","src":"1845:137:28","statements":[{"assignments":[5380],"declarations":[{"constant":false,"id":5380,"mutability":"mutable","name":"c","nameLocation":"1878:1:28","nodeType":"VariableDeclaration","scope":5400,"src":"1870:9:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5379,"name":"uint256","nodeType":"ElementaryTypeName","src":"1870:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5384,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5383,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5381,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5370,"src":"1882:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":5382,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5372,"src":"1886:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1882:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1870:17:28"},{"expression":{"id":5389,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5385,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5375,"src":"1902:7:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5388,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5386,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5380,"src":"1912:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":5387,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5370,"src":"1917:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1912:6:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"1902:16:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5390,"nodeType":"ExpressionStatement","src":"1902:16:28"},{"expression":{"id":5398,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5391,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5377,"src":"1933:6:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5397,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5392,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5380,"src":"1942:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"id":5395,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5375,"src":"1962:7:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":5393,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8713,"src":"1946:8:28","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$8713_$","typeString":"type(library SafeCast)"}},"id":5394,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1955:6:28","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":8712,"src":"1946:15:28","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":5396,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1946:24:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1942:28:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1933:37:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5399,"nodeType":"ExpressionStatement","src":"1933:37:28"}]}]},"documentation":{"id":5368,"nodeType":"StructuredDocumentation","src":"1630:107:28","text":" @dev Returns the addition of two unsigned integers, with a success flag (no overflow)."},"id":5402,"implemented":true,"kind":"function","modifiers":[],"name":"tryAdd","nameLocation":"1752:6:28","nodeType":"FunctionDefinition","parameters":{"id":5373,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5370,"mutability":"mutable","name":"a","nameLocation":"1767:1:28","nodeType":"VariableDeclaration","scope":5402,"src":"1759:9:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5369,"name":"uint256","nodeType":"ElementaryTypeName","src":"1759:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5372,"mutability":"mutable","name":"b","nameLocation":"1778:1:28","nodeType":"VariableDeclaration","scope":5402,"src":"1770:9:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5371,"name":"uint256","nodeType":"ElementaryTypeName","src":"1770:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1758:22:28"},"returnParameters":{"id":5378,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5375,"mutability":"mutable","name":"success","nameLocation":"1809:7:28","nodeType":"VariableDeclaration","scope":5402,"src":"1804:12:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5374,"name":"bool","nodeType":"ElementaryTypeName","src":"1804:4:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":5377,"mutability":"mutable","name":"result","nameLocation":"1826:6:28","nodeType":"VariableDeclaration","scope":5402,"src":"1818:14:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5376,"name":"uint256","nodeType":"ElementaryTypeName","src":"1818:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1803:30:28"},"scope":6948,"src":"1743:246:28","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5436,"nodeType":"Block","src":"2204:155:28","statements":[{"id":5435,"nodeType":"UncheckedBlock","src":"2215:137:28","statements":[{"assignments":[5415],"declarations":[{"constant":false,"id":5415,"mutability":"mutable","name":"c","nameLocation":"2248:1:28","nodeType":"VariableDeclaration","scope":5435,"src":"2240:9:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5414,"name":"uint256","nodeType":"ElementaryTypeName","src":"2240:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5419,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5418,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5416,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5405,"src":"2252:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":5417,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5407,"src":"2256:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2252:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2240:17:28"},{"expression":{"id":5424,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5420,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5410,"src":"2272:7:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5423,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5421,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5415,"src":"2282:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"id":5422,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5405,"src":"2287:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2282:6:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"2272:16:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5425,"nodeType":"ExpressionStatement","src":"2272:16:28"},{"expression":{"id":5433,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5426,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5412,"src":"2303:6:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5432,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5427,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5415,"src":"2312:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"id":5430,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5410,"src":"2332:7:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":5428,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8713,"src":"2316:8:28","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$8713_$","typeString":"type(library SafeCast)"}},"id":5429,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2325:6:28","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":8712,"src":"2316:15:28","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":5431,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2316:24:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2312:28:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2303:37:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5434,"nodeType":"ExpressionStatement","src":"2303:37:28"}]}]},"documentation":{"id":5403,"nodeType":"StructuredDocumentation","src":"1997:110:28","text":" @dev Returns the subtraction of two unsigned integers, with a success flag (no overflow)."},"id":5437,"implemented":true,"kind":"function","modifiers":[],"name":"trySub","nameLocation":"2122:6:28","nodeType":"FunctionDefinition","parameters":{"id":5408,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5405,"mutability":"mutable","name":"a","nameLocation":"2137:1:28","nodeType":"VariableDeclaration","scope":5437,"src":"2129:9:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5404,"name":"uint256","nodeType":"ElementaryTypeName","src":"2129:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5407,"mutability":"mutable","name":"b","nameLocation":"2148:1:28","nodeType":"VariableDeclaration","scope":5437,"src":"2140:9:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5406,"name":"uint256","nodeType":"ElementaryTypeName","src":"2140:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2128:22:28"},"returnParameters":{"id":5413,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5410,"mutability":"mutable","name":"success","nameLocation":"2179:7:28","nodeType":"VariableDeclaration","scope":5437,"src":"2174:12:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5409,"name":"bool","nodeType":"ElementaryTypeName","src":"2174:4:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":5412,"mutability":"mutable","name":"result","nameLocation":"2196:6:28","nodeType":"VariableDeclaration","scope":5437,"src":"2188:14:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5411,"name":"uint256","nodeType":"ElementaryTypeName","src":"2188:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2173:30:28"},"scope":6948,"src":"2113:246:28","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5466,"nodeType":"Block","src":"2577:402:28","statements":[{"id":5465,"nodeType":"UncheckedBlock","src":"2588:384:28","statements":[{"assignments":[5450],"declarations":[{"constant":false,"id":5450,"mutability":"mutable","name":"c","nameLocation":"2621:1:28","nodeType":"VariableDeclaration","scope":5465,"src":"2613:9:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5449,"name":"uint256","nodeType":"ElementaryTypeName","src":"2613:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5454,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5453,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5451,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5440,"src":"2625:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":5452,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5442,"src":"2629:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2625:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2613:17:28"},{"AST":{"nativeSrc":"2670:192:28","nodeType":"YulBlock","src":"2670:192:28","statements":[{"nativeSrc":"2805:42:28","nodeType":"YulAssignment","src":"2805:42:28","value":{"arguments":[{"arguments":[{"arguments":[{"name":"c","nativeSrc":"2826:1:28","nodeType":"YulIdentifier","src":"2826:1:28"},{"name":"a","nativeSrc":"2829:1:28","nodeType":"YulIdentifier","src":"2829:1:28"}],"functionName":{"name":"div","nativeSrc":"2822:3:28","nodeType":"YulIdentifier","src":"2822:3:28"},"nativeSrc":"2822:9:28","nodeType":"YulFunctionCall","src":"2822:9:28"},{"name":"b","nativeSrc":"2833:1:28","nodeType":"YulIdentifier","src":"2833:1:28"}],"functionName":{"name":"eq","nativeSrc":"2819:2:28","nodeType":"YulIdentifier","src":"2819:2:28"},"nativeSrc":"2819:16:28","nodeType":"YulFunctionCall","src":"2819:16:28"},{"arguments":[{"name":"a","nativeSrc":"2844:1:28","nodeType":"YulIdentifier","src":"2844:1:28"}],"functionName":{"name":"iszero","nativeSrc":"2837:6:28","nodeType":"YulIdentifier","src":"2837:6:28"},"nativeSrc":"2837:9:28","nodeType":"YulFunctionCall","src":"2837:9:28"}],"functionName":{"name":"or","nativeSrc":"2816:2:28","nodeType":"YulIdentifier","src":"2816:2:28"},"nativeSrc":"2816:31:28","nodeType":"YulFunctionCall","src":"2816:31:28"},"variableNames":[{"name":"success","nativeSrc":"2805:7:28","nodeType":"YulIdentifier","src":"2805:7:28"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":5440,"isOffset":false,"isSlot":false,"src":"2829:1:28","valueSize":1},{"declaration":5440,"isOffset":false,"isSlot":false,"src":"2844:1:28","valueSize":1},{"declaration":5442,"isOffset":false,"isSlot":false,"src":"2833:1:28","valueSize":1},{"declaration":5450,"isOffset":false,"isSlot":false,"src":"2826:1:28","valueSize":1},{"declaration":5445,"isOffset":false,"isSlot":false,"src":"2805:7:28","valueSize":1}],"flags":["memory-safe"],"id":5455,"nodeType":"InlineAssembly","src":"2645:217:28"},{"expression":{"id":5463,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5456,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5447,"src":"2923:6:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5462,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5457,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5450,"src":"2932:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"id":5460,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5445,"src":"2952:7:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":5458,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8713,"src":"2936:8:28","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$8713_$","typeString":"type(library SafeCast)"}},"id":5459,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2945:6:28","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":8712,"src":"2936:15:28","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":5461,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2936:24:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2932:28:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2923:37:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5464,"nodeType":"ExpressionStatement","src":"2923:37:28"}]}]},"documentation":{"id":5438,"nodeType":"StructuredDocumentation","src":"2367:113:28","text":" @dev Returns the multiplication of two unsigned integers, with a success flag (no overflow)."},"id":5467,"implemented":true,"kind":"function","modifiers":[],"name":"tryMul","nameLocation":"2495:6:28","nodeType":"FunctionDefinition","parameters":{"id":5443,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5440,"mutability":"mutable","name":"a","nameLocation":"2510:1:28","nodeType":"VariableDeclaration","scope":5467,"src":"2502:9:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5439,"name":"uint256","nodeType":"ElementaryTypeName","src":"2502:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5442,"mutability":"mutable","name":"b","nameLocation":"2521:1:28","nodeType":"VariableDeclaration","scope":5467,"src":"2513:9:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5441,"name":"uint256","nodeType":"ElementaryTypeName","src":"2513:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2501:22:28"},"returnParameters":{"id":5448,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5445,"mutability":"mutable","name":"success","nameLocation":"2552:7:28","nodeType":"VariableDeclaration","scope":5467,"src":"2547:12:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5444,"name":"bool","nodeType":"ElementaryTypeName","src":"2547:4:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":5447,"mutability":"mutable","name":"result","nameLocation":"2569:6:28","nodeType":"VariableDeclaration","scope":5467,"src":"2561:14:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5446,"name":"uint256","nodeType":"ElementaryTypeName","src":"2561:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2546:30:28"},"scope":6948,"src":"2486:493:28","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5487,"nodeType":"Block","src":"3199:239:28","statements":[{"id":5486,"nodeType":"UncheckedBlock","src":"3210:221:28","statements":[{"expression":{"id":5483,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5479,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5475,"src":"3235:7:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5482,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5480,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5472,"src":"3245:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":5481,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3249:1:28","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3245:5:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"3235:15:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5484,"nodeType":"ExpressionStatement","src":"3235:15:28"},{"AST":{"nativeSrc":"3290:130:28","nodeType":"YulBlock","src":"3290:130:28","statements":[{"nativeSrc":"3386:19:28","nodeType":"YulAssignment","src":"3386:19:28","value":{"arguments":[{"name":"a","nativeSrc":"3400:1:28","nodeType":"YulIdentifier","src":"3400:1:28"},{"name":"b","nativeSrc":"3403:1:28","nodeType":"YulIdentifier","src":"3403:1:28"}],"functionName":{"name":"div","nativeSrc":"3396:3:28","nodeType":"YulIdentifier","src":"3396:3:28"},"nativeSrc":"3396:9:28","nodeType":"YulFunctionCall","src":"3396:9:28"},"variableNames":[{"name":"result","nativeSrc":"3386:6:28","nodeType":"YulIdentifier","src":"3386:6:28"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":5470,"isOffset":false,"isSlot":false,"src":"3400:1:28","valueSize":1},{"declaration":5472,"isOffset":false,"isSlot":false,"src":"3403:1:28","valueSize":1},{"declaration":5477,"isOffset":false,"isSlot":false,"src":"3386:6:28","valueSize":1}],"flags":["memory-safe"],"id":5485,"nodeType":"InlineAssembly","src":"3265:155:28"}]}]},"documentation":{"id":5468,"nodeType":"StructuredDocumentation","src":"2987:115:28","text":" @dev Returns the division of two unsigned integers, with a success flag (no division by zero)."},"id":5488,"implemented":true,"kind":"function","modifiers":[],"name":"tryDiv","nameLocation":"3117:6:28","nodeType":"FunctionDefinition","parameters":{"id":5473,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5470,"mutability":"mutable","name":"a","nameLocation":"3132:1:28","nodeType":"VariableDeclaration","scope":5488,"src":"3124:9:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5469,"name":"uint256","nodeType":"ElementaryTypeName","src":"3124:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5472,"mutability":"mutable","name":"b","nameLocation":"3143:1:28","nodeType":"VariableDeclaration","scope":5488,"src":"3135:9:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5471,"name":"uint256","nodeType":"ElementaryTypeName","src":"3135:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3123:22:28"},"returnParameters":{"id":5478,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5475,"mutability":"mutable","name":"success","nameLocation":"3174:7:28","nodeType":"VariableDeclaration","scope":5488,"src":"3169:12:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5474,"name":"bool","nodeType":"ElementaryTypeName","src":"3169:4:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":5477,"mutability":"mutable","name":"result","nameLocation":"3191:6:28","nodeType":"VariableDeclaration","scope":5488,"src":"3183:14:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5476,"name":"uint256","nodeType":"ElementaryTypeName","src":"3183:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3168:30:28"},"scope":6948,"src":"3108:330:28","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5508,"nodeType":"Block","src":"3668:239:28","statements":[{"id":5507,"nodeType":"UncheckedBlock","src":"3679:221:28","statements":[{"expression":{"id":5504,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5500,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5496,"src":"3704:7:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5503,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5501,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5493,"src":"3714:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":5502,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3718:1:28","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3714:5:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"3704:15:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5505,"nodeType":"ExpressionStatement","src":"3704:15:28"},{"AST":{"nativeSrc":"3759:130:28","nodeType":"YulBlock","src":"3759:130:28","statements":[{"nativeSrc":"3855:19:28","nodeType":"YulAssignment","src":"3855:19:28","value":{"arguments":[{"name":"a","nativeSrc":"3869:1:28","nodeType":"YulIdentifier","src":"3869:1:28"},{"name":"b","nativeSrc":"3872:1:28","nodeType":"YulIdentifier","src":"3872:1:28"}],"functionName":{"name":"mod","nativeSrc":"3865:3:28","nodeType":"YulIdentifier","src":"3865:3:28"},"nativeSrc":"3865:9:28","nodeType":"YulFunctionCall","src":"3865:9:28"},"variableNames":[{"name":"result","nativeSrc":"3855:6:28","nodeType":"YulIdentifier","src":"3855:6:28"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":5491,"isOffset":false,"isSlot":false,"src":"3869:1:28","valueSize":1},{"declaration":5493,"isOffset":false,"isSlot":false,"src":"3872:1:28","valueSize":1},{"declaration":5498,"isOffset":false,"isSlot":false,"src":"3855:6:28","valueSize":1}],"flags":["memory-safe"],"id":5506,"nodeType":"InlineAssembly","src":"3734:155:28"}]}]},"documentation":{"id":5489,"nodeType":"StructuredDocumentation","src":"3446:125:28","text":" @dev Returns the remainder of dividing two unsigned integers, with a success flag (no division by zero)."},"id":5509,"implemented":true,"kind":"function","modifiers":[],"name":"tryMod","nameLocation":"3586:6:28","nodeType":"FunctionDefinition","parameters":{"id":5494,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5491,"mutability":"mutable","name":"a","nameLocation":"3601:1:28","nodeType":"VariableDeclaration","scope":5509,"src":"3593:9:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5490,"name":"uint256","nodeType":"ElementaryTypeName","src":"3593:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5493,"mutability":"mutable","name":"b","nameLocation":"3612:1:28","nodeType":"VariableDeclaration","scope":5509,"src":"3604:9:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5492,"name":"uint256","nodeType":"ElementaryTypeName","src":"3604:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3592:22:28"},"returnParameters":{"id":5499,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5496,"mutability":"mutable","name":"success","nameLocation":"3643:7:28","nodeType":"VariableDeclaration","scope":5509,"src":"3638:12:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5495,"name":"bool","nodeType":"ElementaryTypeName","src":"3638:4:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":5498,"mutability":"mutable","name":"result","nameLocation":"3660:6:28","nodeType":"VariableDeclaration","scope":5509,"src":"3652:14:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5497,"name":"uint256","nodeType":"ElementaryTypeName","src":"3652:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3637:30:28"},"scope":6948,"src":"3577:330:28","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5538,"nodeType":"Block","src":"4103:125:28","statements":[{"assignments":[5520,5522],"declarations":[{"constant":false,"id":5520,"mutability":"mutable","name":"success","nameLocation":"4120:7:28","nodeType":"VariableDeclaration","scope":5538,"src":"4115:12:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5519,"name":"bool","nodeType":"ElementaryTypeName","src":"4115:4:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":5522,"mutability":"mutable","name":"result","nameLocation":"4137:6:28","nodeType":"VariableDeclaration","scope":5538,"src":"4129:14:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5521,"name":"uint256","nodeType":"ElementaryTypeName","src":"4129:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5527,"initialValue":{"arguments":[{"id":5524,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5512,"src":"4154:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5525,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5514,"src":"4157:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5523,"name":"tryAdd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5402,"src":"4147:6:28","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (bool,uint256)"}},"id":5526,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4147:12:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"4114:45:28"},{"expression":{"arguments":[{"id":5529,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5520,"src":"4185:7:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":5530,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5522,"src":"4194:6:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"arguments":[{"id":5533,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4207:7:28","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":5532,"name":"uint256","nodeType":"ElementaryTypeName","src":"4207:7:28","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"}],"id":5531,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"4202:4:28","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5534,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4202:13:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint256","typeString":"type(uint256)"}},"id":5535,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4216:3:28","memberName":"max","nodeType":"MemberAccess","src":"4202:17:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5528,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5616,"src":"4177:7:28","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (bool,uint256,uint256) pure returns (uint256)"}},"id":5536,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4177:43:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5518,"id":5537,"nodeType":"Return","src":"4170:50:28"}]},"documentation":{"id":5510,"nodeType":"StructuredDocumentation","src":"3915:105:28","text":" @dev Unsigned saturating addition, bounds to `2²⁵⁶ - 1` instead of overflowing."},"id":5539,"implemented":true,"kind":"function","modifiers":[],"name":"saturatingAdd","nameLocation":"4035:13:28","nodeType":"FunctionDefinition","parameters":{"id":5515,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5512,"mutability":"mutable","name":"a","nameLocation":"4057:1:28","nodeType":"VariableDeclaration","scope":5539,"src":"4049:9:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5511,"name":"uint256","nodeType":"ElementaryTypeName","src":"4049:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5514,"mutability":"mutable","name":"b","nameLocation":"4068:1:28","nodeType":"VariableDeclaration","scope":5539,"src":"4060:9:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5513,"name":"uint256","nodeType":"ElementaryTypeName","src":"4060:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4048:22:28"},"returnParameters":{"id":5518,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5517,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5539,"src":"4094:7:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5516,"name":"uint256","nodeType":"ElementaryTypeName","src":"4094:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4093:9:28"},"scope":6948,"src":"4026:202:28","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5558,"nodeType":"Block","src":"4416:76:28","statements":[{"assignments":[null,5550],"declarations":[null,{"constant":false,"id":5550,"mutability":"mutable","name":"result","nameLocation":"4438:6:28","nodeType":"VariableDeclaration","scope":5558,"src":"4430:14:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5549,"name":"uint256","nodeType":"ElementaryTypeName","src":"4430:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5555,"initialValue":{"arguments":[{"id":5552,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5542,"src":"4455:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5553,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5544,"src":"4458:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5551,"name":"trySub","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5437,"src":"4448:6:28","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (bool,uint256)"}},"id":5554,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4448:12:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"4427:33:28"},{"expression":{"id":5556,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5550,"src":"4478:6:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5548,"id":5557,"nodeType":"Return","src":"4471:13:28"}]},"documentation":{"id":5540,"nodeType":"StructuredDocumentation","src":"4236:97:28","text":" @dev Unsigned saturating subtraction, bounds to zero instead of overflowing."},"id":5559,"implemented":true,"kind":"function","modifiers":[],"name":"saturatingSub","nameLocation":"4348:13:28","nodeType":"FunctionDefinition","parameters":{"id":5545,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5542,"mutability":"mutable","name":"a","nameLocation":"4370:1:28","nodeType":"VariableDeclaration","scope":5559,"src":"4362:9:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5541,"name":"uint256","nodeType":"ElementaryTypeName","src":"4362:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5544,"mutability":"mutable","name":"b","nameLocation":"4381:1:28","nodeType":"VariableDeclaration","scope":5559,"src":"4373:9:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5543,"name":"uint256","nodeType":"ElementaryTypeName","src":"4373:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4361:22:28"},"returnParameters":{"id":5548,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5547,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5559,"src":"4407:7:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5546,"name":"uint256","nodeType":"ElementaryTypeName","src":"4407:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4406:9:28"},"scope":6948,"src":"4339:153:28","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5588,"nodeType":"Block","src":"4694:125:28","statements":[{"assignments":[5570,5572],"declarations":[{"constant":false,"id":5570,"mutability":"mutable","name":"success","nameLocation":"4711:7:28","nodeType":"VariableDeclaration","scope":5588,"src":"4706:12:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5569,"name":"bool","nodeType":"ElementaryTypeName","src":"4706:4:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":5572,"mutability":"mutable","name":"result","nameLocation":"4728:6:28","nodeType":"VariableDeclaration","scope":5588,"src":"4720:14:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5571,"name":"uint256","nodeType":"ElementaryTypeName","src":"4720:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5577,"initialValue":{"arguments":[{"id":5574,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5562,"src":"4745:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5575,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5564,"src":"4748:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5573,"name":"tryMul","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5467,"src":"4738:6:28","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (bool,uint256)"}},"id":5576,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4738:12:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"4705:45:28"},{"expression":{"arguments":[{"id":5579,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5570,"src":"4776:7:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":5580,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5572,"src":"4785:6:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"arguments":[{"id":5583,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4798:7:28","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":5582,"name":"uint256","nodeType":"ElementaryTypeName","src":"4798:7:28","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"}],"id":5581,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"4793:4:28","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5584,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4793:13:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint256","typeString":"type(uint256)"}},"id":5585,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4807:3:28","memberName":"max","nodeType":"MemberAccess","src":"4793:17:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5578,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5616,"src":"4768:7:28","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (bool,uint256,uint256) pure returns (uint256)"}},"id":5586,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4768:43:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5568,"id":5587,"nodeType":"Return","src":"4761:50:28"}]},"documentation":{"id":5560,"nodeType":"StructuredDocumentation","src":"4500:111:28","text":" @dev Unsigned saturating multiplication, bounds to `2²⁵⁶ - 1` instead of overflowing."},"id":5589,"implemented":true,"kind":"function","modifiers":[],"name":"saturatingMul","nameLocation":"4626:13:28","nodeType":"FunctionDefinition","parameters":{"id":5565,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5562,"mutability":"mutable","name":"a","nameLocation":"4648:1:28","nodeType":"VariableDeclaration","scope":5589,"src":"4640:9:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5561,"name":"uint256","nodeType":"ElementaryTypeName","src":"4640:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5564,"mutability":"mutable","name":"b","nameLocation":"4659:1:28","nodeType":"VariableDeclaration","scope":5589,"src":"4651:9:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5563,"name":"uint256","nodeType":"ElementaryTypeName","src":"4651:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4639:22:28"},"returnParameters":{"id":5568,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5567,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5589,"src":"4685:7:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5566,"name":"uint256","nodeType":"ElementaryTypeName","src":"4685:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4684:9:28"},"scope":6948,"src":"4617:202:28","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5615,"nodeType":"Block","src":"5300:214:28","statements":[{"id":5614,"nodeType":"UncheckedBlock","src":"5311:196:28","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5612,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5601,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5596,"src":"5453:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5610,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5604,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5602,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5594,"src":"5459:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":5603,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5596,"src":"5463:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5459:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5605,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"5458:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"id":5608,"name":"condition","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5592,"src":"5484:9:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":5606,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8713,"src":"5468:8:28","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$8713_$","typeString":"type(library SafeCast)"}},"id":5607,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5477:6:28","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":8712,"src":"5468:15:28","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":5609,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5468:26:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5458:36:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5611,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"5457:38:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5453:42:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5600,"id":5613,"nodeType":"Return","src":"5446:49:28"}]}]},"documentation":{"id":5590,"nodeType":"StructuredDocumentation","src":"4827:380:28","text":" @dev Branchless ternary evaluation for `a ? b : c`. Gas costs are constant.\n IMPORTANT: This function may reduce bytecode size and consume less gas when used standalone.\n However, the compiler may optimize Solidity ternary operations (i.e. `a ? b : c`) to only compute\n one branch when needed, making this function more expensive."},"id":5616,"implemented":true,"kind":"function","modifiers":[],"name":"ternary","nameLocation":"5222:7:28","nodeType":"FunctionDefinition","parameters":{"id":5597,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5592,"mutability":"mutable","name":"condition","nameLocation":"5235:9:28","nodeType":"VariableDeclaration","scope":5616,"src":"5230:14:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5591,"name":"bool","nodeType":"ElementaryTypeName","src":"5230:4:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":5594,"mutability":"mutable","name":"a","nameLocation":"5254:1:28","nodeType":"VariableDeclaration","scope":5616,"src":"5246:9:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5593,"name":"uint256","nodeType":"ElementaryTypeName","src":"5246:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5596,"mutability":"mutable","name":"b","nameLocation":"5265:1:28","nodeType":"VariableDeclaration","scope":5616,"src":"5257:9:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5595,"name":"uint256","nodeType":"ElementaryTypeName","src":"5257:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5229:38:28"},"returnParameters":{"id":5600,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5599,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5616,"src":"5291:7:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5598,"name":"uint256","nodeType":"ElementaryTypeName","src":"5291:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5290:9:28"},"scope":6948,"src":"5213:301:28","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5634,"nodeType":"Block","src":"5656:46:28","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5629,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5627,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5619,"src":"5682:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":5628,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5621,"src":"5686:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5682:5:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":5630,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5619,"src":"5689:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5631,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5621,"src":"5692:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5626,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5616,"src":"5674:7:28","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (bool,uint256,uint256) pure returns (uint256)"}},"id":5632,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5674:20:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5625,"id":5633,"nodeType":"Return","src":"5667:27:28"}]},"documentation":{"id":5617,"nodeType":"StructuredDocumentation","src":"5522:61:28","text":" @dev Returns the largest of two numbers."},"id":5635,"implemented":true,"kind":"function","modifiers":[],"name":"max","nameLocation":"5598:3:28","nodeType":"FunctionDefinition","parameters":{"id":5622,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5619,"mutability":"mutable","name":"a","nameLocation":"5610:1:28","nodeType":"VariableDeclaration","scope":5635,"src":"5602:9:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5618,"name":"uint256","nodeType":"ElementaryTypeName","src":"5602:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5621,"mutability":"mutable","name":"b","nameLocation":"5621:1:28","nodeType":"VariableDeclaration","scope":5635,"src":"5613:9:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5620,"name":"uint256","nodeType":"ElementaryTypeName","src":"5613:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5601:22:28"},"returnParameters":{"id":5625,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5624,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5635,"src":"5647:7:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5623,"name":"uint256","nodeType":"ElementaryTypeName","src":"5647:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5646:9:28"},"scope":6948,"src":"5589:113:28","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5653,"nodeType":"Block","src":"5845:46:28","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5648,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5646,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5638,"src":"5871:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":5647,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5640,"src":"5875:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5871:5:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":5649,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5638,"src":"5878:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5650,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5640,"src":"5881:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5645,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5616,"src":"5863:7:28","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (bool,uint256,uint256) pure returns (uint256)"}},"id":5651,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5863:20:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5644,"id":5652,"nodeType":"Return","src":"5856:27:28"}]},"documentation":{"id":5636,"nodeType":"StructuredDocumentation","src":"5710:62:28","text":" @dev Returns the smallest of two numbers."},"id":5654,"implemented":true,"kind":"function","modifiers":[],"name":"min","nameLocation":"5787:3:28","nodeType":"FunctionDefinition","parameters":{"id":5641,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5638,"mutability":"mutable","name":"a","nameLocation":"5799:1:28","nodeType":"VariableDeclaration","scope":5654,"src":"5791:9:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5637,"name":"uint256","nodeType":"ElementaryTypeName","src":"5791:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5640,"mutability":"mutable","name":"b","nameLocation":"5810:1:28","nodeType":"VariableDeclaration","scope":5654,"src":"5802:9:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5639,"name":"uint256","nodeType":"ElementaryTypeName","src":"5802:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5790:22:28"},"returnParameters":{"id":5644,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5643,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5654,"src":"5836:7:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5642,"name":"uint256","nodeType":"ElementaryTypeName","src":"5836:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5835:9:28"},"scope":6948,"src":"5778:113:28","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5676,"nodeType":"Block","src":"6081:85:28","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5674,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5666,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5664,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5657,"src":"6138:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"id":5665,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5659,"src":"6142:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6138:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5667,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"6137:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5673,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5670,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5668,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5657,"src":"6148:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":5669,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5659,"src":"6152:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6148:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5671,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"6147:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"32","id":5672,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6157:1:28","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"6147:11:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6137:21:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5663,"id":5675,"nodeType":"Return","src":"6130:28:28"}]},"documentation":{"id":5655,"nodeType":"StructuredDocumentation","src":"5899:105:28","text":" @dev Returns the average of two numbers. The result is rounded towards\n zero."},"id":5677,"implemented":true,"kind":"function","modifiers":[],"name":"average","nameLocation":"6019:7:28","nodeType":"FunctionDefinition","parameters":{"id":5660,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5657,"mutability":"mutable","name":"a","nameLocation":"6035:1:28","nodeType":"VariableDeclaration","scope":5677,"src":"6027:9:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5656,"name":"uint256","nodeType":"ElementaryTypeName","src":"6027:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5659,"mutability":"mutable","name":"b","nameLocation":"6046:1:28","nodeType":"VariableDeclaration","scope":5677,"src":"6038:9:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5658,"name":"uint256","nodeType":"ElementaryTypeName","src":"6038:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6026:22:28"},"returnParameters":{"id":5663,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5662,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5677,"src":"6072:7:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5661,"name":"uint256","nodeType":"ElementaryTypeName","src":"6072:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6071:9:28"},"scope":6948,"src":"6010:156:28","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5717,"nodeType":"Block","src":"6466:647:28","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5689,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5687,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5682,"src":"6481:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":5688,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6486:1:28","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6481:6:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5698,"nodeType":"IfStatement","src":"6477:153:28","trueBody":{"id":5697,"nodeType":"Block","src":"6489:141:28","statements":[{"expression":{"arguments":[{"expression":{"id":5693,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3355,"src":"6595:5:28","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$3355_$","typeString":"type(library Panic)"}},"id":5694,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6601:16:28","memberName":"DIVISION_BY_ZERO","nodeType":"MemberAccess","referencedDeclaration":3322,"src":"6595:22:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":5690,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3355,"src":"6583:5:28","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$3355_$","typeString":"type(library Panic)"}},"id":5692,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6589:5:28","memberName":"panic","nodeType":"MemberAccess","referencedDeclaration":3354,"src":"6583:11:28","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":5695,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6583:35:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5696,"nodeType":"ExpressionStatement","src":"6583:35:28"}]}},{"id":5716,"nodeType":"UncheckedBlock","src":"7020:86:28","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5714,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5703,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5701,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5680,"src":"7068:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":5702,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7072:1:28","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"7068:5:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":5699,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8713,"src":"7052:8:28","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$8713_$","typeString":"type(library SafeCast)"}},"id":5700,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7061:6:28","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":8712,"src":"7052:15:28","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":5704,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7052:22:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5712,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5710,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5707,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5705,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5680,"src":"7079:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":5706,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7083:1:28","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"7079:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5708,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7078:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":5709,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5682,"src":"7088:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7078:11:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":5711,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7092:1:28","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"7078:15:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5713,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7077:17:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7052:42:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5686,"id":5715,"nodeType":"Return","src":"7045:49:28"}]}]},"documentation":{"id":5678,"nodeType":"StructuredDocumentation","src":"6174:215:28","text":" @dev Returns the ceiling of the division of two numbers.\n This differs from standard division with `/` in that it rounds towards infinity instead\n of rounding towards zero."},"id":5718,"implemented":true,"kind":"function","modifiers":[],"name":"ceilDiv","nameLocation":"6404:7:28","nodeType":"FunctionDefinition","parameters":{"id":5683,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5680,"mutability":"mutable","name":"a","nameLocation":"6420:1:28","nodeType":"VariableDeclaration","scope":5718,"src":"6412:9:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5679,"name":"uint256","nodeType":"ElementaryTypeName","src":"6412:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5682,"mutability":"mutable","name":"b","nameLocation":"6431:1:28","nodeType":"VariableDeclaration","scope":5718,"src":"6423:9:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5681,"name":"uint256","nodeType":"ElementaryTypeName","src":"6423:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6411:22:28"},"returnParameters":{"id":5686,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5685,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5718,"src":"6457:7:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5684,"name":"uint256","nodeType":"ElementaryTypeName","src":"6457:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6456:9:28"},"scope":6948,"src":"6395:718:28","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5853,"nodeType":"Block","src":"7543:3656:28","statements":[{"id":5852,"nodeType":"UncheckedBlock","src":"7554:3638:28","statements":[{"assignments":[5731,5733],"declarations":[{"constant":false,"id":5731,"mutability":"mutable","name":"high","nameLocation":"7588:4:28","nodeType":"VariableDeclaration","scope":5852,"src":"7580:12:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5730,"name":"uint256","nodeType":"ElementaryTypeName","src":"7580:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5733,"mutability":"mutable","name":"low","nameLocation":"7602:3:28","nodeType":"VariableDeclaration","scope":5852,"src":"7594:11:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5732,"name":"uint256","nodeType":"ElementaryTypeName","src":"7594:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5738,"initialValue":{"arguments":[{"id":5735,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5721,"src":"7616:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5736,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5723,"src":"7619:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5734,"name":"mul512","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5367,"src":"7609:6:28","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256,uint256)"}},"id":5737,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7609:12:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"7579:42:28"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5741,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5739,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5731,"src":"7706:4:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":5740,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7714:1:28","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"7706:9:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5747,"nodeType":"IfStatement","src":"7702:370:28","trueBody":{"id":5746,"nodeType":"Block","src":"7717:355:28","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5744,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5742,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5733,"src":"8039:3:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":5743,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5725,"src":"8045:11:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8039:17:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5729,"id":5745,"nodeType":"Return","src":"8032:24:28"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5750,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5748,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5725,"src":"8185:11:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"id":5749,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5731,"src":"8200:4:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8185:19:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5766,"nodeType":"IfStatement","src":"8181:144:28","trueBody":{"id":5765,"nodeType":"Block","src":"8206:119:28","statements":[{"expression":{"arguments":[{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5757,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5755,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5725,"src":"8245:11:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":5756,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8260:1:28","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8245:16:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"expression":{"id":5758,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3355,"src":"8263:5:28","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$3355_$","typeString":"type(library Panic)"}},"id":5759,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"8269:16:28","memberName":"DIVISION_BY_ZERO","nodeType":"MemberAccess","referencedDeclaration":3322,"src":"8263:22:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":5760,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3355,"src":"8287:5:28","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$3355_$","typeString":"type(library Panic)"}},"id":5761,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"8293:14:28","memberName":"UNDER_OVERFLOW","nodeType":"MemberAccess","referencedDeclaration":3318,"src":"8287:20:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5754,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5616,"src":"8237:7:28","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (bool,uint256,uint256) pure returns (uint256)"}},"id":5762,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8237:71:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":5751,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3355,"src":"8225:5:28","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$3355_$","typeString":"type(library Panic)"}},"id":5753,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8231:5:28","memberName":"panic","nodeType":"MemberAccess","referencedDeclaration":3354,"src":"8225:11:28","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":5763,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8225:84:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5764,"nodeType":"ExpressionStatement","src":"8225:84:28"}]}},{"assignments":[5768],"declarations":[{"constant":false,"id":5768,"mutability":"mutable","name":"remainder","nameLocation":"8592:9:28","nodeType":"VariableDeclaration","scope":5852,"src":"8584:17:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5767,"name":"uint256","nodeType":"ElementaryTypeName","src":"8584:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5769,"nodeType":"VariableDeclarationStatement","src":"8584:17:28"},{"AST":{"nativeSrc":"8641:290:28","nodeType":"YulBlock","src":"8641:290:28","statements":[{"nativeSrc":"8712:38:28","nodeType":"YulAssignment","src":"8712:38:28","value":{"arguments":[{"name":"x","nativeSrc":"8732:1:28","nodeType":"YulIdentifier","src":"8732:1:28"},{"name":"y","nativeSrc":"8735:1:28","nodeType":"YulIdentifier","src":"8735:1:28"},{"name":"denominator","nativeSrc":"8738:11:28","nodeType":"YulIdentifier","src":"8738:11:28"}],"functionName":{"name":"mulmod","nativeSrc":"8725:6:28","nodeType":"YulIdentifier","src":"8725:6:28"},"nativeSrc":"8725:25:28","nodeType":"YulFunctionCall","src":"8725:25:28"},"variableNames":[{"name":"remainder","nativeSrc":"8712:9:28","nodeType":"YulIdentifier","src":"8712:9:28"}]},{"nativeSrc":"8835:37:28","nodeType":"YulAssignment","src":"8835:37:28","value":{"arguments":[{"name":"high","nativeSrc":"8847:4:28","nodeType":"YulIdentifier","src":"8847:4:28"},{"arguments":[{"name":"remainder","nativeSrc":"8856:9:28","nodeType":"YulIdentifier","src":"8856:9:28"},{"name":"low","nativeSrc":"8867:3:28","nodeType":"YulIdentifier","src":"8867:3:28"}],"functionName":{"name":"gt","nativeSrc":"8853:2:28","nodeType":"YulIdentifier","src":"8853:2:28"},"nativeSrc":"8853:18:28","nodeType":"YulFunctionCall","src":"8853:18:28"}],"functionName":{"name":"sub","nativeSrc":"8843:3:28","nodeType":"YulIdentifier","src":"8843:3:28"},"nativeSrc":"8843:29:28","nodeType":"YulFunctionCall","src":"8843:29:28"},"variableNames":[{"name":"high","nativeSrc":"8835:4:28","nodeType":"YulIdentifier","src":"8835:4:28"}]},{"nativeSrc":"8890:26:28","nodeType":"YulAssignment","src":"8890:26:28","value":{"arguments":[{"name":"low","nativeSrc":"8901:3:28","nodeType":"YulIdentifier","src":"8901:3:28"},{"name":"remainder","nativeSrc":"8906:9:28","nodeType":"YulIdentifier","src":"8906:9:28"}],"functionName":{"name":"sub","nativeSrc":"8897:3:28","nodeType":"YulIdentifier","src":"8897:3:28"},"nativeSrc":"8897:19:28","nodeType":"YulFunctionCall","src":"8897:19:28"},"variableNames":[{"name":"low","nativeSrc":"8890:3:28","nodeType":"YulIdentifier","src":"8890:3:28"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":5725,"isOffset":false,"isSlot":false,"src":"8738:11:28","valueSize":1},{"declaration":5731,"isOffset":false,"isSlot":false,"src":"8835:4:28","valueSize":1},{"declaration":5731,"isOffset":false,"isSlot":false,"src":"8847:4:28","valueSize":1},{"declaration":5733,"isOffset":false,"isSlot":false,"src":"8867:3:28","valueSize":1},{"declaration":5733,"isOffset":false,"isSlot":false,"src":"8890:3:28","valueSize":1},{"declaration":5733,"isOffset":false,"isSlot":false,"src":"8901:3:28","valueSize":1},{"declaration":5768,"isOffset":false,"isSlot":false,"src":"8712:9:28","valueSize":1},{"declaration":5768,"isOffset":false,"isSlot":false,"src":"8856:9:28","valueSize":1},{"declaration":5768,"isOffset":false,"isSlot":false,"src":"8906:9:28","valueSize":1},{"declaration":5721,"isOffset":false,"isSlot":false,"src":"8732:1:28","valueSize":1},{"declaration":5723,"isOffset":false,"isSlot":false,"src":"8735:1:28","valueSize":1}],"flags":["memory-safe"],"id":5770,"nodeType":"InlineAssembly","src":"8616:315:28"},{"assignments":[5772],"declarations":[{"constant":false,"id":5772,"mutability":"mutable","name":"twos","nameLocation":"9148:4:28","nodeType":"VariableDeclaration","scope":5852,"src":"9140:12:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5771,"name":"uint256","nodeType":"ElementaryTypeName","src":"9140:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5779,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5778,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5773,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5725,"src":"9155:11:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5776,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"30","id":5774,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9170:1:28","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":5775,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5725,"src":"9174:11:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9170:15:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5777,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"9169:17:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9155:31:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"9140:46:28"},{"AST":{"nativeSrc":"9226:368:28","nodeType":"YulBlock","src":"9226:368:28","statements":[{"nativeSrc":"9293:37:28","nodeType":"YulAssignment","src":"9293:37:28","value":{"arguments":[{"name":"denominator","nativeSrc":"9312:11:28","nodeType":"YulIdentifier","src":"9312:11:28"},{"name":"twos","nativeSrc":"9325:4:28","nodeType":"YulIdentifier","src":"9325:4:28"}],"functionName":{"name":"div","nativeSrc":"9308:3:28","nodeType":"YulIdentifier","src":"9308:3:28"},"nativeSrc":"9308:22:28","nodeType":"YulFunctionCall","src":"9308:22:28"},"variableNames":[{"name":"denominator","nativeSrc":"9293:11:28","nodeType":"YulIdentifier","src":"9293:11:28"}]},{"nativeSrc":"9397:21:28","nodeType":"YulAssignment","src":"9397:21:28","value":{"arguments":[{"name":"low","nativeSrc":"9408:3:28","nodeType":"YulIdentifier","src":"9408:3:28"},{"name":"twos","nativeSrc":"9413:4:28","nodeType":"YulIdentifier","src":"9413:4:28"}],"functionName":{"name":"div","nativeSrc":"9404:3:28","nodeType":"YulIdentifier","src":"9404:3:28"},"nativeSrc":"9404:14:28","nodeType":"YulFunctionCall","src":"9404:14:28"},"variableNames":[{"name":"low","nativeSrc":"9397:3:28","nodeType":"YulIdentifier","src":"9397:3:28"}]},{"nativeSrc":"9540:39:28","nodeType":"YulAssignment","src":"9540:39:28","value":{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"9560:1:28","nodeType":"YulLiteral","src":"9560:1:28","type":"","value":"0"},{"name":"twos","nativeSrc":"9563:4:28","nodeType":"YulIdentifier","src":"9563:4:28"}],"functionName":{"name":"sub","nativeSrc":"9556:3:28","nodeType":"YulIdentifier","src":"9556:3:28"},"nativeSrc":"9556:12:28","nodeType":"YulFunctionCall","src":"9556:12:28"},{"name":"twos","nativeSrc":"9570:4:28","nodeType":"YulIdentifier","src":"9570:4:28"}],"functionName":{"name":"div","nativeSrc":"9552:3:28","nodeType":"YulIdentifier","src":"9552:3:28"},"nativeSrc":"9552:23:28","nodeType":"YulFunctionCall","src":"9552:23:28"},{"kind":"number","nativeSrc":"9577:1:28","nodeType":"YulLiteral","src":"9577:1:28","type":"","value":"1"}],"functionName":{"name":"add","nativeSrc":"9548:3:28","nodeType":"YulIdentifier","src":"9548:3:28"},"nativeSrc":"9548:31:28","nodeType":"YulFunctionCall","src":"9548:31:28"},"variableNames":[{"name":"twos","nativeSrc":"9540:4:28","nodeType":"YulIdentifier","src":"9540:4:28"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":5725,"isOffset":false,"isSlot":false,"src":"9293:11:28","valueSize":1},{"declaration":5725,"isOffset":false,"isSlot":false,"src":"9312:11:28","valueSize":1},{"declaration":5733,"isOffset":false,"isSlot":false,"src":"9397:3:28","valueSize":1},{"declaration":5733,"isOffset":false,"isSlot":false,"src":"9408:3:28","valueSize":1},{"declaration":5772,"isOffset":false,"isSlot":false,"src":"9325:4:28","valueSize":1},{"declaration":5772,"isOffset":false,"isSlot":false,"src":"9413:4:28","valueSize":1},{"declaration":5772,"isOffset":false,"isSlot":false,"src":"9540:4:28","valueSize":1},{"declaration":5772,"isOffset":false,"isSlot":false,"src":"9563:4:28","valueSize":1},{"declaration":5772,"isOffset":false,"isSlot":false,"src":"9570:4:28","valueSize":1}],"flags":["memory-safe"],"id":5780,"nodeType":"InlineAssembly","src":"9201:393:28"},{"expression":{"id":5785,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5781,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5733,"src":"9660:3:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5784,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5782,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5731,"src":"9667:4:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":5783,"name":"twos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5772,"src":"9674:4:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9667:11:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9660:18:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5786,"nodeType":"ExpressionStatement","src":"9660:18:28"},{"assignments":[5788],"declarations":[{"constant":false,"id":5788,"mutability":"mutable","name":"inverse","nameLocation":"10026:7:28","nodeType":"VariableDeclaration","scope":5852,"src":"10018:15:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5787,"name":"uint256","nodeType":"ElementaryTypeName","src":"10018:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5795,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5794,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5791,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"33","id":5789,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10037:1:28","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":5790,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5725,"src":"10041:11:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10037:15:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5792,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"10036:17:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"hexValue":"32","id":5793,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10056:1:28","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"10036:21:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"10018:39:28"},{"expression":{"id":5802,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5796,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5788,"src":"10278:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5801,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":5797,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10289:1:28","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5800,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5798,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5725,"src":"10293:11:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":5799,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5788,"src":"10307:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10293:21:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10289:25:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10278:36:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5803,"nodeType":"ExpressionStatement","src":"10278:36:28"},{"expression":{"id":5810,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5804,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5788,"src":"10349:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5809,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":5805,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10360:1:28","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5808,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5806,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5725,"src":"10364:11:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":5807,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5788,"src":"10378:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10364:21:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10360:25:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10349:36:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5811,"nodeType":"ExpressionStatement","src":"10349:36:28"},{"expression":{"id":5818,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5812,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5788,"src":"10422:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5817,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":5813,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10433:1:28","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5816,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5814,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5725,"src":"10437:11:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":5815,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5788,"src":"10451:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10437:21:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10433:25:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10422:36:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5819,"nodeType":"ExpressionStatement","src":"10422:36:28"},{"expression":{"id":5826,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5820,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5788,"src":"10494:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5825,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":5821,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10505:1:28","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5824,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5822,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5725,"src":"10509:11:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":5823,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5788,"src":"10523:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10509:21:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10505:25:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10494:36:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5827,"nodeType":"ExpressionStatement","src":"10494:36:28"},{"expression":{"id":5834,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5828,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5788,"src":"10568:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5833,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":5829,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10579:1:28","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5832,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5830,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5725,"src":"10583:11:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":5831,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5788,"src":"10597:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10583:21:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10579:25:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10568:36:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5835,"nodeType":"ExpressionStatement","src":"10568:36:28"},{"expression":{"id":5842,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5836,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5788,"src":"10643:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5841,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":5837,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10654:1:28","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5840,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5838,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5725,"src":"10658:11:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":5839,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5788,"src":"10672:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10658:21:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10654:25:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10643:36:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5843,"nodeType":"ExpressionStatement","src":"10643:36:28"},{"expression":{"id":5848,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5844,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5728,"src":"11130:6:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5847,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5845,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5733,"src":"11139:3:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":5846,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5788,"src":"11145:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11139:13:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11130:22:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5849,"nodeType":"ExpressionStatement","src":"11130:22:28"},{"expression":{"id":5850,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5728,"src":"11174:6:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5729,"id":5851,"nodeType":"Return","src":"11167:13:28"}]}]},"documentation":{"id":5719,"nodeType":"StructuredDocumentation","src":"7121:318:28","text":" @dev Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or\n denominator == 0.\n Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv) with further edits by\n Uniswap Labs also under MIT license."},"id":5854,"implemented":true,"kind":"function","modifiers":[],"name":"mulDiv","nameLocation":"7454:6:28","nodeType":"FunctionDefinition","parameters":{"id":5726,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5721,"mutability":"mutable","name":"x","nameLocation":"7469:1:28","nodeType":"VariableDeclaration","scope":5854,"src":"7461:9:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5720,"name":"uint256","nodeType":"ElementaryTypeName","src":"7461:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5723,"mutability":"mutable","name":"y","nameLocation":"7480:1:28","nodeType":"VariableDeclaration","scope":5854,"src":"7472:9:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5722,"name":"uint256","nodeType":"ElementaryTypeName","src":"7472:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5725,"mutability":"mutable","name":"denominator","nameLocation":"7491:11:28","nodeType":"VariableDeclaration","scope":5854,"src":"7483:19:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5724,"name":"uint256","nodeType":"ElementaryTypeName","src":"7483:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7460:43:28"},"returnParameters":{"id":5729,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5728,"mutability":"mutable","name":"result","nameLocation":"7535:6:28","nodeType":"VariableDeclaration","scope":5854,"src":"7527:14:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5727,"name":"uint256","nodeType":"ElementaryTypeName","src":"7527:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7526:16:28"},"scope":6948,"src":"7445:3754:28","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5890,"nodeType":"Block","src":"11443:130:28","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5888,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":5870,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5857,"src":"11468:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5871,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5859,"src":"11471:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5872,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5861,"src":"11474:11:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5869,"name":"mulDiv","nodeType":"Identifier","overloadedDeclarations":[5854,5891],"referencedDeclaration":5854,"src":"11461:6:28","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":5873,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11461:25:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":5886,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":5877,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5864,"src":"11522:8:28","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$5339","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$5339","typeString":"enum Math.Rounding"}],"id":5876,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6947,"src":"11505:16:28","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$5339_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":5878,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11505:26:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5885,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":5880,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5857,"src":"11542:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5881,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5859,"src":"11545:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5882,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5861,"src":"11548:11:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5879,"name":"mulmod","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-16,"src":"11535:6:28","typeDescriptions":{"typeIdentifier":"t_function_mulmod_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":5883,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11535:25:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":5884,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11563:1:28","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11535:29:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"11505:59:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":5874,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8713,"src":"11489:8:28","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$8713_$","typeString":"type(library SafeCast)"}},"id":5875,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11498:6:28","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":8712,"src":"11489:15:28","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":5887,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11489:76:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11461:104:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5868,"id":5889,"nodeType":"Return","src":"11454:111:28"}]},"documentation":{"id":5855,"nodeType":"StructuredDocumentation","src":"11207:120:28","text":" @dev Calculates x * y / denominator with full precision, following the selected rounding direction."},"id":5891,"implemented":true,"kind":"function","modifiers":[],"name":"mulDiv","nameLocation":"11342:6:28","nodeType":"FunctionDefinition","parameters":{"id":5865,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5857,"mutability":"mutable","name":"x","nameLocation":"11357:1:28","nodeType":"VariableDeclaration","scope":5891,"src":"11349:9:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5856,"name":"uint256","nodeType":"ElementaryTypeName","src":"11349:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5859,"mutability":"mutable","name":"y","nameLocation":"11368:1:28","nodeType":"VariableDeclaration","scope":5891,"src":"11360:9:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5858,"name":"uint256","nodeType":"ElementaryTypeName","src":"11360:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5861,"mutability":"mutable","name":"denominator","nameLocation":"11379:11:28","nodeType":"VariableDeclaration","scope":5891,"src":"11371:19:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5860,"name":"uint256","nodeType":"ElementaryTypeName","src":"11371:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5864,"mutability":"mutable","name":"rounding","nameLocation":"11401:8:28","nodeType":"VariableDeclaration","scope":5891,"src":"11392:17:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$5339","typeString":"enum Math.Rounding"},"typeName":{"id":5863,"nodeType":"UserDefinedTypeName","pathNode":{"id":5862,"name":"Rounding","nameLocations":["11392:8:28"],"nodeType":"IdentifierPath","referencedDeclaration":5339,"src":"11392:8:28"},"referencedDeclaration":5339,"src":"11392:8:28","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$5339","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"11348:62:28"},"returnParameters":{"id":5868,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5867,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5891,"src":"11434:7:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5866,"name":"uint256","nodeType":"ElementaryTypeName","src":"11434:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11433:9:28"},"scope":6948,"src":"11333:240:28","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5940,"nodeType":"Block","src":"11786:253:28","statements":[{"id":5939,"nodeType":"UncheckedBlock","src":"11797:235:28","statements":[{"assignments":[5904,5906],"declarations":[{"constant":false,"id":5904,"mutability":"mutable","name":"high","nameLocation":"11831:4:28","nodeType":"VariableDeclaration","scope":5939,"src":"11823:12:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5903,"name":"uint256","nodeType":"ElementaryTypeName","src":"11823:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5906,"mutability":"mutable","name":"low","nameLocation":"11845:3:28","nodeType":"VariableDeclaration","scope":5939,"src":"11837:11:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5905,"name":"uint256","nodeType":"ElementaryTypeName","src":"11837:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5911,"initialValue":{"arguments":[{"id":5908,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5894,"src":"11859:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5909,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5896,"src":"11862:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5907,"name":"mul512","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5367,"src":"11852:6:28","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256,uint256)"}},"id":5910,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11852:12:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"11822:42:28"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5916,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5912,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5904,"src":"11883:4:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5915,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":5913,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11891:1:28","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"id":5914,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5898,"src":"11896:1:28","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"11891:6:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11883:14:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5925,"nodeType":"IfStatement","src":"11879:88:28","trueBody":{"id":5924,"nodeType":"Block","src":"11899:68:28","statements":[{"expression":{"arguments":[{"expression":{"id":5920,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3355,"src":"11930:5:28","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$3355_$","typeString":"type(library Panic)"}},"id":5921,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"11936:14:28","memberName":"UNDER_OVERFLOW","nodeType":"MemberAccess","referencedDeclaration":3318,"src":"11930:20:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":5917,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3355,"src":"11918:5:28","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$3355_$","typeString":"type(library Panic)"}},"id":5919,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11924:5:28","memberName":"panic","nodeType":"MemberAccess","referencedDeclaration":3354,"src":"11918:11:28","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":5922,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11918:33:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5923,"nodeType":"ExpressionStatement","src":"11918:33:28"}]}},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5937,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5931,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5926,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5904,"src":"11989:4:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint16","typeString":"uint16"},"id":5929,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"323536","id":5927,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11998:3:28","typeDescriptions":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"},"value":"256"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":5928,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5898,"src":"12004:1:28","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"11998:7:28","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}}],"id":5930,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"11997:9:28","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"src":"11989:17:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5932,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"11988:19:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5935,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5933,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5906,"src":"12011:3:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":5934,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5898,"src":"12018:1:28","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"12011:8:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5936,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"12010:10:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11988:32:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5902,"id":5938,"nodeType":"Return","src":"11981:39:28"}]}]},"documentation":{"id":5892,"nodeType":"StructuredDocumentation","src":"11581:113:28","text":" @dev Calculates floor(x * y >> n) with full precision. Throws if result overflows a uint256."},"id":5941,"implemented":true,"kind":"function","modifiers":[],"name":"mulShr","nameLocation":"11709:6:28","nodeType":"FunctionDefinition","parameters":{"id":5899,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5894,"mutability":"mutable","name":"x","nameLocation":"11724:1:28","nodeType":"VariableDeclaration","scope":5941,"src":"11716:9:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5893,"name":"uint256","nodeType":"ElementaryTypeName","src":"11716:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5896,"mutability":"mutable","name":"y","nameLocation":"11735:1:28","nodeType":"VariableDeclaration","scope":5941,"src":"11727:9:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5895,"name":"uint256","nodeType":"ElementaryTypeName","src":"11727:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5898,"mutability":"mutable","name":"n","nameLocation":"11744:1:28","nodeType":"VariableDeclaration","scope":5941,"src":"11738:7:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":5897,"name":"uint8","nodeType":"ElementaryTypeName","src":"11738:5:28","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"11715:31:28"},"returnParameters":{"id":5902,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5901,"mutability":"mutable","name":"result","nameLocation":"11778:6:28","nodeType":"VariableDeclaration","scope":5941,"src":"11770:14:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5900,"name":"uint256","nodeType":"ElementaryTypeName","src":"11770:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11769:16:28"},"scope":6948,"src":"11700:339:28","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5979,"nodeType":"Block","src":"12262:115:28","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5977,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":5957,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5944,"src":"12287:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5958,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5946,"src":"12290:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5959,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5948,"src":"12293:1:28","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint8","typeString":"uint8"}],"id":5956,"name":"mulShr","nodeType":"Identifier","overloadedDeclarations":[5941,5980],"referencedDeclaration":5941,"src":"12280:6:28","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint8_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint8) pure returns (uint256)"}},"id":5960,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12280:15:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":5975,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":5964,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5951,"src":"12331:8:28","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$5339","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$5339","typeString":"enum Math.Rounding"}],"id":5963,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6947,"src":"12314:16:28","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$5339_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":5965,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12314:26:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5974,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":5967,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5944,"src":"12351:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5968,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5946,"src":"12354:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5971,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":5969,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12357:1:28","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"id":5970,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5948,"src":"12362:1:28","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"12357:6:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5966,"name":"mulmod","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-16,"src":"12344:6:28","typeDescriptions":{"typeIdentifier":"t_function_mulmod_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":5972,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12344:20:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":5973,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12367:1:28","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"12344:24:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"12314:54:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":5961,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8713,"src":"12298:8:28","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$8713_$","typeString":"type(library SafeCast)"}},"id":5962,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12307:6:28","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":8712,"src":"12298:15:28","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":5976,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12298:71:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12280:89:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5955,"id":5978,"nodeType":"Return","src":"12273:96:28"}]},"documentation":{"id":5942,"nodeType":"StructuredDocumentation","src":"12047:111:28","text":" @dev Calculates x * y >> n with full precision, following the selected rounding direction."},"id":5980,"implemented":true,"kind":"function","modifiers":[],"name":"mulShr","nameLocation":"12173:6:28","nodeType":"FunctionDefinition","parameters":{"id":5952,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5944,"mutability":"mutable","name":"x","nameLocation":"12188:1:28","nodeType":"VariableDeclaration","scope":5980,"src":"12180:9:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5943,"name":"uint256","nodeType":"ElementaryTypeName","src":"12180:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5946,"mutability":"mutable","name":"y","nameLocation":"12199:1:28","nodeType":"VariableDeclaration","scope":5980,"src":"12191:9:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5945,"name":"uint256","nodeType":"ElementaryTypeName","src":"12191:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5948,"mutability":"mutable","name":"n","nameLocation":"12208:1:28","nodeType":"VariableDeclaration","scope":5980,"src":"12202:7:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":5947,"name":"uint8","nodeType":"ElementaryTypeName","src":"12202:5:28","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":5951,"mutability":"mutable","name":"rounding","nameLocation":"12220:8:28","nodeType":"VariableDeclaration","scope":5980,"src":"12211:17:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$5339","typeString":"enum Math.Rounding"},"typeName":{"id":5950,"nodeType":"UserDefinedTypeName","pathNode":{"id":5949,"name":"Rounding","nameLocations":["12211:8:28"],"nodeType":"IdentifierPath","referencedDeclaration":5339,"src":"12211:8:28"},"referencedDeclaration":5339,"src":"12211:8:28","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$5339","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"12179:50:28"},"returnParameters":{"id":5955,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5954,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5980,"src":"12253:7:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5953,"name":"uint256","nodeType":"ElementaryTypeName","src":"12253:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12252:9:28"},"scope":6948,"src":"12164:213:28","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6076,"nodeType":"Block","src":"13024:1895:28","statements":[{"id":6075,"nodeType":"UncheckedBlock","src":"13035:1877:28","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5992,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5990,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5985,"src":"13064:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":5991,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13069:1:28","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"13064:6:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5995,"nodeType":"IfStatement","src":"13060:20:28","trueBody":{"expression":{"hexValue":"30","id":5993,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13079:1:28","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":5989,"id":5994,"nodeType":"Return","src":"13072:8:28"}},{"assignments":[5997],"declarations":[{"constant":false,"id":5997,"mutability":"mutable","name":"remainder","nameLocation":"13569:9:28","nodeType":"VariableDeclaration","scope":6075,"src":"13561:17:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5996,"name":"uint256","nodeType":"ElementaryTypeName","src":"13561:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6001,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6000,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5998,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5983,"src":"13581:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"%","rightExpression":{"id":5999,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5985,"src":"13585:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13581:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"13561:25:28"},{"assignments":[6003],"declarations":[{"constant":false,"id":6003,"mutability":"mutable","name":"gcd","nameLocation":"13609:3:28","nodeType":"VariableDeclaration","scope":6075,"src":"13601:11:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6002,"name":"uint256","nodeType":"ElementaryTypeName","src":"13601:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6005,"initialValue":{"id":6004,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5985,"src":"13615:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"13601:15:28"},{"assignments":[6007],"declarations":[{"constant":false,"id":6007,"mutability":"mutable","name":"x","nameLocation":"13764:1:28","nodeType":"VariableDeclaration","scope":6075,"src":"13757:8:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6006,"name":"int256","nodeType":"ElementaryTypeName","src":"13757:6:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"id":6009,"initialValue":{"hexValue":"30","id":6008,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13768:1:28","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"13757:12:28"},{"assignments":[6011],"declarations":[{"constant":false,"id":6011,"mutability":"mutable","name":"y","nameLocation":"13791:1:28","nodeType":"VariableDeclaration","scope":6075,"src":"13784:8:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6010,"name":"int256","nodeType":"ElementaryTypeName","src":"13784:6:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"id":6013,"initialValue":{"hexValue":"31","id":6012,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13795:1:28","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"VariableDeclarationStatement","src":"13784:12:28"},{"body":{"id":6050,"nodeType":"Block","src":"13836:902:28","statements":[{"assignments":[6018],"declarations":[{"constant":false,"id":6018,"mutability":"mutable","name":"quotient","nameLocation":"13863:8:28","nodeType":"VariableDeclaration","scope":6050,"src":"13855:16:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6017,"name":"uint256","nodeType":"ElementaryTypeName","src":"13855:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6022,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6021,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6019,"name":"gcd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6003,"src":"13874:3:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":6020,"name":"remainder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5997,"src":"13880:9:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13874:15:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"13855:34:28"},{"expression":{"id":6033,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"components":[{"id":6023,"name":"gcd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6003,"src":"13911:3:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":6024,"name":"remainder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5997,"src":"13916:9:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":6025,"isConstant":false,"isInlineArray":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"TupleExpression","src":"13910:16:28","typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256)"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"components":[{"id":6026,"name":"remainder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5997,"src":"14018:9:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6031,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6027,"name":"gcd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6003,"src":"14267:3:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6030,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6028,"name":"remainder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5997,"src":"14273:9:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":6029,"name":"quotient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6018,"src":"14285:8:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"14273:20:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"14267:26:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":6032,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"13929:383:28","typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256)"}},"src":"13910:402:28","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6034,"nodeType":"ExpressionStatement","src":"13910:402:28"},{"expression":{"id":6048,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"components":[{"id":6035,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6007,"src":"14334:1:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},{"id":6036,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6011,"src":"14337:1:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":6037,"isConstant":false,"isInlineArray":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"TupleExpression","src":"14333:6:28","typeDescriptions":{"typeIdentifier":"t_tuple$_t_int256_$_t_int256_$","typeString":"tuple(int256,int256)"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"components":[{"id":6038,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6011,"src":"14421:1:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6046,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6039,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6007,"src":"14679:1:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6045,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6040,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6011,"src":"14683:1:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"id":6043,"name":"quotient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6018,"src":"14694:8:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6042,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14687:6:28","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":6041,"name":"int256","nodeType":"ElementaryTypeName","src":"14687:6:28","typeDescriptions":{}}},"id":6044,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14687:16:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"14683:20:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"14679:24:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":6047,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"14342:380:28","typeDescriptions":{"typeIdentifier":"t_tuple$_t_int256_$_t_int256_$","typeString":"tuple(int256,int256)"}},"src":"14333:389:28","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6049,"nodeType":"ExpressionStatement","src":"14333:389:28"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6016,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6014,"name":"remainder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5997,"src":"13820:9:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":6015,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13833:1:28","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"13820:14:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6051,"nodeType":"WhileStatement","src":"13813:925:28"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6054,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6052,"name":"gcd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6003,"src":"14758:3:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"31","id":6053,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14765:1:28","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"14758:8:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6057,"nodeType":"IfStatement","src":"14754:22:28","trueBody":{"expression":{"hexValue":"30","id":6055,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14775:1:28","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":5989,"id":6056,"nodeType":"Return","src":"14768:8:28"}},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6061,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6059,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6007,"src":"14828:1:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"30","id":6060,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14832:1:28","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"14828:5:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6068,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6062,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5985,"src":"14835:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"arguments":[{"id":6066,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"-","prefix":true,"src":"14847:2:28","subExpression":{"id":6065,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6007,"src":"14848:1:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6064,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14839:7:28","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":6063,"name":"uint256","nodeType":"ElementaryTypeName","src":"14839:7:28","typeDescriptions":{}}},"id":6067,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14839:11:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"14835:15:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"id":6071,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6007,"src":"14860:1:28","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6070,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14852:7:28","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":6069,"name":"uint256","nodeType":"ElementaryTypeName","src":"14852:7:28","typeDescriptions":{}}},"id":6072,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14852:10:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6058,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5616,"src":"14820:7:28","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (bool,uint256,uint256) pure returns (uint256)"}},"id":6073,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14820:43:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5989,"id":6074,"nodeType":"Return","src":"14813:50:28"}]}]},"documentation":{"id":5981,"nodeType":"StructuredDocumentation","src":"12385:563:28","text":" @dev Calculate the modular multiplicative inverse of a number in Z/nZ.\n If n is a prime, then Z/nZ is a field. In that case all elements are inversible, except 0.\n If n is not a prime, then Z/nZ is not a field, and some elements might not be inversible.\n If the input value is not inversible, 0 is returned.\n NOTE: If you know for sure that n is (big) a prime, it may be cheaper to use Fermat's little theorem and get the\n inverse using `Math.modExp(a, n - 2, n)`. See {invModPrime}."},"id":6077,"implemented":true,"kind":"function","modifiers":[],"name":"invMod","nameLocation":"12963:6:28","nodeType":"FunctionDefinition","parameters":{"id":5986,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5983,"mutability":"mutable","name":"a","nameLocation":"12978:1:28","nodeType":"VariableDeclaration","scope":6077,"src":"12970:9:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5982,"name":"uint256","nodeType":"ElementaryTypeName","src":"12970:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5985,"mutability":"mutable","name":"n","nameLocation":"12989:1:28","nodeType":"VariableDeclaration","scope":6077,"src":"12981:9:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5984,"name":"uint256","nodeType":"ElementaryTypeName","src":"12981:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12969:22:28"},"returnParameters":{"id":5989,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5988,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6077,"src":"13015:7:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5987,"name":"uint256","nodeType":"ElementaryTypeName","src":"13015:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13014:9:28"},"scope":6948,"src":"12954:1965:28","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6097,"nodeType":"Block","src":"15530:86:28","statements":[{"id":6096,"nodeType":"UncheckedBlock","src":"15541:68:28","statements":[{"expression":{"arguments":[{"id":6089,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6080,"src":"15585:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6092,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6090,"name":"p","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6082,"src":"15588:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"32","id":6091,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15592:1:28","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"15588:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":6093,"name":"p","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6082,"src":"15595:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":6087,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6948,"src":"15573:4:28","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$6948_$","typeString":"type(library Math)"}},"id":6088,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"15578:6:28","memberName":"modExp","nodeType":"MemberAccess","referencedDeclaration":6134,"src":"15573:11:28","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) view returns (uint256)"}},"id":6094,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15573:24:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":6086,"id":6095,"nodeType":"Return","src":"15566:31:28"}]}]},"documentation":{"id":6078,"nodeType":"StructuredDocumentation","src":"14927:522:28","text":" @dev Variant of {invMod}. More efficient, but only works if `p` is known to be a prime greater than `2`.\n From https://en.wikipedia.org/wiki/Fermat%27s_little_theorem[Fermat's little theorem], we know that if p is\n prime, then `a**(p-1) ≡ 1 mod p`. As a consequence, we have `a * a**(p-2) ≡ 1 mod p`, which means that\n `a**(p-2)` is the modular multiplicative inverse of a in Fp.\n NOTE: this function does NOT check that `p` is a prime greater than `2`."},"id":6098,"implemented":true,"kind":"function","modifiers":[],"name":"invModPrime","nameLocation":"15464:11:28","nodeType":"FunctionDefinition","parameters":{"id":6083,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6080,"mutability":"mutable","name":"a","nameLocation":"15484:1:28","nodeType":"VariableDeclaration","scope":6098,"src":"15476:9:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6079,"name":"uint256","nodeType":"ElementaryTypeName","src":"15476:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6082,"mutability":"mutable","name":"p","nameLocation":"15495:1:28","nodeType":"VariableDeclaration","scope":6098,"src":"15487:9:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6081,"name":"uint256","nodeType":"ElementaryTypeName","src":"15487:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15475:22:28"},"returnParameters":{"id":6086,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6085,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6098,"src":"15521:7:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6084,"name":"uint256","nodeType":"ElementaryTypeName","src":"15521:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15520:9:28"},"scope":6948,"src":"15455:161:28","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":6133,"nodeType":"Block","src":"16401:180:28","statements":[{"assignments":[6111,6113],"declarations":[{"constant":false,"id":6111,"mutability":"mutable","name":"success","nameLocation":"16418:7:28","nodeType":"VariableDeclaration","scope":6133,"src":"16413:12:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":6110,"name":"bool","nodeType":"ElementaryTypeName","src":"16413:4:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":6113,"mutability":"mutable","name":"result","nameLocation":"16435:6:28","nodeType":"VariableDeclaration","scope":6133,"src":"16427:14:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6112,"name":"uint256","nodeType":"ElementaryTypeName","src":"16427:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6119,"initialValue":{"arguments":[{"id":6115,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6101,"src":"16455:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":6116,"name":"e","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6103,"src":"16458:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":6117,"name":"m","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6105,"src":"16461:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6114,"name":"tryModExp","nodeType":"Identifier","overloadedDeclarations":[6158,6240],"referencedDeclaration":6158,"src":"16445:9:28","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (uint256,uint256,uint256) view returns (bool,uint256)"}},"id":6118,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16445:18:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"16412:51:28"},{"condition":{"id":6121,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"16478:8:28","subExpression":{"id":6120,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6111,"src":"16479:7:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6130,"nodeType":"IfStatement","src":"16474:76:28","trueBody":{"id":6129,"nodeType":"Block","src":"16488:62:28","statements":[{"expression":{"arguments":[{"expression":{"id":6125,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3355,"src":"16515:5:28","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$3355_$","typeString":"type(library Panic)"}},"id":6126,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"16521:16:28","memberName":"DIVISION_BY_ZERO","nodeType":"MemberAccess","referencedDeclaration":3322,"src":"16515:22:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":6122,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3355,"src":"16503:5:28","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$3355_$","typeString":"type(library Panic)"}},"id":6124,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"16509:5:28","memberName":"panic","nodeType":"MemberAccess","referencedDeclaration":3354,"src":"16503:11:28","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":6127,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16503:35:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6128,"nodeType":"ExpressionStatement","src":"16503:35:28"}]}},{"expression":{"id":6131,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6113,"src":"16567:6:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":6109,"id":6132,"nodeType":"Return","src":"16560:13:28"}]},"documentation":{"id":6099,"nodeType":"StructuredDocumentation","src":"15624:690:28","text":" @dev Returns the modular exponentiation of the specified base, exponent and modulus (b ** e % m)\n Requirements:\n - modulus can't be zero\n - underlying staticcall to precompile must succeed\n IMPORTANT: The result is only valid if the underlying call succeeds. When using this function, make\n sure the chain you're using it on supports the precompiled contract for modular exponentiation\n at address 0x05 as specified in https://eips.ethereum.org/EIPS/eip-198[EIP-198]. Otherwise,\n the underlying function will succeed given the lack of a revert, but the result may be incorrectly\n interpreted as 0."},"id":6134,"implemented":true,"kind":"function","modifiers":[],"name":"modExp","nameLocation":"16329:6:28","nodeType":"FunctionDefinition","parameters":{"id":6106,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6101,"mutability":"mutable","name":"b","nameLocation":"16344:1:28","nodeType":"VariableDeclaration","scope":6134,"src":"16336:9:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6100,"name":"uint256","nodeType":"ElementaryTypeName","src":"16336:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6103,"mutability":"mutable","name":"e","nameLocation":"16355:1:28","nodeType":"VariableDeclaration","scope":6134,"src":"16347:9:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6102,"name":"uint256","nodeType":"ElementaryTypeName","src":"16347:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6105,"mutability":"mutable","name":"m","nameLocation":"16366:1:28","nodeType":"VariableDeclaration","scope":6134,"src":"16358:9:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6104,"name":"uint256","nodeType":"ElementaryTypeName","src":"16358:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"16335:33:28"},"returnParameters":{"id":6109,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6108,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6134,"src":"16392:7:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6107,"name":"uint256","nodeType":"ElementaryTypeName","src":"16392:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"16391:9:28"},"scope":6948,"src":"16320:261:28","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":6157,"nodeType":"Block","src":"17447:1517:28","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6150,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6148,"name":"m","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6141,"src":"17462:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":6149,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17467:1:28","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"17462:6:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6155,"nodeType":"IfStatement","src":"17458:29:28","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":6151,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"17478:5:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":6152,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17485:1:28","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":6153,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"17477:10:28","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":6147,"id":6154,"nodeType":"Return","src":"17470:17:28"}},{"AST":{"nativeSrc":"17523:1434:28","nodeType":"YulBlock","src":"17523:1434:28","statements":[{"nativeSrc":"17538:22:28","nodeType":"YulVariableDeclaration","src":"17538:22:28","value":{"arguments":[{"kind":"number","nativeSrc":"17555:4:28","nodeType":"YulLiteral","src":"17555:4:28","type":"","value":"0x40"}],"functionName":{"name":"mload","nativeSrc":"17549:5:28","nodeType":"YulIdentifier","src":"17549:5:28"},"nativeSrc":"17549:11:28","nodeType":"YulFunctionCall","src":"17549:11:28"},"variables":[{"name":"ptr","nativeSrc":"17542:3:28","nodeType":"YulTypedName","src":"17542:3:28","type":""}]},{"expression":{"arguments":[{"name":"ptr","nativeSrc":"18477:3:28","nodeType":"YulIdentifier","src":"18477:3:28"},{"kind":"number","nativeSrc":"18482:4:28","nodeType":"YulLiteral","src":"18482:4:28","type":"","value":"0x20"}],"functionName":{"name":"mstore","nativeSrc":"18470:6:28","nodeType":"YulIdentifier","src":"18470:6:28"},"nativeSrc":"18470:17:28","nodeType":"YulFunctionCall","src":"18470:17:28"},"nativeSrc":"18470:17:28","nodeType":"YulExpressionStatement","src":"18470:17:28"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nativeSrc":"18512:3:28","nodeType":"YulIdentifier","src":"18512:3:28"},{"kind":"number","nativeSrc":"18517:4:28","nodeType":"YulLiteral","src":"18517:4:28","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"18508:3:28","nodeType":"YulIdentifier","src":"18508:3:28"},"nativeSrc":"18508:14:28","nodeType":"YulFunctionCall","src":"18508:14:28"},{"kind":"number","nativeSrc":"18524:4:28","nodeType":"YulLiteral","src":"18524:4:28","type":"","value":"0x20"}],"functionName":{"name":"mstore","nativeSrc":"18501:6:28","nodeType":"YulIdentifier","src":"18501:6:28"},"nativeSrc":"18501:28:28","nodeType":"YulFunctionCall","src":"18501:28:28"},"nativeSrc":"18501:28:28","nodeType":"YulExpressionStatement","src":"18501:28:28"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nativeSrc":"18554:3:28","nodeType":"YulIdentifier","src":"18554:3:28"},{"kind":"number","nativeSrc":"18559:4:28","nodeType":"YulLiteral","src":"18559:4:28","type":"","value":"0x40"}],"functionName":{"name":"add","nativeSrc":"18550:3:28","nodeType":"YulIdentifier","src":"18550:3:28"},"nativeSrc":"18550:14:28","nodeType":"YulFunctionCall","src":"18550:14:28"},{"kind":"number","nativeSrc":"18566:4:28","nodeType":"YulLiteral","src":"18566:4:28","type":"","value":"0x20"}],"functionName":{"name":"mstore","nativeSrc":"18543:6:28","nodeType":"YulIdentifier","src":"18543:6:28"},"nativeSrc":"18543:28:28","nodeType":"YulFunctionCall","src":"18543:28:28"},"nativeSrc":"18543:28:28","nodeType":"YulExpressionStatement","src":"18543:28:28"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nativeSrc":"18596:3:28","nodeType":"YulIdentifier","src":"18596:3:28"},{"kind":"number","nativeSrc":"18601:4:28","nodeType":"YulLiteral","src":"18601:4:28","type":"","value":"0x60"}],"functionName":{"name":"add","nativeSrc":"18592:3:28","nodeType":"YulIdentifier","src":"18592:3:28"},"nativeSrc":"18592:14:28","nodeType":"YulFunctionCall","src":"18592:14:28"},{"name":"b","nativeSrc":"18608:1:28","nodeType":"YulIdentifier","src":"18608:1:28"}],"functionName":{"name":"mstore","nativeSrc":"18585:6:28","nodeType":"YulIdentifier","src":"18585:6:28"},"nativeSrc":"18585:25:28","nodeType":"YulFunctionCall","src":"18585:25:28"},"nativeSrc":"18585:25:28","nodeType":"YulExpressionStatement","src":"18585:25:28"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nativeSrc":"18635:3:28","nodeType":"YulIdentifier","src":"18635:3:28"},{"kind":"number","nativeSrc":"18640:4:28","nodeType":"YulLiteral","src":"18640:4:28","type":"","value":"0x80"}],"functionName":{"name":"add","nativeSrc":"18631:3:28","nodeType":"YulIdentifier","src":"18631:3:28"},"nativeSrc":"18631:14:28","nodeType":"YulFunctionCall","src":"18631:14:28"},{"name":"e","nativeSrc":"18647:1:28","nodeType":"YulIdentifier","src":"18647:1:28"}],"functionName":{"name":"mstore","nativeSrc":"18624:6:28","nodeType":"YulIdentifier","src":"18624:6:28"},"nativeSrc":"18624:25:28","nodeType":"YulFunctionCall","src":"18624:25:28"},"nativeSrc":"18624:25:28","nodeType":"YulExpressionStatement","src":"18624:25:28"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nativeSrc":"18674:3:28","nodeType":"YulIdentifier","src":"18674:3:28"},{"kind":"number","nativeSrc":"18679:4:28","nodeType":"YulLiteral","src":"18679:4:28","type":"","value":"0xa0"}],"functionName":{"name":"add","nativeSrc":"18670:3:28","nodeType":"YulIdentifier","src":"18670:3:28"},"nativeSrc":"18670:14:28","nodeType":"YulFunctionCall","src":"18670:14:28"},{"name":"m","nativeSrc":"18686:1:28","nodeType":"YulIdentifier","src":"18686:1:28"}],"functionName":{"name":"mstore","nativeSrc":"18663:6:28","nodeType":"YulIdentifier","src":"18663:6:28"},"nativeSrc":"18663:25:28","nodeType":"YulFunctionCall","src":"18663:25:28"},"nativeSrc":"18663:25:28","nodeType":"YulExpressionStatement","src":"18663:25:28"},{"nativeSrc":"18854:57:28","nodeType":"YulAssignment","src":"18854:57:28","value":{"arguments":[{"arguments":[],"functionName":{"name":"gas","nativeSrc":"18876:3:28","nodeType":"YulIdentifier","src":"18876:3:28"},"nativeSrc":"18876:5:28","nodeType":"YulFunctionCall","src":"18876:5:28"},{"kind":"number","nativeSrc":"18883:4:28","nodeType":"YulLiteral","src":"18883:4:28","type":"","value":"0x05"},{"name":"ptr","nativeSrc":"18889:3:28","nodeType":"YulIdentifier","src":"18889:3:28"},{"kind":"number","nativeSrc":"18894:4:28","nodeType":"YulLiteral","src":"18894:4:28","type":"","value":"0xc0"},{"kind":"number","nativeSrc":"18900:4:28","nodeType":"YulLiteral","src":"18900:4:28","type":"","value":"0x00"},{"kind":"number","nativeSrc":"18906:4:28","nodeType":"YulLiteral","src":"18906:4:28","type":"","value":"0x20"}],"functionName":{"name":"staticcall","nativeSrc":"18865:10:28","nodeType":"YulIdentifier","src":"18865:10:28"},"nativeSrc":"18865:46:28","nodeType":"YulFunctionCall","src":"18865:46:28"},"variableNames":[{"name":"success","nativeSrc":"18854:7:28","nodeType":"YulIdentifier","src":"18854:7:28"}]},{"nativeSrc":"18925:21:28","nodeType":"YulAssignment","src":"18925:21:28","value":{"arguments":[{"kind":"number","nativeSrc":"18941:4:28","nodeType":"YulLiteral","src":"18941:4:28","type":"","value":"0x00"}],"functionName":{"name":"mload","nativeSrc":"18935:5:28","nodeType":"YulIdentifier","src":"18935:5:28"},"nativeSrc":"18935:11:28","nodeType":"YulFunctionCall","src":"18935:11:28"},"variableNames":[{"name":"result","nativeSrc":"18925:6:28","nodeType":"YulIdentifier","src":"18925:6:28"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":6137,"isOffset":false,"isSlot":false,"src":"18608:1:28","valueSize":1},{"declaration":6139,"isOffset":false,"isSlot":false,"src":"18647:1:28","valueSize":1},{"declaration":6141,"isOffset":false,"isSlot":false,"src":"18686:1:28","valueSize":1},{"declaration":6146,"isOffset":false,"isSlot":false,"src":"18925:6:28","valueSize":1},{"declaration":6144,"isOffset":false,"isSlot":false,"src":"18854:7:28","valueSize":1}],"flags":["memory-safe"],"id":6156,"nodeType":"InlineAssembly","src":"17498:1459:28"}]},"documentation":{"id":6135,"nodeType":"StructuredDocumentation","src":"16589:747:28","text":" @dev Returns the modular exponentiation of the specified base, exponent and modulus (b ** e % m).\n It includes a success flag indicating if the operation succeeded. Operation will be marked as failed if trying\n to operate modulo 0 or if the underlying precompile reverted.\n IMPORTANT: The result is only valid if the success flag is true. When using this function, make sure the chain\n you're using it on supports the precompiled contract for modular exponentiation at address 0x05 as specified in\n https://eips.ethereum.org/EIPS/eip-198[EIP-198]. Otherwise, the underlying function will succeed given the lack\n of a revert, but the result may be incorrectly interpreted as 0."},"id":6158,"implemented":true,"kind":"function","modifiers":[],"name":"tryModExp","nameLocation":"17351:9:28","nodeType":"FunctionDefinition","parameters":{"id":6142,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6137,"mutability":"mutable","name":"b","nameLocation":"17369:1:28","nodeType":"VariableDeclaration","scope":6158,"src":"17361:9:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6136,"name":"uint256","nodeType":"ElementaryTypeName","src":"17361:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6139,"mutability":"mutable","name":"e","nameLocation":"17380:1:28","nodeType":"VariableDeclaration","scope":6158,"src":"17372:9:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6138,"name":"uint256","nodeType":"ElementaryTypeName","src":"17372:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6141,"mutability":"mutable","name":"m","nameLocation":"17391:1:28","nodeType":"VariableDeclaration","scope":6158,"src":"17383:9:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6140,"name":"uint256","nodeType":"ElementaryTypeName","src":"17383:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"17360:33:28"},"returnParameters":{"id":6147,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6144,"mutability":"mutable","name":"success","nameLocation":"17422:7:28","nodeType":"VariableDeclaration","scope":6158,"src":"17417:12:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":6143,"name":"bool","nodeType":"ElementaryTypeName","src":"17417:4:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":6146,"mutability":"mutable","name":"result","nameLocation":"17439:6:28","nodeType":"VariableDeclaration","scope":6158,"src":"17431:14:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6145,"name":"uint256","nodeType":"ElementaryTypeName","src":"17431:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"17416:30:28"},"scope":6948,"src":"17342:1622:28","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":6193,"nodeType":"Block","src":"19166:185:28","statements":[{"assignments":[6171,6173],"declarations":[{"constant":false,"id":6171,"mutability":"mutable","name":"success","nameLocation":"19183:7:28","nodeType":"VariableDeclaration","scope":6193,"src":"19178:12:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":6170,"name":"bool","nodeType":"ElementaryTypeName","src":"19178:4:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":6173,"mutability":"mutable","name":"result","nameLocation":"19205:6:28","nodeType":"VariableDeclaration","scope":6193,"src":"19192:19:28","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":6172,"name":"bytes","nodeType":"ElementaryTypeName","src":"19192:5:28","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":6179,"initialValue":{"arguments":[{"id":6175,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6161,"src":"19225:1:28","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":6176,"name":"e","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6163,"src":"19228:1:28","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":6177,"name":"m","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6165,"src":"19231:1:28","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":6174,"name":"tryModExp","nodeType":"Identifier","overloadedDeclarations":[6158,6240],"referencedDeclaration":6240,"src":"19215:9:28","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory,bytes memory,bytes memory) view returns (bool,bytes memory)"}},"id":6178,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19215:18:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"19177:56:28"},{"condition":{"id":6181,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"19248:8:28","subExpression":{"id":6180,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6171,"src":"19249:7:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6190,"nodeType":"IfStatement","src":"19244:76:28","trueBody":{"id":6189,"nodeType":"Block","src":"19258:62:28","statements":[{"expression":{"arguments":[{"expression":{"id":6185,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3355,"src":"19285:5:28","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$3355_$","typeString":"type(library Panic)"}},"id":6186,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"19291:16:28","memberName":"DIVISION_BY_ZERO","nodeType":"MemberAccess","referencedDeclaration":3322,"src":"19285:22:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":6182,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3355,"src":"19273:5:28","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$3355_$","typeString":"type(library Panic)"}},"id":6184,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"19279:5:28","memberName":"panic","nodeType":"MemberAccess","referencedDeclaration":3354,"src":"19273:11:28","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":6187,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19273:35:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6188,"nodeType":"ExpressionStatement","src":"19273:35:28"}]}},{"expression":{"id":6191,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6173,"src":"19337:6:28","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":6169,"id":6192,"nodeType":"Return","src":"19330:13:28"}]},"documentation":{"id":6159,"nodeType":"StructuredDocumentation","src":"18972:87:28","text":" @dev Variant of {modExp} that supports inputs of arbitrary length."},"id":6194,"implemented":true,"kind":"function","modifiers":[],"name":"modExp","nameLocation":"19074:6:28","nodeType":"FunctionDefinition","parameters":{"id":6166,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6161,"mutability":"mutable","name":"b","nameLocation":"19094:1:28","nodeType":"VariableDeclaration","scope":6194,"src":"19081:14:28","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":6160,"name":"bytes","nodeType":"ElementaryTypeName","src":"19081:5:28","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":6163,"mutability":"mutable","name":"e","nameLocation":"19110:1:28","nodeType":"VariableDeclaration","scope":6194,"src":"19097:14:28","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":6162,"name":"bytes","nodeType":"ElementaryTypeName","src":"19097:5:28","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":6165,"mutability":"mutable","name":"m","nameLocation":"19126:1:28","nodeType":"VariableDeclaration","scope":6194,"src":"19113:14:28","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":6164,"name":"bytes","nodeType":"ElementaryTypeName","src":"19113:5:28","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"19080:48:28"},"returnParameters":{"id":6169,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6168,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6194,"src":"19152:12:28","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":6167,"name":"bytes","nodeType":"ElementaryTypeName","src":"19152:5:28","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"19151:14:28"},"scope":6948,"src":"19065:286:28","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":6239,"nodeType":"Block","src":"19614:789:28","statements":[{"condition":{"arguments":[{"id":6209,"name":"m","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6201,"src":"19640:1:28","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":6208,"name":"_zeroBytes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6273,"src":"19629:10:28","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$returns$_t_bool_$","typeString":"function (bytes memory) pure returns (bool)"}},"id":6210,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19629:13:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6218,"nodeType":"IfStatement","src":"19625:47:28","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":6211,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"19652:5:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"arguments":[{"hexValue":"30","id":6214,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19669:1:28","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":6213,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"19659:9:28","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$","typeString":"function (uint256) pure returns (bytes memory)"},"typeName":{"id":6212,"name":"bytes","nodeType":"ElementaryTypeName","src":"19663:5:28","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}}},"id":6215,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19659:12:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"id":6216,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"19651:21:28","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"functionReturnParameters":6207,"id":6217,"nodeType":"Return","src":"19644:28:28"}},{"assignments":[6220],"declarations":[{"constant":false,"id":6220,"mutability":"mutable","name":"mLen","nameLocation":"19693:4:28","nodeType":"VariableDeclaration","scope":6239,"src":"19685:12:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6219,"name":"uint256","nodeType":"ElementaryTypeName","src":"19685:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6223,"initialValue":{"expression":{"id":6221,"name":"m","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6201,"src":"19700:1:28","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":6222,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"19702:6:28","memberName":"length","nodeType":"MemberAccess","src":"19700:8:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"19685:23:28"},{"expression":{"id":6236,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6224,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6206,"src":"19793:6:28","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"expression":{"id":6227,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6197,"src":"19819:1:28","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":6228,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"19821:6:28","memberName":"length","nodeType":"MemberAccess","src":"19819:8:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":6229,"name":"e","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6199,"src":"19829:1:28","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":6230,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"19831:6:28","memberName":"length","nodeType":"MemberAccess","src":"19829:8:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":6231,"name":"mLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6220,"src":"19839:4:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":6232,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6197,"src":"19845:1:28","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":6233,"name":"e","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6199,"src":"19848:1:28","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":6234,"name":"m","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6201,"src":"19851:1:28","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":6225,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"19802:3:28","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":6226,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"19806:12:28","memberName":"encodePacked","nodeType":"MemberAccess","src":"19802:16:28","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":6235,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19802:51:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"src":"19793:60:28","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":6237,"nodeType":"ExpressionStatement","src":"19793:60:28"},{"AST":{"nativeSrc":"19891:505:28","nodeType":"YulBlock","src":"19891:505:28","statements":[{"nativeSrc":"19906:32:28","nodeType":"YulVariableDeclaration","src":"19906:32:28","value":{"arguments":[{"name":"result","nativeSrc":"19925:6:28","nodeType":"YulIdentifier","src":"19925:6:28"},{"kind":"number","nativeSrc":"19933:4:28","nodeType":"YulLiteral","src":"19933:4:28","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"19921:3:28","nodeType":"YulIdentifier","src":"19921:3:28"},"nativeSrc":"19921:17:28","nodeType":"YulFunctionCall","src":"19921:17:28"},"variables":[{"name":"dataPtr","nativeSrc":"19910:7:28","nodeType":"YulTypedName","src":"19910:7:28","type":""}]},{"nativeSrc":"20030:73:28","nodeType":"YulAssignment","src":"20030:73:28","value":{"arguments":[{"arguments":[],"functionName":{"name":"gas","nativeSrc":"20052:3:28","nodeType":"YulIdentifier","src":"20052:3:28"},"nativeSrc":"20052:5:28","nodeType":"YulFunctionCall","src":"20052:5:28"},{"kind":"number","nativeSrc":"20059:4:28","nodeType":"YulLiteral","src":"20059:4:28","type":"","value":"0x05"},{"name":"dataPtr","nativeSrc":"20065:7:28","nodeType":"YulIdentifier","src":"20065:7:28"},{"arguments":[{"name":"result","nativeSrc":"20080:6:28","nodeType":"YulIdentifier","src":"20080:6:28"}],"functionName":{"name":"mload","nativeSrc":"20074:5:28","nodeType":"YulIdentifier","src":"20074:5:28"},"nativeSrc":"20074:13:28","nodeType":"YulFunctionCall","src":"20074:13:28"},{"name":"dataPtr","nativeSrc":"20089:7:28","nodeType":"YulIdentifier","src":"20089:7:28"},{"name":"mLen","nativeSrc":"20098:4:28","nodeType":"YulIdentifier","src":"20098:4:28"}],"functionName":{"name":"staticcall","nativeSrc":"20041:10:28","nodeType":"YulIdentifier","src":"20041:10:28"},"nativeSrc":"20041:62:28","nodeType":"YulFunctionCall","src":"20041:62:28"},"variableNames":[{"name":"success","nativeSrc":"20030:7:28","nodeType":"YulIdentifier","src":"20030:7:28"}]},{"expression":{"arguments":[{"name":"result","nativeSrc":"20262:6:28","nodeType":"YulIdentifier","src":"20262:6:28"},{"name":"mLen","nativeSrc":"20270:4:28","nodeType":"YulIdentifier","src":"20270:4:28"}],"functionName":{"name":"mstore","nativeSrc":"20255:6:28","nodeType":"YulIdentifier","src":"20255:6:28"},"nativeSrc":"20255:20:28","nodeType":"YulFunctionCall","src":"20255:20:28"},"nativeSrc":"20255:20:28","nodeType":"YulExpressionStatement","src":"20255:20:28"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"20360:4:28","nodeType":"YulLiteral","src":"20360:4:28","type":"","value":"0x40"},{"arguments":[{"name":"dataPtr","nativeSrc":"20370:7:28","nodeType":"YulIdentifier","src":"20370:7:28"},{"name":"mLen","nativeSrc":"20379:4:28","nodeType":"YulIdentifier","src":"20379:4:28"}],"functionName":{"name":"add","nativeSrc":"20366:3:28","nodeType":"YulIdentifier","src":"20366:3:28"},"nativeSrc":"20366:18:28","nodeType":"YulFunctionCall","src":"20366:18:28"}],"functionName":{"name":"mstore","nativeSrc":"20353:6:28","nodeType":"YulIdentifier","src":"20353:6:28"},"nativeSrc":"20353:32:28","nodeType":"YulFunctionCall","src":"20353:32:28"},"nativeSrc":"20353:32:28","nodeType":"YulExpressionStatement","src":"20353:32:28"}]},"evmVersion":"paris","externalReferences":[{"declaration":6220,"isOffset":false,"isSlot":false,"src":"20098:4:28","valueSize":1},{"declaration":6220,"isOffset":false,"isSlot":false,"src":"20270:4:28","valueSize":1},{"declaration":6220,"isOffset":false,"isSlot":false,"src":"20379:4:28","valueSize":1},{"declaration":6206,"isOffset":false,"isSlot":false,"src":"19925:6:28","valueSize":1},{"declaration":6206,"isOffset":false,"isSlot":false,"src":"20080:6:28","valueSize":1},{"declaration":6206,"isOffset":false,"isSlot":false,"src":"20262:6:28","valueSize":1},{"declaration":6204,"isOffset":false,"isSlot":false,"src":"20030:7:28","valueSize":1}],"flags":["memory-safe"],"id":6238,"nodeType":"InlineAssembly","src":"19866:530:28"}]},"documentation":{"id":6195,"nodeType":"StructuredDocumentation","src":"19359:90:28","text":" @dev Variant of {tryModExp} that supports inputs of arbitrary length."},"id":6240,"implemented":true,"kind":"function","modifiers":[],"name":"tryModExp","nameLocation":"19464:9:28","nodeType":"FunctionDefinition","parameters":{"id":6202,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6197,"mutability":"mutable","name":"b","nameLocation":"19497:1:28","nodeType":"VariableDeclaration","scope":6240,"src":"19484:14:28","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":6196,"name":"bytes","nodeType":"ElementaryTypeName","src":"19484:5:28","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":6199,"mutability":"mutable","name":"e","nameLocation":"19522:1:28","nodeType":"VariableDeclaration","scope":6240,"src":"19509:14:28","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":6198,"name":"bytes","nodeType":"ElementaryTypeName","src":"19509:5:28","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":6201,"mutability":"mutable","name":"m","nameLocation":"19547:1:28","nodeType":"VariableDeclaration","scope":6240,"src":"19534:14:28","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":6200,"name":"bytes","nodeType":"ElementaryTypeName","src":"19534:5:28","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"19473:82:28"},"returnParameters":{"id":6207,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6204,"mutability":"mutable","name":"success","nameLocation":"19584:7:28","nodeType":"VariableDeclaration","scope":6240,"src":"19579:12:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":6203,"name":"bool","nodeType":"ElementaryTypeName","src":"19579:4:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":6206,"mutability":"mutable","name":"result","nameLocation":"19606:6:28","nodeType":"VariableDeclaration","scope":6240,"src":"19593:19:28","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":6205,"name":"bytes","nodeType":"ElementaryTypeName","src":"19593:5:28","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"19578:35:28"},"scope":6948,"src":"19455:948:28","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":6272,"nodeType":"Block","src":"20563:183:28","statements":[{"body":{"id":6268,"nodeType":"Block","src":"20621:96:28","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":6263,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":6259,"name":"byteArray","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6243,"src":"20640:9:28","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":6261,"indexExpression":{"id":6260,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6249,"src":"20650:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"20640:12:28","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":6262,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20656:1:28","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"20640:17:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6267,"nodeType":"IfStatement","src":"20636:70:28","trueBody":{"id":6266,"nodeType":"Block","src":"20659:47:28","statements":[{"expression":{"hexValue":"66616c7365","id":6264,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"20685:5:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"functionReturnParameters":6247,"id":6265,"nodeType":"Return","src":"20678:12:28"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6255,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6252,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6249,"src":"20594:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":6253,"name":"byteArray","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6243,"src":"20598:9:28","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":6254,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"20608:6:28","memberName":"length","nodeType":"MemberAccess","src":"20598:16:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"20594:20:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6269,"initializationExpression":{"assignments":[6249],"declarations":[{"constant":false,"id":6249,"mutability":"mutable","name":"i","nameLocation":"20587:1:28","nodeType":"VariableDeclaration","scope":6269,"src":"20579:9:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6248,"name":"uint256","nodeType":"ElementaryTypeName","src":"20579:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6251,"initialValue":{"hexValue":"30","id":6250,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20591:1:28","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"20579:13:28"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":6257,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":true,"src":"20616:3:28","subExpression":{"id":6256,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6249,"src":"20618:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6258,"nodeType":"ExpressionStatement","src":"20616:3:28"},"nodeType":"ForStatement","src":"20574:143:28"},{"expression":{"hexValue":"74727565","id":6270,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"20734:4:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":6247,"id":6271,"nodeType":"Return","src":"20727:11:28"}]},"documentation":{"id":6241,"nodeType":"StructuredDocumentation","src":"20411:74:28","text":" @dev Returns whether the provided byte array is zero."},"id":6273,"implemented":true,"kind":"function","modifiers":[],"name":"_zeroBytes","nameLocation":"20500:10:28","nodeType":"FunctionDefinition","parameters":{"id":6244,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6243,"mutability":"mutable","name":"byteArray","nameLocation":"20524:9:28","nodeType":"VariableDeclaration","scope":6273,"src":"20511:22:28","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":6242,"name":"bytes","nodeType":"ElementaryTypeName","src":"20511:5:28","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"20510:24:28"},"returnParameters":{"id":6247,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6246,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6273,"src":"20557:4:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":6245,"name":"bool","nodeType":"ElementaryTypeName","src":"20557:4:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"20556:6:28"},"scope":6948,"src":"20491:255:28","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":6491,"nodeType":"Block","src":"21115:5228:28","statements":[{"id":6490,"nodeType":"UncheckedBlock","src":"21126:5210:28","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6283,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6281,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6276,"src":"21222:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"hexValue":"31","id":6282,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21227:1:28","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"21222:6:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6287,"nodeType":"IfStatement","src":"21218:55:28","trueBody":{"id":6286,"nodeType":"Block","src":"21230:43:28","statements":[{"expression":{"id":6284,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6276,"src":"21256:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":6280,"id":6285,"nodeType":"Return","src":"21249:8:28"}]}},{"assignments":[6289],"declarations":[{"constant":false,"id":6289,"mutability":"mutable","name":"aa","nameLocation":"22222:2:28","nodeType":"VariableDeclaration","scope":6490,"src":"22214:10:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6288,"name":"uint256","nodeType":"ElementaryTypeName","src":"22214:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6291,"initialValue":{"id":6290,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6276,"src":"22227:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"22214:14:28"},{"assignments":[6293],"declarations":[{"constant":false,"id":6293,"mutability":"mutable","name":"xn","nameLocation":"22251:2:28","nodeType":"VariableDeclaration","scope":6490,"src":"22243:10:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6292,"name":"uint256","nodeType":"ElementaryTypeName","src":"22243:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6295,"initialValue":{"hexValue":"31","id":6294,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22256:1:28","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"VariableDeclarationStatement","src":"22243:14:28"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6301,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6296,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6289,"src":"22278:2:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_340282366920938463463374607431768211456_by_1","typeString":"int_const 3402...(31 digits omitted)...1456"},"id":6299,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":6297,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22285:1:28","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"313238","id":6298,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22290:3:28","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"22285:8:28","typeDescriptions":{"typeIdentifier":"t_rational_340282366920938463463374607431768211456_by_1","typeString":"int_const 3402...(31 digits omitted)...1456"}}],"id":6300,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"22284:10:28","typeDescriptions":{"typeIdentifier":"t_rational_340282366920938463463374607431768211456_by_1","typeString":"int_const 3402...(31 digits omitted)...1456"}},"src":"22278:16:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6311,"nodeType":"IfStatement","src":"22274:95:28","trueBody":{"id":6310,"nodeType":"Block","src":"22296:73:28","statements":[{"expression":{"id":6304,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6302,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6289,"src":"22315:2:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"313238","id":6303,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22322:3:28","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"22315:10:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6305,"nodeType":"ExpressionStatement","src":"22315:10:28"},{"expression":{"id":6308,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6306,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6293,"src":"22344:2:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"3634","id":6307,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22351:2:28","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"22344:9:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6309,"nodeType":"ExpressionStatement","src":"22344:9:28"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6317,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6312,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6289,"src":"22387:2:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_18446744073709551616_by_1","typeString":"int_const 18446744073709551616"},"id":6315,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":6313,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22394:1:28","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"3634","id":6314,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22399:2:28","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"22394:7:28","typeDescriptions":{"typeIdentifier":"t_rational_18446744073709551616_by_1","typeString":"int_const 18446744073709551616"}}],"id":6316,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"22393:9:28","typeDescriptions":{"typeIdentifier":"t_rational_18446744073709551616_by_1","typeString":"int_const 18446744073709551616"}},"src":"22387:15:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6327,"nodeType":"IfStatement","src":"22383:93:28","trueBody":{"id":6326,"nodeType":"Block","src":"22404:72:28","statements":[{"expression":{"id":6320,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6318,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6289,"src":"22423:2:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3634","id":6319,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22430:2:28","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"22423:9:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6321,"nodeType":"ExpressionStatement","src":"22423:9:28"},{"expression":{"id":6324,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6322,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6293,"src":"22451:2:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"3332","id":6323,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22458:2:28","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"22451:9:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6325,"nodeType":"ExpressionStatement","src":"22451:9:28"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6333,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6328,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6289,"src":"22494:2:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_4294967296_by_1","typeString":"int_const 4294967296"},"id":6331,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":6329,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22501:1:28","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"3332","id":6330,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22506:2:28","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"22501:7:28","typeDescriptions":{"typeIdentifier":"t_rational_4294967296_by_1","typeString":"int_const 4294967296"}}],"id":6332,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"22500:9:28","typeDescriptions":{"typeIdentifier":"t_rational_4294967296_by_1","typeString":"int_const 4294967296"}},"src":"22494:15:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6343,"nodeType":"IfStatement","src":"22490:93:28","trueBody":{"id":6342,"nodeType":"Block","src":"22511:72:28","statements":[{"expression":{"id":6336,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6334,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6289,"src":"22530:2:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3332","id":6335,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22537:2:28","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"22530:9:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6337,"nodeType":"ExpressionStatement","src":"22530:9:28"},{"expression":{"id":6340,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6338,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6293,"src":"22558:2:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"3136","id":6339,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22565:2:28","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"22558:9:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6341,"nodeType":"ExpressionStatement","src":"22558:9:28"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6349,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6344,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6289,"src":"22601:2:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_65536_by_1","typeString":"int_const 65536"},"id":6347,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":6345,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22608:1:28","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"3136","id":6346,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22613:2:28","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"22608:7:28","typeDescriptions":{"typeIdentifier":"t_rational_65536_by_1","typeString":"int_const 65536"}}],"id":6348,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"22607:9:28","typeDescriptions":{"typeIdentifier":"t_rational_65536_by_1","typeString":"int_const 65536"}},"src":"22601:15:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6359,"nodeType":"IfStatement","src":"22597:92:28","trueBody":{"id":6358,"nodeType":"Block","src":"22618:71:28","statements":[{"expression":{"id":6352,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6350,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6289,"src":"22637:2:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3136","id":6351,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22644:2:28","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"22637:9:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6353,"nodeType":"ExpressionStatement","src":"22637:9:28"},{"expression":{"id":6356,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6354,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6293,"src":"22665:2:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"38","id":6355,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22672:1:28","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"22665:8:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6357,"nodeType":"ExpressionStatement","src":"22665:8:28"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6365,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6360,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6289,"src":"22707:2:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"},"id":6363,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":6361,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22714:1:28","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"38","id":6362,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22719:1:28","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"22714:6:28","typeDescriptions":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"}}],"id":6364,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"22713:8:28","typeDescriptions":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"}},"src":"22707:14:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6375,"nodeType":"IfStatement","src":"22703:90:28","trueBody":{"id":6374,"nodeType":"Block","src":"22723:70:28","statements":[{"expression":{"id":6368,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6366,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6289,"src":"22742:2:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"38","id":6367,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22749:1:28","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"22742:8:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6369,"nodeType":"ExpressionStatement","src":"22742:8:28"},{"expression":{"id":6372,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6370,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6293,"src":"22769:2:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"34","id":6371,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22776:1:28","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"22769:8:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6373,"nodeType":"ExpressionStatement","src":"22769:8:28"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6381,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6376,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6289,"src":"22811:2:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"id":6379,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":6377,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22818:1:28","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"34","id":6378,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22823:1:28","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"22818:6:28","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"}}],"id":6380,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"22817:8:28","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"}},"src":"22811:14:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6391,"nodeType":"IfStatement","src":"22807:90:28","trueBody":{"id":6390,"nodeType":"Block","src":"22827:70:28","statements":[{"expression":{"id":6384,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6382,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6289,"src":"22846:2:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"34","id":6383,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22853:1:28","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"22846:8:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6385,"nodeType":"ExpressionStatement","src":"22846:8:28"},{"expression":{"id":6388,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6386,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6293,"src":"22873:2:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"32","id":6387,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22880:1:28","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"22873:8:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6389,"nodeType":"ExpressionStatement","src":"22873:8:28"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6397,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6392,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6289,"src":"22915:2:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"id":6395,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":6393,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22922:1:28","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"32","id":6394,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22927:1:28","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"22922:6:28","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"}}],"id":6396,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"22921:8:28","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"}},"src":"22915:14:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6403,"nodeType":"IfStatement","src":"22911:63:28","trueBody":{"id":6402,"nodeType":"Block","src":"22931:43:28","statements":[{"expression":{"id":6400,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6398,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6293,"src":"22950:2:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"31","id":6399,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22957:1:28","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"22950:8:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6401,"nodeType":"ExpressionStatement","src":"22950:8:28"}]}},{"expression":{"id":6411,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6404,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6293,"src":"23401:2:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6410,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6407,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"33","id":6405,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"23407:1:28","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":6406,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6293,"src":"23411:2:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"23407:6:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":6408,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"23406:8:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":6409,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"23418:1:28","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"23406:13:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"23401:18:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6412,"nodeType":"ExpressionStatement","src":"23401:18:28"},{"expression":{"id":6422,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6413,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6293,"src":"25343:2:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6421,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6418,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6414,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6293,"src":"25349:2:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6417,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6415,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6276,"src":"25354:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":6416,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6293,"src":"25358:2:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25354:6:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25349:11:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":6419,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"25348:13:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":6420,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25365:1:28","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"25348:18:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25343:23:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6423,"nodeType":"ExpressionStatement","src":"25343:23:28"},{"expression":{"id":6433,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6424,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6293,"src":"25453:2:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6432,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6429,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6425,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6293,"src":"25459:2:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6428,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6426,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6276,"src":"25464:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":6427,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6293,"src":"25468:2:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25464:6:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25459:11:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":6430,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"25458:13:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":6431,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25475:1:28","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"25458:18:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25453:23:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6434,"nodeType":"ExpressionStatement","src":"25453:23:28"},{"expression":{"id":6444,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6435,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6293,"src":"25565:2:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6443,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6440,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6436,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6293,"src":"25571:2:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6439,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6437,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6276,"src":"25576:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":6438,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6293,"src":"25580:2:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25576:6:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25571:11:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":6441,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"25570:13:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":6442,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25587:1:28","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"25570:18:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25565:23:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6445,"nodeType":"ExpressionStatement","src":"25565:23:28"},{"expression":{"id":6455,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6446,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6293,"src":"25675:2:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6454,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6451,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6447,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6293,"src":"25681:2:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6450,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6448,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6276,"src":"25686:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":6449,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6293,"src":"25690:2:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25686:6:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25681:11:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":6452,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"25680:13:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":6453,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25697:1:28","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"25680:18:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25675:23:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6456,"nodeType":"ExpressionStatement","src":"25675:23:28"},{"expression":{"id":6466,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6457,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6293,"src":"25786:2:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6465,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6462,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6458,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6293,"src":"25792:2:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6461,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6459,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6276,"src":"25797:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":6460,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6293,"src":"25801:2:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25797:6:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25792:11:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":6463,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"25791:13:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":6464,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25808:1:28","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"25791:18:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25786:23:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6467,"nodeType":"ExpressionStatement","src":"25786:23:28"},{"expression":{"id":6477,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6468,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6293,"src":"25897:2:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6476,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6473,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6469,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6293,"src":"25903:2:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6472,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6470,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6276,"src":"25908:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":6471,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6293,"src":"25912:2:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25908:6:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25903:11:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":6474,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"25902:13:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":6475,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25919:1:28","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"25902:18:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25897:23:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6478,"nodeType":"ExpressionStatement","src":"25897:23:28"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6488,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6479,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6293,"src":"26291:2:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6486,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6482,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6293,"src":"26312:2:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6485,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6483,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6276,"src":"26317:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":6484,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6293,"src":"26321:2:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26317:6:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26312:11:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":6480,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8713,"src":"26296:8:28","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$8713_$","typeString":"type(library SafeCast)"}},"id":6481,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"26305:6:28","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":8712,"src":"26296:15:28","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":6487,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26296:28:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26291:33:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":6280,"id":6489,"nodeType":"Return","src":"26284:40:28"}]}]},"documentation":{"id":6274,"nodeType":"StructuredDocumentation","src":"20754:298:28","text":" @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded\n towards zero.\n This method is based on Newton's method for computing square roots; the algorithm is restricted to only\n using integer operations."},"id":6492,"implemented":true,"kind":"function","modifiers":[],"name":"sqrt","nameLocation":"21067:4:28","nodeType":"FunctionDefinition","parameters":{"id":6277,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6276,"mutability":"mutable","name":"a","nameLocation":"21080:1:28","nodeType":"VariableDeclaration","scope":6492,"src":"21072:9:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6275,"name":"uint256","nodeType":"ElementaryTypeName","src":"21072:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"21071:11:28"},"returnParameters":{"id":6280,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6279,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6492,"src":"21106:7:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6278,"name":"uint256","nodeType":"ElementaryTypeName","src":"21106:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"21105:9:28"},"scope":6948,"src":"21058:5285:28","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6525,"nodeType":"Block","src":"26521:176:28","statements":[{"id":6524,"nodeType":"UncheckedBlock","src":"26532:158:28","statements":[{"assignments":[6504],"declarations":[{"constant":false,"id":6504,"mutability":"mutable","name":"result","nameLocation":"26565:6:28","nodeType":"VariableDeclaration","scope":6524,"src":"26557:14:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6503,"name":"uint256","nodeType":"ElementaryTypeName","src":"26557:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6508,"initialValue":{"arguments":[{"id":6506,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6495,"src":"26579:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6505,"name":"sqrt","nodeType":"Identifier","overloadedDeclarations":[6492,6526],"referencedDeclaration":6492,"src":"26574:4:28","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":6507,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26574:7:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"26557:24:28"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6522,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6509,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6504,"src":"26603:6:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":6520,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":6513,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6498,"src":"26645:8:28","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$5339","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$5339","typeString":"enum Math.Rounding"}],"id":6512,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6947,"src":"26628:16:28","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$5339_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":6514,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26628:26:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6519,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6517,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6515,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6504,"src":"26658:6:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":6516,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6504,"src":"26667:6:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26658:15:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":6518,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6495,"src":"26676:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26658:19:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"26628:49:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":6510,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8713,"src":"26612:8:28","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$8713_$","typeString":"type(library SafeCast)"}},"id":6511,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"26621:6:28","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":8712,"src":"26612:15:28","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":6521,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26612:66:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26603:75:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":6502,"id":6523,"nodeType":"Return","src":"26596:82:28"}]}]},"documentation":{"id":6493,"nodeType":"StructuredDocumentation","src":"26351:88:28","text":" @dev Calculates sqrt(a), following the selected rounding direction."},"id":6526,"implemented":true,"kind":"function","modifiers":[],"name":"sqrt","nameLocation":"26454:4:28","nodeType":"FunctionDefinition","parameters":{"id":6499,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6495,"mutability":"mutable","name":"a","nameLocation":"26467:1:28","nodeType":"VariableDeclaration","scope":6526,"src":"26459:9:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6494,"name":"uint256","nodeType":"ElementaryTypeName","src":"26459:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6498,"mutability":"mutable","name":"rounding","nameLocation":"26479:8:28","nodeType":"VariableDeclaration","scope":6526,"src":"26470:17:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$5339","typeString":"enum Math.Rounding"},"typeName":{"id":6497,"nodeType":"UserDefinedTypeName","pathNode":{"id":6496,"name":"Rounding","nameLocations":["26470:8:28"],"nodeType":"IdentifierPath","referencedDeclaration":5339,"src":"26470:8:28"},"referencedDeclaration":5339,"src":"26470:8:28","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$5339","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"26458:30:28"},"returnParameters":{"id":6502,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6501,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6526,"src":"26512:7:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6500,"name":"uint256","nodeType":"ElementaryTypeName","src":"26512:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"26511:9:28"},"scope":6948,"src":"26445:252:28","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6616,"nodeType":"Block","src":"26892:2373:28","statements":[{"expression":{"id":6543,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6534,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6532,"src":"26976:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6542,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6539,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6537,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6529,"src":"26996:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30786666666666666666666666666666666666666666666666666666666666666666","id":6538,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27000:34:28","typeDescriptions":{"typeIdentifier":"t_rational_340282366920938463463374607431768211455_by_1","typeString":"int_const 3402...(31 digits omitted)...1455"},"value":"0xffffffffffffffffffffffffffffffff"},"src":"26996:38:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":6535,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8713,"src":"26980:8:28","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$8713_$","typeString":"type(library SafeCast)"}},"id":6536,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"26989:6:28","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":8712,"src":"26980:15:28","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":6540,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26980:55:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"37","id":6541,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27039:1:28","typeDescriptions":{"typeIdentifier":"t_rational_7_by_1","typeString":"int_const 7"},"value":"7"},"src":"26980:60:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26976:64:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6544,"nodeType":"ExpressionStatement","src":"26976:64:28"},{"expression":{"id":6557,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6545,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6532,"src":"27118:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6556,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6553,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6550,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6548,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6529,"src":"27140:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":6549,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6532,"src":"27145:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27140:6:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":6551,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"27139:8:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"307866666666666666666666666666666666","id":6552,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27150:18:28","typeDescriptions":{"typeIdentifier":"t_rational_18446744073709551615_by_1","typeString":"int_const 18446744073709551615"},"value":"0xffffffffffffffff"},"src":"27139:29:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":6546,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8713,"src":"27123:8:28","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$8713_$","typeString":"type(library SafeCast)"}},"id":6547,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"27132:6:28","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":8712,"src":"27123:15:28","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":6554,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27123:46:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"36","id":6555,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27173:1:28","typeDescriptions":{"typeIdentifier":"t_rational_6_by_1","typeString":"int_const 6"},"value":"6"},"src":"27123:51:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27118:56:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6558,"nodeType":"ExpressionStatement","src":"27118:56:28"},{"expression":{"id":6571,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6559,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6532,"src":"27251:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6570,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6567,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6564,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6562,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6529,"src":"27273:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":6563,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6532,"src":"27278:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27273:6:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":6565,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"27272:8:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30786666666666666666","id":6566,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27283:10:28","typeDescriptions":{"typeIdentifier":"t_rational_4294967295_by_1","typeString":"int_const 4294967295"},"value":"0xffffffff"},"src":"27272:21:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":6560,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8713,"src":"27256:8:28","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$8713_$","typeString":"type(library SafeCast)"}},"id":6561,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"27265:6:28","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":8712,"src":"27256:15:28","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":6568,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27256:38:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"35","id":6569,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27298:1:28","typeDescriptions":{"typeIdentifier":"t_rational_5_by_1","typeString":"int_const 5"},"value":"5"},"src":"27256:43:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27251:48:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6572,"nodeType":"ExpressionStatement","src":"27251:48:28"},{"expression":{"id":6585,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6573,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6532,"src":"27376:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6584,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6581,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6578,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6576,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6529,"src":"27398:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":6577,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6532,"src":"27403:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27398:6:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":6579,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"27397:8:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"307866666666","id":6580,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27408:6:28","typeDescriptions":{"typeIdentifier":"t_rational_65535_by_1","typeString":"int_const 65535"},"value":"0xffff"},"src":"27397:17:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":6574,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8713,"src":"27381:8:28","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$8713_$","typeString":"type(library SafeCast)"}},"id":6575,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"27390:6:28","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":8712,"src":"27381:15:28","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":6582,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27381:34:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"34","id":6583,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27419:1:28","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"27381:39:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27376:44:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6586,"nodeType":"ExpressionStatement","src":"27376:44:28"},{"expression":{"id":6599,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6587,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6532,"src":"27495:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6598,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6595,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6592,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6590,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6529,"src":"27517:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":6591,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6532,"src":"27522:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27517:6:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":6593,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"27516:8:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30786666","id":6594,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27527:4:28","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"0xff"},"src":"27516:15:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":6588,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8713,"src":"27500:8:28","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$8713_$","typeString":"type(library SafeCast)"}},"id":6589,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"27509:6:28","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":8712,"src":"27500:15:28","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":6596,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27500:32:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"33","id":6597,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27536:1:28","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"src":"27500:37:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27495:42:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6600,"nodeType":"ExpressionStatement","src":"27495:42:28"},{"expression":{"id":6613,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6601,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6532,"src":"27611:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6612,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6609,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6606,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6604,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6529,"src":"27633:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":6605,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6532,"src":"27638:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27633:6:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":6607,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"27632:8:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"307866","id":6608,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27643:3:28","typeDescriptions":{"typeIdentifier":"t_rational_15_by_1","typeString":"int_const 15"},"value":"0xf"},"src":"27632:14:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":6602,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8713,"src":"27616:8:28","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$8713_$","typeString":"type(library SafeCast)"}},"id":6603,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"27625:6:28","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":8712,"src":"27616:15:28","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":6610,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27616:31:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"32","id":6611,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27651:1:28","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"27616:36:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27611:41:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6614,"nodeType":"ExpressionStatement","src":"27611:41:28"},{"AST":{"nativeSrc":"29137:121:28","nodeType":"YulBlock","src":"29137:121:28","statements":[{"nativeSrc":"29152:95:28","nodeType":"YulAssignment","src":"29152:95:28","value":{"arguments":[{"name":"r","nativeSrc":"29160:1:28","nodeType":"YulIdentifier","src":"29160:1:28"},{"arguments":[{"arguments":[{"name":"r","nativeSrc":"29172:1:28","nodeType":"YulIdentifier","src":"29172:1:28"},{"name":"x","nativeSrc":"29175:1:28","nodeType":"YulIdentifier","src":"29175:1:28"}],"functionName":{"name":"shr","nativeSrc":"29168:3:28","nodeType":"YulIdentifier","src":"29168:3:28"},"nativeSrc":"29168:9:28","nodeType":"YulFunctionCall","src":"29168:9:28"},{"kind":"number","nativeSrc":"29179:66:28","nodeType":"YulLiteral","src":"29179:66:28","type":"","value":"0x0000010102020202030303030303030300000000000000000000000000000000"}],"functionName":{"name":"byte","nativeSrc":"29163:4:28","nodeType":"YulIdentifier","src":"29163:4:28"},"nativeSrc":"29163:83:28","nodeType":"YulFunctionCall","src":"29163:83:28"}],"functionName":{"name":"or","nativeSrc":"29157:2:28","nodeType":"YulIdentifier","src":"29157:2:28"},"nativeSrc":"29157:90:28","nodeType":"YulFunctionCall","src":"29157:90:28"},"variableNames":[{"name":"r","nativeSrc":"29152:1:28","nodeType":"YulIdentifier","src":"29152:1:28"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":6532,"isOffset":false,"isSlot":false,"src":"29152:1:28","valueSize":1},{"declaration":6532,"isOffset":false,"isSlot":false,"src":"29160:1:28","valueSize":1},{"declaration":6532,"isOffset":false,"isSlot":false,"src":"29172:1:28","valueSize":1},{"declaration":6529,"isOffset":false,"isSlot":false,"src":"29175:1:28","valueSize":1}],"flags":["memory-safe"],"id":6615,"nodeType":"InlineAssembly","src":"29112:146:28"}]},"documentation":{"id":6527,"nodeType":"StructuredDocumentation","src":"26705:122:28","text":" @dev Return the log in base 2 of a positive value rounded towards zero.\n Returns 0 if given 0."},"id":6617,"implemented":true,"kind":"function","modifiers":[],"name":"log2","nameLocation":"26842:4:28","nodeType":"FunctionDefinition","parameters":{"id":6530,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6529,"mutability":"mutable","name":"x","nameLocation":"26855:1:28","nodeType":"VariableDeclaration","scope":6617,"src":"26847:9:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6528,"name":"uint256","nodeType":"ElementaryTypeName","src":"26847:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"26846:11:28"},"returnParameters":{"id":6533,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6532,"mutability":"mutable","name":"r","nameLocation":"26889:1:28","nodeType":"VariableDeclaration","scope":6617,"src":"26881:9:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6531,"name":"uint256","nodeType":"ElementaryTypeName","src":"26881:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"26880:11:28"},"scope":6948,"src":"26833:2432:28","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6650,"nodeType":"Block","src":"29504:180:28","statements":[{"id":6649,"nodeType":"UncheckedBlock","src":"29515:162:28","statements":[{"assignments":[6629],"declarations":[{"constant":false,"id":6629,"mutability":"mutable","name":"result","nameLocation":"29548:6:28","nodeType":"VariableDeclaration","scope":6649,"src":"29540:14:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6628,"name":"uint256","nodeType":"ElementaryTypeName","src":"29540:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6633,"initialValue":{"arguments":[{"id":6631,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6620,"src":"29562:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6630,"name":"log2","nodeType":"Identifier","overloadedDeclarations":[6617,6651],"referencedDeclaration":6617,"src":"29557:4:28","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":6632,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"29557:11:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"29540:28:28"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6647,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6634,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6629,"src":"29590:6:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":6645,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":6638,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6623,"src":"29632:8:28","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$5339","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$5339","typeString":"enum Math.Rounding"}],"id":6637,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6947,"src":"29615:16:28","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$5339_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":6639,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"29615:26:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6644,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6642,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":6640,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29645:1:28","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"id":6641,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6629,"src":"29650:6:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"29645:11:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":6643,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6620,"src":"29659:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"29645:19:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"29615:49:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":6635,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8713,"src":"29599:8:28","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$8713_$","typeString":"type(library SafeCast)"}},"id":6636,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"29608:6:28","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":8712,"src":"29599:15:28","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":6646,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"29599:66:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"29590:75:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":6627,"id":6648,"nodeType":"Return","src":"29583:82:28"}]}]},"documentation":{"id":6618,"nodeType":"StructuredDocumentation","src":"29273:145:28","text":" @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."},"id":6651,"implemented":true,"kind":"function","modifiers":[],"name":"log2","nameLocation":"29433:4:28","nodeType":"FunctionDefinition","parameters":{"id":6624,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6620,"mutability":"mutable","name":"value","nameLocation":"29446:5:28","nodeType":"VariableDeclaration","scope":6651,"src":"29438:13:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6619,"name":"uint256","nodeType":"ElementaryTypeName","src":"29438:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6623,"mutability":"mutable","name":"rounding","nameLocation":"29462:8:28","nodeType":"VariableDeclaration","scope":6651,"src":"29453:17:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$5339","typeString":"enum Math.Rounding"},"typeName":{"id":6622,"nodeType":"UserDefinedTypeName","pathNode":{"id":6621,"name":"Rounding","nameLocations":["29453:8:28"],"nodeType":"IdentifierPath","referencedDeclaration":5339,"src":"29453:8:28"},"referencedDeclaration":5339,"src":"29453:8:28","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$5339","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"29437:34:28"},"returnParameters":{"id":6627,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6626,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6651,"src":"29495:7:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6625,"name":"uint256","nodeType":"ElementaryTypeName","src":"29495:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"29494:9:28"},"scope":6948,"src":"29424:260:28","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6779,"nodeType":"Block","src":"29883:886:28","statements":[{"assignments":[6660],"declarations":[{"constant":false,"id":6660,"mutability":"mutable","name":"result","nameLocation":"29902:6:28","nodeType":"VariableDeclaration","scope":6779,"src":"29894:14:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6659,"name":"uint256","nodeType":"ElementaryTypeName","src":"29894:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6662,"initialValue":{"hexValue":"30","id":6661,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29911:1:28","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"29894:18:28"},{"id":6776,"nodeType":"UncheckedBlock","src":"29923:815:28","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6667,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6663,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6654,"src":"29952:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"},"id":6666,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":6664,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29961:2:28","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3634","id":6665,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29967:2:28","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"29961:8:28","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"}},"src":"29952:17:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6679,"nodeType":"IfStatement","src":"29948:106:28","trueBody":{"id":6678,"nodeType":"Block","src":"29971:83:28","statements":[{"expression":{"id":6672,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6668,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6654,"src":"29990:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"},"id":6671,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":6669,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29999:2:28","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3634","id":6670,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"30005:2:28","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"29999:8:28","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"}},"src":"29990:17:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6673,"nodeType":"ExpressionStatement","src":"29990:17:28"},{"expression":{"id":6676,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6674,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6660,"src":"30026:6:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3634","id":6675,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"30036:2:28","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"30026:12:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6677,"nodeType":"ExpressionStatement","src":"30026:12:28"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6684,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6680,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6654,"src":"30072:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"},"id":6683,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":6681,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"30081:2:28","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3332","id":6682,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"30087:2:28","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"30081:8:28","typeDescriptions":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"}},"src":"30072:17:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6696,"nodeType":"IfStatement","src":"30068:106:28","trueBody":{"id":6695,"nodeType":"Block","src":"30091:83:28","statements":[{"expression":{"id":6689,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6685,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6654,"src":"30110:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"},"id":6688,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":6686,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"30119:2:28","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3332","id":6687,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"30125:2:28","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"30119:8:28","typeDescriptions":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"}},"src":"30110:17:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6690,"nodeType":"ExpressionStatement","src":"30110:17:28"},{"expression":{"id":6693,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6691,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6660,"src":"30146:6:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3332","id":6692,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"30156:2:28","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"30146:12:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6694,"nodeType":"ExpressionStatement","src":"30146:12:28"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6701,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6697,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6654,"src":"30192:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"},"id":6700,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":6698,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"30201:2:28","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3136","id":6699,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"30207:2:28","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"30201:8:28","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"}},"src":"30192:17:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6713,"nodeType":"IfStatement","src":"30188:106:28","trueBody":{"id":6712,"nodeType":"Block","src":"30211:83:28","statements":[{"expression":{"id":6706,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6702,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6654,"src":"30230:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"},"id":6705,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":6703,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"30239:2:28","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3136","id":6704,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"30245:2:28","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"30239:8:28","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"}},"src":"30230:17:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6707,"nodeType":"ExpressionStatement","src":"30230:17:28"},{"expression":{"id":6710,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6708,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6660,"src":"30266:6:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3136","id":6709,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"30276:2:28","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"30266:12:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6711,"nodeType":"ExpressionStatement","src":"30266:12:28"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6718,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6714,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6654,"src":"30312:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"},"id":6717,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":6715,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"30321:2:28","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"38","id":6716,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"30327:1:28","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"30321:7:28","typeDescriptions":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"}},"src":"30312:16:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6730,"nodeType":"IfStatement","src":"30308:103:28","trueBody":{"id":6729,"nodeType":"Block","src":"30330:81:28","statements":[{"expression":{"id":6723,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6719,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6654,"src":"30349:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"},"id":6722,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":6720,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"30358:2:28","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"38","id":6721,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"30364:1:28","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"30358:7:28","typeDescriptions":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"}},"src":"30349:16:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6724,"nodeType":"ExpressionStatement","src":"30349:16:28"},{"expression":{"id":6727,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6725,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6660,"src":"30384:6:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"38","id":6726,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"30394:1:28","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"30384:11:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6728,"nodeType":"ExpressionStatement","src":"30384:11:28"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6735,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6731,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6654,"src":"30429:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"},"id":6734,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":6732,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"30438:2:28","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"34","id":6733,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"30444:1:28","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"30438:7:28","typeDescriptions":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"}},"src":"30429:16:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6747,"nodeType":"IfStatement","src":"30425:103:28","trueBody":{"id":6746,"nodeType":"Block","src":"30447:81:28","statements":[{"expression":{"id":6740,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6736,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6654,"src":"30466:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"},"id":6739,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":6737,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"30475:2:28","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"34","id":6738,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"30481:1:28","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"30475:7:28","typeDescriptions":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"}},"src":"30466:16:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6741,"nodeType":"ExpressionStatement","src":"30466:16:28"},{"expression":{"id":6744,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6742,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6660,"src":"30501:6:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"34","id":6743,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"30511:1:28","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"30501:11:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6745,"nodeType":"ExpressionStatement","src":"30501:11:28"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6752,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6748,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6654,"src":"30546:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"id":6751,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":6749,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"30555:2:28","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"32","id":6750,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"30561:1:28","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"30555:7:28","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"}},"src":"30546:16:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6764,"nodeType":"IfStatement","src":"30542:103:28","trueBody":{"id":6763,"nodeType":"Block","src":"30564:81:28","statements":[{"expression":{"id":6757,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6753,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6654,"src":"30583:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"id":6756,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":6754,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"30592:2:28","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"32","id":6755,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"30598:1:28","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"30592:7:28","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"}},"src":"30583:16:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6758,"nodeType":"ExpressionStatement","src":"30583:16:28"},{"expression":{"id":6761,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6759,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6660,"src":"30618:6:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"32","id":6760,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"30628:1:28","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"30618:11:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6762,"nodeType":"ExpressionStatement","src":"30618:11:28"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6769,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6765,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6654,"src":"30663:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"id":6768,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":6766,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"30672:2:28","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"31","id":6767,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"30678:1:28","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"30672:7:28","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"}},"src":"30663:16:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6775,"nodeType":"IfStatement","src":"30659:68:28","trueBody":{"id":6774,"nodeType":"Block","src":"30681:46:28","statements":[{"expression":{"id":6772,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6770,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6660,"src":"30700:6:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":6771,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"30710:1:28","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"30700:11:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6773,"nodeType":"ExpressionStatement","src":"30700:11:28"}]}}]},{"expression":{"id":6777,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6660,"src":"30755:6:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":6658,"id":6778,"nodeType":"Return","src":"30748:13:28"}]},"documentation":{"id":6652,"nodeType":"StructuredDocumentation","src":"29692:123:28","text":" @dev Return the log in base 10 of a positive value rounded towards zero.\n Returns 0 if given 0."},"id":6780,"implemented":true,"kind":"function","modifiers":[],"name":"log10","nameLocation":"29830:5:28","nodeType":"FunctionDefinition","parameters":{"id":6655,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6654,"mutability":"mutable","name":"value","nameLocation":"29844:5:28","nodeType":"VariableDeclaration","scope":6780,"src":"29836:13:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6653,"name":"uint256","nodeType":"ElementaryTypeName","src":"29836:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"29835:15:28"},"returnParameters":{"id":6658,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6657,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6780,"src":"29874:7:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6656,"name":"uint256","nodeType":"ElementaryTypeName","src":"29874:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"29873:9:28"},"scope":6948,"src":"29821:948:28","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6813,"nodeType":"Block","src":"31010:182:28","statements":[{"id":6812,"nodeType":"UncheckedBlock","src":"31021:164:28","statements":[{"assignments":[6792],"declarations":[{"constant":false,"id":6792,"mutability":"mutable","name":"result","nameLocation":"31054:6:28","nodeType":"VariableDeclaration","scope":6812,"src":"31046:14:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6791,"name":"uint256","nodeType":"ElementaryTypeName","src":"31046:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6796,"initialValue":{"arguments":[{"id":6794,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6783,"src":"31069:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6793,"name":"log10","nodeType":"Identifier","overloadedDeclarations":[6780,6814],"referencedDeclaration":6780,"src":"31063:5:28","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":6795,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31063:12:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"31046:29:28"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6810,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6797,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6792,"src":"31097:6:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":6808,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":6801,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6786,"src":"31139:8:28","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$5339","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$5339","typeString":"enum Math.Rounding"}],"id":6800,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6947,"src":"31122:16:28","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$5339_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":6802,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31122:26:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6807,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6805,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":6803,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31152:2:28","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"id":6804,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6792,"src":"31158:6:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31152:12:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":6806,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6783,"src":"31167:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31152:20:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"31122:50:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":6798,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8713,"src":"31106:8:28","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$8713_$","typeString":"type(library SafeCast)"}},"id":6799,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"31115:6:28","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":8712,"src":"31106:15:28","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":6809,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31106:67:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31097:76:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":6790,"id":6811,"nodeType":"Return","src":"31090:83:28"}]}]},"documentation":{"id":6781,"nodeType":"StructuredDocumentation","src":"30777:146:28","text":" @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."},"id":6814,"implemented":true,"kind":"function","modifiers":[],"name":"log10","nameLocation":"30938:5:28","nodeType":"FunctionDefinition","parameters":{"id":6787,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6783,"mutability":"mutable","name":"value","nameLocation":"30952:5:28","nodeType":"VariableDeclaration","scope":6814,"src":"30944:13:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6782,"name":"uint256","nodeType":"ElementaryTypeName","src":"30944:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6786,"mutability":"mutable","name":"rounding","nameLocation":"30968:8:28","nodeType":"VariableDeclaration","scope":6814,"src":"30959:17:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$5339","typeString":"enum Math.Rounding"},"typeName":{"id":6785,"nodeType":"UserDefinedTypeName","pathNode":{"id":6784,"name":"Rounding","nameLocations":["30959:8:28"],"nodeType":"IdentifierPath","referencedDeclaration":5339,"src":"30959:8:28"},"referencedDeclaration":5339,"src":"30959:8:28","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$5339","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"30943:34:28"},"returnParameters":{"id":6790,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6789,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6814,"src":"31001:7:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6788,"name":"uint256","nodeType":"ElementaryTypeName","src":"31001:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"31000:9:28"},"scope":6948,"src":"30929:263:28","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6890,"nodeType":"Block","src":"31518:686:28","statements":[{"expression":{"id":6831,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6822,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6820,"src":"31602:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6830,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6827,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6825,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6817,"src":"31622:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30786666666666666666666666666666666666666666666666666666666666666666","id":6826,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31626:34:28","typeDescriptions":{"typeIdentifier":"t_rational_340282366920938463463374607431768211455_by_1","typeString":"int_const 3402...(31 digits omitted)...1455"},"value":"0xffffffffffffffffffffffffffffffff"},"src":"31622:38:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":6823,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8713,"src":"31606:8:28","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$8713_$","typeString":"type(library SafeCast)"}},"id":6824,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"31615:6:28","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":8712,"src":"31606:15:28","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":6828,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31606:55:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"37","id":6829,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31665:1:28","typeDescriptions":{"typeIdentifier":"t_rational_7_by_1","typeString":"int_const 7"},"value":"7"},"src":"31606:60:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31602:64:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6832,"nodeType":"ExpressionStatement","src":"31602:64:28"},{"expression":{"id":6845,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6833,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6820,"src":"31744:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6844,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6841,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6838,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6836,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6817,"src":"31766:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":6837,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6820,"src":"31771:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31766:6:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":6839,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"31765:8:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"307866666666666666666666666666666666","id":6840,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31776:18:28","typeDescriptions":{"typeIdentifier":"t_rational_18446744073709551615_by_1","typeString":"int_const 18446744073709551615"},"value":"0xffffffffffffffff"},"src":"31765:29:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":6834,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8713,"src":"31749:8:28","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$8713_$","typeString":"type(library SafeCast)"}},"id":6835,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"31758:6:28","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":8712,"src":"31749:15:28","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":6842,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31749:46:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"36","id":6843,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31799:1:28","typeDescriptions":{"typeIdentifier":"t_rational_6_by_1","typeString":"int_const 6"},"value":"6"},"src":"31749:51:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31744:56:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6846,"nodeType":"ExpressionStatement","src":"31744:56:28"},{"expression":{"id":6859,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6847,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6820,"src":"31877:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6858,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6855,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6852,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6850,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6817,"src":"31899:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":6851,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6820,"src":"31904:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31899:6:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":6853,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"31898:8:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30786666666666666666","id":6854,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31909:10:28","typeDescriptions":{"typeIdentifier":"t_rational_4294967295_by_1","typeString":"int_const 4294967295"},"value":"0xffffffff"},"src":"31898:21:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":6848,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8713,"src":"31882:8:28","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$8713_$","typeString":"type(library SafeCast)"}},"id":6849,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"31891:6:28","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":8712,"src":"31882:15:28","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":6856,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31882:38:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"35","id":6857,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31924:1:28","typeDescriptions":{"typeIdentifier":"t_rational_5_by_1","typeString":"int_const 5"},"value":"5"},"src":"31882:43:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31877:48:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6860,"nodeType":"ExpressionStatement","src":"31877:48:28"},{"expression":{"id":6873,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6861,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6820,"src":"32002:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6872,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6869,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6866,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6864,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6817,"src":"32024:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":6865,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6820,"src":"32029:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"32024:6:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":6867,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"32023:8:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"307866666666","id":6868,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"32034:6:28","typeDescriptions":{"typeIdentifier":"t_rational_65535_by_1","typeString":"int_const 65535"},"value":"0xffff"},"src":"32023:17:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":6862,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8713,"src":"32007:8:28","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$8713_$","typeString":"type(library SafeCast)"}},"id":6863,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"32016:6:28","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":8712,"src":"32007:15:28","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":6870,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"32007:34:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"34","id":6871,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"32045:1:28","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"32007:39:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"32002:44:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6874,"nodeType":"ExpressionStatement","src":"32002:44:28"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6888,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6877,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6875,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6820,"src":"32154:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"33","id":6876,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"32159:1:28","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"src":"32154:6:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":6878,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"32153:8:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6886,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6883,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6881,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6817,"src":"32181:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":6882,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6820,"src":"32186:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"32181:6:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":6884,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"32180:8:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30786666","id":6885,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"32191:4:28","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"0xff"},"src":"32180:15:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":6879,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8713,"src":"32164:8:28","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$8713_$","typeString":"type(library SafeCast)"}},"id":6880,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"32173:6:28","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":8712,"src":"32164:15:28","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":6887,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"32164:32:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"32153:43:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":6821,"id":6889,"nodeType":"Return","src":"32146:50:28"}]},"documentation":{"id":6815,"nodeType":"StructuredDocumentation","src":"31200:251:28","text":" @dev Return the log in base 256 of a positive value rounded towards zero.\n Returns 0 if given 0.\n Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string."},"id":6891,"implemented":true,"kind":"function","modifiers":[],"name":"log256","nameLocation":"31466:6:28","nodeType":"FunctionDefinition","parameters":{"id":6818,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6817,"mutability":"mutable","name":"x","nameLocation":"31481:1:28","nodeType":"VariableDeclaration","scope":6891,"src":"31473:9:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6816,"name":"uint256","nodeType":"ElementaryTypeName","src":"31473:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"31472:11:28"},"returnParameters":{"id":6821,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6820,"mutability":"mutable","name":"r","nameLocation":"31515:1:28","nodeType":"VariableDeclaration","scope":6891,"src":"31507:9:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6819,"name":"uint256","nodeType":"ElementaryTypeName","src":"31507:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"31506:11:28"},"scope":6948,"src":"31457:747:28","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6927,"nodeType":"Block","src":"32447:189:28","statements":[{"id":6926,"nodeType":"UncheckedBlock","src":"32458:171:28","statements":[{"assignments":[6903],"declarations":[{"constant":false,"id":6903,"mutability":"mutable","name":"result","nameLocation":"32491:6:28","nodeType":"VariableDeclaration","scope":6926,"src":"32483:14:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6902,"name":"uint256","nodeType":"ElementaryTypeName","src":"32483:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6907,"initialValue":{"arguments":[{"id":6905,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6894,"src":"32507:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6904,"name":"log256","nodeType":"Identifier","overloadedDeclarations":[6891,6928],"referencedDeclaration":6891,"src":"32500:6:28","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":6906,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"32500:13:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"32483:30:28"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6924,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6908,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6903,"src":"32535:6:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":6922,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":6912,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6897,"src":"32577:8:28","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$5339","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$5339","typeString":"enum Math.Rounding"}],"id":6911,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6947,"src":"32560:16:28","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$5339_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":6913,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"32560:26:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6921,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6919,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":6914,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"32590:1:28","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6917,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6915,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6903,"src":"32596:6:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"33","id":6916,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"32606:1:28","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"src":"32596:11:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":6918,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"32595:13:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"32590:18:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":6920,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6894,"src":"32611:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"32590:26:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"32560:56:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":6909,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8713,"src":"32544:8:28","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$8713_$","typeString":"type(library SafeCast)"}},"id":6910,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"32553:6:28","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":8712,"src":"32544:15:28","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":6923,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"32544:73:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"32535:82:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":6901,"id":6925,"nodeType":"Return","src":"32528:89:28"}]}]},"documentation":{"id":6892,"nodeType":"StructuredDocumentation","src":"32212:147:28","text":" @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."},"id":6928,"implemented":true,"kind":"function","modifiers":[],"name":"log256","nameLocation":"32374:6:28","nodeType":"FunctionDefinition","parameters":{"id":6898,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6894,"mutability":"mutable","name":"value","nameLocation":"32389:5:28","nodeType":"VariableDeclaration","scope":6928,"src":"32381:13:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6893,"name":"uint256","nodeType":"ElementaryTypeName","src":"32381:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6897,"mutability":"mutable","name":"rounding","nameLocation":"32405:8:28","nodeType":"VariableDeclaration","scope":6928,"src":"32396:17:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$5339","typeString":"enum Math.Rounding"},"typeName":{"id":6896,"nodeType":"UserDefinedTypeName","pathNode":{"id":6895,"name":"Rounding","nameLocations":["32396:8:28"],"nodeType":"IdentifierPath","referencedDeclaration":5339,"src":"32396:8:28"},"referencedDeclaration":5339,"src":"32396:8:28","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$5339","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"32380:34:28"},"returnParameters":{"id":6901,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6900,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6928,"src":"32438:7:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6899,"name":"uint256","nodeType":"ElementaryTypeName","src":"32438:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"32437:9:28"},"scope":6948,"src":"32365:271:28","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6946,"nodeType":"Block","src":"32839:50:28","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":6944,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":6942,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":6939,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6932,"src":"32863:8:28","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$5339","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$5339","typeString":"enum Math.Rounding"}],"id":6938,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"32857:5:28","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":6937,"name":"uint8","nodeType":"ElementaryTypeName","src":"32857:5:28","typeDescriptions":{}}},"id":6940,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"32857:15:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"%","rightExpression":{"hexValue":"32","id":6941,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"32875:1:28","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"32857:19:28","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"31","id":6943,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"32880:1:28","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"32857:24:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":6936,"id":6945,"nodeType":"Return","src":"32850:31:28"}]},"documentation":{"id":6929,"nodeType":"StructuredDocumentation","src":"32644:115:28","text":" @dev Returns whether a provided rounding mode is considered rounding up for unsigned integers."},"id":6947,"implemented":true,"kind":"function","modifiers":[],"name":"unsignedRoundsUp","nameLocation":"32774:16:28","nodeType":"FunctionDefinition","parameters":{"id":6933,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6932,"mutability":"mutable","name":"rounding","nameLocation":"32800:8:28","nodeType":"VariableDeclaration","scope":6947,"src":"32791:17:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$5339","typeString":"enum Math.Rounding"},"typeName":{"id":6931,"nodeType":"UserDefinedTypeName","pathNode":{"id":6930,"name":"Rounding","nameLocations":["32791:8:28"],"nodeType":"IdentifierPath","referencedDeclaration":5339,"src":"32791:8:28"},"referencedDeclaration":5339,"src":"32791:8:28","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$5339","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"32790:19:28"},"returnParameters":{"id":6936,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6935,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6947,"src":"32833:4:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":6934,"name":"bool","nodeType":"ElementaryTypeName","src":"32833:4:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"32832:6:28"},"scope":6948,"src":"32765:124:28","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":6949,"src":"292:32600:28","usedErrors":[],"usedEvents":[]}],"src":"106:32788:28"},"id":28},"@openzeppelin/contracts/utils/math/SafeCast.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/math/SafeCast.sol","exportedSymbols":{"SafeCast":[8713]},"id":8714,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":6950,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"196:24:29"},{"abstract":false,"baseContracts":[],"canonicalName":"SafeCast","contractDependencies":[],"contractKind":"library","documentation":{"id":6951,"nodeType":"StructuredDocumentation","src":"224:561:29","text":" @dev Wrappers over Solidity's uintXX/intXX/bool casting operators with added overflow\n checks.\n Downcasting from uint256/int256 in Solidity does not revert on overflow. This can\n easily result in undesired exploitation or bugs, since developers usually\n assume that overflows raise errors. `SafeCast` restores this intuition by\n reverting the transaction when such an operation overflows.\n Using this library instead of the unchecked operations eliminates an entire\n class of bugs, so it's recommended to use it always."},"fullyImplemented":true,"id":8713,"linearizedBaseContracts":[8713],"name":"SafeCast","nameLocation":"795:8:29","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":6952,"nodeType":"StructuredDocumentation","src":"811:70:29","text":" @dev Value doesn't fit in an uint of `bits` size."},"errorSelector":"6dfcc650","id":6958,"name":"SafeCastOverflowedUintDowncast","nameLocation":"893:30:29","nodeType":"ErrorDefinition","parameters":{"id":6957,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6954,"mutability":"mutable","name":"bits","nameLocation":"930:4:29","nodeType":"VariableDeclaration","scope":6958,"src":"924:10:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":6953,"name":"uint8","nodeType":"ElementaryTypeName","src":"924:5:29","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":6956,"mutability":"mutable","name":"value","nameLocation":"944:5:29","nodeType":"VariableDeclaration","scope":6958,"src":"936:13:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6955,"name":"uint256","nodeType":"ElementaryTypeName","src":"936:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"923:27:29"},"src":"887:64:29"},{"documentation":{"id":6959,"nodeType":"StructuredDocumentation","src":"959:77:29","text":" @dev An int value doesn't fit in an uint of `bits` size."},"errorSelector":"a8ce4432","id":6963,"name":"SafeCastOverflowedIntToUint","nameLocation":"1048:27:29","nodeType":"ErrorDefinition","parameters":{"id":6962,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6961,"mutability":"mutable","name":"value","nameLocation":"1083:5:29","nodeType":"VariableDeclaration","scope":6963,"src":"1076:12:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6960,"name":"int256","nodeType":"ElementaryTypeName","src":"1076:6:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1075:14:29"},"src":"1042:48:29"},{"documentation":{"id":6964,"nodeType":"StructuredDocumentation","src":"1098:69:29","text":" @dev Value doesn't fit in an int of `bits` size."},"errorSelector":"327269a7","id":6970,"name":"SafeCastOverflowedIntDowncast","nameLocation":"1179:29:29","nodeType":"ErrorDefinition","parameters":{"id":6969,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6966,"mutability":"mutable","name":"bits","nameLocation":"1215:4:29","nodeType":"VariableDeclaration","scope":6970,"src":"1209:10:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":6965,"name":"uint8","nodeType":"ElementaryTypeName","src":"1209:5:29","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":6968,"mutability":"mutable","name":"value","nameLocation":"1228:5:29","nodeType":"VariableDeclaration","scope":6970,"src":"1221:12:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6967,"name":"int256","nodeType":"ElementaryTypeName","src":"1221:6:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1208:26:29"},"src":"1173:62:29"},{"documentation":{"id":6971,"nodeType":"StructuredDocumentation","src":"1243:77:29","text":" @dev An uint value doesn't fit in an int of `bits` size."},"errorSelector":"24775e06","id":6975,"name":"SafeCastOverflowedUintToInt","nameLocation":"1332:27:29","nodeType":"ErrorDefinition","parameters":{"id":6974,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6973,"mutability":"mutable","name":"value","nameLocation":"1368:5:29","nodeType":"VariableDeclaration","scope":6975,"src":"1360:13:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6972,"name":"uint256","nodeType":"ElementaryTypeName","src":"1360:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1359:15:29"},"src":"1326:49:29"},{"body":{"id":7002,"nodeType":"Block","src":"1744:157:29","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6989,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6983,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6978,"src":"1759:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6986,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1772:7:29","typeDescriptions":{"typeIdentifier":"t_type$_t_uint248_$","typeString":"type(uint248)"},"typeName":{"id":6985,"name":"uint248","nodeType":"ElementaryTypeName","src":"1772:7:29","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint248_$","typeString":"type(uint248)"}],"id":6984,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"1767:4:29","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6987,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1767:13:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint248","typeString":"type(uint248)"}},"id":6988,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1781:3:29","memberName":"max","nodeType":"MemberAccess","src":"1767:17:29","typeDescriptions":{"typeIdentifier":"t_uint248","typeString":"uint248"}},"src":"1759:25:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6996,"nodeType":"IfStatement","src":"1755:107:29","trueBody":{"id":6995,"nodeType":"Block","src":"1786:76:29","statements":[{"errorCall":{"arguments":[{"hexValue":"323438","id":6991,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1839:3:29","typeDescriptions":{"typeIdentifier":"t_rational_248_by_1","typeString":"int_const 248"},"value":"248"},{"id":6992,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6978,"src":"1844:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_248_by_1","typeString":"int_const 248"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6990,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6958,"src":"1808:30:29","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":6993,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1808:42:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6994,"nodeType":"RevertStatement","src":"1801:49:29"}]}},{"expression":{"arguments":[{"id":6999,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6978,"src":"1887:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6998,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1879:7:29","typeDescriptions":{"typeIdentifier":"t_type$_t_uint248_$","typeString":"type(uint248)"},"typeName":{"id":6997,"name":"uint248","nodeType":"ElementaryTypeName","src":"1879:7:29","typeDescriptions":{}}},"id":7000,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1879:14:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint248","typeString":"uint248"}},"functionReturnParameters":6982,"id":7001,"nodeType":"Return","src":"1872:21:29"}]},"documentation":{"id":6976,"nodeType":"StructuredDocumentation","src":"1383:289:29","text":" @dev Returns the downcasted uint248 from uint256, reverting on\n overflow (when the input is greater than largest uint248).\n Counterpart to Solidity's `uint248` operator.\n Requirements:\n - input must fit into 248 bits"},"id":7003,"implemented":true,"kind":"function","modifiers":[],"name":"toUint248","nameLocation":"1687:9:29","nodeType":"FunctionDefinition","parameters":{"id":6979,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6978,"mutability":"mutable","name":"value","nameLocation":"1705:5:29","nodeType":"VariableDeclaration","scope":7003,"src":"1697:13:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6977,"name":"uint256","nodeType":"ElementaryTypeName","src":"1697:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1696:15:29"},"returnParameters":{"id":6982,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6981,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7003,"src":"1735:7:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint248","typeString":"uint248"},"typeName":{"id":6980,"name":"uint248","nodeType":"ElementaryTypeName","src":"1735:7:29","typeDescriptions":{"typeIdentifier":"t_uint248","typeString":"uint248"}},"visibility":"internal"}],"src":"1734:9:29"},"scope":8713,"src":"1678:223:29","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7030,"nodeType":"Block","src":"2270:157:29","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7017,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7011,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7006,"src":"2285:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":7014,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2298:7:29","typeDescriptions":{"typeIdentifier":"t_type$_t_uint240_$","typeString":"type(uint240)"},"typeName":{"id":7013,"name":"uint240","nodeType":"ElementaryTypeName","src":"2298:7:29","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint240_$","typeString":"type(uint240)"}],"id":7012,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"2293:4:29","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":7015,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2293:13:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint240","typeString":"type(uint240)"}},"id":7016,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2307:3:29","memberName":"max","nodeType":"MemberAccess","src":"2293:17:29","typeDescriptions":{"typeIdentifier":"t_uint240","typeString":"uint240"}},"src":"2285:25:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7024,"nodeType":"IfStatement","src":"2281:107:29","trueBody":{"id":7023,"nodeType":"Block","src":"2312:76:29","statements":[{"errorCall":{"arguments":[{"hexValue":"323430","id":7019,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2365:3:29","typeDescriptions":{"typeIdentifier":"t_rational_240_by_1","typeString":"int_const 240"},"value":"240"},{"id":7020,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7006,"src":"2370:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_240_by_1","typeString":"int_const 240"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7018,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6958,"src":"2334:30:29","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":7021,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2334:42:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":7022,"nodeType":"RevertStatement","src":"2327:49:29"}]}},{"expression":{"arguments":[{"id":7027,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7006,"src":"2413:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7026,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2405:7:29","typeDescriptions":{"typeIdentifier":"t_type$_t_uint240_$","typeString":"type(uint240)"},"typeName":{"id":7025,"name":"uint240","nodeType":"ElementaryTypeName","src":"2405:7:29","typeDescriptions":{}}},"id":7028,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2405:14:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint240","typeString":"uint240"}},"functionReturnParameters":7010,"id":7029,"nodeType":"Return","src":"2398:21:29"}]},"documentation":{"id":7004,"nodeType":"StructuredDocumentation","src":"1909:289:29","text":" @dev Returns the downcasted uint240 from uint256, reverting on\n overflow (when the input is greater than largest uint240).\n Counterpart to Solidity's `uint240` operator.\n Requirements:\n - input must fit into 240 bits"},"id":7031,"implemented":true,"kind":"function","modifiers":[],"name":"toUint240","nameLocation":"2213:9:29","nodeType":"FunctionDefinition","parameters":{"id":7007,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7006,"mutability":"mutable","name":"value","nameLocation":"2231:5:29","nodeType":"VariableDeclaration","scope":7031,"src":"2223:13:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7005,"name":"uint256","nodeType":"ElementaryTypeName","src":"2223:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2222:15:29"},"returnParameters":{"id":7010,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7009,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7031,"src":"2261:7:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint240","typeString":"uint240"},"typeName":{"id":7008,"name":"uint240","nodeType":"ElementaryTypeName","src":"2261:7:29","typeDescriptions":{"typeIdentifier":"t_uint240","typeString":"uint240"}},"visibility":"internal"}],"src":"2260:9:29"},"scope":8713,"src":"2204:223:29","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7058,"nodeType":"Block","src":"2796:157:29","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7045,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7039,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7034,"src":"2811:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":7042,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2824:7:29","typeDescriptions":{"typeIdentifier":"t_type$_t_uint232_$","typeString":"type(uint232)"},"typeName":{"id":7041,"name":"uint232","nodeType":"ElementaryTypeName","src":"2824:7:29","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint232_$","typeString":"type(uint232)"}],"id":7040,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"2819:4:29","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":7043,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2819:13:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint232","typeString":"type(uint232)"}},"id":7044,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2833:3:29","memberName":"max","nodeType":"MemberAccess","src":"2819:17:29","typeDescriptions":{"typeIdentifier":"t_uint232","typeString":"uint232"}},"src":"2811:25:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7052,"nodeType":"IfStatement","src":"2807:107:29","trueBody":{"id":7051,"nodeType":"Block","src":"2838:76:29","statements":[{"errorCall":{"arguments":[{"hexValue":"323332","id":7047,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2891:3:29","typeDescriptions":{"typeIdentifier":"t_rational_232_by_1","typeString":"int_const 232"},"value":"232"},{"id":7048,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7034,"src":"2896:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_232_by_1","typeString":"int_const 232"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7046,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6958,"src":"2860:30:29","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":7049,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2860:42:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":7050,"nodeType":"RevertStatement","src":"2853:49:29"}]}},{"expression":{"arguments":[{"id":7055,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7034,"src":"2939:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7054,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2931:7:29","typeDescriptions":{"typeIdentifier":"t_type$_t_uint232_$","typeString":"type(uint232)"},"typeName":{"id":7053,"name":"uint232","nodeType":"ElementaryTypeName","src":"2931:7:29","typeDescriptions":{}}},"id":7056,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2931:14:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint232","typeString":"uint232"}},"functionReturnParameters":7038,"id":7057,"nodeType":"Return","src":"2924:21:29"}]},"documentation":{"id":7032,"nodeType":"StructuredDocumentation","src":"2435:289:29","text":" @dev Returns the downcasted uint232 from uint256, reverting on\n overflow (when the input is greater than largest uint232).\n Counterpart to Solidity's `uint232` operator.\n Requirements:\n - input must fit into 232 bits"},"id":7059,"implemented":true,"kind":"function","modifiers":[],"name":"toUint232","nameLocation":"2739:9:29","nodeType":"FunctionDefinition","parameters":{"id":7035,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7034,"mutability":"mutable","name":"value","nameLocation":"2757:5:29","nodeType":"VariableDeclaration","scope":7059,"src":"2749:13:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7033,"name":"uint256","nodeType":"ElementaryTypeName","src":"2749:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2748:15:29"},"returnParameters":{"id":7038,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7037,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7059,"src":"2787:7:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint232","typeString":"uint232"},"typeName":{"id":7036,"name":"uint232","nodeType":"ElementaryTypeName","src":"2787:7:29","typeDescriptions":{"typeIdentifier":"t_uint232","typeString":"uint232"}},"visibility":"internal"}],"src":"2786:9:29"},"scope":8713,"src":"2730:223:29","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7086,"nodeType":"Block","src":"3322:157:29","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7073,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7067,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7062,"src":"3337:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":7070,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3350:7:29","typeDescriptions":{"typeIdentifier":"t_type$_t_uint224_$","typeString":"type(uint224)"},"typeName":{"id":7069,"name":"uint224","nodeType":"ElementaryTypeName","src":"3350:7:29","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint224_$","typeString":"type(uint224)"}],"id":7068,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"3345:4:29","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":7071,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3345:13:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint224","typeString":"type(uint224)"}},"id":7072,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3359:3:29","memberName":"max","nodeType":"MemberAccess","src":"3345:17:29","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"src":"3337:25:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7080,"nodeType":"IfStatement","src":"3333:107:29","trueBody":{"id":7079,"nodeType":"Block","src":"3364:76:29","statements":[{"errorCall":{"arguments":[{"hexValue":"323234","id":7075,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3417:3:29","typeDescriptions":{"typeIdentifier":"t_rational_224_by_1","typeString":"int_const 224"},"value":"224"},{"id":7076,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7062,"src":"3422:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_224_by_1","typeString":"int_const 224"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7074,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6958,"src":"3386:30:29","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":7077,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3386:42:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":7078,"nodeType":"RevertStatement","src":"3379:49:29"}]}},{"expression":{"arguments":[{"id":7083,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7062,"src":"3465:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7082,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3457:7:29","typeDescriptions":{"typeIdentifier":"t_type$_t_uint224_$","typeString":"type(uint224)"},"typeName":{"id":7081,"name":"uint224","nodeType":"ElementaryTypeName","src":"3457:7:29","typeDescriptions":{}}},"id":7084,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3457:14:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"functionReturnParameters":7066,"id":7085,"nodeType":"Return","src":"3450:21:29"}]},"documentation":{"id":7060,"nodeType":"StructuredDocumentation","src":"2961:289:29","text":" @dev Returns the downcasted uint224 from uint256, reverting on\n overflow (when the input is greater than largest uint224).\n Counterpart to Solidity's `uint224` operator.\n Requirements:\n - input must fit into 224 bits"},"id":7087,"implemented":true,"kind":"function","modifiers":[],"name":"toUint224","nameLocation":"3265:9:29","nodeType":"FunctionDefinition","parameters":{"id":7063,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7062,"mutability":"mutable","name":"value","nameLocation":"3283:5:29","nodeType":"VariableDeclaration","scope":7087,"src":"3275:13:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7061,"name":"uint256","nodeType":"ElementaryTypeName","src":"3275:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3274:15:29"},"returnParameters":{"id":7066,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7065,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7087,"src":"3313:7:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"},"typeName":{"id":7064,"name":"uint224","nodeType":"ElementaryTypeName","src":"3313:7:29","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"visibility":"internal"}],"src":"3312:9:29"},"scope":8713,"src":"3256:223:29","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7114,"nodeType":"Block","src":"3848:157:29","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7101,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7095,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7090,"src":"3863:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":7098,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3876:7:29","typeDescriptions":{"typeIdentifier":"t_type$_t_uint216_$","typeString":"type(uint216)"},"typeName":{"id":7097,"name":"uint216","nodeType":"ElementaryTypeName","src":"3876:7:29","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint216_$","typeString":"type(uint216)"}],"id":7096,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"3871:4:29","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":7099,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3871:13:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint216","typeString":"type(uint216)"}},"id":7100,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3885:3:29","memberName":"max","nodeType":"MemberAccess","src":"3871:17:29","typeDescriptions":{"typeIdentifier":"t_uint216","typeString":"uint216"}},"src":"3863:25:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7108,"nodeType":"IfStatement","src":"3859:107:29","trueBody":{"id":7107,"nodeType":"Block","src":"3890:76:29","statements":[{"errorCall":{"arguments":[{"hexValue":"323136","id":7103,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3943:3:29","typeDescriptions":{"typeIdentifier":"t_rational_216_by_1","typeString":"int_const 216"},"value":"216"},{"id":7104,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7090,"src":"3948:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_216_by_1","typeString":"int_const 216"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7102,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6958,"src":"3912:30:29","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":7105,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3912:42:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":7106,"nodeType":"RevertStatement","src":"3905:49:29"}]}},{"expression":{"arguments":[{"id":7111,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7090,"src":"3991:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7110,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3983:7:29","typeDescriptions":{"typeIdentifier":"t_type$_t_uint216_$","typeString":"type(uint216)"},"typeName":{"id":7109,"name":"uint216","nodeType":"ElementaryTypeName","src":"3983:7:29","typeDescriptions":{}}},"id":7112,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3983:14:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint216","typeString":"uint216"}},"functionReturnParameters":7094,"id":7113,"nodeType":"Return","src":"3976:21:29"}]},"documentation":{"id":7088,"nodeType":"StructuredDocumentation","src":"3487:289:29","text":" @dev Returns the downcasted uint216 from uint256, reverting on\n overflow (when the input is greater than largest uint216).\n Counterpart to Solidity's `uint216` operator.\n Requirements:\n - input must fit into 216 bits"},"id":7115,"implemented":true,"kind":"function","modifiers":[],"name":"toUint216","nameLocation":"3791:9:29","nodeType":"FunctionDefinition","parameters":{"id":7091,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7090,"mutability":"mutable","name":"value","nameLocation":"3809:5:29","nodeType":"VariableDeclaration","scope":7115,"src":"3801:13:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7089,"name":"uint256","nodeType":"ElementaryTypeName","src":"3801:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3800:15:29"},"returnParameters":{"id":7094,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7093,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7115,"src":"3839:7:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint216","typeString":"uint216"},"typeName":{"id":7092,"name":"uint216","nodeType":"ElementaryTypeName","src":"3839:7:29","typeDescriptions":{"typeIdentifier":"t_uint216","typeString":"uint216"}},"visibility":"internal"}],"src":"3838:9:29"},"scope":8713,"src":"3782:223:29","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7142,"nodeType":"Block","src":"4374:157:29","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7129,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7123,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7118,"src":"4389:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":7126,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4402:7:29","typeDescriptions":{"typeIdentifier":"t_type$_t_uint208_$","typeString":"type(uint208)"},"typeName":{"id":7125,"name":"uint208","nodeType":"ElementaryTypeName","src":"4402:7:29","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint208_$","typeString":"type(uint208)"}],"id":7124,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"4397:4:29","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":7127,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4397:13:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint208","typeString":"type(uint208)"}},"id":7128,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4411:3:29","memberName":"max","nodeType":"MemberAccess","src":"4397:17:29","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"src":"4389:25:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7136,"nodeType":"IfStatement","src":"4385:107:29","trueBody":{"id":7135,"nodeType":"Block","src":"4416:76:29","statements":[{"errorCall":{"arguments":[{"hexValue":"323038","id":7131,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4469:3:29","typeDescriptions":{"typeIdentifier":"t_rational_208_by_1","typeString":"int_const 208"},"value":"208"},{"id":7132,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7118,"src":"4474:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_208_by_1","typeString":"int_const 208"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7130,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6958,"src":"4438:30:29","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":7133,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4438:42:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":7134,"nodeType":"RevertStatement","src":"4431:49:29"}]}},{"expression":{"arguments":[{"id":7139,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7118,"src":"4517:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7138,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4509:7:29","typeDescriptions":{"typeIdentifier":"t_type$_t_uint208_$","typeString":"type(uint208)"},"typeName":{"id":7137,"name":"uint208","nodeType":"ElementaryTypeName","src":"4509:7:29","typeDescriptions":{}}},"id":7140,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4509:14:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"functionReturnParameters":7122,"id":7141,"nodeType":"Return","src":"4502:21:29"}]},"documentation":{"id":7116,"nodeType":"StructuredDocumentation","src":"4013:289:29","text":" @dev Returns the downcasted uint208 from uint256, reverting on\n overflow (when the input is greater than largest uint208).\n Counterpart to Solidity's `uint208` operator.\n Requirements:\n - input must fit into 208 bits"},"id":7143,"implemented":true,"kind":"function","modifiers":[],"name":"toUint208","nameLocation":"4317:9:29","nodeType":"FunctionDefinition","parameters":{"id":7119,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7118,"mutability":"mutable","name":"value","nameLocation":"4335:5:29","nodeType":"VariableDeclaration","scope":7143,"src":"4327:13:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7117,"name":"uint256","nodeType":"ElementaryTypeName","src":"4327:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4326:15:29"},"returnParameters":{"id":7122,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7121,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7143,"src":"4365:7:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"},"typeName":{"id":7120,"name":"uint208","nodeType":"ElementaryTypeName","src":"4365:7:29","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"visibility":"internal"}],"src":"4364:9:29"},"scope":8713,"src":"4308:223:29","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7170,"nodeType":"Block","src":"4900:157:29","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7157,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7151,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7146,"src":"4915:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":7154,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4928:7:29","typeDescriptions":{"typeIdentifier":"t_type$_t_uint200_$","typeString":"type(uint200)"},"typeName":{"id":7153,"name":"uint200","nodeType":"ElementaryTypeName","src":"4928:7:29","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint200_$","typeString":"type(uint200)"}],"id":7152,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"4923:4:29","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":7155,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4923:13:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint200","typeString":"type(uint200)"}},"id":7156,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4937:3:29","memberName":"max","nodeType":"MemberAccess","src":"4923:17:29","typeDescriptions":{"typeIdentifier":"t_uint200","typeString":"uint200"}},"src":"4915:25:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7164,"nodeType":"IfStatement","src":"4911:107:29","trueBody":{"id":7163,"nodeType":"Block","src":"4942:76:29","statements":[{"errorCall":{"arguments":[{"hexValue":"323030","id":7159,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4995:3:29","typeDescriptions":{"typeIdentifier":"t_rational_200_by_1","typeString":"int_const 200"},"value":"200"},{"id":7160,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7146,"src":"5000:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_200_by_1","typeString":"int_const 200"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7158,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6958,"src":"4964:30:29","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":7161,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4964:42:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":7162,"nodeType":"RevertStatement","src":"4957:49:29"}]}},{"expression":{"arguments":[{"id":7167,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7146,"src":"5043:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7166,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5035:7:29","typeDescriptions":{"typeIdentifier":"t_type$_t_uint200_$","typeString":"type(uint200)"},"typeName":{"id":7165,"name":"uint200","nodeType":"ElementaryTypeName","src":"5035:7:29","typeDescriptions":{}}},"id":7168,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5035:14:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint200","typeString":"uint200"}},"functionReturnParameters":7150,"id":7169,"nodeType":"Return","src":"5028:21:29"}]},"documentation":{"id":7144,"nodeType":"StructuredDocumentation","src":"4539:289:29","text":" @dev Returns the downcasted uint200 from uint256, reverting on\n overflow (when the input is greater than largest uint200).\n Counterpart to Solidity's `uint200` operator.\n Requirements:\n - input must fit into 200 bits"},"id":7171,"implemented":true,"kind":"function","modifiers":[],"name":"toUint200","nameLocation":"4843:9:29","nodeType":"FunctionDefinition","parameters":{"id":7147,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7146,"mutability":"mutable","name":"value","nameLocation":"4861:5:29","nodeType":"VariableDeclaration","scope":7171,"src":"4853:13:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7145,"name":"uint256","nodeType":"ElementaryTypeName","src":"4853:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4852:15:29"},"returnParameters":{"id":7150,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7149,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7171,"src":"4891:7:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint200","typeString":"uint200"},"typeName":{"id":7148,"name":"uint200","nodeType":"ElementaryTypeName","src":"4891:7:29","typeDescriptions":{"typeIdentifier":"t_uint200","typeString":"uint200"}},"visibility":"internal"}],"src":"4890:9:29"},"scope":8713,"src":"4834:223:29","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7198,"nodeType":"Block","src":"5426:157:29","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7185,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7179,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7174,"src":"5441:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":7182,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5454:7:29","typeDescriptions":{"typeIdentifier":"t_type$_t_uint192_$","typeString":"type(uint192)"},"typeName":{"id":7181,"name":"uint192","nodeType":"ElementaryTypeName","src":"5454:7:29","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint192_$","typeString":"type(uint192)"}],"id":7180,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"5449:4:29","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":7183,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5449:13:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint192","typeString":"type(uint192)"}},"id":7184,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"5463:3:29","memberName":"max","nodeType":"MemberAccess","src":"5449:17:29","typeDescriptions":{"typeIdentifier":"t_uint192","typeString":"uint192"}},"src":"5441:25:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7192,"nodeType":"IfStatement","src":"5437:107:29","trueBody":{"id":7191,"nodeType":"Block","src":"5468:76:29","statements":[{"errorCall":{"arguments":[{"hexValue":"313932","id":7187,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5521:3:29","typeDescriptions":{"typeIdentifier":"t_rational_192_by_1","typeString":"int_const 192"},"value":"192"},{"id":7188,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7174,"src":"5526:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_192_by_1","typeString":"int_const 192"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7186,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6958,"src":"5490:30:29","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":7189,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5490:42:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":7190,"nodeType":"RevertStatement","src":"5483:49:29"}]}},{"expression":{"arguments":[{"id":7195,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7174,"src":"5569:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7194,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5561:7:29","typeDescriptions":{"typeIdentifier":"t_type$_t_uint192_$","typeString":"type(uint192)"},"typeName":{"id":7193,"name":"uint192","nodeType":"ElementaryTypeName","src":"5561:7:29","typeDescriptions":{}}},"id":7196,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5561:14:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint192","typeString":"uint192"}},"functionReturnParameters":7178,"id":7197,"nodeType":"Return","src":"5554:21:29"}]},"documentation":{"id":7172,"nodeType":"StructuredDocumentation","src":"5065:289:29","text":" @dev Returns the downcasted uint192 from uint256, reverting on\n overflow (when the input is greater than largest uint192).\n Counterpart to Solidity's `uint192` operator.\n Requirements:\n - input must fit into 192 bits"},"id":7199,"implemented":true,"kind":"function","modifiers":[],"name":"toUint192","nameLocation":"5369:9:29","nodeType":"FunctionDefinition","parameters":{"id":7175,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7174,"mutability":"mutable","name":"value","nameLocation":"5387:5:29","nodeType":"VariableDeclaration","scope":7199,"src":"5379:13:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7173,"name":"uint256","nodeType":"ElementaryTypeName","src":"5379:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5378:15:29"},"returnParameters":{"id":7178,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7177,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7199,"src":"5417:7:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint192","typeString":"uint192"},"typeName":{"id":7176,"name":"uint192","nodeType":"ElementaryTypeName","src":"5417:7:29","typeDescriptions":{"typeIdentifier":"t_uint192","typeString":"uint192"}},"visibility":"internal"}],"src":"5416:9:29"},"scope":8713,"src":"5360:223:29","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7226,"nodeType":"Block","src":"5952:157:29","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7213,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7207,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7202,"src":"5967:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":7210,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5980:7:29","typeDescriptions":{"typeIdentifier":"t_type$_t_uint184_$","typeString":"type(uint184)"},"typeName":{"id":7209,"name":"uint184","nodeType":"ElementaryTypeName","src":"5980:7:29","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint184_$","typeString":"type(uint184)"}],"id":7208,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"5975:4:29","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":7211,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5975:13:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint184","typeString":"type(uint184)"}},"id":7212,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"5989:3:29","memberName":"max","nodeType":"MemberAccess","src":"5975:17:29","typeDescriptions":{"typeIdentifier":"t_uint184","typeString":"uint184"}},"src":"5967:25:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7220,"nodeType":"IfStatement","src":"5963:107:29","trueBody":{"id":7219,"nodeType":"Block","src":"5994:76:29","statements":[{"errorCall":{"arguments":[{"hexValue":"313834","id":7215,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6047:3:29","typeDescriptions":{"typeIdentifier":"t_rational_184_by_1","typeString":"int_const 184"},"value":"184"},{"id":7216,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7202,"src":"6052:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_184_by_1","typeString":"int_const 184"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7214,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6958,"src":"6016:30:29","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":7217,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6016:42:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":7218,"nodeType":"RevertStatement","src":"6009:49:29"}]}},{"expression":{"arguments":[{"id":7223,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7202,"src":"6095:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7222,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6087:7:29","typeDescriptions":{"typeIdentifier":"t_type$_t_uint184_$","typeString":"type(uint184)"},"typeName":{"id":7221,"name":"uint184","nodeType":"ElementaryTypeName","src":"6087:7:29","typeDescriptions":{}}},"id":7224,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6087:14:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint184","typeString":"uint184"}},"functionReturnParameters":7206,"id":7225,"nodeType":"Return","src":"6080:21:29"}]},"documentation":{"id":7200,"nodeType":"StructuredDocumentation","src":"5591:289:29","text":" @dev Returns the downcasted uint184 from uint256, reverting on\n overflow (when the input is greater than largest uint184).\n Counterpart to Solidity's `uint184` operator.\n Requirements:\n - input must fit into 184 bits"},"id":7227,"implemented":true,"kind":"function","modifiers":[],"name":"toUint184","nameLocation":"5895:9:29","nodeType":"FunctionDefinition","parameters":{"id":7203,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7202,"mutability":"mutable","name":"value","nameLocation":"5913:5:29","nodeType":"VariableDeclaration","scope":7227,"src":"5905:13:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7201,"name":"uint256","nodeType":"ElementaryTypeName","src":"5905:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5904:15:29"},"returnParameters":{"id":7206,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7205,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7227,"src":"5943:7:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint184","typeString":"uint184"},"typeName":{"id":7204,"name":"uint184","nodeType":"ElementaryTypeName","src":"5943:7:29","typeDescriptions":{"typeIdentifier":"t_uint184","typeString":"uint184"}},"visibility":"internal"}],"src":"5942:9:29"},"scope":8713,"src":"5886:223:29","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7254,"nodeType":"Block","src":"6478:157:29","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7241,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7235,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7230,"src":"6493:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":7238,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6506:7:29","typeDescriptions":{"typeIdentifier":"t_type$_t_uint176_$","typeString":"type(uint176)"},"typeName":{"id":7237,"name":"uint176","nodeType":"ElementaryTypeName","src":"6506:7:29","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint176_$","typeString":"type(uint176)"}],"id":7236,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"6501:4:29","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":7239,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6501:13:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint176","typeString":"type(uint176)"}},"id":7240,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6515:3:29","memberName":"max","nodeType":"MemberAccess","src":"6501:17:29","typeDescriptions":{"typeIdentifier":"t_uint176","typeString":"uint176"}},"src":"6493:25:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7248,"nodeType":"IfStatement","src":"6489:107:29","trueBody":{"id":7247,"nodeType":"Block","src":"6520:76:29","statements":[{"errorCall":{"arguments":[{"hexValue":"313736","id":7243,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6573:3:29","typeDescriptions":{"typeIdentifier":"t_rational_176_by_1","typeString":"int_const 176"},"value":"176"},{"id":7244,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7230,"src":"6578:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_176_by_1","typeString":"int_const 176"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7242,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6958,"src":"6542:30:29","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":7245,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6542:42:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":7246,"nodeType":"RevertStatement","src":"6535:49:29"}]}},{"expression":{"arguments":[{"id":7251,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7230,"src":"6621:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7250,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6613:7:29","typeDescriptions":{"typeIdentifier":"t_type$_t_uint176_$","typeString":"type(uint176)"},"typeName":{"id":7249,"name":"uint176","nodeType":"ElementaryTypeName","src":"6613:7:29","typeDescriptions":{}}},"id":7252,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6613:14:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint176","typeString":"uint176"}},"functionReturnParameters":7234,"id":7253,"nodeType":"Return","src":"6606:21:29"}]},"documentation":{"id":7228,"nodeType":"StructuredDocumentation","src":"6117:289:29","text":" @dev Returns the downcasted uint176 from uint256, reverting on\n overflow (when the input is greater than largest uint176).\n Counterpart to Solidity's `uint176` operator.\n Requirements:\n - input must fit into 176 bits"},"id":7255,"implemented":true,"kind":"function","modifiers":[],"name":"toUint176","nameLocation":"6421:9:29","nodeType":"FunctionDefinition","parameters":{"id":7231,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7230,"mutability":"mutable","name":"value","nameLocation":"6439:5:29","nodeType":"VariableDeclaration","scope":7255,"src":"6431:13:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7229,"name":"uint256","nodeType":"ElementaryTypeName","src":"6431:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6430:15:29"},"returnParameters":{"id":7234,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7233,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7255,"src":"6469:7:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint176","typeString":"uint176"},"typeName":{"id":7232,"name":"uint176","nodeType":"ElementaryTypeName","src":"6469:7:29","typeDescriptions":{"typeIdentifier":"t_uint176","typeString":"uint176"}},"visibility":"internal"}],"src":"6468:9:29"},"scope":8713,"src":"6412:223:29","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7282,"nodeType":"Block","src":"7004:157:29","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7269,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7263,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7258,"src":"7019:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":7266,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7032:7:29","typeDescriptions":{"typeIdentifier":"t_type$_t_uint168_$","typeString":"type(uint168)"},"typeName":{"id":7265,"name":"uint168","nodeType":"ElementaryTypeName","src":"7032:7:29","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint168_$","typeString":"type(uint168)"}],"id":7264,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"7027:4:29","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":7267,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7027:13:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint168","typeString":"type(uint168)"}},"id":7268,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7041:3:29","memberName":"max","nodeType":"MemberAccess","src":"7027:17:29","typeDescriptions":{"typeIdentifier":"t_uint168","typeString":"uint168"}},"src":"7019:25:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7276,"nodeType":"IfStatement","src":"7015:107:29","trueBody":{"id":7275,"nodeType":"Block","src":"7046:76:29","statements":[{"errorCall":{"arguments":[{"hexValue":"313638","id":7271,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7099:3:29","typeDescriptions":{"typeIdentifier":"t_rational_168_by_1","typeString":"int_const 168"},"value":"168"},{"id":7272,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7258,"src":"7104:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_168_by_1","typeString":"int_const 168"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7270,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6958,"src":"7068:30:29","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":7273,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7068:42:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":7274,"nodeType":"RevertStatement","src":"7061:49:29"}]}},{"expression":{"arguments":[{"id":7279,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7258,"src":"7147:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7278,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7139:7:29","typeDescriptions":{"typeIdentifier":"t_type$_t_uint168_$","typeString":"type(uint168)"},"typeName":{"id":7277,"name":"uint168","nodeType":"ElementaryTypeName","src":"7139:7:29","typeDescriptions":{}}},"id":7280,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7139:14:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint168","typeString":"uint168"}},"functionReturnParameters":7262,"id":7281,"nodeType":"Return","src":"7132:21:29"}]},"documentation":{"id":7256,"nodeType":"StructuredDocumentation","src":"6643:289:29","text":" @dev Returns the downcasted uint168 from uint256, reverting on\n overflow (when the input is greater than largest uint168).\n Counterpart to Solidity's `uint168` operator.\n Requirements:\n - input must fit into 168 bits"},"id":7283,"implemented":true,"kind":"function","modifiers":[],"name":"toUint168","nameLocation":"6947:9:29","nodeType":"FunctionDefinition","parameters":{"id":7259,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7258,"mutability":"mutable","name":"value","nameLocation":"6965:5:29","nodeType":"VariableDeclaration","scope":7283,"src":"6957:13:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7257,"name":"uint256","nodeType":"ElementaryTypeName","src":"6957:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6956:15:29"},"returnParameters":{"id":7262,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7261,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7283,"src":"6995:7:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint168","typeString":"uint168"},"typeName":{"id":7260,"name":"uint168","nodeType":"ElementaryTypeName","src":"6995:7:29","typeDescriptions":{"typeIdentifier":"t_uint168","typeString":"uint168"}},"visibility":"internal"}],"src":"6994:9:29"},"scope":8713,"src":"6938:223:29","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7310,"nodeType":"Block","src":"7530:157:29","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7297,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7291,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7286,"src":"7545:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":7294,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7558:7:29","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":7293,"name":"uint160","nodeType":"ElementaryTypeName","src":"7558:7:29","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"}],"id":7292,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"7553:4:29","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":7295,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7553:13:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint160","typeString":"type(uint160)"}},"id":7296,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7567:3:29","memberName":"max","nodeType":"MemberAccess","src":"7553:17:29","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"src":"7545:25:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7304,"nodeType":"IfStatement","src":"7541:107:29","trueBody":{"id":7303,"nodeType":"Block","src":"7572:76:29","statements":[{"errorCall":{"arguments":[{"hexValue":"313630","id":7299,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7625:3:29","typeDescriptions":{"typeIdentifier":"t_rational_160_by_1","typeString":"int_const 160"},"value":"160"},{"id":7300,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7286,"src":"7630:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_160_by_1","typeString":"int_const 160"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7298,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6958,"src":"7594:30:29","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":7301,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7594:42:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":7302,"nodeType":"RevertStatement","src":"7587:49:29"}]}},{"expression":{"arguments":[{"id":7307,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7286,"src":"7673:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7306,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7665:7:29","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":7305,"name":"uint160","nodeType":"ElementaryTypeName","src":"7665:7:29","typeDescriptions":{}}},"id":7308,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7665:14:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"functionReturnParameters":7290,"id":7309,"nodeType":"Return","src":"7658:21:29"}]},"documentation":{"id":7284,"nodeType":"StructuredDocumentation","src":"7169:289:29","text":" @dev Returns the downcasted uint160 from uint256, reverting on\n overflow (when the input is greater than largest uint160).\n Counterpart to Solidity's `uint160` operator.\n Requirements:\n - input must fit into 160 bits"},"id":7311,"implemented":true,"kind":"function","modifiers":[],"name":"toUint160","nameLocation":"7473:9:29","nodeType":"FunctionDefinition","parameters":{"id":7287,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7286,"mutability":"mutable","name":"value","nameLocation":"7491:5:29","nodeType":"VariableDeclaration","scope":7311,"src":"7483:13:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7285,"name":"uint256","nodeType":"ElementaryTypeName","src":"7483:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7482:15:29"},"returnParameters":{"id":7290,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7289,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7311,"src":"7521:7:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"},"typeName":{"id":7288,"name":"uint160","nodeType":"ElementaryTypeName","src":"7521:7:29","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"visibility":"internal"}],"src":"7520:9:29"},"scope":8713,"src":"7464:223:29","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7338,"nodeType":"Block","src":"8056:157:29","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7325,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7319,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7314,"src":"8071:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":7322,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8084:7:29","typeDescriptions":{"typeIdentifier":"t_type$_t_uint152_$","typeString":"type(uint152)"},"typeName":{"id":7321,"name":"uint152","nodeType":"ElementaryTypeName","src":"8084:7:29","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint152_$","typeString":"type(uint152)"}],"id":7320,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"8079:4:29","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":7323,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8079:13:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint152","typeString":"type(uint152)"}},"id":7324,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"8093:3:29","memberName":"max","nodeType":"MemberAccess","src":"8079:17:29","typeDescriptions":{"typeIdentifier":"t_uint152","typeString":"uint152"}},"src":"8071:25:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7332,"nodeType":"IfStatement","src":"8067:107:29","trueBody":{"id":7331,"nodeType":"Block","src":"8098:76:29","statements":[{"errorCall":{"arguments":[{"hexValue":"313532","id":7327,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8151:3:29","typeDescriptions":{"typeIdentifier":"t_rational_152_by_1","typeString":"int_const 152"},"value":"152"},{"id":7328,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7314,"src":"8156:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_152_by_1","typeString":"int_const 152"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7326,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6958,"src":"8120:30:29","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":7329,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8120:42:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":7330,"nodeType":"RevertStatement","src":"8113:49:29"}]}},{"expression":{"arguments":[{"id":7335,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7314,"src":"8199:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7334,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8191:7:29","typeDescriptions":{"typeIdentifier":"t_type$_t_uint152_$","typeString":"type(uint152)"},"typeName":{"id":7333,"name":"uint152","nodeType":"ElementaryTypeName","src":"8191:7:29","typeDescriptions":{}}},"id":7336,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8191:14:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint152","typeString":"uint152"}},"functionReturnParameters":7318,"id":7337,"nodeType":"Return","src":"8184:21:29"}]},"documentation":{"id":7312,"nodeType":"StructuredDocumentation","src":"7695:289:29","text":" @dev Returns the downcasted uint152 from uint256, reverting on\n overflow (when the input is greater than largest uint152).\n Counterpart to Solidity's `uint152` operator.\n Requirements:\n - input must fit into 152 bits"},"id":7339,"implemented":true,"kind":"function","modifiers":[],"name":"toUint152","nameLocation":"7999:9:29","nodeType":"FunctionDefinition","parameters":{"id":7315,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7314,"mutability":"mutable","name":"value","nameLocation":"8017:5:29","nodeType":"VariableDeclaration","scope":7339,"src":"8009:13:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7313,"name":"uint256","nodeType":"ElementaryTypeName","src":"8009:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8008:15:29"},"returnParameters":{"id":7318,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7317,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7339,"src":"8047:7:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint152","typeString":"uint152"},"typeName":{"id":7316,"name":"uint152","nodeType":"ElementaryTypeName","src":"8047:7:29","typeDescriptions":{"typeIdentifier":"t_uint152","typeString":"uint152"}},"visibility":"internal"}],"src":"8046:9:29"},"scope":8713,"src":"7990:223:29","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7366,"nodeType":"Block","src":"8582:157:29","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7353,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7347,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7342,"src":"8597:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":7350,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8610:7:29","typeDescriptions":{"typeIdentifier":"t_type$_t_uint144_$","typeString":"type(uint144)"},"typeName":{"id":7349,"name":"uint144","nodeType":"ElementaryTypeName","src":"8610:7:29","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint144_$","typeString":"type(uint144)"}],"id":7348,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"8605:4:29","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":7351,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8605:13:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint144","typeString":"type(uint144)"}},"id":7352,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"8619:3:29","memberName":"max","nodeType":"MemberAccess","src":"8605:17:29","typeDescriptions":{"typeIdentifier":"t_uint144","typeString":"uint144"}},"src":"8597:25:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7360,"nodeType":"IfStatement","src":"8593:107:29","trueBody":{"id":7359,"nodeType":"Block","src":"8624:76:29","statements":[{"errorCall":{"arguments":[{"hexValue":"313434","id":7355,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8677:3:29","typeDescriptions":{"typeIdentifier":"t_rational_144_by_1","typeString":"int_const 144"},"value":"144"},{"id":7356,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7342,"src":"8682:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_144_by_1","typeString":"int_const 144"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7354,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6958,"src":"8646:30:29","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":7357,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8646:42:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":7358,"nodeType":"RevertStatement","src":"8639:49:29"}]}},{"expression":{"arguments":[{"id":7363,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7342,"src":"8725:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7362,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8717:7:29","typeDescriptions":{"typeIdentifier":"t_type$_t_uint144_$","typeString":"type(uint144)"},"typeName":{"id":7361,"name":"uint144","nodeType":"ElementaryTypeName","src":"8717:7:29","typeDescriptions":{}}},"id":7364,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8717:14:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint144","typeString":"uint144"}},"functionReturnParameters":7346,"id":7365,"nodeType":"Return","src":"8710:21:29"}]},"documentation":{"id":7340,"nodeType":"StructuredDocumentation","src":"8221:289:29","text":" @dev Returns the downcasted uint144 from uint256, reverting on\n overflow (when the input is greater than largest uint144).\n Counterpart to Solidity's `uint144` operator.\n Requirements:\n - input must fit into 144 bits"},"id":7367,"implemented":true,"kind":"function","modifiers":[],"name":"toUint144","nameLocation":"8525:9:29","nodeType":"FunctionDefinition","parameters":{"id":7343,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7342,"mutability":"mutable","name":"value","nameLocation":"8543:5:29","nodeType":"VariableDeclaration","scope":7367,"src":"8535:13:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7341,"name":"uint256","nodeType":"ElementaryTypeName","src":"8535:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8534:15:29"},"returnParameters":{"id":7346,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7345,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7367,"src":"8573:7:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint144","typeString":"uint144"},"typeName":{"id":7344,"name":"uint144","nodeType":"ElementaryTypeName","src":"8573:7:29","typeDescriptions":{"typeIdentifier":"t_uint144","typeString":"uint144"}},"visibility":"internal"}],"src":"8572:9:29"},"scope":8713,"src":"8516:223:29","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7394,"nodeType":"Block","src":"9108:157:29","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7381,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7375,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7370,"src":"9123:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":7378,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9136:7:29","typeDescriptions":{"typeIdentifier":"t_type$_t_uint136_$","typeString":"type(uint136)"},"typeName":{"id":7377,"name":"uint136","nodeType":"ElementaryTypeName","src":"9136:7:29","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint136_$","typeString":"type(uint136)"}],"id":7376,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"9131:4:29","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":7379,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9131:13:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint136","typeString":"type(uint136)"}},"id":7380,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"9145:3:29","memberName":"max","nodeType":"MemberAccess","src":"9131:17:29","typeDescriptions":{"typeIdentifier":"t_uint136","typeString":"uint136"}},"src":"9123:25:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7388,"nodeType":"IfStatement","src":"9119:107:29","trueBody":{"id":7387,"nodeType":"Block","src":"9150:76:29","statements":[{"errorCall":{"arguments":[{"hexValue":"313336","id":7383,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9203:3:29","typeDescriptions":{"typeIdentifier":"t_rational_136_by_1","typeString":"int_const 136"},"value":"136"},{"id":7384,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7370,"src":"9208:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_136_by_1","typeString":"int_const 136"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7382,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6958,"src":"9172:30:29","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":7385,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9172:42:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":7386,"nodeType":"RevertStatement","src":"9165:49:29"}]}},{"expression":{"arguments":[{"id":7391,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7370,"src":"9251:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7390,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9243:7:29","typeDescriptions":{"typeIdentifier":"t_type$_t_uint136_$","typeString":"type(uint136)"},"typeName":{"id":7389,"name":"uint136","nodeType":"ElementaryTypeName","src":"9243:7:29","typeDescriptions":{}}},"id":7392,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9243:14:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint136","typeString":"uint136"}},"functionReturnParameters":7374,"id":7393,"nodeType":"Return","src":"9236:21:29"}]},"documentation":{"id":7368,"nodeType":"StructuredDocumentation","src":"8747:289:29","text":" @dev Returns the downcasted uint136 from uint256, reverting on\n overflow (when the input is greater than largest uint136).\n Counterpart to Solidity's `uint136` operator.\n Requirements:\n - input must fit into 136 bits"},"id":7395,"implemented":true,"kind":"function","modifiers":[],"name":"toUint136","nameLocation":"9051:9:29","nodeType":"FunctionDefinition","parameters":{"id":7371,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7370,"mutability":"mutable","name":"value","nameLocation":"9069:5:29","nodeType":"VariableDeclaration","scope":7395,"src":"9061:13:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7369,"name":"uint256","nodeType":"ElementaryTypeName","src":"9061:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9060:15:29"},"returnParameters":{"id":7374,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7373,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7395,"src":"9099:7:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint136","typeString":"uint136"},"typeName":{"id":7372,"name":"uint136","nodeType":"ElementaryTypeName","src":"9099:7:29","typeDescriptions":{"typeIdentifier":"t_uint136","typeString":"uint136"}},"visibility":"internal"}],"src":"9098:9:29"},"scope":8713,"src":"9042:223:29","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7422,"nodeType":"Block","src":"9634:157:29","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7409,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7403,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7398,"src":"9649:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":7406,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9662:7:29","typeDescriptions":{"typeIdentifier":"t_type$_t_uint128_$","typeString":"type(uint128)"},"typeName":{"id":7405,"name":"uint128","nodeType":"ElementaryTypeName","src":"9662:7:29","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint128_$","typeString":"type(uint128)"}],"id":7404,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"9657:4:29","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":7407,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9657:13:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint128","typeString":"type(uint128)"}},"id":7408,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"9671:3:29","memberName":"max","nodeType":"MemberAccess","src":"9657:17:29","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"src":"9649:25:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7416,"nodeType":"IfStatement","src":"9645:107:29","trueBody":{"id":7415,"nodeType":"Block","src":"9676:76:29","statements":[{"errorCall":{"arguments":[{"hexValue":"313238","id":7411,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9729:3:29","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},{"id":7412,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7398,"src":"9734:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7410,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6958,"src":"9698:30:29","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":7413,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9698:42:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":7414,"nodeType":"RevertStatement","src":"9691:49:29"}]}},{"expression":{"arguments":[{"id":7419,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7398,"src":"9777:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7418,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9769:7:29","typeDescriptions":{"typeIdentifier":"t_type$_t_uint128_$","typeString":"type(uint128)"},"typeName":{"id":7417,"name":"uint128","nodeType":"ElementaryTypeName","src":"9769:7:29","typeDescriptions":{}}},"id":7420,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9769:14:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"functionReturnParameters":7402,"id":7421,"nodeType":"Return","src":"9762:21:29"}]},"documentation":{"id":7396,"nodeType":"StructuredDocumentation","src":"9273:289:29","text":" @dev Returns the downcasted uint128 from uint256, reverting on\n overflow (when the input is greater than largest uint128).\n Counterpart to Solidity's `uint128` operator.\n Requirements:\n - input must fit into 128 bits"},"id":7423,"implemented":true,"kind":"function","modifiers":[],"name":"toUint128","nameLocation":"9577:9:29","nodeType":"FunctionDefinition","parameters":{"id":7399,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7398,"mutability":"mutable","name":"value","nameLocation":"9595:5:29","nodeType":"VariableDeclaration","scope":7423,"src":"9587:13:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7397,"name":"uint256","nodeType":"ElementaryTypeName","src":"9587:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9586:15:29"},"returnParameters":{"id":7402,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7401,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7423,"src":"9625:7:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":7400,"name":"uint128","nodeType":"ElementaryTypeName","src":"9625:7:29","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"visibility":"internal"}],"src":"9624:9:29"},"scope":8713,"src":"9568:223:29","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7450,"nodeType":"Block","src":"10160:157:29","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7437,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7431,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7426,"src":"10175:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":7434,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10188:7:29","typeDescriptions":{"typeIdentifier":"t_type$_t_uint120_$","typeString":"type(uint120)"},"typeName":{"id":7433,"name":"uint120","nodeType":"ElementaryTypeName","src":"10188:7:29","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint120_$","typeString":"type(uint120)"}],"id":7432,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"10183:4:29","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":7435,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10183:13:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint120","typeString":"type(uint120)"}},"id":7436,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"10197:3:29","memberName":"max","nodeType":"MemberAccess","src":"10183:17:29","typeDescriptions":{"typeIdentifier":"t_uint120","typeString":"uint120"}},"src":"10175:25:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7444,"nodeType":"IfStatement","src":"10171:107:29","trueBody":{"id":7443,"nodeType":"Block","src":"10202:76:29","statements":[{"errorCall":{"arguments":[{"hexValue":"313230","id":7439,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10255:3:29","typeDescriptions":{"typeIdentifier":"t_rational_120_by_1","typeString":"int_const 120"},"value":"120"},{"id":7440,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7426,"src":"10260:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_120_by_1","typeString":"int_const 120"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7438,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6958,"src":"10224:30:29","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":7441,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10224:42:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":7442,"nodeType":"RevertStatement","src":"10217:49:29"}]}},{"expression":{"arguments":[{"id":7447,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7426,"src":"10303:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7446,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10295:7:29","typeDescriptions":{"typeIdentifier":"t_type$_t_uint120_$","typeString":"type(uint120)"},"typeName":{"id":7445,"name":"uint120","nodeType":"ElementaryTypeName","src":"10295:7:29","typeDescriptions":{}}},"id":7448,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10295:14:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint120","typeString":"uint120"}},"functionReturnParameters":7430,"id":7449,"nodeType":"Return","src":"10288:21:29"}]},"documentation":{"id":7424,"nodeType":"StructuredDocumentation","src":"9799:289:29","text":" @dev Returns the downcasted uint120 from uint256, reverting on\n overflow (when the input is greater than largest uint120).\n Counterpart to Solidity's `uint120` operator.\n Requirements:\n - input must fit into 120 bits"},"id":7451,"implemented":true,"kind":"function","modifiers":[],"name":"toUint120","nameLocation":"10103:9:29","nodeType":"FunctionDefinition","parameters":{"id":7427,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7426,"mutability":"mutable","name":"value","nameLocation":"10121:5:29","nodeType":"VariableDeclaration","scope":7451,"src":"10113:13:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7425,"name":"uint256","nodeType":"ElementaryTypeName","src":"10113:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10112:15:29"},"returnParameters":{"id":7430,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7429,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7451,"src":"10151:7:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint120","typeString":"uint120"},"typeName":{"id":7428,"name":"uint120","nodeType":"ElementaryTypeName","src":"10151:7:29","typeDescriptions":{"typeIdentifier":"t_uint120","typeString":"uint120"}},"visibility":"internal"}],"src":"10150:9:29"},"scope":8713,"src":"10094:223:29","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7478,"nodeType":"Block","src":"10686:157:29","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7465,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7459,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7454,"src":"10701:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":7462,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10714:7:29","typeDescriptions":{"typeIdentifier":"t_type$_t_uint112_$","typeString":"type(uint112)"},"typeName":{"id":7461,"name":"uint112","nodeType":"ElementaryTypeName","src":"10714:7:29","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint112_$","typeString":"type(uint112)"}],"id":7460,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"10709:4:29","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":7463,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10709:13:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint112","typeString":"type(uint112)"}},"id":7464,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"10723:3:29","memberName":"max","nodeType":"MemberAccess","src":"10709:17:29","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"src":"10701:25:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7472,"nodeType":"IfStatement","src":"10697:107:29","trueBody":{"id":7471,"nodeType":"Block","src":"10728:76:29","statements":[{"errorCall":{"arguments":[{"hexValue":"313132","id":7467,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10781:3:29","typeDescriptions":{"typeIdentifier":"t_rational_112_by_1","typeString":"int_const 112"},"value":"112"},{"id":7468,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7454,"src":"10786:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_112_by_1","typeString":"int_const 112"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7466,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6958,"src":"10750:30:29","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":7469,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10750:42:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":7470,"nodeType":"RevertStatement","src":"10743:49:29"}]}},{"expression":{"arguments":[{"id":7475,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7454,"src":"10829:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7474,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10821:7:29","typeDescriptions":{"typeIdentifier":"t_type$_t_uint112_$","typeString":"type(uint112)"},"typeName":{"id":7473,"name":"uint112","nodeType":"ElementaryTypeName","src":"10821:7:29","typeDescriptions":{}}},"id":7476,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10821:14:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"functionReturnParameters":7458,"id":7477,"nodeType":"Return","src":"10814:21:29"}]},"documentation":{"id":7452,"nodeType":"StructuredDocumentation","src":"10325:289:29","text":" @dev Returns the downcasted uint112 from uint256, reverting on\n overflow (when the input is greater than largest uint112).\n Counterpart to Solidity's `uint112` operator.\n Requirements:\n - input must fit into 112 bits"},"id":7479,"implemented":true,"kind":"function","modifiers":[],"name":"toUint112","nameLocation":"10629:9:29","nodeType":"FunctionDefinition","parameters":{"id":7455,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7454,"mutability":"mutable","name":"value","nameLocation":"10647:5:29","nodeType":"VariableDeclaration","scope":7479,"src":"10639:13:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7453,"name":"uint256","nodeType":"ElementaryTypeName","src":"10639:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10638:15:29"},"returnParameters":{"id":7458,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7457,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7479,"src":"10677:7:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"},"typeName":{"id":7456,"name":"uint112","nodeType":"ElementaryTypeName","src":"10677:7:29","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"visibility":"internal"}],"src":"10676:9:29"},"scope":8713,"src":"10620:223:29","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7506,"nodeType":"Block","src":"11212:157:29","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7493,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7487,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7482,"src":"11227:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":7490,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11240:7:29","typeDescriptions":{"typeIdentifier":"t_type$_t_uint104_$","typeString":"type(uint104)"},"typeName":{"id":7489,"name":"uint104","nodeType":"ElementaryTypeName","src":"11240:7:29","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint104_$","typeString":"type(uint104)"}],"id":7488,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"11235:4:29","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":7491,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11235:13:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint104","typeString":"type(uint104)"}},"id":7492,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"11249:3:29","memberName":"max","nodeType":"MemberAccess","src":"11235:17:29","typeDescriptions":{"typeIdentifier":"t_uint104","typeString":"uint104"}},"src":"11227:25:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7500,"nodeType":"IfStatement","src":"11223:107:29","trueBody":{"id":7499,"nodeType":"Block","src":"11254:76:29","statements":[{"errorCall":{"arguments":[{"hexValue":"313034","id":7495,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11307:3:29","typeDescriptions":{"typeIdentifier":"t_rational_104_by_1","typeString":"int_const 104"},"value":"104"},{"id":7496,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7482,"src":"11312:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_104_by_1","typeString":"int_const 104"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7494,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6958,"src":"11276:30:29","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":7497,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11276:42:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":7498,"nodeType":"RevertStatement","src":"11269:49:29"}]}},{"expression":{"arguments":[{"id":7503,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7482,"src":"11355:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7502,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11347:7:29","typeDescriptions":{"typeIdentifier":"t_type$_t_uint104_$","typeString":"type(uint104)"},"typeName":{"id":7501,"name":"uint104","nodeType":"ElementaryTypeName","src":"11347:7:29","typeDescriptions":{}}},"id":7504,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11347:14:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint104","typeString":"uint104"}},"functionReturnParameters":7486,"id":7505,"nodeType":"Return","src":"11340:21:29"}]},"documentation":{"id":7480,"nodeType":"StructuredDocumentation","src":"10851:289:29","text":" @dev Returns the downcasted uint104 from uint256, reverting on\n overflow (when the input is greater than largest uint104).\n Counterpart to Solidity's `uint104` operator.\n Requirements:\n - input must fit into 104 bits"},"id":7507,"implemented":true,"kind":"function","modifiers":[],"name":"toUint104","nameLocation":"11155:9:29","nodeType":"FunctionDefinition","parameters":{"id":7483,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7482,"mutability":"mutable","name":"value","nameLocation":"11173:5:29","nodeType":"VariableDeclaration","scope":7507,"src":"11165:13:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7481,"name":"uint256","nodeType":"ElementaryTypeName","src":"11165:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11164:15:29"},"returnParameters":{"id":7486,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7485,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7507,"src":"11203:7:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint104","typeString":"uint104"},"typeName":{"id":7484,"name":"uint104","nodeType":"ElementaryTypeName","src":"11203:7:29","typeDescriptions":{"typeIdentifier":"t_uint104","typeString":"uint104"}},"visibility":"internal"}],"src":"11202:9:29"},"scope":8713,"src":"11146:223:29","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7534,"nodeType":"Block","src":"11732:154:29","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7521,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7515,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7510,"src":"11747:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":7518,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11760:6:29","typeDescriptions":{"typeIdentifier":"t_type$_t_uint96_$","typeString":"type(uint96)"},"typeName":{"id":7517,"name":"uint96","nodeType":"ElementaryTypeName","src":"11760:6:29","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint96_$","typeString":"type(uint96)"}],"id":7516,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"11755:4:29","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":7519,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11755:12:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint96","typeString":"type(uint96)"}},"id":7520,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"11768:3:29","memberName":"max","nodeType":"MemberAccess","src":"11755:16:29","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"src":"11747:24:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7528,"nodeType":"IfStatement","src":"11743:105:29","trueBody":{"id":7527,"nodeType":"Block","src":"11773:75:29","statements":[{"errorCall":{"arguments":[{"hexValue":"3936","id":7523,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11826:2:29","typeDescriptions":{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},"value":"96"},{"id":7524,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7510,"src":"11830:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7522,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6958,"src":"11795:30:29","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":7525,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11795:41:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":7526,"nodeType":"RevertStatement","src":"11788:48:29"}]}},{"expression":{"arguments":[{"id":7531,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7510,"src":"11872:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7530,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11865:6:29","typeDescriptions":{"typeIdentifier":"t_type$_t_uint96_$","typeString":"type(uint96)"},"typeName":{"id":7529,"name":"uint96","nodeType":"ElementaryTypeName","src":"11865:6:29","typeDescriptions":{}}},"id":7532,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11865:13:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"functionReturnParameters":7514,"id":7533,"nodeType":"Return","src":"11858:20:29"}]},"documentation":{"id":7508,"nodeType":"StructuredDocumentation","src":"11377:285:29","text":" @dev Returns the downcasted uint96 from uint256, reverting on\n overflow (when the input is greater than largest uint96).\n Counterpart to Solidity's `uint96` operator.\n Requirements:\n - input must fit into 96 bits"},"id":7535,"implemented":true,"kind":"function","modifiers":[],"name":"toUint96","nameLocation":"11677:8:29","nodeType":"FunctionDefinition","parameters":{"id":7511,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7510,"mutability":"mutable","name":"value","nameLocation":"11694:5:29","nodeType":"VariableDeclaration","scope":7535,"src":"11686:13:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7509,"name":"uint256","nodeType":"ElementaryTypeName","src":"11686:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11685:15:29"},"returnParameters":{"id":7514,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7513,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7535,"src":"11724:6:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"},"typeName":{"id":7512,"name":"uint96","nodeType":"ElementaryTypeName","src":"11724:6:29","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"visibility":"internal"}],"src":"11723:8:29"},"scope":8713,"src":"11668:218:29","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7562,"nodeType":"Block","src":"12249:154:29","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7549,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7543,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7538,"src":"12264:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":7546,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12277:6:29","typeDescriptions":{"typeIdentifier":"t_type$_t_uint88_$","typeString":"type(uint88)"},"typeName":{"id":7545,"name":"uint88","nodeType":"ElementaryTypeName","src":"12277:6:29","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint88_$","typeString":"type(uint88)"}],"id":7544,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"12272:4:29","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":7547,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12272:12:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint88","typeString":"type(uint88)"}},"id":7548,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"12285:3:29","memberName":"max","nodeType":"MemberAccess","src":"12272:16:29","typeDescriptions":{"typeIdentifier":"t_uint88","typeString":"uint88"}},"src":"12264:24:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7556,"nodeType":"IfStatement","src":"12260:105:29","trueBody":{"id":7555,"nodeType":"Block","src":"12290:75:29","statements":[{"errorCall":{"arguments":[{"hexValue":"3838","id":7551,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12343:2:29","typeDescriptions":{"typeIdentifier":"t_rational_88_by_1","typeString":"int_const 88"},"value":"88"},{"id":7552,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7538,"src":"12347:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_88_by_1","typeString":"int_const 88"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7550,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6958,"src":"12312:30:29","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":7553,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12312:41:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":7554,"nodeType":"RevertStatement","src":"12305:48:29"}]}},{"expression":{"arguments":[{"id":7559,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7538,"src":"12389:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7558,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12382:6:29","typeDescriptions":{"typeIdentifier":"t_type$_t_uint88_$","typeString":"type(uint88)"},"typeName":{"id":7557,"name":"uint88","nodeType":"ElementaryTypeName","src":"12382:6:29","typeDescriptions":{}}},"id":7560,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12382:13:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint88","typeString":"uint88"}},"functionReturnParameters":7542,"id":7561,"nodeType":"Return","src":"12375:20:29"}]},"documentation":{"id":7536,"nodeType":"StructuredDocumentation","src":"11894:285:29","text":" @dev Returns the downcasted uint88 from uint256, reverting on\n overflow (when the input is greater than largest uint88).\n Counterpart to Solidity's `uint88` operator.\n Requirements:\n - input must fit into 88 bits"},"id":7563,"implemented":true,"kind":"function","modifiers":[],"name":"toUint88","nameLocation":"12194:8:29","nodeType":"FunctionDefinition","parameters":{"id":7539,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7538,"mutability":"mutable","name":"value","nameLocation":"12211:5:29","nodeType":"VariableDeclaration","scope":7563,"src":"12203:13:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7537,"name":"uint256","nodeType":"ElementaryTypeName","src":"12203:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12202:15:29"},"returnParameters":{"id":7542,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7541,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7563,"src":"12241:6:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint88","typeString":"uint88"},"typeName":{"id":7540,"name":"uint88","nodeType":"ElementaryTypeName","src":"12241:6:29","typeDescriptions":{"typeIdentifier":"t_uint88","typeString":"uint88"}},"visibility":"internal"}],"src":"12240:8:29"},"scope":8713,"src":"12185:218:29","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7590,"nodeType":"Block","src":"12766:154:29","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7577,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7571,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7566,"src":"12781:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":7574,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12794:6:29","typeDescriptions":{"typeIdentifier":"t_type$_t_uint80_$","typeString":"type(uint80)"},"typeName":{"id":7573,"name":"uint80","nodeType":"ElementaryTypeName","src":"12794:6:29","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint80_$","typeString":"type(uint80)"}],"id":7572,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"12789:4:29","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":7575,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12789:12:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint80","typeString":"type(uint80)"}},"id":7576,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"12802:3:29","memberName":"max","nodeType":"MemberAccess","src":"12789:16:29","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"}},"src":"12781:24:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7584,"nodeType":"IfStatement","src":"12777:105:29","trueBody":{"id":7583,"nodeType":"Block","src":"12807:75:29","statements":[{"errorCall":{"arguments":[{"hexValue":"3830","id":7579,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12860:2:29","typeDescriptions":{"typeIdentifier":"t_rational_80_by_1","typeString":"int_const 80"},"value":"80"},{"id":7580,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7566,"src":"12864:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_80_by_1","typeString":"int_const 80"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7578,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6958,"src":"12829:30:29","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":7581,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12829:41:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":7582,"nodeType":"RevertStatement","src":"12822:48:29"}]}},{"expression":{"arguments":[{"id":7587,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7566,"src":"12906:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7586,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12899:6:29","typeDescriptions":{"typeIdentifier":"t_type$_t_uint80_$","typeString":"type(uint80)"},"typeName":{"id":7585,"name":"uint80","nodeType":"ElementaryTypeName","src":"12899:6:29","typeDescriptions":{}}},"id":7588,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12899:13:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"}},"functionReturnParameters":7570,"id":7589,"nodeType":"Return","src":"12892:20:29"}]},"documentation":{"id":7564,"nodeType":"StructuredDocumentation","src":"12411:285:29","text":" @dev Returns the downcasted uint80 from uint256, reverting on\n overflow (when the input is greater than largest uint80).\n Counterpart to Solidity's `uint80` operator.\n Requirements:\n - input must fit into 80 bits"},"id":7591,"implemented":true,"kind":"function","modifiers":[],"name":"toUint80","nameLocation":"12711:8:29","nodeType":"FunctionDefinition","parameters":{"id":7567,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7566,"mutability":"mutable","name":"value","nameLocation":"12728:5:29","nodeType":"VariableDeclaration","scope":7591,"src":"12720:13:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7565,"name":"uint256","nodeType":"ElementaryTypeName","src":"12720:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12719:15:29"},"returnParameters":{"id":7570,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7569,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7591,"src":"12758:6:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"},"typeName":{"id":7568,"name":"uint80","nodeType":"ElementaryTypeName","src":"12758:6:29","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"}},"visibility":"internal"}],"src":"12757:8:29"},"scope":8713,"src":"12702:218:29","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7618,"nodeType":"Block","src":"13283:154:29","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7605,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7599,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7594,"src":"13298:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":7602,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13311:6:29","typeDescriptions":{"typeIdentifier":"t_type$_t_uint72_$","typeString":"type(uint72)"},"typeName":{"id":7601,"name":"uint72","nodeType":"ElementaryTypeName","src":"13311:6:29","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint72_$","typeString":"type(uint72)"}],"id":7600,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"13306:4:29","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":7603,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13306:12:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint72","typeString":"type(uint72)"}},"id":7604,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"13319:3:29","memberName":"max","nodeType":"MemberAccess","src":"13306:16:29","typeDescriptions":{"typeIdentifier":"t_uint72","typeString":"uint72"}},"src":"13298:24:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7612,"nodeType":"IfStatement","src":"13294:105:29","trueBody":{"id":7611,"nodeType":"Block","src":"13324:75:29","statements":[{"errorCall":{"arguments":[{"hexValue":"3732","id":7607,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13377:2:29","typeDescriptions":{"typeIdentifier":"t_rational_72_by_1","typeString":"int_const 72"},"value":"72"},{"id":7608,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7594,"src":"13381:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_72_by_1","typeString":"int_const 72"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7606,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6958,"src":"13346:30:29","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":7609,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13346:41:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":7610,"nodeType":"RevertStatement","src":"13339:48:29"}]}},{"expression":{"arguments":[{"id":7615,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7594,"src":"13423:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7614,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13416:6:29","typeDescriptions":{"typeIdentifier":"t_type$_t_uint72_$","typeString":"type(uint72)"},"typeName":{"id":7613,"name":"uint72","nodeType":"ElementaryTypeName","src":"13416:6:29","typeDescriptions":{}}},"id":7616,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13416:13:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint72","typeString":"uint72"}},"functionReturnParameters":7598,"id":7617,"nodeType":"Return","src":"13409:20:29"}]},"documentation":{"id":7592,"nodeType":"StructuredDocumentation","src":"12928:285:29","text":" @dev Returns the downcasted uint72 from uint256, reverting on\n overflow (when the input is greater than largest uint72).\n Counterpart to Solidity's `uint72` operator.\n Requirements:\n - input must fit into 72 bits"},"id":7619,"implemented":true,"kind":"function","modifiers":[],"name":"toUint72","nameLocation":"13228:8:29","nodeType":"FunctionDefinition","parameters":{"id":7595,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7594,"mutability":"mutable","name":"value","nameLocation":"13245:5:29","nodeType":"VariableDeclaration","scope":7619,"src":"13237:13:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7593,"name":"uint256","nodeType":"ElementaryTypeName","src":"13237:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13236:15:29"},"returnParameters":{"id":7598,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7597,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7619,"src":"13275:6:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint72","typeString":"uint72"},"typeName":{"id":7596,"name":"uint72","nodeType":"ElementaryTypeName","src":"13275:6:29","typeDescriptions":{"typeIdentifier":"t_uint72","typeString":"uint72"}},"visibility":"internal"}],"src":"13274:8:29"},"scope":8713,"src":"13219:218:29","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7646,"nodeType":"Block","src":"13800:154:29","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7633,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7627,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7622,"src":"13815:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":7630,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13828:6:29","typeDescriptions":{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"},"typeName":{"id":7629,"name":"uint64","nodeType":"ElementaryTypeName","src":"13828:6:29","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"}],"id":7628,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"13823:4:29","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":7631,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13823:12:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint64","typeString":"type(uint64)"}},"id":7632,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"13836:3:29","memberName":"max","nodeType":"MemberAccess","src":"13823:16:29","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"src":"13815:24:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7640,"nodeType":"IfStatement","src":"13811:105:29","trueBody":{"id":7639,"nodeType":"Block","src":"13841:75:29","statements":[{"errorCall":{"arguments":[{"hexValue":"3634","id":7635,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13894:2:29","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},{"id":7636,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7622,"src":"13898:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7634,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6958,"src":"13863:30:29","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":7637,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13863:41:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":7638,"nodeType":"RevertStatement","src":"13856:48:29"}]}},{"expression":{"arguments":[{"id":7643,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7622,"src":"13940:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7642,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13933:6:29","typeDescriptions":{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"},"typeName":{"id":7641,"name":"uint64","nodeType":"ElementaryTypeName","src":"13933:6:29","typeDescriptions":{}}},"id":7644,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13933:13:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"functionReturnParameters":7626,"id":7645,"nodeType":"Return","src":"13926:20:29"}]},"documentation":{"id":7620,"nodeType":"StructuredDocumentation","src":"13445:285:29","text":" @dev Returns the downcasted uint64 from uint256, reverting on\n overflow (when the input is greater than largest uint64).\n Counterpart to Solidity's `uint64` operator.\n Requirements:\n - input must fit into 64 bits"},"id":7647,"implemented":true,"kind":"function","modifiers":[],"name":"toUint64","nameLocation":"13745:8:29","nodeType":"FunctionDefinition","parameters":{"id":7623,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7622,"mutability":"mutable","name":"value","nameLocation":"13762:5:29","nodeType":"VariableDeclaration","scope":7647,"src":"13754:13:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7621,"name":"uint256","nodeType":"ElementaryTypeName","src":"13754:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13753:15:29"},"returnParameters":{"id":7626,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7625,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7647,"src":"13792:6:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":7624,"name":"uint64","nodeType":"ElementaryTypeName","src":"13792:6:29","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"13791:8:29"},"scope":8713,"src":"13736:218:29","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7674,"nodeType":"Block","src":"14317:154:29","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7661,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7655,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7650,"src":"14332:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":7658,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14345:6:29","typeDescriptions":{"typeIdentifier":"t_type$_t_uint56_$","typeString":"type(uint56)"},"typeName":{"id":7657,"name":"uint56","nodeType":"ElementaryTypeName","src":"14345:6:29","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint56_$","typeString":"type(uint56)"}],"id":7656,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"14340:4:29","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":7659,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14340:12:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint56","typeString":"type(uint56)"}},"id":7660,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"14353:3:29","memberName":"max","nodeType":"MemberAccess","src":"14340:16:29","typeDescriptions":{"typeIdentifier":"t_uint56","typeString":"uint56"}},"src":"14332:24:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7668,"nodeType":"IfStatement","src":"14328:105:29","trueBody":{"id":7667,"nodeType":"Block","src":"14358:75:29","statements":[{"errorCall":{"arguments":[{"hexValue":"3536","id":7663,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14411:2:29","typeDescriptions":{"typeIdentifier":"t_rational_56_by_1","typeString":"int_const 56"},"value":"56"},{"id":7664,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7650,"src":"14415:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_56_by_1","typeString":"int_const 56"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7662,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6958,"src":"14380:30:29","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":7665,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14380:41:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":7666,"nodeType":"RevertStatement","src":"14373:48:29"}]}},{"expression":{"arguments":[{"id":7671,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7650,"src":"14457:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7670,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14450:6:29","typeDescriptions":{"typeIdentifier":"t_type$_t_uint56_$","typeString":"type(uint56)"},"typeName":{"id":7669,"name":"uint56","nodeType":"ElementaryTypeName","src":"14450:6:29","typeDescriptions":{}}},"id":7672,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14450:13:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint56","typeString":"uint56"}},"functionReturnParameters":7654,"id":7673,"nodeType":"Return","src":"14443:20:29"}]},"documentation":{"id":7648,"nodeType":"StructuredDocumentation","src":"13962:285:29","text":" @dev Returns the downcasted uint56 from uint256, reverting on\n overflow (when the input is greater than largest uint56).\n Counterpart to Solidity's `uint56` operator.\n Requirements:\n - input must fit into 56 bits"},"id":7675,"implemented":true,"kind":"function","modifiers":[],"name":"toUint56","nameLocation":"14262:8:29","nodeType":"FunctionDefinition","parameters":{"id":7651,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7650,"mutability":"mutable","name":"value","nameLocation":"14279:5:29","nodeType":"VariableDeclaration","scope":7675,"src":"14271:13:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7649,"name":"uint256","nodeType":"ElementaryTypeName","src":"14271:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14270:15:29"},"returnParameters":{"id":7654,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7653,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7675,"src":"14309:6:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint56","typeString":"uint56"},"typeName":{"id":7652,"name":"uint56","nodeType":"ElementaryTypeName","src":"14309:6:29","typeDescriptions":{"typeIdentifier":"t_uint56","typeString":"uint56"}},"visibility":"internal"}],"src":"14308:8:29"},"scope":8713,"src":"14253:218:29","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7702,"nodeType":"Block","src":"14834:154:29","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7689,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7683,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7678,"src":"14849:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":7686,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14862:6:29","typeDescriptions":{"typeIdentifier":"t_type$_t_uint48_$","typeString":"type(uint48)"},"typeName":{"id":7685,"name":"uint48","nodeType":"ElementaryTypeName","src":"14862:6:29","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint48_$","typeString":"type(uint48)"}],"id":7684,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"14857:4:29","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":7687,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14857:12:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint48","typeString":"type(uint48)"}},"id":7688,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"14870:3:29","memberName":"max","nodeType":"MemberAccess","src":"14857:16:29","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"src":"14849:24:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7696,"nodeType":"IfStatement","src":"14845:105:29","trueBody":{"id":7695,"nodeType":"Block","src":"14875:75:29","statements":[{"errorCall":{"arguments":[{"hexValue":"3438","id":7691,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14928:2:29","typeDescriptions":{"typeIdentifier":"t_rational_48_by_1","typeString":"int_const 48"},"value":"48"},{"id":7692,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7678,"src":"14932:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_48_by_1","typeString":"int_const 48"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7690,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6958,"src":"14897:30:29","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":7693,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14897:41:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":7694,"nodeType":"RevertStatement","src":"14890:48:29"}]}},{"expression":{"arguments":[{"id":7699,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7678,"src":"14974:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7698,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14967:6:29","typeDescriptions":{"typeIdentifier":"t_type$_t_uint48_$","typeString":"type(uint48)"},"typeName":{"id":7697,"name":"uint48","nodeType":"ElementaryTypeName","src":"14967:6:29","typeDescriptions":{}}},"id":7700,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14967:13:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"functionReturnParameters":7682,"id":7701,"nodeType":"Return","src":"14960:20:29"}]},"documentation":{"id":7676,"nodeType":"StructuredDocumentation","src":"14479:285:29","text":" @dev Returns the downcasted uint48 from uint256, reverting on\n overflow (when the input is greater than largest uint48).\n Counterpart to Solidity's `uint48` operator.\n Requirements:\n - input must fit into 48 bits"},"id":7703,"implemented":true,"kind":"function","modifiers":[],"name":"toUint48","nameLocation":"14779:8:29","nodeType":"FunctionDefinition","parameters":{"id":7679,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7678,"mutability":"mutable","name":"value","nameLocation":"14796:5:29","nodeType":"VariableDeclaration","scope":7703,"src":"14788:13:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7677,"name":"uint256","nodeType":"ElementaryTypeName","src":"14788:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14787:15:29"},"returnParameters":{"id":7682,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7681,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7703,"src":"14826:6:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"},"typeName":{"id":7680,"name":"uint48","nodeType":"ElementaryTypeName","src":"14826:6:29","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"visibility":"internal"}],"src":"14825:8:29"},"scope":8713,"src":"14770:218:29","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7730,"nodeType":"Block","src":"15351:154:29","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7717,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7711,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7706,"src":"15366:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":7714,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15379:6:29","typeDescriptions":{"typeIdentifier":"t_type$_t_uint40_$","typeString":"type(uint40)"},"typeName":{"id":7713,"name":"uint40","nodeType":"ElementaryTypeName","src":"15379:6:29","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint40_$","typeString":"type(uint40)"}],"id":7712,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"15374:4:29","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":7715,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15374:12:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint40","typeString":"type(uint40)"}},"id":7716,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"15387:3:29","memberName":"max","nodeType":"MemberAccess","src":"15374:16:29","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"}},"src":"15366:24:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7724,"nodeType":"IfStatement","src":"15362:105:29","trueBody":{"id":7723,"nodeType":"Block","src":"15392:75:29","statements":[{"errorCall":{"arguments":[{"hexValue":"3430","id":7719,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15445:2:29","typeDescriptions":{"typeIdentifier":"t_rational_40_by_1","typeString":"int_const 40"},"value":"40"},{"id":7720,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7706,"src":"15449:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_40_by_1","typeString":"int_const 40"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7718,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6958,"src":"15414:30:29","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":7721,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15414:41:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":7722,"nodeType":"RevertStatement","src":"15407:48:29"}]}},{"expression":{"arguments":[{"id":7727,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7706,"src":"15491:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7726,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15484:6:29","typeDescriptions":{"typeIdentifier":"t_type$_t_uint40_$","typeString":"type(uint40)"},"typeName":{"id":7725,"name":"uint40","nodeType":"ElementaryTypeName","src":"15484:6:29","typeDescriptions":{}}},"id":7728,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15484:13:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"}},"functionReturnParameters":7710,"id":7729,"nodeType":"Return","src":"15477:20:29"}]},"documentation":{"id":7704,"nodeType":"StructuredDocumentation","src":"14996:285:29","text":" @dev Returns the downcasted uint40 from uint256, reverting on\n overflow (when the input is greater than largest uint40).\n Counterpart to Solidity's `uint40` operator.\n Requirements:\n - input must fit into 40 bits"},"id":7731,"implemented":true,"kind":"function","modifiers":[],"name":"toUint40","nameLocation":"15296:8:29","nodeType":"FunctionDefinition","parameters":{"id":7707,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7706,"mutability":"mutable","name":"value","nameLocation":"15313:5:29","nodeType":"VariableDeclaration","scope":7731,"src":"15305:13:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7705,"name":"uint256","nodeType":"ElementaryTypeName","src":"15305:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15304:15:29"},"returnParameters":{"id":7710,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7709,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7731,"src":"15343:6:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"},"typeName":{"id":7708,"name":"uint40","nodeType":"ElementaryTypeName","src":"15343:6:29","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"}},"visibility":"internal"}],"src":"15342:8:29"},"scope":8713,"src":"15287:218:29","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7758,"nodeType":"Block","src":"15868:154:29","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7745,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7739,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7734,"src":"15883:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":7742,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15896:6:29","typeDescriptions":{"typeIdentifier":"t_type$_t_uint32_$","typeString":"type(uint32)"},"typeName":{"id":7741,"name":"uint32","nodeType":"ElementaryTypeName","src":"15896:6:29","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint32_$","typeString":"type(uint32)"}],"id":7740,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"15891:4:29","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":7743,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15891:12:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint32","typeString":"type(uint32)"}},"id":7744,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"15904:3:29","memberName":"max","nodeType":"MemberAccess","src":"15891:16:29","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"src":"15883:24:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7752,"nodeType":"IfStatement","src":"15879:105:29","trueBody":{"id":7751,"nodeType":"Block","src":"15909:75:29","statements":[{"errorCall":{"arguments":[{"hexValue":"3332","id":7747,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15962:2:29","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},{"id":7748,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7734,"src":"15966:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7746,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6958,"src":"15931:30:29","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":7749,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15931:41:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":7750,"nodeType":"RevertStatement","src":"15924:48:29"}]}},{"expression":{"arguments":[{"id":7755,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7734,"src":"16008:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7754,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16001:6:29","typeDescriptions":{"typeIdentifier":"t_type$_t_uint32_$","typeString":"type(uint32)"},"typeName":{"id":7753,"name":"uint32","nodeType":"ElementaryTypeName","src":"16001:6:29","typeDescriptions":{}}},"id":7756,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16001:13:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"functionReturnParameters":7738,"id":7757,"nodeType":"Return","src":"15994:20:29"}]},"documentation":{"id":7732,"nodeType":"StructuredDocumentation","src":"15513:285:29","text":" @dev Returns the downcasted uint32 from uint256, reverting on\n overflow (when the input is greater than largest uint32).\n Counterpart to Solidity's `uint32` operator.\n Requirements:\n - input must fit into 32 bits"},"id":7759,"implemented":true,"kind":"function","modifiers":[],"name":"toUint32","nameLocation":"15813:8:29","nodeType":"FunctionDefinition","parameters":{"id":7735,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7734,"mutability":"mutable","name":"value","nameLocation":"15830:5:29","nodeType":"VariableDeclaration","scope":7759,"src":"15822:13:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7733,"name":"uint256","nodeType":"ElementaryTypeName","src":"15822:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15821:15:29"},"returnParameters":{"id":7738,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7737,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7759,"src":"15860:6:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":7736,"name":"uint32","nodeType":"ElementaryTypeName","src":"15860:6:29","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"src":"15859:8:29"},"scope":8713,"src":"15804:218:29","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7786,"nodeType":"Block","src":"16385:154:29","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7773,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7767,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7762,"src":"16400:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":7770,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16413:6:29","typeDescriptions":{"typeIdentifier":"t_type$_t_uint24_$","typeString":"type(uint24)"},"typeName":{"id":7769,"name":"uint24","nodeType":"ElementaryTypeName","src":"16413:6:29","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint24_$","typeString":"type(uint24)"}],"id":7768,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"16408:4:29","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":7771,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16408:12:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint24","typeString":"type(uint24)"}},"id":7772,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"16421:3:29","memberName":"max","nodeType":"MemberAccess","src":"16408:16:29","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"src":"16400:24:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7780,"nodeType":"IfStatement","src":"16396:105:29","trueBody":{"id":7779,"nodeType":"Block","src":"16426:75:29","statements":[{"errorCall":{"arguments":[{"hexValue":"3234","id":7775,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16479:2:29","typeDescriptions":{"typeIdentifier":"t_rational_24_by_1","typeString":"int_const 24"},"value":"24"},{"id":7776,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7762,"src":"16483:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_24_by_1","typeString":"int_const 24"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7774,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6958,"src":"16448:30:29","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":7777,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16448:41:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":7778,"nodeType":"RevertStatement","src":"16441:48:29"}]}},{"expression":{"arguments":[{"id":7783,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7762,"src":"16525:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7782,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16518:6:29","typeDescriptions":{"typeIdentifier":"t_type$_t_uint24_$","typeString":"type(uint24)"},"typeName":{"id":7781,"name":"uint24","nodeType":"ElementaryTypeName","src":"16518:6:29","typeDescriptions":{}}},"id":7784,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16518:13:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"functionReturnParameters":7766,"id":7785,"nodeType":"Return","src":"16511:20:29"}]},"documentation":{"id":7760,"nodeType":"StructuredDocumentation","src":"16030:285:29","text":" @dev Returns the downcasted uint24 from uint256, reverting on\n overflow (when the input is greater than largest uint24).\n Counterpart to Solidity's `uint24` operator.\n Requirements:\n - input must fit into 24 bits"},"id":7787,"implemented":true,"kind":"function","modifiers":[],"name":"toUint24","nameLocation":"16330:8:29","nodeType":"FunctionDefinition","parameters":{"id":7763,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7762,"mutability":"mutable","name":"value","nameLocation":"16347:5:29","nodeType":"VariableDeclaration","scope":7787,"src":"16339:13:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7761,"name":"uint256","nodeType":"ElementaryTypeName","src":"16339:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"16338:15:29"},"returnParameters":{"id":7766,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7765,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7787,"src":"16377:6:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"},"typeName":{"id":7764,"name":"uint24","nodeType":"ElementaryTypeName","src":"16377:6:29","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"visibility":"internal"}],"src":"16376:8:29"},"scope":8713,"src":"16321:218:29","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7814,"nodeType":"Block","src":"16902:154:29","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7801,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7795,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7790,"src":"16917:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":7798,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16930:6:29","typeDescriptions":{"typeIdentifier":"t_type$_t_uint16_$","typeString":"type(uint16)"},"typeName":{"id":7797,"name":"uint16","nodeType":"ElementaryTypeName","src":"16930:6:29","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint16_$","typeString":"type(uint16)"}],"id":7796,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"16925:4:29","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":7799,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16925:12:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint16","typeString":"type(uint16)"}},"id":7800,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"16938:3:29","memberName":"max","nodeType":"MemberAccess","src":"16925:16:29","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"src":"16917:24:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7808,"nodeType":"IfStatement","src":"16913:105:29","trueBody":{"id":7807,"nodeType":"Block","src":"16943:75:29","statements":[{"errorCall":{"arguments":[{"hexValue":"3136","id":7803,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16996:2:29","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},{"id":7804,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7790,"src":"17000:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7802,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6958,"src":"16965:30:29","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":7805,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16965:41:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":7806,"nodeType":"RevertStatement","src":"16958:48:29"}]}},{"expression":{"arguments":[{"id":7811,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7790,"src":"17042:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7810,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"17035:6:29","typeDescriptions":{"typeIdentifier":"t_type$_t_uint16_$","typeString":"type(uint16)"},"typeName":{"id":7809,"name":"uint16","nodeType":"ElementaryTypeName","src":"17035:6:29","typeDescriptions":{}}},"id":7812,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17035:13:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"functionReturnParameters":7794,"id":7813,"nodeType":"Return","src":"17028:20:29"}]},"documentation":{"id":7788,"nodeType":"StructuredDocumentation","src":"16547:285:29","text":" @dev Returns the downcasted uint16 from uint256, reverting on\n overflow (when the input is greater than largest uint16).\n Counterpart to Solidity's `uint16` operator.\n Requirements:\n - input must fit into 16 bits"},"id":7815,"implemented":true,"kind":"function","modifiers":[],"name":"toUint16","nameLocation":"16847:8:29","nodeType":"FunctionDefinition","parameters":{"id":7791,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7790,"mutability":"mutable","name":"value","nameLocation":"16864:5:29","nodeType":"VariableDeclaration","scope":7815,"src":"16856:13:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7789,"name":"uint256","nodeType":"ElementaryTypeName","src":"16856:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"16855:15:29"},"returnParameters":{"id":7794,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7793,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7815,"src":"16894:6:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":7792,"name":"uint16","nodeType":"ElementaryTypeName","src":"16894:6:29","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"}],"src":"16893:8:29"},"scope":8713,"src":"16838:218:29","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7842,"nodeType":"Block","src":"17413:151:29","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7829,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7823,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7818,"src":"17428:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":7826,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"17441:5:29","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":7825,"name":"uint8","nodeType":"ElementaryTypeName","src":"17441:5:29","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"}],"id":7824,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"17436:4:29","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":7827,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17436:11:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint8","typeString":"type(uint8)"}},"id":7828,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"17448:3:29","memberName":"max","nodeType":"MemberAccess","src":"17436:15:29","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"17428:23:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7836,"nodeType":"IfStatement","src":"17424:103:29","trueBody":{"id":7835,"nodeType":"Block","src":"17453:74:29","statements":[{"errorCall":{"arguments":[{"hexValue":"38","id":7831,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17506:1:29","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},{"id":7832,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7818,"src":"17509:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7830,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6958,"src":"17475:30:29","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":7833,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17475:40:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":7834,"nodeType":"RevertStatement","src":"17468:47:29"}]}},{"expression":{"arguments":[{"id":7839,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7818,"src":"17550:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7838,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"17544:5:29","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":7837,"name":"uint8","nodeType":"ElementaryTypeName","src":"17544:5:29","typeDescriptions":{}}},"id":7840,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17544:12:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"functionReturnParameters":7822,"id":7841,"nodeType":"Return","src":"17537:19:29"}]},"documentation":{"id":7816,"nodeType":"StructuredDocumentation","src":"17064:281:29","text":" @dev Returns the downcasted uint8 from uint256, reverting on\n overflow (when the input is greater than largest uint8).\n Counterpart to Solidity's `uint8` operator.\n Requirements:\n - input must fit into 8 bits"},"id":7843,"implemented":true,"kind":"function","modifiers":[],"name":"toUint8","nameLocation":"17360:7:29","nodeType":"FunctionDefinition","parameters":{"id":7819,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7818,"mutability":"mutable","name":"value","nameLocation":"17376:5:29","nodeType":"VariableDeclaration","scope":7843,"src":"17368:13:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7817,"name":"uint256","nodeType":"ElementaryTypeName","src":"17368:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"17367:15:29"},"returnParameters":{"id":7822,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7821,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7843,"src":"17406:5:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":7820,"name":"uint8","nodeType":"ElementaryTypeName","src":"17406:5:29","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"17405:7:29"},"scope":8713,"src":"17351:213:29","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7865,"nodeType":"Block","src":"17809:133:29","statements":[{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7853,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7851,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7846,"src":"17824:5:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"30","id":7852,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17832:1:29","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"17824:9:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7859,"nodeType":"IfStatement","src":"17820:83:29","trueBody":{"id":7858,"nodeType":"Block","src":"17835:68:29","statements":[{"errorCall":{"arguments":[{"id":7855,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7846,"src":"17885:5:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7854,"name":"SafeCastOverflowedIntToUint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6963,"src":"17857:27:29","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_int256_$returns$_t_error_$","typeString":"function (int256) pure returns (error)"}},"id":7856,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17857:34:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":7857,"nodeType":"RevertStatement","src":"17850:41:29"}]}},{"expression":{"arguments":[{"id":7862,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7846,"src":"17928:5:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7861,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"17920:7:29","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":7860,"name":"uint256","nodeType":"ElementaryTypeName","src":"17920:7:29","typeDescriptions":{}}},"id":7863,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17920:14:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":7850,"id":7864,"nodeType":"Return","src":"17913:21:29"}]},"documentation":{"id":7844,"nodeType":"StructuredDocumentation","src":"17572:166:29","text":" @dev Converts a signed int256 into an unsigned uint256.\n Requirements:\n - input must be greater than or equal to 0."},"id":7866,"implemented":true,"kind":"function","modifiers":[],"name":"toUint256","nameLocation":"17753:9:29","nodeType":"FunctionDefinition","parameters":{"id":7847,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7846,"mutability":"mutable","name":"value","nameLocation":"17770:5:29","nodeType":"VariableDeclaration","scope":7866,"src":"17763:12:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7845,"name":"int256","nodeType":"ElementaryTypeName","src":"17763:6:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"17762:14:29"},"returnParameters":{"id":7850,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7849,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7866,"src":"17800:7:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7848,"name":"uint256","nodeType":"ElementaryTypeName","src":"17800:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"17799:9:29"},"scope":8713,"src":"17744:198:29","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7891,"nodeType":"Block","src":"18352:155:29","statements":[{"expression":{"id":7879,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7874,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7872,"src":"18363:10:29","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7877,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7869,"src":"18383:5:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7876,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"18376:6:29","typeDescriptions":{"typeIdentifier":"t_type$_t_int248_$","typeString":"type(int248)"},"typeName":{"id":7875,"name":"int248","nodeType":"ElementaryTypeName","src":"18376:6:29","typeDescriptions":{}}},"id":7878,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18376:13:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"src":"18363:26:29","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"id":7880,"nodeType":"ExpressionStatement","src":"18363:26:29"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7883,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7881,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7872,"src":"18404:10:29","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7882,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7869,"src":"18418:5:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"18404:19:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7890,"nodeType":"IfStatement","src":"18400:100:29","trueBody":{"id":7889,"nodeType":"Block","src":"18425:75:29","statements":[{"errorCall":{"arguments":[{"hexValue":"323438","id":7885,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18477:3:29","typeDescriptions":{"typeIdentifier":"t_rational_248_by_1","typeString":"int_const 248"},"value":"248"},{"id":7886,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7869,"src":"18482:5:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_248_by_1","typeString":"int_const 248"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7884,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6970,"src":"18447:29:29","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":7887,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18447:41:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":7888,"nodeType":"RevertStatement","src":"18440:48:29"}]}}]},"documentation":{"id":7867,"nodeType":"StructuredDocumentation","src":"17950:322:29","text":" @dev Returns the downcasted int248 from int256, reverting on\n overflow (when the input is less than smallest int248 or\n greater than largest int248).\n Counterpart to Solidity's `int248` operator.\n Requirements:\n - input must fit into 248 bits"},"id":7892,"implemented":true,"kind":"function","modifiers":[],"name":"toInt248","nameLocation":"18287:8:29","nodeType":"FunctionDefinition","parameters":{"id":7870,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7869,"mutability":"mutable","name":"value","nameLocation":"18303:5:29","nodeType":"VariableDeclaration","scope":7892,"src":"18296:12:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7868,"name":"int256","nodeType":"ElementaryTypeName","src":"18296:6:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"18295:14:29"},"returnParameters":{"id":7873,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7872,"mutability":"mutable","name":"downcasted","nameLocation":"18340:10:29","nodeType":"VariableDeclaration","scope":7892,"src":"18333:17:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"},"typeName":{"id":7871,"name":"int248","nodeType":"ElementaryTypeName","src":"18333:6:29","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"visibility":"internal"}],"src":"18332:19:29"},"scope":8713,"src":"18278:229:29","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7917,"nodeType":"Block","src":"18917:155:29","statements":[{"expression":{"id":7905,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7900,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7898,"src":"18928:10:29","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7903,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7895,"src":"18948:5:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7902,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"18941:6:29","typeDescriptions":{"typeIdentifier":"t_type$_t_int240_$","typeString":"type(int240)"},"typeName":{"id":7901,"name":"int240","nodeType":"ElementaryTypeName","src":"18941:6:29","typeDescriptions":{}}},"id":7904,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18941:13:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"src":"18928:26:29","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"id":7906,"nodeType":"ExpressionStatement","src":"18928:26:29"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7909,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7907,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7898,"src":"18969:10:29","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7908,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7895,"src":"18983:5:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"18969:19:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7916,"nodeType":"IfStatement","src":"18965:100:29","trueBody":{"id":7915,"nodeType":"Block","src":"18990:75:29","statements":[{"errorCall":{"arguments":[{"hexValue":"323430","id":7911,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19042:3:29","typeDescriptions":{"typeIdentifier":"t_rational_240_by_1","typeString":"int_const 240"},"value":"240"},{"id":7912,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7895,"src":"19047:5:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_240_by_1","typeString":"int_const 240"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7910,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6970,"src":"19012:29:29","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":7913,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19012:41:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":7914,"nodeType":"RevertStatement","src":"19005:48:29"}]}}]},"documentation":{"id":7893,"nodeType":"StructuredDocumentation","src":"18515:322:29","text":" @dev Returns the downcasted int240 from int256, reverting on\n overflow (when the input is less than smallest int240 or\n greater than largest int240).\n Counterpart to Solidity's `int240` operator.\n Requirements:\n - input must fit into 240 bits"},"id":7918,"implemented":true,"kind":"function","modifiers":[],"name":"toInt240","nameLocation":"18852:8:29","nodeType":"FunctionDefinition","parameters":{"id":7896,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7895,"mutability":"mutable","name":"value","nameLocation":"18868:5:29","nodeType":"VariableDeclaration","scope":7918,"src":"18861:12:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7894,"name":"int256","nodeType":"ElementaryTypeName","src":"18861:6:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"18860:14:29"},"returnParameters":{"id":7899,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7898,"mutability":"mutable","name":"downcasted","nameLocation":"18905:10:29","nodeType":"VariableDeclaration","scope":7918,"src":"18898:17:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"},"typeName":{"id":7897,"name":"int240","nodeType":"ElementaryTypeName","src":"18898:6:29","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"visibility":"internal"}],"src":"18897:19:29"},"scope":8713,"src":"18843:229:29","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7943,"nodeType":"Block","src":"19482:155:29","statements":[{"expression":{"id":7931,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7926,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7924,"src":"19493:10:29","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7929,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7921,"src":"19513:5:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7928,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"19506:6:29","typeDescriptions":{"typeIdentifier":"t_type$_t_int232_$","typeString":"type(int232)"},"typeName":{"id":7927,"name":"int232","nodeType":"ElementaryTypeName","src":"19506:6:29","typeDescriptions":{}}},"id":7930,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19506:13:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"src":"19493:26:29","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"id":7932,"nodeType":"ExpressionStatement","src":"19493:26:29"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7935,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7933,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7924,"src":"19534:10:29","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7934,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7921,"src":"19548:5:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"19534:19:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7942,"nodeType":"IfStatement","src":"19530:100:29","trueBody":{"id":7941,"nodeType":"Block","src":"19555:75:29","statements":[{"errorCall":{"arguments":[{"hexValue":"323332","id":7937,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19607:3:29","typeDescriptions":{"typeIdentifier":"t_rational_232_by_1","typeString":"int_const 232"},"value":"232"},{"id":7938,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7921,"src":"19612:5:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_232_by_1","typeString":"int_const 232"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7936,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6970,"src":"19577:29:29","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":7939,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19577:41:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":7940,"nodeType":"RevertStatement","src":"19570:48:29"}]}}]},"documentation":{"id":7919,"nodeType":"StructuredDocumentation","src":"19080:322:29","text":" @dev Returns the downcasted int232 from int256, reverting on\n overflow (when the input is less than smallest int232 or\n greater than largest int232).\n Counterpart to Solidity's `int232` operator.\n Requirements:\n - input must fit into 232 bits"},"id":7944,"implemented":true,"kind":"function","modifiers":[],"name":"toInt232","nameLocation":"19417:8:29","nodeType":"FunctionDefinition","parameters":{"id":7922,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7921,"mutability":"mutable","name":"value","nameLocation":"19433:5:29","nodeType":"VariableDeclaration","scope":7944,"src":"19426:12:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7920,"name":"int256","nodeType":"ElementaryTypeName","src":"19426:6:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"19425:14:29"},"returnParameters":{"id":7925,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7924,"mutability":"mutable","name":"downcasted","nameLocation":"19470:10:29","nodeType":"VariableDeclaration","scope":7944,"src":"19463:17:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"},"typeName":{"id":7923,"name":"int232","nodeType":"ElementaryTypeName","src":"19463:6:29","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"visibility":"internal"}],"src":"19462:19:29"},"scope":8713,"src":"19408:229:29","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7969,"nodeType":"Block","src":"20047:155:29","statements":[{"expression":{"id":7957,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7952,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7950,"src":"20058:10:29","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7955,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7947,"src":"20078:5:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7954,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"20071:6:29","typeDescriptions":{"typeIdentifier":"t_type$_t_int224_$","typeString":"type(int224)"},"typeName":{"id":7953,"name":"int224","nodeType":"ElementaryTypeName","src":"20071:6:29","typeDescriptions":{}}},"id":7956,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20071:13:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"src":"20058:26:29","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"id":7958,"nodeType":"ExpressionStatement","src":"20058:26:29"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7961,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7959,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7950,"src":"20099:10:29","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7960,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7947,"src":"20113:5:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"20099:19:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7968,"nodeType":"IfStatement","src":"20095:100:29","trueBody":{"id":7967,"nodeType":"Block","src":"20120:75:29","statements":[{"errorCall":{"arguments":[{"hexValue":"323234","id":7963,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20172:3:29","typeDescriptions":{"typeIdentifier":"t_rational_224_by_1","typeString":"int_const 224"},"value":"224"},{"id":7964,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7947,"src":"20177:5:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_224_by_1","typeString":"int_const 224"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7962,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6970,"src":"20142:29:29","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":7965,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20142:41:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":7966,"nodeType":"RevertStatement","src":"20135:48:29"}]}}]},"documentation":{"id":7945,"nodeType":"StructuredDocumentation","src":"19645:322:29","text":" @dev Returns the downcasted int224 from int256, reverting on\n overflow (when the input is less than smallest int224 or\n greater than largest int224).\n Counterpart to Solidity's `int224` operator.\n Requirements:\n - input must fit into 224 bits"},"id":7970,"implemented":true,"kind":"function","modifiers":[],"name":"toInt224","nameLocation":"19982:8:29","nodeType":"FunctionDefinition","parameters":{"id":7948,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7947,"mutability":"mutable","name":"value","nameLocation":"19998:5:29","nodeType":"VariableDeclaration","scope":7970,"src":"19991:12:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7946,"name":"int256","nodeType":"ElementaryTypeName","src":"19991:6:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"19990:14:29"},"returnParameters":{"id":7951,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7950,"mutability":"mutable","name":"downcasted","nameLocation":"20035:10:29","nodeType":"VariableDeclaration","scope":7970,"src":"20028:17:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"},"typeName":{"id":7949,"name":"int224","nodeType":"ElementaryTypeName","src":"20028:6:29","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"visibility":"internal"}],"src":"20027:19:29"},"scope":8713,"src":"19973:229:29","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7995,"nodeType":"Block","src":"20612:155:29","statements":[{"expression":{"id":7983,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7978,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7976,"src":"20623:10:29","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7981,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7973,"src":"20643:5:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7980,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"20636:6:29","typeDescriptions":{"typeIdentifier":"t_type$_t_int216_$","typeString":"type(int216)"},"typeName":{"id":7979,"name":"int216","nodeType":"ElementaryTypeName","src":"20636:6:29","typeDescriptions":{}}},"id":7982,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20636:13:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"src":"20623:26:29","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"id":7984,"nodeType":"ExpressionStatement","src":"20623:26:29"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7987,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7985,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7976,"src":"20664:10:29","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7986,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7973,"src":"20678:5:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"20664:19:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7994,"nodeType":"IfStatement","src":"20660:100:29","trueBody":{"id":7993,"nodeType":"Block","src":"20685:75:29","statements":[{"errorCall":{"arguments":[{"hexValue":"323136","id":7989,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20737:3:29","typeDescriptions":{"typeIdentifier":"t_rational_216_by_1","typeString":"int_const 216"},"value":"216"},{"id":7990,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7973,"src":"20742:5:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_216_by_1","typeString":"int_const 216"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7988,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6970,"src":"20707:29:29","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":7991,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20707:41:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":7992,"nodeType":"RevertStatement","src":"20700:48:29"}]}}]},"documentation":{"id":7971,"nodeType":"StructuredDocumentation","src":"20210:322:29","text":" @dev Returns the downcasted int216 from int256, reverting on\n overflow (when the input is less than smallest int216 or\n greater than largest int216).\n Counterpart to Solidity's `int216` operator.\n Requirements:\n - input must fit into 216 bits"},"id":7996,"implemented":true,"kind":"function","modifiers":[],"name":"toInt216","nameLocation":"20547:8:29","nodeType":"FunctionDefinition","parameters":{"id":7974,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7973,"mutability":"mutable","name":"value","nameLocation":"20563:5:29","nodeType":"VariableDeclaration","scope":7996,"src":"20556:12:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7972,"name":"int256","nodeType":"ElementaryTypeName","src":"20556:6:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"20555:14:29"},"returnParameters":{"id":7977,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7976,"mutability":"mutable","name":"downcasted","nameLocation":"20600:10:29","nodeType":"VariableDeclaration","scope":7996,"src":"20593:17:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"},"typeName":{"id":7975,"name":"int216","nodeType":"ElementaryTypeName","src":"20593:6:29","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"visibility":"internal"}],"src":"20592:19:29"},"scope":8713,"src":"20538:229:29","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8021,"nodeType":"Block","src":"21177:155:29","statements":[{"expression":{"id":8009,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8004,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8002,"src":"21188:10:29","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":8007,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7999,"src":"21208:5:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8006,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"21201:6:29","typeDescriptions":{"typeIdentifier":"t_type$_t_int208_$","typeString":"type(int208)"},"typeName":{"id":8005,"name":"int208","nodeType":"ElementaryTypeName","src":"21201:6:29","typeDescriptions":{}}},"id":8008,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21201:13:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"src":"21188:26:29","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"id":8010,"nodeType":"ExpressionStatement","src":"21188:26:29"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":8013,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8011,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8002,"src":"21229:10:29","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":8012,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7999,"src":"21243:5:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"21229:19:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8020,"nodeType":"IfStatement","src":"21225:100:29","trueBody":{"id":8019,"nodeType":"Block","src":"21250:75:29","statements":[{"errorCall":{"arguments":[{"hexValue":"323038","id":8015,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21302:3:29","typeDescriptions":{"typeIdentifier":"t_rational_208_by_1","typeString":"int_const 208"},"value":"208"},{"id":8016,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7999,"src":"21307:5:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_208_by_1","typeString":"int_const 208"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8014,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6970,"src":"21272:29:29","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":8017,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21272:41:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":8018,"nodeType":"RevertStatement","src":"21265:48:29"}]}}]},"documentation":{"id":7997,"nodeType":"StructuredDocumentation","src":"20775:322:29","text":" @dev Returns the downcasted int208 from int256, reverting on\n overflow (when the input is less than smallest int208 or\n greater than largest int208).\n Counterpart to Solidity's `int208` operator.\n Requirements:\n - input must fit into 208 bits"},"id":8022,"implemented":true,"kind":"function","modifiers":[],"name":"toInt208","nameLocation":"21112:8:29","nodeType":"FunctionDefinition","parameters":{"id":8000,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7999,"mutability":"mutable","name":"value","nameLocation":"21128:5:29","nodeType":"VariableDeclaration","scope":8022,"src":"21121:12:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7998,"name":"int256","nodeType":"ElementaryTypeName","src":"21121:6:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"21120:14:29"},"returnParameters":{"id":8003,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8002,"mutability":"mutable","name":"downcasted","nameLocation":"21165:10:29","nodeType":"VariableDeclaration","scope":8022,"src":"21158:17:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"},"typeName":{"id":8001,"name":"int208","nodeType":"ElementaryTypeName","src":"21158:6:29","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"visibility":"internal"}],"src":"21157:19:29"},"scope":8713,"src":"21103:229:29","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8047,"nodeType":"Block","src":"21742:155:29","statements":[{"expression":{"id":8035,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8030,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8028,"src":"21753:10:29","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":8033,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8025,"src":"21773:5:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8032,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"21766:6:29","typeDescriptions":{"typeIdentifier":"t_type$_t_int200_$","typeString":"type(int200)"},"typeName":{"id":8031,"name":"int200","nodeType":"ElementaryTypeName","src":"21766:6:29","typeDescriptions":{}}},"id":8034,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21766:13:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"src":"21753:26:29","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"id":8036,"nodeType":"ExpressionStatement","src":"21753:26:29"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":8039,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8037,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8028,"src":"21794:10:29","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":8038,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8025,"src":"21808:5:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"21794:19:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8046,"nodeType":"IfStatement","src":"21790:100:29","trueBody":{"id":8045,"nodeType":"Block","src":"21815:75:29","statements":[{"errorCall":{"arguments":[{"hexValue":"323030","id":8041,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21867:3:29","typeDescriptions":{"typeIdentifier":"t_rational_200_by_1","typeString":"int_const 200"},"value":"200"},{"id":8042,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8025,"src":"21872:5:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_200_by_1","typeString":"int_const 200"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8040,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6970,"src":"21837:29:29","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":8043,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21837:41:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":8044,"nodeType":"RevertStatement","src":"21830:48:29"}]}}]},"documentation":{"id":8023,"nodeType":"StructuredDocumentation","src":"21340:322:29","text":" @dev Returns the downcasted int200 from int256, reverting on\n overflow (when the input is less than smallest int200 or\n greater than largest int200).\n Counterpart to Solidity's `int200` operator.\n Requirements:\n - input must fit into 200 bits"},"id":8048,"implemented":true,"kind":"function","modifiers":[],"name":"toInt200","nameLocation":"21677:8:29","nodeType":"FunctionDefinition","parameters":{"id":8026,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8025,"mutability":"mutable","name":"value","nameLocation":"21693:5:29","nodeType":"VariableDeclaration","scope":8048,"src":"21686:12:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":8024,"name":"int256","nodeType":"ElementaryTypeName","src":"21686:6:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"21685:14:29"},"returnParameters":{"id":8029,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8028,"mutability":"mutable","name":"downcasted","nameLocation":"21730:10:29","nodeType":"VariableDeclaration","scope":8048,"src":"21723:17:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"},"typeName":{"id":8027,"name":"int200","nodeType":"ElementaryTypeName","src":"21723:6:29","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"visibility":"internal"}],"src":"21722:19:29"},"scope":8713,"src":"21668:229:29","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8073,"nodeType":"Block","src":"22307:155:29","statements":[{"expression":{"id":8061,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8056,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8054,"src":"22318:10:29","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":8059,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8051,"src":"22338:5:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8058,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"22331:6:29","typeDescriptions":{"typeIdentifier":"t_type$_t_int192_$","typeString":"type(int192)"},"typeName":{"id":8057,"name":"int192","nodeType":"ElementaryTypeName","src":"22331:6:29","typeDescriptions":{}}},"id":8060,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22331:13:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"src":"22318:26:29","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"id":8062,"nodeType":"ExpressionStatement","src":"22318:26:29"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":8065,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8063,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8054,"src":"22359:10:29","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":8064,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8051,"src":"22373:5:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"22359:19:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8072,"nodeType":"IfStatement","src":"22355:100:29","trueBody":{"id":8071,"nodeType":"Block","src":"22380:75:29","statements":[{"errorCall":{"arguments":[{"hexValue":"313932","id":8067,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22432:3:29","typeDescriptions":{"typeIdentifier":"t_rational_192_by_1","typeString":"int_const 192"},"value":"192"},{"id":8068,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8051,"src":"22437:5:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_192_by_1","typeString":"int_const 192"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8066,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6970,"src":"22402:29:29","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":8069,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22402:41:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":8070,"nodeType":"RevertStatement","src":"22395:48:29"}]}}]},"documentation":{"id":8049,"nodeType":"StructuredDocumentation","src":"21905:322:29","text":" @dev Returns the downcasted int192 from int256, reverting on\n overflow (when the input is less than smallest int192 or\n greater than largest int192).\n Counterpart to Solidity's `int192` operator.\n Requirements:\n - input must fit into 192 bits"},"id":8074,"implemented":true,"kind":"function","modifiers":[],"name":"toInt192","nameLocation":"22242:8:29","nodeType":"FunctionDefinition","parameters":{"id":8052,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8051,"mutability":"mutable","name":"value","nameLocation":"22258:5:29","nodeType":"VariableDeclaration","scope":8074,"src":"22251:12:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":8050,"name":"int256","nodeType":"ElementaryTypeName","src":"22251:6:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"22250:14:29"},"returnParameters":{"id":8055,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8054,"mutability":"mutable","name":"downcasted","nameLocation":"22295:10:29","nodeType":"VariableDeclaration","scope":8074,"src":"22288:17:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"},"typeName":{"id":8053,"name":"int192","nodeType":"ElementaryTypeName","src":"22288:6:29","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"visibility":"internal"}],"src":"22287:19:29"},"scope":8713,"src":"22233:229:29","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8099,"nodeType":"Block","src":"22872:155:29","statements":[{"expression":{"id":8087,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8082,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8080,"src":"22883:10:29","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":8085,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8077,"src":"22903:5:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8084,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"22896:6:29","typeDescriptions":{"typeIdentifier":"t_type$_t_int184_$","typeString":"type(int184)"},"typeName":{"id":8083,"name":"int184","nodeType":"ElementaryTypeName","src":"22896:6:29","typeDescriptions":{}}},"id":8086,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22896:13:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"src":"22883:26:29","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"id":8088,"nodeType":"ExpressionStatement","src":"22883:26:29"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":8091,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8089,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8080,"src":"22924:10:29","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":8090,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8077,"src":"22938:5:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"22924:19:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8098,"nodeType":"IfStatement","src":"22920:100:29","trueBody":{"id":8097,"nodeType":"Block","src":"22945:75:29","statements":[{"errorCall":{"arguments":[{"hexValue":"313834","id":8093,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22997:3:29","typeDescriptions":{"typeIdentifier":"t_rational_184_by_1","typeString":"int_const 184"},"value":"184"},{"id":8094,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8077,"src":"23002:5:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_184_by_1","typeString":"int_const 184"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8092,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6970,"src":"22967:29:29","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":8095,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22967:41:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":8096,"nodeType":"RevertStatement","src":"22960:48:29"}]}}]},"documentation":{"id":8075,"nodeType":"StructuredDocumentation","src":"22470:322:29","text":" @dev Returns the downcasted int184 from int256, reverting on\n overflow (when the input is less than smallest int184 or\n greater than largest int184).\n Counterpart to Solidity's `int184` operator.\n Requirements:\n - input must fit into 184 bits"},"id":8100,"implemented":true,"kind":"function","modifiers":[],"name":"toInt184","nameLocation":"22807:8:29","nodeType":"FunctionDefinition","parameters":{"id":8078,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8077,"mutability":"mutable","name":"value","nameLocation":"22823:5:29","nodeType":"VariableDeclaration","scope":8100,"src":"22816:12:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":8076,"name":"int256","nodeType":"ElementaryTypeName","src":"22816:6:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"22815:14:29"},"returnParameters":{"id":8081,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8080,"mutability":"mutable","name":"downcasted","nameLocation":"22860:10:29","nodeType":"VariableDeclaration","scope":8100,"src":"22853:17:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"},"typeName":{"id":8079,"name":"int184","nodeType":"ElementaryTypeName","src":"22853:6:29","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"visibility":"internal"}],"src":"22852:19:29"},"scope":8713,"src":"22798:229:29","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8125,"nodeType":"Block","src":"23437:155:29","statements":[{"expression":{"id":8113,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8108,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8106,"src":"23448:10:29","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":8111,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8103,"src":"23468:5:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8110,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"23461:6:29","typeDescriptions":{"typeIdentifier":"t_type$_t_int176_$","typeString":"type(int176)"},"typeName":{"id":8109,"name":"int176","nodeType":"ElementaryTypeName","src":"23461:6:29","typeDescriptions":{}}},"id":8112,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23461:13:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"src":"23448:26:29","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"id":8114,"nodeType":"ExpressionStatement","src":"23448:26:29"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":8117,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8115,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8106,"src":"23489:10:29","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":8116,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8103,"src":"23503:5:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"23489:19:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8124,"nodeType":"IfStatement","src":"23485:100:29","trueBody":{"id":8123,"nodeType":"Block","src":"23510:75:29","statements":[{"errorCall":{"arguments":[{"hexValue":"313736","id":8119,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"23562:3:29","typeDescriptions":{"typeIdentifier":"t_rational_176_by_1","typeString":"int_const 176"},"value":"176"},{"id":8120,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8103,"src":"23567:5:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_176_by_1","typeString":"int_const 176"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8118,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6970,"src":"23532:29:29","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":8121,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23532:41:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":8122,"nodeType":"RevertStatement","src":"23525:48:29"}]}}]},"documentation":{"id":8101,"nodeType":"StructuredDocumentation","src":"23035:322:29","text":" @dev Returns the downcasted int176 from int256, reverting on\n overflow (when the input is less than smallest int176 or\n greater than largest int176).\n Counterpart to Solidity's `int176` operator.\n Requirements:\n - input must fit into 176 bits"},"id":8126,"implemented":true,"kind":"function","modifiers":[],"name":"toInt176","nameLocation":"23372:8:29","nodeType":"FunctionDefinition","parameters":{"id":8104,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8103,"mutability":"mutable","name":"value","nameLocation":"23388:5:29","nodeType":"VariableDeclaration","scope":8126,"src":"23381:12:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":8102,"name":"int256","nodeType":"ElementaryTypeName","src":"23381:6:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"23380:14:29"},"returnParameters":{"id":8107,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8106,"mutability":"mutable","name":"downcasted","nameLocation":"23425:10:29","nodeType":"VariableDeclaration","scope":8126,"src":"23418:17:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"},"typeName":{"id":8105,"name":"int176","nodeType":"ElementaryTypeName","src":"23418:6:29","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"visibility":"internal"}],"src":"23417:19:29"},"scope":8713,"src":"23363:229:29","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8151,"nodeType":"Block","src":"24002:155:29","statements":[{"expression":{"id":8139,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8134,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8132,"src":"24013:10:29","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":8137,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8129,"src":"24033:5:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8136,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"24026:6:29","typeDescriptions":{"typeIdentifier":"t_type$_t_int168_$","typeString":"type(int168)"},"typeName":{"id":8135,"name":"int168","nodeType":"ElementaryTypeName","src":"24026:6:29","typeDescriptions":{}}},"id":8138,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24026:13:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"src":"24013:26:29","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"id":8140,"nodeType":"ExpressionStatement","src":"24013:26:29"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":8143,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8141,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8132,"src":"24054:10:29","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":8142,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8129,"src":"24068:5:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"24054:19:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8150,"nodeType":"IfStatement","src":"24050:100:29","trueBody":{"id":8149,"nodeType":"Block","src":"24075:75:29","statements":[{"errorCall":{"arguments":[{"hexValue":"313638","id":8145,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24127:3:29","typeDescriptions":{"typeIdentifier":"t_rational_168_by_1","typeString":"int_const 168"},"value":"168"},{"id":8146,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8129,"src":"24132:5:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_168_by_1","typeString":"int_const 168"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8144,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6970,"src":"24097:29:29","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":8147,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24097:41:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":8148,"nodeType":"RevertStatement","src":"24090:48:29"}]}}]},"documentation":{"id":8127,"nodeType":"StructuredDocumentation","src":"23600:322:29","text":" @dev Returns the downcasted int168 from int256, reverting on\n overflow (when the input is less than smallest int168 or\n greater than largest int168).\n Counterpart to Solidity's `int168` operator.\n Requirements:\n - input must fit into 168 bits"},"id":8152,"implemented":true,"kind":"function","modifiers":[],"name":"toInt168","nameLocation":"23937:8:29","nodeType":"FunctionDefinition","parameters":{"id":8130,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8129,"mutability":"mutable","name":"value","nameLocation":"23953:5:29","nodeType":"VariableDeclaration","scope":8152,"src":"23946:12:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":8128,"name":"int256","nodeType":"ElementaryTypeName","src":"23946:6:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"23945:14:29"},"returnParameters":{"id":8133,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8132,"mutability":"mutable","name":"downcasted","nameLocation":"23990:10:29","nodeType":"VariableDeclaration","scope":8152,"src":"23983:17:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"},"typeName":{"id":8131,"name":"int168","nodeType":"ElementaryTypeName","src":"23983:6:29","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"visibility":"internal"}],"src":"23982:19:29"},"scope":8713,"src":"23928:229:29","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8177,"nodeType":"Block","src":"24567:155:29","statements":[{"expression":{"id":8165,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8160,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8158,"src":"24578:10:29","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":8163,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8155,"src":"24598:5:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8162,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"24591:6:29","typeDescriptions":{"typeIdentifier":"t_type$_t_int160_$","typeString":"type(int160)"},"typeName":{"id":8161,"name":"int160","nodeType":"ElementaryTypeName","src":"24591:6:29","typeDescriptions":{}}},"id":8164,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24591:13:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"src":"24578:26:29","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"id":8166,"nodeType":"ExpressionStatement","src":"24578:26:29"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":8169,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8167,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8158,"src":"24619:10:29","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":8168,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8155,"src":"24633:5:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"24619:19:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8176,"nodeType":"IfStatement","src":"24615:100:29","trueBody":{"id":8175,"nodeType":"Block","src":"24640:75:29","statements":[{"errorCall":{"arguments":[{"hexValue":"313630","id":8171,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24692:3:29","typeDescriptions":{"typeIdentifier":"t_rational_160_by_1","typeString":"int_const 160"},"value":"160"},{"id":8172,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8155,"src":"24697:5:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_160_by_1","typeString":"int_const 160"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8170,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6970,"src":"24662:29:29","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":8173,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24662:41:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":8174,"nodeType":"RevertStatement","src":"24655:48:29"}]}}]},"documentation":{"id":8153,"nodeType":"StructuredDocumentation","src":"24165:322:29","text":" @dev Returns the downcasted int160 from int256, reverting on\n overflow (when the input is less than smallest int160 or\n greater than largest int160).\n Counterpart to Solidity's `int160` operator.\n Requirements:\n - input must fit into 160 bits"},"id":8178,"implemented":true,"kind":"function","modifiers":[],"name":"toInt160","nameLocation":"24502:8:29","nodeType":"FunctionDefinition","parameters":{"id":8156,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8155,"mutability":"mutable","name":"value","nameLocation":"24518:5:29","nodeType":"VariableDeclaration","scope":8178,"src":"24511:12:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":8154,"name":"int256","nodeType":"ElementaryTypeName","src":"24511:6:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"24510:14:29"},"returnParameters":{"id":8159,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8158,"mutability":"mutable","name":"downcasted","nameLocation":"24555:10:29","nodeType":"VariableDeclaration","scope":8178,"src":"24548:17:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"},"typeName":{"id":8157,"name":"int160","nodeType":"ElementaryTypeName","src":"24548:6:29","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"visibility":"internal"}],"src":"24547:19:29"},"scope":8713,"src":"24493:229:29","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8203,"nodeType":"Block","src":"25132:155:29","statements":[{"expression":{"id":8191,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8186,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8184,"src":"25143:10:29","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":8189,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8181,"src":"25163:5:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8188,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"25156:6:29","typeDescriptions":{"typeIdentifier":"t_type$_t_int152_$","typeString":"type(int152)"},"typeName":{"id":8187,"name":"int152","nodeType":"ElementaryTypeName","src":"25156:6:29","typeDescriptions":{}}},"id":8190,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25156:13:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"src":"25143:26:29","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"id":8192,"nodeType":"ExpressionStatement","src":"25143:26:29"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":8195,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8193,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8184,"src":"25184:10:29","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":8194,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8181,"src":"25198:5:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"25184:19:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8202,"nodeType":"IfStatement","src":"25180:100:29","trueBody":{"id":8201,"nodeType":"Block","src":"25205:75:29","statements":[{"errorCall":{"arguments":[{"hexValue":"313532","id":8197,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25257:3:29","typeDescriptions":{"typeIdentifier":"t_rational_152_by_1","typeString":"int_const 152"},"value":"152"},{"id":8198,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8181,"src":"25262:5:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_152_by_1","typeString":"int_const 152"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8196,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6970,"src":"25227:29:29","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":8199,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25227:41:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":8200,"nodeType":"RevertStatement","src":"25220:48:29"}]}}]},"documentation":{"id":8179,"nodeType":"StructuredDocumentation","src":"24730:322:29","text":" @dev Returns the downcasted int152 from int256, reverting on\n overflow (when the input is less than smallest int152 or\n greater than largest int152).\n Counterpart to Solidity's `int152` operator.\n Requirements:\n - input must fit into 152 bits"},"id":8204,"implemented":true,"kind":"function","modifiers":[],"name":"toInt152","nameLocation":"25067:8:29","nodeType":"FunctionDefinition","parameters":{"id":8182,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8181,"mutability":"mutable","name":"value","nameLocation":"25083:5:29","nodeType":"VariableDeclaration","scope":8204,"src":"25076:12:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":8180,"name":"int256","nodeType":"ElementaryTypeName","src":"25076:6:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"25075:14:29"},"returnParameters":{"id":8185,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8184,"mutability":"mutable","name":"downcasted","nameLocation":"25120:10:29","nodeType":"VariableDeclaration","scope":8204,"src":"25113:17:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"},"typeName":{"id":8183,"name":"int152","nodeType":"ElementaryTypeName","src":"25113:6:29","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"visibility":"internal"}],"src":"25112:19:29"},"scope":8713,"src":"25058:229:29","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8229,"nodeType":"Block","src":"25697:155:29","statements":[{"expression":{"id":8217,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8212,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8210,"src":"25708:10:29","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":8215,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8207,"src":"25728:5:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8214,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"25721:6:29","typeDescriptions":{"typeIdentifier":"t_type$_t_int144_$","typeString":"type(int144)"},"typeName":{"id":8213,"name":"int144","nodeType":"ElementaryTypeName","src":"25721:6:29","typeDescriptions":{}}},"id":8216,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25721:13:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"src":"25708:26:29","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"id":8218,"nodeType":"ExpressionStatement","src":"25708:26:29"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":8221,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8219,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8210,"src":"25749:10:29","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":8220,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8207,"src":"25763:5:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"25749:19:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8228,"nodeType":"IfStatement","src":"25745:100:29","trueBody":{"id":8227,"nodeType":"Block","src":"25770:75:29","statements":[{"errorCall":{"arguments":[{"hexValue":"313434","id":8223,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25822:3:29","typeDescriptions":{"typeIdentifier":"t_rational_144_by_1","typeString":"int_const 144"},"value":"144"},{"id":8224,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8207,"src":"25827:5:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_144_by_1","typeString":"int_const 144"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8222,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6970,"src":"25792:29:29","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":8225,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25792:41:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":8226,"nodeType":"RevertStatement","src":"25785:48:29"}]}}]},"documentation":{"id":8205,"nodeType":"StructuredDocumentation","src":"25295:322:29","text":" @dev Returns the downcasted int144 from int256, reverting on\n overflow (when the input is less than smallest int144 or\n greater than largest int144).\n Counterpart to Solidity's `int144` operator.\n Requirements:\n - input must fit into 144 bits"},"id":8230,"implemented":true,"kind":"function","modifiers":[],"name":"toInt144","nameLocation":"25632:8:29","nodeType":"FunctionDefinition","parameters":{"id":8208,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8207,"mutability":"mutable","name":"value","nameLocation":"25648:5:29","nodeType":"VariableDeclaration","scope":8230,"src":"25641:12:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":8206,"name":"int256","nodeType":"ElementaryTypeName","src":"25641:6:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"25640:14:29"},"returnParameters":{"id":8211,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8210,"mutability":"mutable","name":"downcasted","nameLocation":"25685:10:29","nodeType":"VariableDeclaration","scope":8230,"src":"25678:17:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"},"typeName":{"id":8209,"name":"int144","nodeType":"ElementaryTypeName","src":"25678:6:29","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"visibility":"internal"}],"src":"25677:19:29"},"scope":8713,"src":"25623:229:29","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8255,"nodeType":"Block","src":"26262:155:29","statements":[{"expression":{"id":8243,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8238,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8236,"src":"26273:10:29","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":8241,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8233,"src":"26293:5:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8240,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"26286:6:29","typeDescriptions":{"typeIdentifier":"t_type$_t_int136_$","typeString":"type(int136)"},"typeName":{"id":8239,"name":"int136","nodeType":"ElementaryTypeName","src":"26286:6:29","typeDescriptions":{}}},"id":8242,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26286:13:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"src":"26273:26:29","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"id":8244,"nodeType":"ExpressionStatement","src":"26273:26:29"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":8247,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8245,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8236,"src":"26314:10:29","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":8246,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8233,"src":"26328:5:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"26314:19:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8254,"nodeType":"IfStatement","src":"26310:100:29","trueBody":{"id":8253,"nodeType":"Block","src":"26335:75:29","statements":[{"errorCall":{"arguments":[{"hexValue":"313336","id":8249,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26387:3:29","typeDescriptions":{"typeIdentifier":"t_rational_136_by_1","typeString":"int_const 136"},"value":"136"},{"id":8250,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8233,"src":"26392:5:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_136_by_1","typeString":"int_const 136"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8248,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6970,"src":"26357:29:29","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":8251,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26357:41:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":8252,"nodeType":"RevertStatement","src":"26350:48:29"}]}}]},"documentation":{"id":8231,"nodeType":"StructuredDocumentation","src":"25860:322:29","text":" @dev Returns the downcasted int136 from int256, reverting on\n overflow (when the input is less than smallest int136 or\n greater than largest int136).\n Counterpart to Solidity's `int136` operator.\n Requirements:\n - input must fit into 136 bits"},"id":8256,"implemented":true,"kind":"function","modifiers":[],"name":"toInt136","nameLocation":"26197:8:29","nodeType":"FunctionDefinition","parameters":{"id":8234,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8233,"mutability":"mutable","name":"value","nameLocation":"26213:5:29","nodeType":"VariableDeclaration","scope":8256,"src":"26206:12:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":8232,"name":"int256","nodeType":"ElementaryTypeName","src":"26206:6:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"26205:14:29"},"returnParameters":{"id":8237,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8236,"mutability":"mutable","name":"downcasted","nameLocation":"26250:10:29","nodeType":"VariableDeclaration","scope":8256,"src":"26243:17:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"},"typeName":{"id":8235,"name":"int136","nodeType":"ElementaryTypeName","src":"26243:6:29","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"visibility":"internal"}],"src":"26242:19:29"},"scope":8713,"src":"26188:229:29","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8281,"nodeType":"Block","src":"26827:155:29","statements":[{"expression":{"id":8269,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8264,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8262,"src":"26838:10:29","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":8267,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8259,"src":"26858:5:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8266,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"26851:6:29","typeDescriptions":{"typeIdentifier":"t_type$_t_int128_$","typeString":"type(int128)"},"typeName":{"id":8265,"name":"int128","nodeType":"ElementaryTypeName","src":"26851:6:29","typeDescriptions":{}}},"id":8268,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26851:13:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"src":"26838:26:29","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"id":8270,"nodeType":"ExpressionStatement","src":"26838:26:29"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":8273,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8271,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8262,"src":"26879:10:29","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":8272,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8259,"src":"26893:5:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"26879:19:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8280,"nodeType":"IfStatement","src":"26875:100:29","trueBody":{"id":8279,"nodeType":"Block","src":"26900:75:29","statements":[{"errorCall":{"arguments":[{"hexValue":"313238","id":8275,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26952:3:29","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},{"id":8276,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8259,"src":"26957:5:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8274,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6970,"src":"26922:29:29","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":8277,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26922:41:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":8278,"nodeType":"RevertStatement","src":"26915:48:29"}]}}]},"documentation":{"id":8257,"nodeType":"StructuredDocumentation","src":"26425:322:29","text":" @dev Returns the downcasted int128 from int256, reverting on\n overflow (when the input is less than smallest int128 or\n greater than largest int128).\n Counterpart to Solidity's `int128` operator.\n Requirements:\n - input must fit into 128 bits"},"id":8282,"implemented":true,"kind":"function","modifiers":[],"name":"toInt128","nameLocation":"26762:8:29","nodeType":"FunctionDefinition","parameters":{"id":8260,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8259,"mutability":"mutable","name":"value","nameLocation":"26778:5:29","nodeType":"VariableDeclaration","scope":8282,"src":"26771:12:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":8258,"name":"int256","nodeType":"ElementaryTypeName","src":"26771:6:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"26770:14:29"},"returnParameters":{"id":8263,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8262,"mutability":"mutable","name":"downcasted","nameLocation":"26815:10:29","nodeType":"VariableDeclaration","scope":8282,"src":"26808:17:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"},"typeName":{"id":8261,"name":"int128","nodeType":"ElementaryTypeName","src":"26808:6:29","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"visibility":"internal"}],"src":"26807:19:29"},"scope":8713,"src":"26753:229:29","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8307,"nodeType":"Block","src":"27392:155:29","statements":[{"expression":{"id":8295,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8290,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8288,"src":"27403:10:29","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":8293,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8285,"src":"27423:5:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8292,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"27416:6:29","typeDescriptions":{"typeIdentifier":"t_type$_t_int120_$","typeString":"type(int120)"},"typeName":{"id":8291,"name":"int120","nodeType":"ElementaryTypeName","src":"27416:6:29","typeDescriptions":{}}},"id":8294,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27416:13:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"src":"27403:26:29","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"id":8296,"nodeType":"ExpressionStatement","src":"27403:26:29"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":8299,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8297,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8288,"src":"27444:10:29","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":8298,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8285,"src":"27458:5:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"27444:19:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8306,"nodeType":"IfStatement","src":"27440:100:29","trueBody":{"id":8305,"nodeType":"Block","src":"27465:75:29","statements":[{"errorCall":{"arguments":[{"hexValue":"313230","id":8301,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27517:3:29","typeDescriptions":{"typeIdentifier":"t_rational_120_by_1","typeString":"int_const 120"},"value":"120"},{"id":8302,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8285,"src":"27522:5:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_120_by_1","typeString":"int_const 120"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8300,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6970,"src":"27487:29:29","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":8303,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27487:41:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":8304,"nodeType":"RevertStatement","src":"27480:48:29"}]}}]},"documentation":{"id":8283,"nodeType":"StructuredDocumentation","src":"26990:322:29","text":" @dev Returns the downcasted int120 from int256, reverting on\n overflow (when the input is less than smallest int120 or\n greater than largest int120).\n Counterpart to Solidity's `int120` operator.\n Requirements:\n - input must fit into 120 bits"},"id":8308,"implemented":true,"kind":"function","modifiers":[],"name":"toInt120","nameLocation":"27327:8:29","nodeType":"FunctionDefinition","parameters":{"id":8286,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8285,"mutability":"mutable","name":"value","nameLocation":"27343:5:29","nodeType":"VariableDeclaration","scope":8308,"src":"27336:12:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":8284,"name":"int256","nodeType":"ElementaryTypeName","src":"27336:6:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"27335:14:29"},"returnParameters":{"id":8289,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8288,"mutability":"mutable","name":"downcasted","nameLocation":"27380:10:29","nodeType":"VariableDeclaration","scope":8308,"src":"27373:17:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"},"typeName":{"id":8287,"name":"int120","nodeType":"ElementaryTypeName","src":"27373:6:29","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"visibility":"internal"}],"src":"27372:19:29"},"scope":8713,"src":"27318:229:29","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8333,"nodeType":"Block","src":"27957:155:29","statements":[{"expression":{"id":8321,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8316,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8314,"src":"27968:10:29","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":8319,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8311,"src":"27988:5:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8318,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"27981:6:29","typeDescriptions":{"typeIdentifier":"t_type$_t_int112_$","typeString":"type(int112)"},"typeName":{"id":8317,"name":"int112","nodeType":"ElementaryTypeName","src":"27981:6:29","typeDescriptions":{}}},"id":8320,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27981:13:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"src":"27968:26:29","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"id":8322,"nodeType":"ExpressionStatement","src":"27968:26:29"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":8325,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8323,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8314,"src":"28009:10:29","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":8324,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8311,"src":"28023:5:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"28009:19:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8332,"nodeType":"IfStatement","src":"28005:100:29","trueBody":{"id":8331,"nodeType":"Block","src":"28030:75:29","statements":[{"errorCall":{"arguments":[{"hexValue":"313132","id":8327,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"28082:3:29","typeDescriptions":{"typeIdentifier":"t_rational_112_by_1","typeString":"int_const 112"},"value":"112"},{"id":8328,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8311,"src":"28087:5:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_112_by_1","typeString":"int_const 112"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8326,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6970,"src":"28052:29:29","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":8329,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28052:41:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":8330,"nodeType":"RevertStatement","src":"28045:48:29"}]}}]},"documentation":{"id":8309,"nodeType":"StructuredDocumentation","src":"27555:322:29","text":" @dev Returns the downcasted int112 from int256, reverting on\n overflow (when the input is less than smallest int112 or\n greater than largest int112).\n Counterpart to Solidity's `int112` operator.\n Requirements:\n - input must fit into 112 bits"},"id":8334,"implemented":true,"kind":"function","modifiers":[],"name":"toInt112","nameLocation":"27892:8:29","nodeType":"FunctionDefinition","parameters":{"id":8312,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8311,"mutability":"mutable","name":"value","nameLocation":"27908:5:29","nodeType":"VariableDeclaration","scope":8334,"src":"27901:12:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":8310,"name":"int256","nodeType":"ElementaryTypeName","src":"27901:6:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"27900:14:29"},"returnParameters":{"id":8315,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8314,"mutability":"mutable","name":"downcasted","nameLocation":"27945:10:29","nodeType":"VariableDeclaration","scope":8334,"src":"27938:17:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"},"typeName":{"id":8313,"name":"int112","nodeType":"ElementaryTypeName","src":"27938:6:29","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"visibility":"internal"}],"src":"27937:19:29"},"scope":8713,"src":"27883:229:29","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8359,"nodeType":"Block","src":"28522:155:29","statements":[{"expression":{"id":8347,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8342,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8340,"src":"28533:10:29","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":8345,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8337,"src":"28553:5:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8344,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"28546:6:29","typeDescriptions":{"typeIdentifier":"t_type$_t_int104_$","typeString":"type(int104)"},"typeName":{"id":8343,"name":"int104","nodeType":"ElementaryTypeName","src":"28546:6:29","typeDescriptions":{}}},"id":8346,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28546:13:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"src":"28533:26:29","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"id":8348,"nodeType":"ExpressionStatement","src":"28533:26:29"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":8351,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8349,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8340,"src":"28574:10:29","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":8350,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8337,"src":"28588:5:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"28574:19:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8358,"nodeType":"IfStatement","src":"28570:100:29","trueBody":{"id":8357,"nodeType":"Block","src":"28595:75:29","statements":[{"errorCall":{"arguments":[{"hexValue":"313034","id":8353,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"28647:3:29","typeDescriptions":{"typeIdentifier":"t_rational_104_by_1","typeString":"int_const 104"},"value":"104"},{"id":8354,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8337,"src":"28652:5:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_104_by_1","typeString":"int_const 104"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8352,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6970,"src":"28617:29:29","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":8355,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28617:41:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":8356,"nodeType":"RevertStatement","src":"28610:48:29"}]}}]},"documentation":{"id":8335,"nodeType":"StructuredDocumentation","src":"28120:322:29","text":" @dev Returns the downcasted int104 from int256, reverting on\n overflow (when the input is less than smallest int104 or\n greater than largest int104).\n Counterpart to Solidity's `int104` operator.\n Requirements:\n - input must fit into 104 bits"},"id":8360,"implemented":true,"kind":"function","modifiers":[],"name":"toInt104","nameLocation":"28457:8:29","nodeType":"FunctionDefinition","parameters":{"id":8338,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8337,"mutability":"mutable","name":"value","nameLocation":"28473:5:29","nodeType":"VariableDeclaration","scope":8360,"src":"28466:12:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":8336,"name":"int256","nodeType":"ElementaryTypeName","src":"28466:6:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"28465:14:29"},"returnParameters":{"id":8341,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8340,"mutability":"mutable","name":"downcasted","nameLocation":"28510:10:29","nodeType":"VariableDeclaration","scope":8360,"src":"28503:17:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"},"typeName":{"id":8339,"name":"int104","nodeType":"ElementaryTypeName","src":"28503:6:29","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"visibility":"internal"}],"src":"28502:19:29"},"scope":8713,"src":"28448:229:29","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8385,"nodeType":"Block","src":"29080:153:29","statements":[{"expression":{"id":8373,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8368,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8366,"src":"29091:10:29","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":8371,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8363,"src":"29110:5:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8370,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"29104:5:29","typeDescriptions":{"typeIdentifier":"t_type$_t_int96_$","typeString":"type(int96)"},"typeName":{"id":8369,"name":"int96","nodeType":"ElementaryTypeName","src":"29104:5:29","typeDescriptions":{}}},"id":8372,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"29104:12:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"src":"29091:25:29","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"id":8374,"nodeType":"ExpressionStatement","src":"29091:25:29"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":8377,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8375,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8366,"src":"29131:10:29","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":8376,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8363,"src":"29145:5:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"29131:19:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8384,"nodeType":"IfStatement","src":"29127:99:29","trueBody":{"id":8383,"nodeType":"Block","src":"29152:74:29","statements":[{"errorCall":{"arguments":[{"hexValue":"3936","id":8379,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29204:2:29","typeDescriptions":{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},"value":"96"},{"id":8380,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8363,"src":"29208:5:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8378,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6970,"src":"29174:29:29","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":8381,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"29174:40:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":8382,"nodeType":"RevertStatement","src":"29167:47:29"}]}}]},"documentation":{"id":8361,"nodeType":"StructuredDocumentation","src":"28685:317:29","text":" @dev Returns the downcasted int96 from int256, reverting on\n overflow (when the input is less than smallest int96 or\n greater than largest int96).\n Counterpart to Solidity's `int96` operator.\n Requirements:\n - input must fit into 96 bits"},"id":8386,"implemented":true,"kind":"function","modifiers":[],"name":"toInt96","nameLocation":"29017:7:29","nodeType":"FunctionDefinition","parameters":{"id":8364,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8363,"mutability":"mutable","name":"value","nameLocation":"29032:5:29","nodeType":"VariableDeclaration","scope":8386,"src":"29025:12:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":8362,"name":"int256","nodeType":"ElementaryTypeName","src":"29025:6:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"29024:14:29"},"returnParameters":{"id":8367,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8366,"mutability":"mutable","name":"downcasted","nameLocation":"29068:10:29","nodeType":"VariableDeclaration","scope":8386,"src":"29062:16:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"},"typeName":{"id":8365,"name":"int96","nodeType":"ElementaryTypeName","src":"29062:5:29","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"visibility":"internal"}],"src":"29061:18:29"},"scope":8713,"src":"29008:225:29","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8411,"nodeType":"Block","src":"29636:153:29","statements":[{"expression":{"id":8399,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8394,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8392,"src":"29647:10:29","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":8397,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8389,"src":"29666:5:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8396,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"29660:5:29","typeDescriptions":{"typeIdentifier":"t_type$_t_int88_$","typeString":"type(int88)"},"typeName":{"id":8395,"name":"int88","nodeType":"ElementaryTypeName","src":"29660:5:29","typeDescriptions":{}}},"id":8398,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"29660:12:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"src":"29647:25:29","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"id":8400,"nodeType":"ExpressionStatement","src":"29647:25:29"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":8403,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8401,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8392,"src":"29687:10:29","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":8402,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8389,"src":"29701:5:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"29687:19:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8410,"nodeType":"IfStatement","src":"29683:99:29","trueBody":{"id":8409,"nodeType":"Block","src":"29708:74:29","statements":[{"errorCall":{"arguments":[{"hexValue":"3838","id":8405,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29760:2:29","typeDescriptions":{"typeIdentifier":"t_rational_88_by_1","typeString":"int_const 88"},"value":"88"},{"id":8406,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8389,"src":"29764:5:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_88_by_1","typeString":"int_const 88"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8404,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6970,"src":"29730:29:29","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":8407,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"29730:40:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":8408,"nodeType":"RevertStatement","src":"29723:47:29"}]}}]},"documentation":{"id":8387,"nodeType":"StructuredDocumentation","src":"29241:317:29","text":" @dev Returns the downcasted int88 from int256, reverting on\n overflow (when the input is less than smallest int88 or\n greater than largest int88).\n Counterpart to Solidity's `int88` operator.\n Requirements:\n - input must fit into 88 bits"},"id":8412,"implemented":true,"kind":"function","modifiers":[],"name":"toInt88","nameLocation":"29573:7:29","nodeType":"FunctionDefinition","parameters":{"id":8390,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8389,"mutability":"mutable","name":"value","nameLocation":"29588:5:29","nodeType":"VariableDeclaration","scope":8412,"src":"29581:12:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":8388,"name":"int256","nodeType":"ElementaryTypeName","src":"29581:6:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"29580:14:29"},"returnParameters":{"id":8393,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8392,"mutability":"mutable","name":"downcasted","nameLocation":"29624:10:29","nodeType":"VariableDeclaration","scope":8412,"src":"29618:16:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"},"typeName":{"id":8391,"name":"int88","nodeType":"ElementaryTypeName","src":"29618:5:29","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"visibility":"internal"}],"src":"29617:18:29"},"scope":8713,"src":"29564:225:29","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8437,"nodeType":"Block","src":"30192:153:29","statements":[{"expression":{"id":8425,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8420,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8418,"src":"30203:10:29","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":8423,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8415,"src":"30222:5:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8422,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"30216:5:29","typeDescriptions":{"typeIdentifier":"t_type$_t_int80_$","typeString":"type(int80)"},"typeName":{"id":8421,"name":"int80","nodeType":"ElementaryTypeName","src":"30216:5:29","typeDescriptions":{}}},"id":8424,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30216:12:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"src":"30203:25:29","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"id":8426,"nodeType":"ExpressionStatement","src":"30203:25:29"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":8429,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8427,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8418,"src":"30243:10:29","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":8428,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8415,"src":"30257:5:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"30243:19:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8436,"nodeType":"IfStatement","src":"30239:99:29","trueBody":{"id":8435,"nodeType":"Block","src":"30264:74:29","statements":[{"errorCall":{"arguments":[{"hexValue":"3830","id":8431,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"30316:2:29","typeDescriptions":{"typeIdentifier":"t_rational_80_by_1","typeString":"int_const 80"},"value":"80"},{"id":8432,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8415,"src":"30320:5:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_80_by_1","typeString":"int_const 80"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8430,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6970,"src":"30286:29:29","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":8433,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30286:40:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":8434,"nodeType":"RevertStatement","src":"30279:47:29"}]}}]},"documentation":{"id":8413,"nodeType":"StructuredDocumentation","src":"29797:317:29","text":" @dev Returns the downcasted int80 from int256, reverting on\n overflow (when the input is less than smallest int80 or\n greater than largest int80).\n Counterpart to Solidity's `int80` operator.\n Requirements:\n - input must fit into 80 bits"},"id":8438,"implemented":true,"kind":"function","modifiers":[],"name":"toInt80","nameLocation":"30129:7:29","nodeType":"FunctionDefinition","parameters":{"id":8416,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8415,"mutability":"mutable","name":"value","nameLocation":"30144:5:29","nodeType":"VariableDeclaration","scope":8438,"src":"30137:12:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":8414,"name":"int256","nodeType":"ElementaryTypeName","src":"30137:6:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"30136:14:29"},"returnParameters":{"id":8419,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8418,"mutability":"mutable","name":"downcasted","nameLocation":"30180:10:29","nodeType":"VariableDeclaration","scope":8438,"src":"30174:16:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"},"typeName":{"id":8417,"name":"int80","nodeType":"ElementaryTypeName","src":"30174:5:29","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"visibility":"internal"}],"src":"30173:18:29"},"scope":8713,"src":"30120:225:29","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8463,"nodeType":"Block","src":"30748:153:29","statements":[{"expression":{"id":8451,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8446,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8444,"src":"30759:10:29","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":8449,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8441,"src":"30778:5:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8448,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"30772:5:29","typeDescriptions":{"typeIdentifier":"t_type$_t_int72_$","typeString":"type(int72)"},"typeName":{"id":8447,"name":"int72","nodeType":"ElementaryTypeName","src":"30772:5:29","typeDescriptions":{}}},"id":8450,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30772:12:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"src":"30759:25:29","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"id":8452,"nodeType":"ExpressionStatement","src":"30759:25:29"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":8455,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8453,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8444,"src":"30799:10:29","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":8454,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8441,"src":"30813:5:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"30799:19:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8462,"nodeType":"IfStatement","src":"30795:99:29","trueBody":{"id":8461,"nodeType":"Block","src":"30820:74:29","statements":[{"errorCall":{"arguments":[{"hexValue":"3732","id":8457,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"30872:2:29","typeDescriptions":{"typeIdentifier":"t_rational_72_by_1","typeString":"int_const 72"},"value":"72"},{"id":8458,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8441,"src":"30876:5:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_72_by_1","typeString":"int_const 72"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8456,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6970,"src":"30842:29:29","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":8459,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30842:40:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":8460,"nodeType":"RevertStatement","src":"30835:47:29"}]}}]},"documentation":{"id":8439,"nodeType":"StructuredDocumentation","src":"30353:317:29","text":" @dev Returns the downcasted int72 from int256, reverting on\n overflow (when the input is less than smallest int72 or\n greater than largest int72).\n Counterpart to Solidity's `int72` operator.\n Requirements:\n - input must fit into 72 bits"},"id":8464,"implemented":true,"kind":"function","modifiers":[],"name":"toInt72","nameLocation":"30685:7:29","nodeType":"FunctionDefinition","parameters":{"id":8442,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8441,"mutability":"mutable","name":"value","nameLocation":"30700:5:29","nodeType":"VariableDeclaration","scope":8464,"src":"30693:12:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":8440,"name":"int256","nodeType":"ElementaryTypeName","src":"30693:6:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"30692:14:29"},"returnParameters":{"id":8445,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8444,"mutability":"mutable","name":"downcasted","nameLocation":"30736:10:29","nodeType":"VariableDeclaration","scope":8464,"src":"30730:16:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"},"typeName":{"id":8443,"name":"int72","nodeType":"ElementaryTypeName","src":"30730:5:29","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"visibility":"internal"}],"src":"30729:18:29"},"scope":8713,"src":"30676:225:29","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8489,"nodeType":"Block","src":"31304:153:29","statements":[{"expression":{"id":8477,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8472,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8470,"src":"31315:10:29","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":8475,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8467,"src":"31334:5:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8474,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"31328:5:29","typeDescriptions":{"typeIdentifier":"t_type$_t_int64_$","typeString":"type(int64)"},"typeName":{"id":8473,"name":"int64","nodeType":"ElementaryTypeName","src":"31328:5:29","typeDescriptions":{}}},"id":8476,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31328:12:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"src":"31315:25:29","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"id":8478,"nodeType":"ExpressionStatement","src":"31315:25:29"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":8481,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8479,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8470,"src":"31355:10:29","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":8480,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8467,"src":"31369:5:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"31355:19:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8488,"nodeType":"IfStatement","src":"31351:99:29","trueBody":{"id":8487,"nodeType":"Block","src":"31376:74:29","statements":[{"errorCall":{"arguments":[{"hexValue":"3634","id":8483,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31428:2:29","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},{"id":8484,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8467,"src":"31432:5:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8482,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6970,"src":"31398:29:29","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":8485,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31398:40:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":8486,"nodeType":"RevertStatement","src":"31391:47:29"}]}}]},"documentation":{"id":8465,"nodeType":"StructuredDocumentation","src":"30909:317:29","text":" @dev Returns the downcasted int64 from int256, reverting on\n overflow (when the input is less than smallest int64 or\n greater than largest int64).\n Counterpart to Solidity's `int64` operator.\n Requirements:\n - input must fit into 64 bits"},"id":8490,"implemented":true,"kind":"function","modifiers":[],"name":"toInt64","nameLocation":"31241:7:29","nodeType":"FunctionDefinition","parameters":{"id":8468,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8467,"mutability":"mutable","name":"value","nameLocation":"31256:5:29","nodeType":"VariableDeclaration","scope":8490,"src":"31249:12:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":8466,"name":"int256","nodeType":"ElementaryTypeName","src":"31249:6:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"31248:14:29"},"returnParameters":{"id":8471,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8470,"mutability":"mutable","name":"downcasted","nameLocation":"31292:10:29","nodeType":"VariableDeclaration","scope":8490,"src":"31286:16:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"},"typeName":{"id":8469,"name":"int64","nodeType":"ElementaryTypeName","src":"31286:5:29","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"visibility":"internal"}],"src":"31285:18:29"},"scope":8713,"src":"31232:225:29","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8515,"nodeType":"Block","src":"31860:153:29","statements":[{"expression":{"id":8503,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8498,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8496,"src":"31871:10:29","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":8501,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8493,"src":"31890:5:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8500,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"31884:5:29","typeDescriptions":{"typeIdentifier":"t_type$_t_int56_$","typeString":"type(int56)"},"typeName":{"id":8499,"name":"int56","nodeType":"ElementaryTypeName","src":"31884:5:29","typeDescriptions":{}}},"id":8502,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31884:12:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"src":"31871:25:29","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"id":8504,"nodeType":"ExpressionStatement","src":"31871:25:29"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":8507,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8505,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8496,"src":"31911:10:29","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":8506,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8493,"src":"31925:5:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"31911:19:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8514,"nodeType":"IfStatement","src":"31907:99:29","trueBody":{"id":8513,"nodeType":"Block","src":"31932:74:29","statements":[{"errorCall":{"arguments":[{"hexValue":"3536","id":8509,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31984:2:29","typeDescriptions":{"typeIdentifier":"t_rational_56_by_1","typeString":"int_const 56"},"value":"56"},{"id":8510,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8493,"src":"31988:5:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_56_by_1","typeString":"int_const 56"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8508,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6970,"src":"31954:29:29","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":8511,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31954:40:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":8512,"nodeType":"RevertStatement","src":"31947:47:29"}]}}]},"documentation":{"id":8491,"nodeType":"StructuredDocumentation","src":"31465:317:29","text":" @dev Returns the downcasted int56 from int256, reverting on\n overflow (when the input is less than smallest int56 or\n greater than largest int56).\n Counterpart to Solidity's `int56` operator.\n Requirements:\n - input must fit into 56 bits"},"id":8516,"implemented":true,"kind":"function","modifiers":[],"name":"toInt56","nameLocation":"31797:7:29","nodeType":"FunctionDefinition","parameters":{"id":8494,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8493,"mutability":"mutable","name":"value","nameLocation":"31812:5:29","nodeType":"VariableDeclaration","scope":8516,"src":"31805:12:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":8492,"name":"int256","nodeType":"ElementaryTypeName","src":"31805:6:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"31804:14:29"},"returnParameters":{"id":8497,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8496,"mutability":"mutable","name":"downcasted","nameLocation":"31848:10:29","nodeType":"VariableDeclaration","scope":8516,"src":"31842:16:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"},"typeName":{"id":8495,"name":"int56","nodeType":"ElementaryTypeName","src":"31842:5:29","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"visibility":"internal"}],"src":"31841:18:29"},"scope":8713,"src":"31788:225:29","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8541,"nodeType":"Block","src":"32416:153:29","statements":[{"expression":{"id":8529,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8524,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8522,"src":"32427:10:29","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":8527,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8519,"src":"32446:5:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8526,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"32440:5:29","typeDescriptions":{"typeIdentifier":"t_type$_t_int48_$","typeString":"type(int48)"},"typeName":{"id":8525,"name":"int48","nodeType":"ElementaryTypeName","src":"32440:5:29","typeDescriptions":{}}},"id":8528,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"32440:12:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"src":"32427:25:29","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"id":8530,"nodeType":"ExpressionStatement","src":"32427:25:29"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":8533,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8531,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8522,"src":"32467:10:29","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":8532,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8519,"src":"32481:5:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"32467:19:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8540,"nodeType":"IfStatement","src":"32463:99:29","trueBody":{"id":8539,"nodeType":"Block","src":"32488:74:29","statements":[{"errorCall":{"arguments":[{"hexValue":"3438","id":8535,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"32540:2:29","typeDescriptions":{"typeIdentifier":"t_rational_48_by_1","typeString":"int_const 48"},"value":"48"},{"id":8536,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8519,"src":"32544:5:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_48_by_1","typeString":"int_const 48"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8534,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6970,"src":"32510:29:29","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":8537,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"32510:40:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":8538,"nodeType":"RevertStatement","src":"32503:47:29"}]}}]},"documentation":{"id":8517,"nodeType":"StructuredDocumentation","src":"32021:317:29","text":" @dev Returns the downcasted int48 from int256, reverting on\n overflow (when the input is less than smallest int48 or\n greater than largest int48).\n Counterpart to Solidity's `int48` operator.\n Requirements:\n - input must fit into 48 bits"},"id":8542,"implemented":true,"kind":"function","modifiers":[],"name":"toInt48","nameLocation":"32353:7:29","nodeType":"FunctionDefinition","parameters":{"id":8520,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8519,"mutability":"mutable","name":"value","nameLocation":"32368:5:29","nodeType":"VariableDeclaration","scope":8542,"src":"32361:12:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":8518,"name":"int256","nodeType":"ElementaryTypeName","src":"32361:6:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"32360:14:29"},"returnParameters":{"id":8523,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8522,"mutability":"mutable","name":"downcasted","nameLocation":"32404:10:29","nodeType":"VariableDeclaration","scope":8542,"src":"32398:16:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"},"typeName":{"id":8521,"name":"int48","nodeType":"ElementaryTypeName","src":"32398:5:29","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"visibility":"internal"}],"src":"32397:18:29"},"scope":8713,"src":"32344:225:29","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8567,"nodeType":"Block","src":"32972:153:29","statements":[{"expression":{"id":8555,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8550,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8548,"src":"32983:10:29","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":8553,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8545,"src":"33002:5:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8552,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"32996:5:29","typeDescriptions":{"typeIdentifier":"t_type$_t_int40_$","typeString":"type(int40)"},"typeName":{"id":8551,"name":"int40","nodeType":"ElementaryTypeName","src":"32996:5:29","typeDescriptions":{}}},"id":8554,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"32996:12:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"src":"32983:25:29","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"id":8556,"nodeType":"ExpressionStatement","src":"32983:25:29"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":8559,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8557,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8548,"src":"33023:10:29","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":8558,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8545,"src":"33037:5:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"33023:19:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8566,"nodeType":"IfStatement","src":"33019:99:29","trueBody":{"id":8565,"nodeType":"Block","src":"33044:74:29","statements":[{"errorCall":{"arguments":[{"hexValue":"3430","id":8561,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"33096:2:29","typeDescriptions":{"typeIdentifier":"t_rational_40_by_1","typeString":"int_const 40"},"value":"40"},{"id":8562,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8545,"src":"33100:5:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_40_by_1","typeString":"int_const 40"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8560,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6970,"src":"33066:29:29","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":8563,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"33066:40:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":8564,"nodeType":"RevertStatement","src":"33059:47:29"}]}}]},"documentation":{"id":8543,"nodeType":"StructuredDocumentation","src":"32577:317:29","text":" @dev Returns the downcasted int40 from int256, reverting on\n overflow (when the input is less than smallest int40 or\n greater than largest int40).\n Counterpart to Solidity's `int40` operator.\n Requirements:\n - input must fit into 40 bits"},"id":8568,"implemented":true,"kind":"function","modifiers":[],"name":"toInt40","nameLocation":"32909:7:29","nodeType":"FunctionDefinition","parameters":{"id":8546,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8545,"mutability":"mutable","name":"value","nameLocation":"32924:5:29","nodeType":"VariableDeclaration","scope":8568,"src":"32917:12:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":8544,"name":"int256","nodeType":"ElementaryTypeName","src":"32917:6:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"32916:14:29"},"returnParameters":{"id":8549,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8548,"mutability":"mutable","name":"downcasted","nameLocation":"32960:10:29","nodeType":"VariableDeclaration","scope":8568,"src":"32954:16:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"},"typeName":{"id":8547,"name":"int40","nodeType":"ElementaryTypeName","src":"32954:5:29","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"visibility":"internal"}],"src":"32953:18:29"},"scope":8713,"src":"32900:225:29","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8593,"nodeType":"Block","src":"33528:153:29","statements":[{"expression":{"id":8581,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8576,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8574,"src":"33539:10:29","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":8579,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8571,"src":"33558:5:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8578,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"33552:5:29","typeDescriptions":{"typeIdentifier":"t_type$_t_int32_$","typeString":"type(int32)"},"typeName":{"id":8577,"name":"int32","nodeType":"ElementaryTypeName","src":"33552:5:29","typeDescriptions":{}}},"id":8580,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"33552:12:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"src":"33539:25:29","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"id":8582,"nodeType":"ExpressionStatement","src":"33539:25:29"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":8585,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8583,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8574,"src":"33579:10:29","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":8584,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8571,"src":"33593:5:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"33579:19:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8592,"nodeType":"IfStatement","src":"33575:99:29","trueBody":{"id":8591,"nodeType":"Block","src":"33600:74:29","statements":[{"errorCall":{"arguments":[{"hexValue":"3332","id":8587,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"33652:2:29","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},{"id":8588,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8571,"src":"33656:5:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8586,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6970,"src":"33622:29:29","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":8589,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"33622:40:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":8590,"nodeType":"RevertStatement","src":"33615:47:29"}]}}]},"documentation":{"id":8569,"nodeType":"StructuredDocumentation","src":"33133:317:29","text":" @dev Returns the downcasted int32 from int256, reverting on\n overflow (when the input is less than smallest int32 or\n greater than largest int32).\n Counterpart to Solidity's `int32` operator.\n Requirements:\n - input must fit into 32 bits"},"id":8594,"implemented":true,"kind":"function","modifiers":[],"name":"toInt32","nameLocation":"33465:7:29","nodeType":"FunctionDefinition","parameters":{"id":8572,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8571,"mutability":"mutable","name":"value","nameLocation":"33480:5:29","nodeType":"VariableDeclaration","scope":8594,"src":"33473:12:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":8570,"name":"int256","nodeType":"ElementaryTypeName","src":"33473:6:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"33472:14:29"},"returnParameters":{"id":8575,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8574,"mutability":"mutable","name":"downcasted","nameLocation":"33516:10:29","nodeType":"VariableDeclaration","scope":8594,"src":"33510:16:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"},"typeName":{"id":8573,"name":"int32","nodeType":"ElementaryTypeName","src":"33510:5:29","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"visibility":"internal"}],"src":"33509:18:29"},"scope":8713,"src":"33456:225:29","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8619,"nodeType":"Block","src":"34084:153:29","statements":[{"expression":{"id":8607,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8602,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8600,"src":"34095:10:29","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":8605,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8597,"src":"34114:5:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8604,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"34108:5:29","typeDescriptions":{"typeIdentifier":"t_type$_t_int24_$","typeString":"type(int24)"},"typeName":{"id":8603,"name":"int24","nodeType":"ElementaryTypeName","src":"34108:5:29","typeDescriptions":{}}},"id":8606,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34108:12:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"src":"34095:25:29","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"id":8608,"nodeType":"ExpressionStatement","src":"34095:25:29"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":8611,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8609,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8600,"src":"34135:10:29","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":8610,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8597,"src":"34149:5:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"34135:19:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8618,"nodeType":"IfStatement","src":"34131:99:29","trueBody":{"id":8617,"nodeType":"Block","src":"34156:74:29","statements":[{"errorCall":{"arguments":[{"hexValue":"3234","id":8613,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"34208:2:29","typeDescriptions":{"typeIdentifier":"t_rational_24_by_1","typeString":"int_const 24"},"value":"24"},{"id":8614,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8597,"src":"34212:5:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_24_by_1","typeString":"int_const 24"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8612,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6970,"src":"34178:29:29","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":8615,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34178:40:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":8616,"nodeType":"RevertStatement","src":"34171:47:29"}]}}]},"documentation":{"id":8595,"nodeType":"StructuredDocumentation","src":"33689:317:29","text":" @dev Returns the downcasted int24 from int256, reverting on\n overflow (when the input is less than smallest int24 or\n greater than largest int24).\n Counterpart to Solidity's `int24` operator.\n Requirements:\n - input must fit into 24 bits"},"id":8620,"implemented":true,"kind":"function","modifiers":[],"name":"toInt24","nameLocation":"34021:7:29","nodeType":"FunctionDefinition","parameters":{"id":8598,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8597,"mutability":"mutable","name":"value","nameLocation":"34036:5:29","nodeType":"VariableDeclaration","scope":8620,"src":"34029:12:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":8596,"name":"int256","nodeType":"ElementaryTypeName","src":"34029:6:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"34028:14:29"},"returnParameters":{"id":8601,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8600,"mutability":"mutable","name":"downcasted","nameLocation":"34072:10:29","nodeType":"VariableDeclaration","scope":8620,"src":"34066:16:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"},"typeName":{"id":8599,"name":"int24","nodeType":"ElementaryTypeName","src":"34066:5:29","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"visibility":"internal"}],"src":"34065:18:29"},"scope":8713,"src":"34012:225:29","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8645,"nodeType":"Block","src":"34640:153:29","statements":[{"expression":{"id":8633,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8628,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8626,"src":"34651:10:29","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":8631,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8623,"src":"34670:5:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8630,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"34664:5:29","typeDescriptions":{"typeIdentifier":"t_type$_t_int16_$","typeString":"type(int16)"},"typeName":{"id":8629,"name":"int16","nodeType":"ElementaryTypeName","src":"34664:5:29","typeDescriptions":{}}},"id":8632,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34664:12:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"src":"34651:25:29","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"id":8634,"nodeType":"ExpressionStatement","src":"34651:25:29"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":8637,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8635,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8626,"src":"34691:10:29","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":8636,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8623,"src":"34705:5:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"34691:19:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8644,"nodeType":"IfStatement","src":"34687:99:29","trueBody":{"id":8643,"nodeType":"Block","src":"34712:74:29","statements":[{"errorCall":{"arguments":[{"hexValue":"3136","id":8639,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"34764:2:29","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},{"id":8640,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8623,"src":"34768:5:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8638,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6970,"src":"34734:29:29","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":8641,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34734:40:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":8642,"nodeType":"RevertStatement","src":"34727:47:29"}]}}]},"documentation":{"id":8621,"nodeType":"StructuredDocumentation","src":"34245:317:29","text":" @dev Returns the downcasted int16 from int256, reverting on\n overflow (when the input is less than smallest int16 or\n greater than largest int16).\n Counterpart to Solidity's `int16` operator.\n Requirements:\n - input must fit into 16 bits"},"id":8646,"implemented":true,"kind":"function","modifiers":[],"name":"toInt16","nameLocation":"34577:7:29","nodeType":"FunctionDefinition","parameters":{"id":8624,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8623,"mutability":"mutable","name":"value","nameLocation":"34592:5:29","nodeType":"VariableDeclaration","scope":8646,"src":"34585:12:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":8622,"name":"int256","nodeType":"ElementaryTypeName","src":"34585:6:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"34584:14:29"},"returnParameters":{"id":8627,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8626,"mutability":"mutable","name":"downcasted","nameLocation":"34628:10:29","nodeType":"VariableDeclaration","scope":8646,"src":"34622:16:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"},"typeName":{"id":8625,"name":"int16","nodeType":"ElementaryTypeName","src":"34622:5:29","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"visibility":"internal"}],"src":"34621:18:29"},"scope":8713,"src":"34568:225:29","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8671,"nodeType":"Block","src":"35189:151:29","statements":[{"expression":{"id":8659,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8654,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8652,"src":"35200:10:29","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":8657,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8649,"src":"35218:5:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8656,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"35213:4:29","typeDescriptions":{"typeIdentifier":"t_type$_t_int8_$","typeString":"type(int8)"},"typeName":{"id":8655,"name":"int8","nodeType":"ElementaryTypeName","src":"35213:4:29","typeDescriptions":{}}},"id":8658,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"35213:11:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"src":"35200:24:29","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"id":8660,"nodeType":"ExpressionStatement","src":"35200:24:29"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":8663,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8661,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8652,"src":"35239:10:29","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":8662,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8649,"src":"35253:5:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"35239:19:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8670,"nodeType":"IfStatement","src":"35235:98:29","trueBody":{"id":8669,"nodeType":"Block","src":"35260:73:29","statements":[{"errorCall":{"arguments":[{"hexValue":"38","id":8665,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"35312:1:29","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},{"id":8666,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8649,"src":"35315:5:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8664,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6970,"src":"35282:29:29","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":8667,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"35282:39:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":8668,"nodeType":"RevertStatement","src":"35275:46:29"}]}}]},"documentation":{"id":8647,"nodeType":"StructuredDocumentation","src":"34801:312:29","text":" @dev Returns the downcasted int8 from int256, reverting on\n overflow (when the input is less than smallest int8 or\n greater than largest int8).\n Counterpart to Solidity's `int8` operator.\n Requirements:\n - input must fit into 8 bits"},"id":8672,"implemented":true,"kind":"function","modifiers":[],"name":"toInt8","nameLocation":"35128:6:29","nodeType":"FunctionDefinition","parameters":{"id":8650,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8649,"mutability":"mutable","name":"value","nameLocation":"35142:5:29","nodeType":"VariableDeclaration","scope":8672,"src":"35135:12:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":8648,"name":"int256","nodeType":"ElementaryTypeName","src":"35135:6:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"35134:14:29"},"returnParameters":{"id":8653,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8652,"mutability":"mutable","name":"downcasted","nameLocation":"35177:10:29","nodeType":"VariableDeclaration","scope":8672,"src":"35172:15:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"},"typeName":{"id":8651,"name":"int8","nodeType":"ElementaryTypeName","src":"35172:4:29","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"visibility":"internal"}],"src":"35171:17:29"},"scope":8713,"src":"35119:221:29","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8701,"nodeType":"Block","src":"35589:256:29","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8689,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8680,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8675,"src":"35704:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"arguments":[{"expression":{"arguments":[{"id":8685,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"35725:6:29","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":8684,"name":"int256","nodeType":"ElementaryTypeName","src":"35725:6:29","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"}],"id":8683,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"35720:4:29","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":8686,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"35720:12:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_int256","typeString":"type(int256)"}},"id":8687,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"35733:3:29","memberName":"max","nodeType":"MemberAccess","src":"35720:16:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8682,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"35712:7:29","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":8681,"name":"uint256","nodeType":"ElementaryTypeName","src":"35712:7:29","typeDescriptions":{}}},"id":8688,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"35712:25:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"35704:33:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8695,"nodeType":"IfStatement","src":"35700:107:29","trueBody":{"id":8694,"nodeType":"Block","src":"35739:68:29","statements":[{"errorCall":{"arguments":[{"id":8691,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8675,"src":"35789:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8690,"name":"SafeCastOverflowedUintToInt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6975,"src":"35761:27:29","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$returns$_t_error_$","typeString":"function (uint256) pure returns (error)"}},"id":8692,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"35761:34:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":8693,"nodeType":"RevertStatement","src":"35754:41:29"}]}},{"expression":{"arguments":[{"id":8698,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8675,"src":"35831:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8697,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"35824:6:29","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":8696,"name":"int256","nodeType":"ElementaryTypeName","src":"35824:6:29","typeDescriptions":{}}},"id":8699,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"35824:13:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":8679,"id":8700,"nodeType":"Return","src":"35817:20:29"}]},"documentation":{"id":8673,"nodeType":"StructuredDocumentation","src":"35348:171:29","text":" @dev Converts an unsigned uint256 into a signed int256.\n Requirements:\n - input must be less than or equal to maxInt256."},"id":8702,"implemented":true,"kind":"function","modifiers":[],"name":"toInt256","nameLocation":"35534:8:29","nodeType":"FunctionDefinition","parameters":{"id":8676,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8675,"mutability":"mutable","name":"value","nameLocation":"35551:5:29","nodeType":"VariableDeclaration","scope":8702,"src":"35543:13:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8674,"name":"uint256","nodeType":"ElementaryTypeName","src":"35543:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"35542:15:29"},"returnParameters":{"id":8679,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8678,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8702,"src":"35581:6:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":8677,"name":"int256","nodeType":"ElementaryTypeName","src":"35581:6:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"35580:8:29"},"scope":8713,"src":"35525:320:29","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8711,"nodeType":"Block","src":"36009:91:29","statements":[{"AST":{"nativeSrc":"36045:48:29","nodeType":"YulBlock","src":"36045:48:29","statements":[{"nativeSrc":"36060:22:29","nodeType":"YulAssignment","src":"36060:22:29","value":{"arguments":[{"arguments":[{"name":"b","nativeSrc":"36079:1:29","nodeType":"YulIdentifier","src":"36079:1:29"}],"functionName":{"name":"iszero","nativeSrc":"36072:6:29","nodeType":"YulIdentifier","src":"36072:6:29"},"nativeSrc":"36072:9:29","nodeType":"YulFunctionCall","src":"36072:9:29"}],"functionName":{"name":"iszero","nativeSrc":"36065:6:29","nodeType":"YulIdentifier","src":"36065:6:29"},"nativeSrc":"36065:17:29","nodeType":"YulFunctionCall","src":"36065:17:29"},"variableNames":[{"name":"u","nativeSrc":"36060:1:29","nodeType":"YulIdentifier","src":"36060:1:29"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":8705,"isOffset":false,"isSlot":false,"src":"36079:1:29","valueSize":1},{"declaration":8708,"isOffset":false,"isSlot":false,"src":"36060:1:29","valueSize":1}],"flags":["memory-safe"],"id":8710,"nodeType":"InlineAssembly","src":"36020:73:29"}]},"documentation":{"id":8703,"nodeType":"StructuredDocumentation","src":"35853:92:29","text":" @dev Cast a boolean (false or true) to a uint256 (0 or 1) with no jump."},"id":8712,"implemented":true,"kind":"function","modifiers":[],"name":"toUint","nameLocation":"35960:6:29","nodeType":"FunctionDefinition","parameters":{"id":8706,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8705,"mutability":"mutable","name":"b","nameLocation":"35972:1:29","nodeType":"VariableDeclaration","scope":8712,"src":"35967:6:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":8704,"name":"bool","nodeType":"ElementaryTypeName","src":"35967:4:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"35966:8:29"},"returnParameters":{"id":8709,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8708,"mutability":"mutable","name":"u","nameLocation":"36006:1:29","nodeType":"VariableDeclaration","scope":8712,"src":"35998:9:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8707,"name":"uint256","nodeType":"ElementaryTypeName","src":"35998:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"35997:11:29"},"scope":8713,"src":"35951:149:29","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":8714,"src":"787:35316:29","usedErrors":[6958,6963,6970,6975],"usedEvents":[]}],"src":"196:35909:29"},"id":29},"@openzeppelin/contracts/utils/math/SignedMath.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/math/SignedMath.sol","exportedSymbols":{"SafeCast":[8713],"SignedMath":[8857]},"id":8858,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":8715,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"112:24:30"},{"absolutePath":"@openzeppelin/contracts/utils/math/SafeCast.sol","file":"./SafeCast.sol","id":8717,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":8858,"sourceUnit":8714,"src":"140:40:30","symbolAliases":[{"foreign":{"id":8716,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8713,"src":"148:8:30","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"SignedMath","contractDependencies":[],"contractKind":"library","documentation":{"id":8718,"nodeType":"StructuredDocumentation","src":"184:82:30","text":" @dev Standard signed math utilities missing in the Solidity language."},"fullyImplemented":true,"id":8857,"linearizedBaseContracts":[8857],"name":"SignedMath","nameLocation":"276:10:30","nodeType":"ContractDefinition","nodes":[{"body":{"id":8747,"nodeType":"Block","src":"764:222:30","statements":[{"id":8746,"nodeType":"UncheckedBlock","src":"775:204:30","statements":[{"expression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":8744,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8730,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8725,"src":"917:1:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":8742,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":8733,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8731,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8723,"src":"923:1:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":8732,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8725,"src":"927:1:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"923:5:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":8734,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"922:7:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"arguments":[{"id":8739,"name":"condition","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8721,"src":"955:9:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":8737,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8713,"src":"939:8:30","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$8713_$","typeString":"type(library SafeCast)"}},"id":8738,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"948:6:30","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":8712,"src":"939:15:30","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":8740,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"939:26:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8736,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"932:6:30","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":8735,"name":"int256","nodeType":"ElementaryTypeName","src":"932:6:30","typeDescriptions":{}}},"id":8741,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"932:34:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"922:44:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":8743,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"921:46:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"917:50:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":8729,"id":8745,"nodeType":"Return","src":"910:57:30"}]}]},"documentation":{"id":8719,"nodeType":"StructuredDocumentation","src":"294:380:30","text":" @dev Branchless ternary evaluation for `a ? b : c`. Gas costs are constant.\n IMPORTANT: This function may reduce bytecode size and consume less gas when used standalone.\n However, the compiler may optimize Solidity ternary operations (i.e. `a ? b : c`) to only compute\n one branch when needed, making this function more expensive."},"id":8748,"implemented":true,"kind":"function","modifiers":[],"name":"ternary","nameLocation":"689:7:30","nodeType":"FunctionDefinition","parameters":{"id":8726,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8721,"mutability":"mutable","name":"condition","nameLocation":"702:9:30","nodeType":"VariableDeclaration","scope":8748,"src":"697:14:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":8720,"name":"bool","nodeType":"ElementaryTypeName","src":"697:4:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":8723,"mutability":"mutable","name":"a","nameLocation":"720:1:30","nodeType":"VariableDeclaration","scope":8748,"src":"713:8:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":8722,"name":"int256","nodeType":"ElementaryTypeName","src":"713:6:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":8725,"mutability":"mutable","name":"b","nameLocation":"730:1:30","nodeType":"VariableDeclaration","scope":8748,"src":"723:8:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":8724,"name":"int256","nodeType":"ElementaryTypeName","src":"723:6:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"696:36:30"},"returnParameters":{"id":8729,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8728,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8748,"src":"756:6:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":8727,"name":"int256","nodeType":"ElementaryTypeName","src":"756:6:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"755:8:30"},"scope":8857,"src":"680:306:30","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8766,"nodeType":"Block","src":"1132:46:30","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":8761,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8759,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8751,"src":"1158:1:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":8760,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8753,"src":"1162:1:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1158:5:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":8762,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8751,"src":"1165:1:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},{"id":8763,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8753,"src":"1168:1:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_int256","typeString":"int256"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8758,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8748,"src":"1150:7:30","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_int256_$_t_int256_$returns$_t_int256_$","typeString":"function (bool,int256,int256) pure returns (int256)"}},"id":8764,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1150:20:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":8757,"id":8765,"nodeType":"Return","src":"1143:27:30"}]},"documentation":{"id":8749,"nodeType":"StructuredDocumentation","src":"994:68:30","text":" @dev Returns the largest of two signed numbers."},"id":8767,"implemented":true,"kind":"function","modifiers":[],"name":"max","nameLocation":"1077:3:30","nodeType":"FunctionDefinition","parameters":{"id":8754,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8751,"mutability":"mutable","name":"a","nameLocation":"1088:1:30","nodeType":"VariableDeclaration","scope":8767,"src":"1081:8:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":8750,"name":"int256","nodeType":"ElementaryTypeName","src":"1081:6:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":8753,"mutability":"mutable","name":"b","nameLocation":"1098:1:30","nodeType":"VariableDeclaration","scope":8767,"src":"1091:8:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":8752,"name":"int256","nodeType":"ElementaryTypeName","src":"1091:6:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1080:20:30"},"returnParameters":{"id":8757,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8756,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8767,"src":"1124:6:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":8755,"name":"int256","nodeType":"ElementaryTypeName","src":"1124:6:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1123:8:30"},"scope":8857,"src":"1068:110:30","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8785,"nodeType":"Block","src":"1325:46:30","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":8780,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8778,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8770,"src":"1351:1:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":8779,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8772,"src":"1355:1:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1351:5:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":8781,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8770,"src":"1358:1:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},{"id":8782,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8772,"src":"1361:1:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_int256","typeString":"int256"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8777,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8748,"src":"1343:7:30","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_int256_$_t_int256_$returns$_t_int256_$","typeString":"function (bool,int256,int256) pure returns (int256)"}},"id":8783,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1343:20:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":8776,"id":8784,"nodeType":"Return","src":"1336:27:30"}]},"documentation":{"id":8768,"nodeType":"StructuredDocumentation","src":"1186:69:30","text":" @dev Returns the smallest of two signed numbers."},"id":8786,"implemented":true,"kind":"function","modifiers":[],"name":"min","nameLocation":"1270:3:30","nodeType":"FunctionDefinition","parameters":{"id":8773,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8770,"mutability":"mutable","name":"a","nameLocation":"1281:1:30","nodeType":"VariableDeclaration","scope":8786,"src":"1274:8:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":8769,"name":"int256","nodeType":"ElementaryTypeName","src":"1274:6:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":8772,"mutability":"mutable","name":"b","nameLocation":"1291:1:30","nodeType":"VariableDeclaration","scope":8786,"src":"1284:8:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":8771,"name":"int256","nodeType":"ElementaryTypeName","src":"1284:6:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1273:20:30"},"returnParameters":{"id":8776,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8775,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8786,"src":"1317:6:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":8774,"name":"int256","nodeType":"ElementaryTypeName","src":"1317:6:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1316:8:30"},"scope":8857,"src":"1261:110:30","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8829,"nodeType":"Block","src":"1582:166:30","statements":[{"assignments":[8797],"declarations":[{"constant":false,"id":8797,"mutability":"mutable","name":"x","nameLocation":"1653:1:30","nodeType":"VariableDeclaration","scope":8829,"src":"1646:8:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":8796,"name":"int256","nodeType":"ElementaryTypeName","src":"1646:6:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"id":8810,"initialValue":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":8809,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":8800,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8798,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8789,"src":"1658:1:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"id":8799,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8791,"src":"1662:1:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1658:5:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":8801,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1657:7:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":8807,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":8804,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8802,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8789,"src":"1669:1:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":8803,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8791,"src":"1673:1:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1669:5:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":8805,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1668:7:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":8806,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1679:1:30","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1668:12:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":8808,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1667:14:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1657:24:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"VariableDeclarationStatement","src":"1646:35:30"},{"expression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":8827,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8811,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8797,"src":"1699:1:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":8825,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8819,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":8816,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8797,"src":"1719:1:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8815,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1711:7:30","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":8814,"name":"uint256","nodeType":"ElementaryTypeName","src":"1711:7:30","typeDescriptions":{}}},"id":8817,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1711:10:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"323535","id":8818,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1725:3:30","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"255"},"src":"1711:17:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8813,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1704:6:30","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":8812,"name":"int256","nodeType":"ElementaryTypeName","src":"1704:6:30","typeDescriptions":{}}},"id":8820,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1704:25:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":8823,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8821,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8789,"src":"1733:1:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":8822,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8791,"src":"1737:1:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1733:5:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":8824,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1732:7:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1704:35:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":8826,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1703:37:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1699:41:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":8795,"id":8828,"nodeType":"Return","src":"1692:48:30"}]},"documentation":{"id":8787,"nodeType":"StructuredDocumentation","src":"1379:129:30","text":" @dev Returns the average of two signed numbers without overflow.\n The result is rounded towards zero."},"id":8830,"implemented":true,"kind":"function","modifiers":[],"name":"average","nameLocation":"1523:7:30","nodeType":"FunctionDefinition","parameters":{"id":8792,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8789,"mutability":"mutable","name":"a","nameLocation":"1538:1:30","nodeType":"VariableDeclaration","scope":8830,"src":"1531:8:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":8788,"name":"int256","nodeType":"ElementaryTypeName","src":"1531:6:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":8791,"mutability":"mutable","name":"b","nameLocation":"1548:1:30","nodeType":"VariableDeclaration","scope":8830,"src":"1541:8:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":8790,"name":"int256","nodeType":"ElementaryTypeName","src":"1541:6:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1530:20:30"},"returnParameters":{"id":8795,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8794,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8830,"src":"1574:6:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":8793,"name":"int256","nodeType":"ElementaryTypeName","src":"1574:6:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1573:8:30"},"scope":8857,"src":"1514:234:30","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8855,"nodeType":"Block","src":"1897:779:30","statements":[{"id":8854,"nodeType":"UncheckedBlock","src":"1908:761:30","statements":[{"assignments":[8839],"declarations":[{"constant":false,"id":8839,"mutability":"mutable","name":"mask","nameLocation":"2485:4:30","nodeType":"VariableDeclaration","scope":8854,"src":"2478:11:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":8838,"name":"int256","nodeType":"ElementaryTypeName","src":"2478:6:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"id":8843,"initialValue":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":8842,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8840,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8833,"src":"2492:1:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"323535","id":8841,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2497:3:30","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"255"},"src":"2492:8:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"VariableDeclarationStatement","src":"2478:22:30"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":8851,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":8848,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8846,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8833,"src":"2640:1:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":8847,"name":"mask","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8839,"src":"2644:4:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"2640:8:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":8849,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2639:10:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":8850,"name":"mask","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8839,"src":"2652:4:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"2639:17:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8845,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2631:7:30","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":8844,"name":"uint256","nodeType":"ElementaryTypeName","src":"2631:7:30","typeDescriptions":{}}},"id":8852,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2631:26:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":8837,"id":8853,"nodeType":"Return","src":"2624:33:30"}]}]},"documentation":{"id":8831,"nodeType":"StructuredDocumentation","src":"1756:80:30","text":" @dev Returns the absolute unsigned value of a signed value."},"id":8856,"implemented":true,"kind":"function","modifiers":[],"name":"abs","nameLocation":"1851:3:30","nodeType":"FunctionDefinition","parameters":{"id":8834,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8833,"mutability":"mutable","name":"n","nameLocation":"1862:1:30","nodeType":"VariableDeclaration","scope":8856,"src":"1855:8:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":8832,"name":"int256","nodeType":"ElementaryTypeName","src":"1855:6:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1854:10:30"},"returnParameters":{"id":8837,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8836,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8856,"src":"1888:7:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8835,"name":"uint256","nodeType":"ElementaryTypeName","src":"1888:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1887:9:30"},"scope":8857,"src":"1842:834:30","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":8858,"src":"268:2411:30","usedErrors":[],"usedEvents":[]}],"src":"112:2569:30"},"id":30},"contracts/PADTokenV2.sol":{"ast":{"absolutePath":"contracts/PADTokenV2.sol","exportedSymbols":{"AccessControlUpgradeable":[364],"ContextUpgradeable":[1646],"ECDSA":[5229],"EIP712Upgradeable":[2261],"ERC165Upgradeable":[2301],"ERC1967Utils":[2871],"ERC20PermitUpgradeable":[1600],"ERC20Upgradeable":[1431],"IAccessControl":[2384],"IERC165":[5327],"IERC1822Proxiable":[2440],"IERC20":[2959],"IERC20Errors":[2482],"IERC20Metadata":[2985],"IERC20Permit":[3021],"Initializable":[632],"NoncesUpgradeable":[1757],"PADTokenV2":[9193],"PausableUpgradeable":[1917],"UUPSUpgradeable":[814]},"id":9194,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":8859,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"33:24:31"},{"absolutePath":"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol","file":"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol","id":8860,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":9194,"sourceUnit":1432,"src":"61:78:31","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20PermitUpgradeable.sol","file":"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20PermitUpgradeable.sol","id":8861,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":9194,"sourceUnit":1601,"src":"141:95:31","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol","file":"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol","id":8862,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":9194,"sourceUnit":1918,"src":"238:75:31","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol","file":"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol","id":8863,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":9194,"sourceUnit":365,"src":"315:81:31","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol","file":"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol","id":8864,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":9194,"sourceUnit":633,"src":"398:75:31","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol","file":"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol","id":8865,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":9194,"sourceUnit":815,"src":"475:77:31","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":8867,"name":"Initializable","nameLocations":["717:13:31"],"nodeType":"IdentifierPath","referencedDeclaration":632,"src":"717:13:31"},"id":8868,"nodeType":"InheritanceSpecifier","src":"717:13:31"},{"baseName":{"id":8869,"name":"ERC20Upgradeable","nameLocations":["732:16:31"],"nodeType":"IdentifierPath","referencedDeclaration":1431,"src":"732:16:31"},"id":8870,"nodeType":"InheritanceSpecifier","src":"732:16:31"},{"baseName":{"id":8871,"name":"ERC20PermitUpgradeable","nameLocations":["750:22:31"],"nodeType":"IdentifierPath","referencedDeclaration":1600,"src":"750:22:31"},"id":8872,"nodeType":"InheritanceSpecifier","src":"750:22:31"},{"baseName":{"id":8873,"name":"PausableUpgradeable","nameLocations":["774:19:31"],"nodeType":"IdentifierPath","referencedDeclaration":1917,"src":"774:19:31"},"id":8874,"nodeType":"InheritanceSpecifier","src":"774:19:31"},{"baseName":{"id":8875,"name":"AccessControlUpgradeable","nameLocations":["795:24:31"],"nodeType":"IdentifierPath","referencedDeclaration":364,"src":"795:24:31"},"id":8876,"nodeType":"InheritanceSpecifier","src":"795:24:31"},{"baseName":{"id":8877,"name":"UUPSUpgradeable","nameLocations":["821:15:31"],"nodeType":"IdentifierPath","referencedDeclaration":814,"src":"821:15:31"},"id":8878,"nodeType":"InheritanceSpecifier","src":"821:15:31"}],"canonicalName":"PADTokenV2","contractDependencies":[],"contractKind":"contract","documentation":{"id":8866,"nodeType":"StructuredDocumentation","src":"556:136:31","text":" @title PADTokenV2\n @dev Upgradeable PAD Token with proxy support\n @notice BEP-20 compatible token with upgradeability"},"fullyImplemented":true,"id":9193,"linearizedBaseContracts":[9193,814,2440,364,2301,5327,2384,1917,1600,1757,2261,2430,3021,1431,2482,2985,2959,1646,632],"name":"PADTokenV2","nameLocation":"703:10:31","nodeType":"ContractDefinition","nodes":[{"constant":true,"functionSelector":"e63ab1e9","id":8883,"mutability":"constant","name":"PAUSER_ROLE","nameLocation":"888:11:31","nodeType":"VariableDeclaration","scope":9193,"src":"864:62:31","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":8879,"name":"bytes32","nodeType":"ElementaryTypeName","src":"864:7:31","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"arguments":[{"hexValue":"5041555345525f524f4c45","id":8881,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"912:13:31","typeDescriptions":{"typeIdentifier":"t_stringliteral_65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a","typeString":"literal_string \"PAUSER_ROLE\""},"value":"PAUSER_ROLE"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a","typeString":"literal_string \"PAUSER_ROLE\""}],"id":8880,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"902:9:31","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":8882,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"902:24:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"public"},{"constant":true,"functionSelector":"d5391393","id":8888,"mutability":"constant","name":"MINTER_ROLE","nameLocation":"957:11:31","nodeType":"VariableDeclaration","scope":9193,"src":"933:62:31","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":8884,"name":"bytes32","nodeType":"ElementaryTypeName","src":"933:7:31","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"arguments":[{"hexValue":"4d494e5445525f524f4c45","id":8886,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"981:13:31","typeDescriptions":{"typeIdentifier":"t_stringliteral_9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a6","typeString":"literal_string \"MINTER_ROLE\""},"value":"MINTER_ROLE"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a6","typeString":"literal_string \"MINTER_ROLE\""}],"id":8885,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"971:9:31","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":8887,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"971:24:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"public"},{"constant":false,"functionSelector":"a84173ae","id":8890,"mutability":"mutable","name":"gnosisSafe","nameLocation":"1047:10:31","nodeType":"VariableDeclaration","scope":9193,"src":"1032:25:31","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8889,"name":"address","nodeType":"ElementaryTypeName","src":"1032:7:31","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"public"},{"constant":false,"functionSelector":"04646a49","id":8892,"mutability":"mutable","name":"cooldownPeriod","nameLocation":"1079:14:31","nodeType":"VariableDeclaration","scope":9193,"src":"1064:29:31","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8891,"name":"uint256","nodeType":"ElementaryTypeName","src":"1064:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"constant":false,"functionSelector":"01320fe2","id":8896,"mutability":"mutable","name":"cooldowns","nameLocation":"1135:9:31","nodeType":"VariableDeclaration","scope":9193,"src":"1100:44:31","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"typeName":{"id":8895,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":8893,"name":"address","nodeType":"ElementaryTypeName","src":"1108:7:31","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1100:27:31","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":8894,"name":"uint256","nodeType":"ElementaryTypeName","src":"1119:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"public"},{"anonymous":false,"eventSelector":"daaf87d9985c65a1bfbd019043294923ae1b048ba8b4616e3acb32741d268da1","id":8902,"name":"GnosisSafeUpdated","nameLocation":"1178:17:31","nodeType":"EventDefinition","parameters":{"id":8901,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8898,"indexed":true,"mutability":"mutable","name":"oldSafe","nameLocation":"1212:7:31","nodeType":"VariableDeclaration","scope":8902,"src":"1196:23:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8897,"name":"address","nodeType":"ElementaryTypeName","src":"1196:7:31","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":8900,"indexed":true,"mutability":"mutable","name":"newSafe","nameLocation":"1237:7:31","nodeType":"VariableDeclaration","scope":8902,"src":"1221:23:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8899,"name":"address","nodeType":"ElementaryTypeName","src":"1221:7:31","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1195:50:31"},"src":"1172:74:31"},{"anonymous":false,"eventSelector":"98eaabfe135a9c40c420208962bf81e7926b4d6df3e23502164c0554b7b35224","id":8908,"name":"CooldownPeriodUpdated","nameLocation":"1258:21:31","nodeType":"EventDefinition","parameters":{"id":8907,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8904,"indexed":false,"mutability":"mutable","name":"oldPeriod","nameLocation":"1288:9:31","nodeType":"VariableDeclaration","scope":8908,"src":"1280:17:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8903,"name":"uint256","nodeType":"ElementaryTypeName","src":"1280:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":8906,"indexed":false,"mutability":"mutable","name":"newPeriod","nameLocation":"1307:9:31","nodeType":"VariableDeclaration","scope":8908,"src":"1299:17:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8905,"name":"uint256","nodeType":"ElementaryTypeName","src":"1299:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1279:38:31"},"src":"1252:66:31"},{"anonymous":false,"eventSelector":"a162f0703cbc0c48ea2c9e9bed5743aabc058e7532e594490e3a35bfb0f75ab8","id":8914,"name":"CooldownSet","nameLocation":"1330:11:31","nodeType":"EventDefinition","parameters":{"id":8913,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8910,"indexed":true,"mutability":"mutable","name":"account","nameLocation":"1358:7:31","nodeType":"VariableDeclaration","scope":8914,"src":"1342:23:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8909,"name":"address","nodeType":"ElementaryTypeName","src":"1342:7:31","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":8912,"indexed":false,"mutability":"mutable","name":"cooldown","nameLocation":"1375:8:31","nodeType":"VariableDeclaration","scope":8914,"src":"1367:16:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8911,"name":"uint256","nodeType":"ElementaryTypeName","src":"1367:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1341:43:31"},"src":"1324:61:31"},{"errorSelector":"0dac64f9","id":8920,"name":"CooldownNotExpired","nameLocation":"1418:18:31","nodeType":"ErrorDefinition","parameters":{"id":8919,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8916,"mutability":"mutable","name":"account","nameLocation":"1445:7:31","nodeType":"VariableDeclaration","scope":8920,"src":"1437:15:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8915,"name":"address","nodeType":"ElementaryTypeName","src":"1437:7:31","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":8918,"mutability":"mutable","name":"cooldown","nameLocation":"1462:8:31","nodeType":"VariableDeclaration","scope":8920,"src":"1454:16:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8917,"name":"uint256","nodeType":"ElementaryTypeName","src":"1454:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1436:35:31"},"src":"1412:60:31"},{"body":{"id":8927,"nodeType":"Block","src":"1552:41:31","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":8924,"name":"_disableInitializers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":586,"src":"1563:20:31","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":8925,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1563:22:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8926,"nodeType":"ExpressionStatement","src":"1563:22:31"}]},"documentation":{"id":8921,"nodeType":"StructuredDocumentation","src":"1484:48:31","text":"@custom:oz-upgrades-unsafe-allow constructor"},"id":8928,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":8922,"nodeType":"ParameterList","parameters":[],"src":"1549:2:31"},"returnParameters":{"id":8923,"nodeType":"ParameterList","parameters":[],"src":"1552:0:31"},"scope":9193,"src":"1538:55:31","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":8986,"nodeType":"Block","src":"1788:555:31","statements":[{"expression":{"arguments":[{"hexValue":"50414420546f6b656e","id":8937,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1812:11:31","typeDescriptions":{"typeIdentifier":"t_stringliteral_90a5fbdb7e9d5822db30567e029f084a5c098fa3c05cec70c90c484e61e1fd3f","typeString":"literal_string \"PAD Token\""},"value":"PAD Token"},{"hexValue":"504144","id":8938,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1825:5:31","typeDescriptions":{"typeIdentifier":"t_stringliteral_1b724658768486330908119ffc8a96b080353348d6319289fffab77915522729","typeString":"literal_string \"PAD\""},"value":"PAD"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_90a5fbdb7e9d5822db30567e029f084a5c098fa3c05cec70c90c484e61e1fd3f","typeString":"literal_string \"PAD Token\""},{"typeIdentifier":"t_stringliteral_1b724658768486330908119ffc8a96b080353348d6319289fffab77915522729","typeString":"literal_string \"PAD\""}],"id":8936,"name":"__ERC20_init","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":882,"src":"1799:12:31","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory,string memory)"}},"id":8939,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1799:32:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8940,"nodeType":"ExpressionStatement","src":"1799:32:31"},{"expression":{"arguments":[{"hexValue":"50414420546f6b656e","id":8942,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1861:11:31","typeDescriptions":{"typeIdentifier":"t_stringliteral_90a5fbdb7e9d5822db30567e029f084a5c098fa3c05cec70c90c484e61e1fd3f","typeString":"literal_string \"PAD Token\""},"value":"PAD Token"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_90a5fbdb7e9d5822db30567e029f084a5c098fa3c05cec70c90c484e61e1fd3f","typeString":"literal_string \"PAD Token\""}],"id":8941,"name":"__ERC20Permit_init","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1487,"src":"1842:18:31","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory)"}},"id":8943,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1842:31:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8944,"nodeType":"ExpressionStatement","src":"1842:31:31"},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":8945,"name":"__Pausable_init","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1821,"src":"1884:15:31","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":8946,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1884:17:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8947,"nodeType":"ExpressionStatement","src":"1884:17:31"},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":8948,"name":"__AccessControl_init","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":65,"src":"1912:20:31","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":8949,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1912:22:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8950,"nodeType":"ExpressionStatement","src":"1912:22:31"},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":8951,"name":"__UUPSUpgradeable_init","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":686,"src":"1945:22:31","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":8952,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1945:24:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8953,"nodeType":"ExpressionStatement","src":"1945:24:31"},{"expression":{"arguments":[{"id":8955,"name":"DEFAULT_ADMIN_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":30,"src":"2026:18:31","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"expression":{"id":8956,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2046:3:31","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":8957,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2050:6:31","memberName":"sender","nodeType":"MemberAccess","src":"2046:10:31","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":8954,"name":"_grantRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":317,"src":"2015:10:31","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) returns (bool)"}},"id":8958,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2015:42:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8959,"nodeType":"ExpressionStatement","src":"2015:42:31"},{"expression":{"arguments":[{"id":8961,"name":"PAUSER_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8883,"src":"2079:11:31","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"expression":{"id":8962,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2092:3:31","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":8963,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2096:6:31","memberName":"sender","nodeType":"MemberAccess","src":"2092:10:31","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":8960,"name":"_grantRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":317,"src":"2068:10:31","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) returns (bool)"}},"id":8964,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2068:35:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8965,"nodeType":"ExpressionStatement","src":"2068:35:31"},{"expression":{"arguments":[{"id":8967,"name":"MINTER_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8888,"src":"2125:11:31","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"expression":{"id":8968,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2138:3:31","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":8969,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2142:6:31","memberName":"sender","nodeType":"MemberAccess","src":"2138:10:31","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":8966,"name":"_grantRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":317,"src":"2114:10:31","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) returns (bool)"}},"id":8970,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2114:35:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8971,"nodeType":"ExpressionStatement","src":"2114:35:31"},{"expression":{"arguments":[{"expression":{"id":8973,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2208:3:31","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":8974,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2212:6:31","memberName":"sender","nodeType":"MemberAccess","src":"2208:10:31","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":8975,"name":"initialSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8931,"src":"2220:13:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8972,"name":"_mint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1263,"src":"2202:5:31","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":8976,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2202:32:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8977,"nodeType":"ExpressionStatement","src":"2202:32:31"},{"expression":{"id":8984,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8978,"name":"cooldownPeriod","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8892,"src":"2306:14:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_86400_by_1","typeString":"int_const 86400"},"id":8983,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_rational_1440_by_1","typeString":"int_const 1440"},"id":8981,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3234","id":8979,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2323:2:31","typeDescriptions":{"typeIdentifier":"t_rational_24_by_1","typeString":"int_const 24"},"value":"24"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"3630","id":8980,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2328:2:31","typeDescriptions":{"typeIdentifier":"t_rational_60_by_1","typeString":"int_const 60"},"value":"60"},"src":"2323:7:31","typeDescriptions":{"typeIdentifier":"t_rational_1440_by_1","typeString":"int_const 1440"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"3630","id":8982,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2333:2:31","typeDescriptions":{"typeIdentifier":"t_rational_60_by_1","typeString":"int_const 60"},"value":"60"},"src":"2323:12:31","typeDescriptions":{"typeIdentifier":"t_rational_86400_by_1","typeString":"int_const 86400"}},"src":"2306:29:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":8985,"nodeType":"ExpressionStatement","src":"2306:29:31"}]},"documentation":{"id":8929,"nodeType":"StructuredDocumentation","src":"1605:115:31","text":" @dev Initialize the token\n @param initialSupply Initial token supply (1 billion tokens)"},"functionSelector":"fe4b84df","id":8987,"implemented":true,"kind":"function","modifiers":[{"id":8934,"kind":"modifierInvocation","modifierName":{"id":8933,"name":"initializer","nameLocations":["1776:11:31"],"nodeType":"IdentifierPath","referencedDeclaration":472,"src":"1776:11:31"},"nodeType":"ModifierInvocation","src":"1776:11:31"}],"name":"initialize","nameLocation":"1735:10:31","nodeType":"FunctionDefinition","parameters":{"id":8932,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8931,"mutability":"mutable","name":"initialSupply","nameLocation":"1754:13:31","nodeType":"VariableDeclaration","scope":8987,"src":"1746:21:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8930,"name":"uint256","nodeType":"ElementaryTypeName","src":"1746:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1745:23:31"},"returnParameters":{"id":8935,"nodeType":"ParameterList","parameters":[],"src":"1788:0:31"},"scope":9193,"src":"1726:617:31","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":8997,"nodeType":"Block","src":"2454:27:31","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":8994,"name":"_pause","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1892,"src":"2465:6:31","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":8995,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2465:8:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8996,"nodeType":"ExpressionStatement","src":"2465:8:31"}]},"documentation":{"id":8988,"nodeType":"StructuredDocumentation","src":"2355:47:31","text":" @dev Pause token transfers"},"functionSelector":"8456cb59","id":8998,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"id":8991,"name":"PAUSER_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8883,"src":"2441:11:31","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":8992,"kind":"modifierInvocation","modifierName":{"id":8990,"name":"onlyRole","nameLocations":["2432:8:31"],"nodeType":"IdentifierPath","referencedDeclaration":59,"src":"2432:8:31"},"nodeType":"ModifierInvocation","src":"2432:21:31"}],"name":"pause","nameLocation":"2417:5:31","nodeType":"FunctionDefinition","parameters":{"id":8989,"nodeType":"ParameterList","parameters":[],"src":"2422:2:31"},"returnParameters":{"id":8993,"nodeType":"ParameterList","parameters":[],"src":"2454:0:31"},"scope":9193,"src":"2408:73:31","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":9008,"nodeType":"Block","src":"2596:29:31","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":9005,"name":"_unpause","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1916,"src":"2607:8:31","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":9006,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2607:10:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9007,"nodeType":"ExpressionStatement","src":"2607:10:31"}]},"documentation":{"id":8999,"nodeType":"StructuredDocumentation","src":"2493:49:31","text":" @dev Unpause token transfers"},"functionSelector":"3f4ba83a","id":9009,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"id":9002,"name":"PAUSER_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8883,"src":"2583:11:31","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":9003,"kind":"modifierInvocation","modifierName":{"id":9001,"name":"onlyRole","nameLocations":["2574:8:31"],"nodeType":"IdentifierPath","referencedDeclaration":59,"src":"2574:8:31"},"nodeType":"ModifierInvocation","src":"2574:21:31"}],"name":"unpause","nameLocation":"2557:7:31","nodeType":"FunctionDefinition","parameters":{"id":9000,"nodeType":"ParameterList","parameters":[],"src":"2564:2:31"},"returnParameters":{"id":9004,"nodeType":"ParameterList","parameters":[],"src":"2596:0:31"},"scope":9193,"src":"2548:77:31","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":9031,"nodeType":"Block","src":"2774:137:31","statements":[{"assignments":[9019],"declarations":[{"constant":false,"id":9019,"mutability":"mutable","name":"oldSafe","nameLocation":"2793:7:31","nodeType":"VariableDeclaration","scope":9031,"src":"2785:15:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9018,"name":"address","nodeType":"ElementaryTypeName","src":"2785:7:31","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":9021,"initialValue":{"id":9020,"name":"gnosisSafe","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8890,"src":"2803:10:31","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"2785:28:31"},{"expression":{"id":9024,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":9022,"name":"gnosisSafe","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8890,"src":"2824:10:31","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":9023,"name":"_gnosisSafe","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9012,"src":"2837:11:31","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2824:24:31","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":9025,"nodeType":"ExpressionStatement","src":"2824:24:31"},{"eventCall":{"arguments":[{"id":9027,"name":"oldSafe","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9019,"src":"2882:7:31","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":9028,"name":"_gnosisSafe","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9012,"src":"2891:11:31","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":9026,"name":"GnosisSafeUpdated","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8902,"src":"2864:17:31","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$returns$__$","typeString":"function (address,address)"}},"id":9029,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2864:39:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9030,"nodeType":"EmitStatement","src":"2859:44:31"}]},"documentation":{"id":9010,"nodeType":"StructuredDocumentation","src":"2637:49:31","text":" @dev Set Gnosis Safe address"},"functionSelector":"c3085a3e","id":9032,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"id":9015,"name":"DEFAULT_ADMIN_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":30,"src":"2754:18:31","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":9016,"kind":"modifierInvocation","modifierName":{"id":9014,"name":"onlyRole","nameLocations":["2745:8:31"],"nodeType":"IdentifierPath","referencedDeclaration":59,"src":"2745:8:31"},"nodeType":"ModifierInvocation","src":"2745:28:31"}],"name":"setGnosisSafe","nameLocation":"2701:13:31","nodeType":"FunctionDefinition","parameters":{"id":9013,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9012,"mutability":"mutable","name":"_gnosisSafe","nameLocation":"2723:11:31","nodeType":"VariableDeclaration","scope":9032,"src":"2715:19:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9011,"name":"address","nodeType":"ElementaryTypeName","src":"2715:7:31","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2714:21:31"},"returnParameters":{"id":9017,"nodeType":"ParameterList","parameters":[],"src":"2774:0:31"},"scope":9193,"src":"2692:219:31","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":9054,"nodeType":"Block","src":"3064:161:31","statements":[{"assignments":[9042],"declarations":[{"constant":false,"id":9042,"mutability":"mutable","name":"oldPeriod","nameLocation":"3083:9:31","nodeType":"VariableDeclaration","scope":9054,"src":"3075:17:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9041,"name":"uint256","nodeType":"ElementaryTypeName","src":"3075:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":9044,"initialValue":{"id":9043,"name":"cooldownPeriod","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8892,"src":"3095:14:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"3075:34:31"},{"expression":{"id":9047,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":9045,"name":"cooldownPeriod","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8892,"src":"3120:14:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":9046,"name":"_cooldownPeriod","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9035,"src":"3137:15:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3120:32:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":9048,"nodeType":"ExpressionStatement","src":"3120:32:31"},{"eventCall":{"arguments":[{"id":9050,"name":"oldPeriod","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9042,"src":"3190:9:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":9051,"name":"_cooldownPeriod","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9035,"src":"3201:15:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":9049,"name":"CooldownPeriodUpdated","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8908,"src":"3168:21:31","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (uint256,uint256)"}},"id":9052,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3168:49:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9053,"nodeType":"EmitStatement","src":"3163:54:31"}]},"documentation":{"id":9033,"nodeType":"StructuredDocumentation","src":"2923:45:31","text":" @dev Set cooldown period"},"functionSelector":"80ea3de1","id":9055,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"id":9038,"name":"DEFAULT_ADMIN_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":30,"src":"3044:18:31","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":9039,"kind":"modifierInvocation","modifierName":{"id":9037,"name":"onlyRole","nameLocations":["3035:8:31"],"nodeType":"IdentifierPath","referencedDeclaration":59,"src":"3035:8:31"},"nodeType":"ModifierInvocation","src":"3035:28:31"}],"name":"setCooldownPeriod","nameLocation":"2983:17:31","nodeType":"FunctionDefinition","parameters":{"id":9036,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9035,"mutability":"mutable","name":"_cooldownPeriod","nameLocation":"3009:15:31","nodeType":"VariableDeclaration","scope":9055,"src":"3001:23:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9034,"name":"uint256","nodeType":"ElementaryTypeName","src":"3001:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3000:25:31"},"returnParameters":{"id":9040,"nodeType":"ParameterList","parameters":[],"src":"3064:0:31"},"scope":9193,"src":"2974:251:31","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":9077,"nodeType":"Block","src":"3390:94:31","statements":[{"expression":{"id":9070,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":9066,"name":"cooldowns","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8896,"src":"3401:9:31","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":9068,"indexExpression":{"id":9067,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9058,"src":"3411:7:31","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"3401:18:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":9069,"name":"cooldown","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9060,"src":"3422:8:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3401:29:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":9071,"nodeType":"ExpressionStatement","src":"3401:29:31"},{"eventCall":{"arguments":[{"id":9073,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9058,"src":"3458:7:31","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":9074,"name":"cooldown","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9060,"src":"3467:8:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":9072,"name":"CooldownSet","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8914,"src":"3446:11:31","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":9075,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3446:30:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9076,"nodeType":"EmitStatement","src":"3441:35:31"}]},"documentation":{"id":9056,"nodeType":"StructuredDocumentation","src":"3237:53:31","text":" @dev Set cooldown for an account"},"functionSelector":"9781a37e","id":9078,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"id":9063,"name":"DEFAULT_ADMIN_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":30,"src":"3370:18:31","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":9064,"kind":"modifierInvocation","modifierName":{"id":9062,"name":"onlyRole","nameLocations":["3361:8:31"],"nodeType":"IdentifierPath","referencedDeclaration":59,"src":"3361:8:31"},"nodeType":"ModifierInvocation","src":"3361:28:31"}],"name":"setCooldown","nameLocation":"3305:11:31","nodeType":"FunctionDefinition","parameters":{"id":9061,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9058,"mutability":"mutable","name":"account","nameLocation":"3325:7:31","nodeType":"VariableDeclaration","scope":9078,"src":"3317:15:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9057,"name":"address","nodeType":"ElementaryTypeName","src":"3317:7:31","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":9060,"mutability":"mutable","name":"cooldown","nameLocation":"3342:8:31","nodeType":"VariableDeclaration","scope":9078,"src":"3334:16:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9059,"name":"uint256","nodeType":"ElementaryTypeName","src":"3334:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3316:35:31"},"returnParameters":{"id":9065,"nodeType":"ParameterList","parameters":[],"src":"3390:0:31"},"scope":9193,"src":"3296:188:31","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":9121,"nodeType":"Block","src":"3642:232:31","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":9093,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":9089,"name":"recipients","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9082,"src":"3661:10:31","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[] calldata"}},"id":9090,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3672:6:31","memberName":"length","nodeType":"MemberAccess","src":"3661:17:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":9091,"name":"amounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9085,"src":"3682:7:31","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[] calldata"}},"id":9092,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3690:6:31","memberName":"length","nodeType":"MemberAccess","src":"3682:14:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3661:35:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"417272617973206c656e677468206d69736d61746368","id":9094,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3698:24:31","typeDescriptions":{"typeIdentifier":"t_stringliteral_582fd48f3876d7686bfeaaaa0db0589073271dedd50d66094f02fee2a3d2e01c","typeString":"literal_string \"Arrays length mismatch\""},"value":"Arrays length mismatch"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_582fd48f3876d7686bfeaaaa0db0589073271dedd50d66094f02fee2a3d2e01c","typeString":"literal_string \"Arrays length mismatch\""}],"id":9088,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"3653:7:31","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":9095,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3653:70:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9096,"nodeType":"ExpressionStatement","src":"3653:70:31"},{"body":{"id":9119,"nodeType":"Block","src":"3792:75:31","statements":[{"expression":{"arguments":[{"expression":{"id":9109,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"3817:3:31","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":9110,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3821:6:31","memberName":"sender","nodeType":"MemberAccess","src":"3817:10:31","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"baseExpression":{"id":9111,"name":"recipients","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9082,"src":"3829:10:31","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[] calldata"}},"id":9113,"indexExpression":{"id":9112,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9098,"src":"3840:1:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3829:13:31","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"baseExpression":{"id":9114,"name":"amounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9085,"src":"3844:7:31","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[] calldata"}},"id":9116,"indexExpression":{"id":9115,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9098,"src":"3852:1:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3844:10:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":9108,"name":"_transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1138,"src":"3807:9:31","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":9117,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3807:48:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9118,"nodeType":"ExpressionStatement","src":"3807:48:31"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":9104,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9101,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9098,"src":"3764:1:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":9102,"name":"recipients","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9082,"src":"3768:10:31","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[] calldata"}},"id":9103,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3779:6:31","memberName":"length","nodeType":"MemberAccess","src":"3768:17:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3764:21:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":9120,"initializationExpression":{"assignments":[9098],"declarations":[{"constant":false,"id":9098,"mutability":"mutable","name":"i","nameLocation":"3757:1:31","nodeType":"VariableDeclaration","scope":9120,"src":"3749:9:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9097,"name":"uint256","nodeType":"ElementaryTypeName","src":"3749:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":9100,"initialValue":{"hexValue":"30","id":9099,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3761:1:31","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"3749:13:31"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":9106,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"3787:3:31","subExpression":{"id":9105,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9098,"src":"3787:1:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":9107,"nodeType":"ExpressionStatement","src":"3787:3:31"},"nodeType":"ForStatement","src":"3744:123:31"}]},"documentation":{"id":9079,"nodeType":"StructuredDocumentation","src":"3496:49:31","text":" @dev Batch transfer function"},"functionSelector":"88d695b2","id":9122,"implemented":true,"kind":"function","modifiers":[],"name":"batchTransfer","nameLocation":"3560:13:31","nodeType":"FunctionDefinition","parameters":{"id":9086,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9082,"mutability":"mutable","name":"recipients","nameLocation":"3593:10:31","nodeType":"VariableDeclaration","scope":9122,"src":"3574:29:31","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":9080,"name":"address","nodeType":"ElementaryTypeName","src":"3574:7:31","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":9081,"nodeType":"ArrayTypeName","src":"3574:9:31","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":9085,"mutability":"mutable","name":"amounts","nameLocation":"3624:7:31","nodeType":"VariableDeclaration","scope":9122,"src":"3605:26:31","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":9083,"name":"uint256","nodeType":"ElementaryTypeName","src":"3605:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":9084,"nodeType":"ArrayTypeName","src":"3605:9:31","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"3573:59:31"},"returnParameters":{"id":9087,"nodeType":"ParameterList","parameters":[],"src":"3642:0:31"},"scope":9193,"src":"3551:323:31","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"baseFunctions":[1230],"body":{"id":9171,"nodeType":"Block","src":"4037:331:31","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":9145,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":9138,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9133,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9125,"src":"4122:4:31","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":9136,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4138:1:31","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":9135,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4130:7:31","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":9134,"name":"address","nodeType":"ElementaryTypeName","src":"4130:7:31","typeDescriptions":{}}},"id":9137,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4130:10:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"4122:18:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":9144,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9139,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9127,"src":"4144:2:31","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":9142,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4158:1:31","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":9141,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4150:7:31","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":9140,"name":"address","nodeType":"ElementaryTypeName","src":"4150:7:31","typeDescriptions":{}}},"id":9143,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4150:10:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"4144:16:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"4122:38:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":9162,"nodeType":"IfStatement","src":"4118:192:31","trueBody":{"id":9161,"nodeType":"Block","src":"4162:148:31","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":9151,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":9146,"name":"cooldowns","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8896,"src":"4181:9:31","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":9148,"indexExpression":{"id":9147,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9125,"src":"4191:4:31","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4181:15:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"id":9149,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"4199:5:31","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":9150,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4205:9:31","memberName":"timestamp","nodeType":"MemberAccess","src":"4199:15:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4181:33:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":9160,"nodeType":"IfStatement","src":"4177:122:31","trueBody":{"id":9159,"nodeType":"Block","src":"4216:83:31","statements":[{"errorCall":{"arguments":[{"id":9153,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9125,"src":"4261:4:31","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"baseExpression":{"id":9154,"name":"cooldowns","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8896,"src":"4267:9:31","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":9156,"indexExpression":{"id":9155,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9125,"src":"4277:4:31","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4267:15:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":9152,"name":"CooldownNotExpired","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8920,"src":"4242:18:31","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$_t_uint256_$returns$_t_error_$","typeString":"function (address,uint256) pure returns (error)"}},"id":9157,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4242:41:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":9158,"nodeType":"RevertStatement","src":"4235:48:31"}]}}]}},{"expression":{"arguments":[{"id":9166,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9125,"src":"4344:4:31","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":9167,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9127,"src":"4350:2:31","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":9168,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9129,"src":"4354:5:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":9163,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"4330:5:31","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_PADTokenV2_$9193_$","typeString":"type(contract super PADTokenV2)"}},"id":9165,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4336:7:31","memberName":"_update","nodeType":"MemberAccess","referencedDeclaration":1230,"src":"4330:13:31","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":9169,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4330:30:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9170,"nodeType":"ExpressionStatement","src":"4330:30:31"}]},"documentation":{"id":9123,"nodeType":"StructuredDocumentation","src":"3886:61:31","text":" @dev Override transfer to check cooldown"},"id":9172,"implemented":true,"kind":"function","modifiers":[],"name":"_update","nameLocation":"3962:7:31","nodeType":"FunctionDefinition","overrides":{"id":9131,"nodeType":"OverrideSpecifier","overrides":[],"src":"4020:8:31"},"parameters":{"id":9130,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9125,"mutability":"mutable","name":"from","nameLocation":"3978:4:31","nodeType":"VariableDeclaration","scope":9172,"src":"3970:12:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9124,"name":"address","nodeType":"ElementaryTypeName","src":"3970:7:31","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":9127,"mutability":"mutable","name":"to","nameLocation":"3992:2:31","nodeType":"VariableDeclaration","scope":9172,"src":"3984:10:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9126,"name":"address","nodeType":"ElementaryTypeName","src":"3984:7:31","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":9129,"mutability":"mutable","name":"value","nameLocation":"4004:5:31","nodeType":"VariableDeclaration","scope":9172,"src":"3996:13:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9128,"name":"uint256","nodeType":"ElementaryTypeName","src":"3996:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3969:41:31"},"returnParameters":{"id":9132,"nodeType":"ParameterList","parameters":[],"src":"4037:0:31"},"scope":9193,"src":"3953:415:31","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"baseFunctions":[768],"body":{"id":9182,"nodeType":"Block","src":"4543:54:31","statements":[]},"documentation":{"id":9173,"nodeType":"StructuredDocumentation","src":"4380:56:31","text":" @dev Authorize upgrade (only admin)"},"id":9183,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"id":9179,"name":"DEFAULT_ADMIN_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":30,"src":"4523:18:31","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":9180,"kind":"modifierInvocation","modifierName":{"id":9178,"name":"onlyRole","nameLocations":["4514:8:31"],"nodeType":"IdentifierPath","referencedDeclaration":59,"src":"4514:8:31"},"nodeType":"ModifierInvocation","src":"4514:28:31"}],"name":"_authorizeUpgrade","nameLocation":"4451:17:31","nodeType":"FunctionDefinition","overrides":{"id":9177,"nodeType":"OverrideSpecifier","overrides":[],"src":"4505:8:31"},"parameters":{"id":9176,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9175,"mutability":"mutable","name":"newImplementation","nameLocation":"4477:17:31","nodeType":"VariableDeclaration","scope":9183,"src":"4469:25:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9174,"name":"address","nodeType":"ElementaryTypeName","src":"4469:7:31","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4468:27:31"},"returnParameters":{"id":9181,"nodeType":"ParameterList","parameters":[],"src":"4543:0:31"},"scope":9193,"src":"4442:155:31","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":9191,"nodeType":"Block","src":"4717:33:31","statements":[{"expression":{"hexValue":"322e302e30","id":9189,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4735:7:31","typeDescriptions":{"typeIdentifier":"t_stringliteral_b4bcb154e38601c389396fa918314da42d4626f13ef6d0ceb07e5f5d26b2fbc3","typeString":"literal_string \"2.0.0\""},"value":"2.0.0"},"functionReturnParameters":9188,"id":9190,"nodeType":"Return","src":"4728:14:31"}]},"documentation":{"id":9184,"nodeType":"StructuredDocumentation","src":"4609:37:31","text":" @dev Get version"},"functionSelector":"54fd4d50","id":9192,"implemented":true,"kind":"function","modifiers":[],"name":"version","nameLocation":"4661:7:31","nodeType":"FunctionDefinition","parameters":{"id":9185,"nodeType":"ParameterList","parameters":[],"src":"4668:2:31"},"returnParameters":{"id":9188,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9187,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":9192,"src":"4702:13:31","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":9186,"name":"string","nodeType":"ElementaryTypeName","src":"4702:6:31","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"4701:15:31"},"scope":9193,"src":"4652:98:31","stateMutability":"pure","virtual":true,"visibility":"external"}],"scope":9194,"src":"694:4059:31","usedErrors":[381,384,659,664,1466,1473,1660,1796,1799,2311,2314,2452,2457,2462,2471,2476,2481,2597,2610,3031,3294,4892,4897,4902,8920],"usedEvents":[389,1788,1793,2323,2332,2341,2392,2410,2893,2902,8902,8908,8914]}],"src":"33:4722:31"},"id":31},"contracts/PADTokenV3.sol":{"ast":{"absolutePath":"contracts/PADTokenV3.sol","exportedSymbols":{"AccessControlUpgradeable":[364],"ContextUpgradeable":[1646],"ECDSA":[5229],"EIP712Upgradeable":[2261],"ERC165Upgradeable":[2301],"ERC1967Utils":[2871],"ERC20PermitUpgradeable":[1600],"ERC20Upgradeable":[1431],"IAccessControl":[2384],"IERC165":[5327],"IERC1822Proxiable":[2440],"IERC20":[2959],"IERC20Errors":[2482],"IERC20Metadata":[2985],"IERC20Permit":[3021],"Initializable":[632],"NoncesUpgradeable":[1757],"PADTokenV2":[9193],"PADTokenV3":[9537],"PausableUpgradeable":[1917],"UUPSUpgradeable":[814]},"id":9538,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":9195,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"33:24:32"},{"absolutePath":"contracts/PADTokenV2.sol","file":"./PADTokenV2.sol","id":9196,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":9538,"sourceUnit":9194,"src":"61:26:32","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":9198,"name":"PADTokenV2","nameLocations":["306:10:32"],"nodeType":"IdentifierPath","referencedDeclaration":9193,"src":"306:10:32"},"id":9199,"nodeType":"InheritanceSpecifier","src":"306:10:32"}],"canonicalName":"PADTokenV3","contractDependencies":[],"contractKind":"contract","documentation":{"id":9197,"nodeType":"StructuredDocumentation","src":"91:190:32","text":" @title PADTokenV3\n @dev Version 3 with Blacklist functionality for token transfers\n @notice Adds blacklist management to prevent certain addresses from transferring tokens"},"fullyImplemented":true,"id":9537,"linearizedBaseContracts":[9537,9193,814,2440,364,2301,5327,2384,1917,1600,1757,2261,2430,3021,1431,2482,2985,2959,1646,632],"name":"PADTokenV3","nameLocation":"292:10:32","nodeType":"ContractDefinition","nodes":[{"constant":false,"id":9203,"mutability":"mutable","name":"_blacklisted","nameLocation":"389:12:32","nodeType":"VariableDeclaration","scope":9537,"src":"356:45:32","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"},"typeName":{"id":9202,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":9200,"name":"address","nodeType":"ElementaryTypeName","src":"364:7:32","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"356:24:32","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":9201,"name":"bool","nodeType":"ElementaryTypeName","src":"375:4:32","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}},"visibility":"private"},{"anonymous":false,"eventSelector":"4a740bebda0bde2baf1735e1b1fa93babe7a2bb77ecade7bf5e222d541c076cd","id":9209,"name":"AddressBlacklisted","nameLocation":"435:18:32","nodeType":"EventDefinition","parameters":{"id":9208,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9205,"indexed":true,"mutability":"mutable","name":"account","nameLocation":"470:7:32","nodeType":"VariableDeclaration","scope":9209,"src":"454:23:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9204,"name":"address","nodeType":"ElementaryTypeName","src":"454:7:32","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":9207,"indexed":true,"mutability":"mutable","name":"admin","nameLocation":"495:5:32","nodeType":"VariableDeclaration","scope":9209,"src":"479:21:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9206,"name":"address","nodeType":"ElementaryTypeName","src":"479:7:32","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"453:48:32"},"src":"429:73:32"},{"anonymous":false,"eventSelector":"c5d633221a999da7b50bad97ddd6cff0c917455d8651123a6433642833252b7c","id":9215,"name":"AddressRemovedFromBlacklist","nameLocation":"514:27:32","nodeType":"EventDefinition","parameters":{"id":9214,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9211,"indexed":true,"mutability":"mutable","name":"account","nameLocation":"558:7:32","nodeType":"VariableDeclaration","scope":9215,"src":"542:23:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9210,"name":"address","nodeType":"ElementaryTypeName","src":"542:7:32","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":9213,"indexed":true,"mutability":"mutable","name":"admin","nameLocation":"583:5:32","nodeType":"VariableDeclaration","scope":9215,"src":"567:21:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9212,"name":"address","nodeType":"ElementaryTypeName","src":"567:7:32","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"541:48:32"},"src":"508:82:32"},{"errorSelector":"e2a0fe63","id":9219,"name":"AddressIsBlacklisted","nameLocation":"623:20:32","nodeType":"ErrorDefinition","parameters":{"id":9218,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9217,"mutability":"mutable","name":"account","nameLocation":"652:7:32","nodeType":"VariableDeclaration","scope":9219,"src":"644:15:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9216,"name":"address","nodeType":"ElementaryTypeName","src":"644:7:32","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"643:17:32"},"src":"617:44:32"},{"body":{"id":9226,"nodeType":"Block","src":"789:73:32","statements":[]},"documentation":{"id":9220,"nodeType":"StructuredDocumentation","src":"673:60:32","text":" @dev Initialize V3 - only callable once"},"functionSelector":"38e454b1","id":9227,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"hexValue":"33","id":9223,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"786:1:32","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"}],"id":9224,"kind":"modifierInvocation","modifierName":{"id":9222,"name":"reinitializer","nameLocations":["772:13:32"],"nodeType":"IdentifierPath","referencedDeclaration":519,"src":"772:13:32"},"nodeType":"ModifierInvocation","src":"772:16:32"}],"name":"initializeV3","nameLocation":"748:12:32","nodeType":"FunctionDefinition","parameters":{"id":9221,"nodeType":"ParameterList","parameters":[],"src":"760:2:32"},"returnParameters":{"id":9225,"nodeType":"ParameterList","parameters":[],"src":"789:0:32"},"scope":9537,"src":"739:123:32","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":9239,"nodeType":"Block","src":"1087:47:32","statements":[{"expression":{"baseExpression":{"id":9235,"name":"_blacklisted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9203,"src":"1105:12:32","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":9237,"indexExpression":{"id":9236,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9230,"src":"1118:7:32","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1105:21:32","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":9234,"id":9238,"nodeType":"Return","src":"1098:28:32"}]},"documentation":{"id":9228,"nodeType":"StructuredDocumentation","src":"874:138:32","text":" @dev Check if address is blacklisted\n @param account Address to check\n @return bool True if blacklisted"},"functionSelector":"fe575a87","id":9240,"implemented":true,"kind":"function","modifiers":[],"name":"isBlacklisted","nameLocation":"1027:13:32","nodeType":"FunctionDefinition","parameters":{"id":9231,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9230,"mutability":"mutable","name":"account","nameLocation":"1049:7:32","nodeType":"VariableDeclaration","scope":9240,"src":"1041:15:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9229,"name":"address","nodeType":"ElementaryTypeName","src":"1041:7:32","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1040:17:32"},"returnParameters":{"id":9234,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9233,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":9240,"src":"1081:4:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":9232,"name":"bool","nodeType":"ElementaryTypeName","src":"1081:4:32","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1080:6:32"},"scope":9537,"src":"1018:116:32","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":9279,"nodeType":"Block","src":"1338:259:32","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":9255,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9250,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9243,"src":"1357:7:32","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":9253,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1376:1:32","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":9252,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1368:7:32","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":9251,"name":"address","nodeType":"ElementaryTypeName","src":"1368:7:32","typeDescriptions":{}}},"id":9254,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1368:10:32","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1357:21:32","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"43616e6e6f7420626c61636b6c697374207a65726f2061646472657373","id":9256,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1380:31:32","typeDescriptions":{"typeIdentifier":"t_stringliteral_a504a1fbd4e76ffb6f138f0845a9c693852f9d2da4111969422ff798bbd49298","typeString":"literal_string \"Cannot blacklist zero address\""},"value":"Cannot blacklist zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_a504a1fbd4e76ffb6f138f0845a9c693852f9d2da4111969422ff798bbd49298","typeString":"literal_string \"Cannot blacklist zero address\""}],"id":9249,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"1349:7:32","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":9257,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1349:63:32","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9258,"nodeType":"ExpressionStatement","src":"1349:63:32"},{"expression":{"arguments":[{"id":9263,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"1431:22:32","subExpression":{"baseExpression":{"id":9260,"name":"_blacklisted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9203,"src":"1432:12:32","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":9262,"indexExpression":{"id":9261,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9243,"src":"1445:7:32","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1432:21:32","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4164647265737320616c726561647920626c61636b6c6973746564","id":9264,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1455:29:32","typeDescriptions":{"typeIdentifier":"t_stringliteral_f788ca005c215621f24c46d9b760e3e23a15baf9bf1a15ac76063a2cdbbdd9f2","typeString":"literal_string \"Address already blacklisted\""},"value":"Address already blacklisted"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_f788ca005c215621f24c46d9b760e3e23a15baf9bf1a15ac76063a2cdbbdd9f2","typeString":"literal_string \"Address already blacklisted\""}],"id":9259,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"1423:7:32","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":9265,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1423:62:32","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9266,"nodeType":"ExpressionStatement","src":"1423:62:32"},{"expression":{"id":9271,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":9267,"name":"_blacklisted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9203,"src":"1506:12:32","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":9269,"indexExpression":{"id":9268,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9243,"src":"1519:7:32","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"1506:21:32","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":9270,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1530:4:32","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"1506:28:32","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":9272,"nodeType":"ExpressionStatement","src":"1506:28:32"},{"eventCall":{"arguments":[{"id":9274,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9243,"src":"1569:7:32","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":9275,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1578:3:32","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":9276,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1582:6:32","memberName":"sender","nodeType":"MemberAccess","src":"1578:10:32","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":9273,"name":"AddressBlacklisted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9209,"src":"1550:18:32","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$returns$__$","typeString":"function (address,address)"}},"id":9277,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1550:39:32","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9278,"nodeType":"EmitStatement","src":"1545:44:32"}]},"documentation":{"id":9241,"nodeType":"StructuredDocumentation","src":"1146:107:32","text":" @dev Add address to blacklist (Admin only)\n @param account Address to blacklist"},"functionSelector":"44337ea1","id":9280,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"id":9246,"name":"DEFAULT_ADMIN_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":30,"src":"1318:18:32","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":9247,"kind":"modifierInvocation","modifierName":{"id":9245,"name":"onlyRole","nameLocations":["1309:8:32"],"nodeType":"IdentifierPath","referencedDeclaration":59,"src":"1309:8:32"},"nodeType":"ModifierInvocation","src":"1309:28:32"}],"name":"addToBlacklist","nameLocation":"1268:14:32","nodeType":"FunctionDefinition","parameters":{"id":9244,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9243,"mutability":"mutable","name":"account","nameLocation":"1291:7:32","nodeType":"VariableDeclaration","scope":9280,"src":"1283:15:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9242,"name":"address","nodeType":"ElementaryTypeName","src":"1283:7:32","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1282:17:32"},"returnParameters":{"id":9248,"nodeType":"ParameterList","parameters":[],"src":"1338:0:32"},"scope":9537,"src":"1259:338:32","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":9308,"nodeType":"Block","src":"1823:190:32","statements":[{"expression":{"arguments":[{"baseExpression":{"id":9290,"name":"_blacklisted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9203,"src":"1842:12:32","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":9292,"indexExpression":{"id":9291,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9283,"src":"1855:7:32","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1842:21:32","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"41646472657373206e6f7420626c61636b6c6973746564","id":9293,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1865:25:32","typeDescriptions":{"typeIdentifier":"t_stringliteral_461caef3ccd3511790a63bffbea84243153500414f0847913bd8083d6d4c23b3","typeString":"literal_string \"Address not blacklisted\""},"value":"Address not blacklisted"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_461caef3ccd3511790a63bffbea84243153500414f0847913bd8083d6d4c23b3","typeString":"literal_string \"Address not blacklisted\""}],"id":9289,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"1834:7:32","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":9294,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1834:57:32","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9295,"nodeType":"ExpressionStatement","src":"1834:57:32"},{"expression":{"id":9300,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":9296,"name":"_blacklisted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9203,"src":"1912:12:32","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":9298,"indexExpression":{"id":9297,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9283,"src":"1925:7:32","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"1912:21:32","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"66616c7365","id":9299,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1936:5:32","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"src":"1912:29:32","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":9301,"nodeType":"ExpressionStatement","src":"1912:29:32"},{"eventCall":{"arguments":[{"id":9303,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9283,"src":"1985:7:32","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":9304,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1994:3:32","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":9305,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1998:6:32","memberName":"sender","nodeType":"MemberAccess","src":"1994:10:32","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":9302,"name":"AddressRemovedFromBlacklist","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9215,"src":"1957:27:32","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$returns$__$","typeString":"function (address,address)"}},"id":9306,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1957:48:32","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9307,"nodeType":"EmitStatement","src":"1952:53:32"}]},"documentation":{"id":9281,"nodeType":"StructuredDocumentation","src":"1609:124:32","text":" @dev Remove address from blacklist (Admin only)\n @param account Address to remove from blacklist"},"functionSelector":"537df3b6","id":9309,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"id":9286,"name":"DEFAULT_ADMIN_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":30,"src":"1803:18:32","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":9287,"kind":"modifierInvocation","modifierName":{"id":9285,"name":"onlyRole","nameLocations":["1794:8:32"],"nodeType":"IdentifierPath","referencedDeclaration":59,"src":"1794:8:32"},"nodeType":"ModifierInvocation","src":"1794:28:32"}],"name":"removeFromBlacklist","nameLocation":"1748:19:32","nodeType":"FunctionDefinition","parameters":{"id":9284,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9283,"mutability":"mutable","name":"account","nameLocation":"1776:7:32","nodeType":"VariableDeclaration","scope":9309,"src":"1768:15:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9282,"name":"address","nodeType":"ElementaryTypeName","src":"1768:7:32","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1767:17:32"},"returnParameters":{"id":9288,"nodeType":"ParameterList","parameters":[],"src":"1823:0:32"},"scope":9537,"src":"1739:274:32","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":9363,"nodeType":"Block","src":"2254:313:32","statements":[{"body":{"id":9361,"nodeType":"Block","src":"2311:249:32","statements":[{"assignments":[9331],"declarations":[{"constant":false,"id":9331,"mutability":"mutable","name":"account","nameLocation":"2334:7:32","nodeType":"VariableDeclaration","scope":9361,"src":"2326:15:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9330,"name":"address","nodeType":"ElementaryTypeName","src":"2326:7:32","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":9335,"initialValue":{"baseExpression":{"id":9332,"name":"accounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9313,"src":"2344:8:32","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[] calldata"}},"id":9334,"indexExpression":{"id":9333,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9320,"src":"2353:1:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2344:11:32","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"2326:29:32"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":9346,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":9341,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9336,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9331,"src":"2374:7:32","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":9339,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2393:1:32","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":9338,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2385:7:32","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":9337,"name":"address","nodeType":"ElementaryTypeName","src":"2385:7:32","typeDescriptions":{}}},"id":9340,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2385:10:32","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2374:21:32","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"id":9345,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"2399:22:32","subExpression":{"baseExpression":{"id":9342,"name":"_blacklisted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9203,"src":"2400:12:32","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":9344,"indexExpression":{"id":9343,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9331,"src":"2413:7:32","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2400:21:32","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"2374:47:32","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":9360,"nodeType":"IfStatement","src":"2370:179:32","trueBody":{"id":9359,"nodeType":"Block","src":"2423:126:32","statements":[{"expression":{"id":9351,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":9347,"name":"_blacklisted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9203,"src":"2442:12:32","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":9349,"indexExpression":{"id":9348,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9331,"src":"2455:7:32","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2442:21:32","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":9350,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2466:4:32","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"2442:28:32","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":9352,"nodeType":"ExpressionStatement","src":"2442:28:32"},{"eventCall":{"arguments":[{"id":9354,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9331,"src":"2513:7:32","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":9355,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2522:3:32","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":9356,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2526:6:32","memberName":"sender","nodeType":"MemberAccess","src":"2522:10:32","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":9353,"name":"AddressBlacklisted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9209,"src":"2494:18:32","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$returns$__$","typeString":"function (address,address)"}},"id":9357,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2494:39:32","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9358,"nodeType":"EmitStatement","src":"2489:44:32"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":9326,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9323,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9320,"src":"2285:1:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":9324,"name":"accounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9313,"src":"2289:8:32","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[] calldata"}},"id":9325,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2298:6:32","memberName":"length","nodeType":"MemberAccess","src":"2289:15:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2285:19:32","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":9362,"initializationExpression":{"assignments":[9320],"declarations":[{"constant":false,"id":9320,"mutability":"mutable","name":"i","nameLocation":"2278:1:32","nodeType":"VariableDeclaration","scope":9362,"src":"2270:9:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9319,"name":"uint256","nodeType":"ElementaryTypeName","src":"2270:7:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":9322,"initialValue":{"hexValue":"30","id":9321,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2282:1:32","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"2270:13:32"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":9328,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"2306:3:32","subExpression":{"id":9327,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9320,"src":"2306:1:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":9329,"nodeType":"ExpressionStatement","src":"2306:3:32"},"nodeType":"ForStatement","src":"2265:295:32"}]},"documentation":{"id":9310,"nodeType":"StructuredDocumentation","src":"2025:127:32","text":" @dev Batch add addresses to blacklist (Admin only)\n @param accounts Array of addresses to blacklist"},"functionSelector":"679d665f","id":9364,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"id":9316,"name":"DEFAULT_ADMIN_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":30,"src":"2234:18:32","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":9317,"kind":"modifierInvocation","modifierName":{"id":9315,"name":"onlyRole","nameLocations":["2225:8:32"],"nodeType":"IdentifierPath","referencedDeclaration":59,"src":"2225:8:32"},"nodeType":"ModifierInvocation","src":"2225:28:32"}],"name":"batchAddToBlacklist","nameLocation":"2167:19:32","nodeType":"FunctionDefinition","parameters":{"id":9314,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9313,"mutability":"mutable","name":"accounts","nameLocation":"2206:8:32","nodeType":"VariableDeclaration","scope":9364,"src":"2187:27:32","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":9311,"name":"address","nodeType":"ElementaryTypeName","src":"2187:7:32","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":9312,"nodeType":"ArrayTypeName","src":"2187:9:32","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"2186:29:32"},"returnParameters":{"id":9318,"nodeType":"ParameterList","parameters":[],"src":"2254:0:32"},"scope":9537,"src":"2158:409:32","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":9410,"nodeType":"Block","src":"2830:297:32","statements":[{"body":{"id":9408,"nodeType":"Block","src":"2887:233:32","statements":[{"assignments":[9386],"declarations":[{"constant":false,"id":9386,"mutability":"mutable","name":"account","nameLocation":"2910:7:32","nodeType":"VariableDeclaration","scope":9408,"src":"2902:15:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9385,"name":"address","nodeType":"ElementaryTypeName","src":"2902:7:32","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":9390,"initialValue":{"baseExpression":{"id":9387,"name":"accounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9368,"src":"2920:8:32","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[] calldata"}},"id":9389,"indexExpression":{"id":9388,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9375,"src":"2929:1:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2920:11:32","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"2902:29:32"},{"condition":{"baseExpression":{"id":9391,"name":"_blacklisted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9203,"src":"2950:12:32","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":9393,"indexExpression":{"id":9392,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9386,"src":"2963:7:32","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2950:21:32","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":9407,"nodeType":"IfStatement","src":"2946:163:32","trueBody":{"id":9406,"nodeType":"Block","src":"2973:136:32","statements":[{"expression":{"id":9398,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":9394,"name":"_blacklisted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9203,"src":"2992:12:32","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":9396,"indexExpression":{"id":9395,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9386,"src":"3005:7:32","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2992:21:32","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"66616c7365","id":9397,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"3016:5:32","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"src":"2992:29:32","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":9399,"nodeType":"ExpressionStatement","src":"2992:29:32"},{"eventCall":{"arguments":[{"id":9401,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9386,"src":"3073:7:32","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":9402,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"3082:3:32","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":9403,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3086:6:32","memberName":"sender","nodeType":"MemberAccess","src":"3082:10:32","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":9400,"name":"AddressRemovedFromBlacklist","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9215,"src":"3045:27:32","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$returns$__$","typeString":"function (address,address)"}},"id":9404,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3045:48:32","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9405,"nodeType":"EmitStatement","src":"3040:53:32"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":9381,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9378,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9375,"src":"2861:1:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":9379,"name":"accounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9368,"src":"2865:8:32","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[] calldata"}},"id":9380,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2874:6:32","memberName":"length","nodeType":"MemberAccess","src":"2865:15:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2861:19:32","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":9409,"initializationExpression":{"assignments":[9375],"declarations":[{"constant":false,"id":9375,"mutability":"mutable","name":"i","nameLocation":"2854:1:32","nodeType":"VariableDeclaration","scope":9409,"src":"2846:9:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9374,"name":"uint256","nodeType":"ElementaryTypeName","src":"2846:7:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":9377,"initialValue":{"hexValue":"30","id":9376,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2858:1:32","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"2846:13:32"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":9383,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"2882:3:32","subExpression":{"id":9382,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9375,"src":"2882:1:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":9384,"nodeType":"ExpressionStatement","src":"2882:3:32"},"nodeType":"ForStatement","src":"2841:279:32"}]},"documentation":{"id":9365,"nodeType":"StructuredDocumentation","src":"2579:144:32","text":" @dev Batch remove addresses from blacklist (Admin only)\n @param accounts Array of addresses to remove from blacklist"},"functionSelector":"d7162657","id":9411,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"id":9371,"name":"DEFAULT_ADMIN_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":30,"src":"2810:18:32","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":9372,"kind":"modifierInvocation","modifierName":{"id":9370,"name":"onlyRole","nameLocations":["2801:8:32"],"nodeType":"IdentifierPath","referencedDeclaration":59,"src":"2801:8:32"},"nodeType":"ModifierInvocation","src":"2801:28:32"}],"name":"batchRemoveFromBlacklist","nameLocation":"2738:24:32","nodeType":"FunctionDefinition","parameters":{"id":9369,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9368,"mutability":"mutable","name":"accounts","nameLocation":"2782:8:32","nodeType":"VariableDeclaration","scope":9411,"src":"2763:27:32","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":9366,"name":"address","nodeType":"ElementaryTypeName","src":"2763:7:32","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":9367,"nodeType":"ArrayTypeName","src":"2763:9:32","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"2762:29:32"},"returnParameters":{"id":9373,"nodeType":"ParameterList","parameters":[],"src":"2830:0:32"},"scope":9537,"src":"2729:398:32","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":9426,"nodeType":"Block","src":"3259:120:32","statements":[{"condition":{"baseExpression":{"id":9416,"name":"_blacklisted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9203,"src":"3274:12:32","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":9418,"indexExpression":{"id":9417,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9414,"src":"3287:7:32","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3274:21:32","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":9424,"nodeType":"IfStatement","src":"3270:90:32","trueBody":{"id":9423,"nodeType":"Block","src":"3297:63:32","statements":[{"errorCall":{"arguments":[{"id":9420,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9414,"src":"3340:7:32","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":9419,"name":"AddressIsBlacklisted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9219,"src":"3319:20:32","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$_t_error_$","typeString":"function (address) pure returns (error)"}},"id":9421,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3319:29:32","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":9422,"nodeType":"RevertStatement","src":"3312:36:32"}]}},{"id":9425,"nodeType":"PlaceholderStatement","src":"3370:1:32"}]},"documentation":{"id":9412,"nodeType":"StructuredDocumentation","src":"3139:73:32","text":" @dev Modifier to check if address is not blacklisted"},"id":9427,"name":"notBlacklisted","nameLocation":"3227:14:32","nodeType":"ModifierDefinition","parameters":{"id":9415,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9414,"mutability":"mutable","name":"account","nameLocation":"3250:7:32","nodeType":"VariableDeclaration","scope":9427,"src":"3242:15:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9413,"name":"address","nodeType":"ElementaryTypeName","src":"3242:7:32","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3241:17:32"},"src":"3218:161:32","virtual":false,"visibility":"internal"},{"baseFunctions":[9172],"body":{"id":9482,"nodeType":"Block","src":"3588:331:32","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":9456,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":9449,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9444,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9430,"src":"3673:4:32","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":9447,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3689:1:32","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":9446,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3681:7:32","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":9445,"name":"address","nodeType":"ElementaryTypeName","src":"3681:7:32","typeDescriptions":{}}},"id":9448,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3681:10:32","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3673:18:32","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":9455,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9450,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9432,"src":"3695:2:32","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":9453,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3709:1:32","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":9452,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3701:7:32","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":9451,"name":"address","nodeType":"ElementaryTypeName","src":"3701:7:32","typeDescriptions":{}}},"id":9454,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3701:10:32","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3695:16:32","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"3673:38:32","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":9473,"nodeType":"IfStatement","src":"3669:192:32","trueBody":{"id":9472,"nodeType":"Block","src":"3713:148:32","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":9462,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":9457,"name":"cooldowns","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8896,"src":"3732:9:32","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":9459,"indexExpression":{"id":9458,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9430,"src":"3742:4:32","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3732:15:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"id":9460,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"3750:5:32","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":9461,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3756:9:32","memberName":"timestamp","nodeType":"MemberAccess","src":"3750:15:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3732:33:32","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":9471,"nodeType":"IfStatement","src":"3728:122:32","trueBody":{"id":9470,"nodeType":"Block","src":"3767:83:32","statements":[{"errorCall":{"arguments":[{"id":9464,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9430,"src":"3812:4:32","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"baseExpression":{"id":9465,"name":"cooldowns","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8896,"src":"3818:9:32","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":9467,"indexExpression":{"id":9466,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9430,"src":"3828:4:32","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3818:15:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":9463,"name":"CooldownNotExpired","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8920,"src":"3793:18:32","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$_t_uint256_$returns$_t_error_$","typeString":"function (address,uint256) pure returns (error)"}},"id":9468,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3793:41:32","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":9469,"nodeType":"RevertStatement","src":"3786:48:32"}]}}]}},{"expression":{"arguments":[{"id":9477,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9430,"src":"3895:4:32","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":9478,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9432,"src":"3901:2:32","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":9479,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9434,"src":"3905:5:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":9474,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"3881:5:32","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_PADTokenV3_$9537_$","typeString":"type(contract super PADTokenV3)"}},"id":9476,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3887:7:32","memberName":"_update","nodeType":"MemberAccess","referencedDeclaration":9172,"src":"3881:13:32","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":9480,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3881:30:32","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9481,"nodeType":"ExpressionStatement","src":"3881:30:32"}]},"documentation":{"id":9428,"nodeType":"StructuredDocumentation","src":"3391:75:32","text":" @dev Override _update to check blacklist for transfers"},"id":9483,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"id":9438,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9430,"src":"3563:4:32","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":9439,"kind":"modifierInvocation","modifierName":{"id":9437,"name":"notBlacklisted","nameLocations":["3548:14:32"],"nodeType":"IdentifierPath","referencedDeclaration":9427,"src":"3548:14:32"},"nodeType":"ModifierInvocation","src":"3548:20:32"},{"arguments":[{"id":9441,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9432,"src":"3584:2:32","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":9442,"kind":"modifierInvocation","modifierName":{"id":9440,"name":"notBlacklisted","nameLocations":["3569:14:32"],"nodeType":"IdentifierPath","referencedDeclaration":9427,"src":"3569:14:32"},"nodeType":"ModifierInvocation","src":"3569:18:32"}],"name":"_update","nameLocation":"3481:7:32","nodeType":"FunctionDefinition","overrides":{"id":9436,"nodeType":"OverrideSpecifier","overrides":[],"src":"3539:8:32"},"parameters":{"id":9435,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9430,"mutability":"mutable","name":"from","nameLocation":"3497:4:32","nodeType":"VariableDeclaration","scope":9483,"src":"3489:12:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9429,"name":"address","nodeType":"ElementaryTypeName","src":"3489:7:32","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":9432,"mutability":"mutable","name":"to","nameLocation":"3511:2:32","nodeType":"VariableDeclaration","scope":9483,"src":"3503:10:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9431,"name":"address","nodeType":"ElementaryTypeName","src":"3503:7:32","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":9434,"mutability":"mutable","name":"value","nameLocation":"3523:5:32","nodeType":"VariableDeclaration","scope":9483,"src":"3515:13:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9433,"name":"uint256","nodeType":"ElementaryTypeName","src":"3515:7:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3488:41:32"},"returnParameters":{"id":9443,"nodeType":"ParameterList","parameters":[],"src":"3588:0:32"},"scope":9537,"src":"3472:447:32","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":9525,"nodeType":"Block","src":"4215:179:32","statements":[{"expression":{"id":9500,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":9493,"name":"statuses","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9491,"src":"4226:8:32","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_memory_ptr","typeString":"bool[] memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"expression":{"id":9497,"name":"accounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9487,"src":"4248:8:32","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[] calldata"}},"id":9498,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4257:6:32","memberName":"length","nodeType":"MemberAccess","src":"4248:15:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":9496,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"4237:10:32","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_bool_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (bool[] memory)"},"typeName":{"baseType":{"id":9494,"name":"bool","nodeType":"ElementaryTypeName","src":"4241:4:32","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":9495,"nodeType":"ArrayTypeName","src":"4241:6:32","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_storage_ptr","typeString":"bool[]"}}},"id":9499,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4237:27:32","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_memory_ptr","typeString":"bool[] memory"}},"src":"4226:38:32","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_memory_ptr","typeString":"bool[] memory"}},"id":9501,"nodeType":"ExpressionStatement","src":"4226:38:32"},{"body":{"id":9523,"nodeType":"Block","src":"4321:66:32","statements":[{"expression":{"id":9521,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":9513,"name":"statuses","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9491,"src":"4336:8:32","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_memory_ptr","typeString":"bool[] memory"}},"id":9515,"indexExpression":{"id":9514,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9503,"src":"4345:1:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"4336:11:32","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"baseExpression":{"id":9516,"name":"_blacklisted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9203,"src":"4350:12:32","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":9520,"indexExpression":{"baseExpression":{"id":9517,"name":"accounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9487,"src":"4363:8:32","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[] calldata"}},"id":9519,"indexExpression":{"id":9518,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9503,"src":"4372:1:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4363:11:32","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4350:25:32","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"4336:39:32","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":9522,"nodeType":"ExpressionStatement","src":"4336:39:32"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":9509,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9506,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9503,"src":"4295:1:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":9507,"name":"accounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9487,"src":"4299:8:32","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[] calldata"}},"id":9508,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4308:6:32","memberName":"length","nodeType":"MemberAccess","src":"4299:15:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4295:19:32","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":9524,"initializationExpression":{"assignments":[9503],"declarations":[{"constant":false,"id":9503,"mutability":"mutable","name":"i","nameLocation":"4288:1:32","nodeType":"VariableDeclaration","scope":9524,"src":"4280:9:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9502,"name":"uint256","nodeType":"ElementaryTypeName","src":"4280:7:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":9505,"initialValue":{"hexValue":"30","id":9504,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4292:1:32","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"4280:13:32"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":9511,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"4316:3:32","subExpression":{"id":9510,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9503,"src":"4316:1:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":9512,"nodeType":"ExpressionStatement","src":"4316:3:32"},"nodeType":"ForStatement","src":"4275:112:32"}]},"documentation":{"id":9484,"nodeType":"StructuredDocumentation","src":"3931:174:32","text":" @dev Get blacklist status for multiple addresses\n @param accounts Array of addresses to check\n @return statuses Array of blacklist statuses"},"functionSelector":"a6ecc5cf","id":9526,"implemented":true,"kind":"function","modifiers":[],"name":"getBlacklistStatus","nameLocation":"4120:18:32","nodeType":"FunctionDefinition","parameters":{"id":9488,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9487,"mutability":"mutable","name":"accounts","nameLocation":"4158:8:32","nodeType":"VariableDeclaration","scope":9526,"src":"4139:27:32","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":9485,"name":"address","nodeType":"ElementaryTypeName","src":"4139:7:32","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":9486,"nodeType":"ArrayTypeName","src":"4139:9:32","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"4138:29:32"},"returnParameters":{"id":9492,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9491,"mutability":"mutable","name":"statuses","nameLocation":"4205:8:32","nodeType":"VariableDeclaration","scope":9526,"src":"4191:22:32","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_memory_ptr","typeString":"bool[]"},"typeName":{"baseType":{"id":9489,"name":"bool","nodeType":"ElementaryTypeName","src":"4191:4:32","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":9490,"nodeType":"ArrayTypeName","src":"4191:6:32","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_storage_ptr","typeString":"bool[]"}},"visibility":"internal"}],"src":"4190:24:32"},"scope":9537,"src":"4111:283:32","stateMutability":"view","virtual":false,"visibility":"external"},{"baseFunctions":[9192],"body":{"id":9535,"nodeType":"Block","src":"4569:33:32","statements":[{"expression":{"hexValue":"332e302e30","id":9533,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4587:7:32","typeDescriptions":{"typeIdentifier":"t_stringliteral_d7a1ce683065975771bedf401ecab037f4f4c62cc51fefdc8b39dd246ff0343a","typeString":"literal_string \"3.0.0\""},"value":"3.0.0"},"functionReturnParameters":9532,"id":9534,"nodeType":"Return","src":"4580:14:32"}]},"documentation":{"id":9527,"nodeType":"StructuredDocumentation","src":"4406:91:32","text":" @dev Get version of the contract\n @return string Version string"},"functionSelector":"54fd4d50","id":9536,"implemented":true,"kind":"function","modifiers":[],"name":"version","nameLocation":"4512:7:32","nodeType":"FunctionDefinition","overrides":{"id":9529,"nodeType":"OverrideSpecifier","overrides":[],"src":"4536:8:32"},"parameters":{"id":9528,"nodeType":"ParameterList","parameters":[],"src":"4519:2:32"},"returnParameters":{"id":9532,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9531,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":9536,"src":"4554:13:32","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":9530,"name":"string","nodeType":"ElementaryTypeName","src":"4554:6:32","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"4553:15:32"},"scope":9537,"src":"4503:99:32","stateMutability":"pure","virtual":false,"visibility":"external"}],"scope":9538,"src":"283:4322:32","usedErrors":[381,384,659,664,1466,1473,1660,1796,1799,2311,2314,2452,2457,2462,2471,2476,2481,2597,2610,3031,3294,4892,4897,4902,8920,9219],"usedEvents":[389,1788,1793,2323,2332,2341,2392,2410,2893,2902,8902,8908,8914,9209,9215]}],"src":"33:4574:32"},"id":32}},"contracts":{"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol":{"AccessControlUpgradeable":{"abi":[{"inputs":[],"name":"AccessControlBadConfirmation","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"bytes32","name":"neededRole","type":"bytes32"}],"name":"AccessControlUnauthorizedAccount","type":"error"},{"inputs":[],"name":"InvalidInitialization","type":"error"},{"inputs":[],"name":"NotInitializing","type":"error"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint64","name":"version","type":"uint64"}],"name":"Initialized","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"previousAdminRole","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"newAdminRole","type":"bytes32"}],"name":"RoleAdminChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"sender","type":"address"}],"name":"RoleGranted","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"sender","type":"address"}],"name":"RoleRevoked","type":"event"},{"inputs":[],"name":"DEFAULT_ADMIN_ROLE","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"}],"name":"getRoleAdmin","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"grantRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"hasRole","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"callerConfirmation","type":"address"}],"name":"renounceRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"revokeRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"DEFAULT_ADMIN_ROLE()":"a217fddf","getRoleAdmin(bytes32)":"248a9ca3","grantRole(bytes32,address)":"2f2ff15d","hasRole(bytes32,address)":"91d14854","renounceRole(bytes32,address)":"36568abe","revokeRole(bytes32,address)":"d547741f","supportsInterface(bytes4)":"01ffc9a7"}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"AccessControlBadConfirmation\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"neededRole\",\"type\":\"bytes32\"}],\"name\":\"AccessControlUnauthorizedAccount\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"callerConfirmation\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module that allows children to implement role-based access control mechanisms. This is a lightweight version that doesn't allow enumerating role members except through off-chain means by accessing the contract event logs. Some applications may benefit from on-chain enumerability, for those cases see {AccessControlEnumerable}. Roles are referred to by their `bytes32` identifier. These should be exposed in the external API and be unique. The best way to achieve this is by using `public constant` hash digests: ```solidity bytes32 public constant MY_ROLE = keccak256(\\\"MY_ROLE\\\"); ``` Roles can be used to represent a set of permissions. To restrict access to a function call, use {hasRole}: ```solidity function foo() public {     require(hasRole(MY_ROLE, msg.sender));     ... } ``` Roles can be granted and revoked dynamically via the {grantRole} and {revokeRole} functions. Each role has an associated admin role, and only accounts that have a role's admin role can call {grantRole} and {revokeRole}. By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means that only accounts with this role will be able to grant or revoke other roles. More complex role relationships can be created by using {_setRoleAdmin}. WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to grant and revoke this role. Extra precautions should be taken to secure accounts that have been granted it. We recommend using {AccessControlDefaultAdminRules} to enforce additional security measures for this role.\",\"errors\":{\"AccessControlBadConfirmation()\":[{\"details\":\"The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}.\"}],\"AccessControlUnauthorizedAccount(address,bytes32)\":[{\"details\":\"The `account` is missing a role.\"}],\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}]},\"events\":{\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"},\"RoleAdminChanged(bytes32,bytes32,bytes32)\":{\"details\":\"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted to signal this.\"},\"RoleGranted(bytes32,address,address)\":{\"details\":\"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call. This account bears the admin role (for the granted role). Expected in cases where the role was granted using the internal {AccessControl-_grantRole}.\"},\"RoleRevoked(bytes32,address,address)\":{\"details\":\"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)\"}},\"kind\":\"dev\",\"methods\":{\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`. May emit a {RoleRevoked} event.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":\"AccessControlUpgradeable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":{\"keccak256\":\"0x85a70e2b1b65e9ba456add364d22b97eb9944083df1c39c0b4bd6a4b5aa386a4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d32a33be6ca4d8e89b9e82e3f9cec7a6c4e040534152313ff55da85b8f193059\",\"dweb:/ipfs/QmeR55L8t2A8xZ1nvT5y4yVWfFbbmpaGAtGBMz3GGNpuyP\"]},\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0xdb4d24ee2c087c391d587cd17adfe5b3f9d93b3110b1388c2ab6c7c0ad1dcd05\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ab7b6d5b9e2b88176312967fe0f0e78f3d9a1422fa5e4b64e2440c35869b5d08\",\"dweb:/ipfs/QmXKYWWyzcLg1B2k7Sb1qkEXgLCYfXecR9wYW5obRzWP1Q\"]},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0xdbef5f0c787055227243a7318ef74c8a5a1108ca3a07f2b3a00ef67769e1e397\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://08e39f23d5b4692f9a40803e53a8156b72b4c1f9902a88cd65ba964db103dab9\",\"dweb:/ipfs/QmPKn6EYDgpga7KtpkA8wV2yJCYGMtc9K4LkJfhKX2RVSV\"]},\"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol\":{\"keccak256\":\"0x6694b63ddb2c59bbe341c846171798350e8f72fa02189fcdeaca864e28b54e1f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7d945d33e2189ac4e531e4ed228f59ca957b3898c4f9051f4b8c7ae44d72b23a\",\"dweb:/ipfs/QmRcEwubTe3xyXxthijs5fVzEgUFSxeddjd5PGfhBnkunX\"]},\"@openzeppelin/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0x3ecafd57f4d8502737e032c7a72086b6dd32bf5b69d70429e483f89cf310c2c7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b9e8a35d9edbaba568e89782eb806e16a5734a69e275f5d0d52e24537fa11653\",\"dweb:/ipfs/QmdBUAJKXXa5he87an93H96cwiv6c5XpzS1vTkiQtxyKND\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0xdbf01f069eb0b0a7a6ace73b250fdeb7e338d719bb40b5dd1fe7069004a36607\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1fc4a1dfe79b2adc6e22af84838c217946853d28a4291fcd8bbcc6fb226a0470\",\"dweb:/ipfs/QmaJbxCcdE76P1a8rjxkBqTXAfF11XebfwURamUB92G4WN\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol":{"Initializable":{"abi":[{"inputs":[],"name":"InvalidInitialization","type":"error"},{"inputs":[],"name":"NotInitializing","type":"error"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint64","name":"version","type":"uint64"}],"name":"Initialized","type":"event"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"}],\"devdoc\":{\"custom:oz-upgrades-unsafe-allow\":\"constructor constructor() {     _disableInitializers(); } ``` ====\",\"details\":\"This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer function so it can only be called once. The {initializer} modifier provided by this contract will have this effect. The initialization functions use a version number. Once a version number is used, it is consumed and cannot be reused. This mechanism prevents re-execution of each \\\"step\\\" but allows the creation of new initialization steps in case an upgrade adds a module that needs to be initialized. For example: [.hljs-theme-light.nopadding] ```solidity contract MyToken is ERC20Upgradeable {     function initialize() initializer public {         __ERC20_init(\\\"MyToken\\\", \\\"MTK\\\");     } } contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {     function initializeV2() reinitializer(2) public {         __ERC20Permit_init(\\\"MyToken\\\");     } } ``` TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}. CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure that all initializers are idempotent. This is not verified automatically as constructors are by Solidity. [CAUTION] ==== Avoid leaving a contract uninitialized. An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke the {_disableInitializers} function in the constructor to automatically lock it when it is deployed: [.hljs-theme-light.nopadding] ```\",\"errors\":{\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}]},\"events\":{\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"}},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":\"Initializable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0xdb4d24ee2c087c391d587cd17adfe5b3f9d93b3110b1388c2ab6c7c0ad1dcd05\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ab7b6d5b9e2b88176312967fe0f0e78f3d9a1422fa5e4b64e2440c35869b5d08\",\"dweb:/ipfs/QmXKYWWyzcLg1B2k7Sb1qkEXgLCYfXecR9wYW5obRzWP1Q\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol":{"UUPSUpgradeable":{"abi":[{"inputs":[{"internalType":"address","name":"target","type":"address"}],"name":"AddressEmptyCode","type":"error"},{"inputs":[{"internalType":"address","name":"implementation","type":"address"}],"name":"ERC1967InvalidImplementation","type":"error"},{"inputs":[],"name":"ERC1967NonPayable","type":"error"},{"inputs":[],"name":"FailedCall","type":"error"},{"inputs":[],"name":"InvalidInitialization","type":"error"},{"inputs":[],"name":"NotInitializing","type":"error"},{"inputs":[],"name":"UUPSUnauthorizedCallContext","type":"error"},{"inputs":[{"internalType":"bytes32","name":"slot","type":"bytes32"}],"name":"UUPSUnsupportedProxiableUUID","type":"error"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint64","name":"version","type":"uint64"}],"name":"Initialized","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"implementation","type":"address"}],"name":"Upgraded","type":"event"},{"inputs":[],"name":"UPGRADE_INTERFACE_VERSION","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"proxiableUUID","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"newImplementation","type":"address"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"upgradeToAndCall","outputs":[],"stateMutability":"payable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"UPGRADE_INTERFACE_VERSION()":"ad3cb1cc","proxiableUUID()":"52d1902d","upgradeToAndCall(address,bytes)":"4f1ef286"}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"AddressEmptyCode\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"ERC1967InvalidImplementation\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ERC1967NonPayable\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"FailedCall\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"UUPSUnauthorizedCallContext\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"slot\",\"type\":\"bytes32\"}],\"name\":\"UUPSUnsupportedProxiableUUID\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"Upgraded\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"UPGRADE_INTERFACE_VERSION\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"proxiableUUID\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newImplementation\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"upgradeToAndCall\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"An upgradeability mechanism designed for UUPS proxies. The functions included here can perform an upgrade of an {ERC1967Proxy}, when this contract is set as the implementation behind such a proxy. A security mechanism ensures that an upgrade does not turn off upgradeability accidentally, although this risk is reinstated if the upgrade retains upgradeability but removes the security mechanism, e.g. by replacing `UUPSUpgradeable` with a custom implementation of upgrades. The {_authorizeUpgrade} function must be overridden to include access restriction to the upgrade mechanism.\",\"errors\":{\"AddressEmptyCode(address)\":[{\"details\":\"There's no code at `target` (it is not a contract).\"}],\"ERC1967InvalidImplementation(address)\":[{\"details\":\"The `implementation` of the proxy is invalid.\"}],\"ERC1967NonPayable()\":[{\"details\":\"An upgrade function sees `msg.value > 0` that may be lost.\"}],\"FailedCall()\":[{\"details\":\"A call to an address target failed. The target may have reverted.\"}],\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}],\"UUPSUnauthorizedCallContext()\":[{\"details\":\"The call is from an unauthorized context.\"}],\"UUPSUnsupportedProxiableUUID(bytes32)\":[{\"details\":\"The storage `slot` is unsupported as a UUID.\"}]},\"events\":{\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"},\"Upgraded(address)\":{\"details\":\"Emitted when the implementation is upgraded.\"}},\"kind\":\"dev\",\"methods\":{\"proxiableUUID()\":{\"details\":\"Implementation of the ERC-1822 {proxiableUUID} function. This returns the storage slot used by the implementation. It is used to validate the implementation's compatibility when performing an upgrade. IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier.\"},\"upgradeToAndCall(address,bytes)\":{\"custom:oz-upgrades-unsafe-allow-reachable\":\"delegatecall\",\"details\":\"Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call encoded in `data`. Calls {_authorizeUpgrade}. Emits an {Upgraded} event.\"}},\"stateVariables\":{\"UPGRADE_INTERFACE_VERSION\":{\"details\":\"The version of the upgrade interface of the contract. If this getter is missing, both `upgradeTo(address)` and `upgradeToAndCall(address,bytes)` are present, and `upgradeTo` must be used if no function should be called, while `upgradeToAndCall` will invoke the `receive` function if the second argument is the empty byte string. If the getter returns `\\\"5.0.0\\\"`, only `upgradeToAndCall(address,bytes)` is present, and the second argument must be the empty byte string if no function should be called, making it impossible to invoke the `receive` function during an upgrade.\"},\"__self\":{\"custom:oz-upgrades-unsafe-allow\":\"state-variable-immutable\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":\"UUPSUpgradeable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0xdb4d24ee2c087c391d587cd17adfe5b3f9d93b3110b1388c2ab6c7c0ad1dcd05\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ab7b6d5b9e2b88176312967fe0f0e78f3d9a1422fa5e4b64e2440c35869b5d08\",\"dweb:/ipfs/QmXKYWWyzcLg1B2k7Sb1qkEXgLCYfXecR9wYW5obRzWP1Q\"]},\"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":{\"keccak256\":\"0x574a7451e42724f7de29e2855c392a8a5020acd695169466a18459467d719d63\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5bc189f63b639ee173dd7b6fecc39baf7113bf161776aea22b34c57fdd1872ec\",\"dweb:/ipfs/QmZAf2VtjDLRULqjJkde6LNsxAg12tUqpPqgUQQZbAjgtZ\"]},\"@openzeppelin/contracts/interfaces/IERC1967.sol\":{\"keccak256\":\"0x61f1ec8767d80a9fd97e30fb57b529a3ef0d2d646c938fbca30781cdc4d6e3db\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4e34ab801d50581a330540b5f78d7f284ec681ed59cb4142e90440c05bc27e72\",\"dweb:/ipfs/QmeRcreQohkvfhHo3jsaAUcqDbKCGixjXovDgzvQKfQM3Y\"]},\"@openzeppelin/contracts/interfaces/draft-IERC1822.sol\":{\"keccak256\":\"0xddd8e9df40ba9f231b829e3caad53a02da69c03d31e2e638f9f1be50207bd5b0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://108f498e5ef2873ab4a1fef748ca23709ef7aa7b61c40bd4c8f1745c95eb7951\",\"dweb:/ipfs/QmfZhCVy1mEUn2Dh1yrEmv4zfnpZQSSvW7V1BMKuxctWk4\"]},\"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":{\"keccak256\":\"0x299a09b824bffd95d5c9f503dc1870d98aea1d7fb40242a13004b5f3b19addc2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2a576ce7ad5133b0f0b682f58c1f78e97f0359b6d6991bbc07994b45b1526487\",\"dweb:/ipfs/QmWoUp91kDnHMmfsN9LcKCRQ5GZhemsP7Meqo2cjBcJpdi\"]},\"@openzeppelin/contracts/proxy/beacon/IBeacon.sol\":{\"keccak256\":\"0x42193c28259cdffc814b368ddf341ab97b6d6002edefb06fef668859a7aefca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d3bc03aa072ce10d5932bc7252dc777ee5a917a9eb69ca5591f48f03d5e4afd9\",\"dweb:/ipfs/QmYvi7VCFGr5t8K4ruK4LYsf1CR2jLaEpWD2Gg6MntVSXi\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x97666faabffacffa761c0a8c4946e3a717d6b133ae90ee10c068b9d59c8cfcdb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a73a610b6d0b3b2e3be13a48a57421c46c9e83b0cfc4bfc7bf400dfcc12f28cf\",\"dweb:/ipfs/QmXBbeNAodKW36xWTYW9yK16QtVUaq1ieB5FusggyEX6T8\"]},\"@openzeppelin/contracts/utils/Errors.sol\":{\"keccak256\":\"0x74545f3228c285dd99d357eeb35da9b9d87acf00fcf5ca5b2be7a4baf5b8bfc4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ef798292c67a9e6d922a6ebbb6a8e93db894736947db625da9f14acf047792e\",\"dweb:/ipfs/Qmb95rNRHCky4JeJF58Zgh87NvkniWpULc2SEngMowTAKd\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0xb9355bac6de0c0dd42a7f3c4ad3e6e7bdff95109e1bb6ba5be0dce666b314921\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b8449ecfc29ae42905bcfd8fa232bd73eccb14365f1894a3cc1abcce90639379\",\"dweb:/ipfs/QmWwdkEJXZjk57T7T5JRogJzEhcT7JpnmxEVfHAwFSMuZ1\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol":{"ERC20Upgradeable":{"abi":[{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"allowance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientAllowance","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientBalance","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC20InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC20InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC20InvalidSender","type":"error"},{"inputs":[{"internalType":"address","name":"spender","type":"address"}],"name":"ERC20InvalidSpender","type":"error"},{"inputs":[],"name":"InvalidInitialization","type":"error"},{"inputs":[],"name":"NotInitializing","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint64","name":"version","type":"uint64"}],"name":"Initialized","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","decimals()":"313ce567","name()":"06fdde03","symbol()":"95d89b41","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC-20 applications.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":\"ERC20Upgradeable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0xdb4d24ee2c087c391d587cd17adfe5b3f9d93b3110b1388c2ab6c7c0ad1dcd05\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ab7b6d5b9e2b88176312967fe0f0e78f3d9a1422fa5e4b64e2440c35869b5d08\",\"dweb:/ipfs/QmXKYWWyzcLg1B2k7Sb1qkEXgLCYfXecR9wYW5obRzWP1Q\"]},\"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":{\"keccak256\":\"0xfcd09c2aa8cc3f93e12545454359f901965db312bc03833daf84de0c03e05022\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://07701188648d2ab83dab1037808298585264559bddf243bd8929037adcb984b0\",\"dweb:/ipfs/QmavmG5REdHCAWsZ8Cag26BCxAq27DRKGxr3uBg5ZYxQ51\"]},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0xdbef5f0c787055227243a7318ef74c8a5a1108ca3a07f2b3a00ef67769e1e397\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://08e39f23d5b4692f9a40803e53a8156b72b4c1f9902a88cd65ba964db103dab9\",\"dweb:/ipfs/QmPKn6EYDgpga7KtpkA8wV2yJCYGMtc9K4LkJfhKX2RVSV\"]},\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0xe53865a480e99e5c35c3b1fd673cdccae2b5ddb7e0260e82b19d40d99980e146\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bd6c5d37ed3bbb994f5d63f62bfec105dd9dbd11ae8cecdb93232d64a9677143\",\"dweb:/ipfs/QmefNhF6r94wZBqL2XxZMvkrGr4WgLLoWts5oasPWpMUun\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x01e4bd12aef9e3d0956451e6ac9ece01554db0bc484ebc9287e5d57b4fd431d7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cb6de9142941eb74004600d0b23a0753846824648e6ddc23bc93889d03a79441\",\"dweb:/ipfs/QmckMYX9vjZNEx4pLGt6ePpvRcYuvt8s2zWoqSHxX2niHZ\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x5b0e97d38fc94a3e9031e6f6bb948991499dd5fd9fbe74898326e1b5cecc61b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f326d045fa9d7fa02f53b5c0750830127e98c4c3d104ef207ed3bb272d049f89\",\"dweb:/ipfs/QmTGhzTSMdCRZr5JWA48ZoujUPT6LWK3qJnQx2Xq8Z6i3m\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20PermitUpgradeable.sol":{"ERC20PermitUpgradeable":{"abi":[{"inputs":[],"name":"ECDSAInvalidSignature","type":"error"},{"inputs":[{"internalType":"uint256","name":"length","type":"uint256"}],"name":"ECDSAInvalidSignatureLength","type":"error"},{"inputs":[{"internalType":"bytes32","name":"s","type":"bytes32"}],"name":"ECDSAInvalidSignatureS","type":"error"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"allowance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientAllowance","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientBalance","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC20InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC20InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC20InvalidSender","type":"error"},{"inputs":[{"internalType":"address","name":"spender","type":"address"}],"name":"ERC20InvalidSpender","type":"error"},{"inputs":[{"internalType":"uint256","name":"deadline","type":"uint256"}],"name":"ERC2612ExpiredSignature","type":"error"},{"inputs":[{"internalType":"address","name":"signer","type":"address"},{"internalType":"address","name":"owner","type":"address"}],"name":"ERC2612InvalidSigner","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"currentNonce","type":"uint256"}],"name":"InvalidAccountNonce","type":"error"},{"inputs":[],"name":"InvalidInitialization","type":"error"},{"inputs":[],"name":"NotInitializing","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[],"name":"EIP712DomainChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint64","name":"version","type":"uint64"}],"name":"Initialized","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[],"name":"DOMAIN_SEPARATOR","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"eip712Domain","outputs":[{"internalType":"bytes1","name":"fields","type":"bytes1"},{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"version","type":"string"},{"internalType":"uint256","name":"chainId","type":"uint256"},{"internalType":"address","name":"verifyingContract","type":"address"},{"internalType":"bytes32","name":"salt","type":"bytes32"},{"internalType":"uint256[]","name":"extensions","type":"uint256[]"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"nonces","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"uint256","name":"deadline","type":"uint256"},{"internalType":"uint8","name":"v","type":"uint8"},{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"s","type":"bytes32"}],"name":"permit","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"DOMAIN_SEPARATOR()":"3644e515","allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","decimals()":"313ce567","eip712Domain()":"84b0196e","name()":"06fdde03","nonces(address)":"7ecebe00","permit(address,address,uint256,uint256,uint8,bytes32,bytes32)":"d505accf","symbol()":"95d89b41","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"ECDSAInvalidSignature\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"length\",\"type\":\"uint256\"}],\"name\":\"ECDSAInvalidSignatureLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"ECDSAInvalidSignatureS\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"ERC2612ExpiredSignature\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"signer\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC2612InvalidSigner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"currentNonce\",\"type\":\"uint256\"}],\"name\":\"InvalidAccountNonce\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"EIP712DomainChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"eip712Domain\",\"outputs\":[{\"internalType\":\"bytes1\",\"name\":\"fields\",\"type\":\"bytes1\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"version\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"chainId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"verifyingContract\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"},{\"internalType\":\"uint256[]\",\"name\":\"extensions\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"permit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the ERC-20 Permit extension allowing approvals to be made via signatures, as defined in https://eips.ethereum.org/EIPS/eip-2612[ERC-2612]. Adds the {permit} method, which can be used to change an account's ERC-20 allowance (see {IERC20-allowance}) by presenting a message signed by the account. By not relying on `{IERC20-approve}`, the token holder account doesn't need to send a transaction, and thus is not required to hold Ether at all.\",\"errors\":{\"ECDSAInvalidSignature()\":[{\"details\":\"The signature derives the `address(0)`.\"}],\"ECDSAInvalidSignatureLength(uint256)\":[{\"details\":\"The signature has an invalid length.\"}],\"ECDSAInvalidSignatureS(bytes32)\":[{\"details\":\"The signature has an S value that is in the upper half order.\"}],\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC2612ExpiredSignature(uint256)\":[{\"details\":\"Permit deadline has expired.\"}],\"ERC2612InvalidSigner(address,address)\":[{\"details\":\"Mismatched signature.\"}],\"InvalidAccountNonce(address,uint256)\":[{\"details\":\"The nonce used for an `account` is not the expected current nonce.\"}],\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"EIP712DomainChanged()\":{\"details\":\"MAY be emitted to signal that the domain could have changed.\"},\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"DOMAIN_SEPARATOR()\":{\"details\":\"Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\"},\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"eip712Domain()\":{\"details\":\"returns the fields and values that describe the domain separator used by this contract for EIP-712 signature.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"nonces(address)\":{\"details\":\"Returns the current nonce for `owner`. This value must be included whenever a signature is generated for {permit}. Every successful call to {permit} increases ``owner``'s nonce by one. This prevents a signature from being used multiple times.\"},\"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)\":{\"details\":\"Sets `value` as the allowance of `spender` over ``owner``'s tokens, given ``owner``'s signed approval. IMPORTANT: The same issues {IERC20-approve} has related to transaction ordering also apply here. Emits an {Approval} event. Requirements: - `spender` cannot be the zero address. - `deadline` must be a timestamp in the future. - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner` over the EIP712-formatted function arguments. - the signature must use ``owner``'s current nonce (see {nonces}). For more information on the signature format, see the https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP section]. CAUTION: See Security Considerations above.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20PermitUpgradeable.sol\":\"ERC20PermitUpgradeable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0xdb4d24ee2c087c391d587cd17adfe5b3f9d93b3110b1388c2ab6c7c0ad1dcd05\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ab7b6d5b9e2b88176312967fe0f0e78f3d9a1422fa5e4b64e2440c35869b5d08\",\"dweb:/ipfs/QmXKYWWyzcLg1B2k7Sb1qkEXgLCYfXecR9wYW5obRzWP1Q\"]},\"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":{\"keccak256\":\"0xfcd09c2aa8cc3f93e12545454359f901965db312bc03833daf84de0c03e05022\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://07701188648d2ab83dab1037808298585264559bddf243bd8929037adcb984b0\",\"dweb:/ipfs/QmavmG5REdHCAWsZ8Cag26BCxAq27DRKGxr3uBg5ZYxQ51\"]},\"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20PermitUpgradeable.sol\":{\"keccak256\":\"0x075302c23ba4b3a1d2a5000947ac44bbb4e84b011ecadad6f5e3fd92cd568659\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13806b62ea930e61dfba5fbbfd4eafe135bb0e2e4d55ce8cde1407d7b20a739\",\"dweb:/ipfs/QmYjt4fwBLdKrMbGHZPqdsiwsK4obFdXdKFhQBBW5ruEuC\"]},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0xdbef5f0c787055227243a7318ef74c8a5a1108ca3a07f2b3a00ef67769e1e397\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://08e39f23d5b4692f9a40803e53a8156b72b4c1f9902a88cd65ba964db103dab9\",\"dweb:/ipfs/QmPKn6EYDgpga7KtpkA8wV2yJCYGMtc9K4LkJfhKX2RVSV\"]},\"@openzeppelin/contracts-upgradeable/utils/NoncesUpgradeable.sol\":{\"keccak256\":\"0x778f4a1546a1c6c726ecc8e2348a2789690fb8f26e12bd9d89537669167b79a4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://851d3dfe724e918ff0a064b206e1ef46b27ab0df2aa2c8af976973a22ef59827\",\"dweb:/ipfs/Qmd4wb7zX8ueYhMVBy5PJjfsANK3Ra3pKPN7qQkNsdwGHn\"]},\"@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol\":{\"keccak256\":\"0x89374b2a634f0a9c08f5891b6ecce0179bc2e0577819c787ed3268ca428c2459\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f13d2572e5bdd55e483dfac069aac47603644071616a41fce699e94368e38c13\",\"dweb:/ipfs/QmfKeyNT6vyb99vJQatPZ88UyZgXNmAiHUXSWnaR1TPE11\"]},\"@openzeppelin/contracts/interfaces/IERC5267.sol\":{\"keccak256\":\"0x28b2a1f629338ad9bfe7bdab27a478f3d04001bbde67aefb48f473e01589a05a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b13fe921b3a4db8194370374451c3243045d4852e6e27c00fe161acc3eff59ee\",\"dweb:/ipfs/QmfNmkXJsDj9x2et6BTibrbonVGhcP8bRDkRTiXuqhevvR\"]},\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0xe53865a480e99e5c35c3b1fd673cdccae2b5ddb7e0260e82b19d40d99980e146\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bd6c5d37ed3bbb994f5d63f62bfec105dd9dbd11ae8cecdb93232d64a9677143\",\"dweb:/ipfs/QmefNhF6r94wZBqL2XxZMvkrGr4WgLLoWts5oasPWpMUun\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x01e4bd12aef9e3d0956451e6ac9ece01554db0bc484ebc9287e5d57b4fd431d7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cb6de9142941eb74004600d0b23a0753846824648e6ddc23bc93889d03a79441\",\"dweb:/ipfs/QmckMYX9vjZNEx4pLGt6ePpvRcYuvt8s2zWoqSHxX2niHZ\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x5b0e97d38fc94a3e9031e6f6bb948991499dd5fd9fbe74898326e1b5cecc61b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f326d045fa9d7fa02f53b5c0750830127e98c4c3d104ef207ed3bb272d049f89\",\"dweb:/ipfs/QmTGhzTSMdCRZr5JWA48ZoujUPT6LWK3qJnQx2Xq8Z6i3m\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\":{\"keccak256\":\"0x79ee51693b808ffdb306266b04709183c403b04078211b149794bc11d6c3fc39\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c50b360520e990c689b887ed508c6f6acff9309dc207c0f05ad8ebcacf4b98cb\",\"dweb:/ipfs/QmeXjWT5Z5X5UzMbiBd3MoEUnfNAtV8HpoasznLkq34JWZ\"]},\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0x65fd7c9cac0812d510bbaac59b007da1df6f3820f939fca04fd2b7ed07e341c6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f30f7cf8b553278b1bbad1f6aaf4b227b98b1532b3c16dbca92d815d627779df\",\"dweb:/ipfs/QmTkA1v7mrd2ymdTcPYFuNjguKhQx99npcPYKAdMfgfKvB\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x831320073a13168dd04b3b7dc0d7c3c4fd1f8d699c3b3709900d1dd7e52ae931\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d37bb18e9824f73bd0cbf259d2326028031e60ed89bf4eba095c73d605f243ed\",\"dweb:/ipfs/QmWxNLK1eZBwA1GdxzwqGkarHhbciAvM8bg6qcRafeS47J\"]},\"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":{\"keccak256\":\"0xbe22c37080f9052e0e18062a527a19f9354703ee48888c71baf0abd747a34a8b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://eb85649fce273c8c19eeba7db292f92b6653263ae39f12e427a066b998c9cec4\",\"dweb:/ipfs/QmRaTEqA15siRJoiPCuvtzK29dgXxQu94n4JBabHUSFXXQ\"]},\"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol\":{\"keccak256\":\"0xd7999d7b3c3a121215a15e205b381e06cfff55c47f67220d1605cd96cd0848d8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e259964860d8625d6c33d841c870af390834c037c4459c8b14231f1bd440f682\",\"dweb:/ipfs/QmWyFHT1oipmXVN4NLxrdBL9nayTzFfPrkAQbRozeWdhKQ\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xe09e820269ce218384211e4bf344056f0aab77a27b953012a3fb647d7631b7c2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0a8e7a7218203b059b4b4a423a93d6066eb9cec0a8affde80bb4a6c44d6a14a0\",\"dweb:/ipfs/QmSbmEzwGBFD3TntztEE5ZFLBqP1SZYiQhA1dLoDgzrcz4\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0xf1e73884b1e40057009853b1ee55ec66413cfa5eaa9074e5dd85bd070ea8b91c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1d29fd43e41bd73ac0fb65ac77c309c88651a42f8e49989cf1558f64f731697b\",\"dweb:/ipfs/Qmd61ZCYWHj9PJ3uSXaJekif8tkKgmfU6PLunszwhY2QX3\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0x7c35afe4f4b7e64ea6efa5216f51790d8ce80cd764a00790203a59ebf20202ec\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0b264b01df570c48603e16066aea73d3200c78523f9d94dd587a61eafa33705c\",\"dweb:/ipfs/QmayVg47dBKddrgrgsbr4Wu8hQBWZk5oMpiUtXKz1uEo1v\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol":{"ContextUpgradeable":{"abi":[{"inputs":[],"name":"InvalidInitialization","type":"error"},{"inputs":[],"name":"NotInitializing","type":"error"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint64","name":"version","type":"uint64"}],"name":"Initialized","type":"event"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"}],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"errors\":{\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}]},\"events\":{\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"}},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":\"ContextUpgradeable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0xdb4d24ee2c087c391d587cd17adfe5b3f9d93b3110b1388c2ab6c7c0ad1dcd05\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ab7b6d5b9e2b88176312967fe0f0e78f3d9a1422fa5e4b64e2440c35869b5d08\",\"dweb:/ipfs/QmXKYWWyzcLg1B2k7Sb1qkEXgLCYfXecR9wYW5obRzWP1Q\"]},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0xdbef5f0c787055227243a7318ef74c8a5a1108ca3a07f2b3a00ef67769e1e397\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://08e39f23d5b4692f9a40803e53a8156b72b4c1f9902a88cd65ba964db103dab9\",\"dweb:/ipfs/QmPKn6EYDgpga7KtpkA8wV2yJCYGMtc9K4LkJfhKX2RVSV\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"@openzeppelin/contracts-upgradeable/utils/NoncesUpgradeable.sol":{"NoncesUpgradeable":{"abi":[{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"currentNonce","type":"uint256"}],"name":"InvalidAccountNonce","type":"error"},{"inputs":[],"name":"InvalidInitialization","type":"error"},{"inputs":[],"name":"NotInitializing","type":"error"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint64","name":"version","type":"uint64"}],"name":"Initialized","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"nonces","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"nonces(address)":"7ecebe00"}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"currentNonce\",\"type\":\"uint256\"}],\"name\":\"InvalidAccountNonce\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Provides tracking nonces for addresses. Nonces will only increment.\",\"errors\":{\"InvalidAccountNonce(address,uint256)\":[{\"details\":\"The nonce used for an `account` is not the expected current nonce.\"}],\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}]},\"events\":{\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"}},\"kind\":\"dev\",\"methods\":{\"nonces(address)\":{\"details\":\"Returns the next unused nonce for an address.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/utils/NoncesUpgradeable.sol\":\"NoncesUpgradeable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0xdb4d24ee2c087c391d587cd17adfe5b3f9d93b3110b1388c2ab6c7c0ad1dcd05\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ab7b6d5b9e2b88176312967fe0f0e78f3d9a1422fa5e4b64e2440c35869b5d08\",\"dweb:/ipfs/QmXKYWWyzcLg1B2k7Sb1qkEXgLCYfXecR9wYW5obRzWP1Q\"]},\"@openzeppelin/contracts-upgradeable/utils/NoncesUpgradeable.sol\":{\"keccak256\":\"0x778f4a1546a1c6c726ecc8e2348a2789690fb8f26e12bd9d89537669167b79a4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://851d3dfe724e918ff0a064b206e1ef46b27ab0df2aa2c8af976973a22ef59827\",\"dweb:/ipfs/Qmd4wb7zX8ueYhMVBy5PJjfsANK3Ra3pKPN7qQkNsdwGHn\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol":{"PausableUpgradeable":{"abi":[{"inputs":[],"name":"EnforcedPause","type":"error"},{"inputs":[],"name":"ExpectedPause","type":"error"},{"inputs":[],"name":"InvalidInitialization","type":"error"},{"inputs":[],"name":"NotInitializing","type":"error"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint64","name":"version","type":"uint64"}],"name":"Initialized","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"account","type":"address"}],"name":"Paused","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"account","type":"address"}],"name":"Unpaused","type":"event"},{"inputs":[],"name":"paused","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"paused()":"5c975abb"}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"EnforcedPause\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ExpectedPause\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which allows children to implement an emergency stop mechanism that can be triggered by an authorized account. This module is used through inheritance. It will make available the modifiers `whenNotPaused` and `whenPaused`, which can be applied to the functions of your contract. Note that they will not be pausable by simply including this module, only once the modifiers are put in place.\",\"errors\":{\"EnforcedPause()\":[{\"details\":\"The operation failed because the contract is paused.\"}],\"ExpectedPause()\":[{\"details\":\"The operation failed because the contract is not paused.\"}],\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}]},\"events\":{\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"},\"Paused(address)\":{\"details\":\"Emitted when the pause is triggered by `account`.\"},\"Unpaused(address)\":{\"details\":\"Emitted when the pause is lifted by `account`.\"}},\"kind\":\"dev\",\"methods\":{\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\":\"PausableUpgradeable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0xdb4d24ee2c087c391d587cd17adfe5b3f9d93b3110b1388c2ab6c7c0ad1dcd05\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ab7b6d5b9e2b88176312967fe0f0e78f3d9a1422fa5e4b64e2440c35869b5d08\",\"dweb:/ipfs/QmXKYWWyzcLg1B2k7Sb1qkEXgLCYfXecR9wYW5obRzWP1Q\"]},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0xdbef5f0c787055227243a7318ef74c8a5a1108ca3a07f2b3a00ef67769e1e397\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://08e39f23d5b4692f9a40803e53a8156b72b4c1f9902a88cd65ba964db103dab9\",\"dweb:/ipfs/QmPKn6EYDgpga7KtpkA8wV2yJCYGMtc9K4LkJfhKX2RVSV\"]},\"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\":{\"keccak256\":\"0xa6bf6b7efe0e6625a9dcd30c5ddf52c4c24fe8372f37c7de9dbf5034746768d5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8c353ee3705bbf6fadb84c0fb10ef1b736e8ca3ca1867814349d1487ed207beb\",\"dweb:/ipfs/QmcugaPssrzGGE8q4YZKm2ZhnD3kCijjcgdWWg76nWt3FY\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol":{"EIP712Upgradeable":{"abi":[{"inputs":[],"name":"InvalidInitialization","type":"error"},{"inputs":[],"name":"NotInitializing","type":"error"},{"anonymous":false,"inputs":[],"name":"EIP712DomainChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint64","name":"version","type":"uint64"}],"name":"Initialized","type":"event"},{"inputs":[],"name":"eip712Domain","outputs":[{"internalType":"bytes1","name":"fields","type":"bytes1"},{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"version","type":"string"},{"internalType":"uint256","name":"chainId","type":"uint256"},{"internalType":"address","name":"verifyingContract","type":"address"},{"internalType":"bytes32","name":"salt","type":"bytes32"},{"internalType":"uint256[]","name":"extensions","type":"uint256[]"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"eip712Domain()":"84b0196e"}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"EIP712DomainChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"eip712Domain\",\"outputs\":[{\"internalType\":\"bytes1\",\"name\":\"fields\",\"type\":\"bytes1\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"version\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"chainId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"verifyingContract\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"},{\"internalType\":\"uint256[]\",\"name\":\"extensions\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"https://eips.ethereum.org/EIPS/eip-712[EIP-712] is a standard for hashing and signing of typed structured data. The encoding scheme specified in the EIP requires a domain separator and a hash of the typed structured data, whose encoding is very generic and therefore its implementation in Solidity is not feasible, thus this contract does not implement the encoding itself. Protocols need to implement the type-specific encoding they need in order to produce the hash of their typed data using a combination of `abi.encode` and `keccak256`. This contract implements the EIP-712 domain separator ({_domainSeparatorV4}) that is used as part of the encoding scheme, and the final step of the encoding to obtain the message digest that is then signed via ECDSA ({_hashTypedDataV4}). The implementation of the domain separator was designed to be as efficient as possible while still properly updating the chain id to protect against replay attacks on an eventual fork of the chain. NOTE: This contract implements the version of the encoding known as \\\"v4\\\", as implemented by the JSON RPC method https://docs.metamask.io/guide/signing-data.html[`eth_signTypedDataV4` in MetaMask]. NOTE: The upgradeable version of this contract does not use an immutable cache and recomputes the domain separator each time {_domainSeparatorV4} is called. That is cheaper than accessing a cached version in cold storage.\",\"errors\":{\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}]},\"events\":{\"EIP712DomainChanged()\":{\"details\":\"MAY be emitted to signal that the domain could have changed.\"},\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"}},\"kind\":\"dev\",\"methods\":{\"eip712Domain()\":{\"details\":\"returns the fields and values that describe the domain separator used by this contract for EIP-712 signature.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol\":\"EIP712Upgradeable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0xdb4d24ee2c087c391d587cd17adfe5b3f9d93b3110b1388c2ab6c7c0ad1dcd05\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ab7b6d5b9e2b88176312967fe0f0e78f3d9a1422fa5e4b64e2440c35869b5d08\",\"dweb:/ipfs/QmXKYWWyzcLg1B2k7Sb1qkEXgLCYfXecR9wYW5obRzWP1Q\"]},\"@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol\":{\"keccak256\":\"0x89374b2a634f0a9c08f5891b6ecce0179bc2e0577819c787ed3268ca428c2459\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f13d2572e5bdd55e483dfac069aac47603644071616a41fce699e94368e38c13\",\"dweb:/ipfs/QmfKeyNT6vyb99vJQatPZ88UyZgXNmAiHUXSWnaR1TPE11\"]},\"@openzeppelin/contracts/interfaces/IERC5267.sol\":{\"keccak256\":\"0x28b2a1f629338ad9bfe7bdab27a478f3d04001bbde67aefb48f473e01589a05a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b13fe921b3a4db8194370374451c3243045d4852e6e27c00fe161acc3eff59ee\",\"dweb:/ipfs/QmfNmkXJsDj9x2et6BTibrbonVGhcP8bRDkRTiXuqhevvR\"]},\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0x65fd7c9cac0812d510bbaac59b007da1df6f3820f939fca04fd2b7ed07e341c6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f30f7cf8b553278b1bbad1f6aaf4b227b98b1532b3c16dbca92d815d627779df\",\"dweb:/ipfs/QmTkA1v7mrd2ymdTcPYFuNjguKhQx99npcPYKAdMfgfKvB\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x831320073a13168dd04b3b7dc0d7c3c4fd1f8d699c3b3709900d1dd7e52ae931\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d37bb18e9824f73bd0cbf259d2326028031e60ed89bf4eba095c73d605f243ed\",\"dweb:/ipfs/QmWxNLK1eZBwA1GdxzwqGkarHhbciAvM8bg6qcRafeS47J\"]},\"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol\":{\"keccak256\":\"0xd7999d7b3c3a121215a15e205b381e06cfff55c47f67220d1605cd96cd0848d8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e259964860d8625d6c33d841c870af390834c037c4459c8b14231f1bd440f682\",\"dweb:/ipfs/QmWyFHT1oipmXVN4NLxrdBL9nayTzFfPrkAQbRozeWdhKQ\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xe09e820269ce218384211e4bf344056f0aab77a27b953012a3fb647d7631b7c2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0a8e7a7218203b059b4b4a423a93d6066eb9cec0a8affde80bb4a6c44d6a14a0\",\"dweb:/ipfs/QmSbmEzwGBFD3TntztEE5ZFLBqP1SZYiQhA1dLoDgzrcz4\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0xf1e73884b1e40057009853b1ee55ec66413cfa5eaa9074e5dd85bd070ea8b91c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1d29fd43e41bd73ac0fb65ac77c309c88651a42f8e49989cf1558f64f731697b\",\"dweb:/ipfs/Qmd61ZCYWHj9PJ3uSXaJekif8tkKgmfU6PLunszwhY2QX3\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0x7c35afe4f4b7e64ea6efa5216f51790d8ce80cd764a00790203a59ebf20202ec\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0b264b01df570c48603e16066aea73d3200c78523f9d94dd587a61eafa33705c\",\"dweb:/ipfs/QmayVg47dBKddrgrgsbr4Wu8hQBWZk5oMpiUtXKz1uEo1v\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol":{"ERC165Upgradeable":{"abi":[{"inputs":[],"name":"InvalidInitialization","type":"error"},{"inputs":[],"name":"NotInitializing","type":"error"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint64","name":"version","type":"uint64"}],"name":"Initialized","type":"event"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"supportsInterface(bytes4)":"01ffc9a7"}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC165} interface. Contracts that want to implement ERC-165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ```\",\"errors\":{\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}]},\"events\":{\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"}},\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol\":\"ERC165Upgradeable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0xdb4d24ee2c087c391d587cd17adfe5b3f9d93b3110b1388c2ab6c7c0ad1dcd05\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ab7b6d5b9e2b88176312967fe0f0e78f3d9a1422fa5e4b64e2440c35869b5d08\",\"dweb:/ipfs/QmXKYWWyzcLg1B2k7Sb1qkEXgLCYfXecR9wYW5obRzWP1Q\"]},\"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol\":{\"keccak256\":\"0x6694b63ddb2c59bbe341c846171798350e8f72fa02189fcdeaca864e28b54e1f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7d945d33e2189ac4e531e4ed228f59ca957b3898c4f9051f4b8c7ae44d72b23a\",\"dweb:/ipfs/QmRcEwubTe3xyXxthijs5fVzEgUFSxeddjd5PGfhBnkunX\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0xdbf01f069eb0b0a7a6ace73b250fdeb7e338d719bb40b5dd1fe7069004a36607\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1fc4a1dfe79b2adc6e22af84838c217946853d28a4291fcd8bbcc6fb226a0470\",\"dweb:/ipfs/QmaJbxCcdE76P1a8rjxkBqTXAfF11XebfwURamUB92G4WN\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"@openzeppelin/contracts/access/IAccessControl.sol":{"IAccessControl":{"abi":[{"inputs":[],"name":"AccessControlBadConfirmation","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"bytes32","name":"neededRole","type":"bytes32"}],"name":"AccessControlUnauthorizedAccount","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"previousAdminRole","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"newAdminRole","type":"bytes32"}],"name":"RoleAdminChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"sender","type":"address"}],"name":"RoleGranted","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"sender","type":"address"}],"name":"RoleRevoked","type":"event"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"}],"name":"getRoleAdmin","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"grantRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"hasRole","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"callerConfirmation","type":"address"}],"name":"renounceRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"revokeRole","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"getRoleAdmin(bytes32)":"248a9ca3","grantRole(bytes32,address)":"2f2ff15d","hasRole(bytes32,address)":"91d14854","renounceRole(bytes32,address)":"36568abe","revokeRole(bytes32,address)":"d547741f"}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"AccessControlBadConfirmation\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"neededRole\",\"type\":\"bytes32\"}],\"name\":\"AccessControlUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"callerConfirmation\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"External interface of AccessControl declared to support ERC-165 detection.\",\"errors\":{\"AccessControlBadConfirmation()\":[{\"details\":\"The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}.\"}],\"AccessControlUnauthorizedAccount(address,bytes32)\":[{\"details\":\"The `account` is missing a role.\"}]},\"events\":{\"RoleAdminChanged(bytes32,bytes32,bytes32)\":{\"details\":\"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted to signal this.\"},\"RoleGranted(bytes32,address,address)\":{\"details\":\"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call. This account bears the admin role (for the granted role). Expected in cases where the role was granted using the internal {AccessControl-_grantRole}.\"},\"RoleRevoked(bytes32,address,address)\":{\"details\":\"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)\"}},\"kind\":\"dev\",\"methods\":{\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {AccessControl-_setRoleAdmin}.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/IAccessControl.sol\":\"IAccessControl\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0x3ecafd57f4d8502737e032c7a72086b6dd32bf5b69d70429e483f89cf310c2c7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b9e8a35d9edbaba568e89782eb806e16a5734a69e275f5d0d52e24537fa11653\",\"dweb:/ipfs/QmdBUAJKXXa5he87an93H96cwiv6c5XpzS1vTkiQtxyKND\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"@openzeppelin/contracts/interfaces/IERC1967.sol":{"IERC1967":{"abi":[{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"previousAdmin","type":"address"},{"indexed":false,"internalType":"address","name":"newAdmin","type":"address"}],"name":"AdminChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"beacon","type":"address"}],"name":"BeaconUpgraded","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"implementation","type":"address"}],"name":"Upgraded","type":"event"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"previousAdmin\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newAdmin\",\"type\":\"address\"}],\"name\":\"AdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"beacon\",\"type\":\"address\"}],\"name\":\"BeaconUpgraded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"Upgraded\",\"type\":\"event\"}],\"devdoc\":{\"details\":\"ERC-1967: Proxy Storage Slots. This interface contains the events defined in the ERC.\",\"events\":{\"AdminChanged(address,address)\":{\"details\":\"Emitted when the admin account has changed.\"},\"BeaconUpgraded(address)\":{\"details\":\"Emitted when the beacon is changed.\"},\"Upgraded(address)\":{\"details\":\"Emitted when the implementation is upgraded.\"}},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/IERC1967.sol\":\"IERC1967\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC1967.sol\":{\"keccak256\":\"0x61f1ec8767d80a9fd97e30fb57b529a3ef0d2d646c938fbca30781cdc4d6e3db\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4e34ab801d50581a330540b5f78d7f284ec681ed59cb4142e90440c05bc27e72\",\"dweb:/ipfs/QmeRcreQohkvfhHo3jsaAUcqDbKCGixjXovDgzvQKfQM3Y\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"@openzeppelin/contracts/interfaces/IERC5267.sol":{"IERC5267":{"abi":[{"anonymous":false,"inputs":[],"name":"EIP712DomainChanged","type":"event"},{"inputs":[],"name":"eip712Domain","outputs":[{"internalType":"bytes1","name":"fields","type":"bytes1"},{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"version","type":"string"},{"internalType":"uint256","name":"chainId","type":"uint256"},{"internalType":"address","name":"verifyingContract","type":"address"},{"internalType":"bytes32","name":"salt","type":"bytes32"},{"internalType":"uint256[]","name":"extensions","type":"uint256[]"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"eip712Domain()":"84b0196e"}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[],\"name\":\"EIP712DomainChanged\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"eip712Domain\",\"outputs\":[{\"internalType\":\"bytes1\",\"name\":\"fields\",\"type\":\"bytes1\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"version\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"chainId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"verifyingContract\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"},{\"internalType\":\"uint256[]\",\"name\":\"extensions\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"EIP712DomainChanged()\":{\"details\":\"MAY be emitted to signal that the domain could have changed.\"}},\"kind\":\"dev\",\"methods\":{\"eip712Domain()\":{\"details\":\"returns the fields and values that describe the domain separator used by this contract for EIP-712 signature.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/IERC5267.sol\":\"IERC5267\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC5267.sol\":{\"keccak256\":\"0x28b2a1f629338ad9bfe7bdab27a478f3d04001bbde67aefb48f473e01589a05a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b13fe921b3a4db8194370374451c3243045d4852e6e27c00fe161acc3eff59ee\",\"dweb:/ipfs/QmfNmkXJsDj9x2et6BTibrbonVGhcP8bRDkRTiXuqhevvR\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"@openzeppelin/contracts/interfaces/draft-IERC1822.sol":{"IERC1822Proxiable":{"abi":[{"inputs":[],"name":"proxiableUUID","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"proxiableUUID()":"52d1902d"}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"proxiableUUID\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"ERC-1822: Universal Upgradeable Proxy Standard (UUPS) documents a method for upgradeability through a simplified proxy whose upgrades are fully controlled by the current implementation.\",\"kind\":\"dev\",\"methods\":{\"proxiableUUID()\":{\"details\":\"Returns the storage slot that the proxiable contract assumes is being used to store the implementation address. IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this function revert if invoked through a proxy.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC1822.sol\":\"IERC1822Proxiable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC1822.sol\":{\"keccak256\":\"0xddd8e9df40ba9f231b829e3caad53a02da69c03d31e2e638f9f1be50207bd5b0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://108f498e5ef2873ab4a1fef748ca23709ef7aa7b61c40bd4c8f1745c95eb7951\",\"dweb:/ipfs/QmfZhCVy1mEUn2Dh1yrEmv4zfnpZQSSvW7V1BMKuxctWk4\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"@openzeppelin/contracts/interfaces/draft-IERC6093.sol":{"IERC1155Errors":{"abi":[{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC1155InsufficientBalance","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC1155InvalidApprover","type":"error"},{"inputs":[{"internalType":"uint256","name":"idsLength","type":"uint256"},{"internalType":"uint256","name":"valuesLength","type":"uint256"}],"name":"ERC1155InvalidArrayLength","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"}],"name":"ERC1155InvalidOperator","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC1155InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC1155InvalidSender","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"address","name":"owner","type":"address"}],"name":"ERC1155MissingApprovalForAll","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC1155InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valuesLength\",\"type\":\"uint256\"}],\"name\":\"ERC1155InvalidArrayLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC1155MissingApprovalForAll\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.\",\"errors\":{\"ERC1155InsufficientBalance(address,uint256,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC1155InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC1155InvalidArrayLength(uint256,uint256)\":[{\"details\":\"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.\",\"params\":{\"idsLength\":\"Length of the array of token identifiers\",\"valuesLength\":\"Length of the array of token amounts\"}}],\"ERC1155InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC1155InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC1155InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC1155MissingApprovalForAll(address,address)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"owner\":\"Address of the current owner of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC1155Errors\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0xe53865a480e99e5c35c3b1fd673cdccae2b5ddb7e0260e82b19d40d99980e146\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bd6c5d37ed3bbb994f5d63f62bfec105dd9dbd11ae8cecdb93232d64a9677143\",\"dweb:/ipfs/QmefNhF6r94wZBqL2XxZMvkrGr4WgLLoWts5oasPWpMUun\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}},"IERC20Errors":{"abi":[{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"allowance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientAllowance","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientBalance","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC20InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC20InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC20InvalidSender","type":"error"},{"inputs":[{"internalType":"address","name":"spender","type":"address"}],"name":"ERC20InvalidSpender","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC20Errors\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0xe53865a480e99e5c35c3b1fd673cdccae2b5ddb7e0260e82b19d40d99980e146\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bd6c5d37ed3bbb994f5d63f62bfec105dd9dbd11ae8cecdb93232d64a9677143\",\"dweb:/ipfs/QmefNhF6r94wZBqL2XxZMvkrGr4WgLLoWts5oasPWpMUun\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}},"IERC721Errors":{"abi":[{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"address","name":"owner","type":"address"}],"name":"ERC721IncorrectOwner","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC721InsufficientApproval","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC721InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"}],"name":"ERC721InvalidOperator","type":"error"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"ERC721InvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC721InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC721InvalidSender","type":"error"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC721NonexistentToken","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC721Errors\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0xe53865a480e99e5c35c3b1fd673cdccae2b5ddb7e0260e82b19d40d99980e146\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bd6c5d37ed3bbb994f5d63f62bfec105dd9dbd11ae8cecdb93232d64a9677143\",\"dweb:/ipfs/QmefNhF6r94wZBqL2XxZMvkrGr4WgLLoWts5oasPWpMUun\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol":{"ERC1967Utils":{"abi":[{"inputs":[{"internalType":"address","name":"admin","type":"address"}],"name":"ERC1967InvalidAdmin","type":"error"},{"inputs":[{"internalType":"address","name":"beacon","type":"address"}],"name":"ERC1967InvalidBeacon","type":"error"},{"inputs":[{"internalType":"address","name":"implementation","type":"address"}],"name":"ERC1967InvalidImplementation","type":"error"},{"inputs":[],"name":"ERC1967NonPayable","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212201f87cecd2bb48210952a4cce422148f2964a1b1b77d939782535b6700c309f8564736f6c634300081c0033","opcodes":"PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x1F DUP8 0xCE 0xCD 0x2B 0xB4 DUP3 LT SWAP6 0x2A 0x4C 0xCE TIMESTAMP 0x21 BASEFEE CALLCODE SWAP7 BLOBBASEFEE SHL SHL PUSH24 0xD939782535B6700C309F8564736F6C634300081C00330000 ","sourceMap":"510:5903:15:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;510:5903:15;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212201f87cecd2bb48210952a4cce422148f2964a1b1b77d939782535b6700c309f8564736f6c634300081c0033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x1F DUP8 0xCE 0xCD 0x2B 0xB4 DUP3 LT SWAP6 0x2A 0x4C 0xCE TIMESTAMP 0x21 BASEFEE CALLCODE SWAP7 BLOBBASEFEE SHL SHL PUSH24 0xD939782535B6700C309F8564736F6C634300081C00330000 ","sourceMap":"510:5903:15:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"admin\",\"type\":\"address\"}],\"name\":\"ERC1967InvalidAdmin\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"beacon\",\"type\":\"address\"}],\"name\":\"ERC1967InvalidBeacon\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"ERC1967InvalidImplementation\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ERC1967NonPayable\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"This library provides getters and event emitting update functions for https://eips.ethereum.org/EIPS/eip-1967[ERC-1967] slots.\",\"errors\":{\"ERC1967InvalidAdmin(address)\":[{\"details\":\"The `admin` of the proxy is invalid.\"}],\"ERC1967InvalidBeacon(address)\":[{\"details\":\"The `beacon` of the proxy is invalid.\"}],\"ERC1967InvalidImplementation(address)\":[{\"details\":\"The `implementation` of the proxy is invalid.\"}],\"ERC1967NonPayable()\":[{\"details\":\"An upgrade function sees `msg.value > 0` that may be lost.\"}]},\"kind\":\"dev\",\"methods\":{},\"stateVariables\":{\"ADMIN_SLOT\":{\"details\":\"Storage slot with the admin of the contract. This is the keccak-256 hash of \\\"eip1967.proxy.admin\\\" subtracted by 1.\"},\"BEACON_SLOT\":{\"details\":\"The storage slot of the UpgradeableBeacon contract which defines the implementation for this proxy. This is the keccak-256 hash of \\\"eip1967.proxy.beacon\\\" subtracted by 1.\"},\"IMPLEMENTATION_SLOT\":{\"details\":\"Storage slot with the address of the current implementation. This is the keccak-256 hash of \\\"eip1967.proxy.implementation\\\" subtracted by 1.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":\"ERC1967Utils\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC1967.sol\":{\"keccak256\":\"0x61f1ec8767d80a9fd97e30fb57b529a3ef0d2d646c938fbca30781cdc4d6e3db\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4e34ab801d50581a330540b5f78d7f284ec681ed59cb4142e90440c05bc27e72\",\"dweb:/ipfs/QmeRcreQohkvfhHo3jsaAUcqDbKCGixjXovDgzvQKfQM3Y\"]},\"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":{\"keccak256\":\"0x299a09b824bffd95d5c9f503dc1870d98aea1d7fb40242a13004b5f3b19addc2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2a576ce7ad5133b0f0b682f58c1f78e97f0359b6d6991bbc07994b45b1526487\",\"dweb:/ipfs/QmWoUp91kDnHMmfsN9LcKCRQ5GZhemsP7Meqo2cjBcJpdi\"]},\"@openzeppelin/contracts/proxy/beacon/IBeacon.sol\":{\"keccak256\":\"0x42193c28259cdffc814b368ddf341ab97b6d6002edefb06fef668859a7aefca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d3bc03aa072ce10d5932bc7252dc777ee5a917a9eb69ca5591f48f03d5e4afd9\",\"dweb:/ipfs/QmYvi7VCFGr5t8K4ruK4LYsf1CR2jLaEpWD2Gg6MntVSXi\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x97666faabffacffa761c0a8c4946e3a717d6b133ae90ee10c068b9d59c8cfcdb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a73a610b6d0b3b2e3be13a48a57421c46c9e83b0cfc4bfc7bf400dfcc12f28cf\",\"dweb:/ipfs/QmXBbeNAodKW36xWTYW9yK16QtVUaq1ieB5FusggyEX6T8\"]},\"@openzeppelin/contracts/utils/Errors.sol\":{\"keccak256\":\"0x74545f3228c285dd99d357eeb35da9b9d87acf00fcf5ca5b2be7a4baf5b8bfc4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ef798292c67a9e6d922a6ebbb6a8e93db894736947db625da9f14acf047792e\",\"dweb:/ipfs/Qmb95rNRHCky4JeJF58Zgh87NvkniWpULc2SEngMowTAKd\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0xb9355bac6de0c0dd42a7f3c4ad3e6e7bdff95109e1bb6ba5be0dce666b314921\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b8449ecfc29ae42905bcfd8fa232bd73eccb14365f1894a3cc1abcce90639379\",\"dweb:/ipfs/QmWwdkEJXZjk57T7T5JRogJzEhcT7JpnmxEVfHAwFSMuZ1\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"@openzeppelin/contracts/proxy/beacon/IBeacon.sol":{"IBeacon":{"abi":[{"inputs":[],"name":"implementation","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"implementation()":"5c60da1b"}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"implementation\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"This is the interface that {BeaconProxy} expects of its beacon.\",\"kind\":\"dev\",\"methods\":{\"implementation()\":{\"details\":\"Must return an address that can be used as a delegate call target. {UpgradeableBeacon} will check that this address is a contract.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/proxy/beacon/IBeacon.sol\":\"IBeacon\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/proxy/beacon/IBeacon.sol\":{\"keccak256\":\"0x42193c28259cdffc814b368ddf341ab97b6d6002edefb06fef668859a7aefca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d3bc03aa072ce10d5932bc7252dc777ee5a917a9eb69ca5591f48f03d5e4afd9\",\"dweb:/ipfs/QmYvi7VCFGr5t8K4ruK4LYsf1CR2jLaEpWD2Gg6MntVSXi\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"IERC20":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-20 standard as defined in the ERC.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x01e4bd12aef9e3d0956451e6ac9ece01554db0bc484ebc9287e5d57b4fd431d7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cb6de9142941eb74004600d0b23a0753846824648e6ddc23bc93889d03a79441\",\"dweb:/ipfs/QmckMYX9vjZNEx4pLGt6ePpvRcYuvt8s2zWoqSHxX2niHZ\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol":{"IERC20Metadata":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","decimals()":"313ce567","name()":"06fdde03","symbol()":"95d89b41","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the optional metadata functions from the ERC-20 standard.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":\"IERC20Metadata\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x01e4bd12aef9e3d0956451e6ac9ece01554db0bc484ebc9287e5d57b4fd431d7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cb6de9142941eb74004600d0b23a0753846824648e6ddc23bc93889d03a79441\",\"dweb:/ipfs/QmckMYX9vjZNEx4pLGt6ePpvRcYuvt8s2zWoqSHxX2niHZ\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x5b0e97d38fc94a3e9031e6f6bb948991499dd5fd9fbe74898326e1b5cecc61b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f326d045fa9d7fa02f53b5c0750830127e98c4c3d104ef207ed3bb272d049f89\",\"dweb:/ipfs/QmTGhzTSMdCRZr5JWA48ZoujUPT6LWK3qJnQx2Xq8Z6i3m\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol":{"IERC20Permit":{"abi":[{"inputs":[],"name":"DOMAIN_SEPARATOR","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"nonces","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"uint256","name":"deadline","type":"uint256"},{"internalType":"uint8","name":"v","type":"uint8"},{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"s","type":"bytes32"}],"name":"permit","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"DOMAIN_SEPARATOR()":"3644e515","nonces(address)":"7ecebe00","permit(address,address,uint256,uint256,uint8,bytes32,bytes32)":"d505accf"}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"permit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-20 Permit extension allowing approvals to be made via signatures, as defined in https://eips.ethereum.org/EIPS/eip-2612[ERC-2612]. Adds the {permit} method, which can be used to change an account's ERC-20 allowance (see {IERC20-allowance}) by presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't need to send a transaction, and thus is not required to hold Ether at all. ==== Security Considerations There are two important considerations concerning the use of `permit`. The first is that a valid permit signature expresses an allowance, and it should not be assumed to convey additional meaning. In particular, it should not be considered as an intention to spend the allowance in any specific way. The second is that because permits have built-in replay protection and can be submitted by anyone, they can be frontrun. A protocol that uses permits should take this into consideration and allow a `permit` call to fail. Combining these two aspects, a pattern that may be generally recommended is: ```solidity function doThingWithPermit(..., uint256 value, uint256 deadline, uint8 v, bytes32 r, bytes32 s) public {     try token.permit(msg.sender, address(this), value, deadline, v, r, s) {} catch {}     doThing(..., value); } function doThing(..., uint256 value) public {     token.safeTransferFrom(msg.sender, address(this), value);     ... } ``` Observe that: 1) `msg.sender` is used as the owner, leaving no ambiguity as to the signer intent, and 2) the use of `try/catch` allows the permit to fail and makes the code tolerant to frontrunning. (See also {SafeERC20-safeTransferFrom}). Additionally, note that smart contract wallets (such as Argent or Safe) are not able to produce permit signatures, so contracts should have entry points that don't rely on permit.\",\"kind\":\"dev\",\"methods\":{\"DOMAIN_SEPARATOR()\":{\"details\":\"Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\"},\"nonces(address)\":{\"details\":\"Returns the current nonce for `owner`. This value must be included whenever a signature is generated for {permit}. Every successful call to {permit} increases ``owner``'s nonce by one. This prevents a signature from being used multiple times.\"},\"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)\":{\"details\":\"Sets `value` as the allowance of `spender` over ``owner``'s tokens, given ``owner``'s signed approval. IMPORTANT: The same issues {IERC20-approve} has related to transaction ordering also apply here. Emits an {Approval} event. Requirements: - `spender` cannot be the zero address. - `deadline` must be a timestamp in the future. - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner` over the EIP712-formatted function arguments. - the signature must use ``owner``'s current nonce (see {nonces}). For more information on the signature format, see the https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP section]. CAUTION: See Security Considerations above.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\":\"IERC20Permit\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\":{\"keccak256\":\"0x79ee51693b808ffdb306266b04709183c403b04078211b149794bc11d6c3fc39\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c50b360520e990c689b887ed508c6f6acff9309dc207c0f05ad8ebcacf4b98cb\",\"dweb:/ipfs/QmeXjWT5Z5X5UzMbiBd3MoEUnfNAtV8HpoasznLkq34JWZ\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"@openzeppelin/contracts/utils/Address.sol":{"Address":{"abi":[{"inputs":[{"internalType":"address","name":"target","type":"address"}],"name":"AddressEmptyCode","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220a9ce03fda839b78665e3e9ba606c8aa92a48ce2a472e0fcc3572994f4892090164736f6c634300081c0033","opcodes":"PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xA9 0xCE SUB REVERT 0xA8 CODECOPY 0xB7 DUP7 PUSH6 0xE3E9BA606C8A 0xA9 0x2A BASEFEE 0xCE 0x2A SELFBALANCE 0x2E 0xF 0xCC CALLDATALOAD PUSH19 0x994F4892090164736F6C634300081C00330000 ","sourceMap":"243:5954:20:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;243:5954:20;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220a9ce03fda839b78665e3e9ba606c8aa92a48ce2a472e0fcc3572994f4892090164736f6c634300081c0033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xA9 0xCE SUB REVERT 0xA8 CODECOPY 0xB7 DUP7 PUSH6 0xE3E9BA606C8A 0xA9 0x2A BASEFEE 0xCE 0x2A SELFBALANCE 0x2E 0xF 0xCC CALLDATALOAD PUSH19 0x994F4892090164736F6C634300081C00330000 ","sourceMap":"243:5954:20:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"AddressEmptyCode\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Collection of functions related to the address type\",\"errors\":{\"AddressEmptyCode(address)\":[{\"details\":\"There's no code at `target` (it is not a contract).\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Address.sol\":\"Address\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x97666faabffacffa761c0a8c4946e3a717d6b133ae90ee10c068b9d59c8cfcdb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a73a610b6d0b3b2e3be13a48a57421c46c9e83b0cfc4bfc7bf400dfcc12f28cf\",\"dweb:/ipfs/QmXBbeNAodKW36xWTYW9yK16QtVUaq1ieB5FusggyEX6T8\"]},\"@openzeppelin/contracts/utils/Errors.sol\":{\"keccak256\":\"0x74545f3228c285dd99d357eeb35da9b9d87acf00fcf5ca5b2be7a4baf5b8bfc4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ef798292c67a9e6d922a6ebbb6a8e93db894736947db625da9f14acf047792e\",\"dweb:/ipfs/Qmb95rNRHCky4JeJF58Zgh87NvkniWpULc2SEngMowTAKd\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"@openzeppelin/contracts/utils/Errors.sol":{"Errors":{"abi":[{"inputs":[],"name":"FailedCall","type":"error"},{"inputs":[],"name":"FailedDeployment","type":"error"},{"inputs":[{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"InsufficientBalance","type":"error"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"MissingPrecompile","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212200a549339381f23370a18313a9516b6b5aab9373f58a0d31ebfae3d8e31dfbb9e64736f6c634300081c0033","opcodes":"PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 EXP SLOAD SWAP4 CODECOPY CODESIZE 0x1F 0x23 CALLDATACOPY EXP XOR BALANCE GASPRICE SWAP6 AND 0xB6 0xB5 0xAA 0xB9 CALLDATACOPY EXTCODEHASH PC LOG0 0xD3 0x1E 0xBF 0xAE RETURNDATASIZE DUP15 BALANCE 0xDF 0xBB SWAP15 PUSH5 0x736F6C6343 STOP ADDMOD SHR STOP CALLER ","sourceMap":"424:504:21:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;424:504:21;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212200a549339381f23370a18313a9516b6b5aab9373f58a0d31ebfae3d8e31dfbb9e64736f6c634300081c0033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 EXP SLOAD SWAP4 CODECOPY CODESIZE 0x1F 0x23 CALLDATACOPY EXP XOR BALANCE GASPRICE SWAP6 AND 0xB6 0xB5 0xAA 0xB9 CALLDATACOPY EXTCODEHASH PC LOG0 0xD3 0x1E 0xBF 0xAE RETURNDATASIZE DUP15 BALANCE 0xDF 0xBB SWAP15 PUSH5 0x736F6C6343 STOP ADDMOD SHR STOP CALLER ","sourceMap":"424:504:21:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"FailedCall\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"FailedDeployment\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"MissingPrecompile\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Collection of common custom errors used in multiple contracts IMPORTANT: Backwards compatibility is not guaranteed in future versions of the library. It is recommended to avoid relying on the error API for critical functionality. _Available since v5.1._\",\"errors\":{\"FailedCall()\":[{\"details\":\"A call to an address target failed. The target may have reverted.\"}],\"FailedDeployment()\":[{\"details\":\"The deployment failed.\"}],\"InsufficientBalance(uint256,uint256)\":[{\"details\":\"The ETH balance of the account is not enough to perform the operation.\"}],\"MissingPrecompile(address)\":[{\"details\":\"A necessary precompile is missing.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Errors.sol\":\"Errors\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Errors.sol\":{\"keccak256\":\"0x74545f3228c285dd99d357eeb35da9b9d87acf00fcf5ca5b2be7a4baf5b8bfc4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ef798292c67a9e6d922a6ebbb6a8e93db894736947db625da9f14acf047792e\",\"dweb:/ipfs/Qmb95rNRHCky4JeJF58Zgh87NvkniWpULc2SEngMowTAKd\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"@openzeppelin/contracts/utils/Panic.sol":{"Panic":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212207cb493c19906682158979ec2d193486378bc92a27e4d873bfadcf406de03b82a64736f6c634300081c0033","opcodes":"PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH29 0xB493C19906682158979EC2D193486378BC92A27E4D873BFADCF406DE03 0xB8 0x2A PUSH5 0x736F6C6343 STOP ADDMOD SHR STOP CALLER ","sourceMap":"682:1346:22:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;682:1346:22;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212207cb493c19906682158979ec2d193486378bc92a27e4d873bfadcf406de03b82a64736f6c634300081c0033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH29 0xB493C19906682158979EC2D193486378BC92A27E4D873BFADCF406DE03 0xB8 0x2A PUSH5 0x736F6C6343 STOP ADDMOD SHR STOP CALLER ","sourceMap":"682:1346:22:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Helper library for emitting standardized panic codes. ```solidity contract Example {      using Panic for uint256;      // Use any of the declared internal constants      function foo() { Panic.GENERIC.panic(); }      // Alternatively      function foo() { Panic.panic(Panic.GENERIC); } } ``` Follows the list from https://github.com/ethereum/solidity/blob/v0.8.24/libsolutil/ErrorCodes.h[libsolutil]. _Available since v5.1._\",\"kind\":\"dev\",\"methods\":{},\"stateVariables\":{\"ARRAY_OUT_OF_BOUNDS\":{\"details\":\"array out of bounds access\"},\"ASSERT\":{\"details\":\"used by the assert() builtin\"},\"DIVISION_BY_ZERO\":{\"details\":\"division or modulo by zero\"},\"EMPTY_ARRAY_POP\":{\"details\":\"empty array pop\"},\"ENUM_CONVERSION_ERROR\":{\"details\":\"enum conversion error\"},\"GENERIC\":{\"details\":\"generic / unspecified error\"},\"INVALID_INTERNAL_FUNCTION\":{\"details\":\"calling invalid internal function\"},\"RESOURCE_ERROR\":{\"details\":\"resource error (too large allocation or too large array)\"},\"STORAGE_ENCODING_ERROR\":{\"details\":\"invalid encoding in storage\"},\"UNDER_OVERFLOW\":{\"details\":\"arithmetic underflow or overflow\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Panic.sol\":\"Panic\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0x65fd7c9cac0812d510bbaac59b007da1df6f3820f939fca04fd2b7ed07e341c6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f30f7cf8b553278b1bbad1f6aaf4b227b98b1532b3c16dbca92d815d627779df\",\"dweb:/ipfs/QmTkA1v7mrd2ymdTcPYFuNjguKhQx99npcPYKAdMfgfKvB\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"@openzeppelin/contracts/utils/StorageSlot.sol":{"StorageSlot":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122018fa8564b260fbc0ec5424a9a69020f21ae4b3e7c04404b18d8ae3839f87091f64736f6c634300081c0033","opcodes":"PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 XOR STATICCALL DUP6 PUSH5 0xB260FBC0EC SLOAD 0x24 0xA9 0xA6 SWAP1 KECCAK256 CALLCODE BYTE 0xE4 0xB3 0xE7 0xC0 PREVRANDAO DIV 0xB1 DUP14 DUP11 0xE3 DUP4 SWAP16 DUP8 MULMOD 0x1F PUSH5 0x736F6C6343 STOP ADDMOD SHR STOP CALLER ","sourceMap":"1440:2883:23:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;1440:2883:23;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122018fa8564b260fbc0ec5424a9a69020f21ae4b3e7c04404b18d8ae3839f87091f64736f6c634300081c0033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 XOR STATICCALL DUP6 PUSH5 0xB260FBC0EC SLOAD 0x24 0xA9 0xA6 SWAP1 KECCAK256 CALLCODE BYTE 0xE4 0xB3 0xE7 0xC0 PREVRANDAO DIV 0xB1 DUP14 DUP11 0xE3 DUP4 SWAP16 DUP8 MULMOD 0x1F PUSH5 0x736F6C6343 STOP ADDMOD SHR STOP CALLER ","sourceMap":"1440:2883:23:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Library for reading and writing primitive types to specific storage slots. Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts. This library helps with reading and writing to such slots without the need for inline assembly. The functions in this library return Slot structs that contain a `value` member that can be used to read or write. Example usage to set ERC-1967 implementation slot: ```solidity contract ERC1967 {     // Define the slot. Alternatively, use the SlotDerivation library to derive the slot.     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;     function _getImplementation() internal view returns (address) {         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;     }     function _setImplementation(address newImplementation) internal {         require(newImplementation.code.length > 0);         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;     } } ``` TIP: Consider using this library along with {SlotDerivation}.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/StorageSlot.sol\":\"StorageSlot\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0xb9355bac6de0c0dd42a7f3c4ad3e6e7bdff95109e1bb6ba5be0dce666b314921\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b8449ecfc29ae42905bcfd8fa232bd73eccb14365f1894a3cc1abcce90639379\",\"dweb:/ipfs/QmWwdkEJXZjk57T7T5JRogJzEhcT7JpnmxEVfHAwFSMuZ1\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"@openzeppelin/contracts/utils/Strings.sol":{"Strings":{"abi":[{"inputs":[{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"uint256","name":"length","type":"uint256"}],"name":"StringsInsufficientHexLength","type":"error"},{"inputs":[],"name":"StringsInvalidAddressFormat","type":"error"},{"inputs":[],"name":"StringsInvalidChar","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212207ce9660e3174ebcc34b0d50bfb7a1f24954855b0d76ae6c288f0af486ea2d41864736f6c634300081c0033","opcodes":"PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH29 0xE9660E3174EBCC34B0D50BFB7A1F24954855B0D76AE6C288F0AF486EA2 0xD4 XOR PUSH5 0x736F6C6343 STOP ADDMOD SHR STOP CALLER ","sourceMap":"309:19457:24:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;309:19457:24;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212207ce9660e3174ebcc34b0d50bfb7a1f24954855b0d76ae6c288f0af486ea2d41864736f6c634300081c0033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH29 0xE9660E3174EBCC34B0D50BFB7A1F24954855B0D76AE6C288F0AF486EA2 0xD4 XOR PUSH5 0x736F6C6343 STOP ADDMOD SHR STOP CALLER ","sourceMap":"309:19457:24:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"length\",\"type\":\"uint256\"}],\"name\":\"StringsInsufficientHexLength\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"StringsInvalidAddressFormat\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"StringsInvalidChar\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"String operations.\",\"errors\":{\"StringsInsufficientHexLength(uint256,uint256)\":[{\"details\":\"The `value` string doesn't fit in the specified `length`.\"}],\"StringsInvalidAddressFormat()\":[{\"details\":\"The string being parsed is not a properly formatted address.\"}],\"StringsInvalidChar()\":[{\"details\":\"The string being parsed contains characters that are not in scope of the given base.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Strings.sol\":\"Strings\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0x65fd7c9cac0812d510bbaac59b007da1df6f3820f939fca04fd2b7ed07e341c6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f30f7cf8b553278b1bbad1f6aaf4b227b98b1532b3c16dbca92d815d627779df\",\"dweb:/ipfs/QmTkA1v7mrd2ymdTcPYFuNjguKhQx99npcPYKAdMfgfKvB\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x831320073a13168dd04b3b7dc0d7c3c4fd1f8d699c3b3709900d1dd7e52ae931\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d37bb18e9824f73bd0cbf259d2326028031e60ed89bf4eba095c73d605f243ed\",\"dweb:/ipfs/QmWxNLK1eZBwA1GdxzwqGkarHhbciAvM8bg6qcRafeS47J\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xe09e820269ce218384211e4bf344056f0aab77a27b953012a3fb647d7631b7c2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0a8e7a7218203b059b4b4a423a93d6066eb9cec0a8affde80bb4a6c44d6a14a0\",\"dweb:/ipfs/QmSbmEzwGBFD3TntztEE5ZFLBqP1SZYiQhA1dLoDgzrcz4\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0xf1e73884b1e40057009853b1ee55ec66413cfa5eaa9074e5dd85bd070ea8b91c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1d29fd43e41bd73ac0fb65ac77c309c88651a42f8e49989cf1558f64f731697b\",\"dweb:/ipfs/Qmd61ZCYWHj9PJ3uSXaJekif8tkKgmfU6PLunszwhY2QX3\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0x7c35afe4f4b7e64ea6efa5216f51790d8ce80cd764a00790203a59ebf20202ec\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0b264b01df570c48603e16066aea73d3200c78523f9d94dd587a61eafa33705c\",\"dweb:/ipfs/QmayVg47dBKddrgrgsbr4Wu8hQBWZk5oMpiUtXKz1uEo1v\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"@openzeppelin/contracts/utils/cryptography/ECDSA.sol":{"ECDSA":{"abi":[{"inputs":[],"name":"ECDSAInvalidSignature","type":"error"},{"inputs":[{"internalType":"uint256","name":"length","type":"uint256"}],"name":"ECDSAInvalidSignatureLength","type":"error"},{"inputs":[{"internalType":"bytes32","name":"s","type":"bytes32"}],"name":"ECDSAInvalidSignatureS","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220a3e95c07be1904986e3a697926f54cf3c589cce13dcafc15c0ef59d92e97e59664736f6c634300081c0033","opcodes":"PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 LOG3 0xE9 TLOAD SMOD 0xBE NOT DIV SWAP9 PUSH15 0x3A697926F54CF3C589CCE13DCAFC15 0xC0 0xEF MSIZE 0xD9 0x2E SWAP8 0xE5 SWAP7 PUSH5 0x736F6C6343 STOP ADDMOD SHR STOP CALLER ","sourceMap":"355:7638:25:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;355:7638:25;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220a3e95c07be1904986e3a697926f54cf3c589cce13dcafc15c0ef59d92e97e59664736f6c634300081c0033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 LOG3 0xE9 TLOAD SMOD 0xBE NOT DIV SWAP9 PUSH15 0x3A697926F54CF3C589CCE13DCAFC15 0xC0 0xEF MSIZE 0xD9 0x2E SWAP8 0xE5 SWAP7 PUSH5 0x736F6C6343 STOP ADDMOD SHR STOP CALLER ","sourceMap":"355:7638:25:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"ECDSAInvalidSignature\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"length\",\"type\":\"uint256\"}],\"name\":\"ECDSAInvalidSignatureLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"ECDSAInvalidSignatureS\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Elliptic Curve Digital Signature Algorithm (ECDSA) operations. These functions can be used to verify that a message was signed by the holder of the private keys of a given address.\",\"errors\":{\"ECDSAInvalidSignature()\":[{\"details\":\"The signature derives the `address(0)`.\"}],\"ECDSAInvalidSignatureLength(uint256)\":[{\"details\":\"The signature has an invalid length.\"}],\"ECDSAInvalidSignatureS(bytes32)\":[{\"details\":\"The signature has an S value that is in the upper half order.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":\"ECDSA\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":{\"keccak256\":\"0xbe22c37080f9052e0e18062a527a19f9354703ee48888c71baf0abd747a34a8b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://eb85649fce273c8c19eeba7db292f92b6653263ae39f12e427a066b998c9cec4\",\"dweb:/ipfs/QmRaTEqA15siRJoiPCuvtzK29dgXxQu94n4JBabHUSFXXQ\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol":{"MessageHashUtils":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220c9f8b153a2723e9aedf5b731c720da381f3213cfc665562986c247554040593864736f6c634300081c0033","opcodes":"PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC9 0xF8 0xB1 MSTORE8 LOG2 PUSH19 0x3E9AEDF5B731C720DA381F3213CFC665562986 0xC2 SELFBALANCE SSTORE BLOCKHASH BLOCKHASH MSIZE CODESIZE PUSH5 0x736F6C6343 STOP ADDMOD SHR STOP CALLER ","sourceMap":"535:3813:26:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;535:3813:26;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220c9f8b153a2723e9aedf5b731c720da381f3213cfc665562986c247554040593864736f6c634300081c0033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC9 0xF8 0xB1 MSTORE8 LOG2 PUSH19 0x3E9AEDF5B731C720DA381F3213CFC665562986 0xC2 SELFBALANCE SSTORE BLOCKHASH BLOCKHASH MSIZE CODESIZE PUSH5 0x736F6C6343 STOP ADDMOD SHR STOP CALLER ","sourceMap":"535:3813:26:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Signature message hash utilities for producing digests to be consumed by {ECDSA} recovery or signing. The library provides methods for generating a hash of a message that conforms to the https://eips.ethereum.org/EIPS/eip-191[ERC-191] and https://eips.ethereum.org/EIPS/eip-712[EIP 712] specifications.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol\":\"MessageHashUtils\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0x65fd7c9cac0812d510bbaac59b007da1df6f3820f939fca04fd2b7ed07e341c6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f30f7cf8b553278b1bbad1f6aaf4b227b98b1532b3c16dbca92d815d627779df\",\"dweb:/ipfs/QmTkA1v7mrd2ymdTcPYFuNjguKhQx99npcPYKAdMfgfKvB\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x831320073a13168dd04b3b7dc0d7c3c4fd1f8d699c3b3709900d1dd7e52ae931\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d37bb18e9824f73bd0cbf259d2326028031e60ed89bf4eba095c73d605f243ed\",\"dweb:/ipfs/QmWxNLK1eZBwA1GdxzwqGkarHhbciAvM8bg6qcRafeS47J\"]},\"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol\":{\"keccak256\":\"0xd7999d7b3c3a121215a15e205b381e06cfff55c47f67220d1605cd96cd0848d8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e259964860d8625d6c33d841c870af390834c037c4459c8b14231f1bd440f682\",\"dweb:/ipfs/QmWyFHT1oipmXVN4NLxrdBL9nayTzFfPrkAQbRozeWdhKQ\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xe09e820269ce218384211e4bf344056f0aab77a27b953012a3fb647d7631b7c2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0a8e7a7218203b059b4b4a423a93d6066eb9cec0a8affde80bb4a6c44d6a14a0\",\"dweb:/ipfs/QmSbmEzwGBFD3TntztEE5ZFLBqP1SZYiQhA1dLoDgzrcz4\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0xf1e73884b1e40057009853b1ee55ec66413cfa5eaa9074e5dd85bd070ea8b91c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1d29fd43e41bd73ac0fb65ac77c309c88651a42f8e49989cf1558f64f731697b\",\"dweb:/ipfs/Qmd61ZCYWHj9PJ3uSXaJekif8tkKgmfU6PLunszwhY2QX3\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0x7c35afe4f4b7e64ea6efa5216f51790d8ce80cd764a00790203a59ebf20202ec\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0b264b01df570c48603e16066aea73d3200c78523f9d94dd587a61eafa33705c\",\"dweb:/ipfs/QmayVg47dBKddrgrgsbr4Wu8hQBWZk5oMpiUtXKz1uEo1v\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"@openzeppelin/contracts/utils/introspection/IERC165.sol":{"IERC165":{"abi":[{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"supportsInterface(bytes4)":"01ffc9a7"}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[ERC]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":\"IERC165\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0xdbf01f069eb0b0a7a6ace73b250fdeb7e338d719bb40b5dd1fe7069004a36607\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1fc4a1dfe79b2adc6e22af84838c217946853d28a4291fcd8bbcc6fb226a0470\",\"dweb:/ipfs/QmaJbxCcdE76P1a8rjxkBqTXAfF11XebfwURamUB92G4WN\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"@openzeppelin/contracts/utils/math/Math.sol":{"Math":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212205253ac451b30fd8e8bc4ea5a9f33b7b9862bb952882642ce25e83078f857eb8a64736f6c634300081c0033","opcodes":"PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 MSTORE MSTORE8 0xAC GASLIMIT SHL ADDRESS REVERT DUP15 DUP12 0xC4 0xEA GAS SWAP16 CALLER 0xB7 0xB9 DUP7 0x2B 0xB9 MSTORE DUP9 0x26 TIMESTAMP 0xCE 0x25 0xE8 ADDRESS PUSH25 0xF857EB8A64736F6C634300081C003300000000000000000000 ","sourceMap":"292:32600:28:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;292:32600:28;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212205253ac451b30fd8e8bc4ea5a9f33b7b9862bb952882642ce25e83078f857eb8a64736f6c634300081c0033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 MSTORE MSTORE8 0xAC GASLIMIT SHL ADDRESS REVERT DUP15 DUP12 0xC4 0xEA GAS SWAP16 CALLER 0xB7 0xB9 DUP7 0x2B 0xB9 MSTORE DUP9 0x26 TIMESTAMP 0xCE 0x25 0xE8 ADDRESS PUSH25 0xF857EB8A64736F6C634300081C003300000000000000000000 ","sourceMap":"292:32600:28:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Standard math utilities missing in the Solidity language.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/Math.sol\":\"Math\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0x65fd7c9cac0812d510bbaac59b007da1df6f3820f939fca04fd2b7ed07e341c6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f30f7cf8b553278b1bbad1f6aaf4b227b98b1532b3c16dbca92d815d627779df\",\"dweb:/ipfs/QmTkA1v7mrd2ymdTcPYFuNjguKhQx99npcPYKAdMfgfKvB\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xe09e820269ce218384211e4bf344056f0aab77a27b953012a3fb647d7631b7c2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0a8e7a7218203b059b4b4a423a93d6066eb9cec0a8affde80bb4a6c44d6a14a0\",\"dweb:/ipfs/QmSbmEzwGBFD3TntztEE5ZFLBqP1SZYiQhA1dLoDgzrcz4\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0xf1e73884b1e40057009853b1ee55ec66413cfa5eaa9074e5dd85bd070ea8b91c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1d29fd43e41bd73ac0fb65ac77c309c88651a42f8e49989cf1558f64f731697b\",\"dweb:/ipfs/Qmd61ZCYWHj9PJ3uSXaJekif8tkKgmfU6PLunszwhY2QX3\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"@openzeppelin/contracts/utils/math/SafeCast.sol":{"SafeCast":{"abi":[{"inputs":[{"internalType":"uint8","name":"bits","type":"uint8"},{"internalType":"int256","name":"value","type":"int256"}],"name":"SafeCastOverflowedIntDowncast","type":"error"},{"inputs":[{"internalType":"int256","name":"value","type":"int256"}],"name":"SafeCastOverflowedIntToUint","type":"error"},{"inputs":[{"internalType":"uint8","name":"bits","type":"uint8"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"SafeCastOverflowedUintDowncast","type":"error"},{"inputs":[{"internalType":"uint256","name":"value","type":"uint256"}],"name":"SafeCastOverflowedUintToInt","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220163b60994003ec12787eeca41504899bf8a394f3d9a1d106eeeca7e73718e1e064736f6c634300081c0033","opcodes":"PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 AND EXTCODESIZE PUSH1 0x99 BLOCKHASH SUB 0xEC SLT PUSH25 0x7EECA41504899BF8A394F3D9A1D106EEECA7E73718E1E06473 PUSH16 0x6C634300081C00330000000000000000 ","sourceMap":"787:35316:29:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;787:35316:29;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220163b60994003ec12787eeca41504899bf8a394f3d9a1d106eeeca7e73718e1e064736f6c634300081c0033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 AND EXTCODESIZE PUSH1 0x99 BLOCKHASH SUB 0xEC SLT PUSH25 0x7EECA41504899BF8A394F3D9A1D106EEECA7E73718E1E06473 PUSH16 0x6C634300081C00330000000000000000 ","sourceMap":"787:35316:29:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"bits\",\"type\":\"uint8\"},{\"internalType\":\"int256\",\"name\":\"value\",\"type\":\"int256\"}],\"name\":\"SafeCastOverflowedIntDowncast\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"value\",\"type\":\"int256\"}],\"name\":\"SafeCastOverflowedIntToUint\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"bits\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"SafeCastOverflowedUintDowncast\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"SafeCastOverflowedUintToInt\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Wrappers over Solidity's uintXX/intXX/bool casting operators with added overflow checks. Downcasting from uint256/int256 in Solidity does not revert on overflow. This can easily result in undesired exploitation or bugs, since developers usually assume that overflows raise errors. `SafeCast` restores this intuition by reverting the transaction when such an operation overflows. Using this library instead of the unchecked operations eliminates an entire class of bugs, so it's recommended to use it always.\",\"errors\":{\"SafeCastOverflowedIntDowncast(uint8,int256)\":[{\"details\":\"Value doesn't fit in an int of `bits` size.\"}],\"SafeCastOverflowedIntToUint(int256)\":[{\"details\":\"An int value doesn't fit in an uint of `bits` size.\"}],\"SafeCastOverflowedUintDowncast(uint8,uint256)\":[{\"details\":\"Value doesn't fit in an uint of `bits` size.\"}],\"SafeCastOverflowedUintToInt(uint256)\":[{\"details\":\"An uint value doesn't fit in an int of `bits` size.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/SafeCast.sol\":\"SafeCast\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0xf1e73884b1e40057009853b1ee55ec66413cfa5eaa9074e5dd85bd070ea8b91c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1d29fd43e41bd73ac0fb65ac77c309c88651a42f8e49989cf1558f64f731697b\",\"dweb:/ipfs/Qmd61ZCYWHj9PJ3uSXaJekif8tkKgmfU6PLunszwhY2QX3\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"@openzeppelin/contracts/utils/math/SignedMath.sol":{"SignedMath":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220ad69c87aa2827af186aee2687bb408c6ad025644acd9deca142ba2e694fc98c064736f6c634300081c0033","opcodes":"PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xAD PUSH10 0xC87AA2827AF186AEE268 PUSH28 0xB408C6AD025644ACD9DECA142BA2E694FC98C064736F6C634300081C STOP CALLER ","sourceMap":"268:2411:30:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;268:2411:30;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220ad69c87aa2827af186aee2687bb408c6ad025644acd9deca142ba2e694fc98c064736f6c634300081c0033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xAD PUSH10 0xC87AA2827AF186AEE268 PUSH28 0xB408C6AD025644ACD9DECA142BA2E694FC98C064736F6C634300081C STOP CALLER ","sourceMap":"268:2411:30:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Standard signed math utilities missing in the Solidity language.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/SignedMath.sol\":\"SignedMath\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0xf1e73884b1e40057009853b1ee55ec66413cfa5eaa9074e5dd85bd070ea8b91c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1d29fd43e41bd73ac0fb65ac77c309c88651a42f8e49989cf1558f64f731697b\",\"dweb:/ipfs/Qmd61ZCYWHj9PJ3uSXaJekif8tkKgmfU6PLunszwhY2QX3\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0x7c35afe4f4b7e64ea6efa5216f51790d8ce80cd764a00790203a59ebf20202ec\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0b264b01df570c48603e16066aea73d3200c78523f9d94dd587a61eafa33705c\",\"dweb:/ipfs/QmayVg47dBKddrgrgsbr4Wu8hQBWZk5oMpiUtXKz1uEo1v\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"contracts/PADTokenV2.sol":{"PADTokenV2":{"abi":[{"inputs":[],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[],"name":"AccessControlBadConfirmation","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"bytes32","name":"neededRole","type":"bytes32"}],"name":"AccessControlUnauthorizedAccount","type":"error"},{"inputs":[{"internalType":"address","name":"target","type":"address"}],"name":"AddressEmptyCode","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"cooldown","type":"uint256"}],"name":"CooldownNotExpired","type":"error"},{"inputs":[],"name":"ECDSAInvalidSignature","type":"error"},{"inputs":[{"internalType":"uint256","name":"length","type":"uint256"}],"name":"ECDSAInvalidSignatureLength","type":"error"},{"inputs":[{"internalType":"bytes32","name":"s","type":"bytes32"}],"name":"ECDSAInvalidSignatureS","type":"error"},{"inputs":[{"internalType":"address","name":"implementation","type":"address"}],"name":"ERC1967InvalidImplementation","type":"error"},{"inputs":[],"name":"ERC1967NonPayable","type":"error"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"allowance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientAllowance","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientBalance","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC20InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC20InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC20InvalidSender","type":"error"},{"inputs":[{"internalType":"address","name":"spender","type":"address"}],"name":"ERC20InvalidSpender","type":"error"},{"inputs":[{"internalType":"uint256","name":"deadline","type":"uint256"}],"name":"ERC2612ExpiredSignature","type":"error"},{"inputs":[{"internalType":"address","name":"signer","type":"address"},{"internalType":"address","name":"owner","type":"address"}],"name":"ERC2612InvalidSigner","type":"error"},{"inputs":[],"name":"EnforcedPause","type":"error"},{"inputs":[],"name":"ExpectedPause","type":"error"},{"inputs":[],"name":"FailedCall","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"currentNonce","type":"uint256"}],"name":"InvalidAccountNonce","type":"error"},{"inputs":[],"name":"InvalidInitialization","type":"error"},{"inputs":[],"name":"NotInitializing","type":"error"},{"inputs":[],"name":"UUPSUnauthorizedCallContext","type":"error"},{"inputs":[{"internalType":"bytes32","name":"slot","type":"bytes32"}],"name":"UUPSUnsupportedProxiableUUID","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"oldPeriod","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"newPeriod","type":"uint256"}],"name":"CooldownPeriodUpdated","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":false,"internalType":"uint256","name":"cooldown","type":"uint256"}],"name":"CooldownSet","type":"event"},{"anonymous":false,"inputs":[],"name":"EIP712DomainChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"oldSafe","type":"address"},{"indexed":true,"internalType":"address","name":"newSafe","type":"address"}],"name":"GnosisSafeUpdated","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint64","name":"version","type":"uint64"}],"name":"Initialized","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"account","type":"address"}],"name":"Paused","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"previousAdminRole","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"newAdminRole","type":"bytes32"}],"name":"RoleAdminChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"sender","type":"address"}],"name":"RoleGranted","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"sender","type":"address"}],"name":"RoleRevoked","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"account","type":"address"}],"name":"Unpaused","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"implementation","type":"address"}],"name":"Upgraded","type":"event"},{"inputs":[],"name":"DEFAULT_ADMIN_ROLE","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"DOMAIN_SEPARATOR","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"MINTER_ROLE","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"PAUSER_ROLE","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"UPGRADE_INTERFACE_VERSION","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address[]","name":"recipients","type":"address[]"},{"internalType":"uint256[]","name":"amounts","type":"uint256[]"}],"name":"batchTransfer","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"cooldownPeriod","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"cooldowns","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"eip712Domain","outputs":[{"internalType":"bytes1","name":"fields","type":"bytes1"},{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"version","type":"string"},{"internalType":"uint256","name":"chainId","type":"uint256"},{"internalType":"address","name":"verifyingContract","type":"address"},{"internalType":"bytes32","name":"salt","type":"bytes32"},{"internalType":"uint256[]","name":"extensions","type":"uint256[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"}],"name":"getRoleAdmin","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"gnosisSafe","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"grantRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"hasRole","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"initialSupply","type":"uint256"}],"name":"initialize","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"nonces","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"pause","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"paused","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"uint256","name":"deadline","type":"uint256"},{"internalType":"uint8","name":"v","type":"uint8"},{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"s","type":"bytes32"}],"name":"permit","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"proxiableUUID","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"callerConfirmation","type":"address"}],"name":"renounceRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"revokeRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"cooldown","type":"uint256"}],"name":"setCooldown","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_cooldownPeriod","type":"uint256"}],"name":"setCooldownPeriod","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_gnosisSafe","type":"address"}],"name":"setGnosisSafe","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"unpause","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newImplementation","type":"address"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"upgradeToAndCall","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[],"name":"version","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"pure","type":"function"}],"evm":{"bytecode":{"functionDebugData":{"@_8928":{"entryPoint":null,"id":8928,"parameterSlots":0,"returnSlots":0},"@_disableInitializers_586":{"entryPoint":34,"id":586,"parameterSlots":0,"returnSlots":0},"@_getInitializableStorage_631":{"entryPoint":null,"id":631,"parameterSlots":0,"returnSlots":1},"@_initializableStorageSlot_617":{"entryPoint":null,"id":617,"parameterSlots":0,"returnSlots":1},"abi_encode_tuple_t_uint64__to_t_uint64__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1}},"generatedSources":[{"ast":{"nativeSrc":"0:216:33","nodeType":"YulBlock","src":"0:216:33","statements":[{"nativeSrc":"6:3:33","nodeType":"YulBlock","src":"6:3:33","statements":[]},{"body":{"nativeSrc":"113:101:33","nodeType":"YulBlock","src":"113:101:33","statements":[{"nativeSrc":"123:26:33","nodeType":"YulAssignment","src":"123:26:33","value":{"arguments":[{"name":"headStart","nativeSrc":"135:9:33","nodeType":"YulIdentifier","src":"135:9:33"},{"kind":"number","nativeSrc":"146:2:33","nodeType":"YulLiteral","src":"146:2:33","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"131:3:33","nodeType":"YulIdentifier","src":"131:3:33"},"nativeSrc":"131:18:33","nodeType":"YulFunctionCall","src":"131:18:33"},"variableNames":[{"name":"tail","nativeSrc":"123:4:33","nodeType":"YulIdentifier","src":"123:4:33"}]},{"expression":{"arguments":[{"name":"headStart","nativeSrc":"165:9:33","nodeType":"YulIdentifier","src":"165:9:33"},{"arguments":[{"name":"value0","nativeSrc":"180:6:33","nodeType":"YulIdentifier","src":"180:6:33"},{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"196:2:33","nodeType":"YulLiteral","src":"196:2:33","type":"","value":"64"},{"kind":"number","nativeSrc":"200:1:33","nodeType":"YulLiteral","src":"200:1:33","type":"","value":"1"}],"functionName":{"name":"shl","nativeSrc":"192:3:33","nodeType":"YulIdentifier","src":"192:3:33"},"nativeSrc":"192:10:33","nodeType":"YulFunctionCall","src":"192:10:33"},{"kind":"number","nativeSrc":"204:1:33","nodeType":"YulLiteral","src":"204:1:33","type":"","value":"1"}],"functionName":{"name":"sub","nativeSrc":"188:3:33","nodeType":"YulIdentifier","src":"188:3:33"},"nativeSrc":"188:18:33","nodeType":"YulFunctionCall","src":"188:18:33"}],"functionName":{"name":"and","nativeSrc":"176:3:33","nodeType":"YulIdentifier","src":"176:3:33"},"nativeSrc":"176:31:33","nodeType":"YulFunctionCall","src":"176:31:33"}],"functionName":{"name":"mstore","nativeSrc":"158:6:33","nodeType":"YulIdentifier","src":"158:6:33"},"nativeSrc":"158:50:33","nodeType":"YulFunctionCall","src":"158:50:33"},"nativeSrc":"158:50:33","nodeType":"YulExpressionStatement","src":"158:50:33"}]},"name":"abi_encode_tuple_t_uint64__to_t_uint64__fromStack_reversed","nativeSrc":"14:200:33","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"82:9:33","nodeType":"YulTypedName","src":"82:9:33","type":""},{"name":"value0","nativeSrc":"93:6:33","nodeType":"YulTypedName","src":"93:6:33","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"104:4:33","nodeType":"YulTypedName","src":"104:4:33","type":""}],"src":"14:200:33"}]},"contents":"{\n    { }\n    function abi_encode_tuple_t_uint64__to_t_uint64__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(64, 1), 1)))\n    }\n}","id":33,"language":"Yul","name":"#utility.yul"}],"linkReferences":{},"object":"60a06040523060805234801561001457600080fd5b5061001d610022565b6100d4565b7ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00805468010000000000000000900460ff16156100725760405163f92ee8a960e01b815260040160405180910390fd5b80546001600160401b03908116146100d15780546001600160401b0319166001600160401b0390811782556040519081527fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d29060200160405180910390a15b50565b60805161258f6100fd600039600081816112650152818161128e01526113d4015261258f6000f3fe60806040526004361061021a5760003560e01c80637ecebe0011610123578063a84173ae116100ab578063d53913931161006f578063d53913931461064e578063d547741f14610682578063dd62ed3e146106a2578063e63ab1e9146106c2578063fe4b84df146106e457600080fd5b8063a84173ae14610585578063a9059cbb146105bd578063ad3cb1cc146105dd578063c3085a3e1461060e578063d505accf1461062e57600080fd5b806388d695b2116100f257806388d695b2146104fb57806391d148541461051b57806395d89b411461053b5780639781a37e14610550578063a217fddf1461057057600080fd5b80637ecebe001461047e57806380ea3de11461049e5780638456cb59146104be57806384b0196e146104d357600080fd5b8063313ce567116101a65780634f1ef286116101755780634f1ef286146103e357806352d1902d146103f657806354fd4d501461040b5780635c975abb1461043957806370a082311461045e57600080fd5b8063313ce5671461037d5780633644e5151461039957806336568abe146103ae5780633f4ba83a146103ce57600080fd5b8063095ea7b3116101ed578063095ea7b3146102c757806318160ddd146102e757806323b872dd1461031b578063248a9ca31461033b5780632f2ff15d1461035b57600080fd5b806301320fe21461021f57806301ffc9a71461025f57806304646a491461028f57806306fdde03146102a5575b600080fd5b34801561022b57600080fd5b5061024c61023a366004611eb1565b60026020526000908152604090205481565b6040519081526020015b60405180910390f35b34801561026b57600080fd5b5061027f61027a366004611ecc565b610704565b6040519015158152602001610256565b34801561029b57600080fd5b5061024c60015481565b3480156102b157600080fd5b506102ba61073b565b6040516102569190611f46565b3480156102d357600080fd5b5061027f6102e2366004611f59565b6107e4565b3480156102f357600080fd5b507f52c63247e1f47db19d5ce0460030c497f067ca4cebf71ba98eeadabe20bace025461024c565b34801561032757600080fd5b5061027f610336366004611f83565b6107fc565b34801561034757600080fd5b5061024c610356366004611fc0565b610822565b34801561036757600080fd5b5061037b610376366004611fd9565b610844565b005b34801561038957600080fd5b5060405160128152602001610256565b3480156103a557600080fd5b5061024c610866565b3480156103ba57600080fd5b5061037b6103c9366004611fd9565b610875565b3480156103da57600080fd5b5061037b6108ad565b61037b6103f136600461201b565b6108d0565b34801561040257600080fd5b5061024c6108ef565b34801561041757600080fd5b506040805180820190915260058152640322e302e360dc1b60208201526102ba565b34801561044557600080fd5b5060008051602061253a8339815191525460ff1661027f565b34801561046a57600080fd5b5061024c610479366004611eb1565b61090c565b34801561048a57600080fd5b5061024c610499366004611eb1565b61093f565b3480156104aa57600080fd5b5061037b6104b9366004611fc0565b61094a565b3480156104ca57600080fd5b5061037b61099b565b3480156104df57600080fd5b506104e86109bb565b60405161025697969594939291906120e5565b34801561050757600080fd5b5061037b6105163660046121c9565b610a6c565b34801561052757600080fd5b5061027f610536366004611fd9565b610b17565b34801561054757600080fd5b506102ba610b4f565b34801561055c57600080fd5b5061037b61056b366004611f59565b610b8e565b34801561057c57600080fd5b5061024c600081565b34801561059157600080fd5b506000546105a5906001600160a01b031681565b6040516001600160a01b039091168152602001610256565b3480156105c957600080fd5b5061027f6105d8366004611f59565b610bf3565b3480156105e957600080fd5b506102ba604051806040016040528060058152602001640352e302e360dc1b81525081565b34801561061a57600080fd5b5061037b610629366004611eb1565b610c01565b34801561063a57600080fd5b5061037b61064936600461223a565b610c5d565b34801561065a57600080fd5b5061024c7f9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a681565b34801561068e57600080fd5b5061037b61069d366004611fd9565b610db6565b3480156106ae57600080fd5b5061024c6106bd3660046122ad565b610dd2565b3480156106ce57600080fd5b5061024c6000805160206124fa83398151915281565b3480156106f057600080fd5b5061037b6106ff366004611fc0565b610e1c565b60006001600160e01b03198216637965db0b60e01b148061073557506301ffc9a760e01b6001600160e01b03198316145b92915050565b6060600060008051602061249a8339815191525b9050806003018054610760906122d7565b80601f016020809104026020016040519081016040528092919081815260200182805461078c906122d7565b80156107d95780601f106107ae576101008083540402835291602001916107d9565b820191906000526020600020905b8154815290600101906020018083116107bc57829003601f168201915b505050505091505090565b6000336107f2818585610ff8565b5060019392505050565b60003361080a858285611005565b610815858585611066565b60019150505b9392505050565b600090815260008051602061251a833981519152602052604090206001015490565b61084d82610822565b610856816110c5565b61086083836110cf565b50505050565b6000610870611174565b905090565b6001600160a01b038116331461089e5760405163334bd91960e11b815260040160405180910390fd5b6108a8828261117e565b505050565b6000805160206124fa8339815191526108c5816110c5565b6108cd6111fa565b50565b6108d861125a565b6108e182611301565b6108eb828261130c565b5050565b60006108f96113c9565b506000805160206124da83398151915290565b60008060008051602061249a8339815191525b6001600160a01b0390931660009081526020939093525050604090205490565b600061073582611412565b6000610955816110c5565b600180549083905560408051828152602081018590527f98eaabfe135a9c40c420208962bf81e7926b4d6df3e23502164c0554b7b35224910160405180910390a1505050565b6000805160206124fa8339815191526109b3816110c5565b6108cd61143b565b600060608082808083816000805160206124ba83398151915280549091501580156109e857506001810154155b610a315760405162461bcd60e51b81526020600482015260156024820152741152540dcc4c8e88155b9a5b9a5d1a585b1a5e9959605a1b60448201526064015b60405180910390fd5b610a39611484565b610a416114c3565b60408051600080825260208201909252600f60f81b9c939b5091995046985030975095509350915050565b828114610ab45760405162461bcd60e51b8152602060048201526016602482015275082e4e4c2f2e640d8cadccee8d040dad2e6dac2e8c6d60531b6044820152606401610a28565b60005b83811015610b1057610b0833868684818110610ad557610ad5612311565b9050602002016020810190610aea9190611eb1565b858585818110610afc57610afc612311565b90506020020135611066565b600101610ab7565b5050505050565b600091825260008051602061251a833981519152602090815260408084206001600160a01b0393909316845291905290205460ff1690565b7f52c63247e1f47db19d5ce0460030c497f067ca4cebf71ba98eeadabe20bace04805460609160008051602061249a83398151915291610760906122d7565b6000610b99816110c5565b6001600160a01b03831660008181526002602052604090819020849055517fa162f0703cbc0c48ea2c9e9bed5743aabc058e7532e594490e3a35bfb0f75ab890610be69085815260200190565b60405180910390a2505050565b6000336107f2818585611066565b6000610c0c816110c5565b600080546001600160a01b038481166001600160a01b0319831681178455604051919092169283917fdaaf87d9985c65a1bfbd019043294923ae1b048ba8b4616e3acb32741d268da19190a3505050565b83421115610c815760405163313c898160e11b815260048101859052602401610a28565b60007f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9888888610ced8c6001600160a01b031660009081527f5ab42ced628888259c08ac98db1eb0cf702fc1501344311d8b100cd1bfe4bb006020526040902080546001810190915590565b6040805160208101969096526001600160a01b0394851690860152929091166060840152608083015260a082015260c0810186905260e0016040516020818303038152906040528051906020012090506000610d48826114db565b90506000610d5882878787611508565b9050896001600160a01b0316816001600160a01b031614610d9f576040516325c0072360e11b81526001600160a01b0380831660048301528b166024820152604401610a28565b610daa8a8a8a610ff8565b50505050505050505050565b610dbf82610822565b610dc8816110c5565b610860838361117e565b6001600160a01b0391821660009081527f52c63247e1f47db19d5ce0460030c497f067ca4cebf71ba98eeadabe20bace016020908152604080832093909416825291909152205490565b6000610e26611536565b805490915060ff600160401b820416159067ffffffffffffffff16600081158015610e4e5750825b905060008267ffffffffffffffff166001148015610e6b5750303b155b905081158015610e79575080155b15610e975760405163f92ee8a960e01b815260040160405180910390fd5b845467ffffffffffffffff191660011785558315610ec157845460ff60401b1916600160401b1785555b610f07604051806040016040528060098152602001682820a2102a37b5b2b760b91b8152506040518060400160405280600381526020016214105160ea1b81525061155f565b610f31604051806040016040528060098152602001682820a2102a37b5b2b760b91b815250611571565b610f3961159c565b610f4161159c565b610f4961159c565b610f546000336110cf565b50610f6d6000805160206124fa833981519152336110cf565b50610f987f9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a6336110cf565b50610fa333876115a4565b620151806001558315610ff057845460ff60401b19168555604051600181527fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d29060200160405180910390a15b505050505050565b6108a883838360016115da565b60006110118484610dd2565b9050600019811015610860578181101561105757604051637dc7a0d960e11b81526001600160a01b03841660048201526024810182905260448101839052606401610a28565b610860848484840360006115da565b6001600160a01b03831661109057604051634b637e8f60e11b815260006004820152602401610a28565b6001600160a01b0382166110ba5760405163ec442f0560e01b815260006004820152602401610a28565b6108a88383836116c1565b6108cd813361174d565b600060008051602061251a8339815191526110ea8484610b17565b61116a576000848152602082815260408083206001600160a01b03871684529091529020805460ff191660011790556111203390565b6001600160a01b0316836001600160a01b0316857f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a46001915050610735565b6000915050610735565b6000610870611786565b600060008051602061251a8339815191526111998484610b17565b1561116a576000848152602082815260408083206001600160a01b0387168085529252808320805460ff1916905551339287917ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b9190a46001915050610735565b6112026117fa565b60008051602061253a833981519152805460ff191681557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa335b6040516001600160a01b03909116815260200160405180910390a150565b306001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614806112e157507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166112d56000805160206124da833981519152546001600160a01b031690565b6001600160a01b031614155b156112ff5760405163703e46dd60e11b815260040160405180910390fd5b565b60006108eb816110c5565b816001600160a01b03166352d1902d6040518163ffffffff1660e01b8152600401602060405180830381865afa925050508015611366575060408051601f3d908101601f1916820190925261136391810190612327565b60015b61138e57604051634c9c8ce360e01b81526001600160a01b0383166004820152602401610a28565b6000805160206124da83398151915281146113bf57604051632a87526960e21b815260048101829052602401610a28565b6108a8838361182a565b306001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146112ff5760405163703e46dd60e11b815260040160405180910390fd5b6000807f5ab42ced628888259c08ac98db1eb0cf702fc1501344311d8b100cd1bfe4bb0061091f565b611443611880565b60008051602061253a833981519152805460ff191660011781557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a2583361123c565b7fa16a46d94261c7517cc8ff89f61c0ce93598e3c849801011dee649a6a557d10280546060916000805160206124ba83398151915291610760906122d7565b606060006000805160206124ba83398151915261074f565b60006107356114e8611174565b8360405161190160f01b8152600281019290925260228201526042902090565b60008060008061151a888888886118b1565b92509250925061152a8282611980565b50909695505050505050565b6000807ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00610735565b611567611a39565b6108eb8282611a5e565b611579611a39565b6108cd81604051806040016040528060018152602001603160f81b815250611aaf565b6112ff611a39565b6001600160a01b0382166115ce5760405163ec442f0560e01b815260006004820152602401610a28565b6108eb600083836116c1565b60008051602061249a8339815191526001600160a01b0385166116135760405163e602df0560e01b815260006004820152602401610a28565b6001600160a01b03841661163d57604051634a1406b160e11b815260006004820152602401610a28565b6001600160a01b03808616600090815260018301602090815260408083209388168352929052208390558115610b1057836001600160a01b0316856001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925856040516116b291815260200190565b60405180910390a35050505050565b6001600160a01b038316158015906116e157506001600160a01b03821615155b15611742576001600160a01b038316600090815260026020526040902054421015611742576001600160a01b03831660008181526002602052604090819020549051630dac64f960e01b815260048101929092526024820152604401610a28565b6108a8838383611b10565b6117578282610b17565b6108eb5760405163e2517d3f60e01b81526001600160a01b038216600482015260248101839052604401610a28565b60007f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f6117b1611c4e565b6117b9611cb8565b60408051602081019490945283019190915260608201524660808201523060a082015260c00160405160208183030381529060405280519060200120905090565b60008051602061253a8339815191525460ff166112ff57604051638dfc202b60e01b815260040160405180910390fd5b61183382611cfc565b6040516001600160a01b038316907fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b90600090a2805115611878576108a88282611d61565b6108eb611dd7565b60008051602061253a8339815191525460ff16156112ff5760405163d93c066560e01b815260040160405180910390fd5b600080807f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a08411156118ec5750600091506003905082611976565b604080516000808252602082018084528a905260ff891692820192909252606081018790526080810186905260019060a0016020604051602081039080840390855afa158015611940573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b03811661196c57506000925060019150829050611976565b9250600091508190505b9450945094915050565b600082600381111561199457611994612340565b0361199d575050565b60018260038111156119b1576119b1612340565b036119cf5760405163f645eedf60e01b815260040160405180910390fd5b60028260038111156119e3576119e3612340565b03611a045760405163fce698f760e01b815260048101829052602401610a28565b6003826003811115611a1857611a18612340565b036108eb576040516335e2f38360e21b815260048101829052602401610a28565b611a41611df6565b6112ff57604051631afcd79f60e31b815260040160405180910390fd5b611a66611a39565b60008051602061249a8339815191527f52c63247e1f47db19d5ce0460030c497f067ca4cebf71ba98eeadabe20bace03611aa0848261239d565b5060048101610860838261239d565b611ab7611a39565b6000805160206124ba8339815191527fa16a46d94261c7517cc8ff89f61c0ce93598e3c849801011dee649a6a557d102611af1848261239d565b5060038101611b00838261239d565b5060008082556001909101555050565b60008051602061249a8339815191526001600160a01b038416611b4c5781816002016000828254611b41919061245c565b90915550611bbe9050565b6001600160a01b03841660009081526020829052604090205482811015611b9f5760405163391434e360e21b81526001600160a01b03861660048201526024810182905260448101849052606401610a28565b6001600160a01b03851660009081526020839052604090209083900390555b6001600160a01b038316611bdc576002810180548390039055611bfb565b6001600160a01b03831660009081526020829052604090208054830190555b826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef84604051611c4091815260200190565b60405180910390a350505050565b60006000805160206124ba83398151915281611c68611484565b805190915015611c8057805160209091012092915050565b81548015611c8f579392505050565b7fc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470935050505090565b60006000805160206124ba83398151915281611cd26114c3565b805190915015611cea57805160209091012092915050565b60018201548015611c8f579392505050565b806001600160a01b03163b600003611d3257604051634c9c8ce360e01b81526001600160a01b0382166004820152602401610a28565b6000805160206124da83398151915280546001600160a01b0319166001600160a01b0392909216919091179055565b6060600080846001600160a01b031684604051611d7e919061247d565b600060405180830381855af49150503d8060008114611db9576040519150601f19603f3d011682016040523d82523d6000602084013e611dbe565b606091505b5091509150611dce858383611e10565b95945050505050565b34156112ff5760405163b398979f60e01b815260040160405180910390fd5b6000611e00611536565b54600160401b900460ff16919050565b606082611e2557611e2082611e6c565b61081b565b8151158015611e3c57506001600160a01b0384163b155b15611e6557604051639996b31560e01b81526001600160a01b0385166004820152602401610a28565b508061081b565b805115611e7c5780518082602001fd5b60405163d6bda27560e01b815260040160405180910390fd5b80356001600160a01b0381168114611eac57600080fd5b919050565b600060208284031215611ec357600080fd5b61081b82611e95565b600060208284031215611ede57600080fd5b81356001600160e01b03198116811461081b57600080fd5b60005b83811015611f11578181015183820152602001611ef9565b50506000910152565b60008151808452611f32816020860160208601611ef6565b601f01601f19169290920160200192915050565b60208152600061081b6020830184611f1a565b60008060408385031215611f6c57600080fd5b611f7583611e95565b946020939093013593505050565b600080600060608486031215611f9857600080fd5b611fa184611e95565b9250611faf60208501611e95565b929592945050506040919091013590565b600060208284031215611fd257600080fd5b5035919050565b60008060408385031215611fec57600080fd5b82359150611ffc60208401611e95565b90509250929050565b634e487b7160e01b600052604160045260246000fd5b6000806040838503121561202e57600080fd5b61203783611e95565b9150602083013567ffffffffffffffff81111561205357600080fd5b8301601f8101851361206457600080fd5b803567ffffffffffffffff81111561207e5761207e612005565b604051601f8201601f19908116603f0116810167ffffffffffffffff811182821017156120ad576120ad612005565b6040528181528282016020018710156120c557600080fd5b816020840160208301376000602083830101528093505050509250929050565b60ff60f81b8816815260e06020820152600061210460e0830189611f1a565b82810360408401526121168189611f1a565b606084018890526001600160a01b038716608085015260a0840186905283810360c08501528451808252602080870193509091019060005b8181101561216c57835183526020938401939092019160010161214e565b50909b9a5050505050505050505050565b60008083601f84011261218f57600080fd5b50813567ffffffffffffffff8111156121a757600080fd5b6020830191508360208260051b85010111156121c257600080fd5b9250929050565b600080600080604085870312156121df57600080fd5b843567ffffffffffffffff8111156121f657600080fd5b6122028782880161217d565b909550935050602085013567ffffffffffffffff81111561222257600080fd5b61222e8782880161217d565b95989497509550505050565b600080600080600080600060e0888a03121561225557600080fd5b61225e88611e95565b965061226c60208901611e95565b95506040880135945060608801359350608088013560ff8116811461229057600080fd5b9699959850939692959460a0840135945060c09093013592915050565b600080604083850312156122c057600080fd5b6122c983611e95565b9150611ffc60208401611e95565b600181811c908216806122eb57607f821691505b60208210810361230b57634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052603260045260246000fd5b60006020828403121561233957600080fd5b5051919050565b634e487b7160e01b600052602160045260246000fd5b601f8211156108a857806000526020600020601f840160051c8101602085101561237d5750805b601f840160051c820191505b81811015610b105760008155600101612389565b815167ffffffffffffffff8111156123b7576123b7612005565b6123cb816123c584546122d7565b84612356565b6020601f8211600181146123ff57600083156123e75750848201515b600019600385901b1c1916600184901b178455610b10565b600084815260208120601f198516915b8281101561242f578785015182556020948501946001909201910161240f565b508482101561244d5786840151600019600387901b60f8161c191681555b50505050600190811b01905550565b8082018082111561073557634e487b7160e01b600052601160045260246000fd5b6000825161248f818460208701611ef6565b919091019291505056fe52c63247e1f47db19d5ce0460030c497f067ca4cebf71ba98eeadabe20bace00a16a46d94261c7517cc8ff89f61c0ce93598e3c849801011dee649a6a557d100360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a02dd7bc7dec4dceedda775e58dd541e08a116c6c53815c0bd028192f7b626800cd5ed15c6e187e77e9aee88184c21f4f2182ab5827cb3b7e07fbedcd63f03300a2646970667358221220f8b28f817583b1a5d7a44cef3f0d6fe6f776916b23b5c1e3d23d5314ee38db3364736f6c634300081c0033","opcodes":"PUSH1 0xA0 PUSH1 0x40 MSTORE ADDRESS PUSH1 0x80 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x14 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1D PUSH2 0x22 JUMP JUMPDEST PUSH2 0xD4 JUMP JUMPDEST PUSH32 0xF0C57E16840DF040F15088DC2F81FE391C3923BEC73E23A9662EFC9C229C6A00 DUP1 SLOAD PUSH9 0x10000000000000000 SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x72 JUMPI PUSH1 0x40 MLOAD PUSH4 0xF92EE8A9 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB SWAP1 DUP2 AND EQ PUSH2 0xD1 JUMPI DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB SWAP1 DUP2 OR DUP3 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH32 0xC7F505B2F371AE2175EE4913F4499E1F2633A7B5936321EED1CDAEB6115181D2 SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMPDEST POP JUMP JUMPDEST PUSH1 0x80 MLOAD PUSH2 0x258F PUSH2 0xFD PUSH1 0x0 CODECOPY PUSH1 0x0 DUP2 DUP2 PUSH2 0x1265 ADD MSTORE DUP2 DUP2 PUSH2 0x128E ADD MSTORE PUSH2 0x13D4 ADD MSTORE PUSH2 0x258F PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x21A JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x7ECEBE00 GT PUSH2 0x123 JUMPI DUP1 PUSH4 0xA84173AE GT PUSH2 0xAB JUMPI DUP1 PUSH4 0xD5391393 GT PUSH2 0x6F JUMPI DUP1 PUSH4 0xD5391393 EQ PUSH2 0x64E JUMPI DUP1 PUSH4 0xD547741F EQ PUSH2 0x682 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x6A2 JUMPI DUP1 PUSH4 0xE63AB1E9 EQ PUSH2 0x6C2 JUMPI DUP1 PUSH4 0xFE4B84DF EQ PUSH2 0x6E4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xA84173AE EQ PUSH2 0x585 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x5BD JUMPI DUP1 PUSH4 0xAD3CB1CC EQ PUSH2 0x5DD JUMPI DUP1 PUSH4 0xC3085A3E EQ PUSH2 0x60E JUMPI DUP1 PUSH4 0xD505ACCF EQ PUSH2 0x62E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x88D695B2 GT PUSH2 0xF2 JUMPI DUP1 PUSH4 0x88D695B2 EQ PUSH2 0x4FB JUMPI DUP1 PUSH4 0x91D14854 EQ PUSH2 0x51B JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x53B JUMPI DUP1 PUSH4 0x9781A37E EQ PUSH2 0x550 JUMPI DUP1 PUSH4 0xA217FDDF EQ PUSH2 0x570 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x7ECEBE00 EQ PUSH2 0x47E JUMPI DUP1 PUSH4 0x80EA3DE1 EQ PUSH2 0x49E JUMPI DUP1 PUSH4 0x8456CB59 EQ PUSH2 0x4BE JUMPI DUP1 PUSH4 0x84B0196E EQ PUSH2 0x4D3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x313CE567 GT PUSH2 0x1A6 JUMPI DUP1 PUSH4 0x4F1EF286 GT PUSH2 0x175 JUMPI DUP1 PUSH4 0x4F1EF286 EQ PUSH2 0x3E3 JUMPI DUP1 PUSH4 0x52D1902D EQ PUSH2 0x3F6 JUMPI DUP1 PUSH4 0x54FD4D50 EQ PUSH2 0x40B JUMPI DUP1 PUSH4 0x5C975ABB EQ PUSH2 0x439 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x45E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x313CE567 EQ PUSH2 0x37D JUMPI DUP1 PUSH4 0x3644E515 EQ PUSH2 0x399 JUMPI DUP1 PUSH4 0x36568ABE EQ PUSH2 0x3AE JUMPI DUP1 PUSH4 0x3F4BA83A EQ PUSH2 0x3CE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x95EA7B3 GT PUSH2 0x1ED JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x2C7 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x2E7 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x31B JUMPI DUP1 PUSH4 0x248A9CA3 EQ PUSH2 0x33B JUMPI DUP1 PUSH4 0x2F2FF15D EQ PUSH2 0x35B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x1320FE2 EQ PUSH2 0x21F JUMPI DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x25F JUMPI DUP1 PUSH4 0x4646A49 EQ PUSH2 0x28F JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x2A5 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x22B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x24C PUSH2 0x23A CALLDATASIZE PUSH1 0x4 PUSH2 0x1EB1 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x26B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x27F PUSH2 0x27A CALLDATASIZE PUSH1 0x4 PUSH2 0x1ECC JUMP JUMPDEST PUSH2 0x704 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x256 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x29B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x24C PUSH1 0x1 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2B1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2BA PUSH2 0x73B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x256 SWAP2 SWAP1 PUSH2 0x1F46 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2D3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x27F PUSH2 0x2E2 CALLDATASIZE PUSH1 0x4 PUSH2 0x1F59 JUMP JUMPDEST PUSH2 0x7E4 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2F3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH32 0x52C63247E1F47DB19D5CE0460030C497F067CA4CEBF71BA98EEADABE20BACE02 SLOAD PUSH2 0x24C JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x327 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x27F PUSH2 0x336 CALLDATASIZE PUSH1 0x4 PUSH2 0x1F83 JUMP JUMPDEST PUSH2 0x7FC JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x347 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x24C PUSH2 0x356 CALLDATASIZE PUSH1 0x4 PUSH2 0x1FC0 JUMP JUMPDEST PUSH2 0x822 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x367 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x37B PUSH2 0x376 CALLDATASIZE PUSH1 0x4 PUSH2 0x1FD9 JUMP JUMPDEST PUSH2 0x844 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x389 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x256 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3A5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x24C PUSH2 0x866 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3BA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x37B PUSH2 0x3C9 CALLDATASIZE PUSH1 0x4 PUSH2 0x1FD9 JUMP JUMPDEST PUSH2 0x875 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3DA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x37B PUSH2 0x8AD JUMP JUMPDEST PUSH2 0x37B PUSH2 0x3F1 CALLDATASIZE PUSH1 0x4 PUSH2 0x201B JUMP JUMPDEST PUSH2 0x8D0 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x402 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x24C PUSH2 0x8EF JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x417 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x5 DUP2 MSTORE PUSH5 0x322E302E3 PUSH1 0xDC SHL PUSH1 0x20 DUP3 ADD MSTORE PUSH2 0x2BA JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x445 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x253A DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SLOAD PUSH1 0xFF AND PUSH2 0x27F JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x46A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x24C PUSH2 0x479 CALLDATASIZE PUSH1 0x4 PUSH2 0x1EB1 JUMP JUMPDEST PUSH2 0x90C JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x48A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x24C PUSH2 0x499 CALLDATASIZE PUSH1 0x4 PUSH2 0x1EB1 JUMP JUMPDEST PUSH2 0x93F JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4AA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x37B PUSH2 0x4B9 CALLDATASIZE PUSH1 0x4 PUSH2 0x1FC0 JUMP JUMPDEST PUSH2 0x94A JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4CA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x37B PUSH2 0x99B JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4DF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x4E8 PUSH2 0x9BB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x256 SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x20E5 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x507 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x37B PUSH2 0x516 CALLDATASIZE PUSH1 0x4 PUSH2 0x21C9 JUMP JUMPDEST PUSH2 0xA6C JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x527 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x27F PUSH2 0x536 CALLDATASIZE PUSH1 0x4 PUSH2 0x1FD9 JUMP JUMPDEST PUSH2 0xB17 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x547 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2BA PUSH2 0xB4F JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x55C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x37B PUSH2 0x56B CALLDATASIZE PUSH1 0x4 PUSH2 0x1F59 JUMP JUMPDEST PUSH2 0xB8E JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x57C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x24C PUSH1 0x0 DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x591 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x0 SLOAD PUSH2 0x5A5 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x256 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5C9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x27F PUSH2 0x5D8 CALLDATASIZE PUSH1 0x4 PUSH2 0x1F59 JUMP JUMPDEST PUSH2 0xBF3 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5E9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2BA PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x5 DUP2 MSTORE PUSH1 0x20 ADD PUSH5 0x352E302E3 PUSH1 0xDC SHL DUP2 MSTORE POP DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x61A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x37B PUSH2 0x629 CALLDATASIZE PUSH1 0x4 PUSH2 0x1EB1 JUMP JUMPDEST PUSH2 0xC01 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x63A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x37B PUSH2 0x649 CALLDATASIZE PUSH1 0x4 PUSH2 0x223A JUMP JUMPDEST PUSH2 0xC5D JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x65A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x24C PUSH32 0x9F2DF0FED2C77648DE5860A4CC508CD0818C85B8B8A1AB4CEEEF8D981C8956A6 DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x68E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x37B PUSH2 0x69D CALLDATASIZE PUSH1 0x4 PUSH2 0x1FD9 JUMP JUMPDEST PUSH2 0xDB6 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x6AE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x24C PUSH2 0x6BD CALLDATASIZE PUSH1 0x4 PUSH2 0x22AD JUMP JUMPDEST PUSH2 0xDD2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x6CE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x24C PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x24FA DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x6F0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x37B PUSH2 0x6FF CALLDATASIZE PUSH1 0x4 PUSH2 0x1FC0 JUMP JUMPDEST PUSH2 0xE1C JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x7965DB0B PUSH1 0xE0 SHL EQ DUP1 PUSH2 0x735 JUMPI POP PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP4 AND EQ JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x249A DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE JUMPDEST SWAP1 POP DUP1 PUSH1 0x3 ADD DUP1 SLOAD PUSH2 0x760 SWAP1 PUSH2 0x22D7 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x78C SWAP1 PUSH2 0x22D7 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x7D9 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x7AE JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x7D9 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x7BC JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x7F2 DUP2 DUP6 DUP6 PUSH2 0xFF8 JUMP JUMPDEST POP PUSH1 0x1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x80A DUP6 DUP3 DUP6 PUSH2 0x1005 JUMP JUMPDEST PUSH2 0x815 DUP6 DUP6 DUP6 PUSH2 0x1066 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x251A DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x84D DUP3 PUSH2 0x822 JUMP JUMPDEST PUSH2 0x856 DUP2 PUSH2 0x10C5 JUMP JUMPDEST PUSH2 0x860 DUP4 DUP4 PUSH2 0x10CF JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x870 PUSH2 0x1174 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND CALLER EQ PUSH2 0x89E JUMPI PUSH1 0x40 MLOAD PUSH4 0x334BD919 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x8A8 DUP3 DUP3 PUSH2 0x117E JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x24FA DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH2 0x8C5 DUP2 PUSH2 0x10C5 JUMP JUMPDEST PUSH2 0x8CD PUSH2 0x11FA JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x8D8 PUSH2 0x125A JUMP JUMPDEST PUSH2 0x8E1 DUP3 PUSH2 0x1301 JUMP JUMPDEST PUSH2 0x8EB DUP3 DUP3 PUSH2 0x130C JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x8F9 PUSH2 0x13C9 JUMP JUMPDEST POP PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x24DA DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x249A DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 SWAP4 SWAP1 SWAP4 MSTORE POP POP PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x735 DUP3 PUSH2 0x1412 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x955 DUP2 PUSH2 0x10C5 JUMP JUMPDEST PUSH1 0x1 DUP1 SLOAD SWAP1 DUP4 SWAP1 SSTORE PUSH1 0x40 DUP1 MLOAD DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP6 SWAP1 MSTORE PUSH32 0x98EAABFE135A9C40C420208962BF81E7926B4D6DF3E23502164C0554B7B35224 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x24FA DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH2 0x9B3 DUP2 PUSH2 0x10C5 JUMP JUMPDEST PUSH2 0x8CD PUSH2 0x143B JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP1 DUP3 DUP1 DUP1 DUP4 DUP2 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x24BA DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP1 SLOAD SWAP1 SWAP2 POP ISZERO DUP1 ISZERO PUSH2 0x9E8 JUMPI POP PUSH1 0x1 DUP2 ADD SLOAD ISZERO JUMPDEST PUSH2 0xA31 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x1152540DCC4C8E88155B9A5B9A5D1A585B1A5E9959 PUSH1 0x5A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xA39 PUSH2 0x1484 JUMP JUMPDEST PUSH2 0xA41 PUSH2 0x14C3 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x0 DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 SWAP3 MSTORE PUSH1 0xF PUSH1 0xF8 SHL SWAP13 SWAP4 SWAP12 POP SWAP2 SWAP10 POP CHAINID SWAP9 POP ADDRESS SWAP8 POP SWAP6 POP SWAP4 POP SWAP2 POP POP JUMP JUMPDEST DUP3 DUP2 EQ PUSH2 0xAB4 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x82E4E4C2F2E640D8CADCCEE8D040DAD2E6DAC2E8C6D PUSH1 0x53 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xA28 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xB10 JUMPI PUSH2 0xB08 CALLER DUP7 DUP7 DUP5 DUP2 DUP2 LT PUSH2 0xAD5 JUMPI PUSH2 0xAD5 PUSH2 0x2311 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0xAEA SWAP2 SWAP1 PUSH2 0x1EB1 JUMP JUMPDEST DUP6 DUP6 DUP6 DUP2 DUP2 LT PUSH2 0xAFC JUMPI PUSH2 0xAFC PUSH2 0x2311 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD CALLDATALOAD PUSH2 0x1066 JUMP JUMPDEST PUSH1 0x1 ADD PUSH2 0xAB7 JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x251A DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 SWAP1 SWAP4 AND DUP5 MSTORE SWAP2 SWAP1 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH32 0x52C63247E1F47DB19D5CE0460030C497F067CA4CEBF71BA98EEADABE20BACE04 DUP1 SLOAD PUSH1 0x60 SWAP2 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x249A DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP2 PUSH2 0x760 SWAP1 PUSH2 0x22D7 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xB99 DUP2 PUSH2 0x10C5 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 DUP2 SWAP1 KECCAK256 DUP5 SWAP1 SSTORE MLOAD PUSH32 0xA162F0703CBC0C48EA2C9E9BED5743AABC058E7532E594490E3A35BFB0F75AB8 SWAP1 PUSH2 0xBE6 SWAP1 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x7F2 DUP2 DUP6 DUP6 PUSH2 0x1066 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC0C DUP2 PUSH2 0x10C5 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0xDAAF87D9985C65A1BFBD019043294923AE1B048BA8B4616E3ACB32741D268DA1 SWAP2 SWAP1 LOG3 POP POP POP JUMP JUMPDEST DUP4 TIMESTAMP GT ISZERO PUSH2 0xC81 JUMPI PUSH1 0x40 MLOAD PUSH4 0x313C8981 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP6 SWAP1 MSTORE PUSH1 0x24 ADD PUSH2 0xA28 JUMP JUMPDEST PUSH1 0x0 PUSH32 0x6E71EDAE12B1B97F4D1F60370FEF10105FA2FAAE0126114A169C64845D6126C9 DUP9 DUP9 DUP9 PUSH2 0xCED DUP13 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH32 0x5AB42CED628888259C08AC98DB1EB0CF702FC1501344311D8B100CD1BFE4BB00 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP2 ADD SWAP1 SWAP2 SSTORE SWAP1 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP2 ADD SWAP7 SWAP1 SWAP7 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP5 DUP6 AND SWAP1 DUP7 ADD MSTORE SWAP3 SWAP1 SWAP2 AND PUSH1 0x60 DUP5 ADD MSTORE PUSH1 0x80 DUP4 ADD MSTORE PUSH1 0xA0 DUP3 ADD MSTORE PUSH1 0xC0 DUP2 ADD DUP7 SWAP1 MSTORE PUSH1 0xE0 ADD PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP PUSH1 0x0 PUSH2 0xD48 DUP3 PUSH2 0x14DB JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0xD58 DUP3 DUP8 DUP8 DUP8 PUSH2 0x1508 JUMP JUMPDEST SWAP1 POP DUP10 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0xD9F JUMPI PUSH1 0x40 MLOAD PUSH4 0x25C00723 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP4 AND PUSH1 0x4 DUP4 ADD MSTORE DUP12 AND PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 ADD PUSH2 0xA28 JUMP JUMPDEST PUSH2 0xDAA DUP11 DUP11 DUP11 PUSH2 0xFF8 JUMP JUMPDEST POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0xDBF DUP3 PUSH2 0x822 JUMP JUMPDEST PUSH2 0xDC8 DUP2 PUSH2 0x10C5 JUMP JUMPDEST PUSH2 0x860 DUP4 DUP4 PUSH2 0x117E JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH32 0x52C63247E1F47DB19D5CE0460030C497F067CA4CEBF71BA98EEADABE20BACE01 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xE26 PUSH2 0x1536 JUMP JUMPDEST DUP1 SLOAD SWAP1 SWAP2 POP PUSH1 0xFF PUSH1 0x1 PUSH1 0x40 SHL DUP3 DIV AND ISZERO SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP2 ISZERO DUP1 ISZERO PUSH2 0xE4E JUMPI POP DUP3 JUMPDEST SWAP1 POP PUSH1 0x0 DUP3 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH1 0x1 EQ DUP1 ISZERO PUSH2 0xE6B JUMPI POP ADDRESS EXTCODESIZE ISZERO JUMPDEST SWAP1 POP DUP2 ISZERO DUP1 ISZERO PUSH2 0xE79 JUMPI POP DUP1 ISZERO JUMPDEST ISZERO PUSH2 0xE97 JUMPI PUSH1 0x40 MLOAD PUSH4 0xF92EE8A9 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP5 SLOAD PUSH8 0xFFFFFFFFFFFFFFFF NOT AND PUSH1 0x1 OR DUP6 SSTORE DUP4 ISZERO PUSH2 0xEC1 JUMPI DUP5 SLOAD PUSH1 0xFF PUSH1 0x40 SHL NOT AND PUSH1 0x1 PUSH1 0x40 SHL OR DUP6 SSTORE JUMPDEST PUSH2 0xF07 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x9 DUP2 MSTORE PUSH1 0x20 ADD PUSH9 0x2820A2102A37B5B2B7 PUSH1 0xB9 SHL DUP2 MSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x3 DUP2 MSTORE PUSH1 0x20 ADD PUSH3 0x141051 PUSH1 0xEA SHL DUP2 MSTORE POP PUSH2 0x155F JUMP JUMPDEST PUSH2 0xF31 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x9 DUP2 MSTORE PUSH1 0x20 ADD PUSH9 0x2820A2102A37B5B2B7 PUSH1 0xB9 SHL DUP2 MSTORE POP PUSH2 0x1571 JUMP JUMPDEST PUSH2 0xF39 PUSH2 0x159C JUMP JUMPDEST PUSH2 0xF41 PUSH2 0x159C JUMP JUMPDEST PUSH2 0xF49 PUSH2 0x159C JUMP JUMPDEST PUSH2 0xF54 PUSH1 0x0 CALLER PUSH2 0x10CF JUMP JUMPDEST POP PUSH2 0xF6D PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x24FA DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE CALLER PUSH2 0x10CF JUMP JUMPDEST POP PUSH2 0xF98 PUSH32 0x9F2DF0FED2C77648DE5860A4CC508CD0818C85B8B8A1AB4CEEEF8D981C8956A6 CALLER PUSH2 0x10CF JUMP JUMPDEST POP PUSH2 0xFA3 CALLER DUP8 PUSH2 0x15A4 JUMP JUMPDEST PUSH3 0x15180 PUSH1 0x1 SSTORE DUP4 ISZERO PUSH2 0xFF0 JUMPI DUP5 SLOAD PUSH1 0xFF PUSH1 0x40 SHL NOT AND DUP6 SSTORE PUSH1 0x40 MLOAD PUSH1 0x1 DUP2 MSTORE PUSH32 0xC7F505B2F371AE2175EE4913F4499E1F2633A7B5936321EED1CDAEB6115181D2 SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x8A8 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x15DA JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1011 DUP5 DUP5 PUSH2 0xDD2 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 NOT DUP2 LT ISZERO PUSH2 0x860 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x1057 JUMPI PUSH1 0x40 MLOAD PUSH4 0x7DC7A0D9 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x44 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x64 ADD PUSH2 0xA28 JUMP JUMPDEST PUSH2 0x860 DUP5 DUP5 DUP5 DUP5 SUB PUSH1 0x0 PUSH2 0x15DA JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x1090 JUMPI PUSH1 0x40 MLOAD PUSH4 0x4B637E8F PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0xA28 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x10BA JUMPI PUSH1 0x40 MLOAD PUSH4 0xEC442F05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0xA28 JUMP JUMPDEST PUSH2 0x8A8 DUP4 DUP4 DUP4 PUSH2 0x16C1 JUMP JUMPDEST PUSH2 0x8CD DUP2 CALLER PUSH2 0x174D JUMP JUMPDEST PUSH1 0x0 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x251A DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH2 0x10EA DUP5 DUP5 PUSH2 0xB17 JUMP JUMPDEST PUSH2 0x116A JUMPI PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 DUP3 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH2 0x1120 CALLER SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH1 0x1 SWAP2 POP POP PUSH2 0x735 JUMP JUMPDEST PUSH1 0x0 SWAP2 POP POP PUSH2 0x735 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x870 PUSH2 0x1786 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x251A DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH2 0x1199 DUP5 DUP5 PUSH2 0xB17 JUMP JUMPDEST ISZERO PUSH2 0x116A JUMPI PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 DUP3 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND DUP1 DUP6 MSTORE SWAP3 MSTORE DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE MLOAD CALLER SWAP3 DUP8 SWAP2 PUSH32 0xF6391F5C32D9C69D2A47EA670B442974B53935D1EDC7FD64EB21E047A839171B SWAP2 SWAP1 LOG4 PUSH1 0x1 SWAP2 POP POP PUSH2 0x735 JUMP JUMPDEST PUSH2 0x1202 PUSH2 0x17FA JUMP JUMPDEST PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x253A DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP1 SLOAD PUSH1 0xFF NOT AND DUP2 SSTORE PUSH32 0x5DB9EE0A495BF2E6FF9C91A7834C1BA4FDD244A5E8AA4E537BD38AEAE4B073AA CALLER JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST ADDRESS PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND EQ DUP1 PUSH2 0x12E1 JUMPI POP PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x12D5 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x24DA DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO JUMPDEST ISZERO PUSH2 0x12FF JUMPI PUSH1 0x40 MLOAD PUSH4 0x703E46DD PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH2 0x8EB DUP2 PUSH2 0x10C5 JUMP JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x52D1902D PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x1366 JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0x1363 SWAP2 DUP2 ADD SWAP1 PUSH2 0x2327 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x138E JUMPI PUSH1 0x40 MLOAD PUSH4 0x4C9C8CE3 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0xA28 JUMP JUMPDEST PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x24DA DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP2 EQ PUSH2 0x13BF JUMPI PUSH1 0x40 MLOAD PUSH4 0x2A875269 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x24 ADD PUSH2 0xA28 JUMP JUMPDEST PUSH2 0x8A8 DUP4 DUP4 PUSH2 0x182A JUMP JUMPDEST ADDRESS PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND EQ PUSH2 0x12FF JUMPI PUSH1 0x40 MLOAD PUSH4 0x703E46DD PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH32 0x5AB42CED628888259C08AC98DB1EB0CF702FC1501344311D8B100CD1BFE4BB00 PUSH2 0x91F JUMP JUMPDEST PUSH2 0x1443 PUSH2 0x1880 JUMP JUMPDEST PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x253A DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR DUP2 SSTORE PUSH32 0x62E78CEA01BEE320CD4E420270B5EA74000D11B0C9F74754EBDBFC544B05A258 CALLER PUSH2 0x123C JUMP JUMPDEST PUSH32 0xA16A46D94261C7517CC8FF89F61C0CE93598E3C849801011DEE649A6A557D102 DUP1 SLOAD PUSH1 0x60 SWAP2 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x24BA DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP2 PUSH2 0x760 SWAP1 PUSH2 0x22D7 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x24BA DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH2 0x74F JUMP JUMPDEST PUSH1 0x0 PUSH2 0x735 PUSH2 0x14E8 PUSH2 0x1174 JUMP JUMPDEST DUP4 PUSH1 0x40 MLOAD PUSH2 0x1901 PUSH1 0xF0 SHL DUP2 MSTORE PUSH1 0x2 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x22 DUP3 ADD MSTORE PUSH1 0x42 SWAP1 KECCAK256 SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH2 0x151A DUP9 DUP9 DUP9 DUP9 PUSH2 0x18B1 JUMP JUMPDEST SWAP3 POP SWAP3 POP SWAP3 POP PUSH2 0x152A DUP3 DUP3 PUSH2 0x1980 JUMP JUMPDEST POP SWAP1 SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH32 0xF0C57E16840DF040F15088DC2F81FE391C3923BEC73E23A9662EFC9C229C6A00 PUSH2 0x735 JUMP JUMPDEST PUSH2 0x1567 PUSH2 0x1A39 JUMP JUMPDEST PUSH2 0x8EB DUP3 DUP3 PUSH2 0x1A5E JUMP JUMPDEST PUSH2 0x1579 PUSH2 0x1A39 JUMP JUMPDEST PUSH2 0x8CD DUP2 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x31 PUSH1 0xF8 SHL DUP2 MSTORE POP PUSH2 0x1AAF JUMP JUMPDEST PUSH2 0x12FF PUSH2 0x1A39 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x15CE JUMPI PUSH1 0x40 MLOAD PUSH4 0xEC442F05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0xA28 JUMP JUMPDEST PUSH2 0x8EB PUSH1 0x0 DUP4 DUP4 PUSH2 0x16C1 JUMP JUMPDEST PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x249A DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH2 0x1613 JUMPI PUSH1 0x40 MLOAD PUSH4 0xE602DF05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0xA28 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x163D JUMPI PUSH1 0x40 MLOAD PUSH4 0x4A1406B1 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0xA28 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP7 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 DUP4 ADD PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP9 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 DUP4 SWAP1 SSTORE DUP2 ISZERO PUSH2 0xB10 JUMPI DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP6 PUSH1 0x40 MLOAD PUSH2 0x16B2 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND ISZERO DUP1 ISZERO SWAP1 PUSH2 0x16E1 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND ISZERO ISZERO JUMPDEST ISZERO PUSH2 0x1742 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD TIMESTAMP LT ISZERO PUSH2 0x1742 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 DUP2 SWAP1 KECCAK256 SLOAD SWAP1 MLOAD PUSH4 0xDAC64F9 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 ADD PUSH2 0xA28 JUMP JUMPDEST PUSH2 0x8A8 DUP4 DUP4 DUP4 PUSH2 0x1B10 JUMP JUMPDEST PUSH2 0x1757 DUP3 DUP3 PUSH2 0xB17 JUMP JUMPDEST PUSH2 0x8EB JUMPI PUSH1 0x40 MLOAD PUSH4 0xE2517D3F PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x44 ADD PUSH2 0xA28 JUMP JUMPDEST PUSH1 0x0 PUSH32 0x8B73C3C69BB8FE3D512ECC4CF759CC79239F7B179B0FFACAA9A75D522B39400F PUSH2 0x17B1 PUSH2 0x1C4E JUMP JUMPDEST PUSH2 0x17B9 PUSH2 0x1CB8 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP2 ADD SWAP5 SWAP1 SWAP5 MSTORE DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x60 DUP3 ADD MSTORE CHAINID PUSH1 0x80 DUP3 ADD MSTORE ADDRESS PUSH1 0xA0 DUP3 ADD MSTORE PUSH1 0xC0 ADD PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x253A DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SLOAD PUSH1 0xFF AND PUSH2 0x12FF JUMPI PUSH1 0x40 MLOAD PUSH4 0x8DFC202B PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1833 DUP3 PUSH2 0x1CFC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 PUSH32 0xBC7CD75A20EE27FD9ADEBAB32041F755214DBC6BFFA90CC0225B39DA2E5C2D3B SWAP1 PUSH1 0x0 SWAP1 LOG2 DUP1 MLOAD ISZERO PUSH2 0x1878 JUMPI PUSH2 0x8A8 DUP3 DUP3 PUSH2 0x1D61 JUMP JUMPDEST PUSH2 0x8EB PUSH2 0x1DD7 JUMP JUMPDEST PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x253A DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x12FF JUMPI PUSH1 0x40 MLOAD PUSH4 0xD93C0665 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP1 PUSH32 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0 DUP5 GT ISZERO PUSH2 0x18EC JUMPI POP PUSH1 0x0 SWAP2 POP PUSH1 0x3 SWAP1 POP DUP3 PUSH2 0x1976 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x0 DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD DUP1 DUP5 MSTORE DUP11 SWAP1 MSTORE PUSH1 0xFF DUP10 AND SWAP3 DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x60 DUP2 ADD DUP8 SWAP1 MSTORE PUSH1 0x80 DUP2 ADD DUP7 SWAP1 MSTORE PUSH1 0x1 SWAP1 PUSH1 0xA0 ADD PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 SUB SWAP1 DUP1 DUP5 SUB SWAP1 DUP6 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1940 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x40 MLOAD PUSH1 0x1F NOT ADD MLOAD SWAP2 POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x196C JUMPI POP PUSH1 0x0 SWAP3 POP PUSH1 0x1 SWAP2 POP DUP3 SWAP1 POP PUSH2 0x1976 JUMP JUMPDEST SWAP3 POP PUSH1 0x0 SWAP2 POP DUP2 SWAP1 POP JUMPDEST SWAP5 POP SWAP5 POP SWAP5 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x1994 JUMPI PUSH2 0x1994 PUSH2 0x2340 JUMP JUMPDEST SUB PUSH2 0x199D JUMPI POP POP JUMP JUMPDEST PUSH1 0x1 DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x19B1 JUMPI PUSH2 0x19B1 PUSH2 0x2340 JUMP JUMPDEST SUB PUSH2 0x19CF JUMPI PUSH1 0x40 MLOAD PUSH4 0xF645EEDF PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x19E3 JUMPI PUSH2 0x19E3 PUSH2 0x2340 JUMP JUMPDEST SUB PUSH2 0x1A04 JUMPI PUSH1 0x40 MLOAD PUSH4 0xFCE698F7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x24 ADD PUSH2 0xA28 JUMP JUMPDEST PUSH1 0x3 DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x1A18 JUMPI PUSH2 0x1A18 PUSH2 0x2340 JUMP JUMPDEST SUB PUSH2 0x8EB JUMPI PUSH1 0x40 MLOAD PUSH4 0x35E2F383 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x24 ADD PUSH2 0xA28 JUMP JUMPDEST PUSH2 0x1A41 PUSH2 0x1DF6 JUMP JUMPDEST PUSH2 0x12FF JUMPI PUSH1 0x40 MLOAD PUSH4 0x1AFCD79F PUSH1 0xE3 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1A66 PUSH2 0x1A39 JUMP JUMPDEST PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x249A DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH32 0x52C63247E1F47DB19D5CE0460030C497F067CA4CEBF71BA98EEADABE20BACE03 PUSH2 0x1AA0 DUP5 DUP3 PUSH2 0x239D JUMP JUMPDEST POP PUSH1 0x4 DUP2 ADD PUSH2 0x860 DUP4 DUP3 PUSH2 0x239D JUMP JUMPDEST PUSH2 0x1AB7 PUSH2 0x1A39 JUMP JUMPDEST PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x24BA DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH32 0xA16A46D94261C7517CC8FF89F61C0CE93598E3C849801011DEE649A6A557D102 PUSH2 0x1AF1 DUP5 DUP3 PUSH2 0x239D JUMP JUMPDEST POP PUSH1 0x3 DUP2 ADD PUSH2 0x1B00 DUP4 DUP3 PUSH2 0x239D JUMP JUMPDEST POP PUSH1 0x0 DUP1 DUP3 SSTORE PUSH1 0x1 SWAP1 SWAP2 ADD SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x249A DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x1B4C JUMPI DUP2 DUP2 PUSH1 0x2 ADD PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x1B41 SWAP2 SWAP1 PUSH2 0x245C JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH2 0x1BBE SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP3 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP3 DUP2 LT ISZERO PUSH2 0x1B9F JUMPI PUSH1 0x40 MLOAD PUSH4 0x391434E3 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x44 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x64 ADD PUSH2 0xA28 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP4 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SWAP1 DUP4 SWAP1 SUB SWAP1 SSTORE JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x1BDC JUMPI PUSH1 0x2 DUP2 ADD DUP1 SLOAD DUP4 SWAP1 SUB SWAP1 SSTORE PUSH2 0x1BFB JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP3 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD DUP4 ADD SWAP1 SSTORE JUMPDEST DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 PUSH1 0x40 MLOAD PUSH2 0x1C40 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x24BA DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP2 PUSH2 0x1C68 PUSH2 0x1484 JUMP JUMPDEST DUP1 MLOAD SWAP1 SWAP2 POP ISZERO PUSH2 0x1C80 JUMPI DUP1 MLOAD PUSH1 0x20 SWAP1 SWAP2 ADD KECCAK256 SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP2 SLOAD DUP1 ISZERO PUSH2 0x1C8F JUMPI SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0xC5D2460186F7233C927E7DB2DCC703C0E500B653CA82273B7BFAD8045D85A470 SWAP4 POP POP POP POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x24BA DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP2 PUSH2 0x1CD2 PUSH2 0x14C3 JUMP JUMPDEST DUP1 MLOAD SWAP1 SWAP2 POP ISZERO PUSH2 0x1CEA JUMPI DUP1 MLOAD PUSH1 0x20 SWAP1 SWAP2 ADD KECCAK256 SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 DUP3 ADD SLOAD DUP1 ISZERO PUSH2 0x1C8F JUMPI SWAP4 SWAP3 POP POP POP JUMP JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EXTCODESIZE PUSH1 0x0 SUB PUSH2 0x1D32 JUMPI PUSH1 0x40 MLOAD PUSH4 0x4C9C8CE3 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0xA28 JUMP JUMPDEST PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x24DA DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP1 DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x40 MLOAD PUSH2 0x1D7E SWAP2 SWAP1 PUSH2 0x247D JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 GAS DELEGATECALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x1DB9 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1DBE JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0x1DCE DUP6 DUP4 DUP4 PUSH2 0x1E10 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST CALLVALUE ISZERO PUSH2 0x12FF JUMPI PUSH1 0x40 MLOAD PUSH4 0xB398979F PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1E00 PUSH2 0x1536 JUMP JUMPDEST SLOAD PUSH1 0x1 PUSH1 0x40 SHL SWAP1 DIV PUSH1 0xFF AND SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 DUP3 PUSH2 0x1E25 JUMPI PUSH2 0x1E20 DUP3 PUSH2 0x1E6C JUMP JUMPDEST PUSH2 0x81B JUMP JUMPDEST DUP2 MLOAD ISZERO DUP1 ISZERO PUSH2 0x1E3C JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND EXTCODESIZE ISZERO JUMPDEST ISZERO PUSH2 0x1E65 JUMPI PUSH1 0x40 MLOAD PUSH4 0x9996B315 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0xA28 JUMP JUMPDEST POP DUP1 PUSH2 0x81B JUMP JUMPDEST DUP1 MLOAD ISZERO PUSH2 0x1E7C JUMPI DUP1 MLOAD DUP1 DUP3 PUSH1 0x20 ADD REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xD6BDA275 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x1EAC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1EC3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x81B DUP3 PUSH2 0x1E95 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1EDE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND DUP2 EQ PUSH2 0x81B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1F11 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x1EF9 JUMP JUMPDEST POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH2 0x1F32 DUP2 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP7 ADD PUSH2 0x1EF6 JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x20 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0x81B PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1F1A JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1F6C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1F75 DUP4 PUSH2 0x1E95 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1F98 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1FA1 DUP5 PUSH2 0x1E95 JUMP JUMPDEST SWAP3 POP PUSH2 0x1FAF PUSH1 0x20 DUP6 ADD PUSH2 0x1E95 JUMP JUMPDEST SWAP3 SWAP6 SWAP3 SWAP5 POP POP POP PUSH1 0x40 SWAP2 SWAP1 SWAP2 ADD CALLDATALOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1FD2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1FEC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD SWAP2 POP PUSH2 0x1FFC PUSH1 0x20 DUP5 ADD PUSH2 0x1E95 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x202E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2037 DUP4 PUSH2 0x1E95 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2053 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 ADD PUSH1 0x1F DUP2 ADD DUP6 SGT PUSH2 0x2064 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x207E JUMPI PUSH2 0x207E PUSH2 0x2005 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0x20AD JUMPI PUSH2 0x20AD PUSH2 0x2005 JUMP JUMPDEST PUSH1 0x40 MSTORE DUP2 DUP2 MSTORE DUP3 DUP3 ADD PUSH1 0x20 ADD DUP8 LT ISZERO PUSH2 0x20C5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 PUSH1 0x20 DUP5 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 PUSH1 0x20 DUP4 DUP4 ADD ADD MSTORE DUP1 SWAP4 POP POP POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0xFF PUSH1 0xF8 SHL DUP9 AND DUP2 MSTORE PUSH1 0xE0 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x0 PUSH2 0x2104 PUSH1 0xE0 DUP4 ADD DUP10 PUSH2 0x1F1A JUMP JUMPDEST DUP3 DUP2 SUB PUSH1 0x40 DUP5 ADD MSTORE PUSH2 0x2116 DUP2 DUP10 PUSH2 0x1F1A JUMP JUMPDEST PUSH1 0x60 DUP5 ADD DUP9 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND PUSH1 0x80 DUP6 ADD MSTORE PUSH1 0xA0 DUP5 ADD DUP7 SWAP1 MSTORE DUP4 DUP2 SUB PUSH1 0xC0 DUP6 ADD MSTORE DUP5 MLOAD DUP1 DUP3 MSTORE PUSH1 0x20 DUP1 DUP8 ADD SWAP4 POP SWAP1 SWAP2 ADD SWAP1 PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x216C JUMPI DUP4 MLOAD DUP4 MSTORE PUSH1 0x20 SWAP4 DUP5 ADD SWAP4 SWAP1 SWAP3 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0x214E JUMP JUMPDEST POP SWAP1 SWAP12 SWAP11 POP POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0x218F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x21A7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x20 DUP3 PUSH1 0x5 SHL DUP6 ADD ADD GT ISZERO PUSH2 0x21C2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x40 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x21DF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP5 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x21F6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2202 DUP8 DUP3 DUP9 ADD PUSH2 0x217D JUMP JUMPDEST SWAP1 SWAP6 POP SWAP4 POP POP PUSH1 0x20 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2222 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x222E DUP8 DUP3 DUP9 ADD PUSH2 0x217D JUMP JUMPDEST SWAP6 SWAP9 SWAP5 SWAP8 POP SWAP6 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xE0 DUP9 DUP11 SUB SLT ISZERO PUSH2 0x2255 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x225E DUP9 PUSH2 0x1E95 JUMP JUMPDEST SWAP7 POP PUSH2 0x226C PUSH1 0x20 DUP10 ADD PUSH2 0x1E95 JUMP JUMPDEST SWAP6 POP PUSH1 0x40 DUP9 ADD CALLDATALOAD SWAP5 POP PUSH1 0x60 DUP9 ADD CALLDATALOAD SWAP4 POP PUSH1 0x80 DUP9 ADD CALLDATALOAD PUSH1 0xFF DUP2 AND DUP2 EQ PUSH2 0x2290 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP7 SWAP10 SWAP6 SWAP9 POP SWAP4 SWAP7 SWAP3 SWAP6 SWAP5 PUSH1 0xA0 DUP5 ADD CALLDATALOAD SWAP5 POP PUSH1 0xC0 SWAP1 SWAP4 ADD CALLDATALOAD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x22C0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x22C9 DUP4 PUSH2 0x1E95 JUMP JUMPDEST SWAP2 POP PUSH2 0x1FFC PUSH1 0x20 DUP5 ADD PUSH2 0x1E95 JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x22EB JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x230B JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2339 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x8A8 JUMPI DUP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x237D JUMPI POP DUP1 JUMPDEST PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP3 ADD SWAP2 POP JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0xB10 JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x2389 JUMP JUMPDEST DUP2 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x23B7 JUMPI PUSH2 0x23B7 PUSH2 0x2005 JUMP JUMPDEST PUSH2 0x23CB DUP2 PUSH2 0x23C5 DUP5 SLOAD PUSH2 0x22D7 JUMP JUMPDEST DUP5 PUSH2 0x2356 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x1F DUP3 GT PUSH1 0x1 DUP2 EQ PUSH2 0x23FF JUMPI PUSH1 0x0 DUP4 ISZERO PUSH2 0x23E7 JUMPI POP DUP5 DUP3 ADD MLOAD JUMPDEST PUSH1 0x0 NOT PUSH1 0x3 DUP6 SWAP1 SHL SHR NOT AND PUSH1 0x1 DUP5 SWAP1 SHL OR DUP5 SSTORE PUSH2 0xB10 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F NOT DUP6 AND SWAP2 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x242F JUMPI DUP8 DUP6 ADD MLOAD DUP3 SSTORE PUSH1 0x20 SWAP5 DUP6 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP3 ADD SWAP2 ADD PUSH2 0x240F JUMP JUMPDEST POP DUP5 DUP3 LT ISZERO PUSH2 0x244D JUMPI DUP7 DUP5 ADD MLOAD PUSH1 0x0 NOT PUSH1 0x3 DUP8 SWAP1 SHL PUSH1 0xF8 AND SHR NOT AND DUP2 SSTORE JUMPDEST POP POP POP POP PUSH1 0x1 SWAP1 DUP2 SHL ADD SWAP1 SSTORE POP JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x735 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 MLOAD PUSH2 0x248F DUP2 DUP5 PUSH1 0x20 DUP8 ADD PUSH2 0x1EF6 JUMP JUMPDEST SWAP2 SWAP1 SWAP2 ADD SWAP3 SWAP2 POP POP JUMP INVALID MSTORE 0xC6 ORIGIN SELFBALANCE 0xE1 DELEGATECALL PUSH30 0xB19D5CE0460030C497F067CA4CEBF71BA98EEADABE20BACE00A16A46D942 PUSH2 0xC751 PUSH29 0xC8FF89F61C0CE93598E3C849801011DEE649A6A557D100360894A13BA1 LOG3 0x21 MOD PUSH8 0xC828492DB98DCA3E KECCAK256 PUSH23 0xCC3735A920A3CA505D382BBC65D7A28E3265B37A647492 SWAP16 CALLER PUSH6 0x21B332C1681B SWAP4 EXTCODEHASH PUSH13 0xB9F3376673440D862A02DD7BC7 0xDE 0xC4 0xDC 0xEE 0xDD 0xA7 PUSH22 0xE58DD541E08A116C6C53815C0BD028192F7B626800CD MCOPY 0xD1 TLOAD PUSH15 0x187E77E9AEE88184C21F4F2182AB58 0x27 0xCB EXTCODESIZE PUSH31 0x7FBEDCD63F03300A2646970667358221220F8B28F817583B1A5D7A44CEF3F 0xD PUSH16 0xE6F776916B23B5C1E3D23D5314EE38DB CALLER PUSH5 0x736F6C6343 STOP ADDMOD SHR STOP CALLER ","sourceMap":"694:4059:31:-:0;;;1171:4:2;1128:48;;1538:55:31;;;;;;;;;-1:-1:-1;1563:22:31;:20;:22::i;:::-;694:4059;;7709:422:1;3147:66;7898:15;;;;;;;7894:76;;;7936:23;;-1:-1:-1;;;7936:23:1;;;;;;;;;;;7894:76;7983:14;;-1:-1:-1;;;;;7983:14:1;;;:34;7979:146;;8033:33;;-1:-1:-1;;;;;;8033:33:1;-1:-1:-1;;;;;8033:33:1;;;;;8085:29;;158:50:33;;;8085:29:1;;146:2:33;131:18;8085:29:1;;;;;;;7979:146;7758:373;7709:422::o;14:200:33:-;694:4059:31;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{"@DEFAULT_ADMIN_ROLE_30":{"entryPoint":null,"id":30,"parameterSlots":0,"returnSlots":0},"@DOMAIN_SEPARATOR_1599":{"entryPoint":2150,"id":1599,"parameterSlots":0,"returnSlots":1},"@MINTER_ROLE_8888":{"entryPoint":null,"id":8888,"parameterSlots":0,"returnSlots":0},"@PAUSER_ROLE_8883":{"entryPoint":null,"id":8883,"parameterSlots":0,"returnSlots":0},"@UPGRADE_INTERFACE_VERSION_656":{"entryPoint":null,"id":656,"parameterSlots":0,"returnSlots":0},"@_EIP712NameHash_2208":{"entryPoint":7246,"id":2208,"parameterSlots":0,"returnSlots":1},"@_EIP712Name_2140":{"entryPoint":5252,"id":2140,"parameterSlots":0,"returnSlots":1},"@_EIP712VersionHash_2260":{"entryPoint":7352,"id":2260,"parameterSlots":0,"returnSlots":1},"@_EIP712Version_2156":{"entryPoint":5315,"id":2156,"parameterSlots":0,"returnSlots":1},"@__AccessControl_init_65":{"entryPoint":null,"id":65,"parameterSlots":0,"returnSlots":0},"@__EIP712_init_unchained_2014":{"entryPoint":6831,"id":2014,"parameterSlots":2,"returnSlots":0},"@__ERC20Permit_init_1487":{"entryPoint":5489,"id":1487,"parameterSlots":1,"returnSlots":0},"@__ERC20_init_882":{"entryPoint":5471,"id":882,"parameterSlots":2,"returnSlots":0},"@__ERC20_init_unchained_910":{"entryPoint":6750,"id":910,"parameterSlots":2,"returnSlots":0},"@__Pausable_init_1821":{"entryPoint":5532,"id":1821,"parameterSlots":0,"returnSlots":0},"@__UUPSUpgradeable_init_686":{"entryPoint":null,"id":686,"parameterSlots":0,"returnSlots":0},"@_approve_1314":{"entryPoint":4088,"id":1314,"parameterSlots":3,"returnSlots":0},"@_approve_1382":{"entryPoint":5594,"id":1382,"parameterSlots":4,"returnSlots":0},"@_authorizeUpgrade_9183":{"entryPoint":4865,"id":9183,"parameterSlots":1,"returnSlots":0},"@_buildDomainSeparator_2047":{"entryPoint":6022,"id":2047,"parameterSlots":0,"returnSlots":1},"@_checkInitializing_540":{"entryPoint":6713,"id":540,"parameterSlots":0,"returnSlots":0},"@_checkNonPayable_2870":{"entryPoint":7639,"id":2870,"parameterSlots":0,"returnSlots":0},"@_checkNotDelegated_762":{"entryPoint":5065,"id":762,"parameterSlots":0,"returnSlots":0},"@_checkProxy_746":{"entryPoint":4698,"id":746,"parameterSlots":0,"returnSlots":0},"@_checkRole_131":{"entryPoint":4293,"id":131,"parameterSlots":1,"returnSlots":0},"@_checkRole_152":{"entryPoint":5965,"id":152,"parameterSlots":2,"returnSlots":0},"@_domainSeparatorV4_2024":{"entryPoint":4468,"id":2024,"parameterSlots":0,"returnSlots":1},"@_getAccessControlStorage_48":{"entryPoint":null,"id":48,"parameterSlots":0,"returnSlots":1},"@_getEIP712Storage_1958":{"entryPoint":null,"id":1958,"parameterSlots":0,"returnSlots":1},"@_getERC20Storage_866":{"entryPoint":null,"id":866,"parameterSlots":0,"returnSlots":1},"@_getInitializableStorage_631":{"entryPoint":5430,"id":631,"parameterSlots":0,"returnSlots":1},"@_getNoncesStorage_1677":{"entryPoint":null,"id":1677,"parameterSlots":0,"returnSlots":1},"@_getPausableStorage_1783":{"entryPoint":null,"id":1783,"parameterSlots":0,"returnSlots":1},"@_grantRole_317":{"entryPoint":4303,"id":317,"parameterSlots":2,"returnSlots":1},"@_hashTypedDataV4_2063":{"entryPoint":5339,"id":2063,"parameterSlots":1,"returnSlots":1},"@_initializableStorageSlot_617":{"entryPoint":null,"id":617,"parameterSlots":0,"returnSlots":1},"@_isInitializing_608":{"entryPoint":7670,"id":608,"parameterSlots":0,"returnSlots":1},"@_mint_1263":{"entryPoint":5540,"id":1263,"parameterSlots":2,"returnSlots":0},"@_msgSender_1628":{"entryPoint":null,"id":1628,"parameterSlots":0,"returnSlots":1},"@_pause_1892":{"entryPoint":5179,"id":1892,"parameterSlots":0,"returnSlots":0},"@_requireNotPaused_1855":{"entryPoint":6272,"id":1855,"parameterSlots":0,"returnSlots":0},"@_requirePaused_1868":{"entryPoint":6138,"id":1868,"parameterSlots":0,"returnSlots":0},"@_revert_3280":{"entryPoint":7788,"id":3280,"parameterSlots":1,"returnSlots":0},"@_revokeRole_363":{"entryPoint":4478,"id":363,"parameterSlots":2,"returnSlots":1},"@_setImplementation_2650":{"entryPoint":7420,"id":2650,"parameterSlots":1,"returnSlots":0},"@_spendAllowance_1430":{"entryPoint":4101,"id":1430,"parameterSlots":3,"returnSlots":0},"@_throwError_5228":{"entryPoint":6528,"id":5228,"parameterSlots":2,"returnSlots":0},"@_transfer_1138":{"entryPoint":4198,"id":1138,"parameterSlots":3,"returnSlots":0},"@_unpause_1916":{"entryPoint":4602,"id":1916,"parameterSlots":0,"returnSlots":0},"@_update_1230":{"entryPoint":6928,"id":1230,"parameterSlots":3,"returnSlots":0},"@_update_9172":{"entryPoint":5825,"id":9172,"parameterSlots":3,"returnSlots":0},"@_upgradeToAndCallUUPS_813":{"entryPoint":4876,"id":813,"parameterSlots":2,"returnSlots":0},"@_useNonce_1731":{"entryPoint":null,"id":1731,"parameterSlots":1,"returnSlots":1},"@allowance_1035":{"entryPoint":3538,"id":1035,"parameterSlots":2,"returnSlots":1},"@approve_1059":{"entryPoint":2020,"id":1059,"parameterSlots":2,"returnSlots":1},"@balanceOf_987":{"entryPoint":2316,"id":987,"parameterSlots":1,"returnSlots":1},"@batchTransfer_9122":{"entryPoint":2668,"id":9122,"parameterSlots":4,"returnSlots":0},"@cooldownPeriod_8892":{"entryPoint":null,"id":8892,"parameterSlots":0,"returnSlots":0},"@cooldowns_8896":{"entryPoint":null,"id":8896,"parameterSlots":0,"returnSlots":0},"@decimals_951":{"entryPoint":null,"id":951,"parameterSlots":0,"returnSlots":1},"@eip712Domain_2124":{"entryPoint":2491,"id":2124,"parameterSlots":0,"returnSlots":7},"@functionDelegateCall_3198":{"entryPoint":7521,"id":3198,"parameterSlots":2,"returnSlots":1},"@getAddressSlot_3390":{"entryPoint":null,"id":3390,"parameterSlots":1,"returnSlots":1},"@getImplementation_2623":{"entryPoint":null,"id":2623,"parameterSlots":0,"returnSlots":1},"@getRoleAdmin_173":{"entryPoint":2082,"id":173,"parameterSlots":1,"returnSlots":1},"@gnosisSafe_8890":{"entryPoint":null,"id":8890,"parameterSlots":0,"returnSlots":0},"@grantRole_192":{"entryPoint":2116,"id":192,"parameterSlots":2,"returnSlots":0},"@hasRole_118":{"entryPoint":2839,"id":118,"parameterSlots":2,"returnSlots":1},"@initialize_8987":{"entryPoint":3612,"id":8987,"parameterSlots":1,"returnSlots":0},"@name_926":{"entryPoint":1851,"id":926,"parameterSlots":0,"returnSlots":1},"@nonces_1589":{"entryPoint":2367,"id":1589,"parameterSlots":1,"returnSlots":1},"@nonces_1709":{"entryPoint":5138,"id":1709,"parameterSlots":1,"returnSlots":1},"@pause_8998":{"entryPoint":2459,"id":8998,"parameterSlots":0,"returnSlots":0},"@paused_1843":{"entryPoint":null,"id":1843,"parameterSlots":0,"returnSlots":1},"@permit_1572":{"entryPoint":3165,"id":1572,"parameterSlots":7,"returnSlots":0},"@proxiableUUID_704":{"entryPoint":2287,"id":704,"parameterSlots":0,"returnSlots":1},"@recover_5179":{"entryPoint":5384,"id":5179,"parameterSlots":4,"returnSlots":1},"@renounceRole_234":{"entryPoint":2165,"id":234,"parameterSlots":2,"returnSlots":0},"@revokeRole_211":{"entryPoint":3510,"id":211,"parameterSlots":2,"returnSlots":0},"@setCooldownPeriod_9055":{"entryPoint":2378,"id":9055,"parameterSlots":1,"returnSlots":0},"@setCooldown_9078":{"entryPoint":2958,"id":9078,"parameterSlots":2,"returnSlots":0},"@setGnosisSafe_9032":{"entryPoint":3073,"id":9032,"parameterSlots":1,"returnSlots":0},"@supportsInterface_2300":{"entryPoint":null,"id":2300,"parameterSlots":1,"returnSlots":1},"@supportsInterface_93":{"entryPoint":1796,"id":93,"parameterSlots":1,"returnSlots":1},"@symbol_942":{"entryPoint":2895,"id":942,"parameterSlots":0,"returnSlots":1},"@toTypedDataHash_5314":{"entryPoint":null,"id":5314,"parameterSlots":2,"returnSlots":1},"@totalSupply_967":{"entryPoint":null,"id":967,"parameterSlots":0,"returnSlots":1},"@transferFrom_1091":{"entryPoint":2044,"id":1091,"parameterSlots":3,"returnSlots":1},"@transfer_1011":{"entryPoint":3059,"id":1011,"parameterSlots":2,"returnSlots":1},"@tryRecover_5143":{"entryPoint":6321,"id":5143,"parameterSlots":4,"returnSlots":3},"@unpause_9009":{"entryPoint":2221,"id":9009,"parameterSlots":0,"returnSlots":0},"@upgradeToAndCall_2686":{"entryPoint":6186,"id":2686,"parameterSlots":2,"returnSlots":0},"@upgradeToAndCall_724":{"entryPoint":2256,"id":724,"parameterSlots":2,"returnSlots":0},"@verifyCallResultFromTarget_3238":{"entryPoint":7696,"id":3238,"parameterSlots":3,"returnSlots":1},"@version_9192":{"entryPoint":null,"id":9192,"parameterSlots":0,"returnSlots":1},"abi_decode_address":{"entryPoint":7829,"id":null,"parameterSlots":1,"returnSlots":1},"abi_decode_array_address_dyn_calldata":{"entryPoint":8573,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_address":{"entryPoint":7857,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_addresst_address":{"entryPoint":8877,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_addresst_addresst_uint256":{"entryPoint":8067,"id":null,"parameterSlots":2,"returnSlots":3},"abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_uint8t_bytes32t_bytes32":{"entryPoint":8762,"id":null,"parameterSlots":2,"returnSlots":7},"abi_decode_tuple_t_addresst_bytes_memory_ptr":{"entryPoint":8219,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_addresst_uint256":{"entryPoint":8025,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_array$_t_address_$dyn_calldata_ptrt_array$_t_uint256_$dyn_calldata_ptr":{"entryPoint":8649,"id":null,"parameterSlots":2,"returnSlots":4},"abi_decode_tuple_t_bytes32":{"entryPoint":8128,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_bytes32_fromMemory":{"entryPoint":8999,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_bytes32t_address":{"entryPoint":8153,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_bytes4":{"entryPoint":7884,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint256":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_string":{"entryPoint":7962,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed":{"entryPoint":9341,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_address_t_bytes32__to_t_address_t_bytes32__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":4,"returnSlots":1},"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_bytes1_t_string_memory_ptr_t_string_memory_ptr_t_uint256_t_address_t_bytes32_t_array$_t_uint256_$dyn_memory_ptr__to_t_bytes1_t_string_memory_ptr_t_string_memory_ptr_t_uint256_t_address_t_bytes32_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed":{"entryPoint":8421,"id":null,"parameterSlots":8,"returnSlots":1},"abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_bytes32_t_address_t_address_t_uint256_t_uint256_t_uint256__to_t_bytes32_t_address_t_address_t_uint256_t_uint256_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":7,"returnSlots":1},"abi_encode_tuple_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__to_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":6,"returnSlots":1},"abi_encode_tuple_t_bytes32_t_uint8_t_bytes32_t_bytes32__to_t_bytes32_t_uint8_t_bytes32_t_bytes32__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":5,"returnSlots":1},"abi_encode_tuple_t_rational_1_by_1__to_t_uint64__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":8006,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_stringliteral_2e5045ff73280aa8e8acd8c82710f23812497f87f7f576e2220a2ddd0d45eade__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_582fd48f3876d7686bfeaaaa0db0589073271dedd50d66094f02fee2a3d2e01c__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"array_dataslot_string_storage":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"checked_add_t_uint256":{"entryPoint":9308,"id":null,"parameterSlots":2,"returnSlots":1},"clean_up_bytearray_end_slots_string_storage":{"entryPoint":9046,"id":null,"parameterSlots":3,"returnSlots":0},"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage":{"entryPoint":9117,"id":null,"parameterSlots":2,"returnSlots":0},"copy_memory_to_memory_with_cleanup":{"entryPoint":7926,"id":null,"parameterSlots":3,"returnSlots":0},"extract_byte_array_length":{"entryPoint":8919,"id":null,"parameterSlots":1,"returnSlots":1},"extract_used_part_and_set_length_of_short_byte_array":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"panic_error_0x21":{"entryPoint":9024,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x32":{"entryPoint":8977,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x41":{"entryPoint":8197,"id":null,"parameterSlots":0,"returnSlots":0}},"generatedSources":[{"ast":{"nativeSrc":"0:15898:33","nodeType":"YulBlock","src":"0:15898:33","statements":[{"nativeSrc":"6:3:33","nodeType":"YulBlock","src":"6:3:33","statements":[]},{"body":{"nativeSrc":"63:124:33","nodeType":"YulBlock","src":"63:124:33","statements":[{"nativeSrc":"73:29:33","nodeType":"YulAssignment","src":"73:29:33","value":{"arguments":[{"name":"offset","nativeSrc":"95:6:33","nodeType":"YulIdentifier","src":"95:6:33"}],"functionName":{"name":"calldataload","nativeSrc":"82:12:33","nodeType":"YulIdentifier","src":"82:12:33"},"nativeSrc":"82:20:33","nodeType":"YulFunctionCall","src":"82:20:33"},"variableNames":[{"name":"value","nativeSrc":"73:5:33","nodeType":"YulIdentifier","src":"73:5:33"}]},{"body":{"nativeSrc":"165:16:33","nodeType":"YulBlock","src":"165:16:33","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"174:1:33","nodeType":"YulLiteral","src":"174:1:33","type":"","value":"0"},{"kind":"number","nativeSrc":"177:1:33","nodeType":"YulLiteral","src":"177:1:33","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"167:6:33","nodeType":"YulIdentifier","src":"167:6:33"},"nativeSrc":"167:12:33","nodeType":"YulFunctionCall","src":"167:12:33"},"nativeSrc":"167:12:33","nodeType":"YulExpressionStatement","src":"167:12:33"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"124:5:33","nodeType":"YulIdentifier","src":"124:5:33"},{"arguments":[{"name":"value","nativeSrc":"135:5:33","nodeType":"YulIdentifier","src":"135:5:33"},{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"150:3:33","nodeType":"YulLiteral","src":"150:3:33","type":"","value":"160"},{"kind":"number","nativeSrc":"155:1:33","nodeType":"YulLiteral","src":"155:1:33","type":"","value":"1"}],"functionName":{"name":"shl","nativeSrc":"146:3:33","nodeType":"YulIdentifier","src":"146:3:33"},"nativeSrc":"146:11:33","nodeType":"YulFunctionCall","src":"146:11:33"},{"kind":"number","nativeSrc":"159:1:33","nodeType":"YulLiteral","src":"159:1:33","type":"","value":"1"}],"functionName":{"name":"sub","nativeSrc":"142:3:33","nodeType":"YulIdentifier","src":"142:3:33"},"nativeSrc":"142:19:33","nodeType":"YulFunctionCall","src":"142:19:33"}],"functionName":{"name":"and","nativeSrc":"131:3:33","nodeType":"YulIdentifier","src":"131:3:33"},"nativeSrc":"131:31:33","nodeType":"YulFunctionCall","src":"131:31:33"}],"functionName":{"name":"eq","nativeSrc":"121:2:33","nodeType":"YulIdentifier","src":"121:2:33"},"nativeSrc":"121:42:33","nodeType":"YulFunctionCall","src":"121:42:33"}],"functionName":{"name":"iszero","nativeSrc":"114:6:33","nodeType":"YulIdentifier","src":"114:6:33"},"nativeSrc":"114:50:33","nodeType":"YulFunctionCall","src":"114:50:33"},"nativeSrc":"111:70:33","nodeType":"YulIf","src":"111:70:33"}]},"name":"abi_decode_address","nativeSrc":"14:173:33","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"42:6:33","nodeType":"YulTypedName","src":"42:6:33","type":""}],"returnVariables":[{"name":"value","nativeSrc":"53:5:33","nodeType":"YulTypedName","src":"53:5:33","type":""}],"src":"14:173:33"},{"body":{"nativeSrc":"262:116:33","nodeType":"YulBlock","src":"262:116:33","statements":[{"body":{"nativeSrc":"308:16:33","nodeType":"YulBlock","src":"308:16:33","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"317:1:33","nodeType":"YulLiteral","src":"317:1:33","type":"","value":"0"},{"kind":"number","nativeSrc":"320:1:33","nodeType":"YulLiteral","src":"320:1:33","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"310:6:33","nodeType":"YulIdentifier","src":"310:6:33"},"nativeSrc":"310:12:33","nodeType":"YulFunctionCall","src":"310:12:33"},"nativeSrc":"310:12:33","nodeType":"YulExpressionStatement","src":"310:12:33"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"283:7:33","nodeType":"YulIdentifier","src":"283:7:33"},{"name":"headStart","nativeSrc":"292:9:33","nodeType":"YulIdentifier","src":"292:9:33"}],"functionName":{"name":"sub","nativeSrc":"279:3:33","nodeType":"YulIdentifier","src":"279:3:33"},"nativeSrc":"279:23:33","nodeType":"YulFunctionCall","src":"279:23:33"},{"kind":"number","nativeSrc":"304:2:33","nodeType":"YulLiteral","src":"304:2:33","type":"","value":"32"}],"functionName":{"name":"slt","nativeSrc":"275:3:33","nodeType":"YulIdentifier","src":"275:3:33"},"nativeSrc":"275:32:33","nodeType":"YulFunctionCall","src":"275:32:33"},"nativeSrc":"272:52:33","nodeType":"YulIf","src":"272:52:33"},{"nativeSrc":"333:39:33","nodeType":"YulAssignment","src":"333:39:33","value":{"arguments":[{"name":"headStart","nativeSrc":"362:9:33","nodeType":"YulIdentifier","src":"362:9:33"}],"functionName":{"name":"abi_decode_address","nativeSrc":"343:18:33","nodeType":"YulIdentifier","src":"343:18:33"},"nativeSrc":"343:29:33","nodeType":"YulFunctionCall","src":"343:29:33"},"variableNames":[{"name":"value0","nativeSrc":"333:6:33","nodeType":"YulIdentifier","src":"333:6:33"}]}]},"name":"abi_decode_tuple_t_address","nativeSrc":"192:186:33","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"228:9:33","nodeType":"YulTypedName","src":"228:9:33","type":""},{"name":"dataEnd","nativeSrc":"239:7:33","nodeType":"YulTypedName","src":"239:7:33","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"251:6:33","nodeType":"YulTypedName","src":"251:6:33","type":""}],"src":"192:186:33"},{"body":{"nativeSrc":"484:76:33","nodeType":"YulBlock","src":"484:76:33","statements":[{"nativeSrc":"494:26:33","nodeType":"YulAssignment","src":"494:26:33","value":{"arguments":[{"name":"headStart","nativeSrc":"506:9:33","nodeType":"YulIdentifier","src":"506:9:33"},{"kind":"number","nativeSrc":"517:2:33","nodeType":"YulLiteral","src":"517:2:33","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"502:3:33","nodeType":"YulIdentifier","src":"502:3:33"},"nativeSrc":"502:18:33","nodeType":"YulFunctionCall","src":"502:18:33"},"variableNames":[{"name":"tail","nativeSrc":"494:4:33","nodeType":"YulIdentifier","src":"494:4:33"}]},{"expression":{"arguments":[{"name":"headStart","nativeSrc":"536:9:33","nodeType":"YulIdentifier","src":"536:9:33"},{"name":"value0","nativeSrc":"547:6:33","nodeType":"YulIdentifier","src":"547:6:33"}],"functionName":{"name":"mstore","nativeSrc":"529:6:33","nodeType":"YulIdentifier","src":"529:6:33"},"nativeSrc":"529:25:33","nodeType":"YulFunctionCall","src":"529:25:33"},"nativeSrc":"529:25:33","nodeType":"YulExpressionStatement","src":"529:25:33"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nativeSrc":"383:177:33","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"453:9:33","nodeType":"YulTypedName","src":"453:9:33","type":""},{"name":"value0","nativeSrc":"464:6:33","nodeType":"YulTypedName","src":"464:6:33","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"475:4:33","nodeType":"YulTypedName","src":"475:4:33","type":""}],"src":"383:177:33"},{"body":{"nativeSrc":"634:217:33","nodeType":"YulBlock","src":"634:217:33","statements":[{"body":{"nativeSrc":"680:16:33","nodeType":"YulBlock","src":"680:16:33","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"689:1:33","nodeType":"YulLiteral","src":"689:1:33","type":"","value":"0"},{"kind":"number","nativeSrc":"692:1:33","nodeType":"YulLiteral","src":"692:1:33","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"682:6:33","nodeType":"YulIdentifier","src":"682:6:33"},"nativeSrc":"682:12:33","nodeType":"YulFunctionCall","src":"682:12:33"},"nativeSrc":"682:12:33","nodeType":"YulExpressionStatement","src":"682:12:33"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"655:7:33","nodeType":"YulIdentifier","src":"655:7:33"},{"name":"headStart","nativeSrc":"664:9:33","nodeType":"YulIdentifier","src":"664:9:33"}],"functionName":{"name":"sub","nativeSrc":"651:3:33","nodeType":"YulIdentifier","src":"651:3:33"},"nativeSrc":"651:23:33","nodeType":"YulFunctionCall","src":"651:23:33"},{"kind":"number","nativeSrc":"676:2:33","nodeType":"YulLiteral","src":"676:2:33","type":"","value":"32"}],"functionName":{"name":"slt","nativeSrc":"647:3:33","nodeType":"YulIdentifier","src":"647:3:33"},"nativeSrc":"647:32:33","nodeType":"YulFunctionCall","src":"647:32:33"},"nativeSrc":"644:52:33","nodeType":"YulIf","src":"644:52:33"},{"nativeSrc":"705:36:33","nodeType":"YulVariableDeclaration","src":"705:36:33","value":{"arguments":[{"name":"headStart","nativeSrc":"731:9:33","nodeType":"YulIdentifier","src":"731:9:33"}],"functionName":{"name":"calldataload","nativeSrc":"718:12:33","nodeType":"YulIdentifier","src":"718:12:33"},"nativeSrc":"718:23:33","nodeType":"YulFunctionCall","src":"718:23:33"},"variables":[{"name":"value","nativeSrc":"709:5:33","nodeType":"YulTypedName","src":"709:5:33","type":""}]},{"body":{"nativeSrc":"805:16:33","nodeType":"YulBlock","src":"805:16:33","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"814:1:33","nodeType":"YulLiteral","src":"814:1:33","type":"","value":"0"},{"kind":"number","nativeSrc":"817:1:33","nodeType":"YulLiteral","src":"817:1:33","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"807:6:33","nodeType":"YulIdentifier","src":"807:6:33"},"nativeSrc":"807:12:33","nodeType":"YulFunctionCall","src":"807:12:33"},"nativeSrc":"807:12:33","nodeType":"YulExpressionStatement","src":"807:12:33"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"763:5:33","nodeType":"YulIdentifier","src":"763:5:33"},{"arguments":[{"name":"value","nativeSrc":"774:5:33","nodeType":"YulIdentifier","src":"774:5:33"},{"arguments":[{"kind":"number","nativeSrc":"785:3:33","nodeType":"YulLiteral","src":"785:3:33","type":"","value":"224"},{"kind":"number","nativeSrc":"790:10:33","nodeType":"YulLiteral","src":"790:10:33","type":"","value":"0xffffffff"}],"functionName":{"name":"shl","nativeSrc":"781:3:33","nodeType":"YulIdentifier","src":"781:3:33"},"nativeSrc":"781:20:33","nodeType":"YulFunctionCall","src":"781:20:33"}],"functionName":{"name":"and","nativeSrc":"770:3:33","nodeType":"YulIdentifier","src":"770:3:33"},"nativeSrc":"770:32:33","nodeType":"YulFunctionCall","src":"770:32:33"}],"functionName":{"name":"eq","nativeSrc":"760:2:33","nodeType":"YulIdentifier","src":"760:2:33"},"nativeSrc":"760:43:33","nodeType":"YulFunctionCall","src":"760:43:33"}],"functionName":{"name":"iszero","nativeSrc":"753:6:33","nodeType":"YulIdentifier","src":"753:6:33"},"nativeSrc":"753:51:33","nodeType":"YulFunctionCall","src":"753:51:33"},"nativeSrc":"750:71:33","nodeType":"YulIf","src":"750:71:33"},{"nativeSrc":"830:15:33","nodeType":"YulAssignment","src":"830:15:33","value":{"name":"value","nativeSrc":"840:5:33","nodeType":"YulIdentifier","src":"840:5:33"},"variableNames":[{"name":"value0","nativeSrc":"830:6:33","nodeType":"YulIdentifier","src":"830:6:33"}]}]},"name":"abi_decode_tuple_t_bytes4","nativeSrc":"565:286:33","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"600:9:33","nodeType":"YulTypedName","src":"600:9:33","type":""},{"name":"dataEnd","nativeSrc":"611:7:33","nodeType":"YulTypedName","src":"611:7:33","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"623:6:33","nodeType":"YulTypedName","src":"623:6:33","type":""}],"src":"565:286:33"},{"body":{"nativeSrc":"951:92:33","nodeType":"YulBlock","src":"951:92:33","statements":[{"nativeSrc":"961:26:33","nodeType":"YulAssignment","src":"961:26:33","value":{"arguments":[{"name":"headStart","nativeSrc":"973:9:33","nodeType":"YulIdentifier","src":"973:9:33"},{"kind":"number","nativeSrc":"984:2:33","nodeType":"YulLiteral","src":"984:2:33","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"969:3:33","nodeType":"YulIdentifier","src":"969:3:33"},"nativeSrc":"969:18:33","nodeType":"YulFunctionCall","src":"969:18:33"},"variableNames":[{"name":"tail","nativeSrc":"961:4:33","nodeType":"YulIdentifier","src":"961:4:33"}]},{"expression":{"arguments":[{"name":"headStart","nativeSrc":"1003:9:33","nodeType":"YulIdentifier","src":"1003:9:33"},{"arguments":[{"arguments":[{"name":"value0","nativeSrc":"1028:6:33","nodeType":"YulIdentifier","src":"1028:6:33"}],"functionName":{"name":"iszero","nativeSrc":"1021:6:33","nodeType":"YulIdentifier","src":"1021:6:33"},"nativeSrc":"1021:14:33","nodeType":"YulFunctionCall","src":"1021:14:33"}],"functionName":{"name":"iszero","nativeSrc":"1014:6:33","nodeType":"YulIdentifier","src":"1014:6:33"},"nativeSrc":"1014:22:33","nodeType":"YulFunctionCall","src":"1014:22:33"}],"functionName":{"name":"mstore","nativeSrc":"996:6:33","nodeType":"YulIdentifier","src":"996:6:33"},"nativeSrc":"996:41:33","nodeType":"YulFunctionCall","src":"996:41:33"},"nativeSrc":"996:41:33","nodeType":"YulExpressionStatement","src":"996:41:33"}]},"name":"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed","nativeSrc":"856:187:33","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"920:9:33","nodeType":"YulTypedName","src":"920:9:33","type":""},{"name":"value0","nativeSrc":"931:6:33","nodeType":"YulTypedName","src":"931:6:33","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"942:4:33","nodeType":"YulTypedName","src":"942:4:33","type":""}],"src":"856:187:33"},{"body":{"nativeSrc":"1114:184:33","nodeType":"YulBlock","src":"1114:184:33","statements":[{"nativeSrc":"1124:10:33","nodeType":"YulVariableDeclaration","src":"1124:10:33","value":{"kind":"number","nativeSrc":"1133:1:33","nodeType":"YulLiteral","src":"1133:1:33","type":"","value":"0"},"variables":[{"name":"i","nativeSrc":"1128:1:33","nodeType":"YulTypedName","src":"1128:1:33","type":""}]},{"body":{"nativeSrc":"1193:63:33","nodeType":"YulBlock","src":"1193:63:33","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nativeSrc":"1218:3:33","nodeType":"YulIdentifier","src":"1218:3:33"},{"name":"i","nativeSrc":"1223:1:33","nodeType":"YulIdentifier","src":"1223:1:33"}],"functionName":{"name":"add","nativeSrc":"1214:3:33","nodeType":"YulIdentifier","src":"1214:3:33"},"nativeSrc":"1214:11:33","nodeType":"YulFunctionCall","src":"1214:11:33"},{"arguments":[{"arguments":[{"name":"src","nativeSrc":"1237:3:33","nodeType":"YulIdentifier","src":"1237:3:33"},{"name":"i","nativeSrc":"1242:1:33","nodeType":"YulIdentifier","src":"1242:1:33"}],"functionName":{"name":"add","nativeSrc":"1233:3:33","nodeType":"YulIdentifier","src":"1233:3:33"},"nativeSrc":"1233:11:33","nodeType":"YulFunctionCall","src":"1233:11:33"}],"functionName":{"name":"mload","nativeSrc":"1227:5:33","nodeType":"YulIdentifier","src":"1227:5:33"},"nativeSrc":"1227:18:33","nodeType":"YulFunctionCall","src":"1227:18:33"}],"functionName":{"name":"mstore","nativeSrc":"1207:6:33","nodeType":"YulIdentifier","src":"1207:6:33"},"nativeSrc":"1207:39:33","nodeType":"YulFunctionCall","src":"1207:39:33"},"nativeSrc":"1207:39:33","nodeType":"YulExpressionStatement","src":"1207:39:33"}]},"condition":{"arguments":[{"name":"i","nativeSrc":"1154:1:33","nodeType":"YulIdentifier","src":"1154:1:33"},{"name":"length","nativeSrc":"1157:6:33","nodeType":"YulIdentifier","src":"1157:6:33"}],"functionName":{"name":"lt","nativeSrc":"1151:2:33","nodeType":"YulIdentifier","src":"1151:2:33"},"nativeSrc":"1151:13:33","nodeType":"YulFunctionCall","src":"1151:13:33"},"nativeSrc":"1143:113:33","nodeType":"YulForLoop","post":{"nativeSrc":"1165:19:33","nodeType":"YulBlock","src":"1165:19:33","statements":[{"nativeSrc":"1167:15:33","nodeType":"YulAssignment","src":"1167:15:33","value":{"arguments":[{"name":"i","nativeSrc":"1176:1:33","nodeType":"YulIdentifier","src":"1176:1:33"},{"kind":"number","nativeSrc":"1179:2:33","nodeType":"YulLiteral","src":"1179:2:33","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"1172:3:33","nodeType":"YulIdentifier","src":"1172:3:33"},"nativeSrc":"1172:10:33","nodeType":"YulFunctionCall","src":"1172:10:33"},"variableNames":[{"name":"i","nativeSrc":"1167:1:33","nodeType":"YulIdentifier","src":"1167:1:33"}]}]},"pre":{"nativeSrc":"1147:3:33","nodeType":"YulBlock","src":"1147:3:33","statements":[]},"src":"1143:113:33"},{"expression":{"arguments":[{"arguments":[{"name":"dst","nativeSrc":"1276:3:33","nodeType":"YulIdentifier","src":"1276:3:33"},{"name":"length","nativeSrc":"1281:6:33","nodeType":"YulIdentifier","src":"1281:6:33"}],"functionName":{"name":"add","nativeSrc":"1272:3:33","nodeType":"YulIdentifier","src":"1272:3:33"},"nativeSrc":"1272:16:33","nodeType":"YulFunctionCall","src":"1272:16:33"},{"kind":"number","nativeSrc":"1290:1:33","nodeType":"YulLiteral","src":"1290:1:33","type":"","value":"0"}],"functionName":{"name":"mstore","nativeSrc":"1265:6:33","nodeType":"YulIdentifier","src":"1265:6:33"},"nativeSrc":"1265:27:33","nodeType":"YulFunctionCall","src":"1265:27:33"},"nativeSrc":"1265:27:33","nodeType":"YulExpressionStatement","src":"1265:27:33"}]},"name":"copy_memory_to_memory_with_cleanup","nativeSrc":"1048:250:33","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nativeSrc":"1092:3:33","nodeType":"YulTypedName","src":"1092:3:33","type":""},{"name":"dst","nativeSrc":"1097:3:33","nodeType":"YulTypedName","src":"1097:3:33","type":""},{"name":"length","nativeSrc":"1102:6:33","nodeType":"YulTypedName","src":"1102:6:33","type":""}],"src":"1048:250:33"},{"body":{"nativeSrc":"1353:221:33","nodeType":"YulBlock","src":"1353:221:33","statements":[{"nativeSrc":"1363:26:33","nodeType":"YulVariableDeclaration","src":"1363:26:33","value":{"arguments":[{"name":"value","nativeSrc":"1383:5:33","nodeType":"YulIdentifier","src":"1383:5:33"}],"functionName":{"name":"mload","nativeSrc":"1377:5:33","nodeType":"YulIdentifier","src":"1377:5:33"},"nativeSrc":"1377:12:33","nodeType":"YulFunctionCall","src":"1377:12:33"},"variables":[{"name":"length","nativeSrc":"1367:6:33","nodeType":"YulTypedName","src":"1367:6:33","type":""}]},{"expression":{"arguments":[{"name":"pos","nativeSrc":"1405:3:33","nodeType":"YulIdentifier","src":"1405:3:33"},{"name":"length","nativeSrc":"1410:6:33","nodeType":"YulIdentifier","src":"1410:6:33"}],"functionName":{"name":"mstore","nativeSrc":"1398:6:33","nodeType":"YulIdentifier","src":"1398:6:33"},"nativeSrc":"1398:19:33","nodeType":"YulFunctionCall","src":"1398:19:33"},"nativeSrc":"1398:19:33","nodeType":"YulExpressionStatement","src":"1398:19:33"},{"expression":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"1465:5:33","nodeType":"YulIdentifier","src":"1465:5:33"},{"kind":"number","nativeSrc":"1472:4:33","nodeType":"YulLiteral","src":"1472:4:33","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"1461:3:33","nodeType":"YulIdentifier","src":"1461:3:33"},"nativeSrc":"1461:16:33","nodeType":"YulFunctionCall","src":"1461:16:33"},{"arguments":[{"name":"pos","nativeSrc":"1483:3:33","nodeType":"YulIdentifier","src":"1483:3:33"},{"kind":"number","nativeSrc":"1488:4:33","nodeType":"YulLiteral","src":"1488:4:33","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"1479:3:33","nodeType":"YulIdentifier","src":"1479:3:33"},"nativeSrc":"1479:14:33","nodeType":"YulFunctionCall","src":"1479:14:33"},{"name":"length","nativeSrc":"1495:6:33","nodeType":"YulIdentifier","src":"1495:6:33"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nativeSrc":"1426:34:33","nodeType":"YulIdentifier","src":"1426:34:33"},"nativeSrc":"1426:76:33","nodeType":"YulFunctionCall","src":"1426:76:33"},"nativeSrc":"1426:76:33","nodeType":"YulExpressionStatement","src":"1426:76:33"},{"nativeSrc":"1511:57:33","nodeType":"YulAssignment","src":"1511:57:33","value":{"arguments":[{"arguments":[{"name":"pos","nativeSrc":"1526:3:33","nodeType":"YulIdentifier","src":"1526:3:33"},{"arguments":[{"arguments":[{"name":"length","nativeSrc":"1539:6:33","nodeType":"YulIdentifier","src":"1539:6:33"},{"kind":"number","nativeSrc":"1547:2:33","nodeType":"YulLiteral","src":"1547:2:33","type":"","value":"31"}],"functionName":{"name":"add","nativeSrc":"1535:3:33","nodeType":"YulIdentifier","src":"1535:3:33"},"nativeSrc":"1535:15:33","nodeType":"YulFunctionCall","src":"1535:15:33"},{"arguments":[{"kind":"number","nativeSrc":"1556:2:33","nodeType":"YulLiteral","src":"1556:2:33","type":"","value":"31"}],"functionName":{"name":"not","nativeSrc":"1552:3:33","nodeType":"YulIdentifier","src":"1552:3:33"},"nativeSrc":"1552:7:33","nodeType":"YulFunctionCall","src":"1552:7:33"}],"functionName":{"name":"and","nativeSrc":"1531:3:33","nodeType":"YulIdentifier","src":"1531:3:33"},"nativeSrc":"1531:29:33","nodeType":"YulFunctionCall","src":"1531:29:33"}],"functionName":{"name":"add","nativeSrc":"1522:3:33","nodeType":"YulIdentifier","src":"1522:3:33"},"nativeSrc":"1522:39:33","nodeType":"YulFunctionCall","src":"1522:39:33"},{"kind":"number","nativeSrc":"1563:4:33","nodeType":"YulLiteral","src":"1563:4:33","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"1518:3:33","nodeType":"YulIdentifier","src":"1518:3:33"},"nativeSrc":"1518:50:33","nodeType":"YulFunctionCall","src":"1518:50:33"},"variableNames":[{"name":"end","nativeSrc":"1511:3:33","nodeType":"YulIdentifier","src":"1511:3:33"}]}]},"name":"abi_encode_string","nativeSrc":"1303:271:33","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"1330:5:33","nodeType":"YulTypedName","src":"1330:5:33","type":""},{"name":"pos","nativeSrc":"1337:3:33","nodeType":"YulTypedName","src":"1337:3:33","type":""}],"returnVariables":[{"name":"end","nativeSrc":"1345:3:33","nodeType":"YulTypedName","src":"1345:3:33","type":""}],"src":"1303:271:33"},{"body":{"nativeSrc":"1700:99:33","nodeType":"YulBlock","src":"1700:99:33","statements":[{"expression":{"arguments":[{"name":"headStart","nativeSrc":"1717:9:33","nodeType":"YulIdentifier","src":"1717:9:33"},{"kind":"number","nativeSrc":"1728:2:33","nodeType":"YulLiteral","src":"1728:2:33","type":"","value":"32"}],"functionName":{"name":"mstore","nativeSrc":"1710:6:33","nodeType":"YulIdentifier","src":"1710:6:33"},"nativeSrc":"1710:21:33","nodeType":"YulFunctionCall","src":"1710:21:33"},"nativeSrc":"1710:21:33","nodeType":"YulExpressionStatement","src":"1710:21:33"},{"nativeSrc":"1740:53:33","nodeType":"YulAssignment","src":"1740:53:33","value":{"arguments":[{"name":"value0","nativeSrc":"1766:6:33","nodeType":"YulIdentifier","src":"1766:6:33"},{"arguments":[{"name":"headStart","nativeSrc":"1778:9:33","nodeType":"YulIdentifier","src":"1778:9:33"},{"kind":"number","nativeSrc":"1789:2:33","nodeType":"YulLiteral","src":"1789:2:33","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"1774:3:33","nodeType":"YulIdentifier","src":"1774:3:33"},"nativeSrc":"1774:18:33","nodeType":"YulFunctionCall","src":"1774:18:33"}],"functionName":{"name":"abi_encode_string","nativeSrc":"1748:17:33","nodeType":"YulIdentifier","src":"1748:17:33"},"nativeSrc":"1748:45:33","nodeType":"YulFunctionCall","src":"1748:45:33"},"variableNames":[{"name":"tail","nativeSrc":"1740:4:33","nodeType":"YulIdentifier","src":"1740:4:33"}]}]},"name":"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"1579:220:33","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"1669:9:33","nodeType":"YulTypedName","src":"1669:9:33","type":""},{"name":"value0","nativeSrc":"1680:6:33","nodeType":"YulTypedName","src":"1680:6:33","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"1691:4:33","nodeType":"YulTypedName","src":"1691:4:33","type":""}],"src":"1579:220:33"},{"body":{"nativeSrc":"1891:213:33","nodeType":"YulBlock","src":"1891:213:33","statements":[{"body":{"nativeSrc":"1937:16:33","nodeType":"YulBlock","src":"1937:16:33","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"1946:1:33","nodeType":"YulLiteral","src":"1946:1:33","type":"","value":"0"},{"kind":"number","nativeSrc":"1949:1:33","nodeType":"YulLiteral","src":"1949:1:33","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"1939:6:33","nodeType":"YulIdentifier","src":"1939:6:33"},"nativeSrc":"1939:12:33","nodeType":"YulFunctionCall","src":"1939:12:33"},"nativeSrc":"1939:12:33","nodeType":"YulExpressionStatement","src":"1939:12:33"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"1912:7:33","nodeType":"YulIdentifier","src":"1912:7:33"},{"name":"headStart","nativeSrc":"1921:9:33","nodeType":"YulIdentifier","src":"1921:9:33"}],"functionName":{"name":"sub","nativeSrc":"1908:3:33","nodeType":"YulIdentifier","src":"1908:3:33"},"nativeSrc":"1908:23:33","nodeType":"YulFunctionCall","src":"1908:23:33"},{"kind":"number","nativeSrc":"1933:2:33","nodeType":"YulLiteral","src":"1933:2:33","type":"","value":"64"}],"functionName":{"name":"slt","nativeSrc":"1904:3:33","nodeType":"YulIdentifier","src":"1904:3:33"},"nativeSrc":"1904:32:33","nodeType":"YulFunctionCall","src":"1904:32:33"},"nativeSrc":"1901:52:33","nodeType":"YulIf","src":"1901:52:33"},{"nativeSrc":"1962:39:33","nodeType":"YulAssignment","src":"1962:39:33","value":{"arguments":[{"name":"headStart","nativeSrc":"1991:9:33","nodeType":"YulIdentifier","src":"1991:9:33"}],"functionName":{"name":"abi_decode_address","nativeSrc":"1972:18:33","nodeType":"YulIdentifier","src":"1972:18:33"},"nativeSrc":"1972:29:33","nodeType":"YulFunctionCall","src":"1972:29:33"},"variableNames":[{"name":"value0","nativeSrc":"1962:6:33","nodeType":"YulIdentifier","src":"1962:6:33"}]},{"nativeSrc":"2010:14:33","nodeType":"YulVariableDeclaration","src":"2010:14:33","value":{"kind":"number","nativeSrc":"2023:1:33","nodeType":"YulLiteral","src":"2023:1:33","type":"","value":"0"},"variables":[{"name":"value","nativeSrc":"2014:5:33","nodeType":"YulTypedName","src":"2014:5:33","type":""}]},{"nativeSrc":"2033:41:33","nodeType":"YulAssignment","src":"2033:41:33","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"2059:9:33","nodeType":"YulIdentifier","src":"2059:9:33"},{"kind":"number","nativeSrc":"2070:2:33","nodeType":"YulLiteral","src":"2070:2:33","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"2055:3:33","nodeType":"YulIdentifier","src":"2055:3:33"},"nativeSrc":"2055:18:33","nodeType":"YulFunctionCall","src":"2055:18:33"}],"functionName":{"name":"calldataload","nativeSrc":"2042:12:33","nodeType":"YulIdentifier","src":"2042:12:33"},"nativeSrc":"2042:32:33","nodeType":"YulFunctionCall","src":"2042:32:33"},"variableNames":[{"name":"value","nativeSrc":"2033:5:33","nodeType":"YulIdentifier","src":"2033:5:33"}]},{"nativeSrc":"2083:15:33","nodeType":"YulAssignment","src":"2083:15:33","value":{"name":"value","nativeSrc":"2093:5:33","nodeType":"YulIdentifier","src":"2093:5:33"},"variableNames":[{"name":"value1","nativeSrc":"2083:6:33","nodeType":"YulIdentifier","src":"2083:6:33"}]}]},"name":"abi_decode_tuple_t_addresst_uint256","nativeSrc":"1804:300:33","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"1849:9:33","nodeType":"YulTypedName","src":"1849:9:33","type":""},{"name":"dataEnd","nativeSrc":"1860:7:33","nodeType":"YulTypedName","src":"1860:7:33","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"1872:6:33","nodeType":"YulTypedName","src":"1872:6:33","type":""},{"name":"value1","nativeSrc":"1880:6:33","nodeType":"YulTypedName","src":"1880:6:33","type":""}],"src":"1804:300:33"},{"body":{"nativeSrc":"2213:270:33","nodeType":"YulBlock","src":"2213:270:33","statements":[{"body":{"nativeSrc":"2259:16:33","nodeType":"YulBlock","src":"2259:16:33","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"2268:1:33","nodeType":"YulLiteral","src":"2268:1:33","type":"","value":"0"},{"kind":"number","nativeSrc":"2271:1:33","nodeType":"YulLiteral","src":"2271:1:33","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"2261:6:33","nodeType":"YulIdentifier","src":"2261:6:33"},"nativeSrc":"2261:12:33","nodeType":"YulFunctionCall","src":"2261:12:33"},"nativeSrc":"2261:12:33","nodeType":"YulExpressionStatement","src":"2261:12:33"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"2234:7:33","nodeType":"YulIdentifier","src":"2234:7:33"},{"name":"headStart","nativeSrc":"2243:9:33","nodeType":"YulIdentifier","src":"2243:9:33"}],"functionName":{"name":"sub","nativeSrc":"2230:3:33","nodeType":"YulIdentifier","src":"2230:3:33"},"nativeSrc":"2230:23:33","nodeType":"YulFunctionCall","src":"2230:23:33"},{"kind":"number","nativeSrc":"2255:2:33","nodeType":"YulLiteral","src":"2255:2:33","type":"","value":"96"}],"functionName":{"name":"slt","nativeSrc":"2226:3:33","nodeType":"YulIdentifier","src":"2226:3:33"},"nativeSrc":"2226:32:33","nodeType":"YulFunctionCall","src":"2226:32:33"},"nativeSrc":"2223:52:33","nodeType":"YulIf","src":"2223:52:33"},{"nativeSrc":"2284:39:33","nodeType":"YulAssignment","src":"2284:39:33","value":{"arguments":[{"name":"headStart","nativeSrc":"2313:9:33","nodeType":"YulIdentifier","src":"2313:9:33"}],"functionName":{"name":"abi_decode_address","nativeSrc":"2294:18:33","nodeType":"YulIdentifier","src":"2294:18:33"},"nativeSrc":"2294:29:33","nodeType":"YulFunctionCall","src":"2294:29:33"},"variableNames":[{"name":"value0","nativeSrc":"2284:6:33","nodeType":"YulIdentifier","src":"2284:6:33"}]},{"nativeSrc":"2332:48:33","nodeType":"YulAssignment","src":"2332:48:33","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"2365:9:33","nodeType":"YulIdentifier","src":"2365:9:33"},{"kind":"number","nativeSrc":"2376:2:33","nodeType":"YulLiteral","src":"2376:2:33","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"2361:3:33","nodeType":"YulIdentifier","src":"2361:3:33"},"nativeSrc":"2361:18:33","nodeType":"YulFunctionCall","src":"2361:18:33"}],"functionName":{"name":"abi_decode_address","nativeSrc":"2342:18:33","nodeType":"YulIdentifier","src":"2342:18:33"},"nativeSrc":"2342:38:33","nodeType":"YulFunctionCall","src":"2342:38:33"},"variableNames":[{"name":"value1","nativeSrc":"2332:6:33","nodeType":"YulIdentifier","src":"2332:6:33"}]},{"nativeSrc":"2389:14:33","nodeType":"YulVariableDeclaration","src":"2389:14:33","value":{"kind":"number","nativeSrc":"2402:1:33","nodeType":"YulLiteral","src":"2402:1:33","type":"","value":"0"},"variables":[{"name":"value","nativeSrc":"2393:5:33","nodeType":"YulTypedName","src":"2393:5:33","type":""}]},{"nativeSrc":"2412:41:33","nodeType":"YulAssignment","src":"2412:41:33","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"2438:9:33","nodeType":"YulIdentifier","src":"2438:9:33"},{"kind":"number","nativeSrc":"2449:2:33","nodeType":"YulLiteral","src":"2449:2:33","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"2434:3:33","nodeType":"YulIdentifier","src":"2434:3:33"},"nativeSrc":"2434:18:33","nodeType":"YulFunctionCall","src":"2434:18:33"}],"functionName":{"name":"calldataload","nativeSrc":"2421:12:33","nodeType":"YulIdentifier","src":"2421:12:33"},"nativeSrc":"2421:32:33","nodeType":"YulFunctionCall","src":"2421:32:33"},"variableNames":[{"name":"value","nativeSrc":"2412:5:33","nodeType":"YulIdentifier","src":"2412:5:33"}]},{"nativeSrc":"2462:15:33","nodeType":"YulAssignment","src":"2462:15:33","value":{"name":"value","nativeSrc":"2472:5:33","nodeType":"YulIdentifier","src":"2472:5:33"},"variableNames":[{"name":"value2","nativeSrc":"2462:6:33","nodeType":"YulIdentifier","src":"2462:6:33"}]}]},"name":"abi_decode_tuple_t_addresst_addresst_uint256","nativeSrc":"2109:374:33","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"2163:9:33","nodeType":"YulTypedName","src":"2163:9:33","type":""},{"name":"dataEnd","nativeSrc":"2174:7:33","nodeType":"YulTypedName","src":"2174:7:33","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"2186:6:33","nodeType":"YulTypedName","src":"2186:6:33","type":""},{"name":"value1","nativeSrc":"2194:6:33","nodeType":"YulTypedName","src":"2194:6:33","type":""},{"name":"value2","nativeSrc":"2202:6:33","nodeType":"YulTypedName","src":"2202:6:33","type":""}],"src":"2109:374:33"},{"body":{"nativeSrc":"2558:156:33","nodeType":"YulBlock","src":"2558:156:33","statements":[{"body":{"nativeSrc":"2604:16:33","nodeType":"YulBlock","src":"2604:16:33","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"2613:1:33","nodeType":"YulLiteral","src":"2613:1:33","type":"","value":"0"},{"kind":"number","nativeSrc":"2616:1:33","nodeType":"YulLiteral","src":"2616:1:33","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"2606:6:33","nodeType":"YulIdentifier","src":"2606:6:33"},"nativeSrc":"2606:12:33","nodeType":"YulFunctionCall","src":"2606:12:33"},"nativeSrc":"2606:12:33","nodeType":"YulExpressionStatement","src":"2606:12:33"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"2579:7:33","nodeType":"YulIdentifier","src":"2579:7:33"},{"name":"headStart","nativeSrc":"2588:9:33","nodeType":"YulIdentifier","src":"2588:9:33"}],"functionName":{"name":"sub","nativeSrc":"2575:3:33","nodeType":"YulIdentifier","src":"2575:3:33"},"nativeSrc":"2575:23:33","nodeType":"YulFunctionCall","src":"2575:23:33"},{"kind":"number","nativeSrc":"2600:2:33","nodeType":"YulLiteral","src":"2600:2:33","type":"","value":"32"}],"functionName":{"name":"slt","nativeSrc":"2571:3:33","nodeType":"YulIdentifier","src":"2571:3:33"},"nativeSrc":"2571:32:33","nodeType":"YulFunctionCall","src":"2571:32:33"},"nativeSrc":"2568:52:33","nodeType":"YulIf","src":"2568:52:33"},{"nativeSrc":"2629:14:33","nodeType":"YulVariableDeclaration","src":"2629:14:33","value":{"kind":"number","nativeSrc":"2642:1:33","nodeType":"YulLiteral","src":"2642:1:33","type":"","value":"0"},"variables":[{"name":"value","nativeSrc":"2633:5:33","nodeType":"YulTypedName","src":"2633:5:33","type":""}]},{"nativeSrc":"2652:32:33","nodeType":"YulAssignment","src":"2652:32:33","value":{"arguments":[{"name":"headStart","nativeSrc":"2674:9:33","nodeType":"YulIdentifier","src":"2674:9:33"}],"functionName":{"name":"calldataload","nativeSrc":"2661:12:33","nodeType":"YulIdentifier","src":"2661:12:33"},"nativeSrc":"2661:23:33","nodeType":"YulFunctionCall","src":"2661:23:33"},"variableNames":[{"name":"value","nativeSrc":"2652:5:33","nodeType":"YulIdentifier","src":"2652:5:33"}]},{"nativeSrc":"2693:15:33","nodeType":"YulAssignment","src":"2693:15:33","value":{"name":"value","nativeSrc":"2703:5:33","nodeType":"YulIdentifier","src":"2703:5:33"},"variableNames":[{"name":"value0","nativeSrc":"2693:6:33","nodeType":"YulIdentifier","src":"2693:6:33"}]}]},"name":"abi_decode_tuple_t_bytes32","nativeSrc":"2488:226:33","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"2524:9:33","nodeType":"YulTypedName","src":"2524:9:33","type":""},{"name":"dataEnd","nativeSrc":"2535:7:33","nodeType":"YulTypedName","src":"2535:7:33","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"2547:6:33","nodeType":"YulTypedName","src":"2547:6:33","type":""}],"src":"2488:226:33"},{"body":{"nativeSrc":"2820:76:33","nodeType":"YulBlock","src":"2820:76:33","statements":[{"nativeSrc":"2830:26:33","nodeType":"YulAssignment","src":"2830:26:33","value":{"arguments":[{"name":"headStart","nativeSrc":"2842:9:33","nodeType":"YulIdentifier","src":"2842:9:33"},{"kind":"number","nativeSrc":"2853:2:33","nodeType":"YulLiteral","src":"2853:2:33","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"2838:3:33","nodeType":"YulIdentifier","src":"2838:3:33"},"nativeSrc":"2838:18:33","nodeType":"YulFunctionCall","src":"2838:18:33"},"variableNames":[{"name":"tail","nativeSrc":"2830:4:33","nodeType":"YulIdentifier","src":"2830:4:33"}]},{"expression":{"arguments":[{"name":"headStart","nativeSrc":"2872:9:33","nodeType":"YulIdentifier","src":"2872:9:33"},{"name":"value0","nativeSrc":"2883:6:33","nodeType":"YulIdentifier","src":"2883:6:33"}],"functionName":{"name":"mstore","nativeSrc":"2865:6:33","nodeType":"YulIdentifier","src":"2865:6:33"},"nativeSrc":"2865:25:33","nodeType":"YulFunctionCall","src":"2865:25:33"},"nativeSrc":"2865:25:33","nodeType":"YulExpressionStatement","src":"2865:25:33"}]},"name":"abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed","nativeSrc":"2719:177:33","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"2789:9:33","nodeType":"YulTypedName","src":"2789:9:33","type":""},{"name":"value0","nativeSrc":"2800:6:33","nodeType":"YulTypedName","src":"2800:6:33","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"2811:4:33","nodeType":"YulTypedName","src":"2811:4:33","type":""}],"src":"2719:177:33"},{"body":{"nativeSrc":"2988:213:33","nodeType":"YulBlock","src":"2988:213:33","statements":[{"body":{"nativeSrc":"3034:16:33","nodeType":"YulBlock","src":"3034:16:33","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"3043:1:33","nodeType":"YulLiteral","src":"3043:1:33","type":"","value":"0"},{"kind":"number","nativeSrc":"3046:1:33","nodeType":"YulLiteral","src":"3046:1:33","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"3036:6:33","nodeType":"YulIdentifier","src":"3036:6:33"},"nativeSrc":"3036:12:33","nodeType":"YulFunctionCall","src":"3036:12:33"},"nativeSrc":"3036:12:33","nodeType":"YulExpressionStatement","src":"3036:12:33"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"3009:7:33","nodeType":"YulIdentifier","src":"3009:7:33"},{"name":"headStart","nativeSrc":"3018:9:33","nodeType":"YulIdentifier","src":"3018:9:33"}],"functionName":{"name":"sub","nativeSrc":"3005:3:33","nodeType":"YulIdentifier","src":"3005:3:33"},"nativeSrc":"3005:23:33","nodeType":"YulFunctionCall","src":"3005:23:33"},{"kind":"number","nativeSrc":"3030:2:33","nodeType":"YulLiteral","src":"3030:2:33","type":"","value":"64"}],"functionName":{"name":"slt","nativeSrc":"3001:3:33","nodeType":"YulIdentifier","src":"3001:3:33"},"nativeSrc":"3001:32:33","nodeType":"YulFunctionCall","src":"3001:32:33"},"nativeSrc":"2998:52:33","nodeType":"YulIf","src":"2998:52:33"},{"nativeSrc":"3059:14:33","nodeType":"YulVariableDeclaration","src":"3059:14:33","value":{"kind":"number","nativeSrc":"3072:1:33","nodeType":"YulLiteral","src":"3072:1:33","type":"","value":"0"},"variables":[{"name":"value","nativeSrc":"3063:5:33","nodeType":"YulTypedName","src":"3063:5:33","type":""}]},{"nativeSrc":"3082:32:33","nodeType":"YulAssignment","src":"3082:32:33","value":{"arguments":[{"name":"headStart","nativeSrc":"3104:9:33","nodeType":"YulIdentifier","src":"3104:9:33"}],"functionName":{"name":"calldataload","nativeSrc":"3091:12:33","nodeType":"YulIdentifier","src":"3091:12:33"},"nativeSrc":"3091:23:33","nodeType":"YulFunctionCall","src":"3091:23:33"},"variableNames":[{"name":"value","nativeSrc":"3082:5:33","nodeType":"YulIdentifier","src":"3082:5:33"}]},{"nativeSrc":"3123:15:33","nodeType":"YulAssignment","src":"3123:15:33","value":{"name":"value","nativeSrc":"3133:5:33","nodeType":"YulIdentifier","src":"3133:5:33"},"variableNames":[{"name":"value0","nativeSrc":"3123:6:33","nodeType":"YulIdentifier","src":"3123:6:33"}]},{"nativeSrc":"3147:48:33","nodeType":"YulAssignment","src":"3147:48:33","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"3180:9:33","nodeType":"YulIdentifier","src":"3180:9:33"},{"kind":"number","nativeSrc":"3191:2:33","nodeType":"YulLiteral","src":"3191:2:33","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"3176:3:33","nodeType":"YulIdentifier","src":"3176:3:33"},"nativeSrc":"3176:18:33","nodeType":"YulFunctionCall","src":"3176:18:33"}],"functionName":{"name":"abi_decode_address","nativeSrc":"3157:18:33","nodeType":"YulIdentifier","src":"3157:18:33"},"nativeSrc":"3157:38:33","nodeType":"YulFunctionCall","src":"3157:38:33"},"variableNames":[{"name":"value1","nativeSrc":"3147:6:33","nodeType":"YulIdentifier","src":"3147:6:33"}]}]},"name":"abi_decode_tuple_t_bytes32t_address","nativeSrc":"2901:300:33","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"2946:9:33","nodeType":"YulTypedName","src":"2946:9:33","type":""},{"name":"dataEnd","nativeSrc":"2957:7:33","nodeType":"YulTypedName","src":"2957:7:33","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"2969:6:33","nodeType":"YulTypedName","src":"2969:6:33","type":""},{"name":"value1","nativeSrc":"2977:6:33","nodeType":"YulTypedName","src":"2977:6:33","type":""}],"src":"2901:300:33"},{"body":{"nativeSrc":"3303:87:33","nodeType":"YulBlock","src":"3303:87:33","statements":[{"nativeSrc":"3313:26:33","nodeType":"YulAssignment","src":"3313:26:33","value":{"arguments":[{"name":"headStart","nativeSrc":"3325:9:33","nodeType":"YulIdentifier","src":"3325:9:33"},{"kind":"number","nativeSrc":"3336:2:33","nodeType":"YulLiteral","src":"3336:2:33","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"3321:3:33","nodeType":"YulIdentifier","src":"3321:3:33"},"nativeSrc":"3321:18:33","nodeType":"YulFunctionCall","src":"3321:18:33"},"variableNames":[{"name":"tail","nativeSrc":"3313:4:33","nodeType":"YulIdentifier","src":"3313:4:33"}]},{"expression":{"arguments":[{"name":"headStart","nativeSrc":"3355:9:33","nodeType":"YulIdentifier","src":"3355:9:33"},{"arguments":[{"name":"value0","nativeSrc":"3370:6:33","nodeType":"YulIdentifier","src":"3370:6:33"},{"kind":"number","nativeSrc":"3378:4:33","nodeType":"YulLiteral","src":"3378:4:33","type":"","value":"0xff"}],"functionName":{"name":"and","nativeSrc":"3366:3:33","nodeType":"YulIdentifier","src":"3366:3:33"},"nativeSrc":"3366:17:33","nodeType":"YulFunctionCall","src":"3366:17:33"}],"functionName":{"name":"mstore","nativeSrc":"3348:6:33","nodeType":"YulIdentifier","src":"3348:6:33"},"nativeSrc":"3348:36:33","nodeType":"YulFunctionCall","src":"3348:36:33"},"nativeSrc":"3348:36:33","nodeType":"YulExpressionStatement","src":"3348:36:33"}]},"name":"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed","nativeSrc":"3206:184:33","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"3272:9:33","nodeType":"YulTypedName","src":"3272:9:33","type":""},{"name":"value0","nativeSrc":"3283:6:33","nodeType":"YulTypedName","src":"3283:6:33","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"3294:4:33","nodeType":"YulTypedName","src":"3294:4:33","type":""}],"src":"3206:184:33"},{"body":{"nativeSrc":"3427:95:33","nodeType":"YulBlock","src":"3427:95:33","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"3444:1:33","nodeType":"YulLiteral","src":"3444:1:33","type":"","value":"0"},{"arguments":[{"kind":"number","nativeSrc":"3451:3:33","nodeType":"YulLiteral","src":"3451:3:33","type":"","value":"224"},{"kind":"number","nativeSrc":"3456:10:33","nodeType":"YulLiteral","src":"3456:10:33","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nativeSrc":"3447:3:33","nodeType":"YulIdentifier","src":"3447:3:33"},"nativeSrc":"3447:20:33","nodeType":"YulFunctionCall","src":"3447:20:33"}],"functionName":{"name":"mstore","nativeSrc":"3437:6:33","nodeType":"YulIdentifier","src":"3437:6:33"},"nativeSrc":"3437:31:33","nodeType":"YulFunctionCall","src":"3437:31:33"},"nativeSrc":"3437:31:33","nodeType":"YulExpressionStatement","src":"3437:31:33"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"3484:1:33","nodeType":"YulLiteral","src":"3484:1:33","type":"","value":"4"},{"kind":"number","nativeSrc":"3487:4:33","nodeType":"YulLiteral","src":"3487:4:33","type":"","value":"0x41"}],"functionName":{"name":"mstore","nativeSrc":"3477:6:33","nodeType":"YulIdentifier","src":"3477:6:33"},"nativeSrc":"3477:15:33","nodeType":"YulFunctionCall","src":"3477:15:33"},"nativeSrc":"3477:15:33","nodeType":"YulExpressionStatement","src":"3477:15:33"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"3508:1:33","nodeType":"YulLiteral","src":"3508:1:33","type":"","value":"0"},{"kind":"number","nativeSrc":"3511:4:33","nodeType":"YulLiteral","src":"3511:4:33","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"3501:6:33","nodeType":"YulIdentifier","src":"3501:6:33"},"nativeSrc":"3501:15:33","nodeType":"YulFunctionCall","src":"3501:15:33"},"nativeSrc":"3501:15:33","nodeType":"YulExpressionStatement","src":"3501:15:33"}]},"name":"panic_error_0x41","nativeSrc":"3395:127:33","nodeType":"YulFunctionDefinition","src":"3395:127:33"},{"body":{"nativeSrc":"3623:922:33","nodeType":"YulBlock","src":"3623:922:33","statements":[{"body":{"nativeSrc":"3669:16:33","nodeType":"YulBlock","src":"3669:16:33","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"3678:1:33","nodeType":"YulLiteral","src":"3678:1:33","type":"","value":"0"},{"kind":"number","nativeSrc":"3681:1:33","nodeType":"YulLiteral","src":"3681:1:33","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"3671:6:33","nodeType":"YulIdentifier","src":"3671:6:33"},"nativeSrc":"3671:12:33","nodeType":"YulFunctionCall","src":"3671:12:33"},"nativeSrc":"3671:12:33","nodeType":"YulExpressionStatement","src":"3671:12:33"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"3644:7:33","nodeType":"YulIdentifier","src":"3644:7:33"},{"name":"headStart","nativeSrc":"3653:9:33","nodeType":"YulIdentifier","src":"3653:9:33"}],"functionName":{"name":"sub","nativeSrc":"3640:3:33","nodeType":"YulIdentifier","src":"3640:3:33"},"nativeSrc":"3640:23:33","nodeType":"YulFunctionCall","src":"3640:23:33"},{"kind":"number","nativeSrc":"3665:2:33","nodeType":"YulLiteral","src":"3665:2:33","type":"","value":"64"}],"functionName":{"name":"slt","nativeSrc":"3636:3:33","nodeType":"YulIdentifier","src":"3636:3:33"},"nativeSrc":"3636:32:33","nodeType":"YulFunctionCall","src":"3636:32:33"},"nativeSrc":"3633:52:33","nodeType":"YulIf","src":"3633:52:33"},{"nativeSrc":"3694:39:33","nodeType":"YulAssignment","src":"3694:39:33","value":{"arguments":[{"name":"headStart","nativeSrc":"3723:9:33","nodeType":"YulIdentifier","src":"3723:9:33"}],"functionName":{"name":"abi_decode_address","nativeSrc":"3704:18:33","nodeType":"YulIdentifier","src":"3704:18:33"},"nativeSrc":"3704:29:33","nodeType":"YulFunctionCall","src":"3704:29:33"},"variableNames":[{"name":"value0","nativeSrc":"3694:6:33","nodeType":"YulIdentifier","src":"3694:6:33"}]},{"nativeSrc":"3742:46:33","nodeType":"YulVariableDeclaration","src":"3742:46:33","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"3773:9:33","nodeType":"YulIdentifier","src":"3773:9:33"},{"kind":"number","nativeSrc":"3784:2:33","nodeType":"YulLiteral","src":"3784:2:33","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"3769:3:33","nodeType":"YulIdentifier","src":"3769:3:33"},"nativeSrc":"3769:18:33","nodeType":"YulFunctionCall","src":"3769:18:33"}],"functionName":{"name":"calldataload","nativeSrc":"3756:12:33","nodeType":"YulIdentifier","src":"3756:12:33"},"nativeSrc":"3756:32:33","nodeType":"YulFunctionCall","src":"3756:32:33"},"variables":[{"name":"offset","nativeSrc":"3746:6:33","nodeType":"YulTypedName","src":"3746:6:33","type":""}]},{"body":{"nativeSrc":"3831:16:33","nodeType":"YulBlock","src":"3831:16:33","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"3840:1:33","nodeType":"YulLiteral","src":"3840:1:33","type":"","value":"0"},{"kind":"number","nativeSrc":"3843:1:33","nodeType":"YulLiteral","src":"3843:1:33","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"3833:6:33","nodeType":"YulIdentifier","src":"3833:6:33"},"nativeSrc":"3833:12:33","nodeType":"YulFunctionCall","src":"3833:12:33"},"nativeSrc":"3833:12:33","nodeType":"YulExpressionStatement","src":"3833:12:33"}]},"condition":{"arguments":[{"name":"offset","nativeSrc":"3803:6:33","nodeType":"YulIdentifier","src":"3803:6:33"},{"kind":"number","nativeSrc":"3811:18:33","nodeType":"YulLiteral","src":"3811:18:33","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nativeSrc":"3800:2:33","nodeType":"YulIdentifier","src":"3800:2:33"},"nativeSrc":"3800:30:33","nodeType":"YulFunctionCall","src":"3800:30:33"},"nativeSrc":"3797:50:33","nodeType":"YulIf","src":"3797:50:33"},{"nativeSrc":"3856:32:33","nodeType":"YulVariableDeclaration","src":"3856:32:33","value":{"arguments":[{"name":"headStart","nativeSrc":"3870:9:33","nodeType":"YulIdentifier","src":"3870:9:33"},{"name":"offset","nativeSrc":"3881:6:33","nodeType":"YulIdentifier","src":"3881:6:33"}],"functionName":{"name":"add","nativeSrc":"3866:3:33","nodeType":"YulIdentifier","src":"3866:3:33"},"nativeSrc":"3866:22:33","nodeType":"YulFunctionCall","src":"3866:22:33"},"variables":[{"name":"_1","nativeSrc":"3860:2:33","nodeType":"YulTypedName","src":"3860:2:33","type":""}]},{"body":{"nativeSrc":"3936:16:33","nodeType":"YulBlock","src":"3936:16:33","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"3945:1:33","nodeType":"YulLiteral","src":"3945:1:33","type":"","value":"0"},{"kind":"number","nativeSrc":"3948:1:33","nodeType":"YulLiteral","src":"3948:1:33","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"3938:6:33","nodeType":"YulIdentifier","src":"3938:6:33"},"nativeSrc":"3938:12:33","nodeType":"YulFunctionCall","src":"3938:12:33"},"nativeSrc":"3938:12:33","nodeType":"YulExpressionStatement","src":"3938:12:33"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"_1","nativeSrc":"3915:2:33","nodeType":"YulIdentifier","src":"3915:2:33"},{"kind":"number","nativeSrc":"3919:4:33","nodeType":"YulLiteral","src":"3919:4:33","type":"","value":"0x1f"}],"functionName":{"name":"add","nativeSrc":"3911:3:33","nodeType":"YulIdentifier","src":"3911:3:33"},"nativeSrc":"3911:13:33","nodeType":"YulFunctionCall","src":"3911:13:33"},{"name":"dataEnd","nativeSrc":"3926:7:33","nodeType":"YulIdentifier","src":"3926:7:33"}],"functionName":{"name":"slt","nativeSrc":"3907:3:33","nodeType":"YulIdentifier","src":"3907:3:33"},"nativeSrc":"3907:27:33","nodeType":"YulFunctionCall","src":"3907:27:33"}],"functionName":{"name":"iszero","nativeSrc":"3900:6:33","nodeType":"YulIdentifier","src":"3900:6:33"},"nativeSrc":"3900:35:33","nodeType":"YulFunctionCall","src":"3900:35:33"},"nativeSrc":"3897:55:33","nodeType":"YulIf","src":"3897:55:33"},{"nativeSrc":"3961:30:33","nodeType":"YulVariableDeclaration","src":"3961:30:33","value":{"arguments":[{"name":"_1","nativeSrc":"3988:2:33","nodeType":"YulIdentifier","src":"3988:2:33"}],"functionName":{"name":"calldataload","nativeSrc":"3975:12:33","nodeType":"YulIdentifier","src":"3975:12:33"},"nativeSrc":"3975:16:33","nodeType":"YulFunctionCall","src":"3975:16:33"},"variables":[{"name":"length","nativeSrc":"3965:6:33","nodeType":"YulTypedName","src":"3965:6:33","type":""}]},{"body":{"nativeSrc":"4034:22:33","nodeType":"YulBlock","src":"4034:22:33","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nativeSrc":"4036:16:33","nodeType":"YulIdentifier","src":"4036:16:33"},"nativeSrc":"4036:18:33","nodeType":"YulFunctionCall","src":"4036:18:33"},"nativeSrc":"4036:18:33","nodeType":"YulExpressionStatement","src":"4036:18:33"}]},"condition":{"arguments":[{"name":"length","nativeSrc":"4006:6:33","nodeType":"YulIdentifier","src":"4006:6:33"},{"kind":"number","nativeSrc":"4014:18:33","nodeType":"YulLiteral","src":"4014:18:33","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nativeSrc":"4003:2:33","nodeType":"YulIdentifier","src":"4003:2:33"},"nativeSrc":"4003:30:33","nodeType":"YulFunctionCall","src":"4003:30:33"},"nativeSrc":"4000:56:33","nodeType":"YulIf","src":"4000:56:33"},{"nativeSrc":"4065:23:33","nodeType":"YulVariableDeclaration","src":"4065:23:33","value":{"arguments":[{"kind":"number","nativeSrc":"4085:2:33","nodeType":"YulLiteral","src":"4085:2:33","type":"","value":"64"}],"functionName":{"name":"mload","nativeSrc":"4079:5:33","nodeType":"YulIdentifier","src":"4079:5:33"},"nativeSrc":"4079:9:33","nodeType":"YulFunctionCall","src":"4079:9:33"},"variables":[{"name":"memPtr","nativeSrc":"4069:6:33","nodeType":"YulTypedName","src":"4069:6:33","type":""}]},{"nativeSrc":"4097:85:33","nodeType":"YulVariableDeclaration","src":"4097:85:33","value":{"arguments":[{"name":"memPtr","nativeSrc":"4119:6:33","nodeType":"YulIdentifier","src":"4119:6:33"},{"arguments":[{"arguments":[{"arguments":[{"arguments":[{"name":"length","nativeSrc":"4143:6:33","nodeType":"YulIdentifier","src":"4143:6:33"},{"kind":"number","nativeSrc":"4151:4:33","nodeType":"YulLiteral","src":"4151:4:33","type":"","value":"0x1f"}],"functionName":{"name":"add","nativeSrc":"4139:3:33","nodeType":"YulIdentifier","src":"4139:3:33"},"nativeSrc":"4139:17:33","nodeType":"YulFunctionCall","src":"4139:17:33"},{"arguments":[{"kind":"number","nativeSrc":"4162:2:33","nodeType":"YulLiteral","src":"4162:2:33","type":"","value":"31"}],"functionName":{"name":"not","nativeSrc":"4158:3:33","nodeType":"YulIdentifier","src":"4158:3:33"},"nativeSrc":"4158:7:33","nodeType":"YulFunctionCall","src":"4158:7:33"}],"functionName":{"name":"and","nativeSrc":"4135:3:33","nodeType":"YulIdentifier","src":"4135:3:33"},"nativeSrc":"4135:31:33","nodeType":"YulFunctionCall","src":"4135:31:33"},{"kind":"number","nativeSrc":"4168:2:33","nodeType":"YulLiteral","src":"4168:2:33","type":"","value":"63"}],"functionName":{"name":"add","nativeSrc":"4131:3:33","nodeType":"YulIdentifier","src":"4131:3:33"},"nativeSrc":"4131:40:33","nodeType":"YulFunctionCall","src":"4131:40:33"},{"arguments":[{"kind":"number","nativeSrc":"4177:2:33","nodeType":"YulLiteral","src":"4177:2:33","type":"","value":"31"}],"functionName":{"name":"not","nativeSrc":"4173:3:33","nodeType":"YulIdentifier","src":"4173:3:33"},"nativeSrc":"4173:7:33","nodeType":"YulFunctionCall","src":"4173:7:33"}],"functionName":{"name":"and","nativeSrc":"4127:3:33","nodeType":"YulIdentifier","src":"4127:3:33"},"nativeSrc":"4127:54:33","nodeType":"YulFunctionCall","src":"4127:54:33"}],"functionName":{"name":"add","nativeSrc":"4115:3:33","nodeType":"YulIdentifier","src":"4115:3:33"},"nativeSrc":"4115:67:33","nodeType":"YulFunctionCall","src":"4115:67:33"},"variables":[{"name":"newFreePtr","nativeSrc":"4101:10:33","nodeType":"YulTypedName","src":"4101:10:33","type":""}]},{"body":{"nativeSrc":"4257:22:33","nodeType":"YulBlock","src":"4257:22:33","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nativeSrc":"4259:16:33","nodeType":"YulIdentifier","src":"4259:16:33"},"nativeSrc":"4259:18:33","nodeType":"YulFunctionCall","src":"4259:18:33"},"nativeSrc":"4259:18:33","nodeType":"YulExpressionStatement","src":"4259:18:33"}]},"condition":{"arguments":[{"arguments":[{"name":"newFreePtr","nativeSrc":"4200:10:33","nodeType":"YulIdentifier","src":"4200:10:33"},{"kind":"number","nativeSrc":"4212:18:33","nodeType":"YulLiteral","src":"4212:18:33","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nativeSrc":"4197:2:33","nodeType":"YulIdentifier","src":"4197:2:33"},"nativeSrc":"4197:34:33","nodeType":"YulFunctionCall","src":"4197:34:33"},{"arguments":[{"name":"newFreePtr","nativeSrc":"4236:10:33","nodeType":"YulIdentifier","src":"4236:10:33"},{"name":"memPtr","nativeSrc":"4248:6:33","nodeType":"YulIdentifier","src":"4248:6:33"}],"functionName":{"name":"lt","nativeSrc":"4233:2:33","nodeType":"YulIdentifier","src":"4233:2:33"},"nativeSrc":"4233:22:33","nodeType":"YulFunctionCall","src":"4233:22:33"}],"functionName":{"name":"or","nativeSrc":"4194:2:33","nodeType":"YulIdentifier","src":"4194:2:33"},"nativeSrc":"4194:62:33","nodeType":"YulFunctionCall","src":"4194:62:33"},"nativeSrc":"4191:88:33","nodeType":"YulIf","src":"4191:88:33"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"4295:2:33","nodeType":"YulLiteral","src":"4295:2:33","type":"","value":"64"},{"name":"newFreePtr","nativeSrc":"4299:10:33","nodeType":"YulIdentifier","src":"4299:10:33"}],"functionName":{"name":"mstore","nativeSrc":"4288:6:33","nodeType":"YulIdentifier","src":"4288:6:33"},"nativeSrc":"4288:22:33","nodeType":"YulFunctionCall","src":"4288:22:33"},"nativeSrc":"4288:22:33","nodeType":"YulExpressionStatement","src":"4288:22:33"},{"expression":{"arguments":[{"name":"memPtr","nativeSrc":"4326:6:33","nodeType":"YulIdentifier","src":"4326:6:33"},{"name":"length","nativeSrc":"4334:6:33","nodeType":"YulIdentifier","src":"4334:6:33"}],"functionName":{"name":"mstore","nativeSrc":"4319:6:33","nodeType":"YulIdentifier","src":"4319:6:33"},"nativeSrc":"4319:22:33","nodeType":"YulFunctionCall","src":"4319:22:33"},"nativeSrc":"4319:22:33","nodeType":"YulExpressionStatement","src":"4319:22:33"},{"body":{"nativeSrc":"4391:16:33","nodeType":"YulBlock","src":"4391:16:33","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"4400:1:33","nodeType":"YulLiteral","src":"4400:1:33","type":"","value":"0"},{"kind":"number","nativeSrc":"4403:1:33","nodeType":"YulLiteral","src":"4403:1:33","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"4393:6:33","nodeType":"YulIdentifier","src":"4393:6:33"},"nativeSrc":"4393:12:33","nodeType":"YulFunctionCall","src":"4393:12:33"},"nativeSrc":"4393:12:33","nodeType":"YulExpressionStatement","src":"4393:12:33"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"_1","nativeSrc":"4364:2:33","nodeType":"YulIdentifier","src":"4364:2:33"},{"name":"length","nativeSrc":"4368:6:33","nodeType":"YulIdentifier","src":"4368:6:33"}],"functionName":{"name":"add","nativeSrc":"4360:3:33","nodeType":"YulIdentifier","src":"4360:3:33"},"nativeSrc":"4360:15:33","nodeType":"YulFunctionCall","src":"4360:15:33"},{"kind":"number","nativeSrc":"4377:2:33","nodeType":"YulLiteral","src":"4377:2:33","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"4356:3:33","nodeType":"YulIdentifier","src":"4356:3:33"},"nativeSrc":"4356:24:33","nodeType":"YulFunctionCall","src":"4356:24:33"},{"name":"dataEnd","nativeSrc":"4382:7:33","nodeType":"YulIdentifier","src":"4382:7:33"}],"functionName":{"name":"gt","nativeSrc":"4353:2:33","nodeType":"YulIdentifier","src":"4353:2:33"},"nativeSrc":"4353:37:33","nodeType":"YulFunctionCall","src":"4353:37:33"},"nativeSrc":"4350:57:33","nodeType":"YulIf","src":"4350:57:33"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nativeSrc":"4433:6:33","nodeType":"YulIdentifier","src":"4433:6:33"},{"kind":"number","nativeSrc":"4441:2:33","nodeType":"YulLiteral","src":"4441:2:33","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"4429:3:33","nodeType":"YulIdentifier","src":"4429:3:33"},"nativeSrc":"4429:15:33","nodeType":"YulFunctionCall","src":"4429:15:33"},{"arguments":[{"name":"_1","nativeSrc":"4450:2:33","nodeType":"YulIdentifier","src":"4450:2:33"},{"kind":"number","nativeSrc":"4454:2:33","nodeType":"YulLiteral","src":"4454:2:33","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"4446:3:33","nodeType":"YulIdentifier","src":"4446:3:33"},"nativeSrc":"4446:11:33","nodeType":"YulFunctionCall","src":"4446:11:33"},{"name":"length","nativeSrc":"4459:6:33","nodeType":"YulIdentifier","src":"4459:6:33"}],"functionName":{"name":"calldatacopy","nativeSrc":"4416:12:33","nodeType":"YulIdentifier","src":"4416:12:33"},"nativeSrc":"4416:50:33","nodeType":"YulFunctionCall","src":"4416:50:33"},"nativeSrc":"4416:50:33","nodeType":"YulExpressionStatement","src":"4416:50:33"},{"expression":{"arguments":[{"arguments":[{"arguments":[{"name":"memPtr","nativeSrc":"4490:6:33","nodeType":"YulIdentifier","src":"4490:6:33"},{"name":"length","nativeSrc":"4498:6:33","nodeType":"YulIdentifier","src":"4498:6:33"}],"functionName":{"name":"add","nativeSrc":"4486:3:33","nodeType":"YulIdentifier","src":"4486:3:33"},"nativeSrc":"4486:19:33","nodeType":"YulFunctionCall","src":"4486:19:33"},{"kind":"number","nativeSrc":"4507:2:33","nodeType":"YulLiteral","src":"4507:2:33","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"4482:3:33","nodeType":"YulIdentifier","src":"4482:3:33"},"nativeSrc":"4482:28:33","nodeType":"YulFunctionCall","src":"4482:28:33"},{"kind":"number","nativeSrc":"4512:1:33","nodeType":"YulLiteral","src":"4512:1:33","type":"","value":"0"}],"functionName":{"name":"mstore","nativeSrc":"4475:6:33","nodeType":"YulIdentifier","src":"4475:6:33"},"nativeSrc":"4475:39:33","nodeType":"YulFunctionCall","src":"4475:39:33"},"nativeSrc":"4475:39:33","nodeType":"YulExpressionStatement","src":"4475:39:33"},{"nativeSrc":"4523:16:33","nodeType":"YulAssignment","src":"4523:16:33","value":{"name":"memPtr","nativeSrc":"4533:6:33","nodeType":"YulIdentifier","src":"4533:6:33"},"variableNames":[{"name":"value1","nativeSrc":"4523:6:33","nodeType":"YulIdentifier","src":"4523:6:33"}]}]},"name":"abi_decode_tuple_t_addresst_bytes_memory_ptr","nativeSrc":"3527:1018:33","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"3581:9:33","nodeType":"YulTypedName","src":"3581:9:33","type":""},{"name":"dataEnd","nativeSrc":"3592:7:33","nodeType":"YulTypedName","src":"3592:7:33","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"3604:6:33","nodeType":"YulTypedName","src":"3604:6:33","type":""},{"name":"value1","nativeSrc":"3612:6:33","nodeType":"YulTypedName","src":"3612:6:33","type":""}],"src":"3527:1018:33"},{"body":{"nativeSrc":"4620:156:33","nodeType":"YulBlock","src":"4620:156:33","statements":[{"body":{"nativeSrc":"4666:16:33","nodeType":"YulBlock","src":"4666:16:33","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"4675:1:33","nodeType":"YulLiteral","src":"4675:1:33","type":"","value":"0"},{"kind":"number","nativeSrc":"4678:1:33","nodeType":"YulLiteral","src":"4678:1:33","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"4668:6:33","nodeType":"YulIdentifier","src":"4668:6:33"},"nativeSrc":"4668:12:33","nodeType":"YulFunctionCall","src":"4668:12:33"},"nativeSrc":"4668:12:33","nodeType":"YulExpressionStatement","src":"4668:12:33"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"4641:7:33","nodeType":"YulIdentifier","src":"4641:7:33"},{"name":"headStart","nativeSrc":"4650:9:33","nodeType":"YulIdentifier","src":"4650:9:33"}],"functionName":{"name":"sub","nativeSrc":"4637:3:33","nodeType":"YulIdentifier","src":"4637:3:33"},"nativeSrc":"4637:23:33","nodeType":"YulFunctionCall","src":"4637:23:33"},{"kind":"number","nativeSrc":"4662:2:33","nodeType":"YulLiteral","src":"4662:2:33","type":"","value":"32"}],"functionName":{"name":"slt","nativeSrc":"4633:3:33","nodeType":"YulIdentifier","src":"4633:3:33"},"nativeSrc":"4633:32:33","nodeType":"YulFunctionCall","src":"4633:32:33"},"nativeSrc":"4630:52:33","nodeType":"YulIf","src":"4630:52:33"},{"nativeSrc":"4691:14:33","nodeType":"YulVariableDeclaration","src":"4691:14:33","value":{"kind":"number","nativeSrc":"4704:1:33","nodeType":"YulLiteral","src":"4704:1:33","type":"","value":"0"},"variables":[{"name":"value","nativeSrc":"4695:5:33","nodeType":"YulTypedName","src":"4695:5:33","type":""}]},{"nativeSrc":"4714:32:33","nodeType":"YulAssignment","src":"4714:32:33","value":{"arguments":[{"name":"headStart","nativeSrc":"4736:9:33","nodeType":"YulIdentifier","src":"4736:9:33"}],"functionName":{"name":"calldataload","nativeSrc":"4723:12:33","nodeType":"YulIdentifier","src":"4723:12:33"},"nativeSrc":"4723:23:33","nodeType":"YulFunctionCall","src":"4723:23:33"},"variableNames":[{"name":"value","nativeSrc":"4714:5:33","nodeType":"YulIdentifier","src":"4714:5:33"}]},{"nativeSrc":"4755:15:33","nodeType":"YulAssignment","src":"4755:15:33","value":{"name":"value","nativeSrc":"4765:5:33","nodeType":"YulIdentifier","src":"4765:5:33"},"variableNames":[{"name":"value0","nativeSrc":"4755:6:33","nodeType":"YulIdentifier","src":"4755:6:33"}]}]},"name":"abi_decode_tuple_t_uint256","nativeSrc":"4550:226:33","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"4586:9:33","nodeType":"YulTypedName","src":"4586:9:33","type":""},{"name":"dataEnd","nativeSrc":"4597:7:33","nodeType":"YulTypedName","src":"4597:7:33","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"4609:6:33","nodeType":"YulTypedName","src":"4609:6:33","type":""}],"src":"4550:226:33"},{"body":{"nativeSrc":"5138:881:33","nodeType":"YulBlock","src":"5138:881:33","statements":[{"expression":{"arguments":[{"name":"headStart","nativeSrc":"5155:9:33","nodeType":"YulIdentifier","src":"5155:9:33"},{"arguments":[{"name":"value0","nativeSrc":"5170:6:33","nodeType":"YulIdentifier","src":"5170:6:33"},{"arguments":[{"kind":"number","nativeSrc":"5182:3:33","nodeType":"YulLiteral","src":"5182:3:33","type":"","value":"248"},{"kind":"number","nativeSrc":"5187:3:33","nodeType":"YulLiteral","src":"5187:3:33","type":"","value":"255"}],"functionName":{"name":"shl","nativeSrc":"5178:3:33","nodeType":"YulIdentifier","src":"5178:3:33"},"nativeSrc":"5178:13:33","nodeType":"YulFunctionCall","src":"5178:13:33"}],"functionName":{"name":"and","nativeSrc":"5166:3:33","nodeType":"YulIdentifier","src":"5166:3:33"},"nativeSrc":"5166:26:33","nodeType":"YulFunctionCall","src":"5166:26:33"}],"functionName":{"name":"mstore","nativeSrc":"5148:6:33","nodeType":"YulIdentifier","src":"5148:6:33"},"nativeSrc":"5148:45:33","nodeType":"YulFunctionCall","src":"5148:45:33"},"nativeSrc":"5148:45:33","nodeType":"YulExpressionStatement","src":"5148:45:33"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"5213:9:33","nodeType":"YulIdentifier","src":"5213:9:33"},{"kind":"number","nativeSrc":"5224:2:33","nodeType":"YulLiteral","src":"5224:2:33","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"5209:3:33","nodeType":"YulIdentifier","src":"5209:3:33"},"nativeSrc":"5209:18:33","nodeType":"YulFunctionCall","src":"5209:18:33"},{"kind":"number","nativeSrc":"5229:3:33","nodeType":"YulLiteral","src":"5229:3:33","type":"","value":"224"}],"functionName":{"name":"mstore","nativeSrc":"5202:6:33","nodeType":"YulIdentifier","src":"5202:6:33"},"nativeSrc":"5202:31:33","nodeType":"YulFunctionCall","src":"5202:31:33"},"nativeSrc":"5202:31:33","nodeType":"YulExpressionStatement","src":"5202:31:33"},{"nativeSrc":"5242:60:33","nodeType":"YulVariableDeclaration","src":"5242:60:33","value":{"arguments":[{"name":"value1","nativeSrc":"5274:6:33","nodeType":"YulIdentifier","src":"5274:6:33"},{"arguments":[{"name":"headStart","nativeSrc":"5286:9:33","nodeType":"YulIdentifier","src":"5286:9:33"},{"kind":"number","nativeSrc":"5297:3:33","nodeType":"YulLiteral","src":"5297:3:33","type":"","value":"224"}],"functionName":{"name":"add","nativeSrc":"5282:3:33","nodeType":"YulIdentifier","src":"5282:3:33"},"nativeSrc":"5282:19:33","nodeType":"YulFunctionCall","src":"5282:19:33"}],"functionName":{"name":"abi_encode_string","nativeSrc":"5256:17:33","nodeType":"YulIdentifier","src":"5256:17:33"},"nativeSrc":"5256:46:33","nodeType":"YulFunctionCall","src":"5256:46:33"},"variables":[{"name":"tail_1","nativeSrc":"5246:6:33","nodeType":"YulTypedName","src":"5246:6:33","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"5322:9:33","nodeType":"YulIdentifier","src":"5322:9:33"},{"kind":"number","nativeSrc":"5333:2:33","nodeType":"YulLiteral","src":"5333:2:33","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"5318:3:33","nodeType":"YulIdentifier","src":"5318:3:33"},"nativeSrc":"5318:18:33","nodeType":"YulFunctionCall","src":"5318:18:33"},{"arguments":[{"name":"tail_1","nativeSrc":"5342:6:33","nodeType":"YulIdentifier","src":"5342:6:33"},{"name":"headStart","nativeSrc":"5350:9:33","nodeType":"YulIdentifier","src":"5350:9:33"}],"functionName":{"name":"sub","nativeSrc":"5338:3:33","nodeType":"YulIdentifier","src":"5338:3:33"},"nativeSrc":"5338:22:33","nodeType":"YulFunctionCall","src":"5338:22:33"}],"functionName":{"name":"mstore","nativeSrc":"5311:6:33","nodeType":"YulIdentifier","src":"5311:6:33"},"nativeSrc":"5311:50:33","nodeType":"YulFunctionCall","src":"5311:50:33"},"nativeSrc":"5311:50:33","nodeType":"YulExpressionStatement","src":"5311:50:33"},{"nativeSrc":"5370:47:33","nodeType":"YulVariableDeclaration","src":"5370:47:33","value":{"arguments":[{"name":"value2","nativeSrc":"5402:6:33","nodeType":"YulIdentifier","src":"5402:6:33"},{"name":"tail_1","nativeSrc":"5410:6:33","nodeType":"YulIdentifier","src":"5410:6:33"}],"functionName":{"name":"abi_encode_string","nativeSrc":"5384:17:33","nodeType":"YulIdentifier","src":"5384:17:33"},"nativeSrc":"5384:33:33","nodeType":"YulFunctionCall","src":"5384:33:33"},"variables":[{"name":"tail_2","nativeSrc":"5374:6:33","nodeType":"YulTypedName","src":"5374:6:33","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"5437:9:33","nodeType":"YulIdentifier","src":"5437:9:33"},{"kind":"number","nativeSrc":"5448:2:33","nodeType":"YulLiteral","src":"5448:2:33","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"5433:3:33","nodeType":"YulIdentifier","src":"5433:3:33"},"nativeSrc":"5433:18:33","nodeType":"YulFunctionCall","src":"5433:18:33"},{"name":"value3","nativeSrc":"5453:6:33","nodeType":"YulIdentifier","src":"5453:6:33"}],"functionName":{"name":"mstore","nativeSrc":"5426:6:33","nodeType":"YulIdentifier","src":"5426:6:33"},"nativeSrc":"5426:34:33","nodeType":"YulFunctionCall","src":"5426:34:33"},"nativeSrc":"5426:34:33","nodeType":"YulExpressionStatement","src":"5426:34:33"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"5480:9:33","nodeType":"YulIdentifier","src":"5480:9:33"},{"kind":"number","nativeSrc":"5491:3:33","nodeType":"YulLiteral","src":"5491:3:33","type":"","value":"128"}],"functionName":{"name":"add","nativeSrc":"5476:3:33","nodeType":"YulIdentifier","src":"5476:3:33"},"nativeSrc":"5476:19:33","nodeType":"YulFunctionCall","src":"5476:19:33"},{"arguments":[{"name":"value4","nativeSrc":"5501:6:33","nodeType":"YulIdentifier","src":"5501:6:33"},{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"5517:3:33","nodeType":"YulLiteral","src":"5517:3:33","type":"","value":"160"},{"kind":"number","nativeSrc":"5522:1:33","nodeType":"YulLiteral","src":"5522:1:33","type":"","value":"1"}],"functionName":{"name":"shl","nativeSrc":"5513:3:33","nodeType":"YulIdentifier","src":"5513:3:33"},"nativeSrc":"5513:11:33","nodeType":"YulFunctionCall","src":"5513:11:33"},{"kind":"number","nativeSrc":"5526:1:33","nodeType":"YulLiteral","src":"5526:1:33","type":"","value":"1"}],"functionName":{"name":"sub","nativeSrc":"5509:3:33","nodeType":"YulIdentifier","src":"5509:3:33"},"nativeSrc":"5509:19:33","nodeType":"YulFunctionCall","src":"5509:19:33"}],"functionName":{"name":"and","nativeSrc":"5497:3:33","nodeType":"YulIdentifier","src":"5497:3:33"},"nativeSrc":"5497:32:33","nodeType":"YulFunctionCall","src":"5497:32:33"}],"functionName":{"name":"mstore","nativeSrc":"5469:6:33","nodeType":"YulIdentifier","src":"5469:6:33"},"nativeSrc":"5469:61:33","nodeType":"YulFunctionCall","src":"5469:61:33"},"nativeSrc":"5469:61:33","nodeType":"YulExpressionStatement","src":"5469:61:33"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"5550:9:33","nodeType":"YulIdentifier","src":"5550:9:33"},{"kind":"number","nativeSrc":"5561:3:33","nodeType":"YulLiteral","src":"5561:3:33","type":"","value":"160"}],"functionName":{"name":"add","nativeSrc":"5546:3:33","nodeType":"YulIdentifier","src":"5546:3:33"},"nativeSrc":"5546:19:33","nodeType":"YulFunctionCall","src":"5546:19:33"},{"name":"value5","nativeSrc":"5567:6:33","nodeType":"YulIdentifier","src":"5567:6:33"}],"functionName":{"name":"mstore","nativeSrc":"5539:6:33","nodeType":"YulIdentifier","src":"5539:6:33"},"nativeSrc":"5539:35:33","nodeType":"YulFunctionCall","src":"5539:35:33"},"nativeSrc":"5539:35:33","nodeType":"YulExpressionStatement","src":"5539:35:33"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"5594:9:33","nodeType":"YulIdentifier","src":"5594:9:33"},{"kind":"number","nativeSrc":"5605:3:33","nodeType":"YulLiteral","src":"5605:3:33","type":"","value":"192"}],"functionName":{"name":"add","nativeSrc":"5590:3:33","nodeType":"YulIdentifier","src":"5590:3:33"},"nativeSrc":"5590:19:33","nodeType":"YulFunctionCall","src":"5590:19:33"},{"arguments":[{"name":"tail_2","nativeSrc":"5615:6:33","nodeType":"YulIdentifier","src":"5615:6:33"},{"name":"headStart","nativeSrc":"5623:9:33","nodeType":"YulIdentifier","src":"5623:9:33"}],"functionName":{"name":"sub","nativeSrc":"5611:3:33","nodeType":"YulIdentifier","src":"5611:3:33"},"nativeSrc":"5611:22:33","nodeType":"YulFunctionCall","src":"5611:22:33"}],"functionName":{"name":"mstore","nativeSrc":"5583:6:33","nodeType":"YulIdentifier","src":"5583:6:33"},"nativeSrc":"5583:51:33","nodeType":"YulFunctionCall","src":"5583:51:33"},"nativeSrc":"5583:51:33","nodeType":"YulExpressionStatement","src":"5583:51:33"},{"nativeSrc":"5643:17:33","nodeType":"YulVariableDeclaration","src":"5643:17:33","value":{"name":"tail_2","nativeSrc":"5654:6:33","nodeType":"YulIdentifier","src":"5654:6:33"},"variables":[{"name":"pos","nativeSrc":"5647:3:33","nodeType":"YulTypedName","src":"5647:3:33","type":""}]},{"nativeSrc":"5669:27:33","nodeType":"YulVariableDeclaration","src":"5669:27:33","value":{"arguments":[{"name":"value6","nativeSrc":"5689:6:33","nodeType":"YulIdentifier","src":"5689:6:33"}],"functionName":{"name":"mload","nativeSrc":"5683:5:33","nodeType":"YulIdentifier","src":"5683:5:33"},"nativeSrc":"5683:13:33","nodeType":"YulFunctionCall","src":"5683:13:33"},"variables":[{"name":"length","nativeSrc":"5673:6:33","nodeType":"YulTypedName","src":"5673:6:33","type":""}]},{"expression":{"arguments":[{"name":"tail_2","nativeSrc":"5712:6:33","nodeType":"YulIdentifier","src":"5712:6:33"},{"name":"length","nativeSrc":"5720:6:33","nodeType":"YulIdentifier","src":"5720:6:33"}],"functionName":{"name":"mstore","nativeSrc":"5705:6:33","nodeType":"YulIdentifier","src":"5705:6:33"},"nativeSrc":"5705:22:33","nodeType":"YulFunctionCall","src":"5705:22:33"},"nativeSrc":"5705:22:33","nodeType":"YulExpressionStatement","src":"5705:22:33"},{"nativeSrc":"5736:22:33","nodeType":"YulAssignment","src":"5736:22:33","value":{"arguments":[{"name":"tail_2","nativeSrc":"5747:6:33","nodeType":"YulIdentifier","src":"5747:6:33"},{"kind":"number","nativeSrc":"5755:2:33","nodeType":"YulLiteral","src":"5755:2:33","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"5743:3:33","nodeType":"YulIdentifier","src":"5743:3:33"},"nativeSrc":"5743:15:33","nodeType":"YulFunctionCall","src":"5743:15:33"},"variableNames":[{"name":"pos","nativeSrc":"5736:3:33","nodeType":"YulIdentifier","src":"5736:3:33"}]},{"nativeSrc":"5767:29:33","nodeType":"YulVariableDeclaration","src":"5767:29:33","value":{"arguments":[{"name":"value6","nativeSrc":"5785:6:33","nodeType":"YulIdentifier","src":"5785:6:33"},{"kind":"number","nativeSrc":"5793:2:33","nodeType":"YulLiteral","src":"5793:2:33","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"5781:3:33","nodeType":"YulIdentifier","src":"5781:3:33"},"nativeSrc":"5781:15:33","nodeType":"YulFunctionCall","src":"5781:15:33"},"variables":[{"name":"srcPtr","nativeSrc":"5771:6:33","nodeType":"YulTypedName","src":"5771:6:33","type":""}]},{"nativeSrc":"5805:10:33","nodeType":"YulVariableDeclaration","src":"5805:10:33","value":{"kind":"number","nativeSrc":"5814:1:33","nodeType":"YulLiteral","src":"5814:1:33","type":"","value":"0"},"variables":[{"name":"i","nativeSrc":"5809:1:33","nodeType":"YulTypedName","src":"5809:1:33","type":""}]},{"body":{"nativeSrc":"5873:120:33","nodeType":"YulBlock","src":"5873:120:33","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"5894:3:33","nodeType":"YulIdentifier","src":"5894:3:33"},{"arguments":[{"name":"srcPtr","nativeSrc":"5905:6:33","nodeType":"YulIdentifier","src":"5905:6:33"}],"functionName":{"name":"mload","nativeSrc":"5899:5:33","nodeType":"YulIdentifier","src":"5899:5:33"},"nativeSrc":"5899:13:33","nodeType":"YulFunctionCall","src":"5899:13:33"}],"functionName":{"name":"mstore","nativeSrc":"5887:6:33","nodeType":"YulIdentifier","src":"5887:6:33"},"nativeSrc":"5887:26:33","nodeType":"YulFunctionCall","src":"5887:26:33"},"nativeSrc":"5887:26:33","nodeType":"YulExpressionStatement","src":"5887:26:33"},{"nativeSrc":"5926:19:33","nodeType":"YulAssignment","src":"5926:19:33","value":{"arguments":[{"name":"pos","nativeSrc":"5937:3:33","nodeType":"YulIdentifier","src":"5937:3:33"},{"kind":"number","nativeSrc":"5942:2:33","nodeType":"YulLiteral","src":"5942:2:33","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"5933:3:33","nodeType":"YulIdentifier","src":"5933:3:33"},"nativeSrc":"5933:12:33","nodeType":"YulFunctionCall","src":"5933:12:33"},"variableNames":[{"name":"pos","nativeSrc":"5926:3:33","nodeType":"YulIdentifier","src":"5926:3:33"}]},{"nativeSrc":"5958:25:33","nodeType":"YulAssignment","src":"5958:25:33","value":{"arguments":[{"name":"srcPtr","nativeSrc":"5972:6:33","nodeType":"YulIdentifier","src":"5972:6:33"},{"kind":"number","nativeSrc":"5980:2:33","nodeType":"YulLiteral","src":"5980:2:33","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"5968:3:33","nodeType":"YulIdentifier","src":"5968:3:33"},"nativeSrc":"5968:15:33","nodeType":"YulFunctionCall","src":"5968:15:33"},"variableNames":[{"name":"srcPtr","nativeSrc":"5958:6:33","nodeType":"YulIdentifier","src":"5958:6:33"}]}]},"condition":{"arguments":[{"name":"i","nativeSrc":"5835:1:33","nodeType":"YulIdentifier","src":"5835:1:33"},{"name":"length","nativeSrc":"5838:6:33","nodeType":"YulIdentifier","src":"5838:6:33"}],"functionName":{"name":"lt","nativeSrc":"5832:2:33","nodeType":"YulIdentifier","src":"5832:2:33"},"nativeSrc":"5832:13:33","nodeType":"YulFunctionCall","src":"5832:13:33"},"nativeSrc":"5824:169:33","nodeType":"YulForLoop","post":{"nativeSrc":"5846:18:33","nodeType":"YulBlock","src":"5846:18:33","statements":[{"nativeSrc":"5848:14:33","nodeType":"YulAssignment","src":"5848:14:33","value":{"arguments":[{"name":"i","nativeSrc":"5857:1:33","nodeType":"YulIdentifier","src":"5857:1:33"},{"kind":"number","nativeSrc":"5860:1:33","nodeType":"YulLiteral","src":"5860:1:33","type":"","value":"1"}],"functionName":{"name":"add","nativeSrc":"5853:3:33","nodeType":"YulIdentifier","src":"5853:3:33"},"nativeSrc":"5853:9:33","nodeType":"YulFunctionCall","src":"5853:9:33"},"variableNames":[{"name":"i","nativeSrc":"5848:1:33","nodeType":"YulIdentifier","src":"5848:1:33"}]}]},"pre":{"nativeSrc":"5828:3:33","nodeType":"YulBlock","src":"5828:3:33","statements":[]},"src":"5824:169:33"},{"nativeSrc":"6002:11:33","nodeType":"YulAssignment","src":"6002:11:33","value":{"name":"pos","nativeSrc":"6010:3:33","nodeType":"YulIdentifier","src":"6010:3:33"},"variableNames":[{"name":"tail","nativeSrc":"6002:4:33","nodeType":"YulIdentifier","src":"6002:4:33"}]}]},"name":"abi_encode_tuple_t_bytes1_t_string_memory_ptr_t_string_memory_ptr_t_uint256_t_address_t_bytes32_t_array$_t_uint256_$dyn_memory_ptr__to_t_bytes1_t_string_memory_ptr_t_string_memory_ptr_t_uint256_t_address_t_bytes32_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed","nativeSrc":"4781:1238:33","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"5059:9:33","nodeType":"YulTypedName","src":"5059:9:33","type":""},{"name":"value6","nativeSrc":"5070:6:33","nodeType":"YulTypedName","src":"5070:6:33","type":""},{"name":"value5","nativeSrc":"5078:6:33","nodeType":"YulTypedName","src":"5078:6:33","type":""},{"name":"value4","nativeSrc":"5086:6:33","nodeType":"YulTypedName","src":"5086:6:33","type":""},{"name":"value3","nativeSrc":"5094:6:33","nodeType":"YulTypedName","src":"5094:6:33","type":""},{"name":"value2","nativeSrc":"5102:6:33","nodeType":"YulTypedName","src":"5102:6:33","type":""},{"name":"value1","nativeSrc":"5110:6:33","nodeType":"YulTypedName","src":"5110:6:33","type":""},{"name":"value0","nativeSrc":"5118:6:33","nodeType":"YulTypedName","src":"5118:6:33","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"5129:4:33","nodeType":"YulTypedName","src":"5129:4:33","type":""}],"src":"4781:1238:33"},{"body":{"nativeSrc":"6108:283:33","nodeType":"YulBlock","src":"6108:283:33","statements":[{"body":{"nativeSrc":"6157:16:33","nodeType":"YulBlock","src":"6157:16:33","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"6166:1:33","nodeType":"YulLiteral","src":"6166:1:33","type":"","value":"0"},{"kind":"number","nativeSrc":"6169:1:33","nodeType":"YulLiteral","src":"6169:1:33","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"6159:6:33","nodeType":"YulIdentifier","src":"6159:6:33"},"nativeSrc":"6159:12:33","nodeType":"YulFunctionCall","src":"6159:12:33"},"nativeSrc":"6159:12:33","nodeType":"YulExpressionStatement","src":"6159:12:33"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nativeSrc":"6136:6:33","nodeType":"YulIdentifier","src":"6136:6:33"},{"kind":"number","nativeSrc":"6144:4:33","nodeType":"YulLiteral","src":"6144:4:33","type":"","value":"0x1f"}],"functionName":{"name":"add","nativeSrc":"6132:3:33","nodeType":"YulIdentifier","src":"6132:3:33"},"nativeSrc":"6132:17:33","nodeType":"YulFunctionCall","src":"6132:17:33"},{"name":"end","nativeSrc":"6151:3:33","nodeType":"YulIdentifier","src":"6151:3:33"}],"functionName":{"name":"slt","nativeSrc":"6128:3:33","nodeType":"YulIdentifier","src":"6128:3:33"},"nativeSrc":"6128:27:33","nodeType":"YulFunctionCall","src":"6128:27:33"}],"functionName":{"name":"iszero","nativeSrc":"6121:6:33","nodeType":"YulIdentifier","src":"6121:6:33"},"nativeSrc":"6121:35:33","nodeType":"YulFunctionCall","src":"6121:35:33"},"nativeSrc":"6118:55:33","nodeType":"YulIf","src":"6118:55:33"},{"nativeSrc":"6182:30:33","nodeType":"YulAssignment","src":"6182:30:33","value":{"arguments":[{"name":"offset","nativeSrc":"6205:6:33","nodeType":"YulIdentifier","src":"6205:6:33"}],"functionName":{"name":"calldataload","nativeSrc":"6192:12:33","nodeType":"YulIdentifier","src":"6192:12:33"},"nativeSrc":"6192:20:33","nodeType":"YulFunctionCall","src":"6192:20:33"},"variableNames":[{"name":"length","nativeSrc":"6182:6:33","nodeType":"YulIdentifier","src":"6182:6:33"}]},{"body":{"nativeSrc":"6255:16:33","nodeType":"YulBlock","src":"6255:16:33","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"6264:1:33","nodeType":"YulLiteral","src":"6264:1:33","type":"","value":"0"},{"kind":"number","nativeSrc":"6267:1:33","nodeType":"YulLiteral","src":"6267:1:33","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"6257:6:33","nodeType":"YulIdentifier","src":"6257:6:33"},"nativeSrc":"6257:12:33","nodeType":"YulFunctionCall","src":"6257:12:33"},"nativeSrc":"6257:12:33","nodeType":"YulExpressionStatement","src":"6257:12:33"}]},"condition":{"arguments":[{"name":"length","nativeSrc":"6227:6:33","nodeType":"YulIdentifier","src":"6227:6:33"},{"kind":"number","nativeSrc":"6235:18:33","nodeType":"YulLiteral","src":"6235:18:33","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nativeSrc":"6224:2:33","nodeType":"YulIdentifier","src":"6224:2:33"},"nativeSrc":"6224:30:33","nodeType":"YulFunctionCall","src":"6224:30:33"},"nativeSrc":"6221:50:33","nodeType":"YulIf","src":"6221:50:33"},{"nativeSrc":"6280:29:33","nodeType":"YulAssignment","src":"6280:29:33","value":{"arguments":[{"name":"offset","nativeSrc":"6296:6:33","nodeType":"YulIdentifier","src":"6296:6:33"},{"kind":"number","nativeSrc":"6304:4:33","nodeType":"YulLiteral","src":"6304:4:33","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"6292:3:33","nodeType":"YulIdentifier","src":"6292:3:33"},"nativeSrc":"6292:17:33","nodeType":"YulFunctionCall","src":"6292:17:33"},"variableNames":[{"name":"arrayPos","nativeSrc":"6280:8:33","nodeType":"YulIdentifier","src":"6280:8:33"}]},{"body":{"nativeSrc":"6369:16:33","nodeType":"YulBlock","src":"6369:16:33","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"6378:1:33","nodeType":"YulLiteral","src":"6378:1:33","type":"","value":"0"},{"kind":"number","nativeSrc":"6381:1:33","nodeType":"YulLiteral","src":"6381:1:33","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"6371:6:33","nodeType":"YulIdentifier","src":"6371:6:33"},"nativeSrc":"6371:12:33","nodeType":"YulFunctionCall","src":"6371:12:33"},"nativeSrc":"6371:12:33","nodeType":"YulExpressionStatement","src":"6371:12:33"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nativeSrc":"6332:6:33","nodeType":"YulIdentifier","src":"6332:6:33"},{"arguments":[{"kind":"number","nativeSrc":"6344:1:33","nodeType":"YulLiteral","src":"6344:1:33","type":"","value":"5"},{"name":"length","nativeSrc":"6347:6:33","nodeType":"YulIdentifier","src":"6347:6:33"}],"functionName":{"name":"shl","nativeSrc":"6340:3:33","nodeType":"YulIdentifier","src":"6340:3:33"},"nativeSrc":"6340:14:33","nodeType":"YulFunctionCall","src":"6340:14:33"}],"functionName":{"name":"add","nativeSrc":"6328:3:33","nodeType":"YulIdentifier","src":"6328:3:33"},"nativeSrc":"6328:27:33","nodeType":"YulFunctionCall","src":"6328:27:33"},{"kind":"number","nativeSrc":"6357:4:33","nodeType":"YulLiteral","src":"6357:4:33","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"6324:3:33","nodeType":"YulIdentifier","src":"6324:3:33"},"nativeSrc":"6324:38:33","nodeType":"YulFunctionCall","src":"6324:38:33"},{"name":"end","nativeSrc":"6364:3:33","nodeType":"YulIdentifier","src":"6364:3:33"}],"functionName":{"name":"gt","nativeSrc":"6321:2:33","nodeType":"YulIdentifier","src":"6321:2:33"},"nativeSrc":"6321:47:33","nodeType":"YulFunctionCall","src":"6321:47:33"},"nativeSrc":"6318:67:33","nodeType":"YulIf","src":"6318:67:33"}]},"name":"abi_decode_array_address_dyn_calldata","nativeSrc":"6024:367:33","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"6071:6:33","nodeType":"YulTypedName","src":"6071:6:33","type":""},{"name":"end","nativeSrc":"6079:3:33","nodeType":"YulTypedName","src":"6079:3:33","type":""}],"returnVariables":[{"name":"arrayPos","nativeSrc":"6087:8:33","nodeType":"YulTypedName","src":"6087:8:33","type":""},{"name":"length","nativeSrc":"6097:6:33","nodeType":"YulTypedName","src":"6097:6:33","type":""}],"src":"6024:367:33"},{"body":{"nativeSrc":"6553:611:33","nodeType":"YulBlock","src":"6553:611:33","statements":[{"body":{"nativeSrc":"6599:16:33","nodeType":"YulBlock","src":"6599:16:33","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"6608:1:33","nodeType":"YulLiteral","src":"6608:1:33","type":"","value":"0"},{"kind":"number","nativeSrc":"6611:1:33","nodeType":"YulLiteral","src":"6611:1:33","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"6601:6:33","nodeType":"YulIdentifier","src":"6601:6:33"},"nativeSrc":"6601:12:33","nodeType":"YulFunctionCall","src":"6601:12:33"},"nativeSrc":"6601:12:33","nodeType":"YulExpressionStatement","src":"6601:12:33"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"6574:7:33","nodeType":"YulIdentifier","src":"6574:7:33"},{"name":"headStart","nativeSrc":"6583:9:33","nodeType":"YulIdentifier","src":"6583:9:33"}],"functionName":{"name":"sub","nativeSrc":"6570:3:33","nodeType":"YulIdentifier","src":"6570:3:33"},"nativeSrc":"6570:23:33","nodeType":"YulFunctionCall","src":"6570:23:33"},{"kind":"number","nativeSrc":"6595:2:33","nodeType":"YulLiteral","src":"6595:2:33","type":"","value":"64"}],"functionName":{"name":"slt","nativeSrc":"6566:3:33","nodeType":"YulIdentifier","src":"6566:3:33"},"nativeSrc":"6566:32:33","nodeType":"YulFunctionCall","src":"6566:32:33"},"nativeSrc":"6563:52:33","nodeType":"YulIf","src":"6563:52:33"},{"nativeSrc":"6624:37:33","nodeType":"YulVariableDeclaration","src":"6624:37:33","value":{"arguments":[{"name":"headStart","nativeSrc":"6651:9:33","nodeType":"YulIdentifier","src":"6651:9:33"}],"functionName":{"name":"calldataload","nativeSrc":"6638:12:33","nodeType":"YulIdentifier","src":"6638:12:33"},"nativeSrc":"6638:23:33","nodeType":"YulFunctionCall","src":"6638:23:33"},"variables":[{"name":"offset","nativeSrc":"6628:6:33","nodeType":"YulTypedName","src":"6628:6:33","type":""}]},{"body":{"nativeSrc":"6704:16:33","nodeType":"YulBlock","src":"6704:16:33","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"6713:1:33","nodeType":"YulLiteral","src":"6713:1:33","type":"","value":"0"},{"kind":"number","nativeSrc":"6716:1:33","nodeType":"YulLiteral","src":"6716:1:33","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"6706:6:33","nodeType":"YulIdentifier","src":"6706:6:33"},"nativeSrc":"6706:12:33","nodeType":"YulFunctionCall","src":"6706:12:33"},"nativeSrc":"6706:12:33","nodeType":"YulExpressionStatement","src":"6706:12:33"}]},"condition":{"arguments":[{"name":"offset","nativeSrc":"6676:6:33","nodeType":"YulIdentifier","src":"6676:6:33"},{"kind":"number","nativeSrc":"6684:18:33","nodeType":"YulLiteral","src":"6684:18:33","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nativeSrc":"6673:2:33","nodeType":"YulIdentifier","src":"6673:2:33"},"nativeSrc":"6673:30:33","nodeType":"YulFunctionCall","src":"6673:30:33"},"nativeSrc":"6670:50:33","nodeType":"YulIf","src":"6670:50:33"},{"nativeSrc":"6729:96:33","nodeType":"YulVariableDeclaration","src":"6729:96:33","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"6797:9:33","nodeType":"YulIdentifier","src":"6797:9:33"},{"name":"offset","nativeSrc":"6808:6:33","nodeType":"YulIdentifier","src":"6808:6:33"}],"functionName":{"name":"add","nativeSrc":"6793:3:33","nodeType":"YulIdentifier","src":"6793:3:33"},"nativeSrc":"6793:22:33","nodeType":"YulFunctionCall","src":"6793:22:33"},{"name":"dataEnd","nativeSrc":"6817:7:33","nodeType":"YulIdentifier","src":"6817:7:33"}],"functionName":{"name":"abi_decode_array_address_dyn_calldata","nativeSrc":"6755:37:33","nodeType":"YulIdentifier","src":"6755:37:33"},"nativeSrc":"6755:70:33","nodeType":"YulFunctionCall","src":"6755:70:33"},"variables":[{"name":"value0_1","nativeSrc":"6733:8:33","nodeType":"YulTypedName","src":"6733:8:33","type":""},{"name":"value1_1","nativeSrc":"6743:8:33","nodeType":"YulTypedName","src":"6743:8:33","type":""}]},{"nativeSrc":"6834:18:33","nodeType":"YulAssignment","src":"6834:18:33","value":{"name":"value0_1","nativeSrc":"6844:8:33","nodeType":"YulIdentifier","src":"6844:8:33"},"variableNames":[{"name":"value0","nativeSrc":"6834:6:33","nodeType":"YulIdentifier","src":"6834:6:33"}]},{"nativeSrc":"6861:18:33","nodeType":"YulAssignment","src":"6861:18:33","value":{"name":"value1_1","nativeSrc":"6871:8:33","nodeType":"YulIdentifier","src":"6871:8:33"},"variableNames":[{"name":"value1","nativeSrc":"6861:6:33","nodeType":"YulIdentifier","src":"6861:6:33"}]},{"nativeSrc":"6888:48:33","nodeType":"YulVariableDeclaration","src":"6888:48:33","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"6921:9:33","nodeType":"YulIdentifier","src":"6921:9:33"},{"kind":"number","nativeSrc":"6932:2:33","nodeType":"YulLiteral","src":"6932:2:33","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"6917:3:33","nodeType":"YulIdentifier","src":"6917:3:33"},"nativeSrc":"6917:18:33","nodeType":"YulFunctionCall","src":"6917:18:33"}],"functionName":{"name":"calldataload","nativeSrc":"6904:12:33","nodeType":"YulIdentifier","src":"6904:12:33"},"nativeSrc":"6904:32:33","nodeType":"YulFunctionCall","src":"6904:32:33"},"variables":[{"name":"offset_1","nativeSrc":"6892:8:33","nodeType":"YulTypedName","src":"6892:8:33","type":""}]},{"body":{"nativeSrc":"6981:16:33","nodeType":"YulBlock","src":"6981:16:33","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"6990:1:33","nodeType":"YulLiteral","src":"6990:1:33","type":"","value":"0"},{"kind":"number","nativeSrc":"6993:1:33","nodeType":"YulLiteral","src":"6993:1:33","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"6983:6:33","nodeType":"YulIdentifier","src":"6983:6:33"},"nativeSrc":"6983:12:33","nodeType":"YulFunctionCall","src":"6983:12:33"},"nativeSrc":"6983:12:33","nodeType":"YulExpressionStatement","src":"6983:12:33"}]},"condition":{"arguments":[{"name":"offset_1","nativeSrc":"6951:8:33","nodeType":"YulIdentifier","src":"6951:8:33"},{"kind":"number","nativeSrc":"6961:18:33","nodeType":"YulLiteral","src":"6961:18:33","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nativeSrc":"6948:2:33","nodeType":"YulIdentifier","src":"6948:2:33"},"nativeSrc":"6948:32:33","nodeType":"YulFunctionCall","src":"6948:32:33"},"nativeSrc":"6945:52:33","nodeType":"YulIf","src":"6945:52:33"},{"nativeSrc":"7006:98:33","nodeType":"YulVariableDeclaration","src":"7006:98:33","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"7074:9:33","nodeType":"YulIdentifier","src":"7074:9:33"},{"name":"offset_1","nativeSrc":"7085:8:33","nodeType":"YulIdentifier","src":"7085:8:33"}],"functionName":{"name":"add","nativeSrc":"7070:3:33","nodeType":"YulIdentifier","src":"7070:3:33"},"nativeSrc":"7070:24:33","nodeType":"YulFunctionCall","src":"7070:24:33"},{"name":"dataEnd","nativeSrc":"7096:7:33","nodeType":"YulIdentifier","src":"7096:7:33"}],"functionName":{"name":"abi_decode_array_address_dyn_calldata","nativeSrc":"7032:37:33","nodeType":"YulIdentifier","src":"7032:37:33"},"nativeSrc":"7032:72:33","nodeType":"YulFunctionCall","src":"7032:72:33"},"variables":[{"name":"value2_1","nativeSrc":"7010:8:33","nodeType":"YulTypedName","src":"7010:8:33","type":""},{"name":"value3_1","nativeSrc":"7020:8:33","nodeType":"YulTypedName","src":"7020:8:33","type":""}]},{"nativeSrc":"7113:18:33","nodeType":"YulAssignment","src":"7113:18:33","value":{"name":"value2_1","nativeSrc":"7123:8:33","nodeType":"YulIdentifier","src":"7123:8:33"},"variableNames":[{"name":"value2","nativeSrc":"7113:6:33","nodeType":"YulIdentifier","src":"7113:6:33"}]},{"nativeSrc":"7140:18:33","nodeType":"YulAssignment","src":"7140:18:33","value":{"name":"value3_1","nativeSrc":"7150:8:33","nodeType":"YulIdentifier","src":"7150:8:33"},"variableNames":[{"name":"value3","nativeSrc":"7140:6:33","nodeType":"YulIdentifier","src":"7140:6:33"}]}]},"name":"abi_decode_tuple_t_array$_t_address_$dyn_calldata_ptrt_array$_t_uint256_$dyn_calldata_ptr","nativeSrc":"6396:768:33","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"6495:9:33","nodeType":"YulTypedName","src":"6495:9:33","type":""},{"name":"dataEnd","nativeSrc":"6506:7:33","nodeType":"YulTypedName","src":"6506:7:33","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"6518:6:33","nodeType":"YulTypedName","src":"6518:6:33","type":""},{"name":"value1","nativeSrc":"6526:6:33","nodeType":"YulTypedName","src":"6526:6:33","type":""},{"name":"value2","nativeSrc":"6534:6:33","nodeType":"YulTypedName","src":"6534:6:33","type":""},{"name":"value3","nativeSrc":"6542:6:33","nodeType":"YulTypedName","src":"6542:6:33","type":""}],"src":"6396:768:33"},{"body":{"nativeSrc":"7270:102:33","nodeType":"YulBlock","src":"7270:102:33","statements":[{"nativeSrc":"7280:26:33","nodeType":"YulAssignment","src":"7280:26:33","value":{"arguments":[{"name":"headStart","nativeSrc":"7292:9:33","nodeType":"YulIdentifier","src":"7292:9:33"},{"kind":"number","nativeSrc":"7303:2:33","nodeType":"YulLiteral","src":"7303:2:33","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"7288:3:33","nodeType":"YulIdentifier","src":"7288:3:33"},"nativeSrc":"7288:18:33","nodeType":"YulFunctionCall","src":"7288:18:33"},"variableNames":[{"name":"tail","nativeSrc":"7280:4:33","nodeType":"YulIdentifier","src":"7280:4:33"}]},{"expression":{"arguments":[{"name":"headStart","nativeSrc":"7322:9:33","nodeType":"YulIdentifier","src":"7322:9:33"},{"arguments":[{"name":"value0","nativeSrc":"7337:6:33","nodeType":"YulIdentifier","src":"7337:6:33"},{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"7353:3:33","nodeType":"YulLiteral","src":"7353:3:33","type":"","value":"160"},{"kind":"number","nativeSrc":"7358:1:33","nodeType":"YulLiteral","src":"7358:1:33","type":"","value":"1"}],"functionName":{"name":"shl","nativeSrc":"7349:3:33","nodeType":"YulIdentifier","src":"7349:3:33"},"nativeSrc":"7349:11:33","nodeType":"YulFunctionCall","src":"7349:11:33"},{"kind":"number","nativeSrc":"7362:1:33","nodeType":"YulLiteral","src":"7362:1:33","type":"","value":"1"}],"functionName":{"name":"sub","nativeSrc":"7345:3:33","nodeType":"YulIdentifier","src":"7345:3:33"},"nativeSrc":"7345:19:33","nodeType":"YulFunctionCall","src":"7345:19:33"}],"functionName":{"name":"and","nativeSrc":"7333:3:33","nodeType":"YulIdentifier","src":"7333:3:33"},"nativeSrc":"7333:32:33","nodeType":"YulFunctionCall","src":"7333:32:33"}],"functionName":{"name":"mstore","nativeSrc":"7315:6:33","nodeType":"YulIdentifier","src":"7315:6:33"},"nativeSrc":"7315:51:33","nodeType":"YulFunctionCall","src":"7315:51:33"},"nativeSrc":"7315:51:33","nodeType":"YulExpressionStatement","src":"7315:51:33"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nativeSrc":"7169:203:33","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"7239:9:33","nodeType":"YulTypedName","src":"7239:9:33","type":""},{"name":"value0","nativeSrc":"7250:6:33","nodeType":"YulTypedName","src":"7250:6:33","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"7261:4:33","nodeType":"YulTypedName","src":"7261:4:33","type":""}],"src":"7169:203:33"},{"body":{"nativeSrc":"7547:733:33","nodeType":"YulBlock","src":"7547:733:33","statements":[{"body":{"nativeSrc":"7594:16:33","nodeType":"YulBlock","src":"7594:16:33","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"7603:1:33","nodeType":"YulLiteral","src":"7603:1:33","type":"","value":"0"},{"kind":"number","nativeSrc":"7606:1:33","nodeType":"YulLiteral","src":"7606:1:33","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"7596:6:33","nodeType":"YulIdentifier","src":"7596:6:33"},"nativeSrc":"7596:12:33","nodeType":"YulFunctionCall","src":"7596:12:33"},"nativeSrc":"7596:12:33","nodeType":"YulExpressionStatement","src":"7596:12:33"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"7568:7:33","nodeType":"YulIdentifier","src":"7568:7:33"},{"name":"headStart","nativeSrc":"7577:9:33","nodeType":"YulIdentifier","src":"7577:9:33"}],"functionName":{"name":"sub","nativeSrc":"7564:3:33","nodeType":"YulIdentifier","src":"7564:3:33"},"nativeSrc":"7564:23:33","nodeType":"YulFunctionCall","src":"7564:23:33"},{"kind":"number","nativeSrc":"7589:3:33","nodeType":"YulLiteral","src":"7589:3:33","type":"","value":"224"}],"functionName":{"name":"slt","nativeSrc":"7560:3:33","nodeType":"YulIdentifier","src":"7560:3:33"},"nativeSrc":"7560:33:33","nodeType":"YulFunctionCall","src":"7560:33:33"},"nativeSrc":"7557:53:33","nodeType":"YulIf","src":"7557:53:33"},{"nativeSrc":"7619:39:33","nodeType":"YulAssignment","src":"7619:39:33","value":{"arguments":[{"name":"headStart","nativeSrc":"7648:9:33","nodeType":"YulIdentifier","src":"7648:9:33"}],"functionName":{"name":"abi_decode_address","nativeSrc":"7629:18:33","nodeType":"YulIdentifier","src":"7629:18:33"},"nativeSrc":"7629:29:33","nodeType":"YulFunctionCall","src":"7629:29:33"},"variableNames":[{"name":"value0","nativeSrc":"7619:6:33","nodeType":"YulIdentifier","src":"7619:6:33"}]},{"nativeSrc":"7667:48:33","nodeType":"YulAssignment","src":"7667:48:33","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"7700:9:33","nodeType":"YulIdentifier","src":"7700:9:33"},{"kind":"number","nativeSrc":"7711:2:33","nodeType":"YulLiteral","src":"7711:2:33","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"7696:3:33","nodeType":"YulIdentifier","src":"7696:3:33"},"nativeSrc":"7696:18:33","nodeType":"YulFunctionCall","src":"7696:18:33"}],"functionName":{"name":"abi_decode_address","nativeSrc":"7677:18:33","nodeType":"YulIdentifier","src":"7677:18:33"},"nativeSrc":"7677:38:33","nodeType":"YulFunctionCall","src":"7677:38:33"},"variableNames":[{"name":"value1","nativeSrc":"7667:6:33","nodeType":"YulIdentifier","src":"7667:6:33"}]},{"nativeSrc":"7724:14:33","nodeType":"YulVariableDeclaration","src":"7724:14:33","value":{"kind":"number","nativeSrc":"7737:1:33","nodeType":"YulLiteral","src":"7737:1:33","type":"","value":"0"},"variables":[{"name":"value","nativeSrc":"7728:5:33","nodeType":"YulTypedName","src":"7728:5:33","type":""}]},{"nativeSrc":"7747:41:33","nodeType":"YulAssignment","src":"7747:41:33","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"7773:9:33","nodeType":"YulIdentifier","src":"7773:9:33"},{"kind":"number","nativeSrc":"7784:2:33","nodeType":"YulLiteral","src":"7784:2:33","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"7769:3:33","nodeType":"YulIdentifier","src":"7769:3:33"},"nativeSrc":"7769:18:33","nodeType":"YulFunctionCall","src":"7769:18:33"}],"functionName":{"name":"calldataload","nativeSrc":"7756:12:33","nodeType":"YulIdentifier","src":"7756:12:33"},"nativeSrc":"7756:32:33","nodeType":"YulFunctionCall","src":"7756:32:33"},"variableNames":[{"name":"value","nativeSrc":"7747:5:33","nodeType":"YulIdentifier","src":"7747:5:33"}]},{"nativeSrc":"7797:15:33","nodeType":"YulAssignment","src":"7797:15:33","value":{"name":"value","nativeSrc":"7807:5:33","nodeType":"YulIdentifier","src":"7807:5:33"},"variableNames":[{"name":"value2","nativeSrc":"7797:6:33","nodeType":"YulIdentifier","src":"7797:6:33"}]},{"nativeSrc":"7821:16:33","nodeType":"YulVariableDeclaration","src":"7821:16:33","value":{"kind":"number","nativeSrc":"7836:1:33","nodeType":"YulLiteral","src":"7836:1:33","type":"","value":"0"},"variables":[{"name":"value_1","nativeSrc":"7825:7:33","nodeType":"YulTypedName","src":"7825:7:33","type":""}]},{"nativeSrc":"7846:43:33","nodeType":"YulAssignment","src":"7846:43:33","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"7874:9:33","nodeType":"YulIdentifier","src":"7874:9:33"},{"kind":"number","nativeSrc":"7885:2:33","nodeType":"YulLiteral","src":"7885:2:33","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"7870:3:33","nodeType":"YulIdentifier","src":"7870:3:33"},"nativeSrc":"7870:18:33","nodeType":"YulFunctionCall","src":"7870:18:33"}],"functionName":{"name":"calldataload","nativeSrc":"7857:12:33","nodeType":"YulIdentifier","src":"7857:12:33"},"nativeSrc":"7857:32:33","nodeType":"YulFunctionCall","src":"7857:32:33"},"variableNames":[{"name":"value_1","nativeSrc":"7846:7:33","nodeType":"YulIdentifier","src":"7846:7:33"}]},{"nativeSrc":"7898:17:33","nodeType":"YulAssignment","src":"7898:17:33","value":{"name":"value_1","nativeSrc":"7908:7:33","nodeType":"YulIdentifier","src":"7908:7:33"},"variableNames":[{"name":"value3","nativeSrc":"7898:6:33","nodeType":"YulIdentifier","src":"7898:6:33"}]},{"nativeSrc":"7924:48:33","nodeType":"YulVariableDeclaration","src":"7924:48:33","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"7956:9:33","nodeType":"YulIdentifier","src":"7956:9:33"},{"kind":"number","nativeSrc":"7967:3:33","nodeType":"YulLiteral","src":"7967:3:33","type":"","value":"128"}],"functionName":{"name":"add","nativeSrc":"7952:3:33","nodeType":"YulIdentifier","src":"7952:3:33"},"nativeSrc":"7952:19:33","nodeType":"YulFunctionCall","src":"7952:19:33"}],"functionName":{"name":"calldataload","nativeSrc":"7939:12:33","nodeType":"YulIdentifier","src":"7939:12:33"},"nativeSrc":"7939:33:33","nodeType":"YulFunctionCall","src":"7939:33:33"},"variables":[{"name":"value_2","nativeSrc":"7928:7:33","nodeType":"YulTypedName","src":"7928:7:33","type":""}]},{"body":{"nativeSrc":"8024:16:33","nodeType":"YulBlock","src":"8024:16:33","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"8033:1:33","nodeType":"YulLiteral","src":"8033:1:33","type":"","value":"0"},{"kind":"number","nativeSrc":"8036:1:33","nodeType":"YulLiteral","src":"8036:1:33","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"8026:6:33","nodeType":"YulIdentifier","src":"8026:6:33"},"nativeSrc":"8026:12:33","nodeType":"YulFunctionCall","src":"8026:12:33"},"nativeSrc":"8026:12:33","nodeType":"YulExpressionStatement","src":"8026:12:33"}]},"condition":{"arguments":[{"arguments":[{"name":"value_2","nativeSrc":"7994:7:33","nodeType":"YulIdentifier","src":"7994:7:33"},{"arguments":[{"name":"value_2","nativeSrc":"8007:7:33","nodeType":"YulIdentifier","src":"8007:7:33"},{"kind":"number","nativeSrc":"8016:4:33","nodeType":"YulLiteral","src":"8016:4:33","type":"","value":"0xff"}],"functionName":{"name":"and","nativeSrc":"8003:3:33","nodeType":"YulIdentifier","src":"8003:3:33"},"nativeSrc":"8003:18:33","nodeType":"YulFunctionCall","src":"8003:18:33"}],"functionName":{"name":"eq","nativeSrc":"7991:2:33","nodeType":"YulIdentifier","src":"7991:2:33"},"nativeSrc":"7991:31:33","nodeType":"YulFunctionCall","src":"7991:31:33"}],"functionName":{"name":"iszero","nativeSrc":"7984:6:33","nodeType":"YulIdentifier","src":"7984:6:33"},"nativeSrc":"7984:39:33","nodeType":"YulFunctionCall","src":"7984:39:33"},"nativeSrc":"7981:59:33","nodeType":"YulIf","src":"7981:59:33"},{"nativeSrc":"8049:17:33","nodeType":"YulAssignment","src":"8049:17:33","value":{"name":"value_2","nativeSrc":"8059:7:33","nodeType":"YulIdentifier","src":"8059:7:33"},"variableNames":[{"name":"value4","nativeSrc":"8049:6:33","nodeType":"YulIdentifier","src":"8049:6:33"}]},{"nativeSrc":"8075:16:33","nodeType":"YulVariableDeclaration","src":"8075:16:33","value":{"kind":"number","nativeSrc":"8090:1:33","nodeType":"YulLiteral","src":"8090:1:33","type":"","value":"0"},"variables":[{"name":"value_3","nativeSrc":"8079:7:33","nodeType":"YulTypedName","src":"8079:7:33","type":""}]},{"nativeSrc":"8100:44:33","nodeType":"YulAssignment","src":"8100:44:33","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"8128:9:33","nodeType":"YulIdentifier","src":"8128:9:33"},{"kind":"number","nativeSrc":"8139:3:33","nodeType":"YulLiteral","src":"8139:3:33","type":"","value":"160"}],"functionName":{"name":"add","nativeSrc":"8124:3:33","nodeType":"YulIdentifier","src":"8124:3:33"},"nativeSrc":"8124:19:33","nodeType":"YulFunctionCall","src":"8124:19:33"}],"functionName":{"name":"calldataload","nativeSrc":"8111:12:33","nodeType":"YulIdentifier","src":"8111:12:33"},"nativeSrc":"8111:33:33","nodeType":"YulFunctionCall","src":"8111:33:33"},"variableNames":[{"name":"value_3","nativeSrc":"8100:7:33","nodeType":"YulIdentifier","src":"8100:7:33"}]},{"nativeSrc":"8153:17:33","nodeType":"YulAssignment","src":"8153:17:33","value":{"name":"value_3","nativeSrc":"8163:7:33","nodeType":"YulIdentifier","src":"8163:7:33"},"variableNames":[{"name":"value5","nativeSrc":"8153:6:33","nodeType":"YulIdentifier","src":"8153:6:33"}]},{"nativeSrc":"8179:16:33","nodeType":"YulVariableDeclaration","src":"8179:16:33","value":{"kind":"number","nativeSrc":"8194:1:33","nodeType":"YulLiteral","src":"8194:1:33","type":"","value":"0"},"variables":[{"name":"value_4","nativeSrc":"8183:7:33","nodeType":"YulTypedName","src":"8183:7:33","type":""}]},{"nativeSrc":"8204:44:33","nodeType":"YulAssignment","src":"8204:44:33","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"8232:9:33","nodeType":"YulIdentifier","src":"8232:9:33"},{"kind":"number","nativeSrc":"8243:3:33","nodeType":"YulLiteral","src":"8243:3:33","type":"","value":"192"}],"functionName":{"name":"add","nativeSrc":"8228:3:33","nodeType":"YulIdentifier","src":"8228:3:33"},"nativeSrc":"8228:19:33","nodeType":"YulFunctionCall","src":"8228:19:33"}],"functionName":{"name":"calldataload","nativeSrc":"8215:12:33","nodeType":"YulIdentifier","src":"8215:12:33"},"nativeSrc":"8215:33:33","nodeType":"YulFunctionCall","src":"8215:33:33"},"variableNames":[{"name":"value_4","nativeSrc":"8204:7:33","nodeType":"YulIdentifier","src":"8204:7:33"}]},{"nativeSrc":"8257:17:33","nodeType":"YulAssignment","src":"8257:17:33","value":{"name":"value_4","nativeSrc":"8267:7:33","nodeType":"YulIdentifier","src":"8267:7:33"},"variableNames":[{"name":"value6","nativeSrc":"8257:6:33","nodeType":"YulIdentifier","src":"8257:6:33"}]}]},"name":"abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_uint8t_bytes32t_bytes32","nativeSrc":"7377:903:33","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"7465:9:33","nodeType":"YulTypedName","src":"7465:9:33","type":""},{"name":"dataEnd","nativeSrc":"7476:7:33","nodeType":"YulTypedName","src":"7476:7:33","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"7488:6:33","nodeType":"YulTypedName","src":"7488:6:33","type":""},{"name":"value1","nativeSrc":"7496:6:33","nodeType":"YulTypedName","src":"7496:6:33","type":""},{"name":"value2","nativeSrc":"7504:6:33","nodeType":"YulTypedName","src":"7504:6:33","type":""},{"name":"value3","nativeSrc":"7512:6:33","nodeType":"YulTypedName","src":"7512:6:33","type":""},{"name":"value4","nativeSrc":"7520:6:33","nodeType":"YulTypedName","src":"7520:6:33","type":""},{"name":"value5","nativeSrc":"7528:6:33","nodeType":"YulTypedName","src":"7528:6:33","type":""},{"name":"value6","nativeSrc":"7536:6:33","nodeType":"YulTypedName","src":"7536:6:33","type":""}],"src":"7377:903:33"},{"body":{"nativeSrc":"8372:173:33","nodeType":"YulBlock","src":"8372:173:33","statements":[{"body":{"nativeSrc":"8418:16:33","nodeType":"YulBlock","src":"8418:16:33","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"8427:1:33","nodeType":"YulLiteral","src":"8427:1:33","type":"","value":"0"},{"kind":"number","nativeSrc":"8430:1:33","nodeType":"YulLiteral","src":"8430:1:33","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"8420:6:33","nodeType":"YulIdentifier","src":"8420:6:33"},"nativeSrc":"8420:12:33","nodeType":"YulFunctionCall","src":"8420:12:33"},"nativeSrc":"8420:12:33","nodeType":"YulExpressionStatement","src":"8420:12:33"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"8393:7:33","nodeType":"YulIdentifier","src":"8393:7:33"},{"name":"headStart","nativeSrc":"8402:9:33","nodeType":"YulIdentifier","src":"8402:9:33"}],"functionName":{"name":"sub","nativeSrc":"8389:3:33","nodeType":"YulIdentifier","src":"8389:3:33"},"nativeSrc":"8389:23:33","nodeType":"YulFunctionCall","src":"8389:23:33"},{"kind":"number","nativeSrc":"8414:2:33","nodeType":"YulLiteral","src":"8414:2:33","type":"","value":"64"}],"functionName":{"name":"slt","nativeSrc":"8385:3:33","nodeType":"YulIdentifier","src":"8385:3:33"},"nativeSrc":"8385:32:33","nodeType":"YulFunctionCall","src":"8385:32:33"},"nativeSrc":"8382:52:33","nodeType":"YulIf","src":"8382:52:33"},{"nativeSrc":"8443:39:33","nodeType":"YulAssignment","src":"8443:39:33","value":{"arguments":[{"name":"headStart","nativeSrc":"8472:9:33","nodeType":"YulIdentifier","src":"8472:9:33"}],"functionName":{"name":"abi_decode_address","nativeSrc":"8453:18:33","nodeType":"YulIdentifier","src":"8453:18:33"},"nativeSrc":"8453:29:33","nodeType":"YulFunctionCall","src":"8453:29:33"},"variableNames":[{"name":"value0","nativeSrc":"8443:6:33","nodeType":"YulIdentifier","src":"8443:6:33"}]},{"nativeSrc":"8491:48:33","nodeType":"YulAssignment","src":"8491:48:33","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"8524:9:33","nodeType":"YulIdentifier","src":"8524:9:33"},{"kind":"number","nativeSrc":"8535:2:33","nodeType":"YulLiteral","src":"8535:2:33","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"8520:3:33","nodeType":"YulIdentifier","src":"8520:3:33"},"nativeSrc":"8520:18:33","nodeType":"YulFunctionCall","src":"8520:18:33"}],"functionName":{"name":"abi_decode_address","nativeSrc":"8501:18:33","nodeType":"YulIdentifier","src":"8501:18:33"},"nativeSrc":"8501:38:33","nodeType":"YulFunctionCall","src":"8501:38:33"},"variableNames":[{"name":"value1","nativeSrc":"8491:6:33","nodeType":"YulIdentifier","src":"8491:6:33"}]}]},"name":"abi_decode_tuple_t_addresst_address","nativeSrc":"8285:260:33","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"8330:9:33","nodeType":"YulTypedName","src":"8330:9:33","type":""},{"name":"dataEnd","nativeSrc":"8341:7:33","nodeType":"YulTypedName","src":"8341:7:33","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"8353:6:33","nodeType":"YulTypedName","src":"8353:6:33","type":""},{"name":"value1","nativeSrc":"8361:6:33","nodeType":"YulTypedName","src":"8361:6:33","type":""}],"src":"8285:260:33"},{"body":{"nativeSrc":"8605:325:33","nodeType":"YulBlock","src":"8605:325:33","statements":[{"nativeSrc":"8615:22:33","nodeType":"YulAssignment","src":"8615:22:33","value":{"arguments":[{"kind":"number","nativeSrc":"8629:1:33","nodeType":"YulLiteral","src":"8629:1:33","type":"","value":"1"},{"name":"data","nativeSrc":"8632:4:33","nodeType":"YulIdentifier","src":"8632:4:33"}],"functionName":{"name":"shr","nativeSrc":"8625:3:33","nodeType":"YulIdentifier","src":"8625:3:33"},"nativeSrc":"8625:12:33","nodeType":"YulFunctionCall","src":"8625:12:33"},"variableNames":[{"name":"length","nativeSrc":"8615:6:33","nodeType":"YulIdentifier","src":"8615:6:33"}]},{"nativeSrc":"8646:38:33","nodeType":"YulVariableDeclaration","src":"8646:38:33","value":{"arguments":[{"name":"data","nativeSrc":"8676:4:33","nodeType":"YulIdentifier","src":"8676:4:33"},{"kind":"number","nativeSrc":"8682:1:33","nodeType":"YulLiteral","src":"8682:1:33","type":"","value":"1"}],"functionName":{"name":"and","nativeSrc":"8672:3:33","nodeType":"YulIdentifier","src":"8672:3:33"},"nativeSrc":"8672:12:33","nodeType":"YulFunctionCall","src":"8672:12:33"},"variables":[{"name":"outOfPlaceEncoding","nativeSrc":"8650:18:33","nodeType":"YulTypedName","src":"8650:18:33","type":""}]},{"body":{"nativeSrc":"8723:31:33","nodeType":"YulBlock","src":"8723:31:33","statements":[{"nativeSrc":"8725:27:33","nodeType":"YulAssignment","src":"8725:27:33","value":{"arguments":[{"name":"length","nativeSrc":"8739:6:33","nodeType":"YulIdentifier","src":"8739:6:33"},{"kind":"number","nativeSrc":"8747:4:33","nodeType":"YulLiteral","src":"8747:4:33","type":"","value":"0x7f"}],"functionName":{"name":"and","nativeSrc":"8735:3:33","nodeType":"YulIdentifier","src":"8735:3:33"},"nativeSrc":"8735:17:33","nodeType":"YulFunctionCall","src":"8735:17:33"},"variableNames":[{"name":"length","nativeSrc":"8725:6:33","nodeType":"YulIdentifier","src":"8725:6:33"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nativeSrc":"8703:18:33","nodeType":"YulIdentifier","src":"8703:18:33"}],"functionName":{"name":"iszero","nativeSrc":"8696:6:33","nodeType":"YulIdentifier","src":"8696:6:33"},"nativeSrc":"8696:26:33","nodeType":"YulFunctionCall","src":"8696:26:33"},"nativeSrc":"8693:61:33","nodeType":"YulIf","src":"8693:61:33"},{"body":{"nativeSrc":"8813:111:33","nodeType":"YulBlock","src":"8813:111:33","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"8834:1:33","nodeType":"YulLiteral","src":"8834:1:33","type":"","value":"0"},{"arguments":[{"kind":"number","nativeSrc":"8841:3:33","nodeType":"YulLiteral","src":"8841:3:33","type":"","value":"224"},{"kind":"number","nativeSrc":"8846:10:33","nodeType":"YulLiteral","src":"8846:10:33","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nativeSrc":"8837:3:33","nodeType":"YulIdentifier","src":"8837:3:33"},"nativeSrc":"8837:20:33","nodeType":"YulFunctionCall","src":"8837:20:33"}],"functionName":{"name":"mstore","nativeSrc":"8827:6:33","nodeType":"YulIdentifier","src":"8827:6:33"},"nativeSrc":"8827:31:33","nodeType":"YulFunctionCall","src":"8827:31:33"},"nativeSrc":"8827:31:33","nodeType":"YulExpressionStatement","src":"8827:31:33"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"8878:1:33","nodeType":"YulLiteral","src":"8878:1:33","type":"","value":"4"},{"kind":"number","nativeSrc":"8881:4:33","nodeType":"YulLiteral","src":"8881:4:33","type":"","value":"0x22"}],"functionName":{"name":"mstore","nativeSrc":"8871:6:33","nodeType":"YulIdentifier","src":"8871:6:33"},"nativeSrc":"8871:15:33","nodeType":"YulFunctionCall","src":"8871:15:33"},"nativeSrc":"8871:15:33","nodeType":"YulExpressionStatement","src":"8871:15:33"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"8906:1:33","nodeType":"YulLiteral","src":"8906:1:33","type":"","value":"0"},{"kind":"number","nativeSrc":"8909:4:33","nodeType":"YulLiteral","src":"8909:4:33","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"8899:6:33","nodeType":"YulIdentifier","src":"8899:6:33"},"nativeSrc":"8899:15:33","nodeType":"YulFunctionCall","src":"8899:15:33"},"nativeSrc":"8899:15:33","nodeType":"YulExpressionStatement","src":"8899:15:33"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nativeSrc":"8769:18:33","nodeType":"YulIdentifier","src":"8769:18:33"},{"arguments":[{"name":"length","nativeSrc":"8792:6:33","nodeType":"YulIdentifier","src":"8792:6:33"},{"kind":"number","nativeSrc":"8800:2:33","nodeType":"YulLiteral","src":"8800:2:33","type":"","value":"32"}],"functionName":{"name":"lt","nativeSrc":"8789:2:33","nodeType":"YulIdentifier","src":"8789:2:33"},"nativeSrc":"8789:14:33","nodeType":"YulFunctionCall","src":"8789:14:33"}],"functionName":{"name":"eq","nativeSrc":"8766:2:33","nodeType":"YulIdentifier","src":"8766:2:33"},"nativeSrc":"8766:38:33","nodeType":"YulFunctionCall","src":"8766:38:33"},"nativeSrc":"8763:161:33","nodeType":"YulIf","src":"8763:161:33"}]},"name":"extract_byte_array_length","nativeSrc":"8550:380:33","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nativeSrc":"8585:4:33","nodeType":"YulTypedName","src":"8585:4:33","type":""}],"returnVariables":[{"name":"length","nativeSrc":"8594:6:33","nodeType":"YulTypedName","src":"8594:6:33","type":""}],"src":"8550:380:33"},{"body":{"nativeSrc":"9064:119:33","nodeType":"YulBlock","src":"9064:119:33","statements":[{"nativeSrc":"9074:26:33","nodeType":"YulAssignment","src":"9074:26:33","value":{"arguments":[{"name":"headStart","nativeSrc":"9086:9:33","nodeType":"YulIdentifier","src":"9086:9:33"},{"kind":"number","nativeSrc":"9097:2:33","nodeType":"YulLiteral","src":"9097:2:33","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"9082:3:33","nodeType":"YulIdentifier","src":"9082:3:33"},"nativeSrc":"9082:18:33","nodeType":"YulFunctionCall","src":"9082:18:33"},"variableNames":[{"name":"tail","nativeSrc":"9074:4:33","nodeType":"YulIdentifier","src":"9074:4:33"}]},{"expression":{"arguments":[{"name":"headStart","nativeSrc":"9116:9:33","nodeType":"YulIdentifier","src":"9116:9:33"},{"name":"value0","nativeSrc":"9127:6:33","nodeType":"YulIdentifier","src":"9127:6:33"}],"functionName":{"name":"mstore","nativeSrc":"9109:6:33","nodeType":"YulIdentifier","src":"9109:6:33"},"nativeSrc":"9109:25:33","nodeType":"YulFunctionCall","src":"9109:25:33"},"nativeSrc":"9109:25:33","nodeType":"YulExpressionStatement","src":"9109:25:33"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"9154:9:33","nodeType":"YulIdentifier","src":"9154:9:33"},{"kind":"number","nativeSrc":"9165:2:33","nodeType":"YulLiteral","src":"9165:2:33","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"9150:3:33","nodeType":"YulIdentifier","src":"9150:3:33"},"nativeSrc":"9150:18:33","nodeType":"YulFunctionCall","src":"9150:18:33"},{"name":"value1","nativeSrc":"9170:6:33","nodeType":"YulIdentifier","src":"9170:6:33"}],"functionName":{"name":"mstore","nativeSrc":"9143:6:33","nodeType":"YulIdentifier","src":"9143:6:33"},"nativeSrc":"9143:34:33","nodeType":"YulFunctionCall","src":"9143:34:33"},"nativeSrc":"9143:34:33","nodeType":"YulExpressionStatement","src":"9143:34:33"}]},"name":"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed","nativeSrc":"8935:248:33","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"9025:9:33","nodeType":"YulTypedName","src":"9025:9:33","type":""},{"name":"value1","nativeSrc":"9036:6:33","nodeType":"YulTypedName","src":"9036:6:33","type":""},{"name":"value0","nativeSrc":"9044:6:33","nodeType":"YulTypedName","src":"9044:6:33","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"9055:4:33","nodeType":"YulTypedName","src":"9055:4:33","type":""}],"src":"8935:248:33"},{"body":{"nativeSrc":"9362:171:33","nodeType":"YulBlock","src":"9362:171:33","statements":[{"expression":{"arguments":[{"name":"headStart","nativeSrc":"9379:9:33","nodeType":"YulIdentifier","src":"9379:9:33"},{"kind":"number","nativeSrc":"9390:2:33","nodeType":"YulLiteral","src":"9390:2:33","type":"","value":"32"}],"functionName":{"name":"mstore","nativeSrc":"9372:6:33","nodeType":"YulIdentifier","src":"9372:6:33"},"nativeSrc":"9372:21:33","nodeType":"YulFunctionCall","src":"9372:21:33"},"nativeSrc":"9372:21:33","nodeType":"YulExpressionStatement","src":"9372:21:33"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"9413:9:33","nodeType":"YulIdentifier","src":"9413:9:33"},{"kind":"number","nativeSrc":"9424:2:33","nodeType":"YulLiteral","src":"9424:2:33","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"9409:3:33","nodeType":"YulIdentifier","src":"9409:3:33"},"nativeSrc":"9409:18:33","nodeType":"YulFunctionCall","src":"9409:18:33"},{"kind":"number","nativeSrc":"9429:2:33","nodeType":"YulLiteral","src":"9429:2:33","type":"","value":"21"}],"functionName":{"name":"mstore","nativeSrc":"9402:6:33","nodeType":"YulIdentifier","src":"9402:6:33"},"nativeSrc":"9402:30:33","nodeType":"YulFunctionCall","src":"9402:30:33"},"nativeSrc":"9402:30:33","nodeType":"YulExpressionStatement","src":"9402:30:33"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"9452:9:33","nodeType":"YulIdentifier","src":"9452:9:33"},{"kind":"number","nativeSrc":"9463:2:33","nodeType":"YulLiteral","src":"9463:2:33","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"9448:3:33","nodeType":"YulIdentifier","src":"9448:3:33"},"nativeSrc":"9448:18:33","nodeType":"YulFunctionCall","src":"9448:18:33"},{"hexValue":"4549503731323a20556e696e697469616c697a6564","kind":"string","nativeSrc":"9468:23:33","nodeType":"YulLiteral","src":"9468:23:33","type":"","value":"EIP712: Uninitialized"}],"functionName":{"name":"mstore","nativeSrc":"9441:6:33","nodeType":"YulIdentifier","src":"9441:6:33"},"nativeSrc":"9441:51:33","nodeType":"YulFunctionCall","src":"9441:51:33"},"nativeSrc":"9441:51:33","nodeType":"YulExpressionStatement","src":"9441:51:33"},{"nativeSrc":"9501:26:33","nodeType":"YulAssignment","src":"9501:26:33","value":{"arguments":[{"name":"headStart","nativeSrc":"9513:9:33","nodeType":"YulIdentifier","src":"9513:9:33"},{"kind":"number","nativeSrc":"9524:2:33","nodeType":"YulLiteral","src":"9524:2:33","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"9509:3:33","nodeType":"YulIdentifier","src":"9509:3:33"},"nativeSrc":"9509:18:33","nodeType":"YulFunctionCall","src":"9509:18:33"},"variableNames":[{"name":"tail","nativeSrc":"9501:4:33","nodeType":"YulIdentifier","src":"9501:4:33"}]}]},"name":"abi_encode_tuple_t_stringliteral_2e5045ff73280aa8e8acd8c82710f23812497f87f7f576e2220a2ddd0d45eade__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"9188:345:33","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"9339:9:33","nodeType":"YulTypedName","src":"9339:9:33","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"9353:4:33","nodeType":"YulTypedName","src":"9353:4:33","type":""}],"src":"9188:345:33"},{"body":{"nativeSrc":"9712:172:33","nodeType":"YulBlock","src":"9712:172:33","statements":[{"expression":{"arguments":[{"name":"headStart","nativeSrc":"9729:9:33","nodeType":"YulIdentifier","src":"9729:9:33"},{"kind":"number","nativeSrc":"9740:2:33","nodeType":"YulLiteral","src":"9740:2:33","type":"","value":"32"}],"functionName":{"name":"mstore","nativeSrc":"9722:6:33","nodeType":"YulIdentifier","src":"9722:6:33"},"nativeSrc":"9722:21:33","nodeType":"YulFunctionCall","src":"9722:21:33"},"nativeSrc":"9722:21:33","nodeType":"YulExpressionStatement","src":"9722:21:33"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"9763:9:33","nodeType":"YulIdentifier","src":"9763:9:33"},{"kind":"number","nativeSrc":"9774:2:33","nodeType":"YulLiteral","src":"9774:2:33","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"9759:3:33","nodeType":"YulIdentifier","src":"9759:3:33"},"nativeSrc":"9759:18:33","nodeType":"YulFunctionCall","src":"9759:18:33"},{"kind":"number","nativeSrc":"9779:2:33","nodeType":"YulLiteral","src":"9779:2:33","type":"","value":"22"}],"functionName":{"name":"mstore","nativeSrc":"9752:6:33","nodeType":"YulIdentifier","src":"9752:6:33"},"nativeSrc":"9752:30:33","nodeType":"YulFunctionCall","src":"9752:30:33"},"nativeSrc":"9752:30:33","nodeType":"YulExpressionStatement","src":"9752:30:33"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"9802:9:33","nodeType":"YulIdentifier","src":"9802:9:33"},{"kind":"number","nativeSrc":"9813:2:33","nodeType":"YulLiteral","src":"9813:2:33","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"9798:3:33","nodeType":"YulIdentifier","src":"9798:3:33"},"nativeSrc":"9798:18:33","nodeType":"YulFunctionCall","src":"9798:18:33"},{"hexValue":"417272617973206c656e677468206d69736d61746368","kind":"string","nativeSrc":"9818:24:33","nodeType":"YulLiteral","src":"9818:24:33","type":"","value":"Arrays length mismatch"}],"functionName":{"name":"mstore","nativeSrc":"9791:6:33","nodeType":"YulIdentifier","src":"9791:6:33"},"nativeSrc":"9791:52:33","nodeType":"YulFunctionCall","src":"9791:52:33"},"nativeSrc":"9791:52:33","nodeType":"YulExpressionStatement","src":"9791:52:33"},{"nativeSrc":"9852:26:33","nodeType":"YulAssignment","src":"9852:26:33","value":{"arguments":[{"name":"headStart","nativeSrc":"9864:9:33","nodeType":"YulIdentifier","src":"9864:9:33"},{"kind":"number","nativeSrc":"9875:2:33","nodeType":"YulLiteral","src":"9875:2:33","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"9860:3:33","nodeType":"YulIdentifier","src":"9860:3:33"},"nativeSrc":"9860:18:33","nodeType":"YulFunctionCall","src":"9860:18:33"},"variableNames":[{"name":"tail","nativeSrc":"9852:4:33","nodeType":"YulIdentifier","src":"9852:4:33"}]}]},"name":"abi_encode_tuple_t_stringliteral_582fd48f3876d7686bfeaaaa0db0589073271dedd50d66094f02fee2a3d2e01c__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"9538:346:33","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"9689:9:33","nodeType":"YulTypedName","src":"9689:9:33","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"9703:4:33","nodeType":"YulTypedName","src":"9703:4:33","type":""}],"src":"9538:346:33"},{"body":{"nativeSrc":"9921:95:33","nodeType":"YulBlock","src":"9921:95:33","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"9938:1:33","nodeType":"YulLiteral","src":"9938:1:33","type":"","value":"0"},{"arguments":[{"kind":"number","nativeSrc":"9945:3:33","nodeType":"YulLiteral","src":"9945:3:33","type":"","value":"224"},{"kind":"number","nativeSrc":"9950:10:33","nodeType":"YulLiteral","src":"9950:10:33","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nativeSrc":"9941:3:33","nodeType":"YulIdentifier","src":"9941:3:33"},"nativeSrc":"9941:20:33","nodeType":"YulFunctionCall","src":"9941:20:33"}],"functionName":{"name":"mstore","nativeSrc":"9931:6:33","nodeType":"YulIdentifier","src":"9931:6:33"},"nativeSrc":"9931:31:33","nodeType":"YulFunctionCall","src":"9931:31:33"},"nativeSrc":"9931:31:33","nodeType":"YulExpressionStatement","src":"9931:31:33"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"9978:1:33","nodeType":"YulLiteral","src":"9978:1:33","type":"","value":"4"},{"kind":"number","nativeSrc":"9981:4:33","nodeType":"YulLiteral","src":"9981:4:33","type":"","value":"0x32"}],"functionName":{"name":"mstore","nativeSrc":"9971:6:33","nodeType":"YulIdentifier","src":"9971:6:33"},"nativeSrc":"9971:15:33","nodeType":"YulFunctionCall","src":"9971:15:33"},"nativeSrc":"9971:15:33","nodeType":"YulExpressionStatement","src":"9971:15:33"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"10002:1:33","nodeType":"YulLiteral","src":"10002:1:33","type":"","value":"0"},{"kind":"number","nativeSrc":"10005:4:33","nodeType":"YulLiteral","src":"10005:4:33","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"9995:6:33","nodeType":"YulIdentifier","src":"9995:6:33"},"nativeSrc":"9995:15:33","nodeType":"YulFunctionCall","src":"9995:15:33"},"nativeSrc":"9995:15:33","nodeType":"YulExpressionStatement","src":"9995:15:33"}]},"name":"panic_error_0x32","nativeSrc":"9889:127:33","nodeType":"YulFunctionDefinition","src":"9889:127:33"},{"body":{"nativeSrc":"10262:346:33","nodeType":"YulBlock","src":"10262:346:33","statements":[{"nativeSrc":"10272:27:33","nodeType":"YulAssignment","src":"10272:27:33","value":{"arguments":[{"name":"headStart","nativeSrc":"10284:9:33","nodeType":"YulIdentifier","src":"10284:9:33"},{"kind":"number","nativeSrc":"10295:3:33","nodeType":"YulLiteral","src":"10295:3:33","type":"","value":"192"}],"functionName":{"name":"add","nativeSrc":"10280:3:33","nodeType":"YulIdentifier","src":"10280:3:33"},"nativeSrc":"10280:19:33","nodeType":"YulFunctionCall","src":"10280:19:33"},"variableNames":[{"name":"tail","nativeSrc":"10272:4:33","nodeType":"YulIdentifier","src":"10272:4:33"}]},{"expression":{"arguments":[{"name":"headStart","nativeSrc":"10315:9:33","nodeType":"YulIdentifier","src":"10315:9:33"},{"name":"value0","nativeSrc":"10326:6:33","nodeType":"YulIdentifier","src":"10326:6:33"}],"functionName":{"name":"mstore","nativeSrc":"10308:6:33","nodeType":"YulIdentifier","src":"10308:6:33"},"nativeSrc":"10308:25:33","nodeType":"YulFunctionCall","src":"10308:25:33"},"nativeSrc":"10308:25:33","nodeType":"YulExpressionStatement","src":"10308:25:33"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"10353:9:33","nodeType":"YulIdentifier","src":"10353:9:33"},{"kind":"number","nativeSrc":"10364:2:33","nodeType":"YulLiteral","src":"10364:2:33","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"10349:3:33","nodeType":"YulIdentifier","src":"10349:3:33"},"nativeSrc":"10349:18:33","nodeType":"YulFunctionCall","src":"10349:18:33"},{"arguments":[{"name":"value1","nativeSrc":"10373:6:33","nodeType":"YulIdentifier","src":"10373:6:33"},{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"10389:3:33","nodeType":"YulLiteral","src":"10389:3:33","type":"","value":"160"},{"kind":"number","nativeSrc":"10394:1:33","nodeType":"YulLiteral","src":"10394:1:33","type":"","value":"1"}],"functionName":{"name":"shl","nativeSrc":"10385:3:33","nodeType":"YulIdentifier","src":"10385:3:33"},"nativeSrc":"10385:11:33","nodeType":"YulFunctionCall","src":"10385:11:33"},{"kind":"number","nativeSrc":"10398:1:33","nodeType":"YulLiteral","src":"10398:1:33","type":"","value":"1"}],"functionName":{"name":"sub","nativeSrc":"10381:3:33","nodeType":"YulIdentifier","src":"10381:3:33"},"nativeSrc":"10381:19:33","nodeType":"YulFunctionCall","src":"10381:19:33"}],"functionName":{"name":"and","nativeSrc":"10369:3:33","nodeType":"YulIdentifier","src":"10369:3:33"},"nativeSrc":"10369:32:33","nodeType":"YulFunctionCall","src":"10369:32:33"}],"functionName":{"name":"mstore","nativeSrc":"10342:6:33","nodeType":"YulIdentifier","src":"10342:6:33"},"nativeSrc":"10342:60:33","nodeType":"YulFunctionCall","src":"10342:60:33"},"nativeSrc":"10342:60:33","nodeType":"YulExpressionStatement","src":"10342:60:33"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"10422:9:33","nodeType":"YulIdentifier","src":"10422:9:33"},{"kind":"number","nativeSrc":"10433:2:33","nodeType":"YulLiteral","src":"10433:2:33","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"10418:3:33","nodeType":"YulIdentifier","src":"10418:3:33"},"nativeSrc":"10418:18:33","nodeType":"YulFunctionCall","src":"10418:18:33"},{"arguments":[{"name":"value2","nativeSrc":"10442:6:33","nodeType":"YulIdentifier","src":"10442:6:33"},{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"10458:3:33","nodeType":"YulLiteral","src":"10458:3:33","type":"","value":"160"},{"kind":"number","nativeSrc":"10463:1:33","nodeType":"YulLiteral","src":"10463:1:33","type":"","value":"1"}],"functionName":{"name":"shl","nativeSrc":"10454:3:33","nodeType":"YulIdentifier","src":"10454:3:33"},"nativeSrc":"10454:11:33","nodeType":"YulFunctionCall","src":"10454:11:33"},{"kind":"number","nativeSrc":"10467:1:33","nodeType":"YulLiteral","src":"10467:1:33","type":"","value":"1"}],"functionName":{"name":"sub","nativeSrc":"10450:3:33","nodeType":"YulIdentifier","src":"10450:3:33"},"nativeSrc":"10450:19:33","nodeType":"YulFunctionCall","src":"10450:19:33"}],"functionName":{"name":"and","nativeSrc":"10438:3:33","nodeType":"YulIdentifier","src":"10438:3:33"},"nativeSrc":"10438:32:33","nodeType":"YulFunctionCall","src":"10438:32:33"}],"functionName":{"name":"mstore","nativeSrc":"10411:6:33","nodeType":"YulIdentifier","src":"10411:6:33"},"nativeSrc":"10411:60:33","nodeType":"YulFunctionCall","src":"10411:60:33"},"nativeSrc":"10411:60:33","nodeType":"YulExpressionStatement","src":"10411:60:33"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"10491:9:33","nodeType":"YulIdentifier","src":"10491:9:33"},{"kind":"number","nativeSrc":"10502:2:33","nodeType":"YulLiteral","src":"10502:2:33","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"10487:3:33","nodeType":"YulIdentifier","src":"10487:3:33"},"nativeSrc":"10487:18:33","nodeType":"YulFunctionCall","src":"10487:18:33"},{"name":"value3","nativeSrc":"10507:6:33","nodeType":"YulIdentifier","src":"10507:6:33"}],"functionName":{"name":"mstore","nativeSrc":"10480:6:33","nodeType":"YulIdentifier","src":"10480:6:33"},"nativeSrc":"10480:34:33","nodeType":"YulFunctionCall","src":"10480:34:33"},"nativeSrc":"10480:34:33","nodeType":"YulExpressionStatement","src":"10480:34:33"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"10534:9:33","nodeType":"YulIdentifier","src":"10534:9:33"},{"kind":"number","nativeSrc":"10545:3:33","nodeType":"YulLiteral","src":"10545:3:33","type":"","value":"128"}],"functionName":{"name":"add","nativeSrc":"10530:3:33","nodeType":"YulIdentifier","src":"10530:3:33"},"nativeSrc":"10530:19:33","nodeType":"YulFunctionCall","src":"10530:19:33"},{"name":"value4","nativeSrc":"10551:6:33","nodeType":"YulIdentifier","src":"10551:6:33"}],"functionName":{"name":"mstore","nativeSrc":"10523:6:33","nodeType":"YulIdentifier","src":"10523:6:33"},"nativeSrc":"10523:35:33","nodeType":"YulFunctionCall","src":"10523:35:33"},"nativeSrc":"10523:35:33","nodeType":"YulExpressionStatement","src":"10523:35:33"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"10578:9:33","nodeType":"YulIdentifier","src":"10578:9:33"},{"kind":"number","nativeSrc":"10589:3:33","nodeType":"YulLiteral","src":"10589:3:33","type":"","value":"160"}],"functionName":{"name":"add","nativeSrc":"10574:3:33","nodeType":"YulIdentifier","src":"10574:3:33"},"nativeSrc":"10574:19:33","nodeType":"YulFunctionCall","src":"10574:19:33"},{"name":"value5","nativeSrc":"10595:6:33","nodeType":"YulIdentifier","src":"10595:6:33"}],"functionName":{"name":"mstore","nativeSrc":"10567:6:33","nodeType":"YulIdentifier","src":"10567:6:33"},"nativeSrc":"10567:35:33","nodeType":"YulFunctionCall","src":"10567:35:33"},"nativeSrc":"10567:35:33","nodeType":"YulExpressionStatement","src":"10567:35:33"}]},"name":"abi_encode_tuple_t_bytes32_t_address_t_address_t_uint256_t_uint256_t_uint256__to_t_bytes32_t_address_t_address_t_uint256_t_uint256_t_uint256__fromStack_reversed","nativeSrc":"10021:587:33","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"10191:9:33","nodeType":"YulTypedName","src":"10191:9:33","type":""},{"name":"value5","nativeSrc":"10202:6:33","nodeType":"YulTypedName","src":"10202:6:33","type":""},{"name":"value4","nativeSrc":"10210:6:33","nodeType":"YulTypedName","src":"10210:6:33","type":""},{"name":"value3","nativeSrc":"10218:6:33","nodeType":"YulTypedName","src":"10218:6:33","type":""},{"name":"value2","nativeSrc":"10226:6:33","nodeType":"YulTypedName","src":"10226:6:33","type":""},{"name":"value1","nativeSrc":"10234:6:33","nodeType":"YulTypedName","src":"10234:6:33","type":""},{"name":"value0","nativeSrc":"10242:6:33","nodeType":"YulTypedName","src":"10242:6:33","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"10253:4:33","nodeType":"YulTypedName","src":"10253:4:33","type":""}],"src":"10021:587:33"},{"body":{"nativeSrc":"10742:171:33","nodeType":"YulBlock","src":"10742:171:33","statements":[{"nativeSrc":"10752:26:33","nodeType":"YulAssignment","src":"10752:26:33","value":{"arguments":[{"name":"headStart","nativeSrc":"10764:9:33","nodeType":"YulIdentifier","src":"10764:9:33"},{"kind":"number","nativeSrc":"10775:2:33","nodeType":"YulLiteral","src":"10775:2:33","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"10760:3:33","nodeType":"YulIdentifier","src":"10760:3:33"},"nativeSrc":"10760:18:33","nodeType":"YulFunctionCall","src":"10760:18:33"},"variableNames":[{"name":"tail","nativeSrc":"10752:4:33","nodeType":"YulIdentifier","src":"10752:4:33"}]},{"expression":{"arguments":[{"name":"headStart","nativeSrc":"10794:9:33","nodeType":"YulIdentifier","src":"10794:9:33"},{"arguments":[{"name":"value0","nativeSrc":"10809:6:33","nodeType":"YulIdentifier","src":"10809:6:33"},{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"10825:3:33","nodeType":"YulLiteral","src":"10825:3:33","type":"","value":"160"},{"kind":"number","nativeSrc":"10830:1:33","nodeType":"YulLiteral","src":"10830:1:33","type":"","value":"1"}],"functionName":{"name":"shl","nativeSrc":"10821:3:33","nodeType":"YulIdentifier","src":"10821:3:33"},"nativeSrc":"10821:11:33","nodeType":"YulFunctionCall","src":"10821:11:33"},{"kind":"number","nativeSrc":"10834:1:33","nodeType":"YulLiteral","src":"10834:1:33","type":"","value":"1"}],"functionName":{"name":"sub","nativeSrc":"10817:3:33","nodeType":"YulIdentifier","src":"10817:3:33"},"nativeSrc":"10817:19:33","nodeType":"YulFunctionCall","src":"10817:19:33"}],"functionName":{"name":"and","nativeSrc":"10805:3:33","nodeType":"YulIdentifier","src":"10805:3:33"},"nativeSrc":"10805:32:33","nodeType":"YulFunctionCall","src":"10805:32:33"}],"functionName":{"name":"mstore","nativeSrc":"10787:6:33","nodeType":"YulIdentifier","src":"10787:6:33"},"nativeSrc":"10787:51:33","nodeType":"YulFunctionCall","src":"10787:51:33"},"nativeSrc":"10787:51:33","nodeType":"YulExpressionStatement","src":"10787:51:33"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"10858:9:33","nodeType":"YulIdentifier","src":"10858:9:33"},{"kind":"number","nativeSrc":"10869:2:33","nodeType":"YulLiteral","src":"10869:2:33","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"10854:3:33","nodeType":"YulIdentifier","src":"10854:3:33"},"nativeSrc":"10854:18:33","nodeType":"YulFunctionCall","src":"10854:18:33"},{"arguments":[{"name":"value1","nativeSrc":"10878:6:33","nodeType":"YulIdentifier","src":"10878:6:33"},{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"10894:3:33","nodeType":"YulLiteral","src":"10894:3:33","type":"","value":"160"},{"kind":"number","nativeSrc":"10899:1:33","nodeType":"YulLiteral","src":"10899:1:33","type":"","value":"1"}],"functionName":{"name":"shl","nativeSrc":"10890:3:33","nodeType":"YulIdentifier","src":"10890:3:33"},"nativeSrc":"10890:11:33","nodeType":"YulFunctionCall","src":"10890:11:33"},{"kind":"number","nativeSrc":"10903:1:33","nodeType":"YulLiteral","src":"10903:1:33","type":"","value":"1"}],"functionName":{"name":"sub","nativeSrc":"10886:3:33","nodeType":"YulIdentifier","src":"10886:3:33"},"nativeSrc":"10886:19:33","nodeType":"YulFunctionCall","src":"10886:19:33"}],"functionName":{"name":"and","nativeSrc":"10874:3:33","nodeType":"YulIdentifier","src":"10874:3:33"},"nativeSrc":"10874:32:33","nodeType":"YulFunctionCall","src":"10874:32:33"}],"functionName":{"name":"mstore","nativeSrc":"10847:6:33","nodeType":"YulIdentifier","src":"10847:6:33"},"nativeSrc":"10847:60:33","nodeType":"YulFunctionCall","src":"10847:60:33"},"nativeSrc":"10847:60:33","nodeType":"YulExpressionStatement","src":"10847:60:33"}]},"name":"abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed","nativeSrc":"10613:300:33","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"10703:9:33","nodeType":"YulTypedName","src":"10703:9:33","type":""},{"name":"value1","nativeSrc":"10714:6:33","nodeType":"YulTypedName","src":"10714:6:33","type":""},{"name":"value0","nativeSrc":"10722:6:33","nodeType":"YulTypedName","src":"10722:6:33","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"10733:4:33","nodeType":"YulTypedName","src":"10733:4:33","type":""}],"src":"10613:300:33"},{"body":{"nativeSrc":"11026:101:33","nodeType":"YulBlock","src":"11026:101:33","statements":[{"nativeSrc":"11036:26:33","nodeType":"YulAssignment","src":"11036:26:33","value":{"arguments":[{"name":"headStart","nativeSrc":"11048:9:33","nodeType":"YulIdentifier","src":"11048:9:33"},{"kind":"number","nativeSrc":"11059:2:33","nodeType":"YulLiteral","src":"11059:2:33","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"11044:3:33","nodeType":"YulIdentifier","src":"11044:3:33"},"nativeSrc":"11044:18:33","nodeType":"YulFunctionCall","src":"11044:18:33"},"variableNames":[{"name":"tail","nativeSrc":"11036:4:33","nodeType":"YulIdentifier","src":"11036:4:33"}]},{"expression":{"arguments":[{"name":"headStart","nativeSrc":"11078:9:33","nodeType":"YulIdentifier","src":"11078:9:33"},{"arguments":[{"name":"value0","nativeSrc":"11093:6:33","nodeType":"YulIdentifier","src":"11093:6:33"},{"kind":"number","nativeSrc":"11101:18:33","nodeType":"YulLiteral","src":"11101:18:33","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"and","nativeSrc":"11089:3:33","nodeType":"YulIdentifier","src":"11089:3:33"},"nativeSrc":"11089:31:33","nodeType":"YulFunctionCall","src":"11089:31:33"}],"functionName":{"name":"mstore","nativeSrc":"11071:6:33","nodeType":"YulIdentifier","src":"11071:6:33"},"nativeSrc":"11071:50:33","nodeType":"YulFunctionCall","src":"11071:50:33"},"nativeSrc":"11071:50:33","nodeType":"YulExpressionStatement","src":"11071:50:33"}]},"name":"abi_encode_tuple_t_rational_1_by_1__to_t_uint64__fromStack_reversed","nativeSrc":"10918:209:33","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"10995:9:33","nodeType":"YulTypedName","src":"10995:9:33","type":""},{"name":"value0","nativeSrc":"11006:6:33","nodeType":"YulTypedName","src":"11006:6:33","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"11017:4:33","nodeType":"YulTypedName","src":"11017:4:33","type":""}],"src":"10918:209:33"},{"body":{"nativeSrc":"11289:188:33","nodeType":"YulBlock","src":"11289:188:33","statements":[{"nativeSrc":"11299:26:33","nodeType":"YulAssignment","src":"11299:26:33","value":{"arguments":[{"name":"headStart","nativeSrc":"11311:9:33","nodeType":"YulIdentifier","src":"11311:9:33"},{"kind":"number","nativeSrc":"11322:2:33","nodeType":"YulLiteral","src":"11322:2:33","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"11307:3:33","nodeType":"YulIdentifier","src":"11307:3:33"},"nativeSrc":"11307:18:33","nodeType":"YulFunctionCall","src":"11307:18:33"},"variableNames":[{"name":"tail","nativeSrc":"11299:4:33","nodeType":"YulIdentifier","src":"11299:4:33"}]},{"expression":{"arguments":[{"name":"headStart","nativeSrc":"11341:9:33","nodeType":"YulIdentifier","src":"11341:9:33"},{"arguments":[{"name":"value0","nativeSrc":"11356:6:33","nodeType":"YulIdentifier","src":"11356:6:33"},{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"11372:3:33","nodeType":"YulLiteral","src":"11372:3:33","type":"","value":"160"},{"kind":"number","nativeSrc":"11377:1:33","nodeType":"YulLiteral","src":"11377:1:33","type":"","value":"1"}],"functionName":{"name":"shl","nativeSrc":"11368:3:33","nodeType":"YulIdentifier","src":"11368:3:33"},"nativeSrc":"11368:11:33","nodeType":"YulFunctionCall","src":"11368:11:33"},{"kind":"number","nativeSrc":"11381:1:33","nodeType":"YulLiteral","src":"11381:1:33","type":"","value":"1"}],"functionName":{"name":"sub","nativeSrc":"11364:3:33","nodeType":"YulIdentifier","src":"11364:3:33"},"nativeSrc":"11364:19:33","nodeType":"YulFunctionCall","src":"11364:19:33"}],"functionName":{"name":"and","nativeSrc":"11352:3:33","nodeType":"YulIdentifier","src":"11352:3:33"},"nativeSrc":"11352:32:33","nodeType":"YulFunctionCall","src":"11352:32:33"}],"functionName":{"name":"mstore","nativeSrc":"11334:6:33","nodeType":"YulIdentifier","src":"11334:6:33"},"nativeSrc":"11334:51:33","nodeType":"YulFunctionCall","src":"11334:51:33"},"nativeSrc":"11334:51:33","nodeType":"YulExpressionStatement","src":"11334:51:33"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"11405:9:33","nodeType":"YulIdentifier","src":"11405:9:33"},{"kind":"number","nativeSrc":"11416:2:33","nodeType":"YulLiteral","src":"11416:2:33","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"11401:3:33","nodeType":"YulIdentifier","src":"11401:3:33"},"nativeSrc":"11401:18:33","nodeType":"YulFunctionCall","src":"11401:18:33"},{"name":"value1","nativeSrc":"11421:6:33","nodeType":"YulIdentifier","src":"11421:6:33"}],"functionName":{"name":"mstore","nativeSrc":"11394:6:33","nodeType":"YulIdentifier","src":"11394:6:33"},"nativeSrc":"11394:34:33","nodeType":"YulFunctionCall","src":"11394:34:33"},"nativeSrc":"11394:34:33","nodeType":"YulExpressionStatement","src":"11394:34:33"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"11448:9:33","nodeType":"YulIdentifier","src":"11448:9:33"},{"kind":"number","nativeSrc":"11459:2:33","nodeType":"YulLiteral","src":"11459:2:33","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"11444:3:33","nodeType":"YulIdentifier","src":"11444:3:33"},"nativeSrc":"11444:18:33","nodeType":"YulFunctionCall","src":"11444:18:33"},{"name":"value2","nativeSrc":"11464:6:33","nodeType":"YulIdentifier","src":"11464:6:33"}],"functionName":{"name":"mstore","nativeSrc":"11437:6:33","nodeType":"YulIdentifier","src":"11437:6:33"},"nativeSrc":"11437:34:33","nodeType":"YulFunctionCall","src":"11437:34:33"},"nativeSrc":"11437:34:33","nodeType":"YulExpressionStatement","src":"11437:34:33"}]},"name":"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed","nativeSrc":"11132:345:33","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"11242:9:33","nodeType":"YulTypedName","src":"11242:9:33","type":""},{"name":"value2","nativeSrc":"11253:6:33","nodeType":"YulTypedName","src":"11253:6:33","type":""},{"name":"value1","nativeSrc":"11261:6:33","nodeType":"YulTypedName","src":"11261:6:33","type":""},{"name":"value0","nativeSrc":"11269:6:33","nodeType":"YulTypedName","src":"11269:6:33","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"11280:4:33","nodeType":"YulTypedName","src":"11280:4:33","type":""}],"src":"11132:345:33"},{"body":{"nativeSrc":"11563:103:33","nodeType":"YulBlock","src":"11563:103:33","statements":[{"body":{"nativeSrc":"11609:16:33","nodeType":"YulBlock","src":"11609:16:33","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"11618:1:33","nodeType":"YulLiteral","src":"11618:1:33","type":"","value":"0"},{"kind":"number","nativeSrc":"11621:1:33","nodeType":"YulLiteral","src":"11621:1:33","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"11611:6:33","nodeType":"YulIdentifier","src":"11611:6:33"},"nativeSrc":"11611:12:33","nodeType":"YulFunctionCall","src":"11611:12:33"},"nativeSrc":"11611:12:33","nodeType":"YulExpressionStatement","src":"11611:12:33"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"11584:7:33","nodeType":"YulIdentifier","src":"11584:7:33"},{"name":"headStart","nativeSrc":"11593:9:33","nodeType":"YulIdentifier","src":"11593:9:33"}],"functionName":{"name":"sub","nativeSrc":"11580:3:33","nodeType":"YulIdentifier","src":"11580:3:33"},"nativeSrc":"11580:23:33","nodeType":"YulFunctionCall","src":"11580:23:33"},{"kind":"number","nativeSrc":"11605:2:33","nodeType":"YulLiteral","src":"11605:2:33","type":"","value":"32"}],"functionName":{"name":"slt","nativeSrc":"11576:3:33","nodeType":"YulIdentifier","src":"11576:3:33"},"nativeSrc":"11576:32:33","nodeType":"YulFunctionCall","src":"11576:32:33"},"nativeSrc":"11573:52:33","nodeType":"YulIf","src":"11573:52:33"},{"nativeSrc":"11634:26:33","nodeType":"YulAssignment","src":"11634:26:33","value":{"arguments":[{"name":"headStart","nativeSrc":"11650:9:33","nodeType":"YulIdentifier","src":"11650:9:33"}],"functionName":{"name":"mload","nativeSrc":"11644:5:33","nodeType":"YulIdentifier","src":"11644:5:33"},"nativeSrc":"11644:16:33","nodeType":"YulFunctionCall","src":"11644:16:33"},"variableNames":[{"name":"value0","nativeSrc":"11634:6:33","nodeType":"YulIdentifier","src":"11634:6:33"}]}]},"name":"abi_decode_tuple_t_bytes32_fromMemory","nativeSrc":"11482:184:33","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"11529:9:33","nodeType":"YulTypedName","src":"11529:9:33","type":""},{"name":"dataEnd","nativeSrc":"11540:7:33","nodeType":"YulTypedName","src":"11540:7:33","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"11552:6:33","nodeType":"YulTypedName","src":"11552:6:33","type":""}],"src":"11482:184:33"},{"body":{"nativeSrc":"11800:145:33","nodeType":"YulBlock","src":"11800:145:33","statements":[{"nativeSrc":"11810:26:33","nodeType":"YulAssignment","src":"11810:26:33","value":{"arguments":[{"name":"headStart","nativeSrc":"11822:9:33","nodeType":"YulIdentifier","src":"11822:9:33"},{"kind":"number","nativeSrc":"11833:2:33","nodeType":"YulLiteral","src":"11833:2:33","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"11818:3:33","nodeType":"YulIdentifier","src":"11818:3:33"},"nativeSrc":"11818:18:33","nodeType":"YulFunctionCall","src":"11818:18:33"},"variableNames":[{"name":"tail","nativeSrc":"11810:4:33","nodeType":"YulIdentifier","src":"11810:4:33"}]},{"expression":{"arguments":[{"name":"headStart","nativeSrc":"11852:9:33","nodeType":"YulIdentifier","src":"11852:9:33"},{"arguments":[{"name":"value0","nativeSrc":"11867:6:33","nodeType":"YulIdentifier","src":"11867:6:33"},{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"11883:3:33","nodeType":"YulLiteral","src":"11883:3:33","type":"","value":"160"},{"kind":"number","nativeSrc":"11888:1:33","nodeType":"YulLiteral","src":"11888:1:33","type":"","value":"1"}],"functionName":{"name":"shl","nativeSrc":"11879:3:33","nodeType":"YulIdentifier","src":"11879:3:33"},"nativeSrc":"11879:11:33","nodeType":"YulFunctionCall","src":"11879:11:33"},{"kind":"number","nativeSrc":"11892:1:33","nodeType":"YulLiteral","src":"11892:1:33","type":"","value":"1"}],"functionName":{"name":"sub","nativeSrc":"11875:3:33","nodeType":"YulIdentifier","src":"11875:3:33"},"nativeSrc":"11875:19:33","nodeType":"YulFunctionCall","src":"11875:19:33"}],"functionName":{"name":"and","nativeSrc":"11863:3:33","nodeType":"YulIdentifier","src":"11863:3:33"},"nativeSrc":"11863:32:33","nodeType":"YulFunctionCall","src":"11863:32:33"}],"functionName":{"name":"mstore","nativeSrc":"11845:6:33","nodeType":"YulIdentifier","src":"11845:6:33"},"nativeSrc":"11845:51:33","nodeType":"YulFunctionCall","src":"11845:51:33"},"nativeSrc":"11845:51:33","nodeType":"YulExpressionStatement","src":"11845:51:33"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"11916:9:33","nodeType":"YulIdentifier","src":"11916:9:33"},{"kind":"number","nativeSrc":"11927:2:33","nodeType":"YulLiteral","src":"11927:2:33","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"11912:3:33","nodeType":"YulIdentifier","src":"11912:3:33"},"nativeSrc":"11912:18:33","nodeType":"YulFunctionCall","src":"11912:18:33"},{"name":"value1","nativeSrc":"11932:6:33","nodeType":"YulIdentifier","src":"11932:6:33"}],"functionName":{"name":"mstore","nativeSrc":"11905:6:33","nodeType":"YulIdentifier","src":"11905:6:33"},"nativeSrc":"11905:34:33","nodeType":"YulFunctionCall","src":"11905:34:33"},"nativeSrc":"11905:34:33","nodeType":"YulExpressionStatement","src":"11905:34:33"}]},"name":"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed","nativeSrc":"11671:274:33","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"11761:9:33","nodeType":"YulTypedName","src":"11761:9:33","type":""},{"name":"value1","nativeSrc":"11772:6:33","nodeType":"YulTypedName","src":"11772:6:33","type":""},{"name":"value0","nativeSrc":"11780:6:33","nodeType":"YulTypedName","src":"11780:6:33","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"11791:4:33","nodeType":"YulTypedName","src":"11791:4:33","type":""}],"src":"11671:274:33"},{"body":{"nativeSrc":"12079:145:33","nodeType":"YulBlock","src":"12079:145:33","statements":[{"nativeSrc":"12089:26:33","nodeType":"YulAssignment","src":"12089:26:33","value":{"arguments":[{"name":"headStart","nativeSrc":"12101:9:33","nodeType":"YulIdentifier","src":"12101:9:33"},{"kind":"number","nativeSrc":"12112:2:33","nodeType":"YulLiteral","src":"12112:2:33","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"12097:3:33","nodeType":"YulIdentifier","src":"12097:3:33"},"nativeSrc":"12097:18:33","nodeType":"YulFunctionCall","src":"12097:18:33"},"variableNames":[{"name":"tail","nativeSrc":"12089:4:33","nodeType":"YulIdentifier","src":"12089:4:33"}]},{"expression":{"arguments":[{"name":"headStart","nativeSrc":"12131:9:33","nodeType":"YulIdentifier","src":"12131:9:33"},{"arguments":[{"name":"value0","nativeSrc":"12146:6:33","nodeType":"YulIdentifier","src":"12146:6:33"},{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"12162:3:33","nodeType":"YulLiteral","src":"12162:3:33","type":"","value":"160"},{"kind":"number","nativeSrc":"12167:1:33","nodeType":"YulLiteral","src":"12167:1:33","type":"","value":"1"}],"functionName":{"name":"shl","nativeSrc":"12158:3:33","nodeType":"YulIdentifier","src":"12158:3:33"},"nativeSrc":"12158:11:33","nodeType":"YulFunctionCall","src":"12158:11:33"},{"kind":"number","nativeSrc":"12171:1:33","nodeType":"YulLiteral","src":"12171:1:33","type":"","value":"1"}],"functionName":{"name":"sub","nativeSrc":"12154:3:33","nodeType":"YulIdentifier","src":"12154:3:33"},"nativeSrc":"12154:19:33","nodeType":"YulFunctionCall","src":"12154:19:33"}],"functionName":{"name":"and","nativeSrc":"12142:3:33","nodeType":"YulIdentifier","src":"12142:3:33"},"nativeSrc":"12142:32:33","nodeType":"YulFunctionCall","src":"12142:32:33"}],"functionName":{"name":"mstore","nativeSrc":"12124:6:33","nodeType":"YulIdentifier","src":"12124:6:33"},"nativeSrc":"12124:51:33","nodeType":"YulFunctionCall","src":"12124:51:33"},"nativeSrc":"12124:51:33","nodeType":"YulExpressionStatement","src":"12124:51:33"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"12195:9:33","nodeType":"YulIdentifier","src":"12195:9:33"},{"kind":"number","nativeSrc":"12206:2:33","nodeType":"YulLiteral","src":"12206:2:33","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"12191:3:33","nodeType":"YulIdentifier","src":"12191:3:33"},"nativeSrc":"12191:18:33","nodeType":"YulFunctionCall","src":"12191:18:33"},{"name":"value1","nativeSrc":"12211:6:33","nodeType":"YulIdentifier","src":"12211:6:33"}],"functionName":{"name":"mstore","nativeSrc":"12184:6:33","nodeType":"YulIdentifier","src":"12184:6:33"},"nativeSrc":"12184:34:33","nodeType":"YulFunctionCall","src":"12184:34:33"},"nativeSrc":"12184:34:33","nodeType":"YulExpressionStatement","src":"12184:34:33"}]},"name":"abi_encode_tuple_t_address_t_bytes32__to_t_address_t_bytes32__fromStack_reversed","nativeSrc":"11950:274:33","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"12040:9:33","nodeType":"YulTypedName","src":"12040:9:33","type":""},{"name":"value1","nativeSrc":"12051:6:33","nodeType":"YulTypedName","src":"12051:6:33","type":""},{"name":"value0","nativeSrc":"12059:6:33","nodeType":"YulTypedName","src":"12059:6:33","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"12070:4:33","nodeType":"YulTypedName","src":"12070:4:33","type":""}],"src":"11950:274:33"},{"body":{"nativeSrc":"12442:276:33","nodeType":"YulBlock","src":"12442:276:33","statements":[{"nativeSrc":"12452:27:33","nodeType":"YulAssignment","src":"12452:27:33","value":{"arguments":[{"name":"headStart","nativeSrc":"12464:9:33","nodeType":"YulIdentifier","src":"12464:9:33"},{"kind":"number","nativeSrc":"12475:3:33","nodeType":"YulLiteral","src":"12475:3:33","type":"","value":"160"}],"functionName":{"name":"add","nativeSrc":"12460:3:33","nodeType":"YulIdentifier","src":"12460:3:33"},"nativeSrc":"12460:19:33","nodeType":"YulFunctionCall","src":"12460:19:33"},"variableNames":[{"name":"tail","nativeSrc":"12452:4:33","nodeType":"YulIdentifier","src":"12452:4:33"}]},{"expression":{"arguments":[{"name":"headStart","nativeSrc":"12495:9:33","nodeType":"YulIdentifier","src":"12495:9:33"},{"name":"value0","nativeSrc":"12506:6:33","nodeType":"YulIdentifier","src":"12506:6:33"}],"functionName":{"name":"mstore","nativeSrc":"12488:6:33","nodeType":"YulIdentifier","src":"12488:6:33"},"nativeSrc":"12488:25:33","nodeType":"YulFunctionCall","src":"12488:25:33"},"nativeSrc":"12488:25:33","nodeType":"YulExpressionStatement","src":"12488:25:33"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"12533:9:33","nodeType":"YulIdentifier","src":"12533:9:33"},{"kind":"number","nativeSrc":"12544:2:33","nodeType":"YulLiteral","src":"12544:2:33","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"12529:3:33","nodeType":"YulIdentifier","src":"12529:3:33"},"nativeSrc":"12529:18:33","nodeType":"YulFunctionCall","src":"12529:18:33"},{"name":"value1","nativeSrc":"12549:6:33","nodeType":"YulIdentifier","src":"12549:6:33"}],"functionName":{"name":"mstore","nativeSrc":"12522:6:33","nodeType":"YulIdentifier","src":"12522:6:33"},"nativeSrc":"12522:34:33","nodeType":"YulFunctionCall","src":"12522:34:33"},"nativeSrc":"12522:34:33","nodeType":"YulExpressionStatement","src":"12522:34:33"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"12576:9:33","nodeType":"YulIdentifier","src":"12576:9:33"},{"kind":"number","nativeSrc":"12587:2:33","nodeType":"YulLiteral","src":"12587:2:33","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"12572:3:33","nodeType":"YulIdentifier","src":"12572:3:33"},"nativeSrc":"12572:18:33","nodeType":"YulFunctionCall","src":"12572:18:33"},{"name":"value2","nativeSrc":"12592:6:33","nodeType":"YulIdentifier","src":"12592:6:33"}],"functionName":{"name":"mstore","nativeSrc":"12565:6:33","nodeType":"YulIdentifier","src":"12565:6:33"},"nativeSrc":"12565:34:33","nodeType":"YulFunctionCall","src":"12565:34:33"},"nativeSrc":"12565:34:33","nodeType":"YulExpressionStatement","src":"12565:34:33"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"12619:9:33","nodeType":"YulIdentifier","src":"12619:9:33"},{"kind":"number","nativeSrc":"12630:2:33","nodeType":"YulLiteral","src":"12630:2:33","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"12615:3:33","nodeType":"YulIdentifier","src":"12615:3:33"},"nativeSrc":"12615:18:33","nodeType":"YulFunctionCall","src":"12615:18:33"},{"name":"value3","nativeSrc":"12635:6:33","nodeType":"YulIdentifier","src":"12635:6:33"}],"functionName":{"name":"mstore","nativeSrc":"12608:6:33","nodeType":"YulIdentifier","src":"12608:6:33"},"nativeSrc":"12608:34:33","nodeType":"YulFunctionCall","src":"12608:34:33"},"nativeSrc":"12608:34:33","nodeType":"YulExpressionStatement","src":"12608:34:33"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"12662:9:33","nodeType":"YulIdentifier","src":"12662:9:33"},{"kind":"number","nativeSrc":"12673:3:33","nodeType":"YulLiteral","src":"12673:3:33","type":"","value":"128"}],"functionName":{"name":"add","nativeSrc":"12658:3:33","nodeType":"YulIdentifier","src":"12658:3:33"},"nativeSrc":"12658:19:33","nodeType":"YulFunctionCall","src":"12658:19:33"},{"arguments":[{"name":"value4","nativeSrc":"12683:6:33","nodeType":"YulIdentifier","src":"12683:6:33"},{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"12699:3:33","nodeType":"YulLiteral","src":"12699:3:33","type":"","value":"160"},{"kind":"number","nativeSrc":"12704:1:33","nodeType":"YulLiteral","src":"12704:1:33","type":"","value":"1"}],"functionName":{"name":"shl","nativeSrc":"12695:3:33","nodeType":"YulIdentifier","src":"12695:3:33"},"nativeSrc":"12695:11:33","nodeType":"YulFunctionCall","src":"12695:11:33"},{"kind":"number","nativeSrc":"12708:1:33","nodeType":"YulLiteral","src":"12708:1:33","type":"","value":"1"}],"functionName":{"name":"sub","nativeSrc":"12691:3:33","nodeType":"YulIdentifier","src":"12691:3:33"},"nativeSrc":"12691:19:33","nodeType":"YulFunctionCall","src":"12691:19:33"}],"functionName":{"name":"and","nativeSrc":"12679:3:33","nodeType":"YulIdentifier","src":"12679:3:33"},"nativeSrc":"12679:32:33","nodeType":"YulFunctionCall","src":"12679:32:33"}],"functionName":{"name":"mstore","nativeSrc":"12651:6:33","nodeType":"YulIdentifier","src":"12651:6:33"},"nativeSrc":"12651:61:33","nodeType":"YulFunctionCall","src":"12651:61:33"},"nativeSrc":"12651:61:33","nodeType":"YulExpressionStatement","src":"12651:61:33"}]},"name":"abi_encode_tuple_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__to_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__fromStack_reversed","nativeSrc":"12229:489:33","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"12379:9:33","nodeType":"YulTypedName","src":"12379:9:33","type":""},{"name":"value4","nativeSrc":"12390:6:33","nodeType":"YulTypedName","src":"12390:6:33","type":""},{"name":"value3","nativeSrc":"12398:6:33","nodeType":"YulTypedName","src":"12398:6:33","type":""},{"name":"value2","nativeSrc":"12406:6:33","nodeType":"YulTypedName","src":"12406:6:33","type":""},{"name":"value1","nativeSrc":"12414:6:33","nodeType":"YulTypedName","src":"12414:6:33","type":""},{"name":"value0","nativeSrc":"12422:6:33","nodeType":"YulTypedName","src":"12422:6:33","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"12433:4:33","nodeType":"YulTypedName","src":"12433:4:33","type":""}],"src":"12229:489:33"},{"body":{"nativeSrc":"12904:217:33","nodeType":"YulBlock","src":"12904:217:33","statements":[{"nativeSrc":"12914:27:33","nodeType":"YulAssignment","src":"12914:27:33","value":{"arguments":[{"name":"headStart","nativeSrc":"12926:9:33","nodeType":"YulIdentifier","src":"12926:9:33"},{"kind":"number","nativeSrc":"12937:3:33","nodeType":"YulLiteral","src":"12937:3:33","type":"","value":"128"}],"functionName":{"name":"add","nativeSrc":"12922:3:33","nodeType":"YulIdentifier","src":"12922:3:33"},"nativeSrc":"12922:19:33","nodeType":"YulFunctionCall","src":"12922:19:33"},"variableNames":[{"name":"tail","nativeSrc":"12914:4:33","nodeType":"YulIdentifier","src":"12914:4:33"}]},{"expression":{"arguments":[{"name":"headStart","nativeSrc":"12957:9:33","nodeType":"YulIdentifier","src":"12957:9:33"},{"name":"value0","nativeSrc":"12968:6:33","nodeType":"YulIdentifier","src":"12968:6:33"}],"functionName":{"name":"mstore","nativeSrc":"12950:6:33","nodeType":"YulIdentifier","src":"12950:6:33"},"nativeSrc":"12950:25:33","nodeType":"YulFunctionCall","src":"12950:25:33"},"nativeSrc":"12950:25:33","nodeType":"YulExpressionStatement","src":"12950:25:33"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"12995:9:33","nodeType":"YulIdentifier","src":"12995:9:33"},{"kind":"number","nativeSrc":"13006:2:33","nodeType":"YulLiteral","src":"13006:2:33","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"12991:3:33","nodeType":"YulIdentifier","src":"12991:3:33"},"nativeSrc":"12991:18:33","nodeType":"YulFunctionCall","src":"12991:18:33"},{"arguments":[{"name":"value1","nativeSrc":"13015:6:33","nodeType":"YulIdentifier","src":"13015:6:33"},{"kind":"number","nativeSrc":"13023:4:33","nodeType":"YulLiteral","src":"13023:4:33","type":"","value":"0xff"}],"functionName":{"name":"and","nativeSrc":"13011:3:33","nodeType":"YulIdentifier","src":"13011:3:33"},"nativeSrc":"13011:17:33","nodeType":"YulFunctionCall","src":"13011:17:33"}],"functionName":{"name":"mstore","nativeSrc":"12984:6:33","nodeType":"YulIdentifier","src":"12984:6:33"},"nativeSrc":"12984:45:33","nodeType":"YulFunctionCall","src":"12984:45:33"},"nativeSrc":"12984:45:33","nodeType":"YulExpressionStatement","src":"12984:45:33"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"13049:9:33","nodeType":"YulIdentifier","src":"13049:9:33"},{"kind":"number","nativeSrc":"13060:2:33","nodeType":"YulLiteral","src":"13060:2:33","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"13045:3:33","nodeType":"YulIdentifier","src":"13045:3:33"},"nativeSrc":"13045:18:33","nodeType":"YulFunctionCall","src":"13045:18:33"},{"name":"value2","nativeSrc":"13065:6:33","nodeType":"YulIdentifier","src":"13065:6:33"}],"functionName":{"name":"mstore","nativeSrc":"13038:6:33","nodeType":"YulIdentifier","src":"13038:6:33"},"nativeSrc":"13038:34:33","nodeType":"YulFunctionCall","src":"13038:34:33"},"nativeSrc":"13038:34:33","nodeType":"YulExpressionStatement","src":"13038:34:33"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"13092:9:33","nodeType":"YulIdentifier","src":"13092:9:33"},{"kind":"number","nativeSrc":"13103:2:33","nodeType":"YulLiteral","src":"13103:2:33","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"13088:3:33","nodeType":"YulIdentifier","src":"13088:3:33"},"nativeSrc":"13088:18:33","nodeType":"YulFunctionCall","src":"13088:18:33"},{"name":"value3","nativeSrc":"13108:6:33","nodeType":"YulIdentifier","src":"13108:6:33"}],"functionName":{"name":"mstore","nativeSrc":"13081:6:33","nodeType":"YulIdentifier","src":"13081:6:33"},"nativeSrc":"13081:34:33","nodeType":"YulFunctionCall","src":"13081:34:33"},"nativeSrc":"13081:34:33","nodeType":"YulExpressionStatement","src":"13081:34:33"}]},"name":"abi_encode_tuple_t_bytes32_t_uint8_t_bytes32_t_bytes32__to_t_bytes32_t_uint8_t_bytes32_t_bytes32__fromStack_reversed","nativeSrc":"12723:398:33","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"12849:9:33","nodeType":"YulTypedName","src":"12849:9:33","type":""},{"name":"value3","nativeSrc":"12860:6:33","nodeType":"YulTypedName","src":"12860:6:33","type":""},{"name":"value2","nativeSrc":"12868:6:33","nodeType":"YulTypedName","src":"12868:6:33","type":""},{"name":"value1","nativeSrc":"12876:6:33","nodeType":"YulTypedName","src":"12876:6:33","type":""},{"name":"value0","nativeSrc":"12884:6:33","nodeType":"YulTypedName","src":"12884:6:33","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"12895:4:33","nodeType":"YulTypedName","src":"12895:4:33","type":""}],"src":"12723:398:33"},{"body":{"nativeSrc":"13158:95:33","nodeType":"YulBlock","src":"13158:95:33","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"13175:1:33","nodeType":"YulLiteral","src":"13175:1:33","type":"","value":"0"},{"arguments":[{"kind":"number","nativeSrc":"13182:3:33","nodeType":"YulLiteral","src":"13182:3:33","type":"","value":"224"},{"kind":"number","nativeSrc":"13187:10:33","nodeType":"YulLiteral","src":"13187:10:33","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nativeSrc":"13178:3:33","nodeType":"YulIdentifier","src":"13178:3:33"},"nativeSrc":"13178:20:33","nodeType":"YulFunctionCall","src":"13178:20:33"}],"functionName":{"name":"mstore","nativeSrc":"13168:6:33","nodeType":"YulIdentifier","src":"13168:6:33"},"nativeSrc":"13168:31:33","nodeType":"YulFunctionCall","src":"13168:31:33"},"nativeSrc":"13168:31:33","nodeType":"YulExpressionStatement","src":"13168:31:33"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"13215:1:33","nodeType":"YulLiteral","src":"13215:1:33","type":"","value":"4"},{"kind":"number","nativeSrc":"13218:4:33","nodeType":"YulLiteral","src":"13218:4:33","type":"","value":"0x21"}],"functionName":{"name":"mstore","nativeSrc":"13208:6:33","nodeType":"YulIdentifier","src":"13208:6:33"},"nativeSrc":"13208:15:33","nodeType":"YulFunctionCall","src":"13208:15:33"},"nativeSrc":"13208:15:33","nodeType":"YulExpressionStatement","src":"13208:15:33"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"13239:1:33","nodeType":"YulLiteral","src":"13239:1:33","type":"","value":"0"},{"kind":"number","nativeSrc":"13242:4:33","nodeType":"YulLiteral","src":"13242:4:33","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"13232:6:33","nodeType":"YulIdentifier","src":"13232:6:33"},"nativeSrc":"13232:15:33","nodeType":"YulFunctionCall","src":"13232:15:33"},"nativeSrc":"13232:15:33","nodeType":"YulExpressionStatement","src":"13232:15:33"}]},"name":"panic_error_0x21","nativeSrc":"13126:127:33","nodeType":"YulFunctionDefinition","src":"13126:127:33"},{"body":{"nativeSrc":"13314:65:33","nodeType":"YulBlock","src":"13314:65:33","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"13331:1:33","nodeType":"YulLiteral","src":"13331:1:33","type":"","value":"0"},{"name":"ptr","nativeSrc":"13334:3:33","nodeType":"YulIdentifier","src":"13334:3:33"}],"functionName":{"name":"mstore","nativeSrc":"13324:6:33","nodeType":"YulIdentifier","src":"13324:6:33"},"nativeSrc":"13324:14:33","nodeType":"YulFunctionCall","src":"13324:14:33"},"nativeSrc":"13324:14:33","nodeType":"YulExpressionStatement","src":"13324:14:33"},{"nativeSrc":"13347:26:33","nodeType":"YulAssignment","src":"13347:26:33","value":{"arguments":[{"kind":"number","nativeSrc":"13365:1:33","nodeType":"YulLiteral","src":"13365:1:33","type":"","value":"0"},{"kind":"number","nativeSrc":"13368:4:33","nodeType":"YulLiteral","src":"13368:4:33","type":"","value":"0x20"}],"functionName":{"name":"keccak256","nativeSrc":"13355:9:33","nodeType":"YulIdentifier","src":"13355:9:33"},"nativeSrc":"13355:18:33","nodeType":"YulFunctionCall","src":"13355:18:33"},"variableNames":[{"name":"data","nativeSrc":"13347:4:33","nodeType":"YulIdentifier","src":"13347:4:33"}]}]},"name":"array_dataslot_string_storage","nativeSrc":"13258:121:33","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nativeSrc":"13297:3:33","nodeType":"YulTypedName","src":"13297:3:33","type":""}],"returnVariables":[{"name":"data","nativeSrc":"13305:4:33","nodeType":"YulTypedName","src":"13305:4:33","type":""}],"src":"13258:121:33"},{"body":{"nativeSrc":"13465:437:33","nodeType":"YulBlock","src":"13465:437:33","statements":[{"body":{"nativeSrc":"13498:398:33","nodeType":"YulBlock","src":"13498:398:33","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"13519:1:33","nodeType":"YulLiteral","src":"13519:1:33","type":"","value":"0"},{"name":"array","nativeSrc":"13522:5:33","nodeType":"YulIdentifier","src":"13522:5:33"}],"functionName":{"name":"mstore","nativeSrc":"13512:6:33","nodeType":"YulIdentifier","src":"13512:6:33"},"nativeSrc":"13512:16:33","nodeType":"YulFunctionCall","src":"13512:16:33"},"nativeSrc":"13512:16:33","nodeType":"YulExpressionStatement","src":"13512:16:33"},{"nativeSrc":"13541:30:33","nodeType":"YulVariableDeclaration","src":"13541:30:33","value":{"arguments":[{"kind":"number","nativeSrc":"13563:1:33","nodeType":"YulLiteral","src":"13563:1:33","type":"","value":"0"},{"kind":"number","nativeSrc":"13566:4:33","nodeType":"YulLiteral","src":"13566:4:33","type":"","value":"0x20"}],"functionName":{"name":"keccak256","nativeSrc":"13553:9:33","nodeType":"YulIdentifier","src":"13553:9:33"},"nativeSrc":"13553:18:33","nodeType":"YulFunctionCall","src":"13553:18:33"},"variables":[{"name":"data","nativeSrc":"13545:4:33","nodeType":"YulTypedName","src":"13545:4:33","type":""}]},{"nativeSrc":"13584:57:33","nodeType":"YulVariableDeclaration","src":"13584:57:33","value":{"arguments":[{"name":"data","nativeSrc":"13607:4:33","nodeType":"YulIdentifier","src":"13607:4:33"},{"arguments":[{"kind":"number","nativeSrc":"13617:1:33","nodeType":"YulLiteral","src":"13617:1:33","type":"","value":"5"},{"arguments":[{"name":"startIndex","nativeSrc":"13624:10:33","nodeType":"YulIdentifier","src":"13624:10:33"},{"kind":"number","nativeSrc":"13636:2:33","nodeType":"YulLiteral","src":"13636:2:33","type":"","value":"31"}],"functionName":{"name":"add","nativeSrc":"13620:3:33","nodeType":"YulIdentifier","src":"13620:3:33"},"nativeSrc":"13620:19:33","nodeType":"YulFunctionCall","src":"13620:19:33"}],"functionName":{"name":"shr","nativeSrc":"13613:3:33","nodeType":"YulIdentifier","src":"13613:3:33"},"nativeSrc":"13613:27:33","nodeType":"YulFunctionCall","src":"13613:27:33"}],"functionName":{"name":"add","nativeSrc":"13603:3:33","nodeType":"YulIdentifier","src":"13603:3:33"},"nativeSrc":"13603:38:33","nodeType":"YulFunctionCall","src":"13603:38:33"},"variables":[{"name":"deleteStart","nativeSrc":"13588:11:33","nodeType":"YulTypedName","src":"13588:11:33","type":""}]},{"body":{"nativeSrc":"13678:23:33","nodeType":"YulBlock","src":"13678:23:33","statements":[{"nativeSrc":"13680:19:33","nodeType":"YulAssignment","src":"13680:19:33","value":{"name":"data","nativeSrc":"13695:4:33","nodeType":"YulIdentifier","src":"13695:4:33"},"variableNames":[{"name":"deleteStart","nativeSrc":"13680:11:33","nodeType":"YulIdentifier","src":"13680:11:33"}]}]},"condition":{"arguments":[{"name":"startIndex","nativeSrc":"13660:10:33","nodeType":"YulIdentifier","src":"13660:10:33"},{"kind":"number","nativeSrc":"13672:4:33","nodeType":"YulLiteral","src":"13672:4:33","type":"","value":"0x20"}],"functionName":{"name":"lt","nativeSrc":"13657:2:33","nodeType":"YulIdentifier","src":"13657:2:33"},"nativeSrc":"13657:20:33","nodeType":"YulFunctionCall","src":"13657:20:33"},"nativeSrc":"13654:47:33","nodeType":"YulIf","src":"13654:47:33"},{"nativeSrc":"13714:41:33","nodeType":"YulVariableDeclaration","src":"13714:41:33","value":{"arguments":[{"name":"data","nativeSrc":"13728:4:33","nodeType":"YulIdentifier","src":"13728:4:33"},{"arguments":[{"kind":"number","nativeSrc":"13738:1:33","nodeType":"YulLiteral","src":"13738:1:33","type":"","value":"5"},{"arguments":[{"name":"len","nativeSrc":"13745:3:33","nodeType":"YulIdentifier","src":"13745:3:33"},{"kind":"number","nativeSrc":"13750:2:33","nodeType":"YulLiteral","src":"13750:2:33","type":"","value":"31"}],"functionName":{"name":"add","nativeSrc":"13741:3:33","nodeType":"YulIdentifier","src":"13741:3:33"},"nativeSrc":"13741:12:33","nodeType":"YulFunctionCall","src":"13741:12:33"}],"functionName":{"name":"shr","nativeSrc":"13734:3:33","nodeType":"YulIdentifier","src":"13734:3:33"},"nativeSrc":"13734:20:33","nodeType":"YulFunctionCall","src":"13734:20:33"}],"functionName":{"name":"add","nativeSrc":"13724:3:33","nodeType":"YulIdentifier","src":"13724:3:33"},"nativeSrc":"13724:31:33","nodeType":"YulFunctionCall","src":"13724:31:33"},"variables":[{"name":"_1","nativeSrc":"13718:2:33","nodeType":"YulTypedName","src":"13718:2:33","type":""}]},{"nativeSrc":"13768:24:33","nodeType":"YulVariableDeclaration","src":"13768:24:33","value":{"name":"deleteStart","nativeSrc":"13781:11:33","nodeType":"YulIdentifier","src":"13781:11:33"},"variables":[{"name":"start","nativeSrc":"13772:5:33","nodeType":"YulTypedName","src":"13772:5:33","type":""}]},{"body":{"nativeSrc":"13866:20:33","nodeType":"YulBlock","src":"13866:20:33","statements":[{"expression":{"arguments":[{"name":"start","nativeSrc":"13875:5:33","nodeType":"YulIdentifier","src":"13875:5:33"},{"kind":"number","nativeSrc":"13882:1:33","nodeType":"YulLiteral","src":"13882:1:33","type":"","value":"0"}],"functionName":{"name":"sstore","nativeSrc":"13868:6:33","nodeType":"YulIdentifier","src":"13868:6:33"},"nativeSrc":"13868:16:33","nodeType":"YulFunctionCall","src":"13868:16:33"},"nativeSrc":"13868:16:33","nodeType":"YulExpressionStatement","src":"13868:16:33"}]},"condition":{"arguments":[{"name":"start","nativeSrc":"13816:5:33","nodeType":"YulIdentifier","src":"13816:5:33"},{"name":"_1","nativeSrc":"13823:2:33","nodeType":"YulIdentifier","src":"13823:2:33"}],"functionName":{"name":"lt","nativeSrc":"13813:2:33","nodeType":"YulIdentifier","src":"13813:2:33"},"nativeSrc":"13813:13:33","nodeType":"YulFunctionCall","src":"13813:13:33"},"nativeSrc":"13805:81:33","nodeType":"YulForLoop","post":{"nativeSrc":"13827:26:33","nodeType":"YulBlock","src":"13827:26:33","statements":[{"nativeSrc":"13829:22:33","nodeType":"YulAssignment","src":"13829:22:33","value":{"arguments":[{"name":"start","nativeSrc":"13842:5:33","nodeType":"YulIdentifier","src":"13842:5:33"},{"kind":"number","nativeSrc":"13849:1:33","nodeType":"YulLiteral","src":"13849:1:33","type":"","value":"1"}],"functionName":{"name":"add","nativeSrc":"13838:3:33","nodeType":"YulIdentifier","src":"13838:3:33"},"nativeSrc":"13838:13:33","nodeType":"YulFunctionCall","src":"13838:13:33"},"variableNames":[{"name":"start","nativeSrc":"13829:5:33","nodeType":"YulIdentifier","src":"13829:5:33"}]}]},"pre":{"nativeSrc":"13809:3:33","nodeType":"YulBlock","src":"13809:3:33","statements":[]},"src":"13805:81:33"}]},"condition":{"arguments":[{"name":"len","nativeSrc":"13481:3:33","nodeType":"YulIdentifier","src":"13481:3:33"},{"kind":"number","nativeSrc":"13486:2:33","nodeType":"YulLiteral","src":"13486:2:33","type":"","value":"31"}],"functionName":{"name":"gt","nativeSrc":"13478:2:33","nodeType":"YulIdentifier","src":"13478:2:33"},"nativeSrc":"13478:11:33","nodeType":"YulFunctionCall","src":"13478:11:33"},"nativeSrc":"13475:421:33","nodeType":"YulIf","src":"13475:421:33"}]},"name":"clean_up_bytearray_end_slots_string_storage","nativeSrc":"13384:518:33","nodeType":"YulFunctionDefinition","parameters":[{"name":"array","nativeSrc":"13437:5:33","nodeType":"YulTypedName","src":"13437:5:33","type":""},{"name":"len","nativeSrc":"13444:3:33","nodeType":"YulTypedName","src":"13444:3:33","type":""},{"name":"startIndex","nativeSrc":"13449:10:33","nodeType":"YulTypedName","src":"13449:10:33","type":""}],"src":"13384:518:33"},{"body":{"nativeSrc":"13992:81:33","nodeType":"YulBlock","src":"13992:81:33","statements":[{"nativeSrc":"14002:65:33","nodeType":"YulAssignment","src":"14002:65:33","value":{"arguments":[{"arguments":[{"name":"data","nativeSrc":"14017:4:33","nodeType":"YulIdentifier","src":"14017:4:33"},{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"14035:1:33","nodeType":"YulLiteral","src":"14035:1:33","type":"","value":"3"},{"name":"len","nativeSrc":"14038:3:33","nodeType":"YulIdentifier","src":"14038:3:33"}],"functionName":{"name":"shl","nativeSrc":"14031:3:33","nodeType":"YulIdentifier","src":"14031:3:33"},"nativeSrc":"14031:11:33","nodeType":"YulFunctionCall","src":"14031:11:33"},{"arguments":[{"kind":"number","nativeSrc":"14048:1:33","nodeType":"YulLiteral","src":"14048:1:33","type":"","value":"0"}],"functionName":{"name":"not","nativeSrc":"14044:3:33","nodeType":"YulIdentifier","src":"14044:3:33"},"nativeSrc":"14044:6:33","nodeType":"YulFunctionCall","src":"14044:6:33"}],"functionName":{"name":"shr","nativeSrc":"14027:3:33","nodeType":"YulIdentifier","src":"14027:3:33"},"nativeSrc":"14027:24:33","nodeType":"YulFunctionCall","src":"14027:24:33"}],"functionName":{"name":"not","nativeSrc":"14023:3:33","nodeType":"YulIdentifier","src":"14023:3:33"},"nativeSrc":"14023:29:33","nodeType":"YulFunctionCall","src":"14023:29:33"}],"functionName":{"name":"and","nativeSrc":"14013:3:33","nodeType":"YulIdentifier","src":"14013:3:33"},"nativeSrc":"14013:40:33","nodeType":"YulFunctionCall","src":"14013:40:33"},{"arguments":[{"kind":"number","nativeSrc":"14059:1:33","nodeType":"YulLiteral","src":"14059:1:33","type":"","value":"1"},{"name":"len","nativeSrc":"14062:3:33","nodeType":"YulIdentifier","src":"14062:3:33"}],"functionName":{"name":"shl","nativeSrc":"14055:3:33","nodeType":"YulIdentifier","src":"14055:3:33"},"nativeSrc":"14055:11:33","nodeType":"YulFunctionCall","src":"14055:11:33"}],"functionName":{"name":"or","nativeSrc":"14010:2:33","nodeType":"YulIdentifier","src":"14010:2:33"},"nativeSrc":"14010:57:33","nodeType":"YulFunctionCall","src":"14010:57:33"},"variableNames":[{"name":"used","nativeSrc":"14002:4:33","nodeType":"YulIdentifier","src":"14002:4:33"}]}]},"name":"extract_used_part_and_set_length_of_short_byte_array","nativeSrc":"13907:166:33","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nativeSrc":"13969:4:33","nodeType":"YulTypedName","src":"13969:4:33","type":""},{"name":"len","nativeSrc":"13975:3:33","nodeType":"YulTypedName","src":"13975:3:33","type":""}],"returnVariables":[{"name":"used","nativeSrc":"13983:4:33","nodeType":"YulTypedName","src":"13983:4:33","type":""}],"src":"13907:166:33"},{"body":{"nativeSrc":"14174:1203:33","nodeType":"YulBlock","src":"14174:1203:33","statements":[{"nativeSrc":"14184:24:33","nodeType":"YulVariableDeclaration","src":"14184:24:33","value":{"arguments":[{"name":"src","nativeSrc":"14204:3:33","nodeType":"YulIdentifier","src":"14204:3:33"}],"functionName":{"name":"mload","nativeSrc":"14198:5:33","nodeType":"YulIdentifier","src":"14198:5:33"},"nativeSrc":"14198:10:33","nodeType":"YulFunctionCall","src":"14198:10:33"},"variables":[{"name":"newLen","nativeSrc":"14188:6:33","nodeType":"YulTypedName","src":"14188:6:33","type":""}]},{"body":{"nativeSrc":"14251:22:33","nodeType":"YulBlock","src":"14251:22:33","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nativeSrc":"14253:16:33","nodeType":"YulIdentifier","src":"14253:16:33"},"nativeSrc":"14253:18:33","nodeType":"YulFunctionCall","src":"14253:18:33"},"nativeSrc":"14253:18:33","nodeType":"YulExpressionStatement","src":"14253:18:33"}]},"condition":{"arguments":[{"name":"newLen","nativeSrc":"14223:6:33","nodeType":"YulIdentifier","src":"14223:6:33"},{"kind":"number","nativeSrc":"14231:18:33","nodeType":"YulLiteral","src":"14231:18:33","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nativeSrc":"14220:2:33","nodeType":"YulIdentifier","src":"14220:2:33"},"nativeSrc":"14220:30:33","nodeType":"YulFunctionCall","src":"14220:30:33"},"nativeSrc":"14217:56:33","nodeType":"YulIf","src":"14217:56:33"},{"expression":{"arguments":[{"name":"slot","nativeSrc":"14326:4:33","nodeType":"YulIdentifier","src":"14326:4:33"},{"arguments":[{"arguments":[{"name":"slot","nativeSrc":"14364:4:33","nodeType":"YulIdentifier","src":"14364:4:33"}],"functionName":{"name":"sload","nativeSrc":"14358:5:33","nodeType":"YulIdentifier","src":"14358:5:33"},"nativeSrc":"14358:11:33","nodeType":"YulFunctionCall","src":"14358:11:33"}],"functionName":{"name":"extract_byte_array_length","nativeSrc":"14332:25:33","nodeType":"YulIdentifier","src":"14332:25:33"},"nativeSrc":"14332:38:33","nodeType":"YulFunctionCall","src":"14332:38:33"},{"name":"newLen","nativeSrc":"14372:6:33","nodeType":"YulIdentifier","src":"14372:6:33"}],"functionName":{"name":"clean_up_bytearray_end_slots_string_storage","nativeSrc":"14282:43:33","nodeType":"YulIdentifier","src":"14282:43:33"},"nativeSrc":"14282:97:33","nodeType":"YulFunctionCall","src":"14282:97:33"},"nativeSrc":"14282:97:33","nodeType":"YulExpressionStatement","src":"14282:97:33"},{"nativeSrc":"14388:18:33","nodeType":"YulVariableDeclaration","src":"14388:18:33","value":{"kind":"number","nativeSrc":"14405:1:33","nodeType":"YulLiteral","src":"14405:1:33","type":"","value":"0"},"variables":[{"name":"srcOffset","nativeSrc":"14392:9:33","nodeType":"YulTypedName","src":"14392:9:33","type":""}]},{"nativeSrc":"14415:17:33","nodeType":"YulAssignment","src":"14415:17:33","value":{"kind":"number","nativeSrc":"14428:4:33","nodeType":"YulLiteral","src":"14428:4:33","type":"","value":"0x20"},"variableNames":[{"name":"srcOffset","nativeSrc":"14415:9:33","nodeType":"YulIdentifier","src":"14415:9:33"}]},{"cases":[{"body":{"nativeSrc":"14478:642:33","nodeType":"YulBlock","src":"14478:642:33","statements":[{"nativeSrc":"14492:35:33","nodeType":"YulVariableDeclaration","src":"14492:35:33","value":{"arguments":[{"name":"newLen","nativeSrc":"14511:6:33","nodeType":"YulIdentifier","src":"14511:6:33"},{"arguments":[{"kind":"number","nativeSrc":"14523:2:33","nodeType":"YulLiteral","src":"14523:2:33","type":"","value":"31"}],"functionName":{"name":"not","nativeSrc":"14519:3:33","nodeType":"YulIdentifier","src":"14519:3:33"},"nativeSrc":"14519:7:33","nodeType":"YulFunctionCall","src":"14519:7:33"}],"functionName":{"name":"and","nativeSrc":"14507:3:33","nodeType":"YulIdentifier","src":"14507:3:33"},"nativeSrc":"14507:20:33","nodeType":"YulFunctionCall","src":"14507:20:33"},"variables":[{"name":"loopEnd","nativeSrc":"14496:7:33","nodeType":"YulTypedName","src":"14496:7:33","type":""}]},{"nativeSrc":"14540:49:33","nodeType":"YulVariableDeclaration","src":"14540:49:33","value":{"arguments":[{"name":"slot","nativeSrc":"14584:4:33","nodeType":"YulIdentifier","src":"14584:4:33"}],"functionName":{"name":"array_dataslot_string_storage","nativeSrc":"14554:29:33","nodeType":"YulIdentifier","src":"14554:29:33"},"nativeSrc":"14554:35:33","nodeType":"YulFunctionCall","src":"14554:35:33"},"variables":[{"name":"dstPtr","nativeSrc":"14544:6:33","nodeType":"YulTypedName","src":"14544:6:33","type":""}]},{"nativeSrc":"14602:10:33","nodeType":"YulVariableDeclaration","src":"14602:10:33","value":{"kind":"number","nativeSrc":"14611:1:33","nodeType":"YulLiteral","src":"14611:1:33","type":"","value":"0"},"variables":[{"name":"i","nativeSrc":"14606:1:33","nodeType":"YulTypedName","src":"14606:1:33","type":""}]},{"body":{"nativeSrc":"14682:165:33","nodeType":"YulBlock","src":"14682:165:33","statements":[{"expression":{"arguments":[{"name":"dstPtr","nativeSrc":"14707:6:33","nodeType":"YulIdentifier","src":"14707:6:33"},{"arguments":[{"arguments":[{"name":"src","nativeSrc":"14725:3:33","nodeType":"YulIdentifier","src":"14725:3:33"},{"name":"srcOffset","nativeSrc":"14730:9:33","nodeType":"YulIdentifier","src":"14730:9:33"}],"functionName":{"name":"add","nativeSrc":"14721:3:33","nodeType":"YulIdentifier","src":"14721:3:33"},"nativeSrc":"14721:19:33","nodeType":"YulFunctionCall","src":"14721:19:33"}],"functionName":{"name":"mload","nativeSrc":"14715:5:33","nodeType":"YulIdentifier","src":"14715:5:33"},"nativeSrc":"14715:26:33","nodeType":"YulFunctionCall","src":"14715:26:33"}],"functionName":{"name":"sstore","nativeSrc":"14700:6:33","nodeType":"YulIdentifier","src":"14700:6:33"},"nativeSrc":"14700:42:33","nodeType":"YulFunctionCall","src":"14700:42:33"},"nativeSrc":"14700:42:33","nodeType":"YulExpressionStatement","src":"14700:42:33"},{"nativeSrc":"14759:24:33","nodeType":"YulAssignment","src":"14759:24:33","value":{"arguments":[{"name":"dstPtr","nativeSrc":"14773:6:33","nodeType":"YulIdentifier","src":"14773:6:33"},{"kind":"number","nativeSrc":"14781:1:33","nodeType":"YulLiteral","src":"14781:1:33","type":"","value":"1"}],"functionName":{"name":"add","nativeSrc":"14769:3:33","nodeType":"YulIdentifier","src":"14769:3:33"},"nativeSrc":"14769:14:33","nodeType":"YulFunctionCall","src":"14769:14:33"},"variableNames":[{"name":"dstPtr","nativeSrc":"14759:6:33","nodeType":"YulIdentifier","src":"14759:6:33"}]},{"nativeSrc":"14800:33:33","nodeType":"YulAssignment","src":"14800:33:33","value":{"arguments":[{"name":"srcOffset","nativeSrc":"14817:9:33","nodeType":"YulIdentifier","src":"14817:9:33"},{"kind":"number","nativeSrc":"14828:4:33","nodeType":"YulLiteral","src":"14828:4:33","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"14813:3:33","nodeType":"YulIdentifier","src":"14813:3:33"},"nativeSrc":"14813:20:33","nodeType":"YulFunctionCall","src":"14813:20:33"},"variableNames":[{"name":"srcOffset","nativeSrc":"14800:9:33","nodeType":"YulIdentifier","src":"14800:9:33"}]}]},"condition":{"arguments":[{"name":"i","nativeSrc":"14636:1:33","nodeType":"YulIdentifier","src":"14636:1:33"},{"name":"loopEnd","nativeSrc":"14639:7:33","nodeType":"YulIdentifier","src":"14639:7:33"}],"functionName":{"name":"lt","nativeSrc":"14633:2:33","nodeType":"YulIdentifier","src":"14633:2:33"},"nativeSrc":"14633:14:33","nodeType":"YulFunctionCall","src":"14633:14:33"},"nativeSrc":"14625:222:33","nodeType":"YulForLoop","post":{"nativeSrc":"14648:21:33","nodeType":"YulBlock","src":"14648:21:33","statements":[{"nativeSrc":"14650:17:33","nodeType":"YulAssignment","src":"14650:17:33","value":{"arguments":[{"name":"i","nativeSrc":"14659:1:33","nodeType":"YulIdentifier","src":"14659:1:33"},{"kind":"number","nativeSrc":"14662:4:33","nodeType":"YulLiteral","src":"14662:4:33","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"14655:3:33","nodeType":"YulIdentifier","src":"14655:3:33"},"nativeSrc":"14655:12:33","nodeType":"YulFunctionCall","src":"14655:12:33"},"variableNames":[{"name":"i","nativeSrc":"14650:1:33","nodeType":"YulIdentifier","src":"14650:1:33"}]}]},"pre":{"nativeSrc":"14629:3:33","nodeType":"YulBlock","src":"14629:3:33","statements":[]},"src":"14625:222:33"},{"body":{"nativeSrc":"14895:166:33","nodeType":"YulBlock","src":"14895:166:33","statements":[{"nativeSrc":"14913:43:33","nodeType":"YulVariableDeclaration","src":"14913:43:33","value":{"arguments":[{"arguments":[{"name":"src","nativeSrc":"14940:3:33","nodeType":"YulIdentifier","src":"14940:3:33"},{"name":"srcOffset","nativeSrc":"14945:9:33","nodeType":"YulIdentifier","src":"14945:9:33"}],"functionName":{"name":"add","nativeSrc":"14936:3:33","nodeType":"YulIdentifier","src":"14936:3:33"},"nativeSrc":"14936:19:33","nodeType":"YulFunctionCall","src":"14936:19:33"}],"functionName":{"name":"mload","nativeSrc":"14930:5:33","nodeType":"YulIdentifier","src":"14930:5:33"},"nativeSrc":"14930:26:33","nodeType":"YulFunctionCall","src":"14930:26:33"},"variables":[{"name":"lastValue","nativeSrc":"14917:9:33","nodeType":"YulTypedName","src":"14917:9:33","type":""}]},{"expression":{"arguments":[{"name":"dstPtr","nativeSrc":"14980:6:33","nodeType":"YulIdentifier","src":"14980:6:33"},{"arguments":[{"name":"lastValue","nativeSrc":"14992:9:33","nodeType":"YulIdentifier","src":"14992:9:33"},{"arguments":[{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"15019:1:33","nodeType":"YulLiteral","src":"15019:1:33","type":"","value":"3"},{"name":"newLen","nativeSrc":"15022:6:33","nodeType":"YulIdentifier","src":"15022:6:33"}],"functionName":{"name":"shl","nativeSrc":"15015:3:33","nodeType":"YulIdentifier","src":"15015:3:33"},"nativeSrc":"15015:14:33","nodeType":"YulFunctionCall","src":"15015:14:33"},{"kind":"number","nativeSrc":"15031:3:33","nodeType":"YulLiteral","src":"15031:3:33","type":"","value":"248"}],"functionName":{"name":"and","nativeSrc":"15011:3:33","nodeType":"YulIdentifier","src":"15011:3:33"},"nativeSrc":"15011:24:33","nodeType":"YulFunctionCall","src":"15011:24:33"},{"arguments":[{"kind":"number","nativeSrc":"15041:1:33","nodeType":"YulLiteral","src":"15041:1:33","type":"","value":"0"}],"functionName":{"name":"not","nativeSrc":"15037:3:33","nodeType":"YulIdentifier","src":"15037:3:33"},"nativeSrc":"15037:6:33","nodeType":"YulFunctionCall","src":"15037:6:33"}],"functionName":{"name":"shr","nativeSrc":"15007:3:33","nodeType":"YulIdentifier","src":"15007:3:33"},"nativeSrc":"15007:37:33","nodeType":"YulFunctionCall","src":"15007:37:33"}],"functionName":{"name":"not","nativeSrc":"15003:3:33","nodeType":"YulIdentifier","src":"15003:3:33"},"nativeSrc":"15003:42:33","nodeType":"YulFunctionCall","src":"15003:42:33"}],"functionName":{"name":"and","nativeSrc":"14988:3:33","nodeType":"YulIdentifier","src":"14988:3:33"},"nativeSrc":"14988:58:33","nodeType":"YulFunctionCall","src":"14988:58:33"}],"functionName":{"name":"sstore","nativeSrc":"14973:6:33","nodeType":"YulIdentifier","src":"14973:6:33"},"nativeSrc":"14973:74:33","nodeType":"YulFunctionCall","src":"14973:74:33"},"nativeSrc":"14973:74:33","nodeType":"YulExpressionStatement","src":"14973:74:33"}]},"condition":{"arguments":[{"name":"loopEnd","nativeSrc":"14866:7:33","nodeType":"YulIdentifier","src":"14866:7:33"},{"name":"newLen","nativeSrc":"14875:6:33","nodeType":"YulIdentifier","src":"14875:6:33"}],"functionName":{"name":"lt","nativeSrc":"14863:2:33","nodeType":"YulIdentifier","src":"14863:2:33"},"nativeSrc":"14863:19:33","nodeType":"YulFunctionCall","src":"14863:19:33"},"nativeSrc":"14860:201:33","nodeType":"YulIf","src":"14860:201:33"},{"expression":{"arguments":[{"name":"slot","nativeSrc":"15081:4:33","nodeType":"YulIdentifier","src":"15081:4:33"},{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"15095:1:33","nodeType":"YulLiteral","src":"15095:1:33","type":"","value":"1"},{"name":"newLen","nativeSrc":"15098:6:33","nodeType":"YulIdentifier","src":"15098:6:33"}],"functionName":{"name":"shl","nativeSrc":"15091:3:33","nodeType":"YulIdentifier","src":"15091:3:33"},"nativeSrc":"15091:14:33","nodeType":"YulFunctionCall","src":"15091:14:33"},{"kind":"number","nativeSrc":"15107:1:33","nodeType":"YulLiteral","src":"15107:1:33","type":"","value":"1"}],"functionName":{"name":"add","nativeSrc":"15087:3:33","nodeType":"YulIdentifier","src":"15087:3:33"},"nativeSrc":"15087:22:33","nodeType":"YulFunctionCall","src":"15087:22:33"}],"functionName":{"name":"sstore","nativeSrc":"15074:6:33","nodeType":"YulIdentifier","src":"15074:6:33"},"nativeSrc":"15074:36:33","nodeType":"YulFunctionCall","src":"15074:36:33"},"nativeSrc":"15074:36:33","nodeType":"YulExpressionStatement","src":"15074:36:33"}]},"nativeSrc":"14471:649:33","nodeType":"YulCase","src":"14471:649:33","value":{"kind":"number","nativeSrc":"14476:1:33","nodeType":"YulLiteral","src":"14476:1:33","type":"","value":"1"}},{"body":{"nativeSrc":"15137:234:33","nodeType":"YulBlock","src":"15137:234:33","statements":[{"nativeSrc":"15151:14:33","nodeType":"YulVariableDeclaration","src":"15151:14:33","value":{"kind":"number","nativeSrc":"15164:1:33","nodeType":"YulLiteral","src":"15164:1:33","type":"","value":"0"},"variables":[{"name":"value","nativeSrc":"15155:5:33","nodeType":"YulTypedName","src":"15155:5:33","type":""}]},{"body":{"nativeSrc":"15200:67:33","nodeType":"YulBlock","src":"15200:67:33","statements":[{"nativeSrc":"15218:35:33","nodeType":"YulAssignment","src":"15218:35:33","value":{"arguments":[{"arguments":[{"name":"src","nativeSrc":"15237:3:33","nodeType":"YulIdentifier","src":"15237:3:33"},{"name":"srcOffset","nativeSrc":"15242:9:33","nodeType":"YulIdentifier","src":"15242:9:33"}],"functionName":{"name":"add","nativeSrc":"15233:3:33","nodeType":"YulIdentifier","src":"15233:3:33"},"nativeSrc":"15233:19:33","nodeType":"YulFunctionCall","src":"15233:19:33"}],"functionName":{"name":"mload","nativeSrc":"15227:5:33","nodeType":"YulIdentifier","src":"15227:5:33"},"nativeSrc":"15227:26:33","nodeType":"YulFunctionCall","src":"15227:26:33"},"variableNames":[{"name":"value","nativeSrc":"15218:5:33","nodeType":"YulIdentifier","src":"15218:5:33"}]}]},"condition":{"name":"newLen","nativeSrc":"15181:6:33","nodeType":"YulIdentifier","src":"15181:6:33"},"nativeSrc":"15178:89:33","nodeType":"YulIf","src":"15178:89:33"},{"expression":{"arguments":[{"name":"slot","nativeSrc":"15287:4:33","nodeType":"YulIdentifier","src":"15287:4:33"},{"arguments":[{"name":"value","nativeSrc":"15346:5:33","nodeType":"YulIdentifier","src":"15346:5:33"},{"name":"newLen","nativeSrc":"15353:6:33","nodeType":"YulIdentifier","src":"15353:6:33"}],"functionName":{"name":"extract_used_part_and_set_length_of_short_byte_array","nativeSrc":"15293:52:33","nodeType":"YulIdentifier","src":"15293:52:33"},"nativeSrc":"15293:67:33","nodeType":"YulFunctionCall","src":"15293:67:33"}],"functionName":{"name":"sstore","nativeSrc":"15280:6:33","nodeType":"YulIdentifier","src":"15280:6:33"},"nativeSrc":"15280:81:33","nodeType":"YulFunctionCall","src":"15280:81:33"},"nativeSrc":"15280:81:33","nodeType":"YulExpressionStatement","src":"15280:81:33"}]},"nativeSrc":"15129:242:33","nodeType":"YulCase","src":"15129:242:33","value":"default"}],"expression":{"arguments":[{"name":"newLen","nativeSrc":"14451:6:33","nodeType":"YulIdentifier","src":"14451:6:33"},{"kind":"number","nativeSrc":"14459:2:33","nodeType":"YulLiteral","src":"14459:2:33","type":"","value":"31"}],"functionName":{"name":"gt","nativeSrc":"14448:2:33","nodeType":"YulIdentifier","src":"14448:2:33"},"nativeSrc":"14448:14:33","nodeType":"YulFunctionCall","src":"14448:14:33"},"nativeSrc":"14441:930:33","nodeType":"YulSwitch","src":"14441:930:33"}]},"name":"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage","nativeSrc":"14078:1299:33","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nativeSrc":"14159:4:33","nodeType":"YulTypedName","src":"14159:4:33","type":""},{"name":"src","nativeSrc":"14165:3:33","nodeType":"YulTypedName","src":"14165:3:33","type":""}],"src":"14078:1299:33"},{"body":{"nativeSrc":"15430:174:33","nodeType":"YulBlock","src":"15430:174:33","statements":[{"nativeSrc":"15440:16:33","nodeType":"YulAssignment","src":"15440:16:33","value":{"arguments":[{"name":"x","nativeSrc":"15451:1:33","nodeType":"YulIdentifier","src":"15451:1:33"},{"name":"y","nativeSrc":"15454:1:33","nodeType":"YulIdentifier","src":"15454:1:33"}],"functionName":{"name":"add","nativeSrc":"15447:3:33","nodeType":"YulIdentifier","src":"15447:3:33"},"nativeSrc":"15447:9:33","nodeType":"YulFunctionCall","src":"15447:9:33"},"variableNames":[{"name":"sum","nativeSrc":"15440:3:33","nodeType":"YulIdentifier","src":"15440:3:33"}]},{"body":{"nativeSrc":"15487:111:33","nodeType":"YulBlock","src":"15487:111:33","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"15508:1:33","nodeType":"YulLiteral","src":"15508:1:33","type":"","value":"0"},{"arguments":[{"kind":"number","nativeSrc":"15515:3:33","nodeType":"YulLiteral","src":"15515:3:33","type":"","value":"224"},{"kind":"number","nativeSrc":"15520:10:33","nodeType":"YulLiteral","src":"15520:10:33","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nativeSrc":"15511:3:33","nodeType":"YulIdentifier","src":"15511:3:33"},"nativeSrc":"15511:20:33","nodeType":"YulFunctionCall","src":"15511:20:33"}],"functionName":{"name":"mstore","nativeSrc":"15501:6:33","nodeType":"YulIdentifier","src":"15501:6:33"},"nativeSrc":"15501:31:33","nodeType":"YulFunctionCall","src":"15501:31:33"},"nativeSrc":"15501:31:33","nodeType":"YulExpressionStatement","src":"15501:31:33"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"15552:1:33","nodeType":"YulLiteral","src":"15552:1:33","type":"","value":"4"},{"kind":"number","nativeSrc":"15555:4:33","nodeType":"YulLiteral","src":"15555:4:33","type":"","value":"0x11"}],"functionName":{"name":"mstore","nativeSrc":"15545:6:33","nodeType":"YulIdentifier","src":"15545:6:33"},"nativeSrc":"15545:15:33","nodeType":"YulFunctionCall","src":"15545:15:33"},"nativeSrc":"15545:15:33","nodeType":"YulExpressionStatement","src":"15545:15:33"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"15580:1:33","nodeType":"YulLiteral","src":"15580:1:33","type":"","value":"0"},{"kind":"number","nativeSrc":"15583:4:33","nodeType":"YulLiteral","src":"15583:4:33","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"15573:6:33","nodeType":"YulIdentifier","src":"15573:6:33"},"nativeSrc":"15573:15:33","nodeType":"YulFunctionCall","src":"15573:15:33"},"nativeSrc":"15573:15:33","nodeType":"YulExpressionStatement","src":"15573:15:33"}]},"condition":{"arguments":[{"name":"x","nativeSrc":"15471:1:33","nodeType":"YulIdentifier","src":"15471:1:33"},{"name":"sum","nativeSrc":"15474:3:33","nodeType":"YulIdentifier","src":"15474:3:33"}],"functionName":{"name":"gt","nativeSrc":"15468:2:33","nodeType":"YulIdentifier","src":"15468:2:33"},"nativeSrc":"15468:10:33","nodeType":"YulFunctionCall","src":"15468:10:33"},"nativeSrc":"15465:133:33","nodeType":"YulIf","src":"15465:133:33"}]},"name":"checked_add_t_uint256","nativeSrc":"15382:222:33","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nativeSrc":"15413:1:33","nodeType":"YulTypedName","src":"15413:1:33","type":""},{"name":"y","nativeSrc":"15416:1:33","nodeType":"YulTypedName","src":"15416:1:33","type":""}],"returnVariables":[{"name":"sum","nativeSrc":"15422:3:33","nodeType":"YulTypedName","src":"15422:3:33","type":""}],"src":"15382:222:33"},{"body":{"nativeSrc":"15746:150:33","nodeType":"YulBlock","src":"15746:150:33","statements":[{"nativeSrc":"15756:27:33","nodeType":"YulVariableDeclaration","src":"15756:27:33","value":{"arguments":[{"name":"value0","nativeSrc":"15776:6:33","nodeType":"YulIdentifier","src":"15776:6:33"}],"functionName":{"name":"mload","nativeSrc":"15770:5:33","nodeType":"YulIdentifier","src":"15770:5:33"},"nativeSrc":"15770:13:33","nodeType":"YulFunctionCall","src":"15770:13:33"},"variables":[{"name":"length","nativeSrc":"15760:6:33","nodeType":"YulTypedName","src":"15760:6:33","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"value0","nativeSrc":"15831:6:33","nodeType":"YulIdentifier","src":"15831:6:33"},{"kind":"number","nativeSrc":"15839:4:33","nodeType":"YulLiteral","src":"15839:4:33","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"15827:3:33","nodeType":"YulIdentifier","src":"15827:3:33"},"nativeSrc":"15827:17:33","nodeType":"YulFunctionCall","src":"15827:17:33"},{"name":"pos","nativeSrc":"15846:3:33","nodeType":"YulIdentifier","src":"15846:3:33"},{"name":"length","nativeSrc":"15851:6:33","nodeType":"YulIdentifier","src":"15851:6:33"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nativeSrc":"15792:34:33","nodeType":"YulIdentifier","src":"15792:34:33"},"nativeSrc":"15792:66:33","nodeType":"YulFunctionCall","src":"15792:66:33"},"nativeSrc":"15792:66:33","nodeType":"YulExpressionStatement","src":"15792:66:33"},{"nativeSrc":"15867:23:33","nodeType":"YulAssignment","src":"15867:23:33","value":{"arguments":[{"name":"pos","nativeSrc":"15878:3:33","nodeType":"YulIdentifier","src":"15878:3:33"},{"name":"length","nativeSrc":"15883:6:33","nodeType":"YulIdentifier","src":"15883:6:33"}],"functionName":{"name":"add","nativeSrc":"15874:3:33","nodeType":"YulIdentifier","src":"15874:3:33"},"nativeSrc":"15874:16:33","nodeType":"YulFunctionCall","src":"15874:16:33"},"variableNames":[{"name":"end","nativeSrc":"15867:3:33","nodeType":"YulIdentifier","src":"15867:3:33"}]}]},"name":"abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed","nativeSrc":"15609:287:33","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"15722:3:33","nodeType":"YulTypedName","src":"15722:3:33","type":""},{"name":"value0","nativeSrc":"15727:6:33","nodeType":"YulTypedName","src":"15727:6:33","type":""}],"returnVariables":[{"name":"end","nativeSrc":"15738:3:33","nodeType":"YulTypedName","src":"15738:3:33","type":""}],"src":"15609:287:33"}]},"contents":"{\n    { }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_tuple_t_bytes4(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        if iszero(eq(value, and(value, shl(224, 0xffffffff)))) { revert(0, 0) }\n        value0 := value\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function copy_memory_to_memory_with_cleanup(src, dst, length)\n    {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n    function abi_encode_string(value, pos) -> end\n    {\n        let length := mload(value)\n        mstore(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), add(pos, 0x20), length)\n        end := add(add(pos, and(add(length, 31), not(31))), 0x20)\n    }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        tail := abi_encode_string(value0, add(headStart, 32))\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        let value := 0\n        value := calldataload(add(headStart, 32))\n        value1 := value\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        let value := 0\n        value := calldataload(add(headStart, 64))\n        value2 := value\n    }\n    function abi_decode_tuple_t_bytes32(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := 0\n        value := calldataload(headStart)\n        value0 := value\n    }\n    function abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_tuple_t_bytes32t_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let value := 0\n        value := calldataload(headStart)\n        value0 := value\n        value1 := abi_decode_address(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xff))\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function abi_decode_tuple_t_addresst_bytes_memory_ptr(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        let offset := calldataload(add(headStart, 32))\n        if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n        let _1 := add(headStart, offset)\n        if iszero(slt(add(_1, 0x1f), dataEnd)) { revert(0, 0) }\n        let length := calldataload(_1)\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n        let memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(and(add(length, 0x1f), not(31)), 63), not(31)))\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        mstore(memPtr, length)\n        if gt(add(add(_1, length), 32), dataEnd) { revert(0, 0) }\n        calldatacopy(add(memPtr, 32), add(_1, 32), length)\n        mstore(add(add(memPtr, length), 32), 0)\n        value1 := memPtr\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := 0\n        value := calldataload(headStart)\n        value0 := value\n    }\n    function abi_encode_tuple_t_bytes1_t_string_memory_ptr_t_string_memory_ptr_t_uint256_t_address_t_bytes32_t_array$_t_uint256_$dyn_memory_ptr__to_t_bytes1_t_string_memory_ptr_t_string_memory_ptr_t_uint256_t_address_t_bytes32_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed(headStart, value6, value5, value4, value3, value2, value1, value0) -> tail\n    {\n        mstore(headStart, and(value0, shl(248, 255)))\n        mstore(add(headStart, 32), 224)\n        let tail_1 := abi_encode_string(value1, add(headStart, 224))\n        mstore(add(headStart, 64), sub(tail_1, headStart))\n        let tail_2 := abi_encode_string(value2, tail_1)\n        mstore(add(headStart, 96), value3)\n        mstore(add(headStart, 128), and(value4, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 160), value5)\n        mstore(add(headStart, 192), sub(tail_2, headStart))\n        let pos := tail_2\n        let length := mload(value6)\n        mstore(tail_2, length)\n        pos := add(tail_2, 32)\n        let srcPtr := add(value6, 32)\n        let i := 0\n        for { } lt(i, length) { i := add(i, 1) }\n        {\n            mstore(pos, mload(srcPtr))\n            pos := add(pos, 32)\n            srcPtr := add(srcPtr, 32)\n        }\n        tail := pos\n    }\n    function abi_decode_array_address_dyn_calldata(offset, end) -> arrayPos, length\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        length := calldataload(offset)\n        if gt(length, 0xffffffffffffffff) { revert(0, 0) }\n        arrayPos := add(offset, 0x20)\n        if gt(add(add(offset, shl(5, length)), 0x20), end) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_array$_t_address_$dyn_calldata_ptrt_array$_t_uint256_$dyn_calldata_ptr(headStart, dataEnd) -> value0, value1, value2, value3\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let offset := calldataload(headStart)\n        if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n        let value0_1, value1_1 := abi_decode_array_address_dyn_calldata(add(headStart, offset), dataEnd)\n        value0 := value0_1\n        value1 := value1_1\n        let offset_1 := calldataload(add(headStart, 32))\n        if gt(offset_1, 0xffffffffffffffff) { revert(0, 0) }\n        let value2_1, value3_1 := abi_decode_array_address_dyn_calldata(add(headStart, offset_1), dataEnd)\n        value2 := value2_1\n        value3 := value3_1\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_uint8t_bytes32t_bytes32(headStart, dataEnd) -> value0, value1, value2, value3, value4, value5, value6\n    {\n        if slt(sub(dataEnd, headStart), 224) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        let value := 0\n        value := calldataload(add(headStart, 64))\n        value2 := value\n        let value_1 := 0\n        value_1 := calldataload(add(headStart, 96))\n        value3 := value_1\n        let value_2 := calldataload(add(headStart, 128))\n        if iszero(eq(value_2, and(value_2, 0xff))) { revert(0, 0) }\n        value4 := value_2\n        let value_3 := 0\n        value_3 := calldataload(add(headStart, 160))\n        value5 := value_3\n        let value_4 := 0\n        value_4 := calldataload(add(headStart, 192))\n        value6 := value_4\n    }\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_encode_tuple_t_stringliteral_2e5045ff73280aa8e8acd8c82710f23812497f87f7f576e2220a2ddd0d45eade__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 21)\n        mstore(add(headStart, 64), \"EIP712: Uninitialized\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_582fd48f3876d7686bfeaaaa0db0589073271dedd50d66094f02fee2a3d2e01c__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 22)\n        mstore(add(headStart, 64), \"Arrays length mismatch\")\n        tail := add(headStart, 96)\n    }\n    function panic_error_0x32()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n    function abi_encode_tuple_t_bytes32_t_address_t_address_t_uint256_t_uint256_t_uint256__to_t_bytes32_t_address_t_address_t_uint256_t_uint256_t_uint256__fromStack_reversed(headStart, value5, value4, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 192)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), and(value1, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 64), and(value2, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 96), value3)\n        mstore(add(headStart, 128), value4)\n        mstore(add(headStart, 160), value5)\n    }\n    function abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), and(value1, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_rational_1_by_1__to_t_uint64__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xffffffffffffffff))\n    }\n    function abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), value2)\n    }\n    function abi_decode_tuple_t_bytes32_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := mload(headStart)\n    }\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_encode_tuple_t_address_t_bytes32__to_t_address_t_bytes32__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_encode_tuple_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__to_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__fromStack_reversed(headStart, value4, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 160)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), value3)\n        mstore(add(headStart, 128), and(value4, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_bytes32_t_uint8_t_bytes32_t_bytes32__to_t_bytes32_t_uint8_t_bytes32_t_bytes32__fromStack_reversed(headStart, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 128)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), and(value1, 0xff))\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), value3)\n    }\n    function panic_error_0x21()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x21)\n        revert(0, 0x24)\n    }\n    function array_dataslot_string_storage(ptr) -> data\n    {\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n    }\n    function clean_up_bytearray_end_slots_string_storage(array, len, startIndex)\n    {\n        if gt(len, 31)\n        {\n            mstore(0, array)\n            let data := keccak256(0, 0x20)\n            let deleteStart := add(data, shr(5, add(startIndex, 31)))\n            if lt(startIndex, 0x20) { deleteStart := data }\n            let _1 := add(data, shr(5, add(len, 31)))\n            let start := deleteStart\n            for { } lt(start, _1) { start := add(start, 1) }\n            { sstore(start, 0) }\n        }\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used\n    {\n        used := or(and(data, not(shr(shl(3, len), not(0)))), shl(1, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src)\n    {\n        let newLen := mload(src)\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n        clean_up_bytearray_end_slots_string_storage(slot, extract_byte_array_length(sload(slot)), newLen)\n        let srcOffset := 0\n        srcOffset := 0x20\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(31))\n            let dstPtr := array_dataslot_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) }\n            {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 0x20)\n            }\n            if lt(loopEnd, newLen)\n            {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, and(lastValue, not(shr(and(shl(3, newLen), 248), not(0)))))\n            }\n            sstore(slot, add(shl(1, newLen), 1))\n        }\n        default {\n            let value := 0\n            if newLen\n            {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        sum := add(x, y)\n        if gt(x, sum)\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x11)\n            revert(0, 0x24)\n        }\n    }\n    function abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos, value0) -> end\n    {\n        let length := mload(value0)\n        copy_memory_to_memory_with_cleanup(add(value0, 0x20), pos, length)\n        end := add(pos, length)\n    }\n}","id":33,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{"652":[{"length":32,"start":4709},{"length":32,"start":4750},{"length":32,"start":5076}]},"linkReferences":{},"object":"60806040526004361061021a5760003560e01c80637ecebe0011610123578063a84173ae116100ab578063d53913931161006f578063d53913931461064e578063d547741f14610682578063dd62ed3e146106a2578063e63ab1e9146106c2578063fe4b84df146106e457600080fd5b8063a84173ae14610585578063a9059cbb146105bd578063ad3cb1cc146105dd578063c3085a3e1461060e578063d505accf1461062e57600080fd5b806388d695b2116100f257806388d695b2146104fb57806391d148541461051b57806395d89b411461053b5780639781a37e14610550578063a217fddf1461057057600080fd5b80637ecebe001461047e57806380ea3de11461049e5780638456cb59146104be57806384b0196e146104d357600080fd5b8063313ce567116101a65780634f1ef286116101755780634f1ef286146103e357806352d1902d146103f657806354fd4d501461040b5780635c975abb1461043957806370a082311461045e57600080fd5b8063313ce5671461037d5780633644e5151461039957806336568abe146103ae5780633f4ba83a146103ce57600080fd5b8063095ea7b3116101ed578063095ea7b3146102c757806318160ddd146102e757806323b872dd1461031b578063248a9ca31461033b5780632f2ff15d1461035b57600080fd5b806301320fe21461021f57806301ffc9a71461025f57806304646a491461028f57806306fdde03146102a5575b600080fd5b34801561022b57600080fd5b5061024c61023a366004611eb1565b60026020526000908152604090205481565b6040519081526020015b60405180910390f35b34801561026b57600080fd5b5061027f61027a366004611ecc565b610704565b6040519015158152602001610256565b34801561029b57600080fd5b5061024c60015481565b3480156102b157600080fd5b506102ba61073b565b6040516102569190611f46565b3480156102d357600080fd5b5061027f6102e2366004611f59565b6107e4565b3480156102f357600080fd5b507f52c63247e1f47db19d5ce0460030c497f067ca4cebf71ba98eeadabe20bace025461024c565b34801561032757600080fd5b5061027f610336366004611f83565b6107fc565b34801561034757600080fd5b5061024c610356366004611fc0565b610822565b34801561036757600080fd5b5061037b610376366004611fd9565b610844565b005b34801561038957600080fd5b5060405160128152602001610256565b3480156103a557600080fd5b5061024c610866565b3480156103ba57600080fd5b5061037b6103c9366004611fd9565b610875565b3480156103da57600080fd5b5061037b6108ad565b61037b6103f136600461201b565b6108d0565b34801561040257600080fd5b5061024c6108ef565b34801561041757600080fd5b506040805180820190915260058152640322e302e360dc1b60208201526102ba565b34801561044557600080fd5b5060008051602061253a8339815191525460ff1661027f565b34801561046a57600080fd5b5061024c610479366004611eb1565b61090c565b34801561048a57600080fd5b5061024c610499366004611eb1565b61093f565b3480156104aa57600080fd5b5061037b6104b9366004611fc0565b61094a565b3480156104ca57600080fd5b5061037b61099b565b3480156104df57600080fd5b506104e86109bb565b60405161025697969594939291906120e5565b34801561050757600080fd5b5061037b6105163660046121c9565b610a6c565b34801561052757600080fd5b5061027f610536366004611fd9565b610b17565b34801561054757600080fd5b506102ba610b4f565b34801561055c57600080fd5b5061037b61056b366004611f59565b610b8e565b34801561057c57600080fd5b5061024c600081565b34801561059157600080fd5b506000546105a5906001600160a01b031681565b6040516001600160a01b039091168152602001610256565b3480156105c957600080fd5b5061027f6105d8366004611f59565b610bf3565b3480156105e957600080fd5b506102ba604051806040016040528060058152602001640352e302e360dc1b81525081565b34801561061a57600080fd5b5061037b610629366004611eb1565b610c01565b34801561063a57600080fd5b5061037b61064936600461223a565b610c5d565b34801561065a57600080fd5b5061024c7f9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a681565b34801561068e57600080fd5b5061037b61069d366004611fd9565b610db6565b3480156106ae57600080fd5b5061024c6106bd3660046122ad565b610dd2565b3480156106ce57600080fd5b5061024c6000805160206124fa83398151915281565b3480156106f057600080fd5b5061037b6106ff366004611fc0565b610e1c565b60006001600160e01b03198216637965db0b60e01b148061073557506301ffc9a760e01b6001600160e01b03198316145b92915050565b6060600060008051602061249a8339815191525b9050806003018054610760906122d7565b80601f016020809104026020016040519081016040528092919081815260200182805461078c906122d7565b80156107d95780601f106107ae576101008083540402835291602001916107d9565b820191906000526020600020905b8154815290600101906020018083116107bc57829003601f168201915b505050505091505090565b6000336107f2818585610ff8565b5060019392505050565b60003361080a858285611005565b610815858585611066565b60019150505b9392505050565b600090815260008051602061251a833981519152602052604090206001015490565b61084d82610822565b610856816110c5565b61086083836110cf565b50505050565b6000610870611174565b905090565b6001600160a01b038116331461089e5760405163334bd91960e11b815260040160405180910390fd5b6108a8828261117e565b505050565b6000805160206124fa8339815191526108c5816110c5565b6108cd6111fa565b50565b6108d861125a565b6108e182611301565b6108eb828261130c565b5050565b60006108f96113c9565b506000805160206124da83398151915290565b60008060008051602061249a8339815191525b6001600160a01b0390931660009081526020939093525050604090205490565b600061073582611412565b6000610955816110c5565b600180549083905560408051828152602081018590527f98eaabfe135a9c40c420208962bf81e7926b4d6df3e23502164c0554b7b35224910160405180910390a1505050565b6000805160206124fa8339815191526109b3816110c5565b6108cd61143b565b600060608082808083816000805160206124ba83398151915280549091501580156109e857506001810154155b610a315760405162461bcd60e51b81526020600482015260156024820152741152540dcc4c8e88155b9a5b9a5d1a585b1a5e9959605a1b60448201526064015b60405180910390fd5b610a39611484565b610a416114c3565b60408051600080825260208201909252600f60f81b9c939b5091995046985030975095509350915050565b828114610ab45760405162461bcd60e51b8152602060048201526016602482015275082e4e4c2f2e640d8cadccee8d040dad2e6dac2e8c6d60531b6044820152606401610a28565b60005b83811015610b1057610b0833868684818110610ad557610ad5612311565b9050602002016020810190610aea9190611eb1565b858585818110610afc57610afc612311565b90506020020135611066565b600101610ab7565b5050505050565b600091825260008051602061251a833981519152602090815260408084206001600160a01b0393909316845291905290205460ff1690565b7f52c63247e1f47db19d5ce0460030c497f067ca4cebf71ba98eeadabe20bace04805460609160008051602061249a83398151915291610760906122d7565b6000610b99816110c5565b6001600160a01b03831660008181526002602052604090819020849055517fa162f0703cbc0c48ea2c9e9bed5743aabc058e7532e594490e3a35bfb0f75ab890610be69085815260200190565b60405180910390a2505050565b6000336107f2818585611066565b6000610c0c816110c5565b600080546001600160a01b038481166001600160a01b0319831681178455604051919092169283917fdaaf87d9985c65a1bfbd019043294923ae1b048ba8b4616e3acb32741d268da19190a3505050565b83421115610c815760405163313c898160e11b815260048101859052602401610a28565b60007f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9888888610ced8c6001600160a01b031660009081527f5ab42ced628888259c08ac98db1eb0cf702fc1501344311d8b100cd1bfe4bb006020526040902080546001810190915590565b6040805160208101969096526001600160a01b0394851690860152929091166060840152608083015260a082015260c0810186905260e0016040516020818303038152906040528051906020012090506000610d48826114db565b90506000610d5882878787611508565b9050896001600160a01b0316816001600160a01b031614610d9f576040516325c0072360e11b81526001600160a01b0380831660048301528b166024820152604401610a28565b610daa8a8a8a610ff8565b50505050505050505050565b610dbf82610822565b610dc8816110c5565b610860838361117e565b6001600160a01b0391821660009081527f52c63247e1f47db19d5ce0460030c497f067ca4cebf71ba98eeadabe20bace016020908152604080832093909416825291909152205490565b6000610e26611536565b805490915060ff600160401b820416159067ffffffffffffffff16600081158015610e4e5750825b905060008267ffffffffffffffff166001148015610e6b5750303b155b905081158015610e79575080155b15610e975760405163f92ee8a960e01b815260040160405180910390fd5b845467ffffffffffffffff191660011785558315610ec157845460ff60401b1916600160401b1785555b610f07604051806040016040528060098152602001682820a2102a37b5b2b760b91b8152506040518060400160405280600381526020016214105160ea1b81525061155f565b610f31604051806040016040528060098152602001682820a2102a37b5b2b760b91b815250611571565b610f3961159c565b610f4161159c565b610f4961159c565b610f546000336110cf565b50610f6d6000805160206124fa833981519152336110cf565b50610f987f9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a6336110cf565b50610fa333876115a4565b620151806001558315610ff057845460ff60401b19168555604051600181527fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d29060200160405180910390a15b505050505050565b6108a883838360016115da565b60006110118484610dd2565b9050600019811015610860578181101561105757604051637dc7a0d960e11b81526001600160a01b03841660048201526024810182905260448101839052606401610a28565b610860848484840360006115da565b6001600160a01b03831661109057604051634b637e8f60e11b815260006004820152602401610a28565b6001600160a01b0382166110ba5760405163ec442f0560e01b815260006004820152602401610a28565b6108a88383836116c1565b6108cd813361174d565b600060008051602061251a8339815191526110ea8484610b17565b61116a576000848152602082815260408083206001600160a01b03871684529091529020805460ff191660011790556111203390565b6001600160a01b0316836001600160a01b0316857f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a46001915050610735565b6000915050610735565b6000610870611786565b600060008051602061251a8339815191526111998484610b17565b1561116a576000848152602082815260408083206001600160a01b0387168085529252808320805460ff1916905551339287917ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b9190a46001915050610735565b6112026117fa565b60008051602061253a833981519152805460ff191681557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa335b6040516001600160a01b03909116815260200160405180910390a150565b306001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614806112e157507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166112d56000805160206124da833981519152546001600160a01b031690565b6001600160a01b031614155b156112ff5760405163703e46dd60e11b815260040160405180910390fd5b565b60006108eb816110c5565b816001600160a01b03166352d1902d6040518163ffffffff1660e01b8152600401602060405180830381865afa925050508015611366575060408051601f3d908101601f1916820190925261136391810190612327565b60015b61138e57604051634c9c8ce360e01b81526001600160a01b0383166004820152602401610a28565b6000805160206124da83398151915281146113bf57604051632a87526960e21b815260048101829052602401610a28565b6108a8838361182a565b306001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146112ff5760405163703e46dd60e11b815260040160405180910390fd5b6000807f5ab42ced628888259c08ac98db1eb0cf702fc1501344311d8b100cd1bfe4bb0061091f565b611443611880565b60008051602061253a833981519152805460ff191660011781557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a2583361123c565b7fa16a46d94261c7517cc8ff89f61c0ce93598e3c849801011dee649a6a557d10280546060916000805160206124ba83398151915291610760906122d7565b606060006000805160206124ba83398151915261074f565b60006107356114e8611174565b8360405161190160f01b8152600281019290925260228201526042902090565b60008060008061151a888888886118b1565b92509250925061152a8282611980565b50909695505050505050565b6000807ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00610735565b611567611a39565b6108eb8282611a5e565b611579611a39565b6108cd81604051806040016040528060018152602001603160f81b815250611aaf565b6112ff611a39565b6001600160a01b0382166115ce5760405163ec442f0560e01b815260006004820152602401610a28565b6108eb600083836116c1565b60008051602061249a8339815191526001600160a01b0385166116135760405163e602df0560e01b815260006004820152602401610a28565b6001600160a01b03841661163d57604051634a1406b160e11b815260006004820152602401610a28565b6001600160a01b03808616600090815260018301602090815260408083209388168352929052208390558115610b1057836001600160a01b0316856001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925856040516116b291815260200190565b60405180910390a35050505050565b6001600160a01b038316158015906116e157506001600160a01b03821615155b15611742576001600160a01b038316600090815260026020526040902054421015611742576001600160a01b03831660008181526002602052604090819020549051630dac64f960e01b815260048101929092526024820152604401610a28565b6108a8838383611b10565b6117578282610b17565b6108eb5760405163e2517d3f60e01b81526001600160a01b038216600482015260248101839052604401610a28565b60007f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f6117b1611c4e565b6117b9611cb8565b60408051602081019490945283019190915260608201524660808201523060a082015260c00160405160208183030381529060405280519060200120905090565b60008051602061253a8339815191525460ff166112ff57604051638dfc202b60e01b815260040160405180910390fd5b61183382611cfc565b6040516001600160a01b038316907fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b90600090a2805115611878576108a88282611d61565b6108eb611dd7565b60008051602061253a8339815191525460ff16156112ff5760405163d93c066560e01b815260040160405180910390fd5b600080807f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a08411156118ec5750600091506003905082611976565b604080516000808252602082018084528a905260ff891692820192909252606081018790526080810186905260019060a0016020604051602081039080840390855afa158015611940573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b03811661196c57506000925060019150829050611976565b9250600091508190505b9450945094915050565b600082600381111561199457611994612340565b0361199d575050565b60018260038111156119b1576119b1612340565b036119cf5760405163f645eedf60e01b815260040160405180910390fd5b60028260038111156119e3576119e3612340565b03611a045760405163fce698f760e01b815260048101829052602401610a28565b6003826003811115611a1857611a18612340565b036108eb576040516335e2f38360e21b815260048101829052602401610a28565b611a41611df6565b6112ff57604051631afcd79f60e31b815260040160405180910390fd5b611a66611a39565b60008051602061249a8339815191527f52c63247e1f47db19d5ce0460030c497f067ca4cebf71ba98eeadabe20bace03611aa0848261239d565b5060048101610860838261239d565b611ab7611a39565b6000805160206124ba8339815191527fa16a46d94261c7517cc8ff89f61c0ce93598e3c849801011dee649a6a557d102611af1848261239d565b5060038101611b00838261239d565b5060008082556001909101555050565b60008051602061249a8339815191526001600160a01b038416611b4c5781816002016000828254611b41919061245c565b90915550611bbe9050565b6001600160a01b03841660009081526020829052604090205482811015611b9f5760405163391434e360e21b81526001600160a01b03861660048201526024810182905260448101849052606401610a28565b6001600160a01b03851660009081526020839052604090209083900390555b6001600160a01b038316611bdc576002810180548390039055611bfb565b6001600160a01b03831660009081526020829052604090208054830190555b826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef84604051611c4091815260200190565b60405180910390a350505050565b60006000805160206124ba83398151915281611c68611484565b805190915015611c8057805160209091012092915050565b81548015611c8f579392505050565b7fc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470935050505090565b60006000805160206124ba83398151915281611cd26114c3565b805190915015611cea57805160209091012092915050565b60018201548015611c8f579392505050565b806001600160a01b03163b600003611d3257604051634c9c8ce360e01b81526001600160a01b0382166004820152602401610a28565b6000805160206124da83398151915280546001600160a01b0319166001600160a01b0392909216919091179055565b6060600080846001600160a01b031684604051611d7e919061247d565b600060405180830381855af49150503d8060008114611db9576040519150601f19603f3d011682016040523d82523d6000602084013e611dbe565b606091505b5091509150611dce858383611e10565b95945050505050565b34156112ff5760405163b398979f60e01b815260040160405180910390fd5b6000611e00611536565b54600160401b900460ff16919050565b606082611e2557611e2082611e6c565b61081b565b8151158015611e3c57506001600160a01b0384163b155b15611e6557604051639996b31560e01b81526001600160a01b0385166004820152602401610a28565b508061081b565b805115611e7c5780518082602001fd5b60405163d6bda27560e01b815260040160405180910390fd5b80356001600160a01b0381168114611eac57600080fd5b919050565b600060208284031215611ec357600080fd5b61081b82611e95565b600060208284031215611ede57600080fd5b81356001600160e01b03198116811461081b57600080fd5b60005b83811015611f11578181015183820152602001611ef9565b50506000910152565b60008151808452611f32816020860160208601611ef6565b601f01601f19169290920160200192915050565b60208152600061081b6020830184611f1a565b60008060408385031215611f6c57600080fd5b611f7583611e95565b946020939093013593505050565b600080600060608486031215611f9857600080fd5b611fa184611e95565b9250611faf60208501611e95565b929592945050506040919091013590565b600060208284031215611fd257600080fd5b5035919050565b60008060408385031215611fec57600080fd5b82359150611ffc60208401611e95565b90509250929050565b634e487b7160e01b600052604160045260246000fd5b6000806040838503121561202e57600080fd5b61203783611e95565b9150602083013567ffffffffffffffff81111561205357600080fd5b8301601f8101851361206457600080fd5b803567ffffffffffffffff81111561207e5761207e612005565b604051601f8201601f19908116603f0116810167ffffffffffffffff811182821017156120ad576120ad612005565b6040528181528282016020018710156120c557600080fd5b816020840160208301376000602083830101528093505050509250929050565b60ff60f81b8816815260e06020820152600061210460e0830189611f1a565b82810360408401526121168189611f1a565b606084018890526001600160a01b038716608085015260a0840186905283810360c08501528451808252602080870193509091019060005b8181101561216c57835183526020938401939092019160010161214e565b50909b9a5050505050505050505050565b60008083601f84011261218f57600080fd5b50813567ffffffffffffffff8111156121a757600080fd5b6020830191508360208260051b85010111156121c257600080fd5b9250929050565b600080600080604085870312156121df57600080fd5b843567ffffffffffffffff8111156121f657600080fd5b6122028782880161217d565b909550935050602085013567ffffffffffffffff81111561222257600080fd5b61222e8782880161217d565b95989497509550505050565b600080600080600080600060e0888a03121561225557600080fd5b61225e88611e95565b965061226c60208901611e95565b95506040880135945060608801359350608088013560ff8116811461229057600080fd5b9699959850939692959460a0840135945060c09093013592915050565b600080604083850312156122c057600080fd5b6122c983611e95565b9150611ffc60208401611e95565b600181811c908216806122eb57607f821691505b60208210810361230b57634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052603260045260246000fd5b60006020828403121561233957600080fd5b5051919050565b634e487b7160e01b600052602160045260246000fd5b601f8211156108a857806000526020600020601f840160051c8101602085101561237d5750805b601f840160051c820191505b81811015610b105760008155600101612389565b815167ffffffffffffffff8111156123b7576123b7612005565b6123cb816123c584546122d7565b84612356565b6020601f8211600181146123ff57600083156123e75750848201515b600019600385901b1c1916600184901b178455610b10565b600084815260208120601f198516915b8281101561242f578785015182556020948501946001909201910161240f565b508482101561244d5786840151600019600387901b60f8161c191681555b50505050600190811b01905550565b8082018082111561073557634e487b7160e01b600052601160045260246000fd5b6000825161248f818460208701611ef6565b919091019291505056fe52c63247e1f47db19d5ce0460030c497f067ca4cebf71ba98eeadabe20bace00a16a46d94261c7517cc8ff89f61c0ce93598e3c849801011dee649a6a557d100360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a02dd7bc7dec4dceedda775e58dd541e08a116c6c53815c0bd028192f7b626800cd5ed15c6e187e77e9aee88184c21f4f2182ab5827cb3b7e07fbedcd63f03300a2646970667358221220f8b28f817583b1a5d7a44cef3f0d6fe6f776916b23b5c1e3d23d5314ee38db3364736f6c634300081c0033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x21A JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x7ECEBE00 GT PUSH2 0x123 JUMPI DUP1 PUSH4 0xA84173AE GT PUSH2 0xAB JUMPI DUP1 PUSH4 0xD5391393 GT PUSH2 0x6F JUMPI DUP1 PUSH4 0xD5391393 EQ PUSH2 0x64E JUMPI DUP1 PUSH4 0xD547741F EQ PUSH2 0x682 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x6A2 JUMPI DUP1 PUSH4 0xE63AB1E9 EQ PUSH2 0x6C2 JUMPI DUP1 PUSH4 0xFE4B84DF EQ PUSH2 0x6E4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xA84173AE EQ PUSH2 0x585 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x5BD JUMPI DUP1 PUSH4 0xAD3CB1CC EQ PUSH2 0x5DD JUMPI DUP1 PUSH4 0xC3085A3E EQ PUSH2 0x60E JUMPI DUP1 PUSH4 0xD505ACCF EQ PUSH2 0x62E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x88D695B2 GT PUSH2 0xF2 JUMPI DUP1 PUSH4 0x88D695B2 EQ PUSH2 0x4FB JUMPI DUP1 PUSH4 0x91D14854 EQ PUSH2 0x51B JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x53B JUMPI DUP1 PUSH4 0x9781A37E EQ PUSH2 0x550 JUMPI DUP1 PUSH4 0xA217FDDF EQ PUSH2 0x570 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x7ECEBE00 EQ PUSH2 0x47E JUMPI DUP1 PUSH4 0x80EA3DE1 EQ PUSH2 0x49E JUMPI DUP1 PUSH4 0x8456CB59 EQ PUSH2 0x4BE JUMPI DUP1 PUSH4 0x84B0196E EQ PUSH2 0x4D3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x313CE567 GT PUSH2 0x1A6 JUMPI DUP1 PUSH4 0x4F1EF286 GT PUSH2 0x175 JUMPI DUP1 PUSH4 0x4F1EF286 EQ PUSH2 0x3E3 JUMPI DUP1 PUSH4 0x52D1902D EQ PUSH2 0x3F6 JUMPI DUP1 PUSH4 0x54FD4D50 EQ PUSH2 0x40B JUMPI DUP1 PUSH4 0x5C975ABB EQ PUSH2 0x439 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x45E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x313CE567 EQ PUSH2 0x37D JUMPI DUP1 PUSH4 0x3644E515 EQ PUSH2 0x399 JUMPI DUP1 PUSH4 0x36568ABE EQ PUSH2 0x3AE JUMPI DUP1 PUSH4 0x3F4BA83A EQ PUSH2 0x3CE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x95EA7B3 GT PUSH2 0x1ED JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x2C7 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x2E7 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x31B JUMPI DUP1 PUSH4 0x248A9CA3 EQ PUSH2 0x33B JUMPI DUP1 PUSH4 0x2F2FF15D EQ PUSH2 0x35B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x1320FE2 EQ PUSH2 0x21F JUMPI DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x25F JUMPI DUP1 PUSH4 0x4646A49 EQ PUSH2 0x28F JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x2A5 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x22B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x24C PUSH2 0x23A CALLDATASIZE PUSH1 0x4 PUSH2 0x1EB1 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x26B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x27F PUSH2 0x27A CALLDATASIZE PUSH1 0x4 PUSH2 0x1ECC JUMP JUMPDEST PUSH2 0x704 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x256 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x29B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x24C PUSH1 0x1 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2B1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2BA PUSH2 0x73B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x256 SWAP2 SWAP1 PUSH2 0x1F46 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2D3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x27F PUSH2 0x2E2 CALLDATASIZE PUSH1 0x4 PUSH2 0x1F59 JUMP JUMPDEST PUSH2 0x7E4 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2F3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH32 0x52C63247E1F47DB19D5CE0460030C497F067CA4CEBF71BA98EEADABE20BACE02 SLOAD PUSH2 0x24C JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x327 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x27F PUSH2 0x336 CALLDATASIZE PUSH1 0x4 PUSH2 0x1F83 JUMP JUMPDEST PUSH2 0x7FC JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x347 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x24C PUSH2 0x356 CALLDATASIZE PUSH1 0x4 PUSH2 0x1FC0 JUMP JUMPDEST PUSH2 0x822 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x367 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x37B PUSH2 0x376 CALLDATASIZE PUSH1 0x4 PUSH2 0x1FD9 JUMP JUMPDEST PUSH2 0x844 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x389 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x256 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3A5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x24C PUSH2 0x866 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3BA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x37B PUSH2 0x3C9 CALLDATASIZE PUSH1 0x4 PUSH2 0x1FD9 JUMP JUMPDEST PUSH2 0x875 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3DA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x37B PUSH2 0x8AD JUMP JUMPDEST PUSH2 0x37B PUSH2 0x3F1 CALLDATASIZE PUSH1 0x4 PUSH2 0x201B JUMP JUMPDEST PUSH2 0x8D0 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x402 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x24C PUSH2 0x8EF JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x417 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x5 DUP2 MSTORE PUSH5 0x322E302E3 PUSH1 0xDC SHL PUSH1 0x20 DUP3 ADD MSTORE PUSH2 0x2BA JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x445 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x253A DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SLOAD PUSH1 0xFF AND PUSH2 0x27F JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x46A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x24C PUSH2 0x479 CALLDATASIZE PUSH1 0x4 PUSH2 0x1EB1 JUMP JUMPDEST PUSH2 0x90C JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x48A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x24C PUSH2 0x499 CALLDATASIZE PUSH1 0x4 PUSH2 0x1EB1 JUMP JUMPDEST PUSH2 0x93F JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4AA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x37B PUSH2 0x4B9 CALLDATASIZE PUSH1 0x4 PUSH2 0x1FC0 JUMP JUMPDEST PUSH2 0x94A JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4CA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x37B PUSH2 0x99B JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4DF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x4E8 PUSH2 0x9BB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x256 SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x20E5 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x507 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x37B PUSH2 0x516 CALLDATASIZE PUSH1 0x4 PUSH2 0x21C9 JUMP JUMPDEST PUSH2 0xA6C JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x527 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x27F PUSH2 0x536 CALLDATASIZE PUSH1 0x4 PUSH2 0x1FD9 JUMP JUMPDEST PUSH2 0xB17 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x547 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2BA PUSH2 0xB4F JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x55C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x37B PUSH2 0x56B CALLDATASIZE PUSH1 0x4 PUSH2 0x1F59 JUMP JUMPDEST PUSH2 0xB8E JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x57C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x24C PUSH1 0x0 DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x591 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x0 SLOAD PUSH2 0x5A5 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x256 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5C9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x27F PUSH2 0x5D8 CALLDATASIZE PUSH1 0x4 PUSH2 0x1F59 JUMP JUMPDEST PUSH2 0xBF3 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5E9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2BA PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x5 DUP2 MSTORE PUSH1 0x20 ADD PUSH5 0x352E302E3 PUSH1 0xDC SHL DUP2 MSTORE POP DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x61A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x37B PUSH2 0x629 CALLDATASIZE PUSH1 0x4 PUSH2 0x1EB1 JUMP JUMPDEST PUSH2 0xC01 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x63A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x37B PUSH2 0x649 CALLDATASIZE PUSH1 0x4 PUSH2 0x223A JUMP JUMPDEST PUSH2 0xC5D JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x65A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x24C PUSH32 0x9F2DF0FED2C77648DE5860A4CC508CD0818C85B8B8A1AB4CEEEF8D981C8956A6 DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x68E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x37B PUSH2 0x69D CALLDATASIZE PUSH1 0x4 PUSH2 0x1FD9 JUMP JUMPDEST PUSH2 0xDB6 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x6AE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x24C PUSH2 0x6BD CALLDATASIZE PUSH1 0x4 PUSH2 0x22AD JUMP JUMPDEST PUSH2 0xDD2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x6CE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x24C PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x24FA DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x6F0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x37B PUSH2 0x6FF CALLDATASIZE PUSH1 0x4 PUSH2 0x1FC0 JUMP JUMPDEST PUSH2 0xE1C JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x7965DB0B PUSH1 0xE0 SHL EQ DUP1 PUSH2 0x735 JUMPI POP PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP4 AND EQ JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x249A DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE JUMPDEST SWAP1 POP DUP1 PUSH1 0x3 ADD DUP1 SLOAD PUSH2 0x760 SWAP1 PUSH2 0x22D7 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x78C SWAP1 PUSH2 0x22D7 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x7D9 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x7AE JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x7D9 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x7BC JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x7F2 DUP2 DUP6 DUP6 PUSH2 0xFF8 JUMP JUMPDEST POP PUSH1 0x1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x80A DUP6 DUP3 DUP6 PUSH2 0x1005 JUMP JUMPDEST PUSH2 0x815 DUP6 DUP6 DUP6 PUSH2 0x1066 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x251A DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x84D DUP3 PUSH2 0x822 JUMP JUMPDEST PUSH2 0x856 DUP2 PUSH2 0x10C5 JUMP JUMPDEST PUSH2 0x860 DUP4 DUP4 PUSH2 0x10CF JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x870 PUSH2 0x1174 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND CALLER EQ PUSH2 0x89E JUMPI PUSH1 0x40 MLOAD PUSH4 0x334BD919 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x8A8 DUP3 DUP3 PUSH2 0x117E JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x24FA DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH2 0x8C5 DUP2 PUSH2 0x10C5 JUMP JUMPDEST PUSH2 0x8CD PUSH2 0x11FA JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x8D8 PUSH2 0x125A JUMP JUMPDEST PUSH2 0x8E1 DUP3 PUSH2 0x1301 JUMP JUMPDEST PUSH2 0x8EB DUP3 DUP3 PUSH2 0x130C JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x8F9 PUSH2 0x13C9 JUMP JUMPDEST POP PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x24DA DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x249A DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 SWAP4 SWAP1 SWAP4 MSTORE POP POP PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x735 DUP3 PUSH2 0x1412 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x955 DUP2 PUSH2 0x10C5 JUMP JUMPDEST PUSH1 0x1 DUP1 SLOAD SWAP1 DUP4 SWAP1 SSTORE PUSH1 0x40 DUP1 MLOAD DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP6 SWAP1 MSTORE PUSH32 0x98EAABFE135A9C40C420208962BF81E7926B4D6DF3E23502164C0554B7B35224 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x24FA DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH2 0x9B3 DUP2 PUSH2 0x10C5 JUMP JUMPDEST PUSH2 0x8CD PUSH2 0x143B JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP1 DUP3 DUP1 DUP1 DUP4 DUP2 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x24BA DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP1 SLOAD SWAP1 SWAP2 POP ISZERO DUP1 ISZERO PUSH2 0x9E8 JUMPI POP PUSH1 0x1 DUP2 ADD SLOAD ISZERO JUMPDEST PUSH2 0xA31 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x1152540DCC4C8E88155B9A5B9A5D1A585B1A5E9959 PUSH1 0x5A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xA39 PUSH2 0x1484 JUMP JUMPDEST PUSH2 0xA41 PUSH2 0x14C3 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x0 DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 SWAP3 MSTORE PUSH1 0xF PUSH1 0xF8 SHL SWAP13 SWAP4 SWAP12 POP SWAP2 SWAP10 POP CHAINID SWAP9 POP ADDRESS SWAP8 POP SWAP6 POP SWAP4 POP SWAP2 POP POP JUMP JUMPDEST DUP3 DUP2 EQ PUSH2 0xAB4 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x82E4E4C2F2E640D8CADCCEE8D040DAD2E6DAC2E8C6D PUSH1 0x53 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xA28 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xB10 JUMPI PUSH2 0xB08 CALLER DUP7 DUP7 DUP5 DUP2 DUP2 LT PUSH2 0xAD5 JUMPI PUSH2 0xAD5 PUSH2 0x2311 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0xAEA SWAP2 SWAP1 PUSH2 0x1EB1 JUMP JUMPDEST DUP6 DUP6 DUP6 DUP2 DUP2 LT PUSH2 0xAFC JUMPI PUSH2 0xAFC PUSH2 0x2311 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD CALLDATALOAD PUSH2 0x1066 JUMP JUMPDEST PUSH1 0x1 ADD PUSH2 0xAB7 JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x251A DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 SWAP1 SWAP4 AND DUP5 MSTORE SWAP2 SWAP1 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH32 0x52C63247E1F47DB19D5CE0460030C497F067CA4CEBF71BA98EEADABE20BACE04 DUP1 SLOAD PUSH1 0x60 SWAP2 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x249A DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP2 PUSH2 0x760 SWAP1 PUSH2 0x22D7 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xB99 DUP2 PUSH2 0x10C5 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 DUP2 SWAP1 KECCAK256 DUP5 SWAP1 SSTORE MLOAD PUSH32 0xA162F0703CBC0C48EA2C9E9BED5743AABC058E7532E594490E3A35BFB0F75AB8 SWAP1 PUSH2 0xBE6 SWAP1 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x7F2 DUP2 DUP6 DUP6 PUSH2 0x1066 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC0C DUP2 PUSH2 0x10C5 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0xDAAF87D9985C65A1BFBD019043294923AE1B048BA8B4616E3ACB32741D268DA1 SWAP2 SWAP1 LOG3 POP POP POP JUMP JUMPDEST DUP4 TIMESTAMP GT ISZERO PUSH2 0xC81 JUMPI PUSH1 0x40 MLOAD PUSH4 0x313C8981 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP6 SWAP1 MSTORE PUSH1 0x24 ADD PUSH2 0xA28 JUMP JUMPDEST PUSH1 0x0 PUSH32 0x6E71EDAE12B1B97F4D1F60370FEF10105FA2FAAE0126114A169C64845D6126C9 DUP9 DUP9 DUP9 PUSH2 0xCED DUP13 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH32 0x5AB42CED628888259C08AC98DB1EB0CF702FC1501344311D8B100CD1BFE4BB00 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP2 ADD SWAP1 SWAP2 SSTORE SWAP1 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP2 ADD SWAP7 SWAP1 SWAP7 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP5 DUP6 AND SWAP1 DUP7 ADD MSTORE SWAP3 SWAP1 SWAP2 AND PUSH1 0x60 DUP5 ADD MSTORE PUSH1 0x80 DUP4 ADD MSTORE PUSH1 0xA0 DUP3 ADD MSTORE PUSH1 0xC0 DUP2 ADD DUP7 SWAP1 MSTORE PUSH1 0xE0 ADD PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP PUSH1 0x0 PUSH2 0xD48 DUP3 PUSH2 0x14DB JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0xD58 DUP3 DUP8 DUP8 DUP8 PUSH2 0x1508 JUMP JUMPDEST SWAP1 POP DUP10 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0xD9F JUMPI PUSH1 0x40 MLOAD PUSH4 0x25C00723 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP4 AND PUSH1 0x4 DUP4 ADD MSTORE DUP12 AND PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 ADD PUSH2 0xA28 JUMP JUMPDEST PUSH2 0xDAA DUP11 DUP11 DUP11 PUSH2 0xFF8 JUMP JUMPDEST POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0xDBF DUP3 PUSH2 0x822 JUMP JUMPDEST PUSH2 0xDC8 DUP2 PUSH2 0x10C5 JUMP JUMPDEST PUSH2 0x860 DUP4 DUP4 PUSH2 0x117E JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH32 0x52C63247E1F47DB19D5CE0460030C497F067CA4CEBF71BA98EEADABE20BACE01 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xE26 PUSH2 0x1536 JUMP JUMPDEST DUP1 SLOAD SWAP1 SWAP2 POP PUSH1 0xFF PUSH1 0x1 PUSH1 0x40 SHL DUP3 DIV AND ISZERO SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP2 ISZERO DUP1 ISZERO PUSH2 0xE4E JUMPI POP DUP3 JUMPDEST SWAP1 POP PUSH1 0x0 DUP3 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH1 0x1 EQ DUP1 ISZERO PUSH2 0xE6B JUMPI POP ADDRESS EXTCODESIZE ISZERO JUMPDEST SWAP1 POP DUP2 ISZERO DUP1 ISZERO PUSH2 0xE79 JUMPI POP DUP1 ISZERO JUMPDEST ISZERO PUSH2 0xE97 JUMPI PUSH1 0x40 MLOAD PUSH4 0xF92EE8A9 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP5 SLOAD PUSH8 0xFFFFFFFFFFFFFFFF NOT AND PUSH1 0x1 OR DUP6 SSTORE DUP4 ISZERO PUSH2 0xEC1 JUMPI DUP5 SLOAD PUSH1 0xFF PUSH1 0x40 SHL NOT AND PUSH1 0x1 PUSH1 0x40 SHL OR DUP6 SSTORE JUMPDEST PUSH2 0xF07 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x9 DUP2 MSTORE PUSH1 0x20 ADD PUSH9 0x2820A2102A37B5B2B7 PUSH1 0xB9 SHL DUP2 MSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x3 DUP2 MSTORE PUSH1 0x20 ADD PUSH3 0x141051 PUSH1 0xEA SHL DUP2 MSTORE POP PUSH2 0x155F JUMP JUMPDEST PUSH2 0xF31 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x9 DUP2 MSTORE PUSH1 0x20 ADD PUSH9 0x2820A2102A37B5B2B7 PUSH1 0xB9 SHL DUP2 MSTORE POP PUSH2 0x1571 JUMP JUMPDEST PUSH2 0xF39 PUSH2 0x159C JUMP JUMPDEST PUSH2 0xF41 PUSH2 0x159C JUMP JUMPDEST PUSH2 0xF49 PUSH2 0x159C JUMP JUMPDEST PUSH2 0xF54 PUSH1 0x0 CALLER PUSH2 0x10CF JUMP JUMPDEST POP PUSH2 0xF6D PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x24FA DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE CALLER PUSH2 0x10CF JUMP JUMPDEST POP PUSH2 0xF98 PUSH32 0x9F2DF0FED2C77648DE5860A4CC508CD0818C85B8B8A1AB4CEEEF8D981C8956A6 CALLER PUSH2 0x10CF JUMP JUMPDEST POP PUSH2 0xFA3 CALLER DUP8 PUSH2 0x15A4 JUMP JUMPDEST PUSH3 0x15180 PUSH1 0x1 SSTORE DUP4 ISZERO PUSH2 0xFF0 JUMPI DUP5 SLOAD PUSH1 0xFF PUSH1 0x40 SHL NOT AND DUP6 SSTORE PUSH1 0x40 MLOAD PUSH1 0x1 DUP2 MSTORE PUSH32 0xC7F505B2F371AE2175EE4913F4499E1F2633A7B5936321EED1CDAEB6115181D2 SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x8A8 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x15DA JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1011 DUP5 DUP5 PUSH2 0xDD2 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 NOT DUP2 LT ISZERO PUSH2 0x860 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x1057 JUMPI PUSH1 0x40 MLOAD PUSH4 0x7DC7A0D9 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x44 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x64 ADD PUSH2 0xA28 JUMP JUMPDEST PUSH2 0x860 DUP5 DUP5 DUP5 DUP5 SUB PUSH1 0x0 PUSH2 0x15DA JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x1090 JUMPI PUSH1 0x40 MLOAD PUSH4 0x4B637E8F PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0xA28 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x10BA JUMPI PUSH1 0x40 MLOAD PUSH4 0xEC442F05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0xA28 JUMP JUMPDEST PUSH2 0x8A8 DUP4 DUP4 DUP4 PUSH2 0x16C1 JUMP JUMPDEST PUSH2 0x8CD DUP2 CALLER PUSH2 0x174D JUMP JUMPDEST PUSH1 0x0 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x251A DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH2 0x10EA DUP5 DUP5 PUSH2 0xB17 JUMP JUMPDEST PUSH2 0x116A JUMPI PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 DUP3 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH2 0x1120 CALLER SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH1 0x1 SWAP2 POP POP PUSH2 0x735 JUMP JUMPDEST PUSH1 0x0 SWAP2 POP POP PUSH2 0x735 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x870 PUSH2 0x1786 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x251A DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH2 0x1199 DUP5 DUP5 PUSH2 0xB17 JUMP JUMPDEST ISZERO PUSH2 0x116A JUMPI PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 DUP3 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND DUP1 DUP6 MSTORE SWAP3 MSTORE DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE MLOAD CALLER SWAP3 DUP8 SWAP2 PUSH32 0xF6391F5C32D9C69D2A47EA670B442974B53935D1EDC7FD64EB21E047A839171B SWAP2 SWAP1 LOG4 PUSH1 0x1 SWAP2 POP POP PUSH2 0x735 JUMP JUMPDEST PUSH2 0x1202 PUSH2 0x17FA JUMP JUMPDEST PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x253A DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP1 SLOAD PUSH1 0xFF NOT AND DUP2 SSTORE PUSH32 0x5DB9EE0A495BF2E6FF9C91A7834C1BA4FDD244A5E8AA4E537BD38AEAE4B073AA CALLER JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST ADDRESS PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND EQ DUP1 PUSH2 0x12E1 JUMPI POP PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x12D5 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x24DA DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO JUMPDEST ISZERO PUSH2 0x12FF JUMPI PUSH1 0x40 MLOAD PUSH4 0x703E46DD PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH2 0x8EB DUP2 PUSH2 0x10C5 JUMP JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x52D1902D PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x1366 JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0x1363 SWAP2 DUP2 ADD SWAP1 PUSH2 0x2327 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x138E JUMPI PUSH1 0x40 MLOAD PUSH4 0x4C9C8CE3 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0xA28 JUMP JUMPDEST PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x24DA DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP2 EQ PUSH2 0x13BF JUMPI PUSH1 0x40 MLOAD PUSH4 0x2A875269 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x24 ADD PUSH2 0xA28 JUMP JUMPDEST PUSH2 0x8A8 DUP4 DUP4 PUSH2 0x182A JUMP JUMPDEST ADDRESS PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND EQ PUSH2 0x12FF JUMPI PUSH1 0x40 MLOAD PUSH4 0x703E46DD PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH32 0x5AB42CED628888259C08AC98DB1EB0CF702FC1501344311D8B100CD1BFE4BB00 PUSH2 0x91F JUMP JUMPDEST PUSH2 0x1443 PUSH2 0x1880 JUMP JUMPDEST PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x253A DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR DUP2 SSTORE PUSH32 0x62E78CEA01BEE320CD4E420270B5EA74000D11B0C9F74754EBDBFC544B05A258 CALLER PUSH2 0x123C JUMP JUMPDEST PUSH32 0xA16A46D94261C7517CC8FF89F61C0CE93598E3C849801011DEE649A6A557D102 DUP1 SLOAD PUSH1 0x60 SWAP2 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x24BA DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP2 PUSH2 0x760 SWAP1 PUSH2 0x22D7 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x24BA DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH2 0x74F JUMP JUMPDEST PUSH1 0x0 PUSH2 0x735 PUSH2 0x14E8 PUSH2 0x1174 JUMP JUMPDEST DUP4 PUSH1 0x40 MLOAD PUSH2 0x1901 PUSH1 0xF0 SHL DUP2 MSTORE PUSH1 0x2 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x22 DUP3 ADD MSTORE PUSH1 0x42 SWAP1 KECCAK256 SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH2 0x151A DUP9 DUP9 DUP9 DUP9 PUSH2 0x18B1 JUMP JUMPDEST SWAP3 POP SWAP3 POP SWAP3 POP PUSH2 0x152A DUP3 DUP3 PUSH2 0x1980 JUMP JUMPDEST POP SWAP1 SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH32 0xF0C57E16840DF040F15088DC2F81FE391C3923BEC73E23A9662EFC9C229C6A00 PUSH2 0x735 JUMP JUMPDEST PUSH2 0x1567 PUSH2 0x1A39 JUMP JUMPDEST PUSH2 0x8EB DUP3 DUP3 PUSH2 0x1A5E JUMP JUMPDEST PUSH2 0x1579 PUSH2 0x1A39 JUMP JUMPDEST PUSH2 0x8CD DUP2 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x31 PUSH1 0xF8 SHL DUP2 MSTORE POP PUSH2 0x1AAF JUMP JUMPDEST PUSH2 0x12FF PUSH2 0x1A39 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x15CE JUMPI PUSH1 0x40 MLOAD PUSH4 0xEC442F05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0xA28 JUMP JUMPDEST PUSH2 0x8EB PUSH1 0x0 DUP4 DUP4 PUSH2 0x16C1 JUMP JUMPDEST PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x249A DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH2 0x1613 JUMPI PUSH1 0x40 MLOAD PUSH4 0xE602DF05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0xA28 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x163D JUMPI PUSH1 0x40 MLOAD PUSH4 0x4A1406B1 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0xA28 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP7 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 DUP4 ADD PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP9 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 DUP4 SWAP1 SSTORE DUP2 ISZERO PUSH2 0xB10 JUMPI DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP6 PUSH1 0x40 MLOAD PUSH2 0x16B2 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND ISZERO DUP1 ISZERO SWAP1 PUSH2 0x16E1 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND ISZERO ISZERO JUMPDEST ISZERO PUSH2 0x1742 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD TIMESTAMP LT ISZERO PUSH2 0x1742 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 DUP2 SWAP1 KECCAK256 SLOAD SWAP1 MLOAD PUSH4 0xDAC64F9 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 ADD PUSH2 0xA28 JUMP JUMPDEST PUSH2 0x8A8 DUP4 DUP4 DUP4 PUSH2 0x1B10 JUMP JUMPDEST PUSH2 0x1757 DUP3 DUP3 PUSH2 0xB17 JUMP JUMPDEST PUSH2 0x8EB JUMPI PUSH1 0x40 MLOAD PUSH4 0xE2517D3F PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x44 ADD PUSH2 0xA28 JUMP JUMPDEST PUSH1 0x0 PUSH32 0x8B73C3C69BB8FE3D512ECC4CF759CC79239F7B179B0FFACAA9A75D522B39400F PUSH2 0x17B1 PUSH2 0x1C4E JUMP JUMPDEST PUSH2 0x17B9 PUSH2 0x1CB8 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP2 ADD SWAP5 SWAP1 SWAP5 MSTORE DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x60 DUP3 ADD MSTORE CHAINID PUSH1 0x80 DUP3 ADD MSTORE ADDRESS PUSH1 0xA0 DUP3 ADD MSTORE PUSH1 0xC0 ADD PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x253A DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SLOAD PUSH1 0xFF AND PUSH2 0x12FF JUMPI PUSH1 0x40 MLOAD PUSH4 0x8DFC202B PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1833 DUP3 PUSH2 0x1CFC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 PUSH32 0xBC7CD75A20EE27FD9ADEBAB32041F755214DBC6BFFA90CC0225B39DA2E5C2D3B SWAP1 PUSH1 0x0 SWAP1 LOG2 DUP1 MLOAD ISZERO PUSH2 0x1878 JUMPI PUSH2 0x8A8 DUP3 DUP3 PUSH2 0x1D61 JUMP JUMPDEST PUSH2 0x8EB PUSH2 0x1DD7 JUMP JUMPDEST PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x253A DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x12FF JUMPI PUSH1 0x40 MLOAD PUSH4 0xD93C0665 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP1 PUSH32 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0 DUP5 GT ISZERO PUSH2 0x18EC JUMPI POP PUSH1 0x0 SWAP2 POP PUSH1 0x3 SWAP1 POP DUP3 PUSH2 0x1976 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x0 DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD DUP1 DUP5 MSTORE DUP11 SWAP1 MSTORE PUSH1 0xFF DUP10 AND SWAP3 DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x60 DUP2 ADD DUP8 SWAP1 MSTORE PUSH1 0x80 DUP2 ADD DUP7 SWAP1 MSTORE PUSH1 0x1 SWAP1 PUSH1 0xA0 ADD PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 SUB SWAP1 DUP1 DUP5 SUB SWAP1 DUP6 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1940 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x40 MLOAD PUSH1 0x1F NOT ADD MLOAD SWAP2 POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x196C JUMPI POP PUSH1 0x0 SWAP3 POP PUSH1 0x1 SWAP2 POP DUP3 SWAP1 POP PUSH2 0x1976 JUMP JUMPDEST SWAP3 POP PUSH1 0x0 SWAP2 POP DUP2 SWAP1 POP JUMPDEST SWAP5 POP SWAP5 POP SWAP5 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x1994 JUMPI PUSH2 0x1994 PUSH2 0x2340 JUMP JUMPDEST SUB PUSH2 0x199D JUMPI POP POP JUMP JUMPDEST PUSH1 0x1 DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x19B1 JUMPI PUSH2 0x19B1 PUSH2 0x2340 JUMP JUMPDEST SUB PUSH2 0x19CF JUMPI PUSH1 0x40 MLOAD PUSH4 0xF645EEDF PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x19E3 JUMPI PUSH2 0x19E3 PUSH2 0x2340 JUMP JUMPDEST SUB PUSH2 0x1A04 JUMPI PUSH1 0x40 MLOAD PUSH4 0xFCE698F7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x24 ADD PUSH2 0xA28 JUMP JUMPDEST PUSH1 0x3 DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x1A18 JUMPI PUSH2 0x1A18 PUSH2 0x2340 JUMP JUMPDEST SUB PUSH2 0x8EB JUMPI PUSH1 0x40 MLOAD PUSH4 0x35E2F383 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x24 ADD PUSH2 0xA28 JUMP JUMPDEST PUSH2 0x1A41 PUSH2 0x1DF6 JUMP JUMPDEST PUSH2 0x12FF JUMPI PUSH1 0x40 MLOAD PUSH4 0x1AFCD79F PUSH1 0xE3 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1A66 PUSH2 0x1A39 JUMP JUMPDEST PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x249A DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH32 0x52C63247E1F47DB19D5CE0460030C497F067CA4CEBF71BA98EEADABE20BACE03 PUSH2 0x1AA0 DUP5 DUP3 PUSH2 0x239D JUMP JUMPDEST POP PUSH1 0x4 DUP2 ADD PUSH2 0x860 DUP4 DUP3 PUSH2 0x239D JUMP JUMPDEST PUSH2 0x1AB7 PUSH2 0x1A39 JUMP JUMPDEST PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x24BA DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH32 0xA16A46D94261C7517CC8FF89F61C0CE93598E3C849801011DEE649A6A557D102 PUSH2 0x1AF1 DUP5 DUP3 PUSH2 0x239D JUMP JUMPDEST POP PUSH1 0x3 DUP2 ADD PUSH2 0x1B00 DUP4 DUP3 PUSH2 0x239D JUMP JUMPDEST POP PUSH1 0x0 DUP1 DUP3 SSTORE PUSH1 0x1 SWAP1 SWAP2 ADD SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x249A DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x1B4C JUMPI DUP2 DUP2 PUSH1 0x2 ADD PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x1B41 SWAP2 SWAP1 PUSH2 0x245C JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH2 0x1BBE SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP3 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP3 DUP2 LT ISZERO PUSH2 0x1B9F JUMPI PUSH1 0x40 MLOAD PUSH4 0x391434E3 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x44 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x64 ADD PUSH2 0xA28 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP4 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SWAP1 DUP4 SWAP1 SUB SWAP1 SSTORE JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x1BDC JUMPI PUSH1 0x2 DUP2 ADD DUP1 SLOAD DUP4 SWAP1 SUB SWAP1 SSTORE PUSH2 0x1BFB JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP3 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD DUP4 ADD SWAP1 SSTORE JUMPDEST DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 PUSH1 0x40 MLOAD PUSH2 0x1C40 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x24BA DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP2 PUSH2 0x1C68 PUSH2 0x1484 JUMP JUMPDEST DUP1 MLOAD SWAP1 SWAP2 POP ISZERO PUSH2 0x1C80 JUMPI DUP1 MLOAD PUSH1 0x20 SWAP1 SWAP2 ADD KECCAK256 SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP2 SLOAD DUP1 ISZERO PUSH2 0x1C8F JUMPI SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0xC5D2460186F7233C927E7DB2DCC703C0E500B653CA82273B7BFAD8045D85A470 SWAP4 POP POP POP POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x24BA DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP2 PUSH2 0x1CD2 PUSH2 0x14C3 JUMP JUMPDEST DUP1 MLOAD SWAP1 SWAP2 POP ISZERO PUSH2 0x1CEA JUMPI DUP1 MLOAD PUSH1 0x20 SWAP1 SWAP2 ADD KECCAK256 SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 DUP3 ADD SLOAD DUP1 ISZERO PUSH2 0x1C8F JUMPI SWAP4 SWAP3 POP POP POP JUMP JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EXTCODESIZE PUSH1 0x0 SUB PUSH2 0x1D32 JUMPI PUSH1 0x40 MLOAD PUSH4 0x4C9C8CE3 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0xA28 JUMP JUMPDEST PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x24DA DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP1 DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x40 MLOAD PUSH2 0x1D7E SWAP2 SWAP1 PUSH2 0x247D JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 GAS DELEGATECALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x1DB9 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1DBE JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0x1DCE DUP6 DUP4 DUP4 PUSH2 0x1E10 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST CALLVALUE ISZERO PUSH2 0x12FF JUMPI PUSH1 0x40 MLOAD PUSH4 0xB398979F PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1E00 PUSH2 0x1536 JUMP JUMPDEST SLOAD PUSH1 0x1 PUSH1 0x40 SHL SWAP1 DIV PUSH1 0xFF AND SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 DUP3 PUSH2 0x1E25 JUMPI PUSH2 0x1E20 DUP3 PUSH2 0x1E6C JUMP JUMPDEST PUSH2 0x81B JUMP JUMPDEST DUP2 MLOAD ISZERO DUP1 ISZERO PUSH2 0x1E3C JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND EXTCODESIZE ISZERO JUMPDEST ISZERO PUSH2 0x1E65 JUMPI PUSH1 0x40 MLOAD PUSH4 0x9996B315 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0xA28 JUMP JUMPDEST POP DUP1 PUSH2 0x81B JUMP JUMPDEST DUP1 MLOAD ISZERO PUSH2 0x1E7C JUMPI DUP1 MLOAD DUP1 DUP3 PUSH1 0x20 ADD REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xD6BDA275 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x1EAC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1EC3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x81B DUP3 PUSH2 0x1E95 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1EDE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND DUP2 EQ PUSH2 0x81B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1F11 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x1EF9 JUMP JUMPDEST POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH2 0x1F32 DUP2 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP7 ADD PUSH2 0x1EF6 JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x20 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0x81B PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1F1A JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1F6C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1F75 DUP4 PUSH2 0x1E95 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1F98 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1FA1 DUP5 PUSH2 0x1E95 JUMP JUMPDEST SWAP3 POP PUSH2 0x1FAF PUSH1 0x20 DUP6 ADD PUSH2 0x1E95 JUMP JUMPDEST SWAP3 SWAP6 SWAP3 SWAP5 POP POP POP PUSH1 0x40 SWAP2 SWAP1 SWAP2 ADD CALLDATALOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1FD2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1FEC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD SWAP2 POP PUSH2 0x1FFC PUSH1 0x20 DUP5 ADD PUSH2 0x1E95 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x202E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2037 DUP4 PUSH2 0x1E95 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2053 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 ADD PUSH1 0x1F DUP2 ADD DUP6 SGT PUSH2 0x2064 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x207E JUMPI PUSH2 0x207E PUSH2 0x2005 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0x20AD JUMPI PUSH2 0x20AD PUSH2 0x2005 JUMP JUMPDEST PUSH1 0x40 MSTORE DUP2 DUP2 MSTORE DUP3 DUP3 ADD PUSH1 0x20 ADD DUP8 LT ISZERO PUSH2 0x20C5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 PUSH1 0x20 DUP5 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 PUSH1 0x20 DUP4 DUP4 ADD ADD MSTORE DUP1 SWAP4 POP POP POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0xFF PUSH1 0xF8 SHL DUP9 AND DUP2 MSTORE PUSH1 0xE0 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x0 PUSH2 0x2104 PUSH1 0xE0 DUP4 ADD DUP10 PUSH2 0x1F1A JUMP JUMPDEST DUP3 DUP2 SUB PUSH1 0x40 DUP5 ADD MSTORE PUSH2 0x2116 DUP2 DUP10 PUSH2 0x1F1A JUMP JUMPDEST PUSH1 0x60 DUP5 ADD DUP9 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND PUSH1 0x80 DUP6 ADD MSTORE PUSH1 0xA0 DUP5 ADD DUP7 SWAP1 MSTORE DUP4 DUP2 SUB PUSH1 0xC0 DUP6 ADD MSTORE DUP5 MLOAD DUP1 DUP3 MSTORE PUSH1 0x20 DUP1 DUP8 ADD SWAP4 POP SWAP1 SWAP2 ADD SWAP1 PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x216C JUMPI DUP4 MLOAD DUP4 MSTORE PUSH1 0x20 SWAP4 DUP5 ADD SWAP4 SWAP1 SWAP3 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0x214E JUMP JUMPDEST POP SWAP1 SWAP12 SWAP11 POP POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0x218F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x21A7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x20 DUP3 PUSH1 0x5 SHL DUP6 ADD ADD GT ISZERO PUSH2 0x21C2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x40 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x21DF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP5 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x21F6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2202 DUP8 DUP3 DUP9 ADD PUSH2 0x217D JUMP JUMPDEST SWAP1 SWAP6 POP SWAP4 POP POP PUSH1 0x20 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2222 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x222E DUP8 DUP3 DUP9 ADD PUSH2 0x217D JUMP JUMPDEST SWAP6 SWAP9 SWAP5 SWAP8 POP SWAP6 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xE0 DUP9 DUP11 SUB SLT ISZERO PUSH2 0x2255 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x225E DUP9 PUSH2 0x1E95 JUMP JUMPDEST SWAP7 POP PUSH2 0x226C PUSH1 0x20 DUP10 ADD PUSH2 0x1E95 JUMP JUMPDEST SWAP6 POP PUSH1 0x40 DUP9 ADD CALLDATALOAD SWAP5 POP PUSH1 0x60 DUP9 ADD CALLDATALOAD SWAP4 POP PUSH1 0x80 DUP9 ADD CALLDATALOAD PUSH1 0xFF DUP2 AND DUP2 EQ PUSH2 0x2290 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP7 SWAP10 SWAP6 SWAP9 POP SWAP4 SWAP7 SWAP3 SWAP6 SWAP5 PUSH1 0xA0 DUP5 ADD CALLDATALOAD SWAP5 POP PUSH1 0xC0 SWAP1 SWAP4 ADD CALLDATALOAD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x22C0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x22C9 DUP4 PUSH2 0x1E95 JUMP JUMPDEST SWAP2 POP PUSH2 0x1FFC PUSH1 0x20 DUP5 ADD PUSH2 0x1E95 JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x22EB JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x230B JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2339 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x8A8 JUMPI DUP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x237D JUMPI POP DUP1 JUMPDEST PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP3 ADD SWAP2 POP JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0xB10 JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x2389 JUMP JUMPDEST DUP2 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x23B7 JUMPI PUSH2 0x23B7 PUSH2 0x2005 JUMP JUMPDEST PUSH2 0x23CB DUP2 PUSH2 0x23C5 DUP5 SLOAD PUSH2 0x22D7 JUMP JUMPDEST DUP5 PUSH2 0x2356 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x1F DUP3 GT PUSH1 0x1 DUP2 EQ PUSH2 0x23FF JUMPI PUSH1 0x0 DUP4 ISZERO PUSH2 0x23E7 JUMPI POP DUP5 DUP3 ADD MLOAD JUMPDEST PUSH1 0x0 NOT PUSH1 0x3 DUP6 SWAP1 SHL SHR NOT AND PUSH1 0x1 DUP5 SWAP1 SHL OR DUP5 SSTORE PUSH2 0xB10 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F NOT DUP6 AND SWAP2 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x242F JUMPI DUP8 DUP6 ADD MLOAD DUP3 SSTORE PUSH1 0x20 SWAP5 DUP6 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP3 ADD SWAP2 ADD PUSH2 0x240F JUMP JUMPDEST POP DUP5 DUP3 LT ISZERO PUSH2 0x244D JUMPI DUP7 DUP5 ADD MLOAD PUSH1 0x0 NOT PUSH1 0x3 DUP8 SWAP1 SHL PUSH1 0xF8 AND SHR NOT AND DUP2 SSTORE JUMPDEST POP POP POP POP PUSH1 0x1 SWAP1 DUP2 SHL ADD SWAP1 SSTORE POP JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x735 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 MLOAD PUSH2 0x248F DUP2 DUP5 PUSH1 0x20 DUP8 ADD PUSH2 0x1EF6 JUMP JUMPDEST SWAP2 SWAP1 SWAP2 ADD SWAP3 SWAP2 POP POP JUMP INVALID MSTORE 0xC6 ORIGIN SELFBALANCE 0xE1 DELEGATECALL PUSH30 0xB19D5CE0460030C497F067CA4CEBF71BA98EEADABE20BACE00A16A46D942 PUSH2 0xC751 PUSH29 0xC8FF89F61C0CE93598E3C849801011DEE649A6A557D100360894A13BA1 LOG3 0x21 MOD PUSH8 0xC828492DB98DCA3E KECCAK256 PUSH23 0xCC3735A920A3CA505D382BBC65D7A28E3265B37A647492 SWAP16 CALLER PUSH6 0x21B332C1681B SWAP4 EXTCODEHASH PUSH13 0xB9F3376673440D862A02DD7BC7 0xDE 0xC4 0xDC 0xEE 0xDD 0xA7 PUSH22 0xE58DD541E08A116C6C53815C0BD028192F7B626800CD MCOPY 0xD1 TLOAD PUSH15 0x187E77E9AEE88184C21F4F2182AB58 0x27 0xCB EXTCODESIZE PUSH31 0x7FBEDCD63F03300A2646970667358221220F8B28F817583B1A5D7A44CEF3F 0xD PUSH16 0xE6F776916B23B5C1E3D23D5314EE38DB CALLER PUSH5 0x736F6C6343 STOP ADDMOD SHR STOP CALLER ","sourceMap":"694:4059:31:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1100:44;;;;;;;;;;-1:-1:-1;1100:44:31;;;;;:::i;:::-;;;;;;;;;;;;;;;;;529:25:33;;;517:2;502:18;1100:44:31;;;;;;;;3491:202:0;;;;;;;;;;-1:-1:-1;3491:202:0;;;;;:::i;:::-;;:::i;:::-;;;1021:14:33;;1014:22;996:41;;984:2;969:18;3491:202:0;856:187:33;1064:29:31;;;;;;;;;;;;;;;;2697:144:3;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;5114:186::-;;;;;;;;;;-1:-1:-1;5114:186:3;;;;;:::i;:::-;;:::i;3850:152::-;;;;;;;;;;-1:-1:-1;3981:14:3;;3850:152;;5892:244;;;;;;;;;;-1:-1:-1;5892:244:3;;;;;:::i;:::-;;:::i;4807:191:0:-;;;;;;;;;;-1:-1:-1;4807:191:0;;;;;:::i;:::-;;:::i;5294:136::-;;;;;;;;;;-1:-1:-1;5294:136:0;;;;;:::i;:::-;;:::i;:::-;;3735:82:3;;;;;;;;;;-1:-1:-1;3735:82:3;;3808:2;3348:36:33;;3336:2;3321:18;3735:82:3;3206:184:33;3040:112:4;;;;;;;;;;;;;:::i;6396:245:0:-;;;;;;;;;;-1:-1:-1;6396:245:0;;;;;:::i;:::-;;:::i;2548:77:31:-;;;;;;;;;;;;;:::i;4161:214:2:-;;;;;;:::i;:::-;;:::i;3708:134::-;;;;;;;;;;;;;:::i;4652:98:31:-;;;;;;;;;;-1:-1:-1;4728:14:31;;;;;;;;;;;;-1:-1:-1;;;4728:14:31;;;;4652:98;;2496:145:7;;;;;;;;;;-1:-1:-1;;;;;;;;;;;;2625:9:7;;;2496:145;;4035:171:3;;;;;;;;;;-1:-1:-1;4035:171:3;;;;;:::i;:::-;;:::i;2794:154:4:-;;;;;;;;;;-1:-1:-1;2794:154:4;;;;;:::i;:::-;;:::i;2974:251:31:-;;;;;;;;;;-1:-1:-1;2974:251:31;;;;;:::i;:::-;;:::i;2408:73::-;;;;;;;;;;;;;:::i;5043:903:8:-;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;:::i;3551:323:31:-;;;;;;;;;;-1:-1:-1;3551:323:31;;;;;:::i;:::-;;:::i;3780:207:0:-;;;;;;;;;;-1:-1:-1;3780:207:0;;;;;:::i;:::-;;:::i;2954:148:3:-;;;;;;;;;;;;;:::i;3296:188:31:-;;;;;;;;;;-1:-1:-1;3296:188:31;;;;;:::i;:::-;;:::i;2398:49:0:-;;;;;;;;;;-1:-1:-1;2398:49:0;2443:4;2398:49;;1032:25:31;;;;;;;;;;-1:-1:-1;1032:25:31;;;;-1:-1:-1;;;;;1032:25:31;;;;;;-1:-1:-1;;;;;7333:32:33;;;7315:51;;7303:2;7288:18;1032:25:31;7169:203:33;4401:178:3;;;;;;;;;;-1:-1:-1;4401:178:3;;;;;:::i;:::-;;:::i;1819:58:2:-;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;1819:58:2;;;;;2692:219:31;;;;;;;;;;-1:-1:-1;2692:219:31;;;;;:::i;:::-;;:::i;2083:672:4:-;;;;;;;;;;-1:-1:-1;2083:672:4;;;;;:::i;:::-;;:::i;933:62:31:-;;;;;;;;;;;;971:24;933:62;;5710:138:0;;;;;;;;;;-1:-1:-1;5710:138:0;;;;;:::i;:::-;;:::i;4612:195:3:-;;;;;;;;;;-1:-1:-1;4612:195:3;;;;;:::i;:::-;;:::i;864:62:31:-;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;864:62:31;;1726:617;;;;;;;;;;-1:-1:-1;1726:617:31;;;;;:::i;:::-;;:::i;3491:202:0:-;3576:4;-1:-1:-1;;;;;;3599:47:0;;-1:-1:-1;;;3599:47:0;;:87;;-1:-1:-1;;;;;;;;;;1101:40:9;;;3650:36:0;3592:94;3491:202;-1:-1:-1;;3491:202:0:o;2697:144:3:-;2742:13;2767:22;-1:-1:-1;;;;;;;;;;;2792:18:3;2767:43;;2827:1;:7;;2820:14;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2697:144;:::o;5114:186::-;5187:4;966:10:5;5241:31:3;966:10:5;5257:7:3;5266:5;5241:8;:31::i;:::-;-1:-1:-1;5289:4:3;;5114:186;-1:-1:-1;;;5114:186:3:o;5892:244::-;5979:4;966:10:5;6035:37:3;6051:4;966:10:5;6066:5:3;6035:15;:37::i;:::-;6082:26;6092:4;6098:2;6102:5;6082:9;:26::i;:::-;6125:4;6118:11;;;5892:244;;;;;;:::o;4807:191:0:-;4872:7;4967:14;;;-1:-1:-1;;;;;;;;;;;4967:14:0;;;;;:24;;;;4807:191::o;5294:136::-;5368:18;5381:4;5368:12;:18::i;:::-;3272:16;3283:4;3272:10;:16::i;:::-;5398:25:::1;5409:4;5415:7;5398:10;:25::i;:::-;;5294:136:::0;;;:::o;3040:112:4:-;3099:7;3125:20;:18;:20::i;:::-;3118:27;;3040:112;:::o;6396:245:0:-;-1:-1:-1;;;;;6489:34:0;;966:10:5;6489:34:0;6485:102;;6546:30;;-1:-1:-1;;;6546:30:0;;;;;;;;;;;6485:102;6597:37;6609:4;6615:18;6597:11;:37::i;:::-;;6396:245;;:::o;2548:77:31:-;-1:-1:-1;;;;;;;;;;;3272:16:0;3283:4;3272:10;:16::i;:::-;2607:10:31::1;:8;:10::i;:::-;2548:77:::0;:::o;4161:214:2:-;2655:13;:11;:13::i;:::-;4276:36:::1;4294:17;4276;:36::i;:::-;4322:46;4344:17;4363:4;4322:21;:46::i;:::-;4161:214:::0;;:::o;3708:134::-;3777:7;2926:20;:18;:20::i;:::-;-1:-1:-1;;;;;;;;;;;;3708:134:2;:::o;4035:171:3:-;4100:7;;-1:-1:-1;;;;;;;;;;;4144:18:3;-1:-1:-1;;;;;4179:20:3;;;:11;:20;;;;;;;;-1:-1:-1;;4179:20:3;;;;;4035:171::o;2794:154:4:-;2896:7;2922:19;2935:5;2922:12;:19::i;2974:251:31:-;2443:4:0;3272:16;2443:4;3272:10;:16::i;:::-;3095:14:31::1;::::0;;3120:32;;;;3168:49:::1;::::0;;9109:25:33;;;9165:2;9150:18;;9143:34;;;3168:49:31::1;::::0;9082:18:33;3168:49:31::1;;;;;;;3064:161;2974:251:::0;;:::o;2408:73::-;-1:-1:-1;;;;;;;;;;;3272:16:0;3283:4;3272:10;:16::i;:::-;2465:8:31::1;:6;:8::i;5043:903:8:-:0;5141:13;5168:18;;5141:13;;;5168:18;5141:13;-1:-1:-1;;;;;;;;;;;5647:13:8;;5381:45;;-1:-1:-1;5647:18:8;:43;;;;-1:-1:-1;5669:16:8;;;;:21;5647:43;5639:77;;;;-1:-1:-1;;;5639:77:8;;9390:2:33;5639:77:8;;;9372:21:33;9429:2;9409:18;;;9402:30;-1:-1:-1;;;9448:18:33;;;9441:51;9509:18;;5639:77:8;;;;;;;;;5778:13;:11;:13::i;:::-;5805:16;:14;:16::i;:::-;5913;;;5897:1;5913:16;;;;;;;;;-1:-1:-1;;;5727:212:8;;;-1:-1:-1;5727:212:8;;-1:-1:-1;5835:13:8;;-1:-1:-1;5870:4:8;;-1:-1:-1;5897:1:8;-1:-1:-1;5913:16:8;-1:-1:-1;5727:212:8;-1:-1:-1;;5043:903:8:o;3551:323:31:-;3661:35;;;3653:70;;;;-1:-1:-1;;;3653:70:31;;9740:2:33;3653:70:31;;;9722:21:33;9779:2;9759:18;;;9752:30;-1:-1:-1;;;9798:18:33;;;9791:52;9860:18;;3653:70:31;9538:346:33;3653:70:31;3749:9;3744:123;3764:21;;;3744:123;;;3807:48;3817:10;3829;;3840:1;3829:13;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;3844:7;;3852:1;3844:10;;;;;;;:::i;:::-;;;;;;;3807:9;:48::i;:::-;3787:3;;3744:123;;;;3551:323;;;;:::o;3780:207:0:-;3857:4;3949:14;;;-1:-1:-1;;;;;;;;;;;3949:14:0;;;;;;;;-1:-1:-1;;;;;3949:31:0;;;;;;;;;;;;;;;3780:207::o;2954:148:3:-;3086:9;3079:16;;3001:13;;-1:-1:-1;;;;;;;;;;;2064:20:3;3079:16;;;:::i;3296:188:31:-;2443:4:0;3272:16;2443:4;3272:10;:16::i;:::-;-1:-1:-1;;;;;3401:18:31;::::1;;::::0;;;:9:::1;:18;::::0;;;;;;:29;;;3446:30;::::1;::::0;::::1;::::0;3422:8;529:25:33;;517:2;502:18;;383:177;3446:30:31::1;;;;;;;;3296:188:::0;;;:::o;4401:178:3:-;4470:4;966:10:5;4524:27:3;966:10:5;4541:2:3;4545:5;4524:9;:27::i;2692:219:31:-;2443:4:0;3272:16;2443:4;3272:10;:16::i;:::-;2785:15:31::1;2803:10:::0;;-1:-1:-1;;;;;2824:24:31;;::::1;-1:-1:-1::0;;;;;;2824:24:31;::::1;::::0;::::1;::::0;;2864:39:::1;::::0;2803:10;;;::::1;::::0;;;2864:39:::1;::::0;2785:15;2864:39:::1;2774:137;2692:219:::0;;:::o;2083:672:4:-;2304:8;2286:15;:26;2282:97;;;2335:33;;-1:-1:-1;;;2335:33:4;;;;;529:25:33;;;502:18;;2335:33:4;383:177:33;2282:97:4;2389:18;1279:95;2448:5;2455:7;2464:5;2471:16;2481:5;-1:-1:-1;;;;;1954:16:6;1597:7;1954:16;;;1005:21;1954:16;;;;;:18;;;;;;;;;1537:452;2471:16:4;2420:78;;;;;;10308:25:33;;;;-1:-1:-1;;;;;10369:32:33;;;10349:18;;;10342:60;10438:32;;;;10418:18;;;10411:60;10487:18;;;10480:34;10530:19;;;10523:35;10574:19;;;10567:35;;;10280:19;;2420:78:4;;;;;;;;;;;;2410:89;;;;;;2389:110;;2510:12;2525:28;2542:10;2525:16;:28::i;:::-;2510:43;;2564:14;2581:28;2595:4;2601:1;2604;2607;2581:13;:28::i;:::-;2564:45;;2633:5;-1:-1:-1;;;;;2623:15:4;:6;-1:-1:-1;;;;;2623:15:4;;2619:88;;2661:35;;-1:-1:-1;;;2661:35:4;;-1:-1:-1;;;;;10805:32:33;;;2661:35:4;;;10787:51:33;10874:32;;10854:18;;;10847:60;10760:18;;2661:35:4;10613:300:33;2619:88:4;2717:31;2726:5;2733:7;2742:5;2717:8;:31::i;:::-;2272:483;;;2083:672;;;;;;;:::o;5710:138:0:-;5785:18;5798:4;5785:12;:18::i;:::-;3272:16;3283:4;3272:10;:16::i;:::-;5815:26:::1;5827:4;5833:7;5815:11;:26::i;4612:195:3:-:0;-1:-1:-1;;;;;4771:20:3;;;4692:7;4771:20;;;:13;:20;;;;;;;;:29;;;;;;;;;;;;;4612:195::o;1726:617:31:-;4158:30:1;4191:26;:24;:26::i;:::-;4302:15;;4158:59;;-1:-1:-1;4302:15:1;-1:-1:-1;;;4302:15:1;;;4301:16;;4348:14;;4279:19;4724:16;;:34;;;;;4744:14;4724:34;4704:54;;4768:17;4788:11;:16;;4803:1;4788:16;:50;;;;-1:-1:-1;4816:4:1;4808:25;:30;4788:50;4768:70;;4854:12;4853:13;:30;;;;;4871:12;4870:13;4853:30;4849:91;;;4906:23;;-1:-1:-1;;;4906:23:1;;;;;;;;;;;4849:91;4949:18;;-1:-1:-1;;4949:18:1;4966:1;4949:18;;;4977:67;;;;5011:22;;-1:-1:-1;;;;5011:22:1;-1:-1:-1;;;5011:22:1;;;4977:67;1799:32:31::1;;;;;;;;;;;;;;-1:-1:-1::0;;;1799:32:31::1;;::::0;::::1;;;;;;;;;;;;;-1:-1:-1::0;;;1799:32:31::1;;::::0;:12:::1;:32::i;:::-;1842:31;;;;;;;;;;;;;;-1:-1:-1::0;;;1842:31:31::1;;::::0;:18:::1;:31::i;:::-;1884:17;:15;:17::i;:::-;1912:22;:20;:22::i;:::-;1945:24;:22;:24::i;:::-;2015:42;2443:4:0;2046:10:31;2015;:42::i;:::-;;2068:35;-1:-1:-1::0;;;;;;;;;;;2092:10:31::1;2068;:35::i;:::-;;2114;971:24;2138:10;2114;:35::i;:::-;;2202:32;2208:10;2220:13;2202:5;:32::i;:::-;2323:12;2306:14;:29:::0;5064:101:1;;;;5098:23;;-1:-1:-1;;;;5098:23:1;;;5140:14;;-1:-1:-1;11071:50:33;;5140:14:1;;11059:2:33;11044:18;5140:14:1;;;;;;;5064:101;4092:1079;;;;;1726:617:31;:::o;9905:128:3:-;9989:37;9998:5;10005:7;10014:5;10021:4;9989:8;:37::i;11649:476::-;11748:24;11775:25;11785:5;11792:7;11775:9;:25::i;:::-;11748:52;;-1:-1:-1;;11814:16:3;:36;11810:309;;;11889:5;11870:16;:24;11866:130;;;11921:60;;-1:-1:-1;;;11921:60:3;;-1:-1:-1;;;;;11352:32:33;;11921:60:3;;;11334:51:33;11401:18;;;11394:34;;;11444:18;;;11437:34;;;11307:18;;11921:60:3;11132:345:33;11866:130:3;12037:57;12046:5;12053:7;12081:5;12062:16;:24;12088:5;12037:8;:57::i;6509:300::-;-1:-1:-1;;;;;6592:18:3;;6588:86;;6633:30;;-1:-1:-1;;;6633:30:3;;6660:1;6633:30;;;7315:51:33;7288:18;;6633:30:3;7169:203:33;6588:86:3;-1:-1:-1;;;;;6687:16:3;;6683:86;;6726:32;;-1:-1:-1;;;6726:32:3;;6755:1;6726:32;;;7315:51:33;7288:18;;6726:32:3;7169:203:33;6683:86:3;6778:24;6786:4;6792:2;6796:5;6778:7;:24::i;4196:103:0:-;4262:30;4273:4;966:10:5;4262::0;:30::i;7318:387::-;7395:4;-1:-1:-1;;;;;;;;;;;7485:22:0;7493:4;7499:7;7485;:22::i;:::-;7480:219;;7523:8;:14;;;;;;;;;;;-1:-1:-1;;;;;7523:31:0;;;;;;;;;:38;;-1:-1:-1;;7523:38:0;7557:4;7523:38;;;7607:12;966:10:5;;887:96;7607:12:0;-1:-1:-1;;;;;7580:40:0;7598:7;-1:-1:-1;;;;;7580:40:0;7592:4;7580:40;;;;;;;;;;7641:4;7634:11;;;;;7480:219;7683:5;7676:12;;;;;3901:109:8;3954:7;3980:23;:21;:23::i;7942:388:0:-;8020:4;-1:-1:-1;;;;;;;;;;;8109:22:0;8117:4;8123:7;8109;:22::i;:::-;8105:219;;;8181:5;8147:14;;;;;;;;;;;-1:-1:-1;;;;;8147:31:0;;;;;;;;;;:39;;-1:-1:-1;;8147:39:0;;;8205:40;966:10:5;;8147:14:0;;8205:40;;8181:5;8205:40;8266:4;8259:11;;;;;3478:178:7;2226:16;:14;:16::i;:::-;-1:-1:-1;;;;;;;;;;;3595:17:7;;-1:-1:-1;;3595:17:7::1;::::0;;3627:22:::1;966:10:5::0;3636:12:7::1;3627:22;::::0;-1:-1:-1;;;;;7333:32:33;;;7315:51;;7303:2;7288:18;3627:22:7::1;;;;;;;3526:130;3478:178::o:0;4578:312:2:-;4658:4;-1:-1:-1;;;;;4667:6:2;4650:23;;;:120;;;4764:6;-1:-1:-1;;;;;4728:42:2;:32;-1:-1:-1;;;;;;;;;;;1565:53:15;-1:-1:-1;;;;;1565:53:15;;1486:140;4728:32:2;-1:-1:-1;;;;;4728:42:2;;;4650:120;4633:251;;;4844:29;;-1:-1:-1;;;4844:29:2;;;;;;;;;;;4633:251;4578:312::o;4442:155:31:-;2443:4:0;3272:16;2443:4;3272:10;:16::i;6032:538:2:-;6149:17;-1:-1:-1;;;;;6131:50:2;;:52;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;6131:52:2;;;;;;;;-1:-1:-1;;6131:52:2;;;;;;;;;;;;:::i;:::-;;;6127:437;;6493:60;;-1:-1:-1;;;6493:60:2;;-1:-1:-1;;;;;7333:32:33;;6493:60:2;;;7315:51:33;7288:18;;6493:60:2;7169:203:33;6127:437:2;-1:-1:-1;;;;;;;;;;;6225:40:2;;6221:120;;6292:34;;-1:-1:-1;;;6292:34:2;;;;;529:25:33;;;502:18;;6292:34:2;383:177:33;6221:120:2;6354:54;6384:17;6403:4;6354:29;:54::i;5007:213::-;5081:4;-1:-1:-1;;;;;5090:6:2;5073:23;;5069:145;;5174:29;;-1:-1:-1;;;5174:29:2;;;;;;;;;;;1259:164:6;1319:7;;1005:21;1364:19;886:156;3170:176:7;1979:19;:17;:19::i;:::-;-1:-1:-1;;;;;;;;;;;3288:16:7;;-1:-1:-1;;3288:16:7::1;3300:4;3288:16;::::0;;3319:20:::1;966:10:5::0;3326:12:7::1;887:96:5::0;6170:155:8;6311:7;6304:14;;6224:13;;-1:-1:-1;;;;;;;;;;;2725:21:8;6304:14;;;:::i;6552:161::-;6609:13;6634:23;-1:-1:-1;;;;;;;;;;;6660:19:8;2606:156;4832:176;4909:7;4935:66;4968:20;:18;:20::i;:::-;4990:10;4140:4:26;4134:11;-1:-1:-1;;;4159:23:26;;4212:4;4203:14;;4196:39;;;;4265:4;4256:14;;4249:34;4322:4;4307:20;;;3963:382;7046:264:25;7131:7;7152:17;7171:18;7191:16;7211:25;7222:4;7228:1;7231;7234;7211:10;:25::i;:::-;7151:85;;;;;;7247:28;7259:5;7266:8;7247:11;:28::i;:::-;-1:-1:-1;7293:9:25;;7046:264;-1:-1:-1;;;;;;7046:264:25:o;9071:205:1:-;9129:30;;3147:66;9186:27;8819:122;2263:147:3;6929:20:1;:18;:20::i;:::-;2365:38:3::1;2388:5;2395:7;2365:22;:38::i;1832:125:4:-:0;6929:20:1;:18;:20::i;:::-;1916:34:4::1;1940:4;1916:34;;;;;;;;;;;;;-1:-1:-1::0;;;1916:34:4::1;;::::0;:23:::1;:34::i;2266:60:7:-:0;6929:20:1;:18;:20::i;8637:208:3:-;-1:-1:-1;;;;;8707:21:3;;8703:91;;8751:32;;-1:-1:-1;;;8751:32:3;;8780:1;8751:32;;;7315:51:33;7288:18;;8751:32:3;7169:203:33;8703:91:3;8803:35;8819:1;8823:7;8832:5;8803:7;:35::i;10880:487::-;-1:-1:-1;;;;;;;;;;;;;;;;11045:19:3;;11041:89;;11087:32;;-1:-1:-1;;;11087:32:3;;11116:1;11087:32;;;7315:51:33;7288:18;;11087:32:3;7169:203:33;11041:89:3;-1:-1:-1;;;;;11143:21:3;;11139:90;;11187:31;;-1:-1:-1;;;11187:31:3;;11215:1;11187:31;;;7315:51:33;7288:18;;11187:31:3;7169:203:33;11139:90:3;-1:-1:-1;;;;;11238:20:3;;;;;;;:13;;;:20;;;;;;;;:29;;;;;;;;;:37;;;11285:76;;;;11335:7;-1:-1:-1;;;;;11319:31:3;11328:5;-1:-1:-1;;;;;11319:31:3;;11344:5;11319:31;;;;529:25:33;;517:2;502:18;;383:177;11319:31:3;;;;;;;;10978:389;10880:487;;;;:::o;3953:415:31:-;-1:-1:-1;;;;;4122:18:31;;;;;;:38;;-1:-1:-1;;;;;;4144:16:31;;;;4122:38;4118:192;;;-1:-1:-1;;;;;4181:15:31;;;;;;:9;:15;;;;;;4199;-1:-1:-1;4177:122:31;;;-1:-1:-1;;;;;4267:15:31;;;;;;:9;:15;;;;;;;;4242:41;;-1:-1:-1;;;4242:41:31;;;;;11845:51:33;;;;11912:18;;;11905:34;11818:18;;4242:41:31;11671:274:33;4177:122:31;4330:30;4344:4;4350:2;4354:5;4330:13;:30::i;4429:197:0:-;4517:22;4525:4;4531:7;4517;:22::i;:::-;4512:108;;4562:47;;-1:-1:-1;;;4562:47:0;;-1:-1:-1;;;;;11863:32:33;;4562:47:0;;;11845:51:33;11912:18;;;11905:34;;;11818:18;;4562:47:0;11671:274:33;4016:191:8;4071:7;1959:95;4129:17;:15;:17::i;:::-;4148:20;:18;:20::i;:::-;4107:92;;;;;;12488:25:33;;;;12529:18;;12522:34;;;;12572:18;;;12565:34;4170:13:8;12615:18:33;;;12608:34;4193:4:8;12658:19:33;;;12651:61;12460:19;;4107:92:8;;;;;;;;;;;;4097:103;;;;;;4090:110;;4016:191;:::o;2909:126:7:-;-1:-1:-1;;;;;;;;;;;2625:9:7;;;2967:62;;3003:15;;-1:-1:-1;;;3003:15:7;;;;;;;;;;;2330:353:15;2422:37;2441:17;2422:18;:37::i;:::-;2475:36;;-1:-1:-1;;;;;2475:36:15;;;;;;;;2528:11;;:15;2524:152;;2560:53;2589:17;2608:4;2560:28;:53::i;2524:152::-;2646:18;:16;:18::i;2709:128:7:-;-1:-1:-1;;;;;;;;;;;2625:9:7;;;2770:61;;;2805:15;;-1:-1:-1;;;2805:15:7;;;;;;;;;;;5330:1577:25;5461:17;;;6425:66;6412:79;;6408:166;;;-1:-1:-1;6524:1:25;;-1:-1:-1;6528:30:25;;-1:-1:-1;6560:1:25;6508:54;;6408:166;6688:24;;;6671:14;6688:24;;;;;;;;;12950:25:33;;;13023:4;13011:17;;12991:18;;;12984:45;;;;13045:18;;;13038:34;;;13088:18;;;13081:34;;;6688:24:25;;12922:19:33;;6688:24:25;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;6688:24:25;;-1:-1:-1;;6688:24:25;;;-1:-1:-1;;;;;;;6727:20:25;;6723:115;;-1:-1:-1;6780:1:25;;-1:-1:-1;6784:29:25;;-1:-1:-1;6780:1:25;;-1:-1:-1;6764:62:25;;6723:115;6858:6;-1:-1:-1;6866:20:25;;-1:-1:-1;6866:20:25;;-1:-1:-1;5330:1577:25;;;;;;;;;:::o;7448:542::-;7544:20;7535:5;:29;;;;;;;;:::i;:::-;;7531:452;;7448:542;;:::o;7531:452::-;7642:29;7633:5;:38;;;;;;;;:::i;:::-;;7629:354;;7695:23;;-1:-1:-1;;;7695:23:25;;;;;;;;;;;7629:354;7749:35;7740:5;:44;;;;;;;;:::i;:::-;;7736:247;;7808:46;;-1:-1:-1;;;7808:46:25;;;;;529:25:33;;;502:18;;7808:46:25;383:177:33;7736:247:25;7885:30;7876:5;:39;;;;;;;;:::i;:::-;;7872:111;;7939:32;;-1:-1:-1;;;7939:32:25;;;;;529:25:33;;;502:18;;7939:32:25;383:177:33;7082:141:1;7149:17;:15;:17::i;:::-;7144:73;;7189:17;;-1:-1:-1;;;7189:17:1;;;;;;;;;;;2416:216:3;6929:20:1;:18;:20::i;:::-;-1:-1:-1;;;;;;;;;;;2581:7:3;:15:::1;2591:5:::0;2581:7;:15:::1;:::i;:::-;-1:-1:-1::0;2606:9:3::1;::::0;::::1;:19;2618:7:::0;2606:9;:19:::1;:::i;3485:330:8:-:0;6929:20:1;:18;:20::i;:::-;-1:-1:-1;;;;;;;;;;;3652:7:8;:14:::1;3662:4:::0;3652:7;:14:::1;:::i;:::-;-1:-1:-1::0;3676:10:8::1;::::0;::::1;:20;3689:7:::0;3676:10;:20:::1;:::i;:::-;-1:-1:-1::0;3777:1:8::1;3761:17:::0;;;3788:16:::1;::::0;;::::1;:20:::0;-1:-1:-1;;3485:330:8:o;7124:1170:3:-;-1:-1:-1;;;;;;;;;;;;;;;;7266:18:3;;7262:546;;7420:5;7402:1;:14;;;:23;;;;;;;:::i;:::-;;;;-1:-1:-1;7262:546:3;;-1:-1:-1;7262:546:3;;-1:-1:-1;;;;;7478:17:3;;7456:19;7478:17;;;;;;;;;;;7513:19;;;7509:115;;;7559:50;;-1:-1:-1;;;7559:50:3;;-1:-1:-1;;;;;11352:32:33;;7559:50:3;;;11334:51:33;11401:18;;;11394:34;;;11444:18;;;11437:34;;;11307:18;;7559:50:3;11132:345:33;7509:115:3;-1:-1:-1;;;;;7744:17:3;;:11;:17;;;;;;;;;;7764:19;;;;7744:39;;7262:546;-1:-1:-1;;;;;7822:16:3;;7818:429;;7985:14;;;:23;;;;;;;7818:429;;;-1:-1:-1;;;;;8198:15:3;;:11;:15;;;;;;;;;;:24;;;;;;7818:429;8277:2;-1:-1:-1;;;;;8262:25:3;8271:4;-1:-1:-1;;;;;8262:25:3;;8281:5;8262:25;;;;529::33;;517:2;502:18;;383:177;8262:25:3;;;;;;;;7199:1095;7124:1170;;;:::o;6928:687:8:-;6978:7;-1:-1:-1;;;;;;;;;;;6978:7:8;7073:13;:11;:13::i;:::-;7100:18;;7052:34;;-1:-1:-1;7100:22:8;7096:513;;7145:22;;;;;;;;6928:687;-1:-1:-1;;6928:687:8:o;7096:513::-;7442:13;;7473:15;;7469:130;;7515:10;6928:687;-1:-1:-1;;;6928:687:8:o;7469:130::-;7571:13;7564:20;;;;;6928:687;:::o;7836:723::-;7889:7;-1:-1:-1;;;;;;;;;;;7889:7:8;7987:16;:14;:16::i;:::-;8017:21;;7963:40;;-1:-1:-1;8017:25:8;8013:540;;8065:25;;;;;;;;7836:723;-1:-1:-1;;7836:723:8:o;8013:540::-;8377:16;;;;8411:18;;8407:136;;8456:13;7836:723;-1:-1:-1;;;7836:723:8:o;1723:286:15:-;1801:17;-1:-1:-1;;;;;1801:29:15;;1834:1;1801:34;1797:121;;1859:47;;-1:-1:-1;;;1859:47:15;;-1:-1:-1;;;;;7333:32:33;;1859:47:15;;;7315:51:33;7288:18;;1859:47:15;7169:203:33;1797:121:15;-1:-1:-1;;;;;;;;;;;1928:73:15;;-1:-1:-1;;;;;;1928:73:15;-1:-1:-1;;;;;1928:73:15;;;;;;;;;;1723:286::o;4011:256:20:-;4094:12;4120;4134:23;4161:6;-1:-1:-1;;;;;4161:19:20;4181:4;4161:25;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4119:67;;;;4204:55;4231:6;4239:7;4248:10;4204:26;:55::i;:::-;4197:62;4011:256;-1:-1:-1;;;;;4011:256:20:o;6284:126:15:-;6335:9;:13;6331:72;;6372:19;;-1:-1:-1;;;6372:19:15;;;;;;;;;;;8485:120:1;8535:4;8558:26;:24;:26::i;:::-;:40;-1:-1:-1;;;8558:40:1;;;;;;-1:-1:-1;8485:120:1:o;4542:597:20:-;4690:12;4720:7;4715:417;;4744:19;4752:10;4744:7;:19::i;:::-;4715:417;;;4972:17;;:22;:49;;;;-1:-1:-1;;;;;;4998:18:20;;;:23;4972:49;4968:121;;;5049:24;;-1:-1:-1;;;5049:24:20;;-1:-1:-1;;;;;7333:32:33;;5049:24:20;;;7315:51:33;7288:18;;5049:24:20;7169:203:33;4968:121:20;-1:-1:-1;5110:10:20;5103:17;;5696:498;5829:17;;:21;5825:362;;6029:10;6023:17;6086:15;6073:10;6069:2;6065:19;6058:44;5825:362;6156:19;;-1:-1:-1;;;6156:19:20;;;;;;;;;;;14:173:33;82:20;;-1:-1:-1;;;;;131:31:33;;121:42;;111:70;;177:1;174;167:12;111:70;14:173;;;:::o;192:186::-;251:6;304:2;292:9;283:7;279:23;275:32;272:52;;;320:1;317;310:12;272:52;343:29;362:9;343:29;:::i;565:286::-;623:6;676:2;664:9;655:7;651:23;647:32;644:52;;;692:1;689;682:12;644:52;718:23;;-1:-1:-1;;;;;;770:32:33;;760:43;;750:71;;817:1;814;807:12;1048:250;1133:1;1143:113;1157:6;1154:1;1151:13;1143:113;;;1233:11;;;1227:18;1214:11;;;1207:39;1179:2;1172:10;1143:113;;;-1:-1:-1;;1290:1:33;1272:16;;1265:27;1048:250::o;1303:271::-;1345:3;1383:5;1377:12;1410:6;1405:3;1398:19;1426:76;1495:6;1488:4;1483:3;1479:14;1472:4;1465:5;1461:16;1426:76;:::i;:::-;1556:2;1535:15;-1:-1:-1;;1531:29:33;1522:39;;;;1563:4;1518:50;;1303:271;-1:-1:-1;;1303:271:33:o;1579:220::-;1728:2;1717:9;1710:21;1691:4;1748:45;1789:2;1778:9;1774:18;1766:6;1748:45;:::i;1804:300::-;1872:6;1880;1933:2;1921:9;1912:7;1908:23;1904:32;1901:52;;;1949:1;1946;1939:12;1901:52;1972:29;1991:9;1972:29;:::i;:::-;1962:39;2070:2;2055:18;;;;2042:32;;-1:-1:-1;;;1804:300:33:o;2109:374::-;2186:6;2194;2202;2255:2;2243:9;2234:7;2230:23;2226:32;2223:52;;;2271:1;2268;2261:12;2223:52;2294:29;2313:9;2294:29;:::i;:::-;2284:39;;2342:38;2376:2;2365:9;2361:18;2342:38;:::i;:::-;2109:374;;2332:48;;-1:-1:-1;;;2449:2:33;2434:18;;;;2421:32;;2109:374::o;2488:226::-;2547:6;2600:2;2588:9;2579:7;2575:23;2571:32;2568:52;;;2616:1;2613;2606:12;2568:52;-1:-1:-1;2661:23:33;;2488:226;-1:-1:-1;2488:226:33:o;2901:300::-;2969:6;2977;3030:2;3018:9;3009:7;3005:23;3001:32;2998:52;;;3046:1;3043;3036:12;2998:52;3091:23;;;-1:-1:-1;3157:38:33;3191:2;3176:18;;3157:38;:::i;:::-;3147:48;;2901:300;;;;;:::o;3395:127::-;3456:10;3451:3;3447:20;3444:1;3437:31;3487:4;3484:1;3477:15;3511:4;3508:1;3501:15;3527:1018;3604:6;3612;3665:2;3653:9;3644:7;3640:23;3636:32;3633:52;;;3681:1;3678;3671:12;3633:52;3704:29;3723:9;3704:29;:::i;:::-;3694:39;;3784:2;3773:9;3769:18;3756:32;3811:18;3803:6;3800:30;3797:50;;;3843:1;3840;3833:12;3797:50;3866:22;;3919:4;3911:13;;3907:27;-1:-1:-1;3897:55:33;;3948:1;3945;3938:12;3897:55;3988:2;3975:16;4014:18;4006:6;4003:30;4000:56;;;4036:18;;:::i;:::-;4085:2;4079:9;4177:2;4139:17;;-1:-1:-1;;4135:31:33;;;4168:2;4131:40;4127:54;4115:67;;4212:18;4197:34;;4233:22;;;4194:62;4191:88;;;4259:18;;:::i;:::-;4295:2;4288:22;4319;;;4360:15;;;4377:2;4356:24;4353:37;-1:-1:-1;4350:57:33;;;4403:1;4400;4393:12;4350:57;4459:6;4454:2;4450;4446:11;4441:2;4433:6;4429:15;4416:50;4512:1;4507:2;4498:6;4490;4486:19;4482:28;4475:39;4533:6;4523:16;;;;;3527:1018;;;;;:::o;4781:1238::-;5187:3;5182;5178:13;5170:6;5166:26;5155:9;5148:45;5229:3;5224:2;5213:9;5209:18;5202:31;5129:4;5256:46;5297:3;5286:9;5282:19;5274:6;5256:46;:::i;:::-;5350:9;5342:6;5338:22;5333:2;5322:9;5318:18;5311:50;5384:33;5410:6;5402;5384:33;:::i;:::-;5448:2;5433:18;;5426:34;;;-1:-1:-1;;;;;5497:32:33;;5491:3;5476:19;;5469:61;5517:3;5546:19;;5539:35;;;5611:22;;;5605:3;5590:19;;5583:51;5683:13;;5705:22;;;5755:2;5781:15;;;;-1:-1:-1;5743:15:33;;;;-1:-1:-1;5824:169:33;5838:6;5835:1;5832:13;5824:169;;;5899:13;;5887:26;;5942:2;5968:15;;;;5933:12;;;;5860:1;5853:9;5824:169;;;-1:-1:-1;6010:3:33;;4781:1238;-1:-1:-1;;;;;;;;;;;4781:1238:33:o;6024:367::-;6087:8;6097:6;6151:3;6144:4;6136:6;6132:17;6128:27;6118:55;;6169:1;6166;6159:12;6118:55;-1:-1:-1;6192:20:33;;6235:18;6224:30;;6221:50;;;6267:1;6264;6257:12;6221:50;6304:4;6296:6;6292:17;6280:29;;6364:3;6357:4;6347:6;6344:1;6340:14;6332:6;6328:27;6324:38;6321:47;6318:67;;;6381:1;6378;6371:12;6318:67;6024:367;;;;;:::o;6396:768::-;6518:6;6526;6534;6542;6595:2;6583:9;6574:7;6570:23;6566:32;6563:52;;;6611:1;6608;6601:12;6563:52;6651:9;6638:23;6684:18;6676:6;6673:30;6670:50;;;6716:1;6713;6706:12;6670:50;6755:70;6817:7;6808:6;6797:9;6793:22;6755:70;:::i;:::-;6844:8;;-1:-1:-1;6729:96:33;-1:-1:-1;;6932:2:33;6917:18;;6904:32;6961:18;6948:32;;6945:52;;;6993:1;6990;6983:12;6945:52;7032:72;7096:7;7085:8;7074:9;7070:24;7032:72;:::i;:::-;6396:768;;;;-1:-1:-1;7123:8:33;-1:-1:-1;;;;6396:768:33:o;7377:903::-;7488:6;7496;7504;7512;7520;7528;7536;7589:3;7577:9;7568:7;7564:23;7560:33;7557:53;;;7606:1;7603;7596:12;7557:53;7629:29;7648:9;7629:29;:::i;:::-;7619:39;;7677:38;7711:2;7700:9;7696:18;7677:38;:::i;:::-;7667:48;-1:-1:-1;7784:2:33;7769:18;;7756:32;;-1:-1:-1;7885:2:33;7870:18;;7857:32;;-1:-1:-1;7967:3:33;7952:19;;7939:33;8016:4;8003:18;;7991:31;;7981:59;;8036:1;8033;8026:12;7981:59;7377:903;;;;-1:-1:-1;7377:903:33;;;;8059:7;8139:3;8124:19;;8111:33;;-1:-1:-1;8243:3:33;8228:19;;;8215:33;;7377:903;-1:-1:-1;;7377:903:33:o;8285:260::-;8353:6;8361;8414:2;8402:9;8393:7;8389:23;8385:32;8382:52;;;8430:1;8427;8420:12;8382:52;8453:29;8472:9;8453:29;:::i;:::-;8443:39;;8501:38;8535:2;8524:9;8520:18;8501:38;:::i;8550:380::-;8629:1;8625:12;;;;8672;;;8693:61;;8747:4;8739:6;8735:17;8725:27;;8693:61;8800:2;8792:6;8789:14;8769:18;8766:38;8763:161;;8846:10;8841:3;8837:20;8834:1;8827:31;8881:4;8878:1;8871:15;8909:4;8906:1;8899:15;8763:161;;8550:380;;;:::o;9889:127::-;9950:10;9945:3;9941:20;9938:1;9931:31;9981:4;9978:1;9971:15;10005:4;10002:1;9995:15;11482:184;11552:6;11605:2;11593:9;11584:7;11580:23;11576:32;11573:52;;;11621:1;11618;11611:12;11573:52;-1:-1:-1;11644:16:33;;11482:184;-1:-1:-1;11482:184:33:o;13126:127::-;13187:10;13182:3;13178:20;13175:1;13168:31;13218:4;13215:1;13208:15;13242:4;13239:1;13232:15;13384:518;13486:2;13481:3;13478:11;13475:421;;;13522:5;13519:1;13512:16;13566:4;13563:1;13553:18;13636:2;13624:10;13620:19;13617:1;13613:27;13607:4;13603:38;13672:4;13660:10;13657:20;13654:47;;;-1:-1:-1;13695:4:33;13654:47;13750:2;13745:3;13741:12;13738:1;13734:20;13728:4;13724:31;13714:41;;13805:81;13823:2;13816:5;13813:13;13805:81;;;13882:1;13868:16;;13849:1;13838:13;13805:81;;14078:1299;14204:3;14198:10;14231:18;14223:6;14220:30;14217:56;;;14253:18;;:::i;:::-;14282:97;14372:6;14332:38;14364:4;14358:11;14332:38;:::i;:::-;14326:4;14282:97;:::i;:::-;14428:4;14459:2;14448:14;;14476:1;14471:649;;;;15164:1;15181:6;15178:89;;;-1:-1:-1;15233:19:33;;;15227:26;15178:89;-1:-1:-1;;14035:1:33;14031:11;;;14027:24;14023:29;14013:40;14059:1;14055:11;;;14010:57;15280:81;;14441:930;;14471:649;13331:1;13324:14;;;13368:4;13355:18;;-1:-1:-1;;14507:20:33;;;14625:222;14639:7;14636:1;14633:14;14625:222;;;14721:19;;;14715:26;14700:42;;14828:4;14813:20;;;;14781:1;14769:14;;;;14655:12;14625:222;;;14629:3;14875:6;14866:7;14863:19;14860:201;;;14936:19;;;14930:26;-1:-1:-1;;15019:1:33;15015:14;;;15031:3;15011:24;15007:37;15003:42;14988:58;14973:74;;14860:201;-1:-1:-1;;;;15107:1:33;15091:14;;;15087:22;15074:36;;-1:-1:-1;14078:1299:33:o;15382:222::-;15447:9;;;15468:10;;;15465:133;;;15520:10;15515:3;15511:20;15508:1;15501:31;15555:4;15552:1;15545:15;15583:4;15580:1;15573:15;15609:287;15738:3;15776:6;15770:13;15792:66;15851:6;15846:3;15839:4;15831:6;15827:17;15792:66;:::i;:::-;15874:16;;;;;15609:287;-1:-1:-1;;15609:287:33:o"},"methodIdentifiers":{"DEFAULT_ADMIN_ROLE()":"a217fddf","DOMAIN_SEPARATOR()":"3644e515","MINTER_ROLE()":"d5391393","PAUSER_ROLE()":"e63ab1e9","UPGRADE_INTERFACE_VERSION()":"ad3cb1cc","allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","batchTransfer(address[],uint256[])":"88d695b2","cooldownPeriod()":"04646a49","cooldowns(address)":"01320fe2","decimals()":"313ce567","eip712Domain()":"84b0196e","getRoleAdmin(bytes32)":"248a9ca3","gnosisSafe()":"a84173ae","grantRole(bytes32,address)":"2f2ff15d","hasRole(bytes32,address)":"91d14854","initialize(uint256)":"fe4b84df","name()":"06fdde03","nonces(address)":"7ecebe00","pause()":"8456cb59","paused()":"5c975abb","permit(address,address,uint256,uint256,uint8,bytes32,bytes32)":"d505accf","proxiableUUID()":"52d1902d","renounceRole(bytes32,address)":"36568abe","revokeRole(bytes32,address)":"d547741f","setCooldown(address,uint256)":"9781a37e","setCooldownPeriod(uint256)":"80ea3de1","setGnosisSafe(address)":"c3085a3e","supportsInterface(bytes4)":"01ffc9a7","symbol()":"95d89b41","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd","unpause()":"3f4ba83a","upgradeToAndCall(address,bytes)":"4f1ef286","version()":"54fd4d50"}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"AccessControlBadConfirmation\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"neededRole\",\"type\":\"bytes32\"}],\"name\":\"AccessControlUnauthorizedAccount\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"AddressEmptyCode\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"cooldown\",\"type\":\"uint256\"}],\"name\":\"CooldownNotExpired\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ECDSAInvalidSignature\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"length\",\"type\":\"uint256\"}],\"name\":\"ECDSAInvalidSignatureLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"ECDSAInvalidSignatureS\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"ERC1967InvalidImplementation\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ERC1967NonPayable\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"ERC2612ExpiredSignature\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"signer\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC2612InvalidSigner\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"EnforcedPause\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ExpectedPause\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"FailedCall\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"currentNonce\",\"type\":\"uint256\"}],\"name\":\"InvalidAccountNonce\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"UUPSUnauthorizedCallContext\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"slot\",\"type\":\"bytes32\"}],\"name\":\"UUPSUnsupportedProxiableUUID\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"oldPeriod\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newPeriod\",\"type\":\"uint256\"}],\"name\":\"CooldownPeriodUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"cooldown\",\"type\":\"uint256\"}],\"name\":\"CooldownSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"EIP712DomainChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"oldSafe\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newSafe\",\"type\":\"address\"}],\"name\":\"GnosisSafeUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"Upgraded\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MINTER_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"PAUSER_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"UPGRADE_INTERFACE_VERSION\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"recipients\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"name\":\"batchTransfer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"cooldownPeriod\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"cooldowns\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"eip712Domain\",\"outputs\":[{\"internalType\":\"bytes1\",\"name\":\"fields\",\"type\":\"bytes1\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"version\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"chainId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"verifyingContract\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"},{\"internalType\":\"uint256[]\",\"name\":\"extensions\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"gnosisSafe\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"initialSupply\",\"type\":\"uint256\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"permit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"proxiableUUID\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"callerConfirmation\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"cooldown\",\"type\":\"uint256\"}],\"name\":\"setCooldown\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_cooldownPeriod\",\"type\":\"uint256\"}],\"name\":\"setCooldownPeriod\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_gnosisSafe\",\"type\":\"address\"}],\"name\":\"setGnosisSafe\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unpause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newImplementation\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"upgradeToAndCall\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"version\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Upgradeable PAD Token with proxy support\",\"errors\":{\"AccessControlBadConfirmation()\":[{\"details\":\"The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}.\"}],\"AccessControlUnauthorizedAccount(address,bytes32)\":[{\"details\":\"The `account` is missing a role.\"}],\"AddressEmptyCode(address)\":[{\"details\":\"There's no code at `target` (it is not a contract).\"}],\"ECDSAInvalidSignature()\":[{\"details\":\"The signature derives the `address(0)`.\"}],\"ECDSAInvalidSignatureLength(uint256)\":[{\"details\":\"The signature has an invalid length.\"}],\"ECDSAInvalidSignatureS(bytes32)\":[{\"details\":\"The signature has an S value that is in the upper half order.\"}],\"ERC1967InvalidImplementation(address)\":[{\"details\":\"The `implementation` of the proxy is invalid.\"}],\"ERC1967NonPayable()\":[{\"details\":\"An upgrade function sees `msg.value > 0` that may be lost.\"}],\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC2612ExpiredSignature(uint256)\":[{\"details\":\"Permit deadline has expired.\"}],\"ERC2612InvalidSigner(address,address)\":[{\"details\":\"Mismatched signature.\"}],\"EnforcedPause()\":[{\"details\":\"The operation failed because the contract is paused.\"}],\"ExpectedPause()\":[{\"details\":\"The operation failed because the contract is not paused.\"}],\"FailedCall()\":[{\"details\":\"A call to an address target failed. The target may have reverted.\"}],\"InvalidAccountNonce(address,uint256)\":[{\"details\":\"The nonce used for an `account` is not the expected current nonce.\"}],\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}],\"UUPSUnauthorizedCallContext()\":[{\"details\":\"The call is from an unauthorized context.\"}],\"UUPSUnsupportedProxiableUUID(bytes32)\":[{\"details\":\"The storage `slot` is unsupported as a UUID.\"}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"EIP712DomainChanged()\":{\"details\":\"MAY be emitted to signal that the domain could have changed.\"},\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"},\"Paused(address)\":{\"details\":\"Emitted when the pause is triggered by `account`.\"},\"RoleAdminChanged(bytes32,bytes32,bytes32)\":{\"details\":\"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted to signal this.\"},\"RoleGranted(bytes32,address,address)\":{\"details\":\"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call. This account bears the admin role (for the granted role). Expected in cases where the role was granted using the internal {AccessControl-_grantRole}.\"},\"RoleRevoked(bytes32,address,address)\":{\"details\":\"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"},\"Unpaused(address)\":{\"details\":\"Emitted when the pause is lifted by `account`.\"},\"Upgraded(address)\":{\"details\":\"Emitted when the implementation is upgraded.\"}},\"kind\":\"dev\",\"methods\":{\"DOMAIN_SEPARATOR()\":{\"details\":\"Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\"},\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"batchTransfer(address[],uint256[])\":{\"details\":\"Batch transfer function\"},\"constructor\":{\"custom:oz-upgrades-unsafe-allow\":\"constructor\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"eip712Domain()\":{\"details\":\"returns the fields and values that describe the domain separator used by this contract for EIP-712 signature.\"},\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"initialize(uint256)\":{\"details\":\"Initialize the token\",\"params\":{\"initialSupply\":\"Initial token supply (1 billion tokens)\"}},\"name()\":{\"details\":\"Returns the name of the token.\"},\"nonces(address)\":{\"details\":\"Returns the current nonce for `owner`. This value must be included whenever a signature is generated for {permit}. Every successful call to {permit} increases ``owner``'s nonce by one. This prevents a signature from being used multiple times.\"},\"pause()\":{\"details\":\"Pause token transfers\"},\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"},\"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)\":{\"details\":\"Sets `value` as the allowance of `spender` over ``owner``'s tokens, given ``owner``'s signed approval. IMPORTANT: The same issues {IERC20-approve} has related to transaction ordering also apply here. Emits an {Approval} event. Requirements: - `spender` cannot be the zero address. - `deadline` must be a timestamp in the future. - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner` over the EIP712-formatted function arguments. - the signature must use ``owner``'s current nonce (see {nonces}). For more information on the signature format, see the https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP section]. CAUTION: See Security Considerations above.\"},\"proxiableUUID()\":{\"details\":\"Implementation of the ERC-1822 {proxiableUUID} function. This returns the storage slot used by the implementation. It is used to validate the implementation's compatibility when performing an upgrade. IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`. May emit a {RoleRevoked} event.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event.\"},\"setCooldown(address,uint256)\":{\"details\":\"Set cooldown for an account\"},\"setCooldownPeriod(uint256)\":{\"details\":\"Set cooldown period\"},\"setGnosisSafe(address)\":{\"details\":\"Set Gnosis Safe address\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"},\"unpause()\":{\"details\":\"Unpause token transfers\"},\"upgradeToAndCall(address,bytes)\":{\"custom:oz-upgrades-unsafe-allow-reachable\":\"delegatecall\",\"details\":\"Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call encoded in `data`. Calls {_authorizeUpgrade}. Emits an {Upgraded} event.\"},\"version()\":{\"details\":\"Get version\"}},\"title\":\"PADTokenV2\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"BEP-20 compatible token with upgradeability\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/PADTokenV2.sol\":\"PADTokenV2\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":{\"keccak256\":\"0x85a70e2b1b65e9ba456add364d22b97eb9944083df1c39c0b4bd6a4b5aa386a4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d32a33be6ca4d8e89b9e82e3f9cec7a6c4e040534152313ff55da85b8f193059\",\"dweb:/ipfs/QmeR55L8t2A8xZ1nvT5y4yVWfFbbmpaGAtGBMz3GGNpuyP\"]},\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0xdb4d24ee2c087c391d587cd17adfe5b3f9d93b3110b1388c2ab6c7c0ad1dcd05\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ab7b6d5b9e2b88176312967fe0f0e78f3d9a1422fa5e4b64e2440c35869b5d08\",\"dweb:/ipfs/QmXKYWWyzcLg1B2k7Sb1qkEXgLCYfXecR9wYW5obRzWP1Q\"]},\"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":{\"keccak256\":\"0x574a7451e42724f7de29e2855c392a8a5020acd695169466a18459467d719d63\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5bc189f63b639ee173dd7b6fecc39baf7113bf161776aea22b34c57fdd1872ec\",\"dweb:/ipfs/QmZAf2VtjDLRULqjJkde6LNsxAg12tUqpPqgUQQZbAjgtZ\"]},\"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":{\"keccak256\":\"0xfcd09c2aa8cc3f93e12545454359f901965db312bc03833daf84de0c03e05022\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://07701188648d2ab83dab1037808298585264559bddf243bd8929037adcb984b0\",\"dweb:/ipfs/QmavmG5REdHCAWsZ8Cag26BCxAq27DRKGxr3uBg5ZYxQ51\"]},\"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20PermitUpgradeable.sol\":{\"keccak256\":\"0x075302c23ba4b3a1d2a5000947ac44bbb4e84b011ecadad6f5e3fd92cd568659\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13806b62ea930e61dfba5fbbfd4eafe135bb0e2e4d55ce8cde1407d7b20a739\",\"dweb:/ipfs/QmYjt4fwBLdKrMbGHZPqdsiwsK4obFdXdKFhQBBW5ruEuC\"]},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0xdbef5f0c787055227243a7318ef74c8a5a1108ca3a07f2b3a00ef67769e1e397\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://08e39f23d5b4692f9a40803e53a8156b72b4c1f9902a88cd65ba964db103dab9\",\"dweb:/ipfs/QmPKn6EYDgpga7KtpkA8wV2yJCYGMtc9K4LkJfhKX2RVSV\"]},\"@openzeppelin/contracts-upgradeable/utils/NoncesUpgradeable.sol\":{\"keccak256\":\"0x778f4a1546a1c6c726ecc8e2348a2789690fb8f26e12bd9d89537669167b79a4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://851d3dfe724e918ff0a064b206e1ef46b27ab0df2aa2c8af976973a22ef59827\",\"dweb:/ipfs/Qmd4wb7zX8ueYhMVBy5PJjfsANK3Ra3pKPN7qQkNsdwGHn\"]},\"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\":{\"keccak256\":\"0xa6bf6b7efe0e6625a9dcd30c5ddf52c4c24fe8372f37c7de9dbf5034746768d5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8c353ee3705bbf6fadb84c0fb10ef1b736e8ca3ca1867814349d1487ed207beb\",\"dweb:/ipfs/QmcugaPssrzGGE8q4YZKm2ZhnD3kCijjcgdWWg76nWt3FY\"]},\"@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol\":{\"keccak256\":\"0x89374b2a634f0a9c08f5891b6ecce0179bc2e0577819c787ed3268ca428c2459\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f13d2572e5bdd55e483dfac069aac47603644071616a41fce699e94368e38c13\",\"dweb:/ipfs/QmfKeyNT6vyb99vJQatPZ88UyZgXNmAiHUXSWnaR1TPE11\"]},\"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol\":{\"keccak256\":\"0x6694b63ddb2c59bbe341c846171798350e8f72fa02189fcdeaca864e28b54e1f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7d945d33e2189ac4e531e4ed228f59ca957b3898c4f9051f4b8c7ae44d72b23a\",\"dweb:/ipfs/QmRcEwubTe3xyXxthijs5fVzEgUFSxeddjd5PGfhBnkunX\"]},\"@openzeppelin/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0x3ecafd57f4d8502737e032c7a72086b6dd32bf5b69d70429e483f89cf310c2c7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b9e8a35d9edbaba568e89782eb806e16a5734a69e275f5d0d52e24537fa11653\",\"dweb:/ipfs/QmdBUAJKXXa5he87an93H96cwiv6c5XpzS1vTkiQtxyKND\"]},\"@openzeppelin/contracts/interfaces/IERC1967.sol\":{\"keccak256\":\"0x61f1ec8767d80a9fd97e30fb57b529a3ef0d2d646c938fbca30781cdc4d6e3db\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4e34ab801d50581a330540b5f78d7f284ec681ed59cb4142e90440c05bc27e72\",\"dweb:/ipfs/QmeRcreQohkvfhHo3jsaAUcqDbKCGixjXovDgzvQKfQM3Y\"]},\"@openzeppelin/contracts/interfaces/IERC5267.sol\":{\"keccak256\":\"0x28b2a1f629338ad9bfe7bdab27a478f3d04001bbde67aefb48f473e01589a05a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b13fe921b3a4db8194370374451c3243045d4852e6e27c00fe161acc3eff59ee\",\"dweb:/ipfs/QmfNmkXJsDj9x2et6BTibrbonVGhcP8bRDkRTiXuqhevvR\"]},\"@openzeppelin/contracts/interfaces/draft-IERC1822.sol\":{\"keccak256\":\"0xddd8e9df40ba9f231b829e3caad53a02da69c03d31e2e638f9f1be50207bd5b0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://108f498e5ef2873ab4a1fef748ca23709ef7aa7b61c40bd4c8f1745c95eb7951\",\"dweb:/ipfs/QmfZhCVy1mEUn2Dh1yrEmv4zfnpZQSSvW7V1BMKuxctWk4\"]},\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0xe53865a480e99e5c35c3b1fd673cdccae2b5ddb7e0260e82b19d40d99980e146\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bd6c5d37ed3bbb994f5d63f62bfec105dd9dbd11ae8cecdb93232d64a9677143\",\"dweb:/ipfs/QmefNhF6r94wZBqL2XxZMvkrGr4WgLLoWts5oasPWpMUun\"]},\"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":{\"keccak256\":\"0x299a09b824bffd95d5c9f503dc1870d98aea1d7fb40242a13004b5f3b19addc2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2a576ce7ad5133b0f0b682f58c1f78e97f0359b6d6991bbc07994b45b1526487\",\"dweb:/ipfs/QmWoUp91kDnHMmfsN9LcKCRQ5GZhemsP7Meqo2cjBcJpdi\"]},\"@openzeppelin/contracts/proxy/beacon/IBeacon.sol\":{\"keccak256\":\"0x42193c28259cdffc814b368ddf341ab97b6d6002edefb06fef668859a7aefca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d3bc03aa072ce10d5932bc7252dc777ee5a917a9eb69ca5591f48f03d5e4afd9\",\"dweb:/ipfs/QmYvi7VCFGr5t8K4ruK4LYsf1CR2jLaEpWD2Gg6MntVSXi\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x01e4bd12aef9e3d0956451e6ac9ece01554db0bc484ebc9287e5d57b4fd431d7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cb6de9142941eb74004600d0b23a0753846824648e6ddc23bc93889d03a79441\",\"dweb:/ipfs/QmckMYX9vjZNEx4pLGt6ePpvRcYuvt8s2zWoqSHxX2niHZ\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x5b0e97d38fc94a3e9031e6f6bb948991499dd5fd9fbe74898326e1b5cecc61b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f326d045fa9d7fa02f53b5c0750830127e98c4c3d104ef207ed3bb272d049f89\",\"dweb:/ipfs/QmTGhzTSMdCRZr5JWA48ZoujUPT6LWK3qJnQx2Xq8Z6i3m\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\":{\"keccak256\":\"0x79ee51693b808ffdb306266b04709183c403b04078211b149794bc11d6c3fc39\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c50b360520e990c689b887ed508c6f6acff9309dc207c0f05ad8ebcacf4b98cb\",\"dweb:/ipfs/QmeXjWT5Z5X5UzMbiBd3MoEUnfNAtV8HpoasznLkq34JWZ\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x97666faabffacffa761c0a8c4946e3a717d6b133ae90ee10c068b9d59c8cfcdb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a73a610b6d0b3b2e3be13a48a57421c46c9e83b0cfc4bfc7bf400dfcc12f28cf\",\"dweb:/ipfs/QmXBbeNAodKW36xWTYW9yK16QtVUaq1ieB5FusggyEX6T8\"]},\"@openzeppelin/contracts/utils/Errors.sol\":{\"keccak256\":\"0x74545f3228c285dd99d357eeb35da9b9d87acf00fcf5ca5b2be7a4baf5b8bfc4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ef798292c67a9e6d922a6ebbb6a8e93db894736947db625da9f14acf047792e\",\"dweb:/ipfs/Qmb95rNRHCky4JeJF58Zgh87NvkniWpULc2SEngMowTAKd\"]},\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0x65fd7c9cac0812d510bbaac59b007da1df6f3820f939fca04fd2b7ed07e341c6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f30f7cf8b553278b1bbad1f6aaf4b227b98b1532b3c16dbca92d815d627779df\",\"dweb:/ipfs/QmTkA1v7mrd2ymdTcPYFuNjguKhQx99npcPYKAdMfgfKvB\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0xb9355bac6de0c0dd42a7f3c4ad3e6e7bdff95109e1bb6ba5be0dce666b314921\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b8449ecfc29ae42905bcfd8fa232bd73eccb14365f1894a3cc1abcce90639379\",\"dweb:/ipfs/QmWwdkEJXZjk57T7T5JRogJzEhcT7JpnmxEVfHAwFSMuZ1\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x831320073a13168dd04b3b7dc0d7c3c4fd1f8d699c3b3709900d1dd7e52ae931\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d37bb18e9824f73bd0cbf259d2326028031e60ed89bf4eba095c73d605f243ed\",\"dweb:/ipfs/QmWxNLK1eZBwA1GdxzwqGkarHhbciAvM8bg6qcRafeS47J\"]},\"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":{\"keccak256\":\"0xbe22c37080f9052e0e18062a527a19f9354703ee48888c71baf0abd747a34a8b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://eb85649fce273c8c19eeba7db292f92b6653263ae39f12e427a066b998c9cec4\",\"dweb:/ipfs/QmRaTEqA15siRJoiPCuvtzK29dgXxQu94n4JBabHUSFXXQ\"]},\"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol\":{\"keccak256\":\"0xd7999d7b3c3a121215a15e205b381e06cfff55c47f67220d1605cd96cd0848d8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e259964860d8625d6c33d841c870af390834c037c4459c8b14231f1bd440f682\",\"dweb:/ipfs/QmWyFHT1oipmXVN4NLxrdBL9nayTzFfPrkAQbRozeWdhKQ\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0xdbf01f069eb0b0a7a6ace73b250fdeb7e338d719bb40b5dd1fe7069004a36607\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1fc4a1dfe79b2adc6e22af84838c217946853d28a4291fcd8bbcc6fb226a0470\",\"dweb:/ipfs/QmaJbxCcdE76P1a8rjxkBqTXAfF11XebfwURamUB92G4WN\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xe09e820269ce218384211e4bf344056f0aab77a27b953012a3fb647d7631b7c2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0a8e7a7218203b059b4b4a423a93d6066eb9cec0a8affde80bb4a6c44d6a14a0\",\"dweb:/ipfs/QmSbmEzwGBFD3TntztEE5ZFLBqP1SZYiQhA1dLoDgzrcz4\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0xf1e73884b1e40057009853b1ee55ec66413cfa5eaa9074e5dd85bd070ea8b91c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1d29fd43e41bd73ac0fb65ac77c309c88651a42f8e49989cf1558f64f731697b\",\"dweb:/ipfs/Qmd61ZCYWHj9PJ3uSXaJekif8tkKgmfU6PLunszwhY2QX3\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0x7c35afe4f4b7e64ea6efa5216f51790d8ce80cd764a00790203a59ebf20202ec\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0b264b01df570c48603e16066aea73d3200c78523f9d94dd587a61eafa33705c\",\"dweb:/ipfs/QmayVg47dBKddrgrgsbr4Wu8hQBWZk5oMpiUtXKz1uEo1v\"]},\"contracts/PADTokenV2.sol\":{\"keccak256\":\"0x5df5ab121558f8227ab43d3bf16565d72b15ac41d0fc3ff1cf47bc2054d4a416\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6574669417842565740ecd2e9ed5af74fd53b88fb748d045c3da61fea2601b30\",\"dweb:/ipfs/QmVWZ6fxe2mNo8WJbaWXGSSk4JBQiN9rCjgqFHzMkxTTom\"]}},\"version\":1}","storageLayout":{"storage":[{"astId":8890,"contract":"contracts/PADTokenV2.sol:PADTokenV2","label":"gnosisSafe","offset":0,"slot":"0","type":"t_address"},{"astId":8892,"contract":"contracts/PADTokenV2.sol:PADTokenV2","label":"cooldownPeriod","offset":0,"slot":"1","type":"t_uint256"},{"astId":8896,"contract":"contracts/PADTokenV2.sol:PADTokenV2","label":"cooldowns","offset":0,"slot":"2","type":"t_mapping(t_address,t_uint256)"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"},"t_mapping(t_address,t_uint256)":{"encoding":"mapping","key":"t_address","label":"mapping(address => uint256)","numberOfBytes":"32","value":"t_uint256"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"}}}}},"contracts/PADTokenV3.sol":{"PADTokenV3":{"abi":[{"inputs":[],"name":"AccessControlBadConfirmation","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"bytes32","name":"neededRole","type":"bytes32"}],"name":"AccessControlUnauthorizedAccount","type":"error"},{"inputs":[{"internalType":"address","name":"target","type":"address"}],"name":"AddressEmptyCode","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"AddressIsBlacklisted","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"cooldown","type":"uint256"}],"name":"CooldownNotExpired","type":"error"},{"inputs":[],"name":"ECDSAInvalidSignature","type":"error"},{"inputs":[{"internalType":"uint256","name":"length","type":"uint256"}],"name":"ECDSAInvalidSignatureLength","type":"error"},{"inputs":[{"internalType":"bytes32","name":"s","type":"bytes32"}],"name":"ECDSAInvalidSignatureS","type":"error"},{"inputs":[{"internalType":"address","name":"implementation","type":"address"}],"name":"ERC1967InvalidImplementation","type":"error"},{"inputs":[],"name":"ERC1967NonPayable","type":"error"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"allowance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientAllowance","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientBalance","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC20InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC20InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC20InvalidSender","type":"error"},{"inputs":[{"internalType":"address","name":"spender","type":"address"}],"name":"ERC20InvalidSpender","type":"error"},{"inputs":[{"internalType":"uint256","name":"deadline","type":"uint256"}],"name":"ERC2612ExpiredSignature","type":"error"},{"inputs":[{"internalType":"address","name":"signer","type":"address"},{"internalType":"address","name":"owner","type":"address"}],"name":"ERC2612InvalidSigner","type":"error"},{"inputs":[],"name":"EnforcedPause","type":"error"},{"inputs":[],"name":"ExpectedPause","type":"error"},{"inputs":[],"name":"FailedCall","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"currentNonce","type":"uint256"}],"name":"InvalidAccountNonce","type":"error"},{"inputs":[],"name":"InvalidInitialization","type":"error"},{"inputs":[],"name":"NotInitializing","type":"error"},{"inputs":[],"name":"UUPSUnauthorizedCallContext","type":"error"},{"inputs":[{"internalType":"bytes32","name":"slot","type":"bytes32"}],"name":"UUPSUnsupportedProxiableUUID","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"admin","type":"address"}],"name":"AddressBlacklisted","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"admin","type":"address"}],"name":"AddressRemovedFromBlacklist","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"oldPeriod","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"newPeriod","type":"uint256"}],"name":"CooldownPeriodUpdated","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":false,"internalType":"uint256","name":"cooldown","type":"uint256"}],"name":"CooldownSet","type":"event"},{"anonymous":false,"inputs":[],"name":"EIP712DomainChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"oldSafe","type":"address"},{"indexed":true,"internalType":"address","name":"newSafe","type":"address"}],"name":"GnosisSafeUpdated","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint64","name":"version","type":"uint64"}],"name":"Initialized","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"account","type":"address"}],"name":"Paused","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"previousAdminRole","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"newAdminRole","type":"bytes32"}],"name":"RoleAdminChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"sender","type":"address"}],"name":"RoleGranted","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"sender","type":"address"}],"name":"RoleRevoked","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"account","type":"address"}],"name":"Unpaused","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"implementation","type":"address"}],"name":"Upgraded","type":"event"},{"inputs":[],"name":"DEFAULT_ADMIN_ROLE","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"DOMAIN_SEPARATOR","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"MINTER_ROLE","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"PAUSER_ROLE","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"UPGRADE_INTERFACE_VERSION","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"addToBlacklist","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address[]","name":"accounts","type":"address[]"}],"name":"batchAddToBlacklist","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address[]","name":"accounts","type":"address[]"}],"name":"batchRemoveFromBlacklist","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address[]","name":"recipients","type":"address[]"},{"internalType":"uint256[]","name":"amounts","type":"uint256[]"}],"name":"batchTransfer","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"cooldownPeriod","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"cooldowns","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"eip712Domain","outputs":[{"internalType":"bytes1","name":"fields","type":"bytes1"},{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"version","type":"string"},{"internalType":"uint256","name":"chainId","type":"uint256"},{"internalType":"address","name":"verifyingContract","type":"address"},{"internalType":"bytes32","name":"salt","type":"bytes32"},{"internalType":"uint256[]","name":"extensions","type":"uint256[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address[]","name":"accounts","type":"address[]"}],"name":"getBlacklistStatus","outputs":[{"internalType":"bool[]","name":"statuses","type":"bool[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"}],"name":"getRoleAdmin","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"gnosisSafe","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"grantRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"hasRole","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"initialSupply","type":"uint256"}],"name":"initialize","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"initializeV3","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"isBlacklisted","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"nonces","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"pause","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"paused","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"uint256","name":"deadline","type":"uint256"},{"internalType":"uint8","name":"v","type":"uint8"},{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"s","type":"bytes32"}],"name":"permit","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"proxiableUUID","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"removeFromBlacklist","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"callerConfirmation","type":"address"}],"name":"renounceRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"revokeRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"cooldown","type":"uint256"}],"name":"setCooldown","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_cooldownPeriod","type":"uint256"}],"name":"setCooldownPeriod","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_gnosisSafe","type":"address"}],"name":"setGnosisSafe","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"unpause","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newImplementation","type":"address"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"upgradeToAndCall","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[],"name":"version","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"pure","type":"function"}],"evm":{"bytecode":{"functionDebugData":{"@_8928":{"entryPoint":null,"id":8928,"parameterSlots":0,"returnSlots":0},"@_disableInitializers_586":{"entryPoint":34,"id":586,"parameterSlots":0,"returnSlots":0},"@_getInitializableStorage_631":{"entryPoint":null,"id":631,"parameterSlots":0,"returnSlots":1},"@_initializableStorageSlot_617":{"entryPoint":null,"id":617,"parameterSlots":0,"returnSlots":1},"abi_encode_tuple_t_uint64__to_t_uint64__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1}},"generatedSources":[{"ast":{"nativeSrc":"0:216:33","nodeType":"YulBlock","src":"0:216:33","statements":[{"nativeSrc":"6:3:33","nodeType":"YulBlock","src":"6:3:33","statements":[]},{"body":{"nativeSrc":"113:101:33","nodeType":"YulBlock","src":"113:101:33","statements":[{"nativeSrc":"123:26:33","nodeType":"YulAssignment","src":"123:26:33","value":{"arguments":[{"name":"headStart","nativeSrc":"135:9:33","nodeType":"YulIdentifier","src":"135:9:33"},{"kind":"number","nativeSrc":"146:2:33","nodeType":"YulLiteral","src":"146:2:33","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"131:3:33","nodeType":"YulIdentifier","src":"131:3:33"},"nativeSrc":"131:18:33","nodeType":"YulFunctionCall","src":"131:18:33"},"variableNames":[{"name":"tail","nativeSrc":"123:4:33","nodeType":"YulIdentifier","src":"123:4:33"}]},{"expression":{"arguments":[{"name":"headStart","nativeSrc":"165:9:33","nodeType":"YulIdentifier","src":"165:9:33"},{"arguments":[{"name":"value0","nativeSrc":"180:6:33","nodeType":"YulIdentifier","src":"180:6:33"},{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"196:2:33","nodeType":"YulLiteral","src":"196:2:33","type":"","value":"64"},{"kind":"number","nativeSrc":"200:1:33","nodeType":"YulLiteral","src":"200:1:33","type":"","value":"1"}],"functionName":{"name":"shl","nativeSrc":"192:3:33","nodeType":"YulIdentifier","src":"192:3:33"},"nativeSrc":"192:10:33","nodeType":"YulFunctionCall","src":"192:10:33"},{"kind":"number","nativeSrc":"204:1:33","nodeType":"YulLiteral","src":"204:1:33","type":"","value":"1"}],"functionName":{"name":"sub","nativeSrc":"188:3:33","nodeType":"YulIdentifier","src":"188:3:33"},"nativeSrc":"188:18:33","nodeType":"YulFunctionCall","src":"188:18:33"}],"functionName":{"name":"and","nativeSrc":"176:3:33","nodeType":"YulIdentifier","src":"176:3:33"},"nativeSrc":"176:31:33","nodeType":"YulFunctionCall","src":"176:31:33"}],"functionName":{"name":"mstore","nativeSrc":"158:6:33","nodeType":"YulIdentifier","src":"158:6:33"},"nativeSrc":"158:50:33","nodeType":"YulFunctionCall","src":"158:50:33"},"nativeSrc":"158:50:33","nodeType":"YulExpressionStatement","src":"158:50:33"}]},"name":"abi_encode_tuple_t_uint64__to_t_uint64__fromStack_reversed","nativeSrc":"14:200:33","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"82:9:33","nodeType":"YulTypedName","src":"82:9:33","type":""},{"name":"value0","nativeSrc":"93:6:33","nodeType":"YulTypedName","src":"93:6:33","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"104:4:33","nodeType":"YulTypedName","src":"104:4:33","type":""}],"src":"14:200:33"}]},"contents":"{\n    { }\n    function abi_encode_tuple_t_uint64__to_t_uint64__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(64, 1), 1)))\n    }\n}","id":33,"language":"Yul","name":"#utility.yul"}],"linkReferences":{},"object":"60a06040523060805234801561001457600080fd5b5061001d610022565b6100d4565b7ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00805468010000000000000000900460ff16156100725760405163f92ee8a960e01b815260040160405180910390fd5b80546001600160401b03908116146100d15780546001600160401b0319166001600160401b0390811782556040519081527fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d29060200160405180910390a15b50565b608051612d486100fd600039600081816118ae015281816118d70152611a1d0152612d486000f3fe6080604052600436106102675760003560e01c80637ecebe0011610144578063a9059cbb116100b6578063d547741f1161007a578063d547741f14610771578063d716265714610791578063dd62ed3e146107b1578063e63ab1e9146107d1578063fe4b84df146107f3578063fe575a871461081357600080fd5b8063a9059cbb146106ac578063ad3cb1cc146106cc578063c3085a3e146106fd578063d505accf1461071d578063d53913931461073d57600080fd5b806391d148541161010857806391d14854146105dd57806395d89b41146105fd5780639781a37e14610612578063a217fddf14610632578063a6ecc5cf14610647578063a84173ae1461067457600080fd5b80637ecebe001461054057806380ea3de1146105605780638456cb591461058057806384b0196e1461059557806388d695b2146105bd57600080fd5b806336568abe116101dd57806352d1902d116101a157806352d1902d14610478578063537df3b61461048d57806354fd4d50146104ad5780635c975abb146104db578063679d665f1461050057806370a082311461052057600080fd5b806336568abe146103fb57806338e454b11461041b5780633f4ba83a1461043057806344337ea1146104455780634f1ef2861461046557600080fd5b806318160ddd1161022f57806318160ddd1461033457806323b872dd14610368578063248a9ca3146103885780632f2ff15d146103a8578063313ce567146103ca5780633644e515146103e657600080fd5b806301320fe21461026c57806301ffc9a7146102ac57806304646a49146102dc57806306fdde03146102f2578063095ea7b314610314575b600080fd5b34801561027857600080fd5b506102996102873660046125eb565b60026020526000908152604090205481565b6040519081526020015b60405180910390f35b3480156102b857600080fd5b506102cc6102c7366004612606565b61084c565b60405190151581526020016102a3565b3480156102e857600080fd5b5061029960015481565b3480156102fe57600080fd5b50610307610883565b6040516102a39190612680565b34801561032057600080fd5b506102cc61032f366004612693565b61092c565b34801561034057600080fd5b507f52c63247e1f47db19d5ce0460030c497f067ca4cebf71ba98eeadabe20bace0254610299565b34801561037457600080fd5b506102cc6103833660046126bd565b610944565b34801561039457600080fd5b506102996103a33660046126fa565b61096a565b3480156103b457600080fd5b506103c86103c3366004612713565b61098c565b005b3480156103d657600080fd5b50604051601281526020016102a3565b3480156103f257600080fd5b506102996109ae565b34801561040757600080fd5b506103c8610416366004612713565b6109bd565b34801561042757600080fd5b506103c86109f5565b34801561043c57600080fd5b506103c8610aa7565b34801561045157600080fd5b506103c86104603660046125eb565b610aca565b6103c8610473366004612755565b610be8565b34801561048457600080fd5b50610299610c07565b34801561049957600080fd5b506103c86104a83660046125eb565b610c24565b3480156104b957600080fd5b506040805180820190915260058152640332e302e360dc1b6020820152610307565b3480156104e757600080fd5b50600080516020612cf38339815191525460ff166102cc565b34801561050c57600080fd5b506103c861051b366004612867565b610ce3565b34801561052c57600080fd5b5061029961053b3660046125eb565b610daf565b34801561054c57600080fd5b5061029961055b3660046125eb565b610de2565b34801561056c57600080fd5b506103c861057b3660046126fa565b610ded565b34801561058c57600080fd5b506103c8610e3e565b3480156105a157600080fd5b506105aa610e5e565b6040516102a397969594939291906128a8565b3480156105c957600080fd5b506103c86105d8366004612940565b610f0a565b3480156105e957600080fd5b506102cc6105f8366004612713565b610fb5565b34801561060957600080fd5b50610307610fed565b34801561061e57600080fd5b506103c861062d366004612693565b61102c565b34801561063e57600080fd5b50610299600081565b34801561065357600080fd5b50610667610662366004612867565b611091565b6040516102a391906129af565b34801561068057600080fd5b50600054610694906001600160a01b031681565b6040516001600160a01b0390911681526020016102a3565b3480156106b857600080fd5b506102cc6106c7366004612693565b611160565b3480156106d857600080fd5b50610307604051806040016040528060058152602001640352e302e360dc1b81525081565b34801561070957600080fd5b506103c86107183660046125eb565b61116e565b34801561072957600080fd5b506103c86107383660046129f4565b6111ca565b34801561074957600080fd5b506102997f9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a681565b34801561077d57600080fd5b506103c861078c366004612713565b611323565b34801561079d57600080fd5b506103c86107ac366004612867565b61133f565b3480156107bd57600080fd5b506102996107cc366004612a67565b6113f4565b3480156107dd57600080fd5b50610299600080516020612cb383398151915281565b3480156107ff57600080fd5b506103c861080e3660046126fa565b61143e565b34801561081f57600080fd5b506102cc61082e3660046125eb565b6001600160a01b031660009081526003602052604090205460ff1690565b60006001600160e01b03198216637965db0b60e01b148061087d57506301ffc9a760e01b6001600160e01b03198316145b92915050565b60606000600080516020612c538339815191525b90508060030180546108a890612a91565b80601f01602080910402602001604051908101604052809291908181526020018280546108d490612a91565b80156109215780601f106108f657610100808354040283529160200191610921565b820191906000526020600020905b81548152906001019060200180831161090457829003601f168201915b505050505091505090565b60003361093a818585611618565b5060019392505050565b600033610952858285611625565b61095d858585611686565b60019150505b9392505050565b6000908152600080516020612cd3833981519152602052604090206001015490565b6109958261096a565b61099e816116e5565b6109a883836116ef565b50505050565b60006109b8611794565b905090565b6001600160a01b03811633146109e65760405163334bd91960e11b815260040160405180910390fd5b6109f0828261179e565b505050565b60036000610a0161181a565b8054909150600160401b900460ff1680610a28575080546001600160401b03808416911610155b15610a465760405163f92ee8a960e01b815260040160405180910390fd5b805468ffffffffffffffffff19166001600160401b038316908117600160401b1760ff60401b191682556040519081527fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d29060200160405180910390a15050565b600080516020612cb3833981519152610abf816116e5565b610ac7611843565b50565b6000610ad5816116e5565b6001600160a01b038216610b305760405162461bcd60e51b815260206004820152601d60248201527f43616e6e6f7420626c61636b6c697374207a65726f206164647265737300000060448201526064015b60405180910390fd5b6001600160a01b03821660009081526003602052604090205460ff1615610b995760405162461bcd60e51b815260206004820152601b60248201527f4164647265737320616c726561647920626c61636b6c697374656400000000006044820152606401610b27565b6001600160a01b038216600081815260036020526040808220805460ff19166001179055513392917f4a740bebda0bde2baf1735e1b1fa93babe7a2bb77ecade7bf5e222d541c076cd91a35050565b610bf06118a3565b610bf98261194a565b610c038282611955565b5050565b6000610c11611a12565b50600080516020612c9383398151915290565b6000610c2f816116e5565b6001600160a01b03821660009081526003602052604090205460ff16610c975760405162461bcd60e51b815260206004820152601760248201527f41646472657373206e6f7420626c61636b6c69737465640000000000000000006044820152606401610b27565b6001600160a01b038216600081815260036020526040808220805460ff19169055513392917fc5d633221a999da7b50bad97ddd6cff0c917455d8651123a6433642833252b7c91a35050565b6000610cee816116e5565b60005b828110156109a8576000848483818110610d0d57610d0d612acb565b9050602002016020810190610d2291906125eb565b90506001600160a01b03811615801590610d5557506001600160a01b03811660009081526003602052604090205460ff16155b15610da6576001600160a01b038116600081815260036020526040808220805460ff19166001179055513392917f4a740bebda0bde2baf1735e1b1fa93babe7a2bb77ecade7bf5e222d541c076cd91a35b50600101610cf1565b600080600080516020612c538339815191525b6001600160a01b0390931660009081526020939093525050604090205490565b600061087d82611a5b565b6000610df8816116e5565b600180549083905560408051828152602081018590527f98eaabfe135a9c40c420208962bf81e7926b4d6df3e23502164c0554b7b35224910160405180910390a1505050565b600080516020612cb3833981519152610e56816116e5565b610ac7611a84565b60006060808280808381600080516020612c738339815191528054909150158015610e8b57506001810154155b610ecf5760405162461bcd60e51b81526020600482015260156024820152741152540dcc4c8e88155b9a5b9a5d1a585b1a5e9959605a1b6044820152606401610b27565b610ed7611acd565b610edf611b0c565b60408051600080825260208201909252600f60f81b9c939b5091995046985030975095509350915050565b828114610f525760405162461bcd60e51b8152602060048201526016602482015275082e4e4c2f2e640d8cadccee8d040dad2e6dac2e8c6d60531b6044820152606401610b27565b60005b83811015610fae57610fa633868684818110610f7357610f73612acb565b9050602002016020810190610f8891906125eb565b858585818110610f9a57610f9a612acb565b90506020020135611686565b600101610f55565b5050505050565b6000918252600080516020612cd3833981519152602090815260408084206001600160a01b0393909316845291905290205460ff1690565b7f52c63247e1f47db19d5ce0460030c497f067ca4cebf71ba98eeadabe20bace048054606091600080516020612c53833981519152916108a890612a91565b6000611037816116e5565b6001600160a01b03831660008181526002602052604090819020849055517fa162f0703cbc0c48ea2c9e9bed5743aabc058e7532e594490e3a35bfb0f75ab8906110849085815260200190565b60405180910390a2505050565b6060816001600160401b038111156110ab576110ab61273f565b6040519080825280602002602001820160405280156110d4578160200160208202803683370190505b50905060005b8281101561115957600360008585848181106110f8576110f8612acb565b905060200201602081019061110d91906125eb565b6001600160a01b03168152602081019190915260400160002054825160ff9091169083908390811061114157611141612acb565b911515602092830291909101909101526001016110da565b5092915050565b60003361093a818585611686565b6000611179816116e5565b600080546001600160a01b038481166001600160a01b0319831681178455604051919092169283917fdaaf87d9985c65a1bfbd019043294923ae1b048ba8b4616e3acb32741d268da19190a3505050565b834211156111ee5760405163313c898160e11b815260048101859052602401610b27565b60007f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c988888861125a8c6001600160a01b031660009081527f5ab42ced628888259c08ac98db1eb0cf702fc1501344311d8b100cd1bfe4bb006020526040902080546001810190915590565b6040805160208101969096526001600160a01b0394851690860152929091166060840152608083015260a082015260c0810186905260e00160405160208183030381529060405280519060200120905060006112b582611b24565b905060006112c582878787611b51565b9050896001600160a01b0316816001600160a01b03161461130c576040516325c0072360e11b81526001600160a01b0380831660048301528b166024820152604401610b27565b6113178a8a8a611618565b50505050505050505050565b61132c8261096a565b611335816116e5565b6109a8838361179e565b600061134a816116e5565b60005b828110156109a857600084848381811061136957611369612acb565b905060200201602081019061137e91906125eb565b6001600160a01b03811660009081526003602052604090205490915060ff16156113eb576001600160a01b038116600081815260036020526040808220805460ff19169055513392917fc5d633221a999da7b50bad97ddd6cff0c917455d8651123a6433642833252b7c91a35b5060010161134d565b6001600160a01b0391821660009081527f52c63247e1f47db19d5ce0460030c497f067ca4cebf71ba98eeadabe20bace016020908152604080832093909416825291909152205490565b600061144861181a565b805490915060ff600160401b82041615906001600160401b031660008115801561146f5750825b90506000826001600160401b0316600114801561148b5750303b155b905081158015611499575080155b156114b75760405163f92ee8a960e01b815260040160405180910390fd5b845467ffffffffffffffff1916600117855583156114e157845460ff60401b1916600160401b1785555b611527604051806040016040528060098152602001682820a2102a37b5b2b760b91b8152506040518060400160405280600381526020016214105160ea1b815250611b7f565b611551604051806040016040528060098152602001682820a2102a37b5b2b760b91b815250611b91565b611559611bbc565b611561611bbc565b611569611bbc565b6115746000336116ef565b5061158d600080516020612cb3833981519152336116ef565b506115b87f9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a6336116ef565b506115c33387611bc4565b62015180600155831561161057845460ff60401b19168555604051600181527fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d29060200160405180910390a15b505050505050565b6109f08383836001611bfa565b600061163184846113f4565b90506000198110156109a8578181101561167757604051637dc7a0d960e11b81526001600160a01b03841660048201526024810182905260448101839052606401610b27565b6109a884848484036000611bfa565b6001600160a01b0383166116b057604051634b637e8f60e11b815260006004820152602401610b27565b6001600160a01b0382166116da5760405163ec442f0560e01b815260006004820152602401610b27565b6109f0838383611ce1565b610ac78133611dfb565b6000600080516020612cd383398151915261170a8484610fb5565b61178a576000848152602082815260408083206001600160a01b03871684529091529020805460ff191660011790556117403390565b6001600160a01b0316836001600160a01b0316857f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a4600191505061087d565b600091505061087d565b60006109b8611e34565b6000600080516020612cd38339815191526117b98484610fb5565b1561178a576000848152602082815260408083206001600160a01b0387168085529252808320805460ff1916905551339287917ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b9190a4600191505061087d565b6000807ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a0061087d565b61184b611ea8565b600080516020612cf3833981519152805460ff191681557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa335b6040516001600160a01b03909116815260200160405180910390a150565b306001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016148061192a57507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031661191e600080516020612c93833981519152546001600160a01b031690565b6001600160a01b031614155b156119485760405163703e46dd60e11b815260040160405180910390fd5b565b6000610c03816116e5565b816001600160a01b03166352d1902d6040518163ffffffff1660e01b8152600401602060405180830381865afa9250505080156119af575060408051601f3d908101601f191682019092526119ac91810190612ae1565b60015b6119d757604051634c9c8ce360e01b81526001600160a01b0383166004820152602401610b27565b600080516020612c938339815191528114611a0857604051632a87526960e21b815260048101829052602401610b27565b6109f08383611ed8565b306001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146119485760405163703e46dd60e11b815260040160405180910390fd5b6000807f5ab42ced628888259c08ac98db1eb0cf702fc1501344311d8b100cd1bfe4bb00610dc2565b611a8c611f2e565b600080516020612cf3833981519152805460ff191660011781557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a25833611885565b7fa16a46d94261c7517cc8ff89f61c0ce93598e3c849801011dee649a6a557d1028054606091600080516020612c73833981519152916108a890612a91565b60606000600080516020612c73833981519152610897565b600061087d611b31611794565b8360405161190160f01b8152600281019290925260228201526042902090565b600080600080611b6388888888611f5f565b925092509250611b73828261202e565b50909695505050505050565b611b876120e7565b610c03828261210c565b611b996120e7565b610ac781604051806040016040528060018152602001603160f81b81525061215d565b6119486120e7565b6001600160a01b038216611bee5760405163ec442f0560e01b815260006004820152602401610b27565b610c0360008383611ce1565b600080516020612c538339815191526001600160a01b038516611c335760405163e602df0560e01b815260006004820152602401610b27565b6001600160a01b038416611c5d57604051634a1406b160e11b815260006004820152602401610b27565b6001600160a01b03808616600090815260018301602090815260408083209388168352929052208390558115610fae57836001600160a01b0316856001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92585604051611cd291815260200190565b60405180910390a35050505050565b6001600160a01b038316600090815260036020526040902054839060ff1615611d285760405163e2a0fe6360e01b81526001600160a01b0382166004820152602401610b27565b6001600160a01b038316600090815260036020526040902054839060ff1615611d6f5760405163e2a0fe6360e01b81526001600160a01b0382166004820152602401610b27565b6001600160a01b03851615801590611d8f57506001600160a01b03841615155b15611df0576001600160a01b038516600090815260026020526040902054421015611df0576001600160a01b03851660008181526002602052604090819020549051630dac64f960e01b815260048101929092526024820152604401610b27565b610fae8585856121be565b611e058282610fb5565b610c035760405163e2517d3f60e01b81526001600160a01b038216600482015260248101839052604401610b27565b60007f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f611e5f61224a565b611e676122b4565b60408051602081019490945283019190915260608201524660808201523060a082015260c00160405160208183030381529060405280519060200120905090565b600080516020612cf38339815191525460ff1661194857604051638dfc202b60e01b815260040160405180910390fd5b611ee1826122f8565b6040516001600160a01b038316907fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b90600090a2805115611f26576109f0828261235d565b610c036123d3565b600080516020612cf38339815191525460ff16156119485760405163d93c066560e01b815260040160405180910390fd5b600080807f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a0841115611f9a5750600091506003905082612024565b604080516000808252602082018084528a905260ff891692820192909252606081018790526080810186905260019060a0016020604051602081039080840390855afa158015611fee573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b03811661201a57506000925060019150829050612024565b9250600091508190505b9450945094915050565b600082600381111561204257612042612afa565b0361204b575050565b600182600381111561205f5761205f612afa565b0361207d5760405163f645eedf60e01b815260040160405180910390fd5b600282600381111561209157612091612afa565b036120b25760405163fce698f760e01b815260048101829052602401610b27565b60038260038111156120c6576120c6612afa565b03610c03576040516335e2f38360e21b815260048101829052602401610b27565b6120ef6123f2565b61194857604051631afcd79f60e31b815260040160405180910390fd5b6121146120e7565b600080516020612c538339815191527f52c63247e1f47db19d5ce0460030c497f067ca4cebf71ba98eeadabe20bace0361214e8482612b57565b50600481016109a88382612b57565b6121656120e7565b600080516020612c738339815191527fa16a46d94261c7517cc8ff89f61c0ce93598e3c849801011dee649a6a557d10261219f8482612b57565b50600381016121ae8382612b57565b5060008082556001909101555050565b6001600160a01b038316158015906121de57506001600160a01b03821615155b1561223f576001600160a01b03831660009081526002602052604090205442101561223f576001600160a01b03831660008181526002602052604090819020549051630dac64f960e01b815260048101929092526024820152604401610b27565b6109f083838361240c565b6000600080516020612c7383398151915281612264611acd565b80519091501561227c57805160209091012092915050565b8154801561228b579392505050565b7fc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470935050505090565b6000600080516020612c73833981519152816122ce611b0c565b8051909150156122e657805160209091012092915050565b6001820154801561228b579392505050565b806001600160a01b03163b60000361232e57604051634c9c8ce360e01b81526001600160a01b0382166004820152602401610b27565b600080516020612c9383398151915280546001600160a01b0319166001600160a01b0392909216919091179055565b6060600080846001600160a01b03168460405161237a9190612c15565b600060405180830381855af49150503d80600081146123b5576040519150601f19603f3d011682016040523d82523d6000602084013e6123ba565b606091505b50915091506123ca85838361254a565b95945050505050565b34156119485760405163b398979f60e01b815260040160405180910390fd5b60006123fc61181a565b54600160401b900460ff16919050565b600080516020612c538339815191526001600160a01b038416612448578181600201600082825461243d9190612c31565b909155506124ba9050565b6001600160a01b0384166000908152602082905260409020548281101561249b5760405163391434e360e21b81526001600160a01b03861660048201526024810182905260448101849052606401610b27565b6001600160a01b03851660009081526020839052604090209083900390555b6001600160a01b0383166124d85760028101805483900390556124f7565b6001600160a01b03831660009081526020829052604090208054830190555b826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8460405161253c91815260200190565b60405180910390a350505050565b60608261255f5761255a826125a6565b610963565b815115801561257657506001600160a01b0384163b155b1561259f57604051639996b31560e01b81526001600160a01b0385166004820152602401610b27565b5080610963565b8051156125b65780518082602001fd5b60405163d6bda27560e01b815260040160405180910390fd5b80356001600160a01b03811681146125e657600080fd5b919050565b6000602082840312156125fd57600080fd5b610963826125cf565b60006020828403121561261857600080fd5b81356001600160e01b03198116811461096357600080fd5b60005b8381101561264b578181015183820152602001612633565b50506000910152565b6000815180845261266c816020860160208601612630565b601f01601f19169290920160200192915050565b6020815260006109636020830184612654565b600080604083850312156126a657600080fd5b6126af836125cf565b946020939093013593505050565b6000806000606084860312156126d257600080fd5b6126db846125cf565b92506126e9602085016125cf565b929592945050506040919091013590565b60006020828403121561270c57600080fd5b5035919050565b6000806040838503121561272657600080fd5b82359150612736602084016125cf565b90509250929050565b634e487b7160e01b600052604160045260246000fd5b6000806040838503121561276857600080fd5b612771836125cf565b915060208301356001600160401b0381111561278c57600080fd5b8301601f8101851361279d57600080fd5b80356001600160401b038111156127b6576127b661273f565b604051601f8201601f19908116603f011681016001600160401b03811182821017156127e4576127e461273f565b6040528181528282016020018710156127fc57600080fd5b816020840160208301376000602083830101528093505050509250929050565b60008083601f84011261282e57600080fd5b5081356001600160401b0381111561284557600080fd5b6020830191508360208260051b850101111561286057600080fd5b9250929050565b6000806020838503121561287a57600080fd5b82356001600160401b0381111561289057600080fd5b61289c8582860161281c565b90969095509350505050565b60ff60f81b8816815260e0602082015260006128c760e0830189612654565b82810360408401526128d98189612654565b606084018890526001600160a01b038716608085015260a0840186905283810360c08501528451808252602080870193509091019060005b8181101561292f578351835260209384019390920191600101612911565b50909b9a5050505050505050505050565b6000806000806040858703121561295657600080fd5b84356001600160401b0381111561296c57600080fd5b6129788782880161281c565b90955093505060208501356001600160401b0381111561299757600080fd5b6129a38782880161281c565b95989497509550505050565b602080825282518282018190526000918401906040840190835b818110156129e957835115158352602093840193909201916001016129c9565b509095945050505050565b600080600080600080600060e0888a031215612a0f57600080fd5b612a18886125cf565b9650612a26602089016125cf565b95506040880135945060608801359350608088013560ff81168114612a4a57600080fd5b9699959850939692959460a0840135945060c09093013592915050565b60008060408385031215612a7a57600080fd5b612a83836125cf565b9150612736602084016125cf565b600181811c90821680612aa557607f821691505b602082108103612ac557634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052603260045260246000fd5b600060208284031215612af357600080fd5b5051919050565b634e487b7160e01b600052602160045260246000fd5b601f8211156109f057806000526020600020601f840160051c81016020851015612b375750805b601f840160051c820191505b81811015610fae5760008155600101612b43565b81516001600160401b03811115612b7057612b7061273f565b612b8481612b7e8454612a91565b84612b10565b6020601f821160018114612bb85760008315612ba05750848201515b600019600385901b1c1916600184901b178455610fae565b600084815260208120601f198516915b82811015612be85787850151825560209485019460019092019101612bc8565b5084821015612c065786840151600019600387901b60f8161c191681555b50505050600190811b01905550565b60008251612c27818460208701612630565b9190910192915050565b8082018082111561087d57634e487b7160e01b600052601160045260246000fdfe52c63247e1f47db19d5ce0460030c497f067ca4cebf71ba98eeadabe20bace00a16a46d94261c7517cc8ff89f61c0ce93598e3c849801011dee649a6a557d100360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a02dd7bc7dec4dceedda775e58dd541e08a116c6c53815c0bd028192f7b626800cd5ed15c6e187e77e9aee88184c21f4f2182ab5827cb3b7e07fbedcd63f03300a2646970667358221220f886522ba52d6949bb91587414997ffd3e434d01e8d7ccde6d0ae11b8001e5c664736f6c634300081c0033","opcodes":"PUSH1 0xA0 PUSH1 0x40 MSTORE ADDRESS PUSH1 0x80 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x14 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1D PUSH2 0x22 JUMP JUMPDEST PUSH2 0xD4 JUMP JUMPDEST PUSH32 0xF0C57E16840DF040F15088DC2F81FE391C3923BEC73E23A9662EFC9C229C6A00 DUP1 SLOAD PUSH9 0x10000000000000000 SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x72 JUMPI PUSH1 0x40 MLOAD PUSH4 0xF92EE8A9 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB SWAP1 DUP2 AND EQ PUSH2 0xD1 JUMPI DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB SWAP1 DUP2 OR DUP3 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH32 0xC7F505B2F371AE2175EE4913F4499E1F2633A7B5936321EED1CDAEB6115181D2 SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMPDEST POP JUMP JUMPDEST PUSH1 0x80 MLOAD PUSH2 0x2D48 PUSH2 0xFD PUSH1 0x0 CODECOPY PUSH1 0x0 DUP2 DUP2 PUSH2 0x18AE ADD MSTORE DUP2 DUP2 PUSH2 0x18D7 ADD MSTORE PUSH2 0x1A1D ADD MSTORE PUSH2 0x2D48 PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x267 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x7ECEBE00 GT PUSH2 0x144 JUMPI DUP1 PUSH4 0xA9059CBB GT PUSH2 0xB6 JUMPI DUP1 PUSH4 0xD547741F GT PUSH2 0x7A JUMPI DUP1 PUSH4 0xD547741F EQ PUSH2 0x771 JUMPI DUP1 PUSH4 0xD7162657 EQ PUSH2 0x791 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x7B1 JUMPI DUP1 PUSH4 0xE63AB1E9 EQ PUSH2 0x7D1 JUMPI DUP1 PUSH4 0xFE4B84DF EQ PUSH2 0x7F3 JUMPI DUP1 PUSH4 0xFE575A87 EQ PUSH2 0x813 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x6AC JUMPI DUP1 PUSH4 0xAD3CB1CC EQ PUSH2 0x6CC JUMPI DUP1 PUSH4 0xC3085A3E EQ PUSH2 0x6FD JUMPI DUP1 PUSH4 0xD505ACCF EQ PUSH2 0x71D JUMPI DUP1 PUSH4 0xD5391393 EQ PUSH2 0x73D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x91D14854 GT PUSH2 0x108 JUMPI DUP1 PUSH4 0x91D14854 EQ PUSH2 0x5DD JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x5FD JUMPI DUP1 PUSH4 0x9781A37E EQ PUSH2 0x612 JUMPI DUP1 PUSH4 0xA217FDDF EQ PUSH2 0x632 JUMPI DUP1 PUSH4 0xA6ECC5CF EQ PUSH2 0x647 JUMPI DUP1 PUSH4 0xA84173AE EQ PUSH2 0x674 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x7ECEBE00 EQ PUSH2 0x540 JUMPI DUP1 PUSH4 0x80EA3DE1 EQ PUSH2 0x560 JUMPI DUP1 PUSH4 0x8456CB59 EQ PUSH2 0x580 JUMPI DUP1 PUSH4 0x84B0196E EQ PUSH2 0x595 JUMPI DUP1 PUSH4 0x88D695B2 EQ PUSH2 0x5BD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x36568ABE GT PUSH2 0x1DD JUMPI DUP1 PUSH4 0x52D1902D GT PUSH2 0x1A1 JUMPI DUP1 PUSH4 0x52D1902D EQ PUSH2 0x478 JUMPI DUP1 PUSH4 0x537DF3B6 EQ PUSH2 0x48D JUMPI DUP1 PUSH4 0x54FD4D50 EQ PUSH2 0x4AD JUMPI DUP1 PUSH4 0x5C975ABB EQ PUSH2 0x4DB JUMPI DUP1 PUSH4 0x679D665F EQ PUSH2 0x500 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x520 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x36568ABE EQ PUSH2 0x3FB JUMPI DUP1 PUSH4 0x38E454B1 EQ PUSH2 0x41B JUMPI DUP1 PUSH4 0x3F4BA83A EQ PUSH2 0x430 JUMPI DUP1 PUSH4 0x44337EA1 EQ PUSH2 0x445 JUMPI DUP1 PUSH4 0x4F1EF286 EQ PUSH2 0x465 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x18160DDD GT PUSH2 0x22F JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x334 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x368 JUMPI DUP1 PUSH4 0x248A9CA3 EQ PUSH2 0x388 JUMPI DUP1 PUSH4 0x2F2FF15D EQ PUSH2 0x3A8 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x3CA JUMPI DUP1 PUSH4 0x3644E515 EQ PUSH2 0x3E6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x1320FE2 EQ PUSH2 0x26C JUMPI DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x2AC JUMPI DUP1 PUSH4 0x4646A49 EQ PUSH2 0x2DC JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x2F2 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x314 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x278 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x299 PUSH2 0x287 CALLDATASIZE PUSH1 0x4 PUSH2 0x25EB JUMP JUMPDEST PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2B8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2CC PUSH2 0x2C7 CALLDATASIZE PUSH1 0x4 PUSH2 0x2606 JUMP JUMPDEST PUSH2 0x84C JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x2A3 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2E8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x299 PUSH1 0x1 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2FE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x307 PUSH2 0x883 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2A3 SWAP2 SWAP1 PUSH2 0x2680 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x320 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2CC PUSH2 0x32F CALLDATASIZE PUSH1 0x4 PUSH2 0x2693 JUMP JUMPDEST PUSH2 0x92C JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x340 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH32 0x52C63247E1F47DB19D5CE0460030C497F067CA4CEBF71BA98EEADABE20BACE02 SLOAD PUSH2 0x299 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x374 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2CC PUSH2 0x383 CALLDATASIZE PUSH1 0x4 PUSH2 0x26BD JUMP JUMPDEST PUSH2 0x944 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x394 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x299 PUSH2 0x3A3 CALLDATASIZE PUSH1 0x4 PUSH2 0x26FA JUMP JUMPDEST PUSH2 0x96A JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3B4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3C8 PUSH2 0x3C3 CALLDATASIZE PUSH1 0x4 PUSH2 0x2713 JUMP JUMPDEST PUSH2 0x98C JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3D6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x2A3 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3F2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x299 PUSH2 0x9AE JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x407 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3C8 PUSH2 0x416 CALLDATASIZE PUSH1 0x4 PUSH2 0x2713 JUMP JUMPDEST PUSH2 0x9BD JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x427 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3C8 PUSH2 0x9F5 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x43C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3C8 PUSH2 0xAA7 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x451 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3C8 PUSH2 0x460 CALLDATASIZE PUSH1 0x4 PUSH2 0x25EB JUMP JUMPDEST PUSH2 0xACA JUMP JUMPDEST PUSH2 0x3C8 PUSH2 0x473 CALLDATASIZE PUSH1 0x4 PUSH2 0x2755 JUMP JUMPDEST PUSH2 0xBE8 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x484 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x299 PUSH2 0xC07 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x499 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3C8 PUSH2 0x4A8 CALLDATASIZE PUSH1 0x4 PUSH2 0x25EB JUMP JUMPDEST PUSH2 0xC24 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4B9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x5 DUP2 MSTORE PUSH5 0x332E302E3 PUSH1 0xDC SHL PUSH1 0x20 DUP3 ADD MSTORE PUSH2 0x307 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4E7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2CF3 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SLOAD PUSH1 0xFF AND PUSH2 0x2CC JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x50C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3C8 PUSH2 0x51B CALLDATASIZE PUSH1 0x4 PUSH2 0x2867 JUMP JUMPDEST PUSH2 0xCE3 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x52C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x299 PUSH2 0x53B CALLDATASIZE PUSH1 0x4 PUSH2 0x25EB JUMP JUMPDEST PUSH2 0xDAF JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x54C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x299 PUSH2 0x55B CALLDATASIZE PUSH1 0x4 PUSH2 0x25EB JUMP JUMPDEST PUSH2 0xDE2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x56C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3C8 PUSH2 0x57B CALLDATASIZE PUSH1 0x4 PUSH2 0x26FA JUMP JUMPDEST PUSH2 0xDED JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x58C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3C8 PUSH2 0xE3E JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5A1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x5AA PUSH2 0xE5E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2A3 SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x28A8 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5C9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3C8 PUSH2 0x5D8 CALLDATASIZE PUSH1 0x4 PUSH2 0x2940 JUMP JUMPDEST PUSH2 0xF0A JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5E9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2CC PUSH2 0x5F8 CALLDATASIZE PUSH1 0x4 PUSH2 0x2713 JUMP JUMPDEST PUSH2 0xFB5 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x609 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x307 PUSH2 0xFED JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x61E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3C8 PUSH2 0x62D CALLDATASIZE PUSH1 0x4 PUSH2 0x2693 JUMP JUMPDEST PUSH2 0x102C JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x63E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x299 PUSH1 0x0 DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x653 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x667 PUSH2 0x662 CALLDATASIZE PUSH1 0x4 PUSH2 0x2867 JUMP JUMPDEST PUSH2 0x1091 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2A3 SWAP2 SWAP1 PUSH2 0x29AF JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x680 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x0 SLOAD PUSH2 0x694 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x2A3 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x6B8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2CC PUSH2 0x6C7 CALLDATASIZE PUSH1 0x4 PUSH2 0x2693 JUMP JUMPDEST PUSH2 0x1160 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x6D8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x307 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x5 DUP2 MSTORE PUSH1 0x20 ADD PUSH5 0x352E302E3 PUSH1 0xDC SHL DUP2 MSTORE POP DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x709 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3C8 PUSH2 0x718 CALLDATASIZE PUSH1 0x4 PUSH2 0x25EB JUMP JUMPDEST PUSH2 0x116E JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x729 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3C8 PUSH2 0x738 CALLDATASIZE PUSH1 0x4 PUSH2 0x29F4 JUMP JUMPDEST PUSH2 0x11CA JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x749 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x299 PUSH32 0x9F2DF0FED2C77648DE5860A4CC508CD0818C85B8B8A1AB4CEEEF8D981C8956A6 DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x77D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3C8 PUSH2 0x78C CALLDATASIZE PUSH1 0x4 PUSH2 0x2713 JUMP JUMPDEST PUSH2 0x1323 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x79D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3C8 PUSH2 0x7AC CALLDATASIZE PUSH1 0x4 PUSH2 0x2867 JUMP JUMPDEST PUSH2 0x133F JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x7BD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x299 PUSH2 0x7CC CALLDATASIZE PUSH1 0x4 PUSH2 0x2A67 JUMP JUMPDEST PUSH2 0x13F4 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x7DD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x299 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2CB3 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x7FF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3C8 PUSH2 0x80E CALLDATASIZE PUSH1 0x4 PUSH2 0x26FA JUMP JUMPDEST PUSH2 0x143E JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x81F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2CC PUSH2 0x82E CALLDATASIZE PUSH1 0x4 PUSH2 0x25EB JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x7965DB0B PUSH1 0xE0 SHL EQ DUP1 PUSH2 0x87D JUMPI POP PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP4 AND EQ JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2C53 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE JUMPDEST SWAP1 POP DUP1 PUSH1 0x3 ADD DUP1 SLOAD PUSH2 0x8A8 SWAP1 PUSH2 0x2A91 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x8D4 SWAP1 PUSH2 0x2A91 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x921 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x8F6 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x921 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x904 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x93A DUP2 DUP6 DUP6 PUSH2 0x1618 JUMP JUMPDEST POP PUSH1 0x1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x952 DUP6 DUP3 DUP6 PUSH2 0x1625 JUMP JUMPDEST PUSH2 0x95D DUP6 DUP6 DUP6 PUSH2 0x1686 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2CD3 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x995 DUP3 PUSH2 0x96A JUMP JUMPDEST PUSH2 0x99E DUP2 PUSH2 0x16E5 JUMP JUMPDEST PUSH2 0x9A8 DUP4 DUP4 PUSH2 0x16EF JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x9B8 PUSH2 0x1794 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND CALLER EQ PUSH2 0x9E6 JUMPI PUSH1 0x40 MLOAD PUSH4 0x334BD919 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x9F0 DUP3 DUP3 PUSH2 0x179E JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x3 PUSH1 0x0 PUSH2 0xA01 PUSH2 0x181A JUMP JUMPDEST DUP1 SLOAD SWAP1 SWAP2 POP PUSH1 0x1 PUSH1 0x40 SHL SWAP1 DIV PUSH1 0xFF AND DUP1 PUSH2 0xA28 JUMPI POP DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP5 AND SWAP2 AND LT ISZERO JUMPDEST ISZERO PUSH2 0xA46 JUMPI PUSH1 0x40 MLOAD PUSH4 0xF92EE8A9 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SLOAD PUSH9 0xFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP4 AND SWAP1 DUP2 OR PUSH1 0x1 PUSH1 0x40 SHL OR PUSH1 0xFF PUSH1 0x40 SHL NOT AND DUP3 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH32 0xC7F505B2F371AE2175EE4913F4499E1F2633A7B5936321EED1CDAEB6115181D2 SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2CB3 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH2 0xABF DUP2 PUSH2 0x16E5 JUMP JUMPDEST PUSH2 0xAC7 PUSH2 0x1843 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xAD5 DUP2 PUSH2 0x16E5 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xB30 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x43616E6E6F7420626C61636B6C697374207A65726F2061646472657373000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0xB99 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4164647265737320616C726561647920626C61636B6C69737465640000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xB27 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE MLOAD CALLER SWAP3 SWAP2 PUSH32 0x4A740BEBDA0BDE2BAF1735E1B1FA93BABE7A2BB77ECADE7BF5E222D541C076CD SWAP2 LOG3 POP POP JUMP JUMPDEST PUSH2 0xBF0 PUSH2 0x18A3 JUMP JUMPDEST PUSH2 0xBF9 DUP3 PUSH2 0x194A JUMP JUMPDEST PUSH2 0xC03 DUP3 DUP3 PUSH2 0x1955 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC11 PUSH2 0x1A12 JUMP JUMPDEST POP PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2C93 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC2F DUP2 PUSH2 0x16E5 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0xC97 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x41646472657373206E6F7420626C61636B6C6973746564000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xB27 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE MLOAD CALLER SWAP3 SWAP2 PUSH32 0xC5D633221A999DA7B50BAD97DDD6CFF0C917455D8651123A6433642833252B7C SWAP2 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xCEE DUP2 PUSH2 0x16E5 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x9A8 JUMPI PUSH1 0x0 DUP5 DUP5 DUP4 DUP2 DUP2 LT PUSH2 0xD0D JUMPI PUSH2 0xD0D PUSH2 0x2ACB JUMP JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0xD22 SWAP2 SWAP1 PUSH2 0x25EB JUMP JUMPDEST SWAP1 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND ISZERO DUP1 ISZERO SWAP1 PUSH2 0xD55 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO JUMPDEST ISZERO PUSH2 0xDA6 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE MLOAD CALLER SWAP3 SWAP2 PUSH32 0x4A740BEBDA0BDE2BAF1735E1B1FA93BABE7A2BB77ECADE7BF5E222D541C076CD SWAP2 LOG3 JUMPDEST POP PUSH1 0x1 ADD PUSH2 0xCF1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2C53 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 SWAP4 SWAP1 SWAP4 MSTORE POP POP PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x87D DUP3 PUSH2 0x1A5B JUMP JUMPDEST PUSH1 0x0 PUSH2 0xDF8 DUP2 PUSH2 0x16E5 JUMP JUMPDEST PUSH1 0x1 DUP1 SLOAD SWAP1 DUP4 SWAP1 SSTORE PUSH1 0x40 DUP1 MLOAD DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP6 SWAP1 MSTORE PUSH32 0x98EAABFE135A9C40C420208962BF81E7926B4D6DF3E23502164C0554B7B35224 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2CB3 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH2 0xE56 DUP2 PUSH2 0x16E5 JUMP JUMPDEST PUSH2 0xAC7 PUSH2 0x1A84 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP1 DUP3 DUP1 DUP1 DUP4 DUP2 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2C73 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP1 SLOAD SWAP1 SWAP2 POP ISZERO DUP1 ISZERO PUSH2 0xE8B JUMPI POP PUSH1 0x1 DUP2 ADD SLOAD ISZERO JUMPDEST PUSH2 0xECF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x1152540DCC4C8E88155B9A5B9A5D1A585B1A5E9959 PUSH1 0x5A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xB27 JUMP JUMPDEST PUSH2 0xED7 PUSH2 0x1ACD JUMP JUMPDEST PUSH2 0xEDF PUSH2 0x1B0C JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x0 DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 SWAP3 MSTORE PUSH1 0xF PUSH1 0xF8 SHL SWAP13 SWAP4 SWAP12 POP SWAP2 SWAP10 POP CHAINID SWAP9 POP ADDRESS SWAP8 POP SWAP6 POP SWAP4 POP SWAP2 POP POP JUMP JUMPDEST DUP3 DUP2 EQ PUSH2 0xF52 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x82E4E4C2F2E640D8CADCCEE8D040DAD2E6DAC2E8C6D PUSH1 0x53 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xB27 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xFAE JUMPI PUSH2 0xFA6 CALLER DUP7 DUP7 DUP5 DUP2 DUP2 LT PUSH2 0xF73 JUMPI PUSH2 0xF73 PUSH2 0x2ACB JUMP JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0xF88 SWAP2 SWAP1 PUSH2 0x25EB JUMP JUMPDEST DUP6 DUP6 DUP6 DUP2 DUP2 LT PUSH2 0xF9A JUMPI PUSH2 0xF9A PUSH2 0x2ACB JUMP JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD CALLDATALOAD PUSH2 0x1686 JUMP JUMPDEST PUSH1 0x1 ADD PUSH2 0xF55 JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2CD3 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 SWAP1 SWAP4 AND DUP5 MSTORE SWAP2 SWAP1 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH32 0x52C63247E1F47DB19D5CE0460030C497F067CA4CEBF71BA98EEADABE20BACE04 DUP1 SLOAD PUSH1 0x60 SWAP2 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2C53 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP2 PUSH2 0x8A8 SWAP1 PUSH2 0x2A91 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1037 DUP2 PUSH2 0x16E5 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 DUP2 SWAP1 KECCAK256 DUP5 SWAP1 SSTORE MLOAD PUSH32 0xA162F0703CBC0C48EA2C9E9BED5743AABC058E7532E594490E3A35BFB0F75AB8 SWAP1 PUSH2 0x1084 SWAP1 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x10AB JUMPI PUSH2 0x10AB PUSH2 0x273F JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x10D4 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x1159 JUMPI PUSH1 0x3 PUSH1 0x0 DUP6 DUP6 DUP5 DUP2 DUP2 LT PUSH2 0x10F8 JUMPI PUSH2 0x10F8 PUSH2 0x2ACB JUMP JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x110D SWAP2 SWAP1 PUSH2 0x25EB JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 ADD PUSH1 0x0 KECCAK256 SLOAD DUP3 MLOAD PUSH1 0xFF SWAP1 SWAP2 AND SWAP1 DUP4 SWAP1 DUP4 SWAP1 DUP2 LT PUSH2 0x1141 JUMPI PUSH2 0x1141 PUSH2 0x2ACB JUMP JUMPDEST SWAP2 ISZERO ISZERO PUSH1 0x20 SWAP3 DUP4 MUL SWAP2 SWAP1 SWAP2 ADD SWAP1 SWAP2 ADD MSTORE PUSH1 0x1 ADD PUSH2 0x10DA JUMP JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x93A DUP2 DUP6 DUP6 PUSH2 0x1686 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1179 DUP2 PUSH2 0x16E5 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0xDAAF87D9985C65A1BFBD019043294923AE1B048BA8B4616E3ACB32741D268DA1 SWAP2 SWAP1 LOG3 POP POP POP JUMP JUMPDEST DUP4 TIMESTAMP GT ISZERO PUSH2 0x11EE JUMPI PUSH1 0x40 MLOAD PUSH4 0x313C8981 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP6 SWAP1 MSTORE PUSH1 0x24 ADD PUSH2 0xB27 JUMP JUMPDEST PUSH1 0x0 PUSH32 0x6E71EDAE12B1B97F4D1F60370FEF10105FA2FAAE0126114A169C64845D6126C9 DUP9 DUP9 DUP9 PUSH2 0x125A DUP13 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH32 0x5AB42CED628888259C08AC98DB1EB0CF702FC1501344311D8B100CD1BFE4BB00 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP2 ADD SWAP1 SWAP2 SSTORE SWAP1 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP2 ADD SWAP7 SWAP1 SWAP7 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP5 DUP6 AND SWAP1 DUP7 ADD MSTORE SWAP3 SWAP1 SWAP2 AND PUSH1 0x60 DUP5 ADD MSTORE PUSH1 0x80 DUP4 ADD MSTORE PUSH1 0xA0 DUP3 ADD MSTORE PUSH1 0xC0 DUP2 ADD DUP7 SWAP1 MSTORE PUSH1 0xE0 ADD PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP PUSH1 0x0 PUSH2 0x12B5 DUP3 PUSH2 0x1B24 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x12C5 DUP3 DUP8 DUP8 DUP8 PUSH2 0x1B51 JUMP JUMPDEST SWAP1 POP DUP10 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x130C JUMPI PUSH1 0x40 MLOAD PUSH4 0x25C00723 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP4 AND PUSH1 0x4 DUP4 ADD MSTORE DUP12 AND PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 ADD PUSH2 0xB27 JUMP JUMPDEST PUSH2 0x1317 DUP11 DUP11 DUP11 PUSH2 0x1618 JUMP JUMPDEST POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x132C DUP3 PUSH2 0x96A JUMP JUMPDEST PUSH2 0x1335 DUP2 PUSH2 0x16E5 JUMP JUMPDEST PUSH2 0x9A8 DUP4 DUP4 PUSH2 0x179E JUMP JUMPDEST PUSH1 0x0 PUSH2 0x134A DUP2 PUSH2 0x16E5 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x9A8 JUMPI PUSH1 0x0 DUP5 DUP5 DUP4 DUP2 DUP2 LT PUSH2 0x1369 JUMPI PUSH2 0x1369 PUSH2 0x2ACB JUMP JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x137E SWAP2 SWAP1 PUSH2 0x25EB JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 SWAP2 POP PUSH1 0xFF AND ISZERO PUSH2 0x13EB JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE MLOAD CALLER SWAP3 SWAP2 PUSH32 0xC5D633221A999DA7B50BAD97DDD6CFF0C917455D8651123A6433642833252B7C SWAP2 LOG3 JUMPDEST POP PUSH1 0x1 ADD PUSH2 0x134D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH32 0x52C63247E1F47DB19D5CE0460030C497F067CA4CEBF71BA98EEADABE20BACE01 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1448 PUSH2 0x181A JUMP JUMPDEST DUP1 SLOAD SWAP1 SWAP2 POP PUSH1 0xFF PUSH1 0x1 PUSH1 0x40 SHL DUP3 DIV AND ISZERO SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND PUSH1 0x0 DUP2 ISZERO DUP1 ISZERO PUSH2 0x146F JUMPI POP DUP3 JUMPDEST SWAP1 POP PUSH1 0x0 DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND PUSH1 0x1 EQ DUP1 ISZERO PUSH2 0x148B JUMPI POP ADDRESS EXTCODESIZE ISZERO JUMPDEST SWAP1 POP DUP2 ISZERO DUP1 ISZERO PUSH2 0x1499 JUMPI POP DUP1 ISZERO JUMPDEST ISZERO PUSH2 0x14B7 JUMPI PUSH1 0x40 MLOAD PUSH4 0xF92EE8A9 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP5 SLOAD PUSH8 0xFFFFFFFFFFFFFFFF NOT AND PUSH1 0x1 OR DUP6 SSTORE DUP4 ISZERO PUSH2 0x14E1 JUMPI DUP5 SLOAD PUSH1 0xFF PUSH1 0x40 SHL NOT AND PUSH1 0x1 PUSH1 0x40 SHL OR DUP6 SSTORE JUMPDEST PUSH2 0x1527 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x9 DUP2 MSTORE PUSH1 0x20 ADD PUSH9 0x2820A2102A37B5B2B7 PUSH1 0xB9 SHL DUP2 MSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x3 DUP2 MSTORE PUSH1 0x20 ADD PUSH3 0x141051 PUSH1 0xEA SHL DUP2 MSTORE POP PUSH2 0x1B7F JUMP JUMPDEST PUSH2 0x1551 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x9 DUP2 MSTORE PUSH1 0x20 ADD PUSH9 0x2820A2102A37B5B2B7 PUSH1 0xB9 SHL DUP2 MSTORE POP PUSH2 0x1B91 JUMP JUMPDEST PUSH2 0x1559 PUSH2 0x1BBC JUMP JUMPDEST PUSH2 0x1561 PUSH2 0x1BBC JUMP JUMPDEST PUSH2 0x1569 PUSH2 0x1BBC JUMP JUMPDEST PUSH2 0x1574 PUSH1 0x0 CALLER PUSH2 0x16EF JUMP JUMPDEST POP PUSH2 0x158D PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2CB3 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE CALLER PUSH2 0x16EF JUMP JUMPDEST POP PUSH2 0x15B8 PUSH32 0x9F2DF0FED2C77648DE5860A4CC508CD0818C85B8B8A1AB4CEEEF8D981C8956A6 CALLER PUSH2 0x16EF JUMP JUMPDEST POP PUSH2 0x15C3 CALLER DUP8 PUSH2 0x1BC4 JUMP JUMPDEST PUSH3 0x15180 PUSH1 0x1 SSTORE DUP4 ISZERO PUSH2 0x1610 JUMPI DUP5 SLOAD PUSH1 0xFF PUSH1 0x40 SHL NOT AND DUP6 SSTORE PUSH1 0x40 MLOAD PUSH1 0x1 DUP2 MSTORE PUSH32 0xC7F505B2F371AE2175EE4913F4499E1F2633A7B5936321EED1CDAEB6115181D2 SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x9F0 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x1BFA JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1631 DUP5 DUP5 PUSH2 0x13F4 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 NOT DUP2 LT ISZERO PUSH2 0x9A8 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x1677 JUMPI PUSH1 0x40 MLOAD PUSH4 0x7DC7A0D9 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x44 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x64 ADD PUSH2 0xB27 JUMP JUMPDEST PUSH2 0x9A8 DUP5 DUP5 DUP5 DUP5 SUB PUSH1 0x0 PUSH2 0x1BFA JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x16B0 JUMPI PUSH1 0x40 MLOAD PUSH4 0x4B637E8F PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0xB27 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x16DA JUMPI PUSH1 0x40 MLOAD PUSH4 0xEC442F05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0xB27 JUMP JUMPDEST PUSH2 0x9F0 DUP4 DUP4 DUP4 PUSH2 0x1CE1 JUMP JUMPDEST PUSH2 0xAC7 DUP2 CALLER PUSH2 0x1DFB JUMP JUMPDEST PUSH1 0x0 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2CD3 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH2 0x170A DUP5 DUP5 PUSH2 0xFB5 JUMP JUMPDEST PUSH2 0x178A JUMPI PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 DUP3 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH2 0x1740 CALLER SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH1 0x1 SWAP2 POP POP PUSH2 0x87D JUMP JUMPDEST PUSH1 0x0 SWAP2 POP POP PUSH2 0x87D JUMP JUMPDEST PUSH1 0x0 PUSH2 0x9B8 PUSH2 0x1E34 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2CD3 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH2 0x17B9 DUP5 DUP5 PUSH2 0xFB5 JUMP JUMPDEST ISZERO PUSH2 0x178A JUMPI PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 DUP3 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND DUP1 DUP6 MSTORE SWAP3 MSTORE DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE MLOAD CALLER SWAP3 DUP8 SWAP2 PUSH32 0xF6391F5C32D9C69D2A47EA670B442974B53935D1EDC7FD64EB21E047A839171B SWAP2 SWAP1 LOG4 PUSH1 0x1 SWAP2 POP POP PUSH2 0x87D JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH32 0xF0C57E16840DF040F15088DC2F81FE391C3923BEC73E23A9662EFC9C229C6A00 PUSH2 0x87D JUMP JUMPDEST PUSH2 0x184B PUSH2 0x1EA8 JUMP JUMPDEST PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2CF3 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP1 SLOAD PUSH1 0xFF NOT AND DUP2 SSTORE PUSH32 0x5DB9EE0A495BF2E6FF9C91A7834C1BA4FDD244A5E8AA4E537BD38AEAE4B073AA CALLER JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST ADDRESS PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND EQ DUP1 PUSH2 0x192A JUMPI POP PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x191E PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2C93 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO JUMPDEST ISZERO PUSH2 0x1948 JUMPI PUSH1 0x40 MLOAD PUSH4 0x703E46DD PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC03 DUP2 PUSH2 0x16E5 JUMP JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x52D1902D PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x19AF JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0x19AC SWAP2 DUP2 ADD SWAP1 PUSH2 0x2AE1 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x19D7 JUMPI PUSH1 0x40 MLOAD PUSH4 0x4C9C8CE3 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0xB27 JUMP JUMPDEST PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2C93 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP2 EQ PUSH2 0x1A08 JUMPI PUSH1 0x40 MLOAD PUSH4 0x2A875269 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x24 ADD PUSH2 0xB27 JUMP JUMPDEST PUSH2 0x9F0 DUP4 DUP4 PUSH2 0x1ED8 JUMP JUMPDEST ADDRESS PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND EQ PUSH2 0x1948 JUMPI PUSH1 0x40 MLOAD PUSH4 0x703E46DD PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH32 0x5AB42CED628888259C08AC98DB1EB0CF702FC1501344311D8B100CD1BFE4BB00 PUSH2 0xDC2 JUMP JUMPDEST PUSH2 0x1A8C PUSH2 0x1F2E JUMP JUMPDEST PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2CF3 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR DUP2 SSTORE PUSH32 0x62E78CEA01BEE320CD4E420270B5EA74000D11B0C9F74754EBDBFC544B05A258 CALLER PUSH2 0x1885 JUMP JUMPDEST PUSH32 0xA16A46D94261C7517CC8FF89F61C0CE93598E3C849801011DEE649A6A557D102 DUP1 SLOAD PUSH1 0x60 SWAP2 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2C73 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP2 PUSH2 0x8A8 SWAP1 PUSH2 0x2A91 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2C73 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH2 0x897 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x87D PUSH2 0x1B31 PUSH2 0x1794 JUMP JUMPDEST DUP4 PUSH1 0x40 MLOAD PUSH2 0x1901 PUSH1 0xF0 SHL DUP2 MSTORE PUSH1 0x2 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x22 DUP3 ADD MSTORE PUSH1 0x42 SWAP1 KECCAK256 SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH2 0x1B63 DUP9 DUP9 DUP9 DUP9 PUSH2 0x1F5F JUMP JUMPDEST SWAP3 POP SWAP3 POP SWAP3 POP PUSH2 0x1B73 DUP3 DUP3 PUSH2 0x202E JUMP JUMPDEST POP SWAP1 SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x1B87 PUSH2 0x20E7 JUMP JUMPDEST PUSH2 0xC03 DUP3 DUP3 PUSH2 0x210C JUMP JUMPDEST PUSH2 0x1B99 PUSH2 0x20E7 JUMP JUMPDEST PUSH2 0xAC7 DUP2 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x31 PUSH1 0xF8 SHL DUP2 MSTORE POP PUSH2 0x215D JUMP JUMPDEST PUSH2 0x1948 PUSH2 0x20E7 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x1BEE JUMPI PUSH1 0x40 MLOAD PUSH4 0xEC442F05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0xB27 JUMP JUMPDEST PUSH2 0xC03 PUSH1 0x0 DUP4 DUP4 PUSH2 0x1CE1 JUMP JUMPDEST PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2C53 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH2 0x1C33 JUMPI PUSH1 0x40 MLOAD PUSH4 0xE602DF05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0xB27 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x1C5D JUMPI PUSH1 0x40 MLOAD PUSH4 0x4A1406B1 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0xB27 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP7 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 DUP4 ADD PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP9 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 DUP4 SWAP1 SSTORE DUP2 ISZERO PUSH2 0xFAE JUMPI DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP6 PUSH1 0x40 MLOAD PUSH2 0x1CD2 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP4 SWAP1 PUSH1 0xFF AND ISZERO PUSH2 0x1D28 JUMPI PUSH1 0x40 MLOAD PUSH4 0xE2A0FE63 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0xB27 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP4 SWAP1 PUSH1 0xFF AND ISZERO PUSH2 0x1D6F JUMPI PUSH1 0x40 MLOAD PUSH4 0xE2A0FE63 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0xB27 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND ISZERO DUP1 ISZERO SWAP1 PUSH2 0x1D8F JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND ISZERO ISZERO JUMPDEST ISZERO PUSH2 0x1DF0 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD TIMESTAMP LT ISZERO PUSH2 0x1DF0 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 DUP2 SWAP1 KECCAK256 SLOAD SWAP1 MLOAD PUSH4 0xDAC64F9 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 ADD PUSH2 0xB27 JUMP JUMPDEST PUSH2 0xFAE DUP6 DUP6 DUP6 PUSH2 0x21BE JUMP JUMPDEST PUSH2 0x1E05 DUP3 DUP3 PUSH2 0xFB5 JUMP JUMPDEST PUSH2 0xC03 JUMPI PUSH1 0x40 MLOAD PUSH4 0xE2517D3F PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x44 ADD PUSH2 0xB27 JUMP JUMPDEST PUSH1 0x0 PUSH32 0x8B73C3C69BB8FE3D512ECC4CF759CC79239F7B179B0FFACAA9A75D522B39400F PUSH2 0x1E5F PUSH2 0x224A JUMP JUMPDEST PUSH2 0x1E67 PUSH2 0x22B4 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP2 ADD SWAP5 SWAP1 SWAP5 MSTORE DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x60 DUP3 ADD MSTORE CHAINID PUSH1 0x80 DUP3 ADD MSTORE ADDRESS PUSH1 0xA0 DUP3 ADD MSTORE PUSH1 0xC0 ADD PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2CF3 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SLOAD PUSH1 0xFF AND PUSH2 0x1948 JUMPI PUSH1 0x40 MLOAD PUSH4 0x8DFC202B PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1EE1 DUP3 PUSH2 0x22F8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 PUSH32 0xBC7CD75A20EE27FD9ADEBAB32041F755214DBC6BFFA90CC0225B39DA2E5C2D3B SWAP1 PUSH1 0x0 SWAP1 LOG2 DUP1 MLOAD ISZERO PUSH2 0x1F26 JUMPI PUSH2 0x9F0 DUP3 DUP3 PUSH2 0x235D JUMP JUMPDEST PUSH2 0xC03 PUSH2 0x23D3 JUMP JUMPDEST PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2CF3 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x1948 JUMPI PUSH1 0x40 MLOAD PUSH4 0xD93C0665 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP1 PUSH32 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0 DUP5 GT ISZERO PUSH2 0x1F9A JUMPI POP PUSH1 0x0 SWAP2 POP PUSH1 0x3 SWAP1 POP DUP3 PUSH2 0x2024 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x0 DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD DUP1 DUP5 MSTORE DUP11 SWAP1 MSTORE PUSH1 0xFF DUP10 AND SWAP3 DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x60 DUP2 ADD DUP8 SWAP1 MSTORE PUSH1 0x80 DUP2 ADD DUP7 SWAP1 MSTORE PUSH1 0x1 SWAP1 PUSH1 0xA0 ADD PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 SUB SWAP1 DUP1 DUP5 SUB SWAP1 DUP6 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1FEE JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x40 MLOAD PUSH1 0x1F NOT ADD MLOAD SWAP2 POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x201A JUMPI POP PUSH1 0x0 SWAP3 POP PUSH1 0x1 SWAP2 POP DUP3 SWAP1 POP PUSH2 0x2024 JUMP JUMPDEST SWAP3 POP PUSH1 0x0 SWAP2 POP DUP2 SWAP1 POP JUMPDEST SWAP5 POP SWAP5 POP SWAP5 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x2042 JUMPI PUSH2 0x2042 PUSH2 0x2AFA JUMP JUMPDEST SUB PUSH2 0x204B JUMPI POP POP JUMP JUMPDEST PUSH1 0x1 DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x205F JUMPI PUSH2 0x205F PUSH2 0x2AFA JUMP JUMPDEST SUB PUSH2 0x207D JUMPI PUSH1 0x40 MLOAD PUSH4 0xF645EEDF PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x2091 JUMPI PUSH2 0x2091 PUSH2 0x2AFA JUMP JUMPDEST SUB PUSH2 0x20B2 JUMPI PUSH1 0x40 MLOAD PUSH4 0xFCE698F7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x24 ADD PUSH2 0xB27 JUMP JUMPDEST PUSH1 0x3 DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x20C6 JUMPI PUSH2 0x20C6 PUSH2 0x2AFA JUMP JUMPDEST SUB PUSH2 0xC03 JUMPI PUSH1 0x40 MLOAD PUSH4 0x35E2F383 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x24 ADD PUSH2 0xB27 JUMP JUMPDEST PUSH2 0x20EF PUSH2 0x23F2 JUMP JUMPDEST PUSH2 0x1948 JUMPI PUSH1 0x40 MLOAD PUSH4 0x1AFCD79F PUSH1 0xE3 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x2114 PUSH2 0x20E7 JUMP JUMPDEST PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2C53 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH32 0x52C63247E1F47DB19D5CE0460030C497F067CA4CEBF71BA98EEADABE20BACE03 PUSH2 0x214E DUP5 DUP3 PUSH2 0x2B57 JUMP JUMPDEST POP PUSH1 0x4 DUP2 ADD PUSH2 0x9A8 DUP4 DUP3 PUSH2 0x2B57 JUMP JUMPDEST PUSH2 0x2165 PUSH2 0x20E7 JUMP JUMPDEST PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2C73 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH32 0xA16A46D94261C7517CC8FF89F61C0CE93598E3C849801011DEE649A6A557D102 PUSH2 0x219F DUP5 DUP3 PUSH2 0x2B57 JUMP JUMPDEST POP PUSH1 0x3 DUP2 ADD PUSH2 0x21AE DUP4 DUP3 PUSH2 0x2B57 JUMP JUMPDEST POP PUSH1 0x0 DUP1 DUP3 SSTORE PUSH1 0x1 SWAP1 SWAP2 ADD SSTORE POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND ISZERO DUP1 ISZERO SWAP1 PUSH2 0x21DE JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND ISZERO ISZERO JUMPDEST ISZERO PUSH2 0x223F JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD TIMESTAMP LT ISZERO PUSH2 0x223F JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 DUP2 SWAP1 KECCAK256 SLOAD SWAP1 MLOAD PUSH4 0xDAC64F9 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 ADD PUSH2 0xB27 JUMP JUMPDEST PUSH2 0x9F0 DUP4 DUP4 DUP4 PUSH2 0x240C JUMP JUMPDEST PUSH1 0x0 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2C73 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP2 PUSH2 0x2264 PUSH2 0x1ACD JUMP JUMPDEST DUP1 MLOAD SWAP1 SWAP2 POP ISZERO PUSH2 0x227C JUMPI DUP1 MLOAD PUSH1 0x20 SWAP1 SWAP2 ADD KECCAK256 SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP2 SLOAD DUP1 ISZERO PUSH2 0x228B JUMPI SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0xC5D2460186F7233C927E7DB2DCC703C0E500B653CA82273B7BFAD8045D85A470 SWAP4 POP POP POP POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2C73 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP2 PUSH2 0x22CE PUSH2 0x1B0C JUMP JUMPDEST DUP1 MLOAD SWAP1 SWAP2 POP ISZERO PUSH2 0x22E6 JUMPI DUP1 MLOAD PUSH1 0x20 SWAP1 SWAP2 ADD KECCAK256 SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 DUP3 ADD SLOAD DUP1 ISZERO PUSH2 0x228B JUMPI SWAP4 SWAP3 POP POP POP JUMP JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EXTCODESIZE PUSH1 0x0 SUB PUSH2 0x232E JUMPI PUSH1 0x40 MLOAD PUSH4 0x4C9C8CE3 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0xB27 JUMP JUMPDEST PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2C93 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP1 DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x40 MLOAD PUSH2 0x237A SWAP2 SWAP1 PUSH2 0x2C15 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 GAS DELEGATECALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x23B5 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x23BA JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0x23CA DUP6 DUP4 DUP4 PUSH2 0x254A JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST CALLVALUE ISZERO PUSH2 0x1948 JUMPI PUSH1 0x40 MLOAD PUSH4 0xB398979F PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x23FC PUSH2 0x181A JUMP JUMPDEST SLOAD PUSH1 0x1 PUSH1 0x40 SHL SWAP1 DIV PUSH1 0xFF AND SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2C53 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x2448 JUMPI DUP2 DUP2 PUSH1 0x2 ADD PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x243D SWAP2 SWAP1 PUSH2 0x2C31 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH2 0x24BA SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP3 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP3 DUP2 LT ISZERO PUSH2 0x249B JUMPI PUSH1 0x40 MLOAD PUSH4 0x391434E3 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x44 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x64 ADD PUSH2 0xB27 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP4 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SWAP1 DUP4 SWAP1 SUB SWAP1 SSTORE JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x24D8 JUMPI PUSH1 0x2 DUP2 ADD DUP1 SLOAD DUP4 SWAP1 SUB SWAP1 SSTORE PUSH2 0x24F7 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP3 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD DUP4 ADD SWAP1 SSTORE JUMPDEST DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 PUSH1 0x40 MLOAD PUSH2 0x253C SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP3 PUSH2 0x255F JUMPI PUSH2 0x255A DUP3 PUSH2 0x25A6 JUMP JUMPDEST PUSH2 0x963 JUMP JUMPDEST DUP2 MLOAD ISZERO DUP1 ISZERO PUSH2 0x2576 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND EXTCODESIZE ISZERO JUMPDEST ISZERO PUSH2 0x259F JUMPI PUSH1 0x40 MLOAD PUSH4 0x9996B315 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0xB27 JUMP JUMPDEST POP DUP1 PUSH2 0x963 JUMP JUMPDEST DUP1 MLOAD ISZERO PUSH2 0x25B6 JUMPI DUP1 MLOAD DUP1 DUP3 PUSH1 0x20 ADD REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xD6BDA275 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x25E6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x25FD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x963 DUP3 PUSH2 0x25CF JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2618 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND DUP2 EQ PUSH2 0x963 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x264B JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x2633 JUMP JUMPDEST POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH2 0x266C DUP2 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP7 ADD PUSH2 0x2630 JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x20 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0x963 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x2654 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x26A6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x26AF DUP4 PUSH2 0x25CF JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x26D2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x26DB DUP5 PUSH2 0x25CF JUMP JUMPDEST SWAP3 POP PUSH2 0x26E9 PUSH1 0x20 DUP6 ADD PUSH2 0x25CF JUMP JUMPDEST SWAP3 SWAP6 SWAP3 SWAP5 POP POP POP PUSH1 0x40 SWAP2 SWAP1 SWAP2 ADD CALLDATALOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x270C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2726 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD SWAP2 POP PUSH2 0x2736 PUSH1 0x20 DUP5 ADD PUSH2 0x25CF JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2768 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2771 DUP4 PUSH2 0x25CF JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x278C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 ADD PUSH1 0x1F DUP2 ADD DUP6 SGT PUSH2 0x279D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x27B6 JUMPI PUSH2 0x27B6 PUSH2 0x273F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0x27E4 JUMPI PUSH2 0x27E4 PUSH2 0x273F JUMP JUMPDEST PUSH1 0x40 MSTORE DUP2 DUP2 MSTORE DUP3 DUP3 ADD PUSH1 0x20 ADD DUP8 LT ISZERO PUSH2 0x27FC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 PUSH1 0x20 DUP5 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 PUSH1 0x20 DUP4 DUP4 ADD ADD MSTORE DUP1 SWAP4 POP POP POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0x282E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x2845 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x20 DUP3 PUSH1 0x5 SHL DUP6 ADD ADD GT ISZERO PUSH2 0x2860 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x20 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x287A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x2890 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x289C DUP6 DUP3 DUP7 ADD PUSH2 0x281C JUMP JUMPDEST SWAP1 SWAP7 SWAP1 SWAP6 POP SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0xFF PUSH1 0xF8 SHL DUP9 AND DUP2 MSTORE PUSH1 0xE0 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x0 PUSH2 0x28C7 PUSH1 0xE0 DUP4 ADD DUP10 PUSH2 0x2654 JUMP JUMPDEST DUP3 DUP2 SUB PUSH1 0x40 DUP5 ADD MSTORE PUSH2 0x28D9 DUP2 DUP10 PUSH2 0x2654 JUMP JUMPDEST PUSH1 0x60 DUP5 ADD DUP9 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND PUSH1 0x80 DUP6 ADD MSTORE PUSH1 0xA0 DUP5 ADD DUP7 SWAP1 MSTORE DUP4 DUP2 SUB PUSH1 0xC0 DUP6 ADD MSTORE DUP5 MLOAD DUP1 DUP3 MSTORE PUSH1 0x20 DUP1 DUP8 ADD SWAP4 POP SWAP1 SWAP2 ADD SWAP1 PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x292F JUMPI DUP4 MLOAD DUP4 MSTORE PUSH1 0x20 SWAP4 DUP5 ADD SWAP4 SWAP1 SWAP3 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0x2911 JUMP JUMPDEST POP SWAP1 SWAP12 SWAP11 POP POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x40 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x2956 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP5 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x296C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2978 DUP8 DUP3 DUP9 ADD PUSH2 0x281C JUMP JUMPDEST SWAP1 SWAP6 POP SWAP4 POP POP PUSH1 0x20 DUP6 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x2997 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x29A3 DUP8 DUP3 DUP9 ADD PUSH2 0x281C JUMP JUMPDEST SWAP6 SWAP9 SWAP5 SWAP8 POP SWAP6 POP POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP3 MLOAD DUP3 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP2 DUP5 ADD SWAP1 PUSH1 0x40 DUP5 ADD SWAP1 DUP4 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x29E9 JUMPI DUP4 MLOAD ISZERO ISZERO DUP4 MSTORE PUSH1 0x20 SWAP4 DUP5 ADD SWAP4 SWAP1 SWAP3 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0x29C9 JUMP JUMPDEST POP SWAP1 SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xE0 DUP9 DUP11 SUB SLT ISZERO PUSH2 0x2A0F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2A18 DUP9 PUSH2 0x25CF JUMP JUMPDEST SWAP7 POP PUSH2 0x2A26 PUSH1 0x20 DUP10 ADD PUSH2 0x25CF JUMP JUMPDEST SWAP6 POP PUSH1 0x40 DUP9 ADD CALLDATALOAD SWAP5 POP PUSH1 0x60 DUP9 ADD CALLDATALOAD SWAP4 POP PUSH1 0x80 DUP9 ADD CALLDATALOAD PUSH1 0xFF DUP2 AND DUP2 EQ PUSH2 0x2A4A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP7 SWAP10 SWAP6 SWAP9 POP SWAP4 SWAP7 SWAP3 SWAP6 SWAP5 PUSH1 0xA0 DUP5 ADD CALLDATALOAD SWAP5 POP PUSH1 0xC0 SWAP1 SWAP4 ADD CALLDATALOAD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2A7A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2A83 DUP4 PUSH2 0x25CF JUMP JUMPDEST SWAP2 POP PUSH2 0x2736 PUSH1 0x20 DUP5 ADD PUSH2 0x25CF JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x2AA5 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x2AC5 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2AF3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x9F0 JUMPI DUP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x2B37 JUMPI POP DUP1 JUMPDEST PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP3 ADD SWAP2 POP JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0xFAE JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x2B43 JUMP JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x2B70 JUMPI PUSH2 0x2B70 PUSH2 0x273F JUMP JUMPDEST PUSH2 0x2B84 DUP2 PUSH2 0x2B7E DUP5 SLOAD PUSH2 0x2A91 JUMP JUMPDEST DUP5 PUSH2 0x2B10 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x1F DUP3 GT PUSH1 0x1 DUP2 EQ PUSH2 0x2BB8 JUMPI PUSH1 0x0 DUP4 ISZERO PUSH2 0x2BA0 JUMPI POP DUP5 DUP3 ADD MLOAD JUMPDEST PUSH1 0x0 NOT PUSH1 0x3 DUP6 SWAP1 SHL SHR NOT AND PUSH1 0x1 DUP5 SWAP1 SHL OR DUP5 SSTORE PUSH2 0xFAE JUMP JUMPDEST PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F NOT DUP6 AND SWAP2 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x2BE8 JUMPI DUP8 DUP6 ADD MLOAD DUP3 SSTORE PUSH1 0x20 SWAP5 DUP6 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP3 ADD SWAP2 ADD PUSH2 0x2BC8 JUMP JUMPDEST POP DUP5 DUP3 LT ISZERO PUSH2 0x2C06 JUMPI DUP7 DUP5 ADD MLOAD PUSH1 0x0 NOT PUSH1 0x3 DUP8 SWAP1 SHL PUSH1 0xF8 AND SHR NOT AND DUP2 SSTORE JUMPDEST POP POP POP POP PUSH1 0x1 SWAP1 DUP2 SHL ADD SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD PUSH2 0x2C27 DUP2 DUP5 PUSH1 0x20 DUP8 ADD PUSH2 0x2630 JUMP JUMPDEST SWAP2 SWAP1 SWAP2 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x87D JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID MSTORE 0xC6 ORIGIN SELFBALANCE 0xE1 DELEGATECALL PUSH30 0xB19D5CE0460030C497F067CA4CEBF71BA98EEADABE20BACE00A16A46D942 PUSH2 0xC751 PUSH29 0xC8FF89F61C0CE93598E3C849801011DEE649A6A557D100360894A13BA1 LOG3 0x21 MOD PUSH8 0xC828492DB98DCA3E KECCAK256 PUSH23 0xCC3735A920A3CA505D382BBC65D7A28E3265B37A647492 SWAP16 CALLER PUSH6 0x21B332C1681B SWAP4 EXTCODEHASH PUSH13 0xB9F3376673440D862A02DD7BC7 0xDE 0xC4 0xDC 0xEE 0xDD 0xA7 PUSH22 0xE58DD541E08A116C6C53815C0BD028192F7B626800CD MCOPY 0xD1 TLOAD PUSH15 0x187E77E9AEE88184C21F4F2182AB58 0x27 0xCB EXTCODESIZE PUSH31 0x7FBEDCD63F03300A2646970667358221220F886522BA52D6949BB91587414 SWAP10 PUSH32 0xFD3E434D01E8D7CCDE6D0AE11B8001E5C664736F6C634300081C003300000000 ","sourceMap":"283:4322:32:-:0;;;1171:4:2;1128:48;;283:4322:32;;;;;;;;;-1:-1:-1;1563:22:31;:20;:22::i;:::-;283:4322:32;;7709:422:1;3147:66;7898:15;;;;;;;7894:76;;;7936:23;;-1:-1:-1;;;7936:23:1;;;;;;;;;;;7894:76;7983:14;;-1:-1:-1;;;;;7983:14:1;;;:34;7979:146;;8033:33;;-1:-1:-1;;;;;;8033:33:1;-1:-1:-1;;;;;8033:33:1;;;;;8085:29;;158:50:33;;;8085:29:1;;146:2:33;131:18;8085:29:1;;;;;;;7979:146;7758:373;7709:422::o;14:200:33:-;283:4322:32;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{"@DEFAULT_ADMIN_ROLE_30":{"entryPoint":null,"id":30,"parameterSlots":0,"returnSlots":0},"@DOMAIN_SEPARATOR_1599":{"entryPoint":2478,"id":1599,"parameterSlots":0,"returnSlots":1},"@MINTER_ROLE_8888":{"entryPoint":null,"id":8888,"parameterSlots":0,"returnSlots":0},"@PAUSER_ROLE_8883":{"entryPoint":null,"id":8883,"parameterSlots":0,"returnSlots":0},"@UPGRADE_INTERFACE_VERSION_656":{"entryPoint":null,"id":656,"parameterSlots":0,"returnSlots":0},"@_EIP712NameHash_2208":{"entryPoint":8778,"id":2208,"parameterSlots":0,"returnSlots":1},"@_EIP712Name_2140":{"entryPoint":6861,"id":2140,"parameterSlots":0,"returnSlots":1},"@_EIP712VersionHash_2260":{"entryPoint":8884,"id":2260,"parameterSlots":0,"returnSlots":1},"@_EIP712Version_2156":{"entryPoint":6924,"id":2156,"parameterSlots":0,"returnSlots":1},"@__AccessControl_init_65":{"entryPoint":null,"id":65,"parameterSlots":0,"returnSlots":0},"@__EIP712_init_unchained_2014":{"entryPoint":8541,"id":2014,"parameterSlots":2,"returnSlots":0},"@__ERC20Permit_init_1487":{"entryPoint":7057,"id":1487,"parameterSlots":1,"returnSlots":0},"@__ERC20_init_882":{"entryPoint":7039,"id":882,"parameterSlots":2,"returnSlots":0},"@__ERC20_init_unchained_910":{"entryPoint":8460,"id":910,"parameterSlots":2,"returnSlots":0},"@__Pausable_init_1821":{"entryPoint":7100,"id":1821,"parameterSlots":0,"returnSlots":0},"@__UUPSUpgradeable_init_686":{"entryPoint":null,"id":686,"parameterSlots":0,"returnSlots":0},"@_approve_1314":{"entryPoint":5656,"id":1314,"parameterSlots":3,"returnSlots":0},"@_approve_1382":{"entryPoint":7162,"id":1382,"parameterSlots":4,"returnSlots":0},"@_authorizeUpgrade_9183":{"entryPoint":6474,"id":9183,"parameterSlots":1,"returnSlots":0},"@_buildDomainSeparator_2047":{"entryPoint":7732,"id":2047,"parameterSlots":0,"returnSlots":1},"@_checkInitializing_540":{"entryPoint":8423,"id":540,"parameterSlots":0,"returnSlots":0},"@_checkNonPayable_2870":{"entryPoint":9171,"id":2870,"parameterSlots":0,"returnSlots":0},"@_checkNotDelegated_762":{"entryPoint":6674,"id":762,"parameterSlots":0,"returnSlots":0},"@_checkProxy_746":{"entryPoint":6307,"id":746,"parameterSlots":0,"returnSlots":0},"@_checkRole_131":{"entryPoint":5861,"id":131,"parameterSlots":1,"returnSlots":0},"@_checkRole_152":{"entryPoint":7675,"id":152,"parameterSlots":2,"returnSlots":0},"@_domainSeparatorV4_2024":{"entryPoint":6036,"id":2024,"parameterSlots":0,"returnSlots":1},"@_getAccessControlStorage_48":{"entryPoint":null,"id":48,"parameterSlots":0,"returnSlots":1},"@_getEIP712Storage_1958":{"entryPoint":null,"id":1958,"parameterSlots":0,"returnSlots":1},"@_getERC20Storage_866":{"entryPoint":null,"id":866,"parameterSlots":0,"returnSlots":1},"@_getInitializableStorage_631":{"entryPoint":6170,"id":631,"parameterSlots":0,"returnSlots":1},"@_getNoncesStorage_1677":{"entryPoint":null,"id":1677,"parameterSlots":0,"returnSlots":1},"@_getPausableStorage_1783":{"entryPoint":null,"id":1783,"parameterSlots":0,"returnSlots":1},"@_grantRole_317":{"entryPoint":5871,"id":317,"parameterSlots":2,"returnSlots":1},"@_hashTypedDataV4_2063":{"entryPoint":6948,"id":2063,"parameterSlots":1,"returnSlots":1},"@_initializableStorageSlot_617":{"entryPoint":null,"id":617,"parameterSlots":0,"returnSlots":1},"@_isInitializing_608":{"entryPoint":9202,"id":608,"parameterSlots":0,"returnSlots":1},"@_mint_1263":{"entryPoint":7108,"id":1263,"parameterSlots":2,"returnSlots":0},"@_msgSender_1628":{"entryPoint":null,"id":1628,"parameterSlots":0,"returnSlots":1},"@_pause_1892":{"entryPoint":6788,"id":1892,"parameterSlots":0,"returnSlots":0},"@_requireNotPaused_1855":{"entryPoint":7982,"id":1855,"parameterSlots":0,"returnSlots":0},"@_requirePaused_1868":{"entryPoint":7848,"id":1868,"parameterSlots":0,"returnSlots":0},"@_revert_3280":{"entryPoint":9638,"id":3280,"parameterSlots":1,"returnSlots":0},"@_revokeRole_363":{"entryPoint":6046,"id":363,"parameterSlots":2,"returnSlots":1},"@_setImplementation_2650":{"entryPoint":8952,"id":2650,"parameterSlots":1,"returnSlots":0},"@_spendAllowance_1430":{"entryPoint":5669,"id":1430,"parameterSlots":3,"returnSlots":0},"@_throwError_5228":{"entryPoint":8238,"id":5228,"parameterSlots":2,"returnSlots":0},"@_transfer_1138":{"entryPoint":5766,"id":1138,"parameterSlots":3,"returnSlots":0},"@_unpause_1916":{"entryPoint":6211,"id":1916,"parameterSlots":0,"returnSlots":0},"@_update_1230":{"entryPoint":9228,"id":1230,"parameterSlots":3,"returnSlots":0},"@_update_9172":{"entryPoint":8638,"id":9172,"parameterSlots":3,"returnSlots":0},"@_update_9483":{"entryPoint":7393,"id":9483,"parameterSlots":3,"returnSlots":0},"@_upgradeToAndCallUUPS_813":{"entryPoint":6485,"id":813,"parameterSlots":2,"returnSlots":0},"@_useNonce_1731":{"entryPoint":null,"id":1731,"parameterSlots":1,"returnSlots":1},"@addToBlacklist_9280":{"entryPoint":2762,"id":9280,"parameterSlots":1,"returnSlots":0},"@allowance_1035":{"entryPoint":5108,"id":1035,"parameterSlots":2,"returnSlots":1},"@approve_1059":{"entryPoint":2348,"id":1059,"parameterSlots":2,"returnSlots":1},"@balanceOf_987":{"entryPoint":3503,"id":987,"parameterSlots":1,"returnSlots":1},"@batchAddToBlacklist_9364":{"entryPoint":3299,"id":9364,"parameterSlots":2,"returnSlots":0},"@batchRemoveFromBlacklist_9411":{"entryPoint":4927,"id":9411,"parameterSlots":2,"returnSlots":0},"@batchTransfer_9122":{"entryPoint":3850,"id":9122,"parameterSlots":4,"returnSlots":0},"@cooldownPeriod_8892":{"entryPoint":null,"id":8892,"parameterSlots":0,"returnSlots":0},"@cooldowns_8896":{"entryPoint":null,"id":8896,"parameterSlots":0,"returnSlots":0},"@decimals_951":{"entryPoint":null,"id":951,"parameterSlots":0,"returnSlots":1},"@eip712Domain_2124":{"entryPoint":3678,"id":2124,"parameterSlots":0,"returnSlots":7},"@functionDelegateCall_3198":{"entryPoint":9053,"id":3198,"parameterSlots":2,"returnSlots":1},"@getAddressSlot_3390":{"entryPoint":null,"id":3390,"parameterSlots":1,"returnSlots":1},"@getBlacklistStatus_9526":{"entryPoint":4241,"id":9526,"parameterSlots":2,"returnSlots":1},"@getImplementation_2623":{"entryPoint":null,"id":2623,"parameterSlots":0,"returnSlots":1},"@getRoleAdmin_173":{"entryPoint":2410,"id":173,"parameterSlots":1,"returnSlots":1},"@gnosisSafe_8890":{"entryPoint":null,"id":8890,"parameterSlots":0,"returnSlots":0},"@grantRole_192":{"entryPoint":2444,"id":192,"parameterSlots":2,"returnSlots":0},"@hasRole_118":{"entryPoint":4021,"id":118,"parameterSlots":2,"returnSlots":1},"@initializeV3_9227":{"entryPoint":2549,"id":9227,"parameterSlots":0,"returnSlots":0},"@initialize_8987":{"entryPoint":5182,"id":8987,"parameterSlots":1,"returnSlots":0},"@isBlacklisted_9240":{"entryPoint":null,"id":9240,"parameterSlots":1,"returnSlots":1},"@name_926":{"entryPoint":2179,"id":926,"parameterSlots":0,"returnSlots":1},"@nonces_1589":{"entryPoint":3554,"id":1589,"parameterSlots":1,"returnSlots":1},"@nonces_1709":{"entryPoint":6747,"id":1709,"parameterSlots":1,"returnSlots":1},"@pause_8998":{"entryPoint":3646,"id":8998,"parameterSlots":0,"returnSlots":0},"@paused_1843":{"entryPoint":null,"id":1843,"parameterSlots":0,"returnSlots":1},"@permit_1572":{"entryPoint":4554,"id":1572,"parameterSlots":7,"returnSlots":0},"@proxiableUUID_704":{"entryPoint":3079,"id":704,"parameterSlots":0,"returnSlots":1},"@recover_5179":{"entryPoint":6993,"id":5179,"parameterSlots":4,"returnSlots":1},"@removeFromBlacklist_9309":{"entryPoint":3108,"id":9309,"parameterSlots":1,"returnSlots":0},"@renounceRole_234":{"entryPoint":2493,"id":234,"parameterSlots":2,"returnSlots":0},"@revokeRole_211":{"entryPoint":4899,"id":211,"parameterSlots":2,"returnSlots":0},"@setCooldownPeriod_9055":{"entryPoint":3565,"id":9055,"parameterSlots":1,"returnSlots":0},"@setCooldown_9078":{"entryPoint":4140,"id":9078,"parameterSlots":2,"returnSlots":0},"@setGnosisSafe_9032":{"entryPoint":4462,"id":9032,"parameterSlots":1,"returnSlots":0},"@supportsInterface_2300":{"entryPoint":null,"id":2300,"parameterSlots":1,"returnSlots":1},"@supportsInterface_93":{"entryPoint":2124,"id":93,"parameterSlots":1,"returnSlots":1},"@symbol_942":{"entryPoint":4077,"id":942,"parameterSlots":0,"returnSlots":1},"@toTypedDataHash_5314":{"entryPoint":null,"id":5314,"parameterSlots":2,"returnSlots":1},"@totalSupply_967":{"entryPoint":null,"id":967,"parameterSlots":0,"returnSlots":1},"@transferFrom_1091":{"entryPoint":2372,"id":1091,"parameterSlots":3,"returnSlots":1},"@transfer_1011":{"entryPoint":4448,"id":1011,"parameterSlots":2,"returnSlots":1},"@tryRecover_5143":{"entryPoint":8031,"id":5143,"parameterSlots":4,"returnSlots":3},"@unpause_9009":{"entryPoint":2727,"id":9009,"parameterSlots":0,"returnSlots":0},"@upgradeToAndCall_2686":{"entryPoint":7896,"id":2686,"parameterSlots":2,"returnSlots":0},"@upgradeToAndCall_724":{"entryPoint":3048,"id":724,"parameterSlots":2,"returnSlots":0},"@verifyCallResultFromTarget_3238":{"entryPoint":9546,"id":3238,"parameterSlots":3,"returnSlots":1},"@version_9536":{"entryPoint":null,"id":9536,"parameterSlots":0,"returnSlots":1},"abi_decode_address":{"entryPoint":9679,"id":null,"parameterSlots":1,"returnSlots":1},"abi_decode_array_address_dyn_calldata":{"entryPoint":10268,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_address":{"entryPoint":9707,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_addresst_address":{"entryPoint":10855,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_addresst_addresst_uint256":{"entryPoint":9917,"id":null,"parameterSlots":2,"returnSlots":3},"abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_uint8t_bytes32t_bytes32":{"entryPoint":10740,"id":null,"parameterSlots":2,"returnSlots":7},"abi_decode_tuple_t_addresst_bytes_memory_ptr":{"entryPoint":10069,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_addresst_uint256":{"entryPoint":9875,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_array$_t_address_$dyn_calldata_ptr":{"entryPoint":10343,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_array$_t_address_$dyn_calldata_ptrt_array$_t_uint256_$dyn_calldata_ptr":{"entryPoint":10560,"id":null,"parameterSlots":2,"returnSlots":4},"abi_decode_tuple_t_bytes32":{"entryPoint":9978,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_bytes32_fromMemory":{"entryPoint":10977,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_bytes32t_address":{"entryPoint":10003,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_bytes4":{"entryPoint":9734,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint256":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_string":{"entryPoint":9812,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed":{"entryPoint":11285,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_address_t_bytes32__to_t_address_t_bytes32__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":4,"returnSlots":1},"abi_encode_tuple_t_array$_t_bool_$dyn_memory_ptr__to_t_array$_t_bool_$dyn_memory_ptr__fromStack_reversed":{"entryPoint":10671,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_bytes1_t_string_memory_ptr_t_string_memory_ptr_t_uint256_t_address_t_bytes32_t_array$_t_uint256_$dyn_memory_ptr__to_t_bytes1_t_string_memory_ptr_t_string_memory_ptr_t_uint256_t_address_t_bytes32_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed":{"entryPoint":10408,"id":null,"parameterSlots":8,"returnSlots":1},"abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_bytes32_t_address_t_address_t_uint256_t_uint256_t_uint256__to_t_bytes32_t_address_t_address_t_uint256_t_uint256_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":7,"returnSlots":1},"abi_encode_tuple_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__to_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":6,"returnSlots":1},"abi_encode_tuple_t_bytes32_t_uint8_t_bytes32_t_bytes32__to_t_bytes32_t_uint8_t_bytes32_t_bytes32__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":5,"returnSlots":1},"abi_encode_tuple_t_rational_1_by_1__to_t_uint64__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":9856,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_stringliteral_2e5045ff73280aa8e8acd8c82710f23812497f87f7f576e2220a2ddd0d45eade__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_461caef3ccd3511790a63bffbea84243153500414f0847913bd8083d6d4c23b3__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_582fd48f3876d7686bfeaaaa0db0589073271dedd50d66094f02fee2a3d2e01c__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_a504a1fbd4e76ffb6f138f0845a9c693852f9d2da4111969422ff798bbd49298__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_f788ca005c215621f24c46d9b760e3e23a15baf9bf1a15ac76063a2cdbbdd9f2__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_uint64__to_t_uint64__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"array_dataslot_string_storage":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"checked_add_t_uint256":{"entryPoint":11313,"id":null,"parameterSlots":2,"returnSlots":1},"clean_up_bytearray_end_slots_string_storage":{"entryPoint":11024,"id":null,"parameterSlots":3,"returnSlots":0},"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage":{"entryPoint":11095,"id":null,"parameterSlots":2,"returnSlots":0},"copy_memory_to_memory_with_cleanup":{"entryPoint":9776,"id":null,"parameterSlots":3,"returnSlots":0},"extract_byte_array_length":{"entryPoint":10897,"id":null,"parameterSlots":1,"returnSlots":1},"extract_used_part_and_set_length_of_short_byte_array":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"panic_error_0x21":{"entryPoint":11002,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x32":{"entryPoint":10955,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x41":{"entryPoint":10047,"id":null,"parameterSlots":0,"returnSlots":0}},"generatedSources":[{"ast":{"nativeSrc":"0:18237:33","nodeType":"YulBlock","src":"0:18237:33","statements":[{"nativeSrc":"6:3:33","nodeType":"YulBlock","src":"6:3:33","statements":[]},{"body":{"nativeSrc":"63:124:33","nodeType":"YulBlock","src":"63:124:33","statements":[{"nativeSrc":"73:29:33","nodeType":"YulAssignment","src":"73:29:33","value":{"arguments":[{"name":"offset","nativeSrc":"95:6:33","nodeType":"YulIdentifier","src":"95:6:33"}],"functionName":{"name":"calldataload","nativeSrc":"82:12:33","nodeType":"YulIdentifier","src":"82:12:33"},"nativeSrc":"82:20:33","nodeType":"YulFunctionCall","src":"82:20:33"},"variableNames":[{"name":"value","nativeSrc":"73:5:33","nodeType":"YulIdentifier","src":"73:5:33"}]},{"body":{"nativeSrc":"165:16:33","nodeType":"YulBlock","src":"165:16:33","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"174:1:33","nodeType":"YulLiteral","src":"174:1:33","type":"","value":"0"},{"kind":"number","nativeSrc":"177:1:33","nodeType":"YulLiteral","src":"177:1:33","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"167:6:33","nodeType":"YulIdentifier","src":"167:6:33"},"nativeSrc":"167:12:33","nodeType":"YulFunctionCall","src":"167:12:33"},"nativeSrc":"167:12:33","nodeType":"YulExpressionStatement","src":"167:12:33"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"124:5:33","nodeType":"YulIdentifier","src":"124:5:33"},{"arguments":[{"name":"value","nativeSrc":"135:5:33","nodeType":"YulIdentifier","src":"135:5:33"},{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"150:3:33","nodeType":"YulLiteral","src":"150:3:33","type":"","value":"160"},{"kind":"number","nativeSrc":"155:1:33","nodeType":"YulLiteral","src":"155:1:33","type":"","value":"1"}],"functionName":{"name":"shl","nativeSrc":"146:3:33","nodeType":"YulIdentifier","src":"146:3:33"},"nativeSrc":"146:11:33","nodeType":"YulFunctionCall","src":"146:11:33"},{"kind":"number","nativeSrc":"159:1:33","nodeType":"YulLiteral","src":"159:1:33","type":"","value":"1"}],"functionName":{"name":"sub","nativeSrc":"142:3:33","nodeType":"YulIdentifier","src":"142:3:33"},"nativeSrc":"142:19:33","nodeType":"YulFunctionCall","src":"142:19:33"}],"functionName":{"name":"and","nativeSrc":"131:3:33","nodeType":"YulIdentifier","src":"131:3:33"},"nativeSrc":"131:31:33","nodeType":"YulFunctionCall","src":"131:31:33"}],"functionName":{"name":"eq","nativeSrc":"121:2:33","nodeType":"YulIdentifier","src":"121:2:33"},"nativeSrc":"121:42:33","nodeType":"YulFunctionCall","src":"121:42:33"}],"functionName":{"name":"iszero","nativeSrc":"114:6:33","nodeType":"YulIdentifier","src":"114:6:33"},"nativeSrc":"114:50:33","nodeType":"YulFunctionCall","src":"114:50:33"},"nativeSrc":"111:70:33","nodeType":"YulIf","src":"111:70:33"}]},"name":"abi_decode_address","nativeSrc":"14:173:33","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"42:6:33","nodeType":"YulTypedName","src":"42:6:33","type":""}],"returnVariables":[{"name":"value","nativeSrc":"53:5:33","nodeType":"YulTypedName","src":"53:5:33","type":""}],"src":"14:173:33"},{"body":{"nativeSrc":"262:116:33","nodeType":"YulBlock","src":"262:116:33","statements":[{"body":{"nativeSrc":"308:16:33","nodeType":"YulBlock","src":"308:16:33","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"317:1:33","nodeType":"YulLiteral","src":"317:1:33","type":"","value":"0"},{"kind":"number","nativeSrc":"320:1:33","nodeType":"YulLiteral","src":"320:1:33","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"310:6:33","nodeType":"YulIdentifier","src":"310:6:33"},"nativeSrc":"310:12:33","nodeType":"YulFunctionCall","src":"310:12:33"},"nativeSrc":"310:12:33","nodeType":"YulExpressionStatement","src":"310:12:33"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"283:7:33","nodeType":"YulIdentifier","src":"283:7:33"},{"name":"headStart","nativeSrc":"292:9:33","nodeType":"YulIdentifier","src":"292:9:33"}],"functionName":{"name":"sub","nativeSrc":"279:3:33","nodeType":"YulIdentifier","src":"279:3:33"},"nativeSrc":"279:23:33","nodeType":"YulFunctionCall","src":"279:23:33"},{"kind":"number","nativeSrc":"304:2:33","nodeType":"YulLiteral","src":"304:2:33","type":"","value":"32"}],"functionName":{"name":"slt","nativeSrc":"275:3:33","nodeType":"YulIdentifier","src":"275:3:33"},"nativeSrc":"275:32:33","nodeType":"YulFunctionCall","src":"275:32:33"},"nativeSrc":"272:52:33","nodeType":"YulIf","src":"272:52:33"},{"nativeSrc":"333:39:33","nodeType":"YulAssignment","src":"333:39:33","value":{"arguments":[{"name":"headStart","nativeSrc":"362:9:33","nodeType":"YulIdentifier","src":"362:9:33"}],"functionName":{"name":"abi_decode_address","nativeSrc":"343:18:33","nodeType":"YulIdentifier","src":"343:18:33"},"nativeSrc":"343:29:33","nodeType":"YulFunctionCall","src":"343:29:33"},"variableNames":[{"name":"value0","nativeSrc":"333:6:33","nodeType":"YulIdentifier","src":"333:6:33"}]}]},"name":"abi_decode_tuple_t_address","nativeSrc":"192:186:33","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"228:9:33","nodeType":"YulTypedName","src":"228:9:33","type":""},{"name":"dataEnd","nativeSrc":"239:7:33","nodeType":"YulTypedName","src":"239:7:33","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"251:6:33","nodeType":"YulTypedName","src":"251:6:33","type":""}],"src":"192:186:33"},{"body":{"nativeSrc":"484:76:33","nodeType":"YulBlock","src":"484:76:33","statements":[{"nativeSrc":"494:26:33","nodeType":"YulAssignment","src":"494:26:33","value":{"arguments":[{"name":"headStart","nativeSrc":"506:9:33","nodeType":"YulIdentifier","src":"506:9:33"},{"kind":"number","nativeSrc":"517:2:33","nodeType":"YulLiteral","src":"517:2:33","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"502:3:33","nodeType":"YulIdentifier","src":"502:3:33"},"nativeSrc":"502:18:33","nodeType":"YulFunctionCall","src":"502:18:33"},"variableNames":[{"name":"tail","nativeSrc":"494:4:33","nodeType":"YulIdentifier","src":"494:4:33"}]},{"expression":{"arguments":[{"name":"headStart","nativeSrc":"536:9:33","nodeType":"YulIdentifier","src":"536:9:33"},{"name":"value0","nativeSrc":"547:6:33","nodeType":"YulIdentifier","src":"547:6:33"}],"functionName":{"name":"mstore","nativeSrc":"529:6:33","nodeType":"YulIdentifier","src":"529:6:33"},"nativeSrc":"529:25:33","nodeType":"YulFunctionCall","src":"529:25:33"},"nativeSrc":"529:25:33","nodeType":"YulExpressionStatement","src":"529:25:33"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nativeSrc":"383:177:33","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"453:9:33","nodeType":"YulTypedName","src":"453:9:33","type":""},{"name":"value0","nativeSrc":"464:6:33","nodeType":"YulTypedName","src":"464:6:33","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"475:4:33","nodeType":"YulTypedName","src":"475:4:33","type":""}],"src":"383:177:33"},{"body":{"nativeSrc":"634:217:33","nodeType":"YulBlock","src":"634:217:33","statements":[{"body":{"nativeSrc":"680:16:33","nodeType":"YulBlock","src":"680:16:33","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"689:1:33","nodeType":"YulLiteral","src":"689:1:33","type":"","value":"0"},{"kind":"number","nativeSrc":"692:1:33","nodeType":"YulLiteral","src":"692:1:33","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"682:6:33","nodeType":"YulIdentifier","src":"682:6:33"},"nativeSrc":"682:12:33","nodeType":"YulFunctionCall","src":"682:12:33"},"nativeSrc":"682:12:33","nodeType":"YulExpressionStatement","src":"682:12:33"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"655:7:33","nodeType":"YulIdentifier","src":"655:7:33"},{"name":"headStart","nativeSrc":"664:9:33","nodeType":"YulIdentifier","src":"664:9:33"}],"functionName":{"name":"sub","nativeSrc":"651:3:33","nodeType":"YulIdentifier","src":"651:3:33"},"nativeSrc":"651:23:33","nodeType":"YulFunctionCall","src":"651:23:33"},{"kind":"number","nativeSrc":"676:2:33","nodeType":"YulLiteral","src":"676:2:33","type":"","value":"32"}],"functionName":{"name":"slt","nativeSrc":"647:3:33","nodeType":"YulIdentifier","src":"647:3:33"},"nativeSrc":"647:32:33","nodeType":"YulFunctionCall","src":"647:32:33"},"nativeSrc":"644:52:33","nodeType":"YulIf","src":"644:52:33"},{"nativeSrc":"705:36:33","nodeType":"YulVariableDeclaration","src":"705:36:33","value":{"arguments":[{"name":"headStart","nativeSrc":"731:9:33","nodeType":"YulIdentifier","src":"731:9:33"}],"functionName":{"name":"calldataload","nativeSrc":"718:12:33","nodeType":"YulIdentifier","src":"718:12:33"},"nativeSrc":"718:23:33","nodeType":"YulFunctionCall","src":"718:23:33"},"variables":[{"name":"value","nativeSrc":"709:5:33","nodeType":"YulTypedName","src":"709:5:33","type":""}]},{"body":{"nativeSrc":"805:16:33","nodeType":"YulBlock","src":"805:16:33","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"814:1:33","nodeType":"YulLiteral","src":"814:1:33","type":"","value":"0"},{"kind":"number","nativeSrc":"817:1:33","nodeType":"YulLiteral","src":"817:1:33","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"807:6:33","nodeType":"YulIdentifier","src":"807:6:33"},"nativeSrc":"807:12:33","nodeType":"YulFunctionCall","src":"807:12:33"},"nativeSrc":"807:12:33","nodeType":"YulExpressionStatement","src":"807:12:33"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"763:5:33","nodeType":"YulIdentifier","src":"763:5:33"},{"arguments":[{"name":"value","nativeSrc":"774:5:33","nodeType":"YulIdentifier","src":"774:5:33"},{"arguments":[{"kind":"number","nativeSrc":"785:3:33","nodeType":"YulLiteral","src":"785:3:33","type":"","value":"224"},{"kind":"number","nativeSrc":"790:10:33","nodeType":"YulLiteral","src":"790:10:33","type":"","value":"0xffffffff"}],"functionName":{"name":"shl","nativeSrc":"781:3:33","nodeType":"YulIdentifier","src":"781:3:33"},"nativeSrc":"781:20:33","nodeType":"YulFunctionCall","src":"781:20:33"}],"functionName":{"name":"and","nativeSrc":"770:3:33","nodeType":"YulIdentifier","src":"770:3:33"},"nativeSrc":"770:32:33","nodeType":"YulFunctionCall","src":"770:32:33"}],"functionName":{"name":"eq","nativeSrc":"760:2:33","nodeType":"YulIdentifier","src":"760:2:33"},"nativeSrc":"760:43:33","nodeType":"YulFunctionCall","src":"760:43:33"}],"functionName":{"name":"iszero","nativeSrc":"753:6:33","nodeType":"YulIdentifier","src":"753:6:33"},"nativeSrc":"753:51:33","nodeType":"YulFunctionCall","src":"753:51:33"},"nativeSrc":"750:71:33","nodeType":"YulIf","src":"750:71:33"},{"nativeSrc":"830:15:33","nodeType":"YulAssignment","src":"830:15:33","value":{"name":"value","nativeSrc":"840:5:33","nodeType":"YulIdentifier","src":"840:5:33"},"variableNames":[{"name":"value0","nativeSrc":"830:6:33","nodeType":"YulIdentifier","src":"830:6:33"}]}]},"name":"abi_decode_tuple_t_bytes4","nativeSrc":"565:286:33","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"600:9:33","nodeType":"YulTypedName","src":"600:9:33","type":""},{"name":"dataEnd","nativeSrc":"611:7:33","nodeType":"YulTypedName","src":"611:7:33","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"623:6:33","nodeType":"YulTypedName","src":"623:6:33","type":""}],"src":"565:286:33"},{"body":{"nativeSrc":"951:92:33","nodeType":"YulBlock","src":"951:92:33","statements":[{"nativeSrc":"961:26:33","nodeType":"YulAssignment","src":"961:26:33","value":{"arguments":[{"name":"headStart","nativeSrc":"973:9:33","nodeType":"YulIdentifier","src":"973:9:33"},{"kind":"number","nativeSrc":"984:2:33","nodeType":"YulLiteral","src":"984:2:33","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"969:3:33","nodeType":"YulIdentifier","src":"969:3:33"},"nativeSrc":"969:18:33","nodeType":"YulFunctionCall","src":"969:18:33"},"variableNames":[{"name":"tail","nativeSrc":"961:4:33","nodeType":"YulIdentifier","src":"961:4:33"}]},{"expression":{"arguments":[{"name":"headStart","nativeSrc":"1003:9:33","nodeType":"YulIdentifier","src":"1003:9:33"},{"arguments":[{"arguments":[{"name":"value0","nativeSrc":"1028:6:33","nodeType":"YulIdentifier","src":"1028:6:33"}],"functionName":{"name":"iszero","nativeSrc":"1021:6:33","nodeType":"YulIdentifier","src":"1021:6:33"},"nativeSrc":"1021:14:33","nodeType":"YulFunctionCall","src":"1021:14:33"}],"functionName":{"name":"iszero","nativeSrc":"1014:6:33","nodeType":"YulIdentifier","src":"1014:6:33"},"nativeSrc":"1014:22:33","nodeType":"YulFunctionCall","src":"1014:22:33"}],"functionName":{"name":"mstore","nativeSrc":"996:6:33","nodeType":"YulIdentifier","src":"996:6:33"},"nativeSrc":"996:41:33","nodeType":"YulFunctionCall","src":"996:41:33"},"nativeSrc":"996:41:33","nodeType":"YulExpressionStatement","src":"996:41:33"}]},"name":"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed","nativeSrc":"856:187:33","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"920:9:33","nodeType":"YulTypedName","src":"920:9:33","type":""},{"name":"value0","nativeSrc":"931:6:33","nodeType":"YulTypedName","src":"931:6:33","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"942:4:33","nodeType":"YulTypedName","src":"942:4:33","type":""}],"src":"856:187:33"},{"body":{"nativeSrc":"1114:184:33","nodeType":"YulBlock","src":"1114:184:33","statements":[{"nativeSrc":"1124:10:33","nodeType":"YulVariableDeclaration","src":"1124:10:33","value":{"kind":"number","nativeSrc":"1133:1:33","nodeType":"YulLiteral","src":"1133:1:33","type":"","value":"0"},"variables":[{"name":"i","nativeSrc":"1128:1:33","nodeType":"YulTypedName","src":"1128:1:33","type":""}]},{"body":{"nativeSrc":"1193:63:33","nodeType":"YulBlock","src":"1193:63:33","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nativeSrc":"1218:3:33","nodeType":"YulIdentifier","src":"1218:3:33"},{"name":"i","nativeSrc":"1223:1:33","nodeType":"YulIdentifier","src":"1223:1:33"}],"functionName":{"name":"add","nativeSrc":"1214:3:33","nodeType":"YulIdentifier","src":"1214:3:33"},"nativeSrc":"1214:11:33","nodeType":"YulFunctionCall","src":"1214:11:33"},{"arguments":[{"arguments":[{"name":"src","nativeSrc":"1237:3:33","nodeType":"YulIdentifier","src":"1237:3:33"},{"name":"i","nativeSrc":"1242:1:33","nodeType":"YulIdentifier","src":"1242:1:33"}],"functionName":{"name":"add","nativeSrc":"1233:3:33","nodeType":"YulIdentifier","src":"1233:3:33"},"nativeSrc":"1233:11:33","nodeType":"YulFunctionCall","src":"1233:11:33"}],"functionName":{"name":"mload","nativeSrc":"1227:5:33","nodeType":"YulIdentifier","src":"1227:5:33"},"nativeSrc":"1227:18:33","nodeType":"YulFunctionCall","src":"1227:18:33"}],"functionName":{"name":"mstore","nativeSrc":"1207:6:33","nodeType":"YulIdentifier","src":"1207:6:33"},"nativeSrc":"1207:39:33","nodeType":"YulFunctionCall","src":"1207:39:33"},"nativeSrc":"1207:39:33","nodeType":"YulExpressionStatement","src":"1207:39:33"}]},"condition":{"arguments":[{"name":"i","nativeSrc":"1154:1:33","nodeType":"YulIdentifier","src":"1154:1:33"},{"name":"length","nativeSrc":"1157:6:33","nodeType":"YulIdentifier","src":"1157:6:33"}],"functionName":{"name":"lt","nativeSrc":"1151:2:33","nodeType":"YulIdentifier","src":"1151:2:33"},"nativeSrc":"1151:13:33","nodeType":"YulFunctionCall","src":"1151:13:33"},"nativeSrc":"1143:113:33","nodeType":"YulForLoop","post":{"nativeSrc":"1165:19:33","nodeType":"YulBlock","src":"1165:19:33","statements":[{"nativeSrc":"1167:15:33","nodeType":"YulAssignment","src":"1167:15:33","value":{"arguments":[{"name":"i","nativeSrc":"1176:1:33","nodeType":"YulIdentifier","src":"1176:1:33"},{"kind":"number","nativeSrc":"1179:2:33","nodeType":"YulLiteral","src":"1179:2:33","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"1172:3:33","nodeType":"YulIdentifier","src":"1172:3:33"},"nativeSrc":"1172:10:33","nodeType":"YulFunctionCall","src":"1172:10:33"},"variableNames":[{"name":"i","nativeSrc":"1167:1:33","nodeType":"YulIdentifier","src":"1167:1:33"}]}]},"pre":{"nativeSrc":"1147:3:33","nodeType":"YulBlock","src":"1147:3:33","statements":[]},"src":"1143:113:33"},{"expression":{"arguments":[{"arguments":[{"name":"dst","nativeSrc":"1276:3:33","nodeType":"YulIdentifier","src":"1276:3:33"},{"name":"length","nativeSrc":"1281:6:33","nodeType":"YulIdentifier","src":"1281:6:33"}],"functionName":{"name":"add","nativeSrc":"1272:3:33","nodeType":"YulIdentifier","src":"1272:3:33"},"nativeSrc":"1272:16:33","nodeType":"YulFunctionCall","src":"1272:16:33"},{"kind":"number","nativeSrc":"1290:1:33","nodeType":"YulLiteral","src":"1290:1:33","type":"","value":"0"}],"functionName":{"name":"mstore","nativeSrc":"1265:6:33","nodeType":"YulIdentifier","src":"1265:6:33"},"nativeSrc":"1265:27:33","nodeType":"YulFunctionCall","src":"1265:27:33"},"nativeSrc":"1265:27:33","nodeType":"YulExpressionStatement","src":"1265:27:33"}]},"name":"copy_memory_to_memory_with_cleanup","nativeSrc":"1048:250:33","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nativeSrc":"1092:3:33","nodeType":"YulTypedName","src":"1092:3:33","type":""},{"name":"dst","nativeSrc":"1097:3:33","nodeType":"YulTypedName","src":"1097:3:33","type":""},{"name":"length","nativeSrc":"1102:6:33","nodeType":"YulTypedName","src":"1102:6:33","type":""}],"src":"1048:250:33"},{"body":{"nativeSrc":"1353:221:33","nodeType":"YulBlock","src":"1353:221:33","statements":[{"nativeSrc":"1363:26:33","nodeType":"YulVariableDeclaration","src":"1363:26:33","value":{"arguments":[{"name":"value","nativeSrc":"1383:5:33","nodeType":"YulIdentifier","src":"1383:5:33"}],"functionName":{"name":"mload","nativeSrc":"1377:5:33","nodeType":"YulIdentifier","src":"1377:5:33"},"nativeSrc":"1377:12:33","nodeType":"YulFunctionCall","src":"1377:12:33"},"variables":[{"name":"length","nativeSrc":"1367:6:33","nodeType":"YulTypedName","src":"1367:6:33","type":""}]},{"expression":{"arguments":[{"name":"pos","nativeSrc":"1405:3:33","nodeType":"YulIdentifier","src":"1405:3:33"},{"name":"length","nativeSrc":"1410:6:33","nodeType":"YulIdentifier","src":"1410:6:33"}],"functionName":{"name":"mstore","nativeSrc":"1398:6:33","nodeType":"YulIdentifier","src":"1398:6:33"},"nativeSrc":"1398:19:33","nodeType":"YulFunctionCall","src":"1398:19:33"},"nativeSrc":"1398:19:33","nodeType":"YulExpressionStatement","src":"1398:19:33"},{"expression":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"1465:5:33","nodeType":"YulIdentifier","src":"1465:5:33"},{"kind":"number","nativeSrc":"1472:4:33","nodeType":"YulLiteral","src":"1472:4:33","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"1461:3:33","nodeType":"YulIdentifier","src":"1461:3:33"},"nativeSrc":"1461:16:33","nodeType":"YulFunctionCall","src":"1461:16:33"},{"arguments":[{"name":"pos","nativeSrc":"1483:3:33","nodeType":"YulIdentifier","src":"1483:3:33"},{"kind":"number","nativeSrc":"1488:4:33","nodeType":"YulLiteral","src":"1488:4:33","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"1479:3:33","nodeType":"YulIdentifier","src":"1479:3:33"},"nativeSrc":"1479:14:33","nodeType":"YulFunctionCall","src":"1479:14:33"},{"name":"length","nativeSrc":"1495:6:33","nodeType":"YulIdentifier","src":"1495:6:33"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nativeSrc":"1426:34:33","nodeType":"YulIdentifier","src":"1426:34:33"},"nativeSrc":"1426:76:33","nodeType":"YulFunctionCall","src":"1426:76:33"},"nativeSrc":"1426:76:33","nodeType":"YulExpressionStatement","src":"1426:76:33"},{"nativeSrc":"1511:57:33","nodeType":"YulAssignment","src":"1511:57:33","value":{"arguments":[{"arguments":[{"name":"pos","nativeSrc":"1526:3:33","nodeType":"YulIdentifier","src":"1526:3:33"},{"arguments":[{"arguments":[{"name":"length","nativeSrc":"1539:6:33","nodeType":"YulIdentifier","src":"1539:6:33"},{"kind":"number","nativeSrc":"1547:2:33","nodeType":"YulLiteral","src":"1547:2:33","type":"","value":"31"}],"functionName":{"name":"add","nativeSrc":"1535:3:33","nodeType":"YulIdentifier","src":"1535:3:33"},"nativeSrc":"1535:15:33","nodeType":"YulFunctionCall","src":"1535:15:33"},{"arguments":[{"kind":"number","nativeSrc":"1556:2:33","nodeType":"YulLiteral","src":"1556:2:33","type":"","value":"31"}],"functionName":{"name":"not","nativeSrc":"1552:3:33","nodeType":"YulIdentifier","src":"1552:3:33"},"nativeSrc":"1552:7:33","nodeType":"YulFunctionCall","src":"1552:7:33"}],"functionName":{"name":"and","nativeSrc":"1531:3:33","nodeType":"YulIdentifier","src":"1531:3:33"},"nativeSrc":"1531:29:33","nodeType":"YulFunctionCall","src":"1531:29:33"}],"functionName":{"name":"add","nativeSrc":"1522:3:33","nodeType":"YulIdentifier","src":"1522:3:33"},"nativeSrc":"1522:39:33","nodeType":"YulFunctionCall","src":"1522:39:33"},{"kind":"number","nativeSrc":"1563:4:33","nodeType":"YulLiteral","src":"1563:4:33","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"1518:3:33","nodeType":"YulIdentifier","src":"1518:3:33"},"nativeSrc":"1518:50:33","nodeType":"YulFunctionCall","src":"1518:50:33"},"variableNames":[{"name":"end","nativeSrc":"1511:3:33","nodeType":"YulIdentifier","src":"1511:3:33"}]}]},"name":"abi_encode_string","nativeSrc":"1303:271:33","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"1330:5:33","nodeType":"YulTypedName","src":"1330:5:33","type":""},{"name":"pos","nativeSrc":"1337:3:33","nodeType":"YulTypedName","src":"1337:3:33","type":""}],"returnVariables":[{"name":"end","nativeSrc":"1345:3:33","nodeType":"YulTypedName","src":"1345:3:33","type":""}],"src":"1303:271:33"},{"body":{"nativeSrc":"1700:99:33","nodeType":"YulBlock","src":"1700:99:33","statements":[{"expression":{"arguments":[{"name":"headStart","nativeSrc":"1717:9:33","nodeType":"YulIdentifier","src":"1717:9:33"},{"kind":"number","nativeSrc":"1728:2:33","nodeType":"YulLiteral","src":"1728:2:33","type":"","value":"32"}],"functionName":{"name":"mstore","nativeSrc":"1710:6:33","nodeType":"YulIdentifier","src":"1710:6:33"},"nativeSrc":"1710:21:33","nodeType":"YulFunctionCall","src":"1710:21:33"},"nativeSrc":"1710:21:33","nodeType":"YulExpressionStatement","src":"1710:21:33"},{"nativeSrc":"1740:53:33","nodeType":"YulAssignment","src":"1740:53:33","value":{"arguments":[{"name":"value0","nativeSrc":"1766:6:33","nodeType":"YulIdentifier","src":"1766:6:33"},{"arguments":[{"name":"headStart","nativeSrc":"1778:9:33","nodeType":"YulIdentifier","src":"1778:9:33"},{"kind":"number","nativeSrc":"1789:2:33","nodeType":"YulLiteral","src":"1789:2:33","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"1774:3:33","nodeType":"YulIdentifier","src":"1774:3:33"},"nativeSrc":"1774:18:33","nodeType":"YulFunctionCall","src":"1774:18:33"}],"functionName":{"name":"abi_encode_string","nativeSrc":"1748:17:33","nodeType":"YulIdentifier","src":"1748:17:33"},"nativeSrc":"1748:45:33","nodeType":"YulFunctionCall","src":"1748:45:33"},"variableNames":[{"name":"tail","nativeSrc":"1740:4:33","nodeType":"YulIdentifier","src":"1740:4:33"}]}]},"name":"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"1579:220:33","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"1669:9:33","nodeType":"YulTypedName","src":"1669:9:33","type":""},{"name":"value0","nativeSrc":"1680:6:33","nodeType":"YulTypedName","src":"1680:6:33","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"1691:4:33","nodeType":"YulTypedName","src":"1691:4:33","type":""}],"src":"1579:220:33"},{"body":{"nativeSrc":"1891:213:33","nodeType":"YulBlock","src":"1891:213:33","statements":[{"body":{"nativeSrc":"1937:16:33","nodeType":"YulBlock","src":"1937:16:33","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"1946:1:33","nodeType":"YulLiteral","src":"1946:1:33","type":"","value":"0"},{"kind":"number","nativeSrc":"1949:1:33","nodeType":"YulLiteral","src":"1949:1:33","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"1939:6:33","nodeType":"YulIdentifier","src":"1939:6:33"},"nativeSrc":"1939:12:33","nodeType":"YulFunctionCall","src":"1939:12:33"},"nativeSrc":"1939:12:33","nodeType":"YulExpressionStatement","src":"1939:12:33"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"1912:7:33","nodeType":"YulIdentifier","src":"1912:7:33"},{"name":"headStart","nativeSrc":"1921:9:33","nodeType":"YulIdentifier","src":"1921:9:33"}],"functionName":{"name":"sub","nativeSrc":"1908:3:33","nodeType":"YulIdentifier","src":"1908:3:33"},"nativeSrc":"1908:23:33","nodeType":"YulFunctionCall","src":"1908:23:33"},{"kind":"number","nativeSrc":"1933:2:33","nodeType":"YulLiteral","src":"1933:2:33","type":"","value":"64"}],"functionName":{"name":"slt","nativeSrc":"1904:3:33","nodeType":"YulIdentifier","src":"1904:3:33"},"nativeSrc":"1904:32:33","nodeType":"YulFunctionCall","src":"1904:32:33"},"nativeSrc":"1901:52:33","nodeType":"YulIf","src":"1901:52:33"},{"nativeSrc":"1962:39:33","nodeType":"YulAssignment","src":"1962:39:33","value":{"arguments":[{"name":"headStart","nativeSrc":"1991:9:33","nodeType":"YulIdentifier","src":"1991:9:33"}],"functionName":{"name":"abi_decode_address","nativeSrc":"1972:18:33","nodeType":"YulIdentifier","src":"1972:18:33"},"nativeSrc":"1972:29:33","nodeType":"YulFunctionCall","src":"1972:29:33"},"variableNames":[{"name":"value0","nativeSrc":"1962:6:33","nodeType":"YulIdentifier","src":"1962:6:33"}]},{"nativeSrc":"2010:14:33","nodeType":"YulVariableDeclaration","src":"2010:14:33","value":{"kind":"number","nativeSrc":"2023:1:33","nodeType":"YulLiteral","src":"2023:1:33","type":"","value":"0"},"variables":[{"name":"value","nativeSrc":"2014:5:33","nodeType":"YulTypedName","src":"2014:5:33","type":""}]},{"nativeSrc":"2033:41:33","nodeType":"YulAssignment","src":"2033:41:33","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"2059:9:33","nodeType":"YulIdentifier","src":"2059:9:33"},{"kind":"number","nativeSrc":"2070:2:33","nodeType":"YulLiteral","src":"2070:2:33","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"2055:3:33","nodeType":"YulIdentifier","src":"2055:3:33"},"nativeSrc":"2055:18:33","nodeType":"YulFunctionCall","src":"2055:18:33"}],"functionName":{"name":"calldataload","nativeSrc":"2042:12:33","nodeType":"YulIdentifier","src":"2042:12:33"},"nativeSrc":"2042:32:33","nodeType":"YulFunctionCall","src":"2042:32:33"},"variableNames":[{"name":"value","nativeSrc":"2033:5:33","nodeType":"YulIdentifier","src":"2033:5:33"}]},{"nativeSrc":"2083:15:33","nodeType":"YulAssignment","src":"2083:15:33","value":{"name":"value","nativeSrc":"2093:5:33","nodeType":"YulIdentifier","src":"2093:5:33"},"variableNames":[{"name":"value1","nativeSrc":"2083:6:33","nodeType":"YulIdentifier","src":"2083:6:33"}]}]},"name":"abi_decode_tuple_t_addresst_uint256","nativeSrc":"1804:300:33","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"1849:9:33","nodeType":"YulTypedName","src":"1849:9:33","type":""},{"name":"dataEnd","nativeSrc":"1860:7:33","nodeType":"YulTypedName","src":"1860:7:33","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"1872:6:33","nodeType":"YulTypedName","src":"1872:6:33","type":""},{"name":"value1","nativeSrc":"1880:6:33","nodeType":"YulTypedName","src":"1880:6:33","type":""}],"src":"1804:300:33"},{"body":{"nativeSrc":"2213:270:33","nodeType":"YulBlock","src":"2213:270:33","statements":[{"body":{"nativeSrc":"2259:16:33","nodeType":"YulBlock","src":"2259:16:33","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"2268:1:33","nodeType":"YulLiteral","src":"2268:1:33","type":"","value":"0"},{"kind":"number","nativeSrc":"2271:1:33","nodeType":"YulLiteral","src":"2271:1:33","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"2261:6:33","nodeType":"YulIdentifier","src":"2261:6:33"},"nativeSrc":"2261:12:33","nodeType":"YulFunctionCall","src":"2261:12:33"},"nativeSrc":"2261:12:33","nodeType":"YulExpressionStatement","src":"2261:12:33"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"2234:7:33","nodeType":"YulIdentifier","src":"2234:7:33"},{"name":"headStart","nativeSrc":"2243:9:33","nodeType":"YulIdentifier","src":"2243:9:33"}],"functionName":{"name":"sub","nativeSrc":"2230:3:33","nodeType":"YulIdentifier","src":"2230:3:33"},"nativeSrc":"2230:23:33","nodeType":"YulFunctionCall","src":"2230:23:33"},{"kind":"number","nativeSrc":"2255:2:33","nodeType":"YulLiteral","src":"2255:2:33","type":"","value":"96"}],"functionName":{"name":"slt","nativeSrc":"2226:3:33","nodeType":"YulIdentifier","src":"2226:3:33"},"nativeSrc":"2226:32:33","nodeType":"YulFunctionCall","src":"2226:32:33"},"nativeSrc":"2223:52:33","nodeType":"YulIf","src":"2223:52:33"},{"nativeSrc":"2284:39:33","nodeType":"YulAssignment","src":"2284:39:33","value":{"arguments":[{"name":"headStart","nativeSrc":"2313:9:33","nodeType":"YulIdentifier","src":"2313:9:33"}],"functionName":{"name":"abi_decode_address","nativeSrc":"2294:18:33","nodeType":"YulIdentifier","src":"2294:18:33"},"nativeSrc":"2294:29:33","nodeType":"YulFunctionCall","src":"2294:29:33"},"variableNames":[{"name":"value0","nativeSrc":"2284:6:33","nodeType":"YulIdentifier","src":"2284:6:33"}]},{"nativeSrc":"2332:48:33","nodeType":"YulAssignment","src":"2332:48:33","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"2365:9:33","nodeType":"YulIdentifier","src":"2365:9:33"},{"kind":"number","nativeSrc":"2376:2:33","nodeType":"YulLiteral","src":"2376:2:33","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"2361:3:33","nodeType":"YulIdentifier","src":"2361:3:33"},"nativeSrc":"2361:18:33","nodeType":"YulFunctionCall","src":"2361:18:33"}],"functionName":{"name":"abi_decode_address","nativeSrc":"2342:18:33","nodeType":"YulIdentifier","src":"2342:18:33"},"nativeSrc":"2342:38:33","nodeType":"YulFunctionCall","src":"2342:38:33"},"variableNames":[{"name":"value1","nativeSrc":"2332:6:33","nodeType":"YulIdentifier","src":"2332:6:33"}]},{"nativeSrc":"2389:14:33","nodeType":"YulVariableDeclaration","src":"2389:14:33","value":{"kind":"number","nativeSrc":"2402:1:33","nodeType":"YulLiteral","src":"2402:1:33","type":"","value":"0"},"variables":[{"name":"value","nativeSrc":"2393:5:33","nodeType":"YulTypedName","src":"2393:5:33","type":""}]},{"nativeSrc":"2412:41:33","nodeType":"YulAssignment","src":"2412:41:33","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"2438:9:33","nodeType":"YulIdentifier","src":"2438:9:33"},{"kind":"number","nativeSrc":"2449:2:33","nodeType":"YulLiteral","src":"2449:2:33","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"2434:3:33","nodeType":"YulIdentifier","src":"2434:3:33"},"nativeSrc":"2434:18:33","nodeType":"YulFunctionCall","src":"2434:18:33"}],"functionName":{"name":"calldataload","nativeSrc":"2421:12:33","nodeType":"YulIdentifier","src":"2421:12:33"},"nativeSrc":"2421:32:33","nodeType":"YulFunctionCall","src":"2421:32:33"},"variableNames":[{"name":"value","nativeSrc":"2412:5:33","nodeType":"YulIdentifier","src":"2412:5:33"}]},{"nativeSrc":"2462:15:33","nodeType":"YulAssignment","src":"2462:15:33","value":{"name":"value","nativeSrc":"2472:5:33","nodeType":"YulIdentifier","src":"2472:5:33"},"variableNames":[{"name":"value2","nativeSrc":"2462:6:33","nodeType":"YulIdentifier","src":"2462:6:33"}]}]},"name":"abi_decode_tuple_t_addresst_addresst_uint256","nativeSrc":"2109:374:33","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"2163:9:33","nodeType":"YulTypedName","src":"2163:9:33","type":""},{"name":"dataEnd","nativeSrc":"2174:7:33","nodeType":"YulTypedName","src":"2174:7:33","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"2186:6:33","nodeType":"YulTypedName","src":"2186:6:33","type":""},{"name":"value1","nativeSrc":"2194:6:33","nodeType":"YulTypedName","src":"2194:6:33","type":""},{"name":"value2","nativeSrc":"2202:6:33","nodeType":"YulTypedName","src":"2202:6:33","type":""}],"src":"2109:374:33"},{"body":{"nativeSrc":"2558:156:33","nodeType":"YulBlock","src":"2558:156:33","statements":[{"body":{"nativeSrc":"2604:16:33","nodeType":"YulBlock","src":"2604:16:33","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"2613:1:33","nodeType":"YulLiteral","src":"2613:1:33","type":"","value":"0"},{"kind":"number","nativeSrc":"2616:1:33","nodeType":"YulLiteral","src":"2616:1:33","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"2606:6:33","nodeType":"YulIdentifier","src":"2606:6:33"},"nativeSrc":"2606:12:33","nodeType":"YulFunctionCall","src":"2606:12:33"},"nativeSrc":"2606:12:33","nodeType":"YulExpressionStatement","src":"2606:12:33"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"2579:7:33","nodeType":"YulIdentifier","src":"2579:7:33"},{"name":"headStart","nativeSrc":"2588:9:33","nodeType":"YulIdentifier","src":"2588:9:33"}],"functionName":{"name":"sub","nativeSrc":"2575:3:33","nodeType":"YulIdentifier","src":"2575:3:33"},"nativeSrc":"2575:23:33","nodeType":"YulFunctionCall","src":"2575:23:33"},{"kind":"number","nativeSrc":"2600:2:33","nodeType":"YulLiteral","src":"2600:2:33","type":"","value":"32"}],"functionName":{"name":"slt","nativeSrc":"2571:3:33","nodeType":"YulIdentifier","src":"2571:3:33"},"nativeSrc":"2571:32:33","nodeType":"YulFunctionCall","src":"2571:32:33"},"nativeSrc":"2568:52:33","nodeType":"YulIf","src":"2568:52:33"},{"nativeSrc":"2629:14:33","nodeType":"YulVariableDeclaration","src":"2629:14:33","value":{"kind":"number","nativeSrc":"2642:1:33","nodeType":"YulLiteral","src":"2642:1:33","type":"","value":"0"},"variables":[{"name":"value","nativeSrc":"2633:5:33","nodeType":"YulTypedName","src":"2633:5:33","type":""}]},{"nativeSrc":"2652:32:33","nodeType":"YulAssignment","src":"2652:32:33","value":{"arguments":[{"name":"headStart","nativeSrc":"2674:9:33","nodeType":"YulIdentifier","src":"2674:9:33"}],"functionName":{"name":"calldataload","nativeSrc":"2661:12:33","nodeType":"YulIdentifier","src":"2661:12:33"},"nativeSrc":"2661:23:33","nodeType":"YulFunctionCall","src":"2661:23:33"},"variableNames":[{"name":"value","nativeSrc":"2652:5:33","nodeType":"YulIdentifier","src":"2652:5:33"}]},{"nativeSrc":"2693:15:33","nodeType":"YulAssignment","src":"2693:15:33","value":{"name":"value","nativeSrc":"2703:5:33","nodeType":"YulIdentifier","src":"2703:5:33"},"variableNames":[{"name":"value0","nativeSrc":"2693:6:33","nodeType":"YulIdentifier","src":"2693:6:33"}]}]},"name":"abi_decode_tuple_t_bytes32","nativeSrc":"2488:226:33","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"2524:9:33","nodeType":"YulTypedName","src":"2524:9:33","type":""},{"name":"dataEnd","nativeSrc":"2535:7:33","nodeType":"YulTypedName","src":"2535:7:33","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"2547:6:33","nodeType":"YulTypedName","src":"2547:6:33","type":""}],"src":"2488:226:33"},{"body":{"nativeSrc":"2820:76:33","nodeType":"YulBlock","src":"2820:76:33","statements":[{"nativeSrc":"2830:26:33","nodeType":"YulAssignment","src":"2830:26:33","value":{"arguments":[{"name":"headStart","nativeSrc":"2842:9:33","nodeType":"YulIdentifier","src":"2842:9:33"},{"kind":"number","nativeSrc":"2853:2:33","nodeType":"YulLiteral","src":"2853:2:33","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"2838:3:33","nodeType":"YulIdentifier","src":"2838:3:33"},"nativeSrc":"2838:18:33","nodeType":"YulFunctionCall","src":"2838:18:33"},"variableNames":[{"name":"tail","nativeSrc":"2830:4:33","nodeType":"YulIdentifier","src":"2830:4:33"}]},{"expression":{"arguments":[{"name":"headStart","nativeSrc":"2872:9:33","nodeType":"YulIdentifier","src":"2872:9:33"},{"name":"value0","nativeSrc":"2883:6:33","nodeType":"YulIdentifier","src":"2883:6:33"}],"functionName":{"name":"mstore","nativeSrc":"2865:6:33","nodeType":"YulIdentifier","src":"2865:6:33"},"nativeSrc":"2865:25:33","nodeType":"YulFunctionCall","src":"2865:25:33"},"nativeSrc":"2865:25:33","nodeType":"YulExpressionStatement","src":"2865:25:33"}]},"name":"abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed","nativeSrc":"2719:177:33","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"2789:9:33","nodeType":"YulTypedName","src":"2789:9:33","type":""},{"name":"value0","nativeSrc":"2800:6:33","nodeType":"YulTypedName","src":"2800:6:33","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"2811:4:33","nodeType":"YulTypedName","src":"2811:4:33","type":""}],"src":"2719:177:33"},{"body":{"nativeSrc":"2988:213:33","nodeType":"YulBlock","src":"2988:213:33","statements":[{"body":{"nativeSrc":"3034:16:33","nodeType":"YulBlock","src":"3034:16:33","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"3043:1:33","nodeType":"YulLiteral","src":"3043:1:33","type":"","value":"0"},{"kind":"number","nativeSrc":"3046:1:33","nodeType":"YulLiteral","src":"3046:1:33","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"3036:6:33","nodeType":"YulIdentifier","src":"3036:6:33"},"nativeSrc":"3036:12:33","nodeType":"YulFunctionCall","src":"3036:12:33"},"nativeSrc":"3036:12:33","nodeType":"YulExpressionStatement","src":"3036:12:33"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"3009:7:33","nodeType":"YulIdentifier","src":"3009:7:33"},{"name":"headStart","nativeSrc":"3018:9:33","nodeType":"YulIdentifier","src":"3018:9:33"}],"functionName":{"name":"sub","nativeSrc":"3005:3:33","nodeType":"YulIdentifier","src":"3005:3:33"},"nativeSrc":"3005:23:33","nodeType":"YulFunctionCall","src":"3005:23:33"},{"kind":"number","nativeSrc":"3030:2:33","nodeType":"YulLiteral","src":"3030:2:33","type":"","value":"64"}],"functionName":{"name":"slt","nativeSrc":"3001:3:33","nodeType":"YulIdentifier","src":"3001:3:33"},"nativeSrc":"3001:32:33","nodeType":"YulFunctionCall","src":"3001:32:33"},"nativeSrc":"2998:52:33","nodeType":"YulIf","src":"2998:52:33"},{"nativeSrc":"3059:14:33","nodeType":"YulVariableDeclaration","src":"3059:14:33","value":{"kind":"number","nativeSrc":"3072:1:33","nodeType":"YulLiteral","src":"3072:1:33","type":"","value":"0"},"variables":[{"name":"value","nativeSrc":"3063:5:33","nodeType":"YulTypedName","src":"3063:5:33","type":""}]},{"nativeSrc":"3082:32:33","nodeType":"YulAssignment","src":"3082:32:33","value":{"arguments":[{"name":"headStart","nativeSrc":"3104:9:33","nodeType":"YulIdentifier","src":"3104:9:33"}],"functionName":{"name":"calldataload","nativeSrc":"3091:12:33","nodeType":"YulIdentifier","src":"3091:12:33"},"nativeSrc":"3091:23:33","nodeType":"YulFunctionCall","src":"3091:23:33"},"variableNames":[{"name":"value","nativeSrc":"3082:5:33","nodeType":"YulIdentifier","src":"3082:5:33"}]},{"nativeSrc":"3123:15:33","nodeType":"YulAssignment","src":"3123:15:33","value":{"name":"value","nativeSrc":"3133:5:33","nodeType":"YulIdentifier","src":"3133:5:33"},"variableNames":[{"name":"value0","nativeSrc":"3123:6:33","nodeType":"YulIdentifier","src":"3123:6:33"}]},{"nativeSrc":"3147:48:33","nodeType":"YulAssignment","src":"3147:48:33","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"3180:9:33","nodeType":"YulIdentifier","src":"3180:9:33"},{"kind":"number","nativeSrc":"3191:2:33","nodeType":"YulLiteral","src":"3191:2:33","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"3176:3:33","nodeType":"YulIdentifier","src":"3176:3:33"},"nativeSrc":"3176:18:33","nodeType":"YulFunctionCall","src":"3176:18:33"}],"functionName":{"name":"abi_decode_address","nativeSrc":"3157:18:33","nodeType":"YulIdentifier","src":"3157:18:33"},"nativeSrc":"3157:38:33","nodeType":"YulFunctionCall","src":"3157:38:33"},"variableNames":[{"name":"value1","nativeSrc":"3147:6:33","nodeType":"YulIdentifier","src":"3147:6:33"}]}]},"name":"abi_decode_tuple_t_bytes32t_address","nativeSrc":"2901:300:33","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"2946:9:33","nodeType":"YulTypedName","src":"2946:9:33","type":""},{"name":"dataEnd","nativeSrc":"2957:7:33","nodeType":"YulTypedName","src":"2957:7:33","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"2969:6:33","nodeType":"YulTypedName","src":"2969:6:33","type":""},{"name":"value1","nativeSrc":"2977:6:33","nodeType":"YulTypedName","src":"2977:6:33","type":""}],"src":"2901:300:33"},{"body":{"nativeSrc":"3303:87:33","nodeType":"YulBlock","src":"3303:87:33","statements":[{"nativeSrc":"3313:26:33","nodeType":"YulAssignment","src":"3313:26:33","value":{"arguments":[{"name":"headStart","nativeSrc":"3325:9:33","nodeType":"YulIdentifier","src":"3325:9:33"},{"kind":"number","nativeSrc":"3336:2:33","nodeType":"YulLiteral","src":"3336:2:33","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"3321:3:33","nodeType":"YulIdentifier","src":"3321:3:33"},"nativeSrc":"3321:18:33","nodeType":"YulFunctionCall","src":"3321:18:33"},"variableNames":[{"name":"tail","nativeSrc":"3313:4:33","nodeType":"YulIdentifier","src":"3313:4:33"}]},{"expression":{"arguments":[{"name":"headStart","nativeSrc":"3355:9:33","nodeType":"YulIdentifier","src":"3355:9:33"},{"arguments":[{"name":"value0","nativeSrc":"3370:6:33","nodeType":"YulIdentifier","src":"3370:6:33"},{"kind":"number","nativeSrc":"3378:4:33","nodeType":"YulLiteral","src":"3378:4:33","type":"","value":"0xff"}],"functionName":{"name":"and","nativeSrc":"3366:3:33","nodeType":"YulIdentifier","src":"3366:3:33"},"nativeSrc":"3366:17:33","nodeType":"YulFunctionCall","src":"3366:17:33"}],"functionName":{"name":"mstore","nativeSrc":"3348:6:33","nodeType":"YulIdentifier","src":"3348:6:33"},"nativeSrc":"3348:36:33","nodeType":"YulFunctionCall","src":"3348:36:33"},"nativeSrc":"3348:36:33","nodeType":"YulExpressionStatement","src":"3348:36:33"}]},"name":"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed","nativeSrc":"3206:184:33","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"3272:9:33","nodeType":"YulTypedName","src":"3272:9:33","type":""},{"name":"value0","nativeSrc":"3283:6:33","nodeType":"YulTypedName","src":"3283:6:33","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"3294:4:33","nodeType":"YulTypedName","src":"3294:4:33","type":""}],"src":"3206:184:33"},{"body":{"nativeSrc":"3427:95:33","nodeType":"YulBlock","src":"3427:95:33","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"3444:1:33","nodeType":"YulLiteral","src":"3444:1:33","type":"","value":"0"},{"arguments":[{"kind":"number","nativeSrc":"3451:3:33","nodeType":"YulLiteral","src":"3451:3:33","type":"","value":"224"},{"kind":"number","nativeSrc":"3456:10:33","nodeType":"YulLiteral","src":"3456:10:33","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nativeSrc":"3447:3:33","nodeType":"YulIdentifier","src":"3447:3:33"},"nativeSrc":"3447:20:33","nodeType":"YulFunctionCall","src":"3447:20:33"}],"functionName":{"name":"mstore","nativeSrc":"3437:6:33","nodeType":"YulIdentifier","src":"3437:6:33"},"nativeSrc":"3437:31:33","nodeType":"YulFunctionCall","src":"3437:31:33"},"nativeSrc":"3437:31:33","nodeType":"YulExpressionStatement","src":"3437:31:33"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"3484:1:33","nodeType":"YulLiteral","src":"3484:1:33","type":"","value":"4"},{"kind":"number","nativeSrc":"3487:4:33","nodeType":"YulLiteral","src":"3487:4:33","type":"","value":"0x41"}],"functionName":{"name":"mstore","nativeSrc":"3477:6:33","nodeType":"YulIdentifier","src":"3477:6:33"},"nativeSrc":"3477:15:33","nodeType":"YulFunctionCall","src":"3477:15:33"},"nativeSrc":"3477:15:33","nodeType":"YulExpressionStatement","src":"3477:15:33"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"3508:1:33","nodeType":"YulLiteral","src":"3508:1:33","type":"","value":"0"},{"kind":"number","nativeSrc":"3511:4:33","nodeType":"YulLiteral","src":"3511:4:33","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"3501:6:33","nodeType":"YulIdentifier","src":"3501:6:33"},"nativeSrc":"3501:15:33","nodeType":"YulFunctionCall","src":"3501:15:33"},"nativeSrc":"3501:15:33","nodeType":"YulExpressionStatement","src":"3501:15:33"}]},"name":"panic_error_0x41","nativeSrc":"3395:127:33","nodeType":"YulFunctionDefinition","src":"3395:127:33"},{"body":{"nativeSrc":"3623:922:33","nodeType":"YulBlock","src":"3623:922:33","statements":[{"body":{"nativeSrc":"3669:16:33","nodeType":"YulBlock","src":"3669:16:33","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"3678:1:33","nodeType":"YulLiteral","src":"3678:1:33","type":"","value":"0"},{"kind":"number","nativeSrc":"3681:1:33","nodeType":"YulLiteral","src":"3681:1:33","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"3671:6:33","nodeType":"YulIdentifier","src":"3671:6:33"},"nativeSrc":"3671:12:33","nodeType":"YulFunctionCall","src":"3671:12:33"},"nativeSrc":"3671:12:33","nodeType":"YulExpressionStatement","src":"3671:12:33"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"3644:7:33","nodeType":"YulIdentifier","src":"3644:7:33"},{"name":"headStart","nativeSrc":"3653:9:33","nodeType":"YulIdentifier","src":"3653:9:33"}],"functionName":{"name":"sub","nativeSrc":"3640:3:33","nodeType":"YulIdentifier","src":"3640:3:33"},"nativeSrc":"3640:23:33","nodeType":"YulFunctionCall","src":"3640:23:33"},{"kind":"number","nativeSrc":"3665:2:33","nodeType":"YulLiteral","src":"3665:2:33","type":"","value":"64"}],"functionName":{"name":"slt","nativeSrc":"3636:3:33","nodeType":"YulIdentifier","src":"3636:3:33"},"nativeSrc":"3636:32:33","nodeType":"YulFunctionCall","src":"3636:32:33"},"nativeSrc":"3633:52:33","nodeType":"YulIf","src":"3633:52:33"},{"nativeSrc":"3694:39:33","nodeType":"YulAssignment","src":"3694:39:33","value":{"arguments":[{"name":"headStart","nativeSrc":"3723:9:33","nodeType":"YulIdentifier","src":"3723:9:33"}],"functionName":{"name":"abi_decode_address","nativeSrc":"3704:18:33","nodeType":"YulIdentifier","src":"3704:18:33"},"nativeSrc":"3704:29:33","nodeType":"YulFunctionCall","src":"3704:29:33"},"variableNames":[{"name":"value0","nativeSrc":"3694:6:33","nodeType":"YulIdentifier","src":"3694:6:33"}]},{"nativeSrc":"3742:46:33","nodeType":"YulVariableDeclaration","src":"3742:46:33","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"3773:9:33","nodeType":"YulIdentifier","src":"3773:9:33"},{"kind":"number","nativeSrc":"3784:2:33","nodeType":"YulLiteral","src":"3784:2:33","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"3769:3:33","nodeType":"YulIdentifier","src":"3769:3:33"},"nativeSrc":"3769:18:33","nodeType":"YulFunctionCall","src":"3769:18:33"}],"functionName":{"name":"calldataload","nativeSrc":"3756:12:33","nodeType":"YulIdentifier","src":"3756:12:33"},"nativeSrc":"3756:32:33","nodeType":"YulFunctionCall","src":"3756:32:33"},"variables":[{"name":"offset","nativeSrc":"3746:6:33","nodeType":"YulTypedName","src":"3746:6:33","type":""}]},{"body":{"nativeSrc":"3831:16:33","nodeType":"YulBlock","src":"3831:16:33","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"3840:1:33","nodeType":"YulLiteral","src":"3840:1:33","type":"","value":"0"},{"kind":"number","nativeSrc":"3843:1:33","nodeType":"YulLiteral","src":"3843:1:33","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"3833:6:33","nodeType":"YulIdentifier","src":"3833:6:33"},"nativeSrc":"3833:12:33","nodeType":"YulFunctionCall","src":"3833:12:33"},"nativeSrc":"3833:12:33","nodeType":"YulExpressionStatement","src":"3833:12:33"}]},"condition":{"arguments":[{"name":"offset","nativeSrc":"3803:6:33","nodeType":"YulIdentifier","src":"3803:6:33"},{"kind":"number","nativeSrc":"3811:18:33","nodeType":"YulLiteral","src":"3811:18:33","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nativeSrc":"3800:2:33","nodeType":"YulIdentifier","src":"3800:2:33"},"nativeSrc":"3800:30:33","nodeType":"YulFunctionCall","src":"3800:30:33"},"nativeSrc":"3797:50:33","nodeType":"YulIf","src":"3797:50:33"},{"nativeSrc":"3856:32:33","nodeType":"YulVariableDeclaration","src":"3856:32:33","value":{"arguments":[{"name":"headStart","nativeSrc":"3870:9:33","nodeType":"YulIdentifier","src":"3870:9:33"},{"name":"offset","nativeSrc":"3881:6:33","nodeType":"YulIdentifier","src":"3881:6:33"}],"functionName":{"name":"add","nativeSrc":"3866:3:33","nodeType":"YulIdentifier","src":"3866:3:33"},"nativeSrc":"3866:22:33","nodeType":"YulFunctionCall","src":"3866:22:33"},"variables":[{"name":"_1","nativeSrc":"3860:2:33","nodeType":"YulTypedName","src":"3860:2:33","type":""}]},{"body":{"nativeSrc":"3936:16:33","nodeType":"YulBlock","src":"3936:16:33","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"3945:1:33","nodeType":"YulLiteral","src":"3945:1:33","type":"","value":"0"},{"kind":"number","nativeSrc":"3948:1:33","nodeType":"YulLiteral","src":"3948:1:33","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"3938:6:33","nodeType":"YulIdentifier","src":"3938:6:33"},"nativeSrc":"3938:12:33","nodeType":"YulFunctionCall","src":"3938:12:33"},"nativeSrc":"3938:12:33","nodeType":"YulExpressionStatement","src":"3938:12:33"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"_1","nativeSrc":"3915:2:33","nodeType":"YulIdentifier","src":"3915:2:33"},{"kind":"number","nativeSrc":"3919:4:33","nodeType":"YulLiteral","src":"3919:4:33","type":"","value":"0x1f"}],"functionName":{"name":"add","nativeSrc":"3911:3:33","nodeType":"YulIdentifier","src":"3911:3:33"},"nativeSrc":"3911:13:33","nodeType":"YulFunctionCall","src":"3911:13:33"},{"name":"dataEnd","nativeSrc":"3926:7:33","nodeType":"YulIdentifier","src":"3926:7:33"}],"functionName":{"name":"slt","nativeSrc":"3907:3:33","nodeType":"YulIdentifier","src":"3907:3:33"},"nativeSrc":"3907:27:33","nodeType":"YulFunctionCall","src":"3907:27:33"}],"functionName":{"name":"iszero","nativeSrc":"3900:6:33","nodeType":"YulIdentifier","src":"3900:6:33"},"nativeSrc":"3900:35:33","nodeType":"YulFunctionCall","src":"3900:35:33"},"nativeSrc":"3897:55:33","nodeType":"YulIf","src":"3897:55:33"},{"nativeSrc":"3961:30:33","nodeType":"YulVariableDeclaration","src":"3961:30:33","value":{"arguments":[{"name":"_1","nativeSrc":"3988:2:33","nodeType":"YulIdentifier","src":"3988:2:33"}],"functionName":{"name":"calldataload","nativeSrc":"3975:12:33","nodeType":"YulIdentifier","src":"3975:12:33"},"nativeSrc":"3975:16:33","nodeType":"YulFunctionCall","src":"3975:16:33"},"variables":[{"name":"length","nativeSrc":"3965:6:33","nodeType":"YulTypedName","src":"3965:6:33","type":""}]},{"body":{"nativeSrc":"4034:22:33","nodeType":"YulBlock","src":"4034:22:33","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nativeSrc":"4036:16:33","nodeType":"YulIdentifier","src":"4036:16:33"},"nativeSrc":"4036:18:33","nodeType":"YulFunctionCall","src":"4036:18:33"},"nativeSrc":"4036:18:33","nodeType":"YulExpressionStatement","src":"4036:18:33"}]},"condition":{"arguments":[{"name":"length","nativeSrc":"4006:6:33","nodeType":"YulIdentifier","src":"4006:6:33"},{"kind":"number","nativeSrc":"4014:18:33","nodeType":"YulLiteral","src":"4014:18:33","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nativeSrc":"4003:2:33","nodeType":"YulIdentifier","src":"4003:2:33"},"nativeSrc":"4003:30:33","nodeType":"YulFunctionCall","src":"4003:30:33"},"nativeSrc":"4000:56:33","nodeType":"YulIf","src":"4000:56:33"},{"nativeSrc":"4065:23:33","nodeType":"YulVariableDeclaration","src":"4065:23:33","value":{"arguments":[{"kind":"number","nativeSrc":"4085:2:33","nodeType":"YulLiteral","src":"4085:2:33","type":"","value":"64"}],"functionName":{"name":"mload","nativeSrc":"4079:5:33","nodeType":"YulIdentifier","src":"4079:5:33"},"nativeSrc":"4079:9:33","nodeType":"YulFunctionCall","src":"4079:9:33"},"variables":[{"name":"memPtr","nativeSrc":"4069:6:33","nodeType":"YulTypedName","src":"4069:6:33","type":""}]},{"nativeSrc":"4097:85:33","nodeType":"YulVariableDeclaration","src":"4097:85:33","value":{"arguments":[{"name":"memPtr","nativeSrc":"4119:6:33","nodeType":"YulIdentifier","src":"4119:6:33"},{"arguments":[{"arguments":[{"arguments":[{"arguments":[{"name":"length","nativeSrc":"4143:6:33","nodeType":"YulIdentifier","src":"4143:6:33"},{"kind":"number","nativeSrc":"4151:4:33","nodeType":"YulLiteral","src":"4151:4:33","type":"","value":"0x1f"}],"functionName":{"name":"add","nativeSrc":"4139:3:33","nodeType":"YulIdentifier","src":"4139:3:33"},"nativeSrc":"4139:17:33","nodeType":"YulFunctionCall","src":"4139:17:33"},{"arguments":[{"kind":"number","nativeSrc":"4162:2:33","nodeType":"YulLiteral","src":"4162:2:33","type":"","value":"31"}],"functionName":{"name":"not","nativeSrc":"4158:3:33","nodeType":"YulIdentifier","src":"4158:3:33"},"nativeSrc":"4158:7:33","nodeType":"YulFunctionCall","src":"4158:7:33"}],"functionName":{"name":"and","nativeSrc":"4135:3:33","nodeType":"YulIdentifier","src":"4135:3:33"},"nativeSrc":"4135:31:33","nodeType":"YulFunctionCall","src":"4135:31:33"},{"kind":"number","nativeSrc":"4168:2:33","nodeType":"YulLiteral","src":"4168:2:33","type":"","value":"63"}],"functionName":{"name":"add","nativeSrc":"4131:3:33","nodeType":"YulIdentifier","src":"4131:3:33"},"nativeSrc":"4131:40:33","nodeType":"YulFunctionCall","src":"4131:40:33"},{"arguments":[{"kind":"number","nativeSrc":"4177:2:33","nodeType":"YulLiteral","src":"4177:2:33","type":"","value":"31"}],"functionName":{"name":"not","nativeSrc":"4173:3:33","nodeType":"YulIdentifier","src":"4173:3:33"},"nativeSrc":"4173:7:33","nodeType":"YulFunctionCall","src":"4173:7:33"}],"functionName":{"name":"and","nativeSrc":"4127:3:33","nodeType":"YulIdentifier","src":"4127:3:33"},"nativeSrc":"4127:54:33","nodeType":"YulFunctionCall","src":"4127:54:33"}],"functionName":{"name":"add","nativeSrc":"4115:3:33","nodeType":"YulIdentifier","src":"4115:3:33"},"nativeSrc":"4115:67:33","nodeType":"YulFunctionCall","src":"4115:67:33"},"variables":[{"name":"newFreePtr","nativeSrc":"4101:10:33","nodeType":"YulTypedName","src":"4101:10:33","type":""}]},{"body":{"nativeSrc":"4257:22:33","nodeType":"YulBlock","src":"4257:22:33","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nativeSrc":"4259:16:33","nodeType":"YulIdentifier","src":"4259:16:33"},"nativeSrc":"4259:18:33","nodeType":"YulFunctionCall","src":"4259:18:33"},"nativeSrc":"4259:18:33","nodeType":"YulExpressionStatement","src":"4259:18:33"}]},"condition":{"arguments":[{"arguments":[{"name":"newFreePtr","nativeSrc":"4200:10:33","nodeType":"YulIdentifier","src":"4200:10:33"},{"kind":"number","nativeSrc":"4212:18:33","nodeType":"YulLiteral","src":"4212:18:33","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nativeSrc":"4197:2:33","nodeType":"YulIdentifier","src":"4197:2:33"},"nativeSrc":"4197:34:33","nodeType":"YulFunctionCall","src":"4197:34:33"},{"arguments":[{"name":"newFreePtr","nativeSrc":"4236:10:33","nodeType":"YulIdentifier","src":"4236:10:33"},{"name":"memPtr","nativeSrc":"4248:6:33","nodeType":"YulIdentifier","src":"4248:6:33"}],"functionName":{"name":"lt","nativeSrc":"4233:2:33","nodeType":"YulIdentifier","src":"4233:2:33"},"nativeSrc":"4233:22:33","nodeType":"YulFunctionCall","src":"4233:22:33"}],"functionName":{"name":"or","nativeSrc":"4194:2:33","nodeType":"YulIdentifier","src":"4194:2:33"},"nativeSrc":"4194:62:33","nodeType":"YulFunctionCall","src":"4194:62:33"},"nativeSrc":"4191:88:33","nodeType":"YulIf","src":"4191:88:33"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"4295:2:33","nodeType":"YulLiteral","src":"4295:2:33","type":"","value":"64"},{"name":"newFreePtr","nativeSrc":"4299:10:33","nodeType":"YulIdentifier","src":"4299:10:33"}],"functionName":{"name":"mstore","nativeSrc":"4288:6:33","nodeType":"YulIdentifier","src":"4288:6:33"},"nativeSrc":"4288:22:33","nodeType":"YulFunctionCall","src":"4288:22:33"},"nativeSrc":"4288:22:33","nodeType":"YulExpressionStatement","src":"4288:22:33"},{"expression":{"arguments":[{"name":"memPtr","nativeSrc":"4326:6:33","nodeType":"YulIdentifier","src":"4326:6:33"},{"name":"length","nativeSrc":"4334:6:33","nodeType":"YulIdentifier","src":"4334:6:33"}],"functionName":{"name":"mstore","nativeSrc":"4319:6:33","nodeType":"YulIdentifier","src":"4319:6:33"},"nativeSrc":"4319:22:33","nodeType":"YulFunctionCall","src":"4319:22:33"},"nativeSrc":"4319:22:33","nodeType":"YulExpressionStatement","src":"4319:22:33"},{"body":{"nativeSrc":"4391:16:33","nodeType":"YulBlock","src":"4391:16:33","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"4400:1:33","nodeType":"YulLiteral","src":"4400:1:33","type":"","value":"0"},{"kind":"number","nativeSrc":"4403:1:33","nodeType":"YulLiteral","src":"4403:1:33","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"4393:6:33","nodeType":"YulIdentifier","src":"4393:6:33"},"nativeSrc":"4393:12:33","nodeType":"YulFunctionCall","src":"4393:12:33"},"nativeSrc":"4393:12:33","nodeType":"YulExpressionStatement","src":"4393:12:33"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"_1","nativeSrc":"4364:2:33","nodeType":"YulIdentifier","src":"4364:2:33"},{"name":"length","nativeSrc":"4368:6:33","nodeType":"YulIdentifier","src":"4368:6:33"}],"functionName":{"name":"add","nativeSrc":"4360:3:33","nodeType":"YulIdentifier","src":"4360:3:33"},"nativeSrc":"4360:15:33","nodeType":"YulFunctionCall","src":"4360:15:33"},{"kind":"number","nativeSrc":"4377:2:33","nodeType":"YulLiteral","src":"4377:2:33","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"4356:3:33","nodeType":"YulIdentifier","src":"4356:3:33"},"nativeSrc":"4356:24:33","nodeType":"YulFunctionCall","src":"4356:24:33"},{"name":"dataEnd","nativeSrc":"4382:7:33","nodeType":"YulIdentifier","src":"4382:7:33"}],"functionName":{"name":"gt","nativeSrc":"4353:2:33","nodeType":"YulIdentifier","src":"4353:2:33"},"nativeSrc":"4353:37:33","nodeType":"YulFunctionCall","src":"4353:37:33"},"nativeSrc":"4350:57:33","nodeType":"YulIf","src":"4350:57:33"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nativeSrc":"4433:6:33","nodeType":"YulIdentifier","src":"4433:6:33"},{"kind":"number","nativeSrc":"4441:2:33","nodeType":"YulLiteral","src":"4441:2:33","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"4429:3:33","nodeType":"YulIdentifier","src":"4429:3:33"},"nativeSrc":"4429:15:33","nodeType":"YulFunctionCall","src":"4429:15:33"},{"arguments":[{"name":"_1","nativeSrc":"4450:2:33","nodeType":"YulIdentifier","src":"4450:2:33"},{"kind":"number","nativeSrc":"4454:2:33","nodeType":"YulLiteral","src":"4454:2:33","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"4446:3:33","nodeType":"YulIdentifier","src":"4446:3:33"},"nativeSrc":"4446:11:33","nodeType":"YulFunctionCall","src":"4446:11:33"},{"name":"length","nativeSrc":"4459:6:33","nodeType":"YulIdentifier","src":"4459:6:33"}],"functionName":{"name":"calldatacopy","nativeSrc":"4416:12:33","nodeType":"YulIdentifier","src":"4416:12:33"},"nativeSrc":"4416:50:33","nodeType":"YulFunctionCall","src":"4416:50:33"},"nativeSrc":"4416:50:33","nodeType":"YulExpressionStatement","src":"4416:50:33"},{"expression":{"arguments":[{"arguments":[{"arguments":[{"name":"memPtr","nativeSrc":"4490:6:33","nodeType":"YulIdentifier","src":"4490:6:33"},{"name":"length","nativeSrc":"4498:6:33","nodeType":"YulIdentifier","src":"4498:6:33"}],"functionName":{"name":"add","nativeSrc":"4486:3:33","nodeType":"YulIdentifier","src":"4486:3:33"},"nativeSrc":"4486:19:33","nodeType":"YulFunctionCall","src":"4486:19:33"},{"kind":"number","nativeSrc":"4507:2:33","nodeType":"YulLiteral","src":"4507:2:33","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"4482:3:33","nodeType":"YulIdentifier","src":"4482:3:33"},"nativeSrc":"4482:28:33","nodeType":"YulFunctionCall","src":"4482:28:33"},{"kind":"number","nativeSrc":"4512:1:33","nodeType":"YulLiteral","src":"4512:1:33","type":"","value":"0"}],"functionName":{"name":"mstore","nativeSrc":"4475:6:33","nodeType":"YulIdentifier","src":"4475:6:33"},"nativeSrc":"4475:39:33","nodeType":"YulFunctionCall","src":"4475:39:33"},"nativeSrc":"4475:39:33","nodeType":"YulExpressionStatement","src":"4475:39:33"},{"nativeSrc":"4523:16:33","nodeType":"YulAssignment","src":"4523:16:33","value":{"name":"memPtr","nativeSrc":"4533:6:33","nodeType":"YulIdentifier","src":"4533:6:33"},"variableNames":[{"name":"value1","nativeSrc":"4523:6:33","nodeType":"YulIdentifier","src":"4523:6:33"}]}]},"name":"abi_decode_tuple_t_addresst_bytes_memory_ptr","nativeSrc":"3527:1018:33","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"3581:9:33","nodeType":"YulTypedName","src":"3581:9:33","type":""},{"name":"dataEnd","nativeSrc":"3592:7:33","nodeType":"YulTypedName","src":"3592:7:33","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"3604:6:33","nodeType":"YulTypedName","src":"3604:6:33","type":""},{"name":"value1","nativeSrc":"3612:6:33","nodeType":"YulTypedName","src":"3612:6:33","type":""}],"src":"3527:1018:33"},{"body":{"nativeSrc":"4634:283:33","nodeType":"YulBlock","src":"4634:283:33","statements":[{"body":{"nativeSrc":"4683:16:33","nodeType":"YulBlock","src":"4683:16:33","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"4692:1:33","nodeType":"YulLiteral","src":"4692:1:33","type":"","value":"0"},{"kind":"number","nativeSrc":"4695:1:33","nodeType":"YulLiteral","src":"4695:1:33","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"4685:6:33","nodeType":"YulIdentifier","src":"4685:6:33"},"nativeSrc":"4685:12:33","nodeType":"YulFunctionCall","src":"4685:12:33"},"nativeSrc":"4685:12:33","nodeType":"YulExpressionStatement","src":"4685:12:33"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nativeSrc":"4662:6:33","nodeType":"YulIdentifier","src":"4662:6:33"},{"kind":"number","nativeSrc":"4670:4:33","nodeType":"YulLiteral","src":"4670:4:33","type":"","value":"0x1f"}],"functionName":{"name":"add","nativeSrc":"4658:3:33","nodeType":"YulIdentifier","src":"4658:3:33"},"nativeSrc":"4658:17:33","nodeType":"YulFunctionCall","src":"4658:17:33"},{"name":"end","nativeSrc":"4677:3:33","nodeType":"YulIdentifier","src":"4677:3:33"}],"functionName":{"name":"slt","nativeSrc":"4654:3:33","nodeType":"YulIdentifier","src":"4654:3:33"},"nativeSrc":"4654:27:33","nodeType":"YulFunctionCall","src":"4654:27:33"}],"functionName":{"name":"iszero","nativeSrc":"4647:6:33","nodeType":"YulIdentifier","src":"4647:6:33"},"nativeSrc":"4647:35:33","nodeType":"YulFunctionCall","src":"4647:35:33"},"nativeSrc":"4644:55:33","nodeType":"YulIf","src":"4644:55:33"},{"nativeSrc":"4708:30:33","nodeType":"YulAssignment","src":"4708:30:33","value":{"arguments":[{"name":"offset","nativeSrc":"4731:6:33","nodeType":"YulIdentifier","src":"4731:6:33"}],"functionName":{"name":"calldataload","nativeSrc":"4718:12:33","nodeType":"YulIdentifier","src":"4718:12:33"},"nativeSrc":"4718:20:33","nodeType":"YulFunctionCall","src":"4718:20:33"},"variableNames":[{"name":"length","nativeSrc":"4708:6:33","nodeType":"YulIdentifier","src":"4708:6:33"}]},{"body":{"nativeSrc":"4781:16:33","nodeType":"YulBlock","src":"4781:16:33","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"4790:1:33","nodeType":"YulLiteral","src":"4790:1:33","type":"","value":"0"},{"kind":"number","nativeSrc":"4793:1:33","nodeType":"YulLiteral","src":"4793:1:33","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"4783:6:33","nodeType":"YulIdentifier","src":"4783:6:33"},"nativeSrc":"4783:12:33","nodeType":"YulFunctionCall","src":"4783:12:33"},"nativeSrc":"4783:12:33","nodeType":"YulExpressionStatement","src":"4783:12:33"}]},"condition":{"arguments":[{"name":"length","nativeSrc":"4753:6:33","nodeType":"YulIdentifier","src":"4753:6:33"},{"kind":"number","nativeSrc":"4761:18:33","nodeType":"YulLiteral","src":"4761:18:33","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nativeSrc":"4750:2:33","nodeType":"YulIdentifier","src":"4750:2:33"},"nativeSrc":"4750:30:33","nodeType":"YulFunctionCall","src":"4750:30:33"},"nativeSrc":"4747:50:33","nodeType":"YulIf","src":"4747:50:33"},{"nativeSrc":"4806:29:33","nodeType":"YulAssignment","src":"4806:29:33","value":{"arguments":[{"name":"offset","nativeSrc":"4822:6:33","nodeType":"YulIdentifier","src":"4822:6:33"},{"kind":"number","nativeSrc":"4830:4:33","nodeType":"YulLiteral","src":"4830:4:33","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"4818:3:33","nodeType":"YulIdentifier","src":"4818:3:33"},"nativeSrc":"4818:17:33","nodeType":"YulFunctionCall","src":"4818:17:33"},"variableNames":[{"name":"arrayPos","nativeSrc":"4806:8:33","nodeType":"YulIdentifier","src":"4806:8:33"}]},{"body":{"nativeSrc":"4895:16:33","nodeType":"YulBlock","src":"4895:16:33","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"4904:1:33","nodeType":"YulLiteral","src":"4904:1:33","type":"","value":"0"},{"kind":"number","nativeSrc":"4907:1:33","nodeType":"YulLiteral","src":"4907:1:33","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"4897:6:33","nodeType":"YulIdentifier","src":"4897:6:33"},"nativeSrc":"4897:12:33","nodeType":"YulFunctionCall","src":"4897:12:33"},"nativeSrc":"4897:12:33","nodeType":"YulExpressionStatement","src":"4897:12:33"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nativeSrc":"4858:6:33","nodeType":"YulIdentifier","src":"4858:6:33"},{"arguments":[{"kind":"number","nativeSrc":"4870:1:33","nodeType":"YulLiteral","src":"4870:1:33","type":"","value":"5"},{"name":"length","nativeSrc":"4873:6:33","nodeType":"YulIdentifier","src":"4873:6:33"}],"functionName":{"name":"shl","nativeSrc":"4866:3:33","nodeType":"YulIdentifier","src":"4866:3:33"},"nativeSrc":"4866:14:33","nodeType":"YulFunctionCall","src":"4866:14:33"}],"functionName":{"name":"add","nativeSrc":"4854:3:33","nodeType":"YulIdentifier","src":"4854:3:33"},"nativeSrc":"4854:27:33","nodeType":"YulFunctionCall","src":"4854:27:33"},{"kind":"number","nativeSrc":"4883:4:33","nodeType":"YulLiteral","src":"4883:4:33","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"4850:3:33","nodeType":"YulIdentifier","src":"4850:3:33"},"nativeSrc":"4850:38:33","nodeType":"YulFunctionCall","src":"4850:38:33"},{"name":"end","nativeSrc":"4890:3:33","nodeType":"YulIdentifier","src":"4890:3:33"}],"functionName":{"name":"gt","nativeSrc":"4847:2:33","nodeType":"YulIdentifier","src":"4847:2:33"},"nativeSrc":"4847:47:33","nodeType":"YulFunctionCall","src":"4847:47:33"},"nativeSrc":"4844:67:33","nodeType":"YulIf","src":"4844:67:33"}]},"name":"abi_decode_array_address_dyn_calldata","nativeSrc":"4550:367:33","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"4597:6:33","nodeType":"YulTypedName","src":"4597:6:33","type":""},{"name":"end","nativeSrc":"4605:3:33","nodeType":"YulTypedName","src":"4605:3:33","type":""}],"returnVariables":[{"name":"arrayPos","nativeSrc":"4613:8:33","nodeType":"YulTypedName","src":"4613:8:33","type":""},{"name":"length","nativeSrc":"4623:6:33","nodeType":"YulTypedName","src":"4623:6:33","type":""}],"src":"4550:367:33"},{"body":{"nativeSrc":"5027:332:33","nodeType":"YulBlock","src":"5027:332:33","statements":[{"body":{"nativeSrc":"5073:16:33","nodeType":"YulBlock","src":"5073:16:33","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"5082:1:33","nodeType":"YulLiteral","src":"5082:1:33","type":"","value":"0"},{"kind":"number","nativeSrc":"5085:1:33","nodeType":"YulLiteral","src":"5085:1:33","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"5075:6:33","nodeType":"YulIdentifier","src":"5075:6:33"},"nativeSrc":"5075:12:33","nodeType":"YulFunctionCall","src":"5075:12:33"},"nativeSrc":"5075:12:33","nodeType":"YulExpressionStatement","src":"5075:12:33"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"5048:7:33","nodeType":"YulIdentifier","src":"5048:7:33"},{"name":"headStart","nativeSrc":"5057:9:33","nodeType":"YulIdentifier","src":"5057:9:33"}],"functionName":{"name":"sub","nativeSrc":"5044:3:33","nodeType":"YulIdentifier","src":"5044:3:33"},"nativeSrc":"5044:23:33","nodeType":"YulFunctionCall","src":"5044:23:33"},{"kind":"number","nativeSrc":"5069:2:33","nodeType":"YulLiteral","src":"5069:2:33","type":"","value":"32"}],"functionName":{"name":"slt","nativeSrc":"5040:3:33","nodeType":"YulIdentifier","src":"5040:3:33"},"nativeSrc":"5040:32:33","nodeType":"YulFunctionCall","src":"5040:32:33"},"nativeSrc":"5037:52:33","nodeType":"YulIf","src":"5037:52:33"},{"nativeSrc":"5098:37:33","nodeType":"YulVariableDeclaration","src":"5098:37:33","value":{"arguments":[{"name":"headStart","nativeSrc":"5125:9:33","nodeType":"YulIdentifier","src":"5125:9:33"}],"functionName":{"name":"calldataload","nativeSrc":"5112:12:33","nodeType":"YulIdentifier","src":"5112:12:33"},"nativeSrc":"5112:23:33","nodeType":"YulFunctionCall","src":"5112:23:33"},"variables":[{"name":"offset","nativeSrc":"5102:6:33","nodeType":"YulTypedName","src":"5102:6:33","type":""}]},{"body":{"nativeSrc":"5178:16:33","nodeType":"YulBlock","src":"5178:16:33","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"5187:1:33","nodeType":"YulLiteral","src":"5187:1:33","type":"","value":"0"},{"kind":"number","nativeSrc":"5190:1:33","nodeType":"YulLiteral","src":"5190:1:33","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"5180:6:33","nodeType":"YulIdentifier","src":"5180:6:33"},"nativeSrc":"5180:12:33","nodeType":"YulFunctionCall","src":"5180:12:33"},"nativeSrc":"5180:12:33","nodeType":"YulExpressionStatement","src":"5180:12:33"}]},"condition":{"arguments":[{"name":"offset","nativeSrc":"5150:6:33","nodeType":"YulIdentifier","src":"5150:6:33"},{"kind":"number","nativeSrc":"5158:18:33","nodeType":"YulLiteral","src":"5158:18:33","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nativeSrc":"5147:2:33","nodeType":"YulIdentifier","src":"5147:2:33"},"nativeSrc":"5147:30:33","nodeType":"YulFunctionCall","src":"5147:30:33"},"nativeSrc":"5144:50:33","nodeType":"YulIf","src":"5144:50:33"},{"nativeSrc":"5203:96:33","nodeType":"YulVariableDeclaration","src":"5203:96:33","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"5271:9:33","nodeType":"YulIdentifier","src":"5271:9:33"},{"name":"offset","nativeSrc":"5282:6:33","nodeType":"YulIdentifier","src":"5282:6:33"}],"functionName":{"name":"add","nativeSrc":"5267:3:33","nodeType":"YulIdentifier","src":"5267:3:33"},"nativeSrc":"5267:22:33","nodeType":"YulFunctionCall","src":"5267:22:33"},{"name":"dataEnd","nativeSrc":"5291:7:33","nodeType":"YulIdentifier","src":"5291:7:33"}],"functionName":{"name":"abi_decode_array_address_dyn_calldata","nativeSrc":"5229:37:33","nodeType":"YulIdentifier","src":"5229:37:33"},"nativeSrc":"5229:70:33","nodeType":"YulFunctionCall","src":"5229:70:33"},"variables":[{"name":"value0_1","nativeSrc":"5207:8:33","nodeType":"YulTypedName","src":"5207:8:33","type":""},{"name":"value1_1","nativeSrc":"5217:8:33","nodeType":"YulTypedName","src":"5217:8:33","type":""}]},{"nativeSrc":"5308:18:33","nodeType":"YulAssignment","src":"5308:18:33","value":{"name":"value0_1","nativeSrc":"5318:8:33","nodeType":"YulIdentifier","src":"5318:8:33"},"variableNames":[{"name":"value0","nativeSrc":"5308:6:33","nodeType":"YulIdentifier","src":"5308:6:33"}]},{"nativeSrc":"5335:18:33","nodeType":"YulAssignment","src":"5335:18:33","value":{"name":"value1_1","nativeSrc":"5345:8:33","nodeType":"YulIdentifier","src":"5345:8:33"},"variableNames":[{"name":"value1","nativeSrc":"5335:6:33","nodeType":"YulIdentifier","src":"5335:6:33"}]}]},"name":"abi_decode_tuple_t_array$_t_address_$dyn_calldata_ptr","nativeSrc":"4922:437:33","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"4985:9:33","nodeType":"YulTypedName","src":"4985:9:33","type":""},{"name":"dataEnd","nativeSrc":"4996:7:33","nodeType":"YulTypedName","src":"4996:7:33","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"5008:6:33","nodeType":"YulTypedName","src":"5008:6:33","type":""},{"name":"value1","nativeSrc":"5016:6:33","nodeType":"YulTypedName","src":"5016:6:33","type":""}],"src":"4922:437:33"},{"body":{"nativeSrc":"5434:156:33","nodeType":"YulBlock","src":"5434:156:33","statements":[{"body":{"nativeSrc":"5480:16:33","nodeType":"YulBlock","src":"5480:16:33","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"5489:1:33","nodeType":"YulLiteral","src":"5489:1:33","type":"","value":"0"},{"kind":"number","nativeSrc":"5492:1:33","nodeType":"YulLiteral","src":"5492:1:33","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"5482:6:33","nodeType":"YulIdentifier","src":"5482:6:33"},"nativeSrc":"5482:12:33","nodeType":"YulFunctionCall","src":"5482:12:33"},"nativeSrc":"5482:12:33","nodeType":"YulExpressionStatement","src":"5482:12:33"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"5455:7:33","nodeType":"YulIdentifier","src":"5455:7:33"},{"name":"headStart","nativeSrc":"5464:9:33","nodeType":"YulIdentifier","src":"5464:9:33"}],"functionName":{"name":"sub","nativeSrc":"5451:3:33","nodeType":"YulIdentifier","src":"5451:3:33"},"nativeSrc":"5451:23:33","nodeType":"YulFunctionCall","src":"5451:23:33"},{"kind":"number","nativeSrc":"5476:2:33","nodeType":"YulLiteral","src":"5476:2:33","type":"","value":"32"}],"functionName":{"name":"slt","nativeSrc":"5447:3:33","nodeType":"YulIdentifier","src":"5447:3:33"},"nativeSrc":"5447:32:33","nodeType":"YulFunctionCall","src":"5447:32:33"},"nativeSrc":"5444:52:33","nodeType":"YulIf","src":"5444:52:33"},{"nativeSrc":"5505:14:33","nodeType":"YulVariableDeclaration","src":"5505:14:33","value":{"kind":"number","nativeSrc":"5518:1:33","nodeType":"YulLiteral","src":"5518:1:33","type":"","value":"0"},"variables":[{"name":"value","nativeSrc":"5509:5:33","nodeType":"YulTypedName","src":"5509:5:33","type":""}]},{"nativeSrc":"5528:32:33","nodeType":"YulAssignment","src":"5528:32:33","value":{"arguments":[{"name":"headStart","nativeSrc":"5550:9:33","nodeType":"YulIdentifier","src":"5550:9:33"}],"functionName":{"name":"calldataload","nativeSrc":"5537:12:33","nodeType":"YulIdentifier","src":"5537:12:33"},"nativeSrc":"5537:23:33","nodeType":"YulFunctionCall","src":"5537:23:33"},"variableNames":[{"name":"value","nativeSrc":"5528:5:33","nodeType":"YulIdentifier","src":"5528:5:33"}]},{"nativeSrc":"5569:15:33","nodeType":"YulAssignment","src":"5569:15:33","value":{"name":"value","nativeSrc":"5579:5:33","nodeType":"YulIdentifier","src":"5579:5:33"},"variableNames":[{"name":"value0","nativeSrc":"5569:6:33","nodeType":"YulIdentifier","src":"5569:6:33"}]}]},"name":"abi_decode_tuple_t_uint256","nativeSrc":"5364:226:33","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"5400:9:33","nodeType":"YulTypedName","src":"5400:9:33","type":""},{"name":"dataEnd","nativeSrc":"5411:7:33","nodeType":"YulTypedName","src":"5411:7:33","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"5423:6:33","nodeType":"YulTypedName","src":"5423:6:33","type":""}],"src":"5364:226:33"},{"body":{"nativeSrc":"5952:881:33","nodeType":"YulBlock","src":"5952:881:33","statements":[{"expression":{"arguments":[{"name":"headStart","nativeSrc":"5969:9:33","nodeType":"YulIdentifier","src":"5969:9:33"},{"arguments":[{"name":"value0","nativeSrc":"5984:6:33","nodeType":"YulIdentifier","src":"5984:6:33"},{"arguments":[{"kind":"number","nativeSrc":"5996:3:33","nodeType":"YulLiteral","src":"5996:3:33","type":"","value":"248"},{"kind":"number","nativeSrc":"6001:3:33","nodeType":"YulLiteral","src":"6001:3:33","type":"","value":"255"}],"functionName":{"name":"shl","nativeSrc":"5992:3:33","nodeType":"YulIdentifier","src":"5992:3:33"},"nativeSrc":"5992:13:33","nodeType":"YulFunctionCall","src":"5992:13:33"}],"functionName":{"name":"and","nativeSrc":"5980:3:33","nodeType":"YulIdentifier","src":"5980:3:33"},"nativeSrc":"5980:26:33","nodeType":"YulFunctionCall","src":"5980:26:33"}],"functionName":{"name":"mstore","nativeSrc":"5962:6:33","nodeType":"YulIdentifier","src":"5962:6:33"},"nativeSrc":"5962:45:33","nodeType":"YulFunctionCall","src":"5962:45:33"},"nativeSrc":"5962:45:33","nodeType":"YulExpressionStatement","src":"5962:45:33"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"6027:9:33","nodeType":"YulIdentifier","src":"6027:9:33"},{"kind":"number","nativeSrc":"6038:2:33","nodeType":"YulLiteral","src":"6038:2:33","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"6023:3:33","nodeType":"YulIdentifier","src":"6023:3:33"},"nativeSrc":"6023:18:33","nodeType":"YulFunctionCall","src":"6023:18:33"},{"kind":"number","nativeSrc":"6043:3:33","nodeType":"YulLiteral","src":"6043:3:33","type":"","value":"224"}],"functionName":{"name":"mstore","nativeSrc":"6016:6:33","nodeType":"YulIdentifier","src":"6016:6:33"},"nativeSrc":"6016:31:33","nodeType":"YulFunctionCall","src":"6016:31:33"},"nativeSrc":"6016:31:33","nodeType":"YulExpressionStatement","src":"6016:31:33"},{"nativeSrc":"6056:60:33","nodeType":"YulVariableDeclaration","src":"6056:60:33","value":{"arguments":[{"name":"value1","nativeSrc":"6088:6:33","nodeType":"YulIdentifier","src":"6088:6:33"},{"arguments":[{"name":"headStart","nativeSrc":"6100:9:33","nodeType":"YulIdentifier","src":"6100:9:33"},{"kind":"number","nativeSrc":"6111:3:33","nodeType":"YulLiteral","src":"6111:3:33","type":"","value":"224"}],"functionName":{"name":"add","nativeSrc":"6096:3:33","nodeType":"YulIdentifier","src":"6096:3:33"},"nativeSrc":"6096:19:33","nodeType":"YulFunctionCall","src":"6096:19:33"}],"functionName":{"name":"abi_encode_string","nativeSrc":"6070:17:33","nodeType":"YulIdentifier","src":"6070:17:33"},"nativeSrc":"6070:46:33","nodeType":"YulFunctionCall","src":"6070:46:33"},"variables":[{"name":"tail_1","nativeSrc":"6060:6:33","nodeType":"YulTypedName","src":"6060:6:33","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"6136:9:33","nodeType":"YulIdentifier","src":"6136:9:33"},{"kind":"number","nativeSrc":"6147:2:33","nodeType":"YulLiteral","src":"6147:2:33","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"6132:3:33","nodeType":"YulIdentifier","src":"6132:3:33"},"nativeSrc":"6132:18:33","nodeType":"YulFunctionCall","src":"6132:18:33"},{"arguments":[{"name":"tail_1","nativeSrc":"6156:6:33","nodeType":"YulIdentifier","src":"6156:6:33"},{"name":"headStart","nativeSrc":"6164:9:33","nodeType":"YulIdentifier","src":"6164:9:33"}],"functionName":{"name":"sub","nativeSrc":"6152:3:33","nodeType":"YulIdentifier","src":"6152:3:33"},"nativeSrc":"6152:22:33","nodeType":"YulFunctionCall","src":"6152:22:33"}],"functionName":{"name":"mstore","nativeSrc":"6125:6:33","nodeType":"YulIdentifier","src":"6125:6:33"},"nativeSrc":"6125:50:33","nodeType":"YulFunctionCall","src":"6125:50:33"},"nativeSrc":"6125:50:33","nodeType":"YulExpressionStatement","src":"6125:50:33"},{"nativeSrc":"6184:47:33","nodeType":"YulVariableDeclaration","src":"6184:47:33","value":{"arguments":[{"name":"value2","nativeSrc":"6216:6:33","nodeType":"YulIdentifier","src":"6216:6:33"},{"name":"tail_1","nativeSrc":"6224:6:33","nodeType":"YulIdentifier","src":"6224:6:33"}],"functionName":{"name":"abi_encode_string","nativeSrc":"6198:17:33","nodeType":"YulIdentifier","src":"6198:17:33"},"nativeSrc":"6198:33:33","nodeType":"YulFunctionCall","src":"6198:33:33"},"variables":[{"name":"tail_2","nativeSrc":"6188:6:33","nodeType":"YulTypedName","src":"6188:6:33","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"6251:9:33","nodeType":"YulIdentifier","src":"6251:9:33"},{"kind":"number","nativeSrc":"6262:2:33","nodeType":"YulLiteral","src":"6262:2:33","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"6247:3:33","nodeType":"YulIdentifier","src":"6247:3:33"},"nativeSrc":"6247:18:33","nodeType":"YulFunctionCall","src":"6247:18:33"},{"name":"value3","nativeSrc":"6267:6:33","nodeType":"YulIdentifier","src":"6267:6:33"}],"functionName":{"name":"mstore","nativeSrc":"6240:6:33","nodeType":"YulIdentifier","src":"6240:6:33"},"nativeSrc":"6240:34:33","nodeType":"YulFunctionCall","src":"6240:34:33"},"nativeSrc":"6240:34:33","nodeType":"YulExpressionStatement","src":"6240:34:33"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"6294:9:33","nodeType":"YulIdentifier","src":"6294:9:33"},{"kind":"number","nativeSrc":"6305:3:33","nodeType":"YulLiteral","src":"6305:3:33","type":"","value":"128"}],"functionName":{"name":"add","nativeSrc":"6290:3:33","nodeType":"YulIdentifier","src":"6290:3:33"},"nativeSrc":"6290:19:33","nodeType":"YulFunctionCall","src":"6290:19:33"},{"arguments":[{"name":"value4","nativeSrc":"6315:6:33","nodeType":"YulIdentifier","src":"6315:6:33"},{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"6331:3:33","nodeType":"YulLiteral","src":"6331:3:33","type":"","value":"160"},{"kind":"number","nativeSrc":"6336:1:33","nodeType":"YulLiteral","src":"6336:1:33","type":"","value":"1"}],"functionName":{"name":"shl","nativeSrc":"6327:3:33","nodeType":"YulIdentifier","src":"6327:3:33"},"nativeSrc":"6327:11:33","nodeType":"YulFunctionCall","src":"6327:11:33"},{"kind":"number","nativeSrc":"6340:1:33","nodeType":"YulLiteral","src":"6340:1:33","type":"","value":"1"}],"functionName":{"name":"sub","nativeSrc":"6323:3:33","nodeType":"YulIdentifier","src":"6323:3:33"},"nativeSrc":"6323:19:33","nodeType":"YulFunctionCall","src":"6323:19:33"}],"functionName":{"name":"and","nativeSrc":"6311:3:33","nodeType":"YulIdentifier","src":"6311:3:33"},"nativeSrc":"6311:32:33","nodeType":"YulFunctionCall","src":"6311:32:33"}],"functionName":{"name":"mstore","nativeSrc":"6283:6:33","nodeType":"YulIdentifier","src":"6283:6:33"},"nativeSrc":"6283:61:33","nodeType":"YulFunctionCall","src":"6283:61:33"},"nativeSrc":"6283:61:33","nodeType":"YulExpressionStatement","src":"6283:61:33"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"6364:9:33","nodeType":"YulIdentifier","src":"6364:9:33"},{"kind":"number","nativeSrc":"6375:3:33","nodeType":"YulLiteral","src":"6375:3:33","type":"","value":"160"}],"functionName":{"name":"add","nativeSrc":"6360:3:33","nodeType":"YulIdentifier","src":"6360:3:33"},"nativeSrc":"6360:19:33","nodeType":"YulFunctionCall","src":"6360:19:33"},{"name":"value5","nativeSrc":"6381:6:33","nodeType":"YulIdentifier","src":"6381:6:33"}],"functionName":{"name":"mstore","nativeSrc":"6353:6:33","nodeType":"YulIdentifier","src":"6353:6:33"},"nativeSrc":"6353:35:33","nodeType":"YulFunctionCall","src":"6353:35:33"},"nativeSrc":"6353:35:33","nodeType":"YulExpressionStatement","src":"6353:35:33"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"6408:9:33","nodeType":"YulIdentifier","src":"6408:9:33"},{"kind":"number","nativeSrc":"6419:3:33","nodeType":"YulLiteral","src":"6419:3:33","type":"","value":"192"}],"functionName":{"name":"add","nativeSrc":"6404:3:33","nodeType":"YulIdentifier","src":"6404:3:33"},"nativeSrc":"6404:19:33","nodeType":"YulFunctionCall","src":"6404:19:33"},{"arguments":[{"name":"tail_2","nativeSrc":"6429:6:33","nodeType":"YulIdentifier","src":"6429:6:33"},{"name":"headStart","nativeSrc":"6437:9:33","nodeType":"YulIdentifier","src":"6437:9:33"}],"functionName":{"name":"sub","nativeSrc":"6425:3:33","nodeType":"YulIdentifier","src":"6425:3:33"},"nativeSrc":"6425:22:33","nodeType":"YulFunctionCall","src":"6425:22:33"}],"functionName":{"name":"mstore","nativeSrc":"6397:6:33","nodeType":"YulIdentifier","src":"6397:6:33"},"nativeSrc":"6397:51:33","nodeType":"YulFunctionCall","src":"6397:51:33"},"nativeSrc":"6397:51:33","nodeType":"YulExpressionStatement","src":"6397:51:33"},{"nativeSrc":"6457:17:33","nodeType":"YulVariableDeclaration","src":"6457:17:33","value":{"name":"tail_2","nativeSrc":"6468:6:33","nodeType":"YulIdentifier","src":"6468:6:33"},"variables":[{"name":"pos","nativeSrc":"6461:3:33","nodeType":"YulTypedName","src":"6461:3:33","type":""}]},{"nativeSrc":"6483:27:33","nodeType":"YulVariableDeclaration","src":"6483:27:33","value":{"arguments":[{"name":"value6","nativeSrc":"6503:6:33","nodeType":"YulIdentifier","src":"6503:6:33"}],"functionName":{"name":"mload","nativeSrc":"6497:5:33","nodeType":"YulIdentifier","src":"6497:5:33"},"nativeSrc":"6497:13:33","nodeType":"YulFunctionCall","src":"6497:13:33"},"variables":[{"name":"length","nativeSrc":"6487:6:33","nodeType":"YulTypedName","src":"6487:6:33","type":""}]},{"expression":{"arguments":[{"name":"tail_2","nativeSrc":"6526:6:33","nodeType":"YulIdentifier","src":"6526:6:33"},{"name":"length","nativeSrc":"6534:6:33","nodeType":"YulIdentifier","src":"6534:6:33"}],"functionName":{"name":"mstore","nativeSrc":"6519:6:33","nodeType":"YulIdentifier","src":"6519:6:33"},"nativeSrc":"6519:22:33","nodeType":"YulFunctionCall","src":"6519:22:33"},"nativeSrc":"6519:22:33","nodeType":"YulExpressionStatement","src":"6519:22:33"},{"nativeSrc":"6550:22:33","nodeType":"YulAssignment","src":"6550:22:33","value":{"arguments":[{"name":"tail_2","nativeSrc":"6561:6:33","nodeType":"YulIdentifier","src":"6561:6:33"},{"kind":"number","nativeSrc":"6569:2:33","nodeType":"YulLiteral","src":"6569:2:33","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"6557:3:33","nodeType":"YulIdentifier","src":"6557:3:33"},"nativeSrc":"6557:15:33","nodeType":"YulFunctionCall","src":"6557:15:33"},"variableNames":[{"name":"pos","nativeSrc":"6550:3:33","nodeType":"YulIdentifier","src":"6550:3:33"}]},{"nativeSrc":"6581:29:33","nodeType":"YulVariableDeclaration","src":"6581:29:33","value":{"arguments":[{"name":"value6","nativeSrc":"6599:6:33","nodeType":"YulIdentifier","src":"6599:6:33"},{"kind":"number","nativeSrc":"6607:2:33","nodeType":"YulLiteral","src":"6607:2:33","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"6595:3:33","nodeType":"YulIdentifier","src":"6595:3:33"},"nativeSrc":"6595:15:33","nodeType":"YulFunctionCall","src":"6595:15:33"},"variables":[{"name":"srcPtr","nativeSrc":"6585:6:33","nodeType":"YulTypedName","src":"6585:6:33","type":""}]},{"nativeSrc":"6619:10:33","nodeType":"YulVariableDeclaration","src":"6619:10:33","value":{"kind":"number","nativeSrc":"6628:1:33","nodeType":"YulLiteral","src":"6628:1:33","type":"","value":"0"},"variables":[{"name":"i","nativeSrc":"6623:1:33","nodeType":"YulTypedName","src":"6623:1:33","type":""}]},{"body":{"nativeSrc":"6687:120:33","nodeType":"YulBlock","src":"6687:120:33","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"6708:3:33","nodeType":"YulIdentifier","src":"6708:3:33"},{"arguments":[{"name":"srcPtr","nativeSrc":"6719:6:33","nodeType":"YulIdentifier","src":"6719:6:33"}],"functionName":{"name":"mload","nativeSrc":"6713:5:33","nodeType":"YulIdentifier","src":"6713:5:33"},"nativeSrc":"6713:13:33","nodeType":"YulFunctionCall","src":"6713:13:33"}],"functionName":{"name":"mstore","nativeSrc":"6701:6:33","nodeType":"YulIdentifier","src":"6701:6:33"},"nativeSrc":"6701:26:33","nodeType":"YulFunctionCall","src":"6701:26:33"},"nativeSrc":"6701:26:33","nodeType":"YulExpressionStatement","src":"6701:26:33"},{"nativeSrc":"6740:19:33","nodeType":"YulAssignment","src":"6740:19:33","value":{"arguments":[{"name":"pos","nativeSrc":"6751:3:33","nodeType":"YulIdentifier","src":"6751:3:33"},{"kind":"number","nativeSrc":"6756:2:33","nodeType":"YulLiteral","src":"6756:2:33","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"6747:3:33","nodeType":"YulIdentifier","src":"6747:3:33"},"nativeSrc":"6747:12:33","nodeType":"YulFunctionCall","src":"6747:12:33"},"variableNames":[{"name":"pos","nativeSrc":"6740:3:33","nodeType":"YulIdentifier","src":"6740:3:33"}]},{"nativeSrc":"6772:25:33","nodeType":"YulAssignment","src":"6772:25:33","value":{"arguments":[{"name":"srcPtr","nativeSrc":"6786:6:33","nodeType":"YulIdentifier","src":"6786:6:33"},{"kind":"number","nativeSrc":"6794:2:33","nodeType":"YulLiteral","src":"6794:2:33","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"6782:3:33","nodeType":"YulIdentifier","src":"6782:3:33"},"nativeSrc":"6782:15:33","nodeType":"YulFunctionCall","src":"6782:15:33"},"variableNames":[{"name":"srcPtr","nativeSrc":"6772:6:33","nodeType":"YulIdentifier","src":"6772:6:33"}]}]},"condition":{"arguments":[{"name":"i","nativeSrc":"6649:1:33","nodeType":"YulIdentifier","src":"6649:1:33"},{"name":"length","nativeSrc":"6652:6:33","nodeType":"YulIdentifier","src":"6652:6:33"}],"functionName":{"name":"lt","nativeSrc":"6646:2:33","nodeType":"YulIdentifier","src":"6646:2:33"},"nativeSrc":"6646:13:33","nodeType":"YulFunctionCall","src":"6646:13:33"},"nativeSrc":"6638:169:33","nodeType":"YulForLoop","post":{"nativeSrc":"6660:18:33","nodeType":"YulBlock","src":"6660:18:33","statements":[{"nativeSrc":"6662:14:33","nodeType":"YulAssignment","src":"6662:14:33","value":{"arguments":[{"name":"i","nativeSrc":"6671:1:33","nodeType":"YulIdentifier","src":"6671:1:33"},{"kind":"number","nativeSrc":"6674:1:33","nodeType":"YulLiteral","src":"6674:1:33","type":"","value":"1"}],"functionName":{"name":"add","nativeSrc":"6667:3:33","nodeType":"YulIdentifier","src":"6667:3:33"},"nativeSrc":"6667:9:33","nodeType":"YulFunctionCall","src":"6667:9:33"},"variableNames":[{"name":"i","nativeSrc":"6662:1:33","nodeType":"YulIdentifier","src":"6662:1:33"}]}]},"pre":{"nativeSrc":"6642:3:33","nodeType":"YulBlock","src":"6642:3:33","statements":[]},"src":"6638:169:33"},{"nativeSrc":"6816:11:33","nodeType":"YulAssignment","src":"6816:11:33","value":{"name":"pos","nativeSrc":"6824:3:33","nodeType":"YulIdentifier","src":"6824:3:33"},"variableNames":[{"name":"tail","nativeSrc":"6816:4:33","nodeType":"YulIdentifier","src":"6816:4:33"}]}]},"name":"abi_encode_tuple_t_bytes1_t_string_memory_ptr_t_string_memory_ptr_t_uint256_t_address_t_bytes32_t_array$_t_uint256_$dyn_memory_ptr__to_t_bytes1_t_string_memory_ptr_t_string_memory_ptr_t_uint256_t_address_t_bytes32_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed","nativeSrc":"5595:1238:33","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"5873:9:33","nodeType":"YulTypedName","src":"5873:9:33","type":""},{"name":"value6","nativeSrc":"5884:6:33","nodeType":"YulTypedName","src":"5884:6:33","type":""},{"name":"value5","nativeSrc":"5892:6:33","nodeType":"YulTypedName","src":"5892:6:33","type":""},{"name":"value4","nativeSrc":"5900:6:33","nodeType":"YulTypedName","src":"5900:6:33","type":""},{"name":"value3","nativeSrc":"5908:6:33","nodeType":"YulTypedName","src":"5908:6:33","type":""},{"name":"value2","nativeSrc":"5916:6:33","nodeType":"YulTypedName","src":"5916:6:33","type":""},{"name":"value1","nativeSrc":"5924:6:33","nodeType":"YulTypedName","src":"5924:6:33","type":""},{"name":"value0","nativeSrc":"5932:6:33","nodeType":"YulTypedName","src":"5932:6:33","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"5943:4:33","nodeType":"YulTypedName","src":"5943:4:33","type":""}],"src":"5595:1238:33"},{"body":{"nativeSrc":"6995:611:33","nodeType":"YulBlock","src":"6995:611:33","statements":[{"body":{"nativeSrc":"7041:16:33","nodeType":"YulBlock","src":"7041:16:33","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"7050:1:33","nodeType":"YulLiteral","src":"7050:1:33","type":"","value":"0"},{"kind":"number","nativeSrc":"7053:1:33","nodeType":"YulLiteral","src":"7053:1:33","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"7043:6:33","nodeType":"YulIdentifier","src":"7043:6:33"},"nativeSrc":"7043:12:33","nodeType":"YulFunctionCall","src":"7043:12:33"},"nativeSrc":"7043:12:33","nodeType":"YulExpressionStatement","src":"7043:12:33"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"7016:7:33","nodeType":"YulIdentifier","src":"7016:7:33"},{"name":"headStart","nativeSrc":"7025:9:33","nodeType":"YulIdentifier","src":"7025:9:33"}],"functionName":{"name":"sub","nativeSrc":"7012:3:33","nodeType":"YulIdentifier","src":"7012:3:33"},"nativeSrc":"7012:23:33","nodeType":"YulFunctionCall","src":"7012:23:33"},{"kind":"number","nativeSrc":"7037:2:33","nodeType":"YulLiteral","src":"7037:2:33","type":"","value":"64"}],"functionName":{"name":"slt","nativeSrc":"7008:3:33","nodeType":"YulIdentifier","src":"7008:3:33"},"nativeSrc":"7008:32:33","nodeType":"YulFunctionCall","src":"7008:32:33"},"nativeSrc":"7005:52:33","nodeType":"YulIf","src":"7005:52:33"},{"nativeSrc":"7066:37:33","nodeType":"YulVariableDeclaration","src":"7066:37:33","value":{"arguments":[{"name":"headStart","nativeSrc":"7093:9:33","nodeType":"YulIdentifier","src":"7093:9:33"}],"functionName":{"name":"calldataload","nativeSrc":"7080:12:33","nodeType":"YulIdentifier","src":"7080:12:33"},"nativeSrc":"7080:23:33","nodeType":"YulFunctionCall","src":"7080:23:33"},"variables":[{"name":"offset","nativeSrc":"7070:6:33","nodeType":"YulTypedName","src":"7070:6:33","type":""}]},{"body":{"nativeSrc":"7146:16:33","nodeType":"YulBlock","src":"7146:16:33","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"7155:1:33","nodeType":"YulLiteral","src":"7155:1:33","type":"","value":"0"},{"kind":"number","nativeSrc":"7158:1:33","nodeType":"YulLiteral","src":"7158:1:33","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"7148:6:33","nodeType":"YulIdentifier","src":"7148:6:33"},"nativeSrc":"7148:12:33","nodeType":"YulFunctionCall","src":"7148:12:33"},"nativeSrc":"7148:12:33","nodeType":"YulExpressionStatement","src":"7148:12:33"}]},"condition":{"arguments":[{"name":"offset","nativeSrc":"7118:6:33","nodeType":"YulIdentifier","src":"7118:6:33"},{"kind":"number","nativeSrc":"7126:18:33","nodeType":"YulLiteral","src":"7126:18:33","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nativeSrc":"7115:2:33","nodeType":"YulIdentifier","src":"7115:2:33"},"nativeSrc":"7115:30:33","nodeType":"YulFunctionCall","src":"7115:30:33"},"nativeSrc":"7112:50:33","nodeType":"YulIf","src":"7112:50:33"},{"nativeSrc":"7171:96:33","nodeType":"YulVariableDeclaration","src":"7171:96:33","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"7239:9:33","nodeType":"YulIdentifier","src":"7239:9:33"},{"name":"offset","nativeSrc":"7250:6:33","nodeType":"YulIdentifier","src":"7250:6:33"}],"functionName":{"name":"add","nativeSrc":"7235:3:33","nodeType":"YulIdentifier","src":"7235:3:33"},"nativeSrc":"7235:22:33","nodeType":"YulFunctionCall","src":"7235:22:33"},{"name":"dataEnd","nativeSrc":"7259:7:33","nodeType":"YulIdentifier","src":"7259:7:33"}],"functionName":{"name":"abi_decode_array_address_dyn_calldata","nativeSrc":"7197:37:33","nodeType":"YulIdentifier","src":"7197:37:33"},"nativeSrc":"7197:70:33","nodeType":"YulFunctionCall","src":"7197:70:33"},"variables":[{"name":"value0_1","nativeSrc":"7175:8:33","nodeType":"YulTypedName","src":"7175:8:33","type":""},{"name":"value1_1","nativeSrc":"7185:8:33","nodeType":"YulTypedName","src":"7185:8:33","type":""}]},{"nativeSrc":"7276:18:33","nodeType":"YulAssignment","src":"7276:18:33","value":{"name":"value0_1","nativeSrc":"7286:8:33","nodeType":"YulIdentifier","src":"7286:8:33"},"variableNames":[{"name":"value0","nativeSrc":"7276:6:33","nodeType":"YulIdentifier","src":"7276:6:33"}]},{"nativeSrc":"7303:18:33","nodeType":"YulAssignment","src":"7303:18:33","value":{"name":"value1_1","nativeSrc":"7313:8:33","nodeType":"YulIdentifier","src":"7313:8:33"},"variableNames":[{"name":"value1","nativeSrc":"7303:6:33","nodeType":"YulIdentifier","src":"7303:6:33"}]},{"nativeSrc":"7330:48:33","nodeType":"YulVariableDeclaration","src":"7330:48:33","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"7363:9:33","nodeType":"YulIdentifier","src":"7363:9:33"},{"kind":"number","nativeSrc":"7374:2:33","nodeType":"YulLiteral","src":"7374:2:33","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"7359:3:33","nodeType":"YulIdentifier","src":"7359:3:33"},"nativeSrc":"7359:18:33","nodeType":"YulFunctionCall","src":"7359:18:33"}],"functionName":{"name":"calldataload","nativeSrc":"7346:12:33","nodeType":"YulIdentifier","src":"7346:12:33"},"nativeSrc":"7346:32:33","nodeType":"YulFunctionCall","src":"7346:32:33"},"variables":[{"name":"offset_1","nativeSrc":"7334:8:33","nodeType":"YulTypedName","src":"7334:8:33","type":""}]},{"body":{"nativeSrc":"7423:16:33","nodeType":"YulBlock","src":"7423:16:33","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"7432:1:33","nodeType":"YulLiteral","src":"7432:1:33","type":"","value":"0"},{"kind":"number","nativeSrc":"7435:1:33","nodeType":"YulLiteral","src":"7435:1:33","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"7425:6:33","nodeType":"YulIdentifier","src":"7425:6:33"},"nativeSrc":"7425:12:33","nodeType":"YulFunctionCall","src":"7425:12:33"},"nativeSrc":"7425:12:33","nodeType":"YulExpressionStatement","src":"7425:12:33"}]},"condition":{"arguments":[{"name":"offset_1","nativeSrc":"7393:8:33","nodeType":"YulIdentifier","src":"7393:8:33"},{"kind":"number","nativeSrc":"7403:18:33","nodeType":"YulLiteral","src":"7403:18:33","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nativeSrc":"7390:2:33","nodeType":"YulIdentifier","src":"7390:2:33"},"nativeSrc":"7390:32:33","nodeType":"YulFunctionCall","src":"7390:32:33"},"nativeSrc":"7387:52:33","nodeType":"YulIf","src":"7387:52:33"},{"nativeSrc":"7448:98:33","nodeType":"YulVariableDeclaration","src":"7448:98:33","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"7516:9:33","nodeType":"YulIdentifier","src":"7516:9:33"},{"name":"offset_1","nativeSrc":"7527:8:33","nodeType":"YulIdentifier","src":"7527:8:33"}],"functionName":{"name":"add","nativeSrc":"7512:3:33","nodeType":"YulIdentifier","src":"7512:3:33"},"nativeSrc":"7512:24:33","nodeType":"YulFunctionCall","src":"7512:24:33"},{"name":"dataEnd","nativeSrc":"7538:7:33","nodeType":"YulIdentifier","src":"7538:7:33"}],"functionName":{"name":"abi_decode_array_address_dyn_calldata","nativeSrc":"7474:37:33","nodeType":"YulIdentifier","src":"7474:37:33"},"nativeSrc":"7474:72:33","nodeType":"YulFunctionCall","src":"7474:72:33"},"variables":[{"name":"value2_1","nativeSrc":"7452:8:33","nodeType":"YulTypedName","src":"7452:8:33","type":""},{"name":"value3_1","nativeSrc":"7462:8:33","nodeType":"YulTypedName","src":"7462:8:33","type":""}]},{"nativeSrc":"7555:18:33","nodeType":"YulAssignment","src":"7555:18:33","value":{"name":"value2_1","nativeSrc":"7565:8:33","nodeType":"YulIdentifier","src":"7565:8:33"},"variableNames":[{"name":"value2","nativeSrc":"7555:6:33","nodeType":"YulIdentifier","src":"7555:6:33"}]},{"nativeSrc":"7582:18:33","nodeType":"YulAssignment","src":"7582:18:33","value":{"name":"value3_1","nativeSrc":"7592:8:33","nodeType":"YulIdentifier","src":"7592:8:33"},"variableNames":[{"name":"value3","nativeSrc":"7582:6:33","nodeType":"YulIdentifier","src":"7582:6:33"}]}]},"name":"abi_decode_tuple_t_array$_t_address_$dyn_calldata_ptrt_array$_t_uint256_$dyn_calldata_ptr","nativeSrc":"6838:768:33","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"6937:9:33","nodeType":"YulTypedName","src":"6937:9:33","type":""},{"name":"dataEnd","nativeSrc":"6948:7:33","nodeType":"YulTypedName","src":"6948:7:33","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"6960:6:33","nodeType":"YulTypedName","src":"6960:6:33","type":""},{"name":"value1","nativeSrc":"6968:6:33","nodeType":"YulTypedName","src":"6968:6:33","type":""},{"name":"value2","nativeSrc":"6976:6:33","nodeType":"YulTypedName","src":"6976:6:33","type":""},{"name":"value3","nativeSrc":"6984:6:33","nodeType":"YulTypedName","src":"6984:6:33","type":""}],"src":"6838:768:33"},{"body":{"nativeSrc":"7756:476:33","nodeType":"YulBlock","src":"7756:476:33","statements":[{"nativeSrc":"7766:32:33","nodeType":"YulVariableDeclaration","src":"7766:32:33","value":{"arguments":[{"name":"headStart","nativeSrc":"7784:9:33","nodeType":"YulIdentifier","src":"7784:9:33"},{"kind":"number","nativeSrc":"7795:2:33","nodeType":"YulLiteral","src":"7795:2:33","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"7780:3:33","nodeType":"YulIdentifier","src":"7780:3:33"},"nativeSrc":"7780:18:33","nodeType":"YulFunctionCall","src":"7780:18:33"},"variables":[{"name":"tail_1","nativeSrc":"7770:6:33","nodeType":"YulTypedName","src":"7770:6:33","type":""}]},{"expression":{"arguments":[{"name":"headStart","nativeSrc":"7814:9:33","nodeType":"YulIdentifier","src":"7814:9:33"},{"kind":"number","nativeSrc":"7825:2:33","nodeType":"YulLiteral","src":"7825:2:33","type":"","value":"32"}],"functionName":{"name":"mstore","nativeSrc":"7807:6:33","nodeType":"YulIdentifier","src":"7807:6:33"},"nativeSrc":"7807:21:33","nodeType":"YulFunctionCall","src":"7807:21:33"},"nativeSrc":"7807:21:33","nodeType":"YulExpressionStatement","src":"7807:21:33"},{"nativeSrc":"7837:17:33","nodeType":"YulVariableDeclaration","src":"7837:17:33","value":{"name":"tail_1","nativeSrc":"7848:6:33","nodeType":"YulIdentifier","src":"7848:6:33"},"variables":[{"name":"pos","nativeSrc":"7841:3:33","nodeType":"YulTypedName","src":"7841:3:33","type":""}]},{"nativeSrc":"7863:27:33","nodeType":"YulVariableDeclaration","src":"7863:27:33","value":{"arguments":[{"name":"value0","nativeSrc":"7883:6:33","nodeType":"YulIdentifier","src":"7883:6:33"}],"functionName":{"name":"mload","nativeSrc":"7877:5:33","nodeType":"YulIdentifier","src":"7877:5:33"},"nativeSrc":"7877:13:33","nodeType":"YulFunctionCall","src":"7877:13:33"},"variables":[{"name":"length","nativeSrc":"7867:6:33","nodeType":"YulTypedName","src":"7867:6:33","type":""}]},{"expression":{"arguments":[{"name":"tail_1","nativeSrc":"7906:6:33","nodeType":"YulIdentifier","src":"7906:6:33"},{"name":"length","nativeSrc":"7914:6:33","nodeType":"YulIdentifier","src":"7914:6:33"}],"functionName":{"name":"mstore","nativeSrc":"7899:6:33","nodeType":"YulIdentifier","src":"7899:6:33"},"nativeSrc":"7899:22:33","nodeType":"YulFunctionCall","src":"7899:22:33"},"nativeSrc":"7899:22:33","nodeType":"YulExpressionStatement","src":"7899:22:33"},{"nativeSrc":"7930:25:33","nodeType":"YulAssignment","src":"7930:25:33","value":{"arguments":[{"name":"headStart","nativeSrc":"7941:9:33","nodeType":"YulIdentifier","src":"7941:9:33"},{"kind":"number","nativeSrc":"7952:2:33","nodeType":"YulLiteral","src":"7952:2:33","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"7937:3:33","nodeType":"YulIdentifier","src":"7937:3:33"},"nativeSrc":"7937:18:33","nodeType":"YulFunctionCall","src":"7937:18:33"},"variableNames":[{"name":"pos","nativeSrc":"7930:3:33","nodeType":"YulIdentifier","src":"7930:3:33"}]},{"nativeSrc":"7964:29:33","nodeType":"YulVariableDeclaration","src":"7964:29:33","value":{"arguments":[{"name":"value0","nativeSrc":"7982:6:33","nodeType":"YulIdentifier","src":"7982:6:33"},{"kind":"number","nativeSrc":"7990:2:33","nodeType":"YulLiteral","src":"7990:2:33","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"7978:3:33","nodeType":"YulIdentifier","src":"7978:3:33"},"nativeSrc":"7978:15:33","nodeType":"YulFunctionCall","src":"7978:15:33"},"variables":[{"name":"srcPtr","nativeSrc":"7968:6:33","nodeType":"YulTypedName","src":"7968:6:33","type":""}]},{"nativeSrc":"8002:10:33","nodeType":"YulVariableDeclaration","src":"8002:10:33","value":{"kind":"number","nativeSrc":"8011:1:33","nodeType":"YulLiteral","src":"8011:1:33","type":"","value":"0"},"variables":[{"name":"i","nativeSrc":"8006:1:33","nodeType":"YulTypedName","src":"8006:1:33","type":""}]},{"body":{"nativeSrc":"8070:136:33","nodeType":"YulBlock","src":"8070:136:33","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"8091:3:33","nodeType":"YulIdentifier","src":"8091:3:33"},{"arguments":[{"arguments":[{"arguments":[{"name":"srcPtr","nativeSrc":"8116:6:33","nodeType":"YulIdentifier","src":"8116:6:33"}],"functionName":{"name":"mload","nativeSrc":"8110:5:33","nodeType":"YulIdentifier","src":"8110:5:33"},"nativeSrc":"8110:13:33","nodeType":"YulFunctionCall","src":"8110:13:33"}],"functionName":{"name":"iszero","nativeSrc":"8103:6:33","nodeType":"YulIdentifier","src":"8103:6:33"},"nativeSrc":"8103:21:33","nodeType":"YulFunctionCall","src":"8103:21:33"}],"functionName":{"name":"iszero","nativeSrc":"8096:6:33","nodeType":"YulIdentifier","src":"8096:6:33"},"nativeSrc":"8096:29:33","nodeType":"YulFunctionCall","src":"8096:29:33"}],"functionName":{"name":"mstore","nativeSrc":"8084:6:33","nodeType":"YulIdentifier","src":"8084:6:33"},"nativeSrc":"8084:42:33","nodeType":"YulFunctionCall","src":"8084:42:33"},"nativeSrc":"8084:42:33","nodeType":"YulExpressionStatement","src":"8084:42:33"},{"nativeSrc":"8139:19:33","nodeType":"YulAssignment","src":"8139:19:33","value":{"arguments":[{"name":"pos","nativeSrc":"8150:3:33","nodeType":"YulIdentifier","src":"8150:3:33"},{"kind":"number","nativeSrc":"8155:2:33","nodeType":"YulLiteral","src":"8155:2:33","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"8146:3:33","nodeType":"YulIdentifier","src":"8146:3:33"},"nativeSrc":"8146:12:33","nodeType":"YulFunctionCall","src":"8146:12:33"},"variableNames":[{"name":"pos","nativeSrc":"8139:3:33","nodeType":"YulIdentifier","src":"8139:3:33"}]},{"nativeSrc":"8171:25:33","nodeType":"YulAssignment","src":"8171:25:33","value":{"arguments":[{"name":"srcPtr","nativeSrc":"8185:6:33","nodeType":"YulIdentifier","src":"8185:6:33"},{"kind":"number","nativeSrc":"8193:2:33","nodeType":"YulLiteral","src":"8193:2:33","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"8181:3:33","nodeType":"YulIdentifier","src":"8181:3:33"},"nativeSrc":"8181:15:33","nodeType":"YulFunctionCall","src":"8181:15:33"},"variableNames":[{"name":"srcPtr","nativeSrc":"8171:6:33","nodeType":"YulIdentifier","src":"8171:6:33"}]}]},"condition":{"arguments":[{"name":"i","nativeSrc":"8032:1:33","nodeType":"YulIdentifier","src":"8032:1:33"},{"name":"length","nativeSrc":"8035:6:33","nodeType":"YulIdentifier","src":"8035:6:33"}],"functionName":{"name":"lt","nativeSrc":"8029:2:33","nodeType":"YulIdentifier","src":"8029:2:33"},"nativeSrc":"8029:13:33","nodeType":"YulFunctionCall","src":"8029:13:33"},"nativeSrc":"8021:185:33","nodeType":"YulForLoop","post":{"nativeSrc":"8043:18:33","nodeType":"YulBlock","src":"8043:18:33","statements":[{"nativeSrc":"8045:14:33","nodeType":"YulAssignment","src":"8045:14:33","value":{"arguments":[{"name":"i","nativeSrc":"8054:1:33","nodeType":"YulIdentifier","src":"8054:1:33"},{"kind":"number","nativeSrc":"8057:1:33","nodeType":"YulLiteral","src":"8057:1:33","type":"","value":"1"}],"functionName":{"name":"add","nativeSrc":"8050:3:33","nodeType":"YulIdentifier","src":"8050:3:33"},"nativeSrc":"8050:9:33","nodeType":"YulFunctionCall","src":"8050:9:33"},"variableNames":[{"name":"i","nativeSrc":"8045:1:33","nodeType":"YulIdentifier","src":"8045:1:33"}]}]},"pre":{"nativeSrc":"8025:3:33","nodeType":"YulBlock","src":"8025:3:33","statements":[]},"src":"8021:185:33"},{"nativeSrc":"8215:11:33","nodeType":"YulAssignment","src":"8215:11:33","value":{"name":"pos","nativeSrc":"8223:3:33","nodeType":"YulIdentifier","src":"8223:3:33"},"variableNames":[{"name":"tail","nativeSrc":"8215:4:33","nodeType":"YulIdentifier","src":"8215:4:33"}]}]},"name":"abi_encode_tuple_t_array$_t_bool_$dyn_memory_ptr__to_t_array$_t_bool_$dyn_memory_ptr__fromStack_reversed","nativeSrc":"7611:621:33","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"7725:9:33","nodeType":"YulTypedName","src":"7725:9:33","type":""},{"name":"value0","nativeSrc":"7736:6:33","nodeType":"YulTypedName","src":"7736:6:33","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"7747:4:33","nodeType":"YulTypedName","src":"7747:4:33","type":""}],"src":"7611:621:33"},{"body":{"nativeSrc":"8338:102:33","nodeType":"YulBlock","src":"8338:102:33","statements":[{"nativeSrc":"8348:26:33","nodeType":"YulAssignment","src":"8348:26:33","value":{"arguments":[{"name":"headStart","nativeSrc":"8360:9:33","nodeType":"YulIdentifier","src":"8360:9:33"},{"kind":"number","nativeSrc":"8371:2:33","nodeType":"YulLiteral","src":"8371:2:33","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"8356:3:33","nodeType":"YulIdentifier","src":"8356:3:33"},"nativeSrc":"8356:18:33","nodeType":"YulFunctionCall","src":"8356:18:33"},"variableNames":[{"name":"tail","nativeSrc":"8348:4:33","nodeType":"YulIdentifier","src":"8348:4:33"}]},{"expression":{"arguments":[{"name":"headStart","nativeSrc":"8390:9:33","nodeType":"YulIdentifier","src":"8390:9:33"},{"arguments":[{"name":"value0","nativeSrc":"8405:6:33","nodeType":"YulIdentifier","src":"8405:6:33"},{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"8421:3:33","nodeType":"YulLiteral","src":"8421:3:33","type":"","value":"160"},{"kind":"number","nativeSrc":"8426:1:33","nodeType":"YulLiteral","src":"8426:1:33","type":"","value":"1"}],"functionName":{"name":"shl","nativeSrc":"8417:3:33","nodeType":"YulIdentifier","src":"8417:3:33"},"nativeSrc":"8417:11:33","nodeType":"YulFunctionCall","src":"8417:11:33"},{"kind":"number","nativeSrc":"8430:1:33","nodeType":"YulLiteral","src":"8430:1:33","type":"","value":"1"}],"functionName":{"name":"sub","nativeSrc":"8413:3:33","nodeType":"YulIdentifier","src":"8413:3:33"},"nativeSrc":"8413:19:33","nodeType":"YulFunctionCall","src":"8413:19:33"}],"functionName":{"name":"and","nativeSrc":"8401:3:33","nodeType":"YulIdentifier","src":"8401:3:33"},"nativeSrc":"8401:32:33","nodeType":"YulFunctionCall","src":"8401:32:33"}],"functionName":{"name":"mstore","nativeSrc":"8383:6:33","nodeType":"YulIdentifier","src":"8383:6:33"},"nativeSrc":"8383:51:33","nodeType":"YulFunctionCall","src":"8383:51:33"},"nativeSrc":"8383:51:33","nodeType":"YulExpressionStatement","src":"8383:51:33"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nativeSrc":"8237:203:33","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"8307:9:33","nodeType":"YulTypedName","src":"8307:9:33","type":""},{"name":"value0","nativeSrc":"8318:6:33","nodeType":"YulTypedName","src":"8318:6:33","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"8329:4:33","nodeType":"YulTypedName","src":"8329:4:33","type":""}],"src":"8237:203:33"},{"body":{"nativeSrc":"8615:733:33","nodeType":"YulBlock","src":"8615:733:33","statements":[{"body":{"nativeSrc":"8662:16:33","nodeType":"YulBlock","src":"8662:16:33","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"8671:1:33","nodeType":"YulLiteral","src":"8671:1:33","type":"","value":"0"},{"kind":"number","nativeSrc":"8674:1:33","nodeType":"YulLiteral","src":"8674:1:33","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"8664:6:33","nodeType":"YulIdentifier","src":"8664:6:33"},"nativeSrc":"8664:12:33","nodeType":"YulFunctionCall","src":"8664:12:33"},"nativeSrc":"8664:12:33","nodeType":"YulExpressionStatement","src":"8664:12:33"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"8636:7:33","nodeType":"YulIdentifier","src":"8636:7:33"},{"name":"headStart","nativeSrc":"8645:9:33","nodeType":"YulIdentifier","src":"8645:9:33"}],"functionName":{"name":"sub","nativeSrc":"8632:3:33","nodeType":"YulIdentifier","src":"8632:3:33"},"nativeSrc":"8632:23:33","nodeType":"YulFunctionCall","src":"8632:23:33"},{"kind":"number","nativeSrc":"8657:3:33","nodeType":"YulLiteral","src":"8657:3:33","type":"","value":"224"}],"functionName":{"name":"slt","nativeSrc":"8628:3:33","nodeType":"YulIdentifier","src":"8628:3:33"},"nativeSrc":"8628:33:33","nodeType":"YulFunctionCall","src":"8628:33:33"},"nativeSrc":"8625:53:33","nodeType":"YulIf","src":"8625:53:33"},{"nativeSrc":"8687:39:33","nodeType":"YulAssignment","src":"8687:39:33","value":{"arguments":[{"name":"headStart","nativeSrc":"8716:9:33","nodeType":"YulIdentifier","src":"8716:9:33"}],"functionName":{"name":"abi_decode_address","nativeSrc":"8697:18:33","nodeType":"YulIdentifier","src":"8697:18:33"},"nativeSrc":"8697:29:33","nodeType":"YulFunctionCall","src":"8697:29:33"},"variableNames":[{"name":"value0","nativeSrc":"8687:6:33","nodeType":"YulIdentifier","src":"8687:6:33"}]},{"nativeSrc":"8735:48:33","nodeType":"YulAssignment","src":"8735:48:33","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"8768:9:33","nodeType":"YulIdentifier","src":"8768:9:33"},{"kind":"number","nativeSrc":"8779:2:33","nodeType":"YulLiteral","src":"8779:2:33","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"8764:3:33","nodeType":"YulIdentifier","src":"8764:3:33"},"nativeSrc":"8764:18:33","nodeType":"YulFunctionCall","src":"8764:18:33"}],"functionName":{"name":"abi_decode_address","nativeSrc":"8745:18:33","nodeType":"YulIdentifier","src":"8745:18:33"},"nativeSrc":"8745:38:33","nodeType":"YulFunctionCall","src":"8745:38:33"},"variableNames":[{"name":"value1","nativeSrc":"8735:6:33","nodeType":"YulIdentifier","src":"8735:6:33"}]},{"nativeSrc":"8792:14:33","nodeType":"YulVariableDeclaration","src":"8792:14:33","value":{"kind":"number","nativeSrc":"8805:1:33","nodeType":"YulLiteral","src":"8805:1:33","type":"","value":"0"},"variables":[{"name":"value","nativeSrc":"8796:5:33","nodeType":"YulTypedName","src":"8796:5:33","type":""}]},{"nativeSrc":"8815:41:33","nodeType":"YulAssignment","src":"8815:41:33","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"8841:9:33","nodeType":"YulIdentifier","src":"8841:9:33"},{"kind":"number","nativeSrc":"8852:2:33","nodeType":"YulLiteral","src":"8852:2:33","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"8837:3:33","nodeType":"YulIdentifier","src":"8837:3:33"},"nativeSrc":"8837:18:33","nodeType":"YulFunctionCall","src":"8837:18:33"}],"functionName":{"name":"calldataload","nativeSrc":"8824:12:33","nodeType":"YulIdentifier","src":"8824:12:33"},"nativeSrc":"8824:32:33","nodeType":"YulFunctionCall","src":"8824:32:33"},"variableNames":[{"name":"value","nativeSrc":"8815:5:33","nodeType":"YulIdentifier","src":"8815:5:33"}]},{"nativeSrc":"8865:15:33","nodeType":"YulAssignment","src":"8865:15:33","value":{"name":"value","nativeSrc":"8875:5:33","nodeType":"YulIdentifier","src":"8875:5:33"},"variableNames":[{"name":"value2","nativeSrc":"8865:6:33","nodeType":"YulIdentifier","src":"8865:6:33"}]},{"nativeSrc":"8889:16:33","nodeType":"YulVariableDeclaration","src":"8889:16:33","value":{"kind":"number","nativeSrc":"8904:1:33","nodeType":"YulLiteral","src":"8904:1:33","type":"","value":"0"},"variables":[{"name":"value_1","nativeSrc":"8893:7:33","nodeType":"YulTypedName","src":"8893:7:33","type":""}]},{"nativeSrc":"8914:43:33","nodeType":"YulAssignment","src":"8914:43:33","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"8942:9:33","nodeType":"YulIdentifier","src":"8942:9:33"},{"kind":"number","nativeSrc":"8953:2:33","nodeType":"YulLiteral","src":"8953:2:33","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"8938:3:33","nodeType":"YulIdentifier","src":"8938:3:33"},"nativeSrc":"8938:18:33","nodeType":"YulFunctionCall","src":"8938:18:33"}],"functionName":{"name":"calldataload","nativeSrc":"8925:12:33","nodeType":"YulIdentifier","src":"8925:12:33"},"nativeSrc":"8925:32:33","nodeType":"YulFunctionCall","src":"8925:32:33"},"variableNames":[{"name":"value_1","nativeSrc":"8914:7:33","nodeType":"YulIdentifier","src":"8914:7:33"}]},{"nativeSrc":"8966:17:33","nodeType":"YulAssignment","src":"8966:17:33","value":{"name":"value_1","nativeSrc":"8976:7:33","nodeType":"YulIdentifier","src":"8976:7:33"},"variableNames":[{"name":"value3","nativeSrc":"8966:6:33","nodeType":"YulIdentifier","src":"8966:6:33"}]},{"nativeSrc":"8992:48:33","nodeType":"YulVariableDeclaration","src":"8992:48:33","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"9024:9:33","nodeType":"YulIdentifier","src":"9024:9:33"},{"kind":"number","nativeSrc":"9035:3:33","nodeType":"YulLiteral","src":"9035:3:33","type":"","value":"128"}],"functionName":{"name":"add","nativeSrc":"9020:3:33","nodeType":"YulIdentifier","src":"9020:3:33"},"nativeSrc":"9020:19:33","nodeType":"YulFunctionCall","src":"9020:19:33"}],"functionName":{"name":"calldataload","nativeSrc":"9007:12:33","nodeType":"YulIdentifier","src":"9007:12:33"},"nativeSrc":"9007:33:33","nodeType":"YulFunctionCall","src":"9007:33:33"},"variables":[{"name":"value_2","nativeSrc":"8996:7:33","nodeType":"YulTypedName","src":"8996:7:33","type":""}]},{"body":{"nativeSrc":"9092:16:33","nodeType":"YulBlock","src":"9092:16:33","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"9101:1:33","nodeType":"YulLiteral","src":"9101:1:33","type":"","value":"0"},{"kind":"number","nativeSrc":"9104:1:33","nodeType":"YulLiteral","src":"9104:1:33","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"9094:6:33","nodeType":"YulIdentifier","src":"9094:6:33"},"nativeSrc":"9094:12:33","nodeType":"YulFunctionCall","src":"9094:12:33"},"nativeSrc":"9094:12:33","nodeType":"YulExpressionStatement","src":"9094:12:33"}]},"condition":{"arguments":[{"arguments":[{"name":"value_2","nativeSrc":"9062:7:33","nodeType":"YulIdentifier","src":"9062:7:33"},{"arguments":[{"name":"value_2","nativeSrc":"9075:7:33","nodeType":"YulIdentifier","src":"9075:7:33"},{"kind":"number","nativeSrc":"9084:4:33","nodeType":"YulLiteral","src":"9084:4:33","type":"","value":"0xff"}],"functionName":{"name":"and","nativeSrc":"9071:3:33","nodeType":"YulIdentifier","src":"9071:3:33"},"nativeSrc":"9071:18:33","nodeType":"YulFunctionCall","src":"9071:18:33"}],"functionName":{"name":"eq","nativeSrc":"9059:2:33","nodeType":"YulIdentifier","src":"9059:2:33"},"nativeSrc":"9059:31:33","nodeType":"YulFunctionCall","src":"9059:31:33"}],"functionName":{"name":"iszero","nativeSrc":"9052:6:33","nodeType":"YulIdentifier","src":"9052:6:33"},"nativeSrc":"9052:39:33","nodeType":"YulFunctionCall","src":"9052:39:33"},"nativeSrc":"9049:59:33","nodeType":"YulIf","src":"9049:59:33"},{"nativeSrc":"9117:17:33","nodeType":"YulAssignment","src":"9117:17:33","value":{"name":"value_2","nativeSrc":"9127:7:33","nodeType":"YulIdentifier","src":"9127:7:33"},"variableNames":[{"name":"value4","nativeSrc":"9117:6:33","nodeType":"YulIdentifier","src":"9117:6:33"}]},{"nativeSrc":"9143:16:33","nodeType":"YulVariableDeclaration","src":"9143:16:33","value":{"kind":"number","nativeSrc":"9158:1:33","nodeType":"YulLiteral","src":"9158:1:33","type":"","value":"0"},"variables":[{"name":"value_3","nativeSrc":"9147:7:33","nodeType":"YulTypedName","src":"9147:7:33","type":""}]},{"nativeSrc":"9168:44:33","nodeType":"YulAssignment","src":"9168:44:33","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"9196:9:33","nodeType":"YulIdentifier","src":"9196:9:33"},{"kind":"number","nativeSrc":"9207:3:33","nodeType":"YulLiteral","src":"9207:3:33","type":"","value":"160"}],"functionName":{"name":"add","nativeSrc":"9192:3:33","nodeType":"YulIdentifier","src":"9192:3:33"},"nativeSrc":"9192:19:33","nodeType":"YulFunctionCall","src":"9192:19:33"}],"functionName":{"name":"calldataload","nativeSrc":"9179:12:33","nodeType":"YulIdentifier","src":"9179:12:33"},"nativeSrc":"9179:33:33","nodeType":"YulFunctionCall","src":"9179:33:33"},"variableNames":[{"name":"value_3","nativeSrc":"9168:7:33","nodeType":"YulIdentifier","src":"9168:7:33"}]},{"nativeSrc":"9221:17:33","nodeType":"YulAssignment","src":"9221:17:33","value":{"name":"value_3","nativeSrc":"9231:7:33","nodeType":"YulIdentifier","src":"9231:7:33"},"variableNames":[{"name":"value5","nativeSrc":"9221:6:33","nodeType":"YulIdentifier","src":"9221:6:33"}]},{"nativeSrc":"9247:16:33","nodeType":"YulVariableDeclaration","src":"9247:16:33","value":{"kind":"number","nativeSrc":"9262:1:33","nodeType":"YulLiteral","src":"9262:1:33","type":"","value":"0"},"variables":[{"name":"value_4","nativeSrc":"9251:7:33","nodeType":"YulTypedName","src":"9251:7:33","type":""}]},{"nativeSrc":"9272:44:33","nodeType":"YulAssignment","src":"9272:44:33","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"9300:9:33","nodeType":"YulIdentifier","src":"9300:9:33"},{"kind":"number","nativeSrc":"9311:3:33","nodeType":"YulLiteral","src":"9311:3:33","type":"","value":"192"}],"functionName":{"name":"add","nativeSrc":"9296:3:33","nodeType":"YulIdentifier","src":"9296:3:33"},"nativeSrc":"9296:19:33","nodeType":"YulFunctionCall","src":"9296:19:33"}],"functionName":{"name":"calldataload","nativeSrc":"9283:12:33","nodeType":"YulIdentifier","src":"9283:12:33"},"nativeSrc":"9283:33:33","nodeType":"YulFunctionCall","src":"9283:33:33"},"variableNames":[{"name":"value_4","nativeSrc":"9272:7:33","nodeType":"YulIdentifier","src":"9272:7:33"}]},{"nativeSrc":"9325:17:33","nodeType":"YulAssignment","src":"9325:17:33","value":{"name":"value_4","nativeSrc":"9335:7:33","nodeType":"YulIdentifier","src":"9335:7:33"},"variableNames":[{"name":"value6","nativeSrc":"9325:6:33","nodeType":"YulIdentifier","src":"9325:6:33"}]}]},"name":"abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_uint8t_bytes32t_bytes32","nativeSrc":"8445:903:33","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"8533:9:33","nodeType":"YulTypedName","src":"8533:9:33","type":""},{"name":"dataEnd","nativeSrc":"8544:7:33","nodeType":"YulTypedName","src":"8544:7:33","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"8556:6:33","nodeType":"YulTypedName","src":"8556:6:33","type":""},{"name":"value1","nativeSrc":"8564:6:33","nodeType":"YulTypedName","src":"8564:6:33","type":""},{"name":"value2","nativeSrc":"8572:6:33","nodeType":"YulTypedName","src":"8572:6:33","type":""},{"name":"value3","nativeSrc":"8580:6:33","nodeType":"YulTypedName","src":"8580:6:33","type":""},{"name":"value4","nativeSrc":"8588:6:33","nodeType":"YulTypedName","src":"8588:6:33","type":""},{"name":"value5","nativeSrc":"8596:6:33","nodeType":"YulTypedName","src":"8596:6:33","type":""},{"name":"value6","nativeSrc":"8604:6:33","nodeType":"YulTypedName","src":"8604:6:33","type":""}],"src":"8445:903:33"},{"body":{"nativeSrc":"9440:173:33","nodeType":"YulBlock","src":"9440:173:33","statements":[{"body":{"nativeSrc":"9486:16:33","nodeType":"YulBlock","src":"9486:16:33","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"9495:1:33","nodeType":"YulLiteral","src":"9495:1:33","type":"","value":"0"},{"kind":"number","nativeSrc":"9498:1:33","nodeType":"YulLiteral","src":"9498:1:33","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"9488:6:33","nodeType":"YulIdentifier","src":"9488:6:33"},"nativeSrc":"9488:12:33","nodeType":"YulFunctionCall","src":"9488:12:33"},"nativeSrc":"9488:12:33","nodeType":"YulExpressionStatement","src":"9488:12:33"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"9461:7:33","nodeType":"YulIdentifier","src":"9461:7:33"},{"name":"headStart","nativeSrc":"9470:9:33","nodeType":"YulIdentifier","src":"9470:9:33"}],"functionName":{"name":"sub","nativeSrc":"9457:3:33","nodeType":"YulIdentifier","src":"9457:3:33"},"nativeSrc":"9457:23:33","nodeType":"YulFunctionCall","src":"9457:23:33"},{"kind":"number","nativeSrc":"9482:2:33","nodeType":"YulLiteral","src":"9482:2:33","type":"","value":"64"}],"functionName":{"name":"slt","nativeSrc":"9453:3:33","nodeType":"YulIdentifier","src":"9453:3:33"},"nativeSrc":"9453:32:33","nodeType":"YulFunctionCall","src":"9453:32:33"},"nativeSrc":"9450:52:33","nodeType":"YulIf","src":"9450:52:33"},{"nativeSrc":"9511:39:33","nodeType":"YulAssignment","src":"9511:39:33","value":{"arguments":[{"name":"headStart","nativeSrc":"9540:9:33","nodeType":"YulIdentifier","src":"9540:9:33"}],"functionName":{"name":"abi_decode_address","nativeSrc":"9521:18:33","nodeType":"YulIdentifier","src":"9521:18:33"},"nativeSrc":"9521:29:33","nodeType":"YulFunctionCall","src":"9521:29:33"},"variableNames":[{"name":"value0","nativeSrc":"9511:6:33","nodeType":"YulIdentifier","src":"9511:6:33"}]},{"nativeSrc":"9559:48:33","nodeType":"YulAssignment","src":"9559:48:33","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"9592:9:33","nodeType":"YulIdentifier","src":"9592:9:33"},{"kind":"number","nativeSrc":"9603:2:33","nodeType":"YulLiteral","src":"9603:2:33","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"9588:3:33","nodeType":"YulIdentifier","src":"9588:3:33"},"nativeSrc":"9588:18:33","nodeType":"YulFunctionCall","src":"9588:18:33"}],"functionName":{"name":"abi_decode_address","nativeSrc":"9569:18:33","nodeType":"YulIdentifier","src":"9569:18:33"},"nativeSrc":"9569:38:33","nodeType":"YulFunctionCall","src":"9569:38:33"},"variableNames":[{"name":"value1","nativeSrc":"9559:6:33","nodeType":"YulIdentifier","src":"9559:6:33"}]}]},"name":"abi_decode_tuple_t_addresst_address","nativeSrc":"9353:260:33","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"9398:9:33","nodeType":"YulTypedName","src":"9398:9:33","type":""},{"name":"dataEnd","nativeSrc":"9409:7:33","nodeType":"YulTypedName","src":"9409:7:33","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"9421:6:33","nodeType":"YulTypedName","src":"9421:6:33","type":""},{"name":"value1","nativeSrc":"9429:6:33","nodeType":"YulTypedName","src":"9429:6:33","type":""}],"src":"9353:260:33"},{"body":{"nativeSrc":"9673:325:33","nodeType":"YulBlock","src":"9673:325:33","statements":[{"nativeSrc":"9683:22:33","nodeType":"YulAssignment","src":"9683:22:33","value":{"arguments":[{"kind":"number","nativeSrc":"9697:1:33","nodeType":"YulLiteral","src":"9697:1:33","type":"","value":"1"},{"name":"data","nativeSrc":"9700:4:33","nodeType":"YulIdentifier","src":"9700:4:33"}],"functionName":{"name":"shr","nativeSrc":"9693:3:33","nodeType":"YulIdentifier","src":"9693:3:33"},"nativeSrc":"9693:12:33","nodeType":"YulFunctionCall","src":"9693:12:33"},"variableNames":[{"name":"length","nativeSrc":"9683:6:33","nodeType":"YulIdentifier","src":"9683:6:33"}]},{"nativeSrc":"9714:38:33","nodeType":"YulVariableDeclaration","src":"9714:38:33","value":{"arguments":[{"name":"data","nativeSrc":"9744:4:33","nodeType":"YulIdentifier","src":"9744:4:33"},{"kind":"number","nativeSrc":"9750:1:33","nodeType":"YulLiteral","src":"9750:1:33","type":"","value":"1"}],"functionName":{"name":"and","nativeSrc":"9740:3:33","nodeType":"YulIdentifier","src":"9740:3:33"},"nativeSrc":"9740:12:33","nodeType":"YulFunctionCall","src":"9740:12:33"},"variables":[{"name":"outOfPlaceEncoding","nativeSrc":"9718:18:33","nodeType":"YulTypedName","src":"9718:18:33","type":""}]},{"body":{"nativeSrc":"9791:31:33","nodeType":"YulBlock","src":"9791:31:33","statements":[{"nativeSrc":"9793:27:33","nodeType":"YulAssignment","src":"9793:27:33","value":{"arguments":[{"name":"length","nativeSrc":"9807:6:33","nodeType":"YulIdentifier","src":"9807:6:33"},{"kind":"number","nativeSrc":"9815:4:33","nodeType":"YulLiteral","src":"9815:4:33","type":"","value":"0x7f"}],"functionName":{"name":"and","nativeSrc":"9803:3:33","nodeType":"YulIdentifier","src":"9803:3:33"},"nativeSrc":"9803:17:33","nodeType":"YulFunctionCall","src":"9803:17:33"},"variableNames":[{"name":"length","nativeSrc":"9793:6:33","nodeType":"YulIdentifier","src":"9793:6:33"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nativeSrc":"9771:18:33","nodeType":"YulIdentifier","src":"9771:18:33"}],"functionName":{"name":"iszero","nativeSrc":"9764:6:33","nodeType":"YulIdentifier","src":"9764:6:33"},"nativeSrc":"9764:26:33","nodeType":"YulFunctionCall","src":"9764:26:33"},"nativeSrc":"9761:61:33","nodeType":"YulIf","src":"9761:61:33"},{"body":{"nativeSrc":"9881:111:33","nodeType":"YulBlock","src":"9881:111:33","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"9902:1:33","nodeType":"YulLiteral","src":"9902:1:33","type":"","value":"0"},{"arguments":[{"kind":"number","nativeSrc":"9909:3:33","nodeType":"YulLiteral","src":"9909:3:33","type":"","value":"224"},{"kind":"number","nativeSrc":"9914:10:33","nodeType":"YulLiteral","src":"9914:10:33","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nativeSrc":"9905:3:33","nodeType":"YulIdentifier","src":"9905:3:33"},"nativeSrc":"9905:20:33","nodeType":"YulFunctionCall","src":"9905:20:33"}],"functionName":{"name":"mstore","nativeSrc":"9895:6:33","nodeType":"YulIdentifier","src":"9895:6:33"},"nativeSrc":"9895:31:33","nodeType":"YulFunctionCall","src":"9895:31:33"},"nativeSrc":"9895:31:33","nodeType":"YulExpressionStatement","src":"9895:31:33"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"9946:1:33","nodeType":"YulLiteral","src":"9946:1:33","type":"","value":"4"},{"kind":"number","nativeSrc":"9949:4:33","nodeType":"YulLiteral","src":"9949:4:33","type":"","value":"0x22"}],"functionName":{"name":"mstore","nativeSrc":"9939:6:33","nodeType":"YulIdentifier","src":"9939:6:33"},"nativeSrc":"9939:15:33","nodeType":"YulFunctionCall","src":"9939:15:33"},"nativeSrc":"9939:15:33","nodeType":"YulExpressionStatement","src":"9939:15:33"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"9974:1:33","nodeType":"YulLiteral","src":"9974:1:33","type":"","value":"0"},{"kind":"number","nativeSrc":"9977:4:33","nodeType":"YulLiteral","src":"9977:4:33","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"9967:6:33","nodeType":"YulIdentifier","src":"9967:6:33"},"nativeSrc":"9967:15:33","nodeType":"YulFunctionCall","src":"9967:15:33"},"nativeSrc":"9967:15:33","nodeType":"YulExpressionStatement","src":"9967:15:33"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nativeSrc":"9837:18:33","nodeType":"YulIdentifier","src":"9837:18:33"},{"arguments":[{"name":"length","nativeSrc":"9860:6:33","nodeType":"YulIdentifier","src":"9860:6:33"},{"kind":"number","nativeSrc":"9868:2:33","nodeType":"YulLiteral","src":"9868:2:33","type":"","value":"32"}],"functionName":{"name":"lt","nativeSrc":"9857:2:33","nodeType":"YulIdentifier","src":"9857:2:33"},"nativeSrc":"9857:14:33","nodeType":"YulFunctionCall","src":"9857:14:33"}],"functionName":{"name":"eq","nativeSrc":"9834:2:33","nodeType":"YulIdentifier","src":"9834:2:33"},"nativeSrc":"9834:38:33","nodeType":"YulFunctionCall","src":"9834:38:33"},"nativeSrc":"9831:161:33","nodeType":"YulIf","src":"9831:161:33"}]},"name":"extract_byte_array_length","nativeSrc":"9618:380:33","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nativeSrc":"9653:4:33","nodeType":"YulTypedName","src":"9653:4:33","type":""}],"returnVariables":[{"name":"length","nativeSrc":"9662:6:33","nodeType":"YulTypedName","src":"9662:6:33","type":""}],"src":"9618:380:33"},{"body":{"nativeSrc":"10102:101:33","nodeType":"YulBlock","src":"10102:101:33","statements":[{"nativeSrc":"10112:26:33","nodeType":"YulAssignment","src":"10112:26:33","value":{"arguments":[{"name":"headStart","nativeSrc":"10124:9:33","nodeType":"YulIdentifier","src":"10124:9:33"},{"kind":"number","nativeSrc":"10135:2:33","nodeType":"YulLiteral","src":"10135:2:33","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"10120:3:33","nodeType":"YulIdentifier","src":"10120:3:33"},"nativeSrc":"10120:18:33","nodeType":"YulFunctionCall","src":"10120:18:33"},"variableNames":[{"name":"tail","nativeSrc":"10112:4:33","nodeType":"YulIdentifier","src":"10112:4:33"}]},{"expression":{"arguments":[{"name":"headStart","nativeSrc":"10154:9:33","nodeType":"YulIdentifier","src":"10154:9:33"},{"arguments":[{"name":"value0","nativeSrc":"10169:6:33","nodeType":"YulIdentifier","src":"10169:6:33"},{"kind":"number","nativeSrc":"10177:18:33","nodeType":"YulLiteral","src":"10177:18:33","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"and","nativeSrc":"10165:3:33","nodeType":"YulIdentifier","src":"10165:3:33"},"nativeSrc":"10165:31:33","nodeType":"YulFunctionCall","src":"10165:31:33"}],"functionName":{"name":"mstore","nativeSrc":"10147:6:33","nodeType":"YulIdentifier","src":"10147:6:33"},"nativeSrc":"10147:50:33","nodeType":"YulFunctionCall","src":"10147:50:33"},"nativeSrc":"10147:50:33","nodeType":"YulExpressionStatement","src":"10147:50:33"}]},"name":"abi_encode_tuple_t_uint64__to_t_uint64__fromStack_reversed","nativeSrc":"10003:200:33","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"10071:9:33","nodeType":"YulTypedName","src":"10071:9:33","type":""},{"name":"value0","nativeSrc":"10082:6:33","nodeType":"YulTypedName","src":"10082:6:33","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"10093:4:33","nodeType":"YulTypedName","src":"10093:4:33","type":""}],"src":"10003:200:33"},{"body":{"nativeSrc":"10382:179:33","nodeType":"YulBlock","src":"10382:179:33","statements":[{"expression":{"arguments":[{"name":"headStart","nativeSrc":"10399:9:33","nodeType":"YulIdentifier","src":"10399:9:33"},{"kind":"number","nativeSrc":"10410:2:33","nodeType":"YulLiteral","src":"10410:2:33","type":"","value":"32"}],"functionName":{"name":"mstore","nativeSrc":"10392:6:33","nodeType":"YulIdentifier","src":"10392:6:33"},"nativeSrc":"10392:21:33","nodeType":"YulFunctionCall","src":"10392:21:33"},"nativeSrc":"10392:21:33","nodeType":"YulExpressionStatement","src":"10392:21:33"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"10433:9:33","nodeType":"YulIdentifier","src":"10433:9:33"},{"kind":"number","nativeSrc":"10444:2:33","nodeType":"YulLiteral","src":"10444:2:33","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"10429:3:33","nodeType":"YulIdentifier","src":"10429:3:33"},"nativeSrc":"10429:18:33","nodeType":"YulFunctionCall","src":"10429:18:33"},{"kind":"number","nativeSrc":"10449:2:33","nodeType":"YulLiteral","src":"10449:2:33","type":"","value":"29"}],"functionName":{"name":"mstore","nativeSrc":"10422:6:33","nodeType":"YulIdentifier","src":"10422:6:33"},"nativeSrc":"10422:30:33","nodeType":"YulFunctionCall","src":"10422:30:33"},"nativeSrc":"10422:30:33","nodeType":"YulExpressionStatement","src":"10422:30:33"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"10472:9:33","nodeType":"YulIdentifier","src":"10472:9:33"},{"kind":"number","nativeSrc":"10483:2:33","nodeType":"YulLiteral","src":"10483:2:33","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"10468:3:33","nodeType":"YulIdentifier","src":"10468:3:33"},"nativeSrc":"10468:18:33","nodeType":"YulFunctionCall","src":"10468:18:33"},{"hexValue":"43616e6e6f7420626c61636b6c697374207a65726f2061646472657373","kind":"string","nativeSrc":"10488:31:33","nodeType":"YulLiteral","src":"10488:31:33","type":"","value":"Cannot blacklist zero address"}],"functionName":{"name":"mstore","nativeSrc":"10461:6:33","nodeType":"YulIdentifier","src":"10461:6:33"},"nativeSrc":"10461:59:33","nodeType":"YulFunctionCall","src":"10461:59:33"},"nativeSrc":"10461:59:33","nodeType":"YulExpressionStatement","src":"10461:59:33"},{"nativeSrc":"10529:26:33","nodeType":"YulAssignment","src":"10529:26:33","value":{"arguments":[{"name":"headStart","nativeSrc":"10541:9:33","nodeType":"YulIdentifier","src":"10541:9:33"},{"kind":"number","nativeSrc":"10552:2:33","nodeType":"YulLiteral","src":"10552:2:33","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"10537:3:33","nodeType":"YulIdentifier","src":"10537:3:33"},"nativeSrc":"10537:18:33","nodeType":"YulFunctionCall","src":"10537:18:33"},"variableNames":[{"name":"tail","nativeSrc":"10529:4:33","nodeType":"YulIdentifier","src":"10529:4:33"}]}]},"name":"abi_encode_tuple_t_stringliteral_a504a1fbd4e76ffb6f138f0845a9c693852f9d2da4111969422ff798bbd49298__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"10208:353:33","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"10359:9:33","nodeType":"YulTypedName","src":"10359:9:33","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"10373:4:33","nodeType":"YulTypedName","src":"10373:4:33","type":""}],"src":"10208:353:33"},{"body":{"nativeSrc":"10740:177:33","nodeType":"YulBlock","src":"10740:177:33","statements":[{"expression":{"arguments":[{"name":"headStart","nativeSrc":"10757:9:33","nodeType":"YulIdentifier","src":"10757:9:33"},{"kind":"number","nativeSrc":"10768:2:33","nodeType":"YulLiteral","src":"10768:2:33","type":"","value":"32"}],"functionName":{"name":"mstore","nativeSrc":"10750:6:33","nodeType":"YulIdentifier","src":"10750:6:33"},"nativeSrc":"10750:21:33","nodeType":"YulFunctionCall","src":"10750:21:33"},"nativeSrc":"10750:21:33","nodeType":"YulExpressionStatement","src":"10750:21:33"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"10791:9:33","nodeType":"YulIdentifier","src":"10791:9:33"},{"kind":"number","nativeSrc":"10802:2:33","nodeType":"YulLiteral","src":"10802:2:33","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"10787:3:33","nodeType":"YulIdentifier","src":"10787:3:33"},"nativeSrc":"10787:18:33","nodeType":"YulFunctionCall","src":"10787:18:33"},{"kind":"number","nativeSrc":"10807:2:33","nodeType":"YulLiteral","src":"10807:2:33","type":"","value":"27"}],"functionName":{"name":"mstore","nativeSrc":"10780:6:33","nodeType":"YulIdentifier","src":"10780:6:33"},"nativeSrc":"10780:30:33","nodeType":"YulFunctionCall","src":"10780:30:33"},"nativeSrc":"10780:30:33","nodeType":"YulExpressionStatement","src":"10780:30:33"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"10830:9:33","nodeType":"YulIdentifier","src":"10830:9:33"},{"kind":"number","nativeSrc":"10841:2:33","nodeType":"YulLiteral","src":"10841:2:33","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"10826:3:33","nodeType":"YulIdentifier","src":"10826:3:33"},"nativeSrc":"10826:18:33","nodeType":"YulFunctionCall","src":"10826:18:33"},{"hexValue":"4164647265737320616c726561647920626c61636b6c6973746564","kind":"string","nativeSrc":"10846:29:33","nodeType":"YulLiteral","src":"10846:29:33","type":"","value":"Address already blacklisted"}],"functionName":{"name":"mstore","nativeSrc":"10819:6:33","nodeType":"YulIdentifier","src":"10819:6:33"},"nativeSrc":"10819:57:33","nodeType":"YulFunctionCall","src":"10819:57:33"},"nativeSrc":"10819:57:33","nodeType":"YulExpressionStatement","src":"10819:57:33"},{"nativeSrc":"10885:26:33","nodeType":"YulAssignment","src":"10885:26:33","value":{"arguments":[{"name":"headStart","nativeSrc":"10897:9:33","nodeType":"YulIdentifier","src":"10897:9:33"},{"kind":"number","nativeSrc":"10908:2:33","nodeType":"YulLiteral","src":"10908:2:33","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"10893:3:33","nodeType":"YulIdentifier","src":"10893:3:33"},"nativeSrc":"10893:18:33","nodeType":"YulFunctionCall","src":"10893:18:33"},"variableNames":[{"name":"tail","nativeSrc":"10885:4:33","nodeType":"YulIdentifier","src":"10885:4:33"}]}]},"name":"abi_encode_tuple_t_stringliteral_f788ca005c215621f24c46d9b760e3e23a15baf9bf1a15ac76063a2cdbbdd9f2__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"10566:351:33","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"10717:9:33","nodeType":"YulTypedName","src":"10717:9:33","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"10731:4:33","nodeType":"YulTypedName","src":"10731:4:33","type":""}],"src":"10566:351:33"},{"body":{"nativeSrc":"11096:173:33","nodeType":"YulBlock","src":"11096:173:33","statements":[{"expression":{"arguments":[{"name":"headStart","nativeSrc":"11113:9:33","nodeType":"YulIdentifier","src":"11113:9:33"},{"kind":"number","nativeSrc":"11124:2:33","nodeType":"YulLiteral","src":"11124:2:33","type":"","value":"32"}],"functionName":{"name":"mstore","nativeSrc":"11106:6:33","nodeType":"YulIdentifier","src":"11106:6:33"},"nativeSrc":"11106:21:33","nodeType":"YulFunctionCall","src":"11106:21:33"},"nativeSrc":"11106:21:33","nodeType":"YulExpressionStatement","src":"11106:21:33"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"11147:9:33","nodeType":"YulIdentifier","src":"11147:9:33"},{"kind":"number","nativeSrc":"11158:2:33","nodeType":"YulLiteral","src":"11158:2:33","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"11143:3:33","nodeType":"YulIdentifier","src":"11143:3:33"},"nativeSrc":"11143:18:33","nodeType":"YulFunctionCall","src":"11143:18:33"},{"kind":"number","nativeSrc":"11163:2:33","nodeType":"YulLiteral","src":"11163:2:33","type":"","value":"23"}],"functionName":{"name":"mstore","nativeSrc":"11136:6:33","nodeType":"YulIdentifier","src":"11136:6:33"},"nativeSrc":"11136:30:33","nodeType":"YulFunctionCall","src":"11136:30:33"},"nativeSrc":"11136:30:33","nodeType":"YulExpressionStatement","src":"11136:30:33"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"11186:9:33","nodeType":"YulIdentifier","src":"11186:9:33"},{"kind":"number","nativeSrc":"11197:2:33","nodeType":"YulLiteral","src":"11197:2:33","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"11182:3:33","nodeType":"YulIdentifier","src":"11182:3:33"},"nativeSrc":"11182:18:33","nodeType":"YulFunctionCall","src":"11182:18:33"},{"hexValue":"41646472657373206e6f7420626c61636b6c6973746564","kind":"string","nativeSrc":"11202:25:33","nodeType":"YulLiteral","src":"11202:25:33","type":"","value":"Address not blacklisted"}],"functionName":{"name":"mstore","nativeSrc":"11175:6:33","nodeType":"YulIdentifier","src":"11175:6:33"},"nativeSrc":"11175:53:33","nodeType":"YulFunctionCall","src":"11175:53:33"},"nativeSrc":"11175:53:33","nodeType":"YulExpressionStatement","src":"11175:53:33"},{"nativeSrc":"11237:26:33","nodeType":"YulAssignment","src":"11237:26:33","value":{"arguments":[{"name":"headStart","nativeSrc":"11249:9:33","nodeType":"YulIdentifier","src":"11249:9:33"},{"kind":"number","nativeSrc":"11260:2:33","nodeType":"YulLiteral","src":"11260:2:33","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"11245:3:33","nodeType":"YulIdentifier","src":"11245:3:33"},"nativeSrc":"11245:18:33","nodeType":"YulFunctionCall","src":"11245:18:33"},"variableNames":[{"name":"tail","nativeSrc":"11237:4:33","nodeType":"YulIdentifier","src":"11237:4:33"}]}]},"name":"abi_encode_tuple_t_stringliteral_461caef3ccd3511790a63bffbea84243153500414f0847913bd8083d6d4c23b3__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"10922:347:33","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"11073:9:33","nodeType":"YulTypedName","src":"11073:9:33","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"11087:4:33","nodeType":"YulTypedName","src":"11087:4:33","type":""}],"src":"10922:347:33"},{"body":{"nativeSrc":"11306:95:33","nodeType":"YulBlock","src":"11306:95:33","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"11323:1:33","nodeType":"YulLiteral","src":"11323:1:33","type":"","value":"0"},{"arguments":[{"kind":"number","nativeSrc":"11330:3:33","nodeType":"YulLiteral","src":"11330:3:33","type":"","value":"224"},{"kind":"number","nativeSrc":"11335:10:33","nodeType":"YulLiteral","src":"11335:10:33","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nativeSrc":"11326:3:33","nodeType":"YulIdentifier","src":"11326:3:33"},"nativeSrc":"11326:20:33","nodeType":"YulFunctionCall","src":"11326:20:33"}],"functionName":{"name":"mstore","nativeSrc":"11316:6:33","nodeType":"YulIdentifier","src":"11316:6:33"},"nativeSrc":"11316:31:33","nodeType":"YulFunctionCall","src":"11316:31:33"},"nativeSrc":"11316:31:33","nodeType":"YulExpressionStatement","src":"11316:31:33"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"11363:1:33","nodeType":"YulLiteral","src":"11363:1:33","type":"","value":"4"},{"kind":"number","nativeSrc":"11366:4:33","nodeType":"YulLiteral","src":"11366:4:33","type":"","value":"0x32"}],"functionName":{"name":"mstore","nativeSrc":"11356:6:33","nodeType":"YulIdentifier","src":"11356:6:33"},"nativeSrc":"11356:15:33","nodeType":"YulFunctionCall","src":"11356:15:33"},"nativeSrc":"11356:15:33","nodeType":"YulExpressionStatement","src":"11356:15:33"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"11387:1:33","nodeType":"YulLiteral","src":"11387:1:33","type":"","value":"0"},{"kind":"number","nativeSrc":"11390:4:33","nodeType":"YulLiteral","src":"11390:4:33","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"11380:6:33","nodeType":"YulIdentifier","src":"11380:6:33"},"nativeSrc":"11380:15:33","nodeType":"YulFunctionCall","src":"11380:15:33"},"nativeSrc":"11380:15:33","nodeType":"YulExpressionStatement","src":"11380:15:33"}]},"name":"panic_error_0x32","nativeSrc":"11274:127:33","nodeType":"YulFunctionDefinition","src":"11274:127:33"},{"body":{"nativeSrc":"11535:119:33","nodeType":"YulBlock","src":"11535:119:33","statements":[{"nativeSrc":"11545:26:33","nodeType":"YulAssignment","src":"11545:26:33","value":{"arguments":[{"name":"headStart","nativeSrc":"11557:9:33","nodeType":"YulIdentifier","src":"11557:9:33"},{"kind":"number","nativeSrc":"11568:2:33","nodeType":"YulLiteral","src":"11568:2:33","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"11553:3:33","nodeType":"YulIdentifier","src":"11553:3:33"},"nativeSrc":"11553:18:33","nodeType":"YulFunctionCall","src":"11553:18:33"},"variableNames":[{"name":"tail","nativeSrc":"11545:4:33","nodeType":"YulIdentifier","src":"11545:4:33"}]},{"expression":{"arguments":[{"name":"headStart","nativeSrc":"11587:9:33","nodeType":"YulIdentifier","src":"11587:9:33"},{"name":"value0","nativeSrc":"11598:6:33","nodeType":"YulIdentifier","src":"11598:6:33"}],"functionName":{"name":"mstore","nativeSrc":"11580:6:33","nodeType":"YulIdentifier","src":"11580:6:33"},"nativeSrc":"11580:25:33","nodeType":"YulFunctionCall","src":"11580:25:33"},"nativeSrc":"11580:25:33","nodeType":"YulExpressionStatement","src":"11580:25:33"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"11625:9:33","nodeType":"YulIdentifier","src":"11625:9:33"},{"kind":"number","nativeSrc":"11636:2:33","nodeType":"YulLiteral","src":"11636:2:33","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"11621:3:33","nodeType":"YulIdentifier","src":"11621:3:33"},"nativeSrc":"11621:18:33","nodeType":"YulFunctionCall","src":"11621:18:33"},{"name":"value1","nativeSrc":"11641:6:33","nodeType":"YulIdentifier","src":"11641:6:33"}],"functionName":{"name":"mstore","nativeSrc":"11614:6:33","nodeType":"YulIdentifier","src":"11614:6:33"},"nativeSrc":"11614:34:33","nodeType":"YulFunctionCall","src":"11614:34:33"},"nativeSrc":"11614:34:33","nodeType":"YulExpressionStatement","src":"11614:34:33"}]},"name":"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed","nativeSrc":"11406:248:33","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"11496:9:33","nodeType":"YulTypedName","src":"11496:9:33","type":""},{"name":"value1","nativeSrc":"11507:6:33","nodeType":"YulTypedName","src":"11507:6:33","type":""},{"name":"value0","nativeSrc":"11515:6:33","nodeType":"YulTypedName","src":"11515:6:33","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"11526:4:33","nodeType":"YulTypedName","src":"11526:4:33","type":""}],"src":"11406:248:33"},{"body":{"nativeSrc":"11833:171:33","nodeType":"YulBlock","src":"11833:171:33","statements":[{"expression":{"arguments":[{"name":"headStart","nativeSrc":"11850:9:33","nodeType":"YulIdentifier","src":"11850:9:33"},{"kind":"number","nativeSrc":"11861:2:33","nodeType":"YulLiteral","src":"11861:2:33","type":"","value":"32"}],"functionName":{"name":"mstore","nativeSrc":"11843:6:33","nodeType":"YulIdentifier","src":"11843:6:33"},"nativeSrc":"11843:21:33","nodeType":"YulFunctionCall","src":"11843:21:33"},"nativeSrc":"11843:21:33","nodeType":"YulExpressionStatement","src":"11843:21:33"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"11884:9:33","nodeType":"YulIdentifier","src":"11884:9:33"},{"kind":"number","nativeSrc":"11895:2:33","nodeType":"YulLiteral","src":"11895:2:33","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"11880:3:33","nodeType":"YulIdentifier","src":"11880:3:33"},"nativeSrc":"11880:18:33","nodeType":"YulFunctionCall","src":"11880:18:33"},{"kind":"number","nativeSrc":"11900:2:33","nodeType":"YulLiteral","src":"11900:2:33","type":"","value":"21"}],"functionName":{"name":"mstore","nativeSrc":"11873:6:33","nodeType":"YulIdentifier","src":"11873:6:33"},"nativeSrc":"11873:30:33","nodeType":"YulFunctionCall","src":"11873:30:33"},"nativeSrc":"11873:30:33","nodeType":"YulExpressionStatement","src":"11873:30:33"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"11923:9:33","nodeType":"YulIdentifier","src":"11923:9:33"},{"kind":"number","nativeSrc":"11934:2:33","nodeType":"YulLiteral","src":"11934:2:33","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"11919:3:33","nodeType":"YulIdentifier","src":"11919:3:33"},"nativeSrc":"11919:18:33","nodeType":"YulFunctionCall","src":"11919:18:33"},{"hexValue":"4549503731323a20556e696e697469616c697a6564","kind":"string","nativeSrc":"11939:23:33","nodeType":"YulLiteral","src":"11939:23:33","type":"","value":"EIP712: Uninitialized"}],"functionName":{"name":"mstore","nativeSrc":"11912:6:33","nodeType":"YulIdentifier","src":"11912:6:33"},"nativeSrc":"11912:51:33","nodeType":"YulFunctionCall","src":"11912:51:33"},"nativeSrc":"11912:51:33","nodeType":"YulExpressionStatement","src":"11912:51:33"},{"nativeSrc":"11972:26:33","nodeType":"YulAssignment","src":"11972:26:33","value":{"arguments":[{"name":"headStart","nativeSrc":"11984:9:33","nodeType":"YulIdentifier","src":"11984:9:33"},{"kind":"number","nativeSrc":"11995:2:33","nodeType":"YulLiteral","src":"11995:2:33","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"11980:3:33","nodeType":"YulIdentifier","src":"11980:3:33"},"nativeSrc":"11980:18:33","nodeType":"YulFunctionCall","src":"11980:18:33"},"variableNames":[{"name":"tail","nativeSrc":"11972:4:33","nodeType":"YulIdentifier","src":"11972:4:33"}]}]},"name":"abi_encode_tuple_t_stringliteral_2e5045ff73280aa8e8acd8c82710f23812497f87f7f576e2220a2ddd0d45eade__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"11659:345:33","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"11810:9:33","nodeType":"YulTypedName","src":"11810:9:33","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"11824:4:33","nodeType":"YulTypedName","src":"11824:4:33","type":""}],"src":"11659:345:33"},{"body":{"nativeSrc":"12183:172:33","nodeType":"YulBlock","src":"12183:172:33","statements":[{"expression":{"arguments":[{"name":"headStart","nativeSrc":"12200:9:33","nodeType":"YulIdentifier","src":"12200:9:33"},{"kind":"number","nativeSrc":"12211:2:33","nodeType":"YulLiteral","src":"12211:2:33","type":"","value":"32"}],"functionName":{"name":"mstore","nativeSrc":"12193:6:33","nodeType":"YulIdentifier","src":"12193:6:33"},"nativeSrc":"12193:21:33","nodeType":"YulFunctionCall","src":"12193:21:33"},"nativeSrc":"12193:21:33","nodeType":"YulExpressionStatement","src":"12193:21:33"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"12234:9:33","nodeType":"YulIdentifier","src":"12234:9:33"},{"kind":"number","nativeSrc":"12245:2:33","nodeType":"YulLiteral","src":"12245:2:33","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"12230:3:33","nodeType":"YulIdentifier","src":"12230:3:33"},"nativeSrc":"12230:18:33","nodeType":"YulFunctionCall","src":"12230:18:33"},{"kind":"number","nativeSrc":"12250:2:33","nodeType":"YulLiteral","src":"12250:2:33","type":"","value":"22"}],"functionName":{"name":"mstore","nativeSrc":"12223:6:33","nodeType":"YulIdentifier","src":"12223:6:33"},"nativeSrc":"12223:30:33","nodeType":"YulFunctionCall","src":"12223:30:33"},"nativeSrc":"12223:30:33","nodeType":"YulExpressionStatement","src":"12223:30:33"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"12273:9:33","nodeType":"YulIdentifier","src":"12273:9:33"},{"kind":"number","nativeSrc":"12284:2:33","nodeType":"YulLiteral","src":"12284:2:33","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"12269:3:33","nodeType":"YulIdentifier","src":"12269:3:33"},"nativeSrc":"12269:18:33","nodeType":"YulFunctionCall","src":"12269:18:33"},{"hexValue":"417272617973206c656e677468206d69736d61746368","kind":"string","nativeSrc":"12289:24:33","nodeType":"YulLiteral","src":"12289:24:33","type":"","value":"Arrays length mismatch"}],"functionName":{"name":"mstore","nativeSrc":"12262:6:33","nodeType":"YulIdentifier","src":"12262:6:33"},"nativeSrc":"12262:52:33","nodeType":"YulFunctionCall","src":"12262:52:33"},"nativeSrc":"12262:52:33","nodeType":"YulExpressionStatement","src":"12262:52:33"},{"nativeSrc":"12323:26:33","nodeType":"YulAssignment","src":"12323:26:33","value":{"arguments":[{"name":"headStart","nativeSrc":"12335:9:33","nodeType":"YulIdentifier","src":"12335:9:33"},{"kind":"number","nativeSrc":"12346:2:33","nodeType":"YulLiteral","src":"12346:2:33","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"12331:3:33","nodeType":"YulIdentifier","src":"12331:3:33"},"nativeSrc":"12331:18:33","nodeType":"YulFunctionCall","src":"12331:18:33"},"variableNames":[{"name":"tail","nativeSrc":"12323:4:33","nodeType":"YulIdentifier","src":"12323:4:33"}]}]},"name":"abi_encode_tuple_t_stringliteral_582fd48f3876d7686bfeaaaa0db0589073271dedd50d66094f02fee2a3d2e01c__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"12009:346:33","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"12160:9:33","nodeType":"YulTypedName","src":"12160:9:33","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"12174:4:33","nodeType":"YulTypedName","src":"12174:4:33","type":""}],"src":"12009:346:33"},{"body":{"nativeSrc":"12601:346:33","nodeType":"YulBlock","src":"12601:346:33","statements":[{"nativeSrc":"12611:27:33","nodeType":"YulAssignment","src":"12611:27:33","value":{"arguments":[{"name":"headStart","nativeSrc":"12623:9:33","nodeType":"YulIdentifier","src":"12623:9:33"},{"kind":"number","nativeSrc":"12634:3:33","nodeType":"YulLiteral","src":"12634:3:33","type":"","value":"192"}],"functionName":{"name":"add","nativeSrc":"12619:3:33","nodeType":"YulIdentifier","src":"12619:3:33"},"nativeSrc":"12619:19:33","nodeType":"YulFunctionCall","src":"12619:19:33"},"variableNames":[{"name":"tail","nativeSrc":"12611:4:33","nodeType":"YulIdentifier","src":"12611:4:33"}]},{"expression":{"arguments":[{"name":"headStart","nativeSrc":"12654:9:33","nodeType":"YulIdentifier","src":"12654:9:33"},{"name":"value0","nativeSrc":"12665:6:33","nodeType":"YulIdentifier","src":"12665:6:33"}],"functionName":{"name":"mstore","nativeSrc":"12647:6:33","nodeType":"YulIdentifier","src":"12647:6:33"},"nativeSrc":"12647:25:33","nodeType":"YulFunctionCall","src":"12647:25:33"},"nativeSrc":"12647:25:33","nodeType":"YulExpressionStatement","src":"12647:25:33"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"12692:9:33","nodeType":"YulIdentifier","src":"12692:9:33"},{"kind":"number","nativeSrc":"12703:2:33","nodeType":"YulLiteral","src":"12703:2:33","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"12688:3:33","nodeType":"YulIdentifier","src":"12688:3:33"},"nativeSrc":"12688:18:33","nodeType":"YulFunctionCall","src":"12688:18:33"},{"arguments":[{"name":"value1","nativeSrc":"12712:6:33","nodeType":"YulIdentifier","src":"12712:6:33"},{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"12728:3:33","nodeType":"YulLiteral","src":"12728:3:33","type":"","value":"160"},{"kind":"number","nativeSrc":"12733:1:33","nodeType":"YulLiteral","src":"12733:1:33","type":"","value":"1"}],"functionName":{"name":"shl","nativeSrc":"12724:3:33","nodeType":"YulIdentifier","src":"12724:3:33"},"nativeSrc":"12724:11:33","nodeType":"YulFunctionCall","src":"12724:11:33"},{"kind":"number","nativeSrc":"12737:1:33","nodeType":"YulLiteral","src":"12737:1:33","type":"","value":"1"}],"functionName":{"name":"sub","nativeSrc":"12720:3:33","nodeType":"YulIdentifier","src":"12720:3:33"},"nativeSrc":"12720:19:33","nodeType":"YulFunctionCall","src":"12720:19:33"}],"functionName":{"name":"and","nativeSrc":"12708:3:33","nodeType":"YulIdentifier","src":"12708:3:33"},"nativeSrc":"12708:32:33","nodeType":"YulFunctionCall","src":"12708:32:33"}],"functionName":{"name":"mstore","nativeSrc":"12681:6:33","nodeType":"YulIdentifier","src":"12681:6:33"},"nativeSrc":"12681:60:33","nodeType":"YulFunctionCall","src":"12681:60:33"},"nativeSrc":"12681:60:33","nodeType":"YulExpressionStatement","src":"12681:60:33"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"12761:9:33","nodeType":"YulIdentifier","src":"12761:9:33"},{"kind":"number","nativeSrc":"12772:2:33","nodeType":"YulLiteral","src":"12772:2:33","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"12757:3:33","nodeType":"YulIdentifier","src":"12757:3:33"},"nativeSrc":"12757:18:33","nodeType":"YulFunctionCall","src":"12757:18:33"},{"arguments":[{"name":"value2","nativeSrc":"12781:6:33","nodeType":"YulIdentifier","src":"12781:6:33"},{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"12797:3:33","nodeType":"YulLiteral","src":"12797:3:33","type":"","value":"160"},{"kind":"number","nativeSrc":"12802:1:33","nodeType":"YulLiteral","src":"12802:1:33","type":"","value":"1"}],"functionName":{"name":"shl","nativeSrc":"12793:3:33","nodeType":"YulIdentifier","src":"12793:3:33"},"nativeSrc":"12793:11:33","nodeType":"YulFunctionCall","src":"12793:11:33"},{"kind":"number","nativeSrc":"12806:1:33","nodeType":"YulLiteral","src":"12806:1:33","type":"","value":"1"}],"functionName":{"name":"sub","nativeSrc":"12789:3:33","nodeType":"YulIdentifier","src":"12789:3:33"},"nativeSrc":"12789:19:33","nodeType":"YulFunctionCall","src":"12789:19:33"}],"functionName":{"name":"and","nativeSrc":"12777:3:33","nodeType":"YulIdentifier","src":"12777:3:33"},"nativeSrc":"12777:32:33","nodeType":"YulFunctionCall","src":"12777:32:33"}],"functionName":{"name":"mstore","nativeSrc":"12750:6:33","nodeType":"YulIdentifier","src":"12750:6:33"},"nativeSrc":"12750:60:33","nodeType":"YulFunctionCall","src":"12750:60:33"},"nativeSrc":"12750:60:33","nodeType":"YulExpressionStatement","src":"12750:60:33"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"12830:9:33","nodeType":"YulIdentifier","src":"12830:9:33"},{"kind":"number","nativeSrc":"12841:2:33","nodeType":"YulLiteral","src":"12841:2:33","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"12826:3:33","nodeType":"YulIdentifier","src":"12826:3:33"},"nativeSrc":"12826:18:33","nodeType":"YulFunctionCall","src":"12826:18:33"},{"name":"value3","nativeSrc":"12846:6:33","nodeType":"YulIdentifier","src":"12846:6:33"}],"functionName":{"name":"mstore","nativeSrc":"12819:6:33","nodeType":"YulIdentifier","src":"12819:6:33"},"nativeSrc":"12819:34:33","nodeType":"YulFunctionCall","src":"12819:34:33"},"nativeSrc":"12819:34:33","nodeType":"YulExpressionStatement","src":"12819:34:33"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"12873:9:33","nodeType":"YulIdentifier","src":"12873:9:33"},{"kind":"number","nativeSrc":"12884:3:33","nodeType":"YulLiteral","src":"12884:3:33","type":"","value":"128"}],"functionName":{"name":"add","nativeSrc":"12869:3:33","nodeType":"YulIdentifier","src":"12869:3:33"},"nativeSrc":"12869:19:33","nodeType":"YulFunctionCall","src":"12869:19:33"},{"name":"value4","nativeSrc":"12890:6:33","nodeType":"YulIdentifier","src":"12890:6:33"}],"functionName":{"name":"mstore","nativeSrc":"12862:6:33","nodeType":"YulIdentifier","src":"12862:6:33"},"nativeSrc":"12862:35:33","nodeType":"YulFunctionCall","src":"12862:35:33"},"nativeSrc":"12862:35:33","nodeType":"YulExpressionStatement","src":"12862:35:33"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"12917:9:33","nodeType":"YulIdentifier","src":"12917:9:33"},{"kind":"number","nativeSrc":"12928:3:33","nodeType":"YulLiteral","src":"12928:3:33","type":"","value":"160"}],"functionName":{"name":"add","nativeSrc":"12913:3:33","nodeType":"YulIdentifier","src":"12913:3:33"},"nativeSrc":"12913:19:33","nodeType":"YulFunctionCall","src":"12913:19:33"},{"name":"value5","nativeSrc":"12934:6:33","nodeType":"YulIdentifier","src":"12934:6:33"}],"functionName":{"name":"mstore","nativeSrc":"12906:6:33","nodeType":"YulIdentifier","src":"12906:6:33"},"nativeSrc":"12906:35:33","nodeType":"YulFunctionCall","src":"12906:35:33"},"nativeSrc":"12906:35:33","nodeType":"YulExpressionStatement","src":"12906:35:33"}]},"name":"abi_encode_tuple_t_bytes32_t_address_t_address_t_uint256_t_uint256_t_uint256__to_t_bytes32_t_address_t_address_t_uint256_t_uint256_t_uint256__fromStack_reversed","nativeSrc":"12360:587:33","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"12530:9:33","nodeType":"YulTypedName","src":"12530:9:33","type":""},{"name":"value5","nativeSrc":"12541:6:33","nodeType":"YulTypedName","src":"12541:6:33","type":""},{"name":"value4","nativeSrc":"12549:6:33","nodeType":"YulTypedName","src":"12549:6:33","type":""},{"name":"value3","nativeSrc":"12557:6:33","nodeType":"YulTypedName","src":"12557:6:33","type":""},{"name":"value2","nativeSrc":"12565:6:33","nodeType":"YulTypedName","src":"12565:6:33","type":""},{"name":"value1","nativeSrc":"12573:6:33","nodeType":"YulTypedName","src":"12573:6:33","type":""},{"name":"value0","nativeSrc":"12581:6:33","nodeType":"YulTypedName","src":"12581:6:33","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"12592:4:33","nodeType":"YulTypedName","src":"12592:4:33","type":""}],"src":"12360:587:33"},{"body":{"nativeSrc":"13081:171:33","nodeType":"YulBlock","src":"13081:171:33","statements":[{"nativeSrc":"13091:26:33","nodeType":"YulAssignment","src":"13091:26:33","value":{"arguments":[{"name":"headStart","nativeSrc":"13103:9:33","nodeType":"YulIdentifier","src":"13103:9:33"},{"kind":"number","nativeSrc":"13114:2:33","nodeType":"YulLiteral","src":"13114:2:33","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"13099:3:33","nodeType":"YulIdentifier","src":"13099:3:33"},"nativeSrc":"13099:18:33","nodeType":"YulFunctionCall","src":"13099:18:33"},"variableNames":[{"name":"tail","nativeSrc":"13091:4:33","nodeType":"YulIdentifier","src":"13091:4:33"}]},{"expression":{"arguments":[{"name":"headStart","nativeSrc":"13133:9:33","nodeType":"YulIdentifier","src":"13133:9:33"},{"arguments":[{"name":"value0","nativeSrc":"13148:6:33","nodeType":"YulIdentifier","src":"13148:6:33"},{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"13164:3:33","nodeType":"YulLiteral","src":"13164:3:33","type":"","value":"160"},{"kind":"number","nativeSrc":"13169:1:33","nodeType":"YulLiteral","src":"13169:1:33","type":"","value":"1"}],"functionName":{"name":"shl","nativeSrc":"13160:3:33","nodeType":"YulIdentifier","src":"13160:3:33"},"nativeSrc":"13160:11:33","nodeType":"YulFunctionCall","src":"13160:11:33"},{"kind":"number","nativeSrc":"13173:1:33","nodeType":"YulLiteral","src":"13173:1:33","type":"","value":"1"}],"functionName":{"name":"sub","nativeSrc":"13156:3:33","nodeType":"YulIdentifier","src":"13156:3:33"},"nativeSrc":"13156:19:33","nodeType":"YulFunctionCall","src":"13156:19:33"}],"functionName":{"name":"and","nativeSrc":"13144:3:33","nodeType":"YulIdentifier","src":"13144:3:33"},"nativeSrc":"13144:32:33","nodeType":"YulFunctionCall","src":"13144:32:33"}],"functionName":{"name":"mstore","nativeSrc":"13126:6:33","nodeType":"YulIdentifier","src":"13126:6:33"},"nativeSrc":"13126:51:33","nodeType":"YulFunctionCall","src":"13126:51:33"},"nativeSrc":"13126:51:33","nodeType":"YulExpressionStatement","src":"13126:51:33"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"13197:9:33","nodeType":"YulIdentifier","src":"13197:9:33"},{"kind":"number","nativeSrc":"13208:2:33","nodeType":"YulLiteral","src":"13208:2:33","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"13193:3:33","nodeType":"YulIdentifier","src":"13193:3:33"},"nativeSrc":"13193:18:33","nodeType":"YulFunctionCall","src":"13193:18:33"},{"arguments":[{"name":"value1","nativeSrc":"13217:6:33","nodeType":"YulIdentifier","src":"13217:6:33"},{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"13233:3:33","nodeType":"YulLiteral","src":"13233:3:33","type":"","value":"160"},{"kind":"number","nativeSrc":"13238:1:33","nodeType":"YulLiteral","src":"13238:1:33","type":"","value":"1"}],"functionName":{"name":"shl","nativeSrc":"13229:3:33","nodeType":"YulIdentifier","src":"13229:3:33"},"nativeSrc":"13229:11:33","nodeType":"YulFunctionCall","src":"13229:11:33"},{"kind":"number","nativeSrc":"13242:1:33","nodeType":"YulLiteral","src":"13242:1:33","type":"","value":"1"}],"functionName":{"name":"sub","nativeSrc":"13225:3:33","nodeType":"YulIdentifier","src":"13225:3:33"},"nativeSrc":"13225:19:33","nodeType":"YulFunctionCall","src":"13225:19:33"}],"functionName":{"name":"and","nativeSrc":"13213:3:33","nodeType":"YulIdentifier","src":"13213:3:33"},"nativeSrc":"13213:32:33","nodeType":"YulFunctionCall","src":"13213:32:33"}],"functionName":{"name":"mstore","nativeSrc":"13186:6:33","nodeType":"YulIdentifier","src":"13186:6:33"},"nativeSrc":"13186:60:33","nodeType":"YulFunctionCall","src":"13186:60:33"},"nativeSrc":"13186:60:33","nodeType":"YulExpressionStatement","src":"13186:60:33"}]},"name":"abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed","nativeSrc":"12952:300:33","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"13042:9:33","nodeType":"YulTypedName","src":"13042:9:33","type":""},{"name":"value1","nativeSrc":"13053:6:33","nodeType":"YulTypedName","src":"13053:6:33","type":""},{"name":"value0","nativeSrc":"13061:6:33","nodeType":"YulTypedName","src":"13061:6:33","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"13072:4:33","nodeType":"YulTypedName","src":"13072:4:33","type":""}],"src":"12952:300:33"},{"body":{"nativeSrc":"13365:101:33","nodeType":"YulBlock","src":"13365:101:33","statements":[{"nativeSrc":"13375:26:33","nodeType":"YulAssignment","src":"13375:26:33","value":{"arguments":[{"name":"headStart","nativeSrc":"13387:9:33","nodeType":"YulIdentifier","src":"13387:9:33"},{"kind":"number","nativeSrc":"13398:2:33","nodeType":"YulLiteral","src":"13398:2:33","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"13383:3:33","nodeType":"YulIdentifier","src":"13383:3:33"},"nativeSrc":"13383:18:33","nodeType":"YulFunctionCall","src":"13383:18:33"},"variableNames":[{"name":"tail","nativeSrc":"13375:4:33","nodeType":"YulIdentifier","src":"13375:4:33"}]},{"expression":{"arguments":[{"name":"headStart","nativeSrc":"13417:9:33","nodeType":"YulIdentifier","src":"13417:9:33"},{"arguments":[{"name":"value0","nativeSrc":"13432:6:33","nodeType":"YulIdentifier","src":"13432:6:33"},{"kind":"number","nativeSrc":"13440:18:33","nodeType":"YulLiteral","src":"13440:18:33","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"and","nativeSrc":"13428:3:33","nodeType":"YulIdentifier","src":"13428:3:33"},"nativeSrc":"13428:31:33","nodeType":"YulFunctionCall","src":"13428:31:33"}],"functionName":{"name":"mstore","nativeSrc":"13410:6:33","nodeType":"YulIdentifier","src":"13410:6:33"},"nativeSrc":"13410:50:33","nodeType":"YulFunctionCall","src":"13410:50:33"},"nativeSrc":"13410:50:33","nodeType":"YulExpressionStatement","src":"13410:50:33"}]},"name":"abi_encode_tuple_t_rational_1_by_1__to_t_uint64__fromStack_reversed","nativeSrc":"13257:209:33","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"13334:9:33","nodeType":"YulTypedName","src":"13334:9:33","type":""},{"name":"value0","nativeSrc":"13345:6:33","nodeType":"YulTypedName","src":"13345:6:33","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"13356:4:33","nodeType":"YulTypedName","src":"13356:4:33","type":""}],"src":"13257:209:33"},{"body":{"nativeSrc":"13628:188:33","nodeType":"YulBlock","src":"13628:188:33","statements":[{"nativeSrc":"13638:26:33","nodeType":"YulAssignment","src":"13638:26:33","value":{"arguments":[{"name":"headStart","nativeSrc":"13650:9:33","nodeType":"YulIdentifier","src":"13650:9:33"},{"kind":"number","nativeSrc":"13661:2:33","nodeType":"YulLiteral","src":"13661:2:33","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"13646:3:33","nodeType":"YulIdentifier","src":"13646:3:33"},"nativeSrc":"13646:18:33","nodeType":"YulFunctionCall","src":"13646:18:33"},"variableNames":[{"name":"tail","nativeSrc":"13638:4:33","nodeType":"YulIdentifier","src":"13638:4:33"}]},{"expression":{"arguments":[{"name":"headStart","nativeSrc":"13680:9:33","nodeType":"YulIdentifier","src":"13680:9:33"},{"arguments":[{"name":"value0","nativeSrc":"13695:6:33","nodeType":"YulIdentifier","src":"13695:6:33"},{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"13711:3:33","nodeType":"YulLiteral","src":"13711:3:33","type":"","value":"160"},{"kind":"number","nativeSrc":"13716:1:33","nodeType":"YulLiteral","src":"13716:1:33","type":"","value":"1"}],"functionName":{"name":"shl","nativeSrc":"13707:3:33","nodeType":"YulIdentifier","src":"13707:3:33"},"nativeSrc":"13707:11:33","nodeType":"YulFunctionCall","src":"13707:11:33"},{"kind":"number","nativeSrc":"13720:1:33","nodeType":"YulLiteral","src":"13720:1:33","type":"","value":"1"}],"functionName":{"name":"sub","nativeSrc":"13703:3:33","nodeType":"YulIdentifier","src":"13703:3:33"},"nativeSrc":"13703:19:33","nodeType":"YulFunctionCall","src":"13703:19:33"}],"functionName":{"name":"and","nativeSrc":"13691:3:33","nodeType":"YulIdentifier","src":"13691:3:33"},"nativeSrc":"13691:32:33","nodeType":"YulFunctionCall","src":"13691:32:33"}],"functionName":{"name":"mstore","nativeSrc":"13673:6:33","nodeType":"YulIdentifier","src":"13673:6:33"},"nativeSrc":"13673:51:33","nodeType":"YulFunctionCall","src":"13673:51:33"},"nativeSrc":"13673:51:33","nodeType":"YulExpressionStatement","src":"13673:51:33"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"13744:9:33","nodeType":"YulIdentifier","src":"13744:9:33"},{"kind":"number","nativeSrc":"13755:2:33","nodeType":"YulLiteral","src":"13755:2:33","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"13740:3:33","nodeType":"YulIdentifier","src":"13740:3:33"},"nativeSrc":"13740:18:33","nodeType":"YulFunctionCall","src":"13740:18:33"},{"name":"value1","nativeSrc":"13760:6:33","nodeType":"YulIdentifier","src":"13760:6:33"}],"functionName":{"name":"mstore","nativeSrc":"13733:6:33","nodeType":"YulIdentifier","src":"13733:6:33"},"nativeSrc":"13733:34:33","nodeType":"YulFunctionCall","src":"13733:34:33"},"nativeSrc":"13733:34:33","nodeType":"YulExpressionStatement","src":"13733:34:33"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"13787:9:33","nodeType":"YulIdentifier","src":"13787:9:33"},{"kind":"number","nativeSrc":"13798:2:33","nodeType":"YulLiteral","src":"13798:2:33","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"13783:3:33","nodeType":"YulIdentifier","src":"13783:3:33"},"nativeSrc":"13783:18:33","nodeType":"YulFunctionCall","src":"13783:18:33"},{"name":"value2","nativeSrc":"13803:6:33","nodeType":"YulIdentifier","src":"13803:6:33"}],"functionName":{"name":"mstore","nativeSrc":"13776:6:33","nodeType":"YulIdentifier","src":"13776:6:33"},"nativeSrc":"13776:34:33","nodeType":"YulFunctionCall","src":"13776:34:33"},"nativeSrc":"13776:34:33","nodeType":"YulExpressionStatement","src":"13776:34:33"}]},"name":"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed","nativeSrc":"13471:345:33","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"13581:9:33","nodeType":"YulTypedName","src":"13581:9:33","type":""},{"name":"value2","nativeSrc":"13592:6:33","nodeType":"YulTypedName","src":"13592:6:33","type":""},{"name":"value1","nativeSrc":"13600:6:33","nodeType":"YulTypedName","src":"13600:6:33","type":""},{"name":"value0","nativeSrc":"13608:6:33","nodeType":"YulTypedName","src":"13608:6:33","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"13619:4:33","nodeType":"YulTypedName","src":"13619:4:33","type":""}],"src":"13471:345:33"},{"body":{"nativeSrc":"13902:103:33","nodeType":"YulBlock","src":"13902:103:33","statements":[{"body":{"nativeSrc":"13948:16:33","nodeType":"YulBlock","src":"13948:16:33","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"13957:1:33","nodeType":"YulLiteral","src":"13957:1:33","type":"","value":"0"},{"kind":"number","nativeSrc":"13960:1:33","nodeType":"YulLiteral","src":"13960:1:33","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"13950:6:33","nodeType":"YulIdentifier","src":"13950:6:33"},"nativeSrc":"13950:12:33","nodeType":"YulFunctionCall","src":"13950:12:33"},"nativeSrc":"13950:12:33","nodeType":"YulExpressionStatement","src":"13950:12:33"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"13923:7:33","nodeType":"YulIdentifier","src":"13923:7:33"},{"name":"headStart","nativeSrc":"13932:9:33","nodeType":"YulIdentifier","src":"13932:9:33"}],"functionName":{"name":"sub","nativeSrc":"13919:3:33","nodeType":"YulIdentifier","src":"13919:3:33"},"nativeSrc":"13919:23:33","nodeType":"YulFunctionCall","src":"13919:23:33"},{"kind":"number","nativeSrc":"13944:2:33","nodeType":"YulLiteral","src":"13944:2:33","type":"","value":"32"}],"functionName":{"name":"slt","nativeSrc":"13915:3:33","nodeType":"YulIdentifier","src":"13915:3:33"},"nativeSrc":"13915:32:33","nodeType":"YulFunctionCall","src":"13915:32:33"},"nativeSrc":"13912:52:33","nodeType":"YulIf","src":"13912:52:33"},{"nativeSrc":"13973:26:33","nodeType":"YulAssignment","src":"13973:26:33","value":{"arguments":[{"name":"headStart","nativeSrc":"13989:9:33","nodeType":"YulIdentifier","src":"13989:9:33"}],"functionName":{"name":"mload","nativeSrc":"13983:5:33","nodeType":"YulIdentifier","src":"13983:5:33"},"nativeSrc":"13983:16:33","nodeType":"YulFunctionCall","src":"13983:16:33"},"variableNames":[{"name":"value0","nativeSrc":"13973:6:33","nodeType":"YulIdentifier","src":"13973:6:33"}]}]},"name":"abi_decode_tuple_t_bytes32_fromMemory","nativeSrc":"13821:184:33","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"13868:9:33","nodeType":"YulTypedName","src":"13868:9:33","type":""},{"name":"dataEnd","nativeSrc":"13879:7:33","nodeType":"YulTypedName","src":"13879:7:33","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"13891:6:33","nodeType":"YulTypedName","src":"13891:6:33","type":""}],"src":"13821:184:33"},{"body":{"nativeSrc":"14139:145:33","nodeType":"YulBlock","src":"14139:145:33","statements":[{"nativeSrc":"14149:26:33","nodeType":"YulAssignment","src":"14149:26:33","value":{"arguments":[{"name":"headStart","nativeSrc":"14161:9:33","nodeType":"YulIdentifier","src":"14161:9:33"},{"kind":"number","nativeSrc":"14172:2:33","nodeType":"YulLiteral","src":"14172:2:33","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"14157:3:33","nodeType":"YulIdentifier","src":"14157:3:33"},"nativeSrc":"14157:18:33","nodeType":"YulFunctionCall","src":"14157:18:33"},"variableNames":[{"name":"tail","nativeSrc":"14149:4:33","nodeType":"YulIdentifier","src":"14149:4:33"}]},{"expression":{"arguments":[{"name":"headStart","nativeSrc":"14191:9:33","nodeType":"YulIdentifier","src":"14191:9:33"},{"arguments":[{"name":"value0","nativeSrc":"14206:6:33","nodeType":"YulIdentifier","src":"14206:6:33"},{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"14222:3:33","nodeType":"YulLiteral","src":"14222:3:33","type":"","value":"160"},{"kind":"number","nativeSrc":"14227:1:33","nodeType":"YulLiteral","src":"14227:1:33","type":"","value":"1"}],"functionName":{"name":"shl","nativeSrc":"14218:3:33","nodeType":"YulIdentifier","src":"14218:3:33"},"nativeSrc":"14218:11:33","nodeType":"YulFunctionCall","src":"14218:11:33"},{"kind":"number","nativeSrc":"14231:1:33","nodeType":"YulLiteral","src":"14231:1:33","type":"","value":"1"}],"functionName":{"name":"sub","nativeSrc":"14214:3:33","nodeType":"YulIdentifier","src":"14214:3:33"},"nativeSrc":"14214:19:33","nodeType":"YulFunctionCall","src":"14214:19:33"}],"functionName":{"name":"and","nativeSrc":"14202:3:33","nodeType":"YulIdentifier","src":"14202:3:33"},"nativeSrc":"14202:32:33","nodeType":"YulFunctionCall","src":"14202:32:33"}],"functionName":{"name":"mstore","nativeSrc":"14184:6:33","nodeType":"YulIdentifier","src":"14184:6:33"},"nativeSrc":"14184:51:33","nodeType":"YulFunctionCall","src":"14184:51:33"},"nativeSrc":"14184:51:33","nodeType":"YulExpressionStatement","src":"14184:51:33"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"14255:9:33","nodeType":"YulIdentifier","src":"14255:9:33"},{"kind":"number","nativeSrc":"14266:2:33","nodeType":"YulLiteral","src":"14266:2:33","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"14251:3:33","nodeType":"YulIdentifier","src":"14251:3:33"},"nativeSrc":"14251:18:33","nodeType":"YulFunctionCall","src":"14251:18:33"},{"name":"value1","nativeSrc":"14271:6:33","nodeType":"YulIdentifier","src":"14271:6:33"}],"functionName":{"name":"mstore","nativeSrc":"14244:6:33","nodeType":"YulIdentifier","src":"14244:6:33"},"nativeSrc":"14244:34:33","nodeType":"YulFunctionCall","src":"14244:34:33"},"nativeSrc":"14244:34:33","nodeType":"YulExpressionStatement","src":"14244:34:33"}]},"name":"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed","nativeSrc":"14010:274:33","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"14100:9:33","nodeType":"YulTypedName","src":"14100:9:33","type":""},{"name":"value1","nativeSrc":"14111:6:33","nodeType":"YulTypedName","src":"14111:6:33","type":""},{"name":"value0","nativeSrc":"14119:6:33","nodeType":"YulTypedName","src":"14119:6:33","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"14130:4:33","nodeType":"YulTypedName","src":"14130:4:33","type":""}],"src":"14010:274:33"},{"body":{"nativeSrc":"14418:145:33","nodeType":"YulBlock","src":"14418:145:33","statements":[{"nativeSrc":"14428:26:33","nodeType":"YulAssignment","src":"14428:26:33","value":{"arguments":[{"name":"headStart","nativeSrc":"14440:9:33","nodeType":"YulIdentifier","src":"14440:9:33"},{"kind":"number","nativeSrc":"14451:2:33","nodeType":"YulLiteral","src":"14451:2:33","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"14436:3:33","nodeType":"YulIdentifier","src":"14436:3:33"},"nativeSrc":"14436:18:33","nodeType":"YulFunctionCall","src":"14436:18:33"},"variableNames":[{"name":"tail","nativeSrc":"14428:4:33","nodeType":"YulIdentifier","src":"14428:4:33"}]},{"expression":{"arguments":[{"name":"headStart","nativeSrc":"14470:9:33","nodeType":"YulIdentifier","src":"14470:9:33"},{"arguments":[{"name":"value0","nativeSrc":"14485:6:33","nodeType":"YulIdentifier","src":"14485:6:33"},{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"14501:3:33","nodeType":"YulLiteral","src":"14501:3:33","type":"","value":"160"},{"kind":"number","nativeSrc":"14506:1:33","nodeType":"YulLiteral","src":"14506:1:33","type":"","value":"1"}],"functionName":{"name":"shl","nativeSrc":"14497:3:33","nodeType":"YulIdentifier","src":"14497:3:33"},"nativeSrc":"14497:11:33","nodeType":"YulFunctionCall","src":"14497:11:33"},{"kind":"number","nativeSrc":"14510:1:33","nodeType":"YulLiteral","src":"14510:1:33","type":"","value":"1"}],"functionName":{"name":"sub","nativeSrc":"14493:3:33","nodeType":"YulIdentifier","src":"14493:3:33"},"nativeSrc":"14493:19:33","nodeType":"YulFunctionCall","src":"14493:19:33"}],"functionName":{"name":"and","nativeSrc":"14481:3:33","nodeType":"YulIdentifier","src":"14481:3:33"},"nativeSrc":"14481:32:33","nodeType":"YulFunctionCall","src":"14481:32:33"}],"functionName":{"name":"mstore","nativeSrc":"14463:6:33","nodeType":"YulIdentifier","src":"14463:6:33"},"nativeSrc":"14463:51:33","nodeType":"YulFunctionCall","src":"14463:51:33"},"nativeSrc":"14463:51:33","nodeType":"YulExpressionStatement","src":"14463:51:33"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"14534:9:33","nodeType":"YulIdentifier","src":"14534:9:33"},{"kind":"number","nativeSrc":"14545:2:33","nodeType":"YulLiteral","src":"14545:2:33","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"14530:3:33","nodeType":"YulIdentifier","src":"14530:3:33"},"nativeSrc":"14530:18:33","nodeType":"YulFunctionCall","src":"14530:18:33"},{"name":"value1","nativeSrc":"14550:6:33","nodeType":"YulIdentifier","src":"14550:6:33"}],"functionName":{"name":"mstore","nativeSrc":"14523:6:33","nodeType":"YulIdentifier","src":"14523:6:33"},"nativeSrc":"14523:34:33","nodeType":"YulFunctionCall","src":"14523:34:33"},"nativeSrc":"14523:34:33","nodeType":"YulExpressionStatement","src":"14523:34:33"}]},"name":"abi_encode_tuple_t_address_t_bytes32__to_t_address_t_bytes32__fromStack_reversed","nativeSrc":"14289:274:33","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"14379:9:33","nodeType":"YulTypedName","src":"14379:9:33","type":""},{"name":"value1","nativeSrc":"14390:6:33","nodeType":"YulTypedName","src":"14390:6:33","type":""},{"name":"value0","nativeSrc":"14398:6:33","nodeType":"YulTypedName","src":"14398:6:33","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"14409:4:33","nodeType":"YulTypedName","src":"14409:4:33","type":""}],"src":"14289:274:33"},{"body":{"nativeSrc":"14781:276:33","nodeType":"YulBlock","src":"14781:276:33","statements":[{"nativeSrc":"14791:27:33","nodeType":"YulAssignment","src":"14791:27:33","value":{"arguments":[{"name":"headStart","nativeSrc":"14803:9:33","nodeType":"YulIdentifier","src":"14803:9:33"},{"kind":"number","nativeSrc":"14814:3:33","nodeType":"YulLiteral","src":"14814:3:33","type":"","value":"160"}],"functionName":{"name":"add","nativeSrc":"14799:3:33","nodeType":"YulIdentifier","src":"14799:3:33"},"nativeSrc":"14799:19:33","nodeType":"YulFunctionCall","src":"14799:19:33"},"variableNames":[{"name":"tail","nativeSrc":"14791:4:33","nodeType":"YulIdentifier","src":"14791:4:33"}]},{"expression":{"arguments":[{"name":"headStart","nativeSrc":"14834:9:33","nodeType":"YulIdentifier","src":"14834:9:33"},{"name":"value0","nativeSrc":"14845:6:33","nodeType":"YulIdentifier","src":"14845:6:33"}],"functionName":{"name":"mstore","nativeSrc":"14827:6:33","nodeType":"YulIdentifier","src":"14827:6:33"},"nativeSrc":"14827:25:33","nodeType":"YulFunctionCall","src":"14827:25:33"},"nativeSrc":"14827:25:33","nodeType":"YulExpressionStatement","src":"14827:25:33"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"14872:9:33","nodeType":"YulIdentifier","src":"14872:9:33"},{"kind":"number","nativeSrc":"14883:2:33","nodeType":"YulLiteral","src":"14883:2:33","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"14868:3:33","nodeType":"YulIdentifier","src":"14868:3:33"},"nativeSrc":"14868:18:33","nodeType":"YulFunctionCall","src":"14868:18:33"},{"name":"value1","nativeSrc":"14888:6:33","nodeType":"YulIdentifier","src":"14888:6:33"}],"functionName":{"name":"mstore","nativeSrc":"14861:6:33","nodeType":"YulIdentifier","src":"14861:6:33"},"nativeSrc":"14861:34:33","nodeType":"YulFunctionCall","src":"14861:34:33"},"nativeSrc":"14861:34:33","nodeType":"YulExpressionStatement","src":"14861:34:33"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"14915:9:33","nodeType":"YulIdentifier","src":"14915:9:33"},{"kind":"number","nativeSrc":"14926:2:33","nodeType":"YulLiteral","src":"14926:2:33","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"14911:3:33","nodeType":"YulIdentifier","src":"14911:3:33"},"nativeSrc":"14911:18:33","nodeType":"YulFunctionCall","src":"14911:18:33"},{"name":"value2","nativeSrc":"14931:6:33","nodeType":"YulIdentifier","src":"14931:6:33"}],"functionName":{"name":"mstore","nativeSrc":"14904:6:33","nodeType":"YulIdentifier","src":"14904:6:33"},"nativeSrc":"14904:34:33","nodeType":"YulFunctionCall","src":"14904:34:33"},"nativeSrc":"14904:34:33","nodeType":"YulExpressionStatement","src":"14904:34:33"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"14958:9:33","nodeType":"YulIdentifier","src":"14958:9:33"},{"kind":"number","nativeSrc":"14969:2:33","nodeType":"YulLiteral","src":"14969:2:33","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"14954:3:33","nodeType":"YulIdentifier","src":"14954:3:33"},"nativeSrc":"14954:18:33","nodeType":"YulFunctionCall","src":"14954:18:33"},{"name":"value3","nativeSrc":"14974:6:33","nodeType":"YulIdentifier","src":"14974:6:33"}],"functionName":{"name":"mstore","nativeSrc":"14947:6:33","nodeType":"YulIdentifier","src":"14947:6:33"},"nativeSrc":"14947:34:33","nodeType":"YulFunctionCall","src":"14947:34:33"},"nativeSrc":"14947:34:33","nodeType":"YulExpressionStatement","src":"14947:34:33"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"15001:9:33","nodeType":"YulIdentifier","src":"15001:9:33"},{"kind":"number","nativeSrc":"15012:3:33","nodeType":"YulLiteral","src":"15012:3:33","type":"","value":"128"}],"functionName":{"name":"add","nativeSrc":"14997:3:33","nodeType":"YulIdentifier","src":"14997:3:33"},"nativeSrc":"14997:19:33","nodeType":"YulFunctionCall","src":"14997:19:33"},{"arguments":[{"name":"value4","nativeSrc":"15022:6:33","nodeType":"YulIdentifier","src":"15022:6:33"},{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"15038:3:33","nodeType":"YulLiteral","src":"15038:3:33","type":"","value":"160"},{"kind":"number","nativeSrc":"15043:1:33","nodeType":"YulLiteral","src":"15043:1:33","type":"","value":"1"}],"functionName":{"name":"shl","nativeSrc":"15034:3:33","nodeType":"YulIdentifier","src":"15034:3:33"},"nativeSrc":"15034:11:33","nodeType":"YulFunctionCall","src":"15034:11:33"},{"kind":"number","nativeSrc":"15047:1:33","nodeType":"YulLiteral","src":"15047:1:33","type":"","value":"1"}],"functionName":{"name":"sub","nativeSrc":"15030:3:33","nodeType":"YulIdentifier","src":"15030:3:33"},"nativeSrc":"15030:19:33","nodeType":"YulFunctionCall","src":"15030:19:33"}],"functionName":{"name":"and","nativeSrc":"15018:3:33","nodeType":"YulIdentifier","src":"15018:3:33"},"nativeSrc":"15018:32:33","nodeType":"YulFunctionCall","src":"15018:32:33"}],"functionName":{"name":"mstore","nativeSrc":"14990:6:33","nodeType":"YulIdentifier","src":"14990:6:33"},"nativeSrc":"14990:61:33","nodeType":"YulFunctionCall","src":"14990:61:33"},"nativeSrc":"14990:61:33","nodeType":"YulExpressionStatement","src":"14990:61:33"}]},"name":"abi_encode_tuple_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__to_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__fromStack_reversed","nativeSrc":"14568:489:33","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"14718:9:33","nodeType":"YulTypedName","src":"14718:9:33","type":""},{"name":"value4","nativeSrc":"14729:6:33","nodeType":"YulTypedName","src":"14729:6:33","type":""},{"name":"value3","nativeSrc":"14737:6:33","nodeType":"YulTypedName","src":"14737:6:33","type":""},{"name":"value2","nativeSrc":"14745:6:33","nodeType":"YulTypedName","src":"14745:6:33","type":""},{"name":"value1","nativeSrc":"14753:6:33","nodeType":"YulTypedName","src":"14753:6:33","type":""},{"name":"value0","nativeSrc":"14761:6:33","nodeType":"YulTypedName","src":"14761:6:33","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"14772:4:33","nodeType":"YulTypedName","src":"14772:4:33","type":""}],"src":"14568:489:33"},{"body":{"nativeSrc":"15243:217:33","nodeType":"YulBlock","src":"15243:217:33","statements":[{"nativeSrc":"15253:27:33","nodeType":"YulAssignment","src":"15253:27:33","value":{"arguments":[{"name":"headStart","nativeSrc":"15265:9:33","nodeType":"YulIdentifier","src":"15265:9:33"},{"kind":"number","nativeSrc":"15276:3:33","nodeType":"YulLiteral","src":"15276:3:33","type":"","value":"128"}],"functionName":{"name":"add","nativeSrc":"15261:3:33","nodeType":"YulIdentifier","src":"15261:3:33"},"nativeSrc":"15261:19:33","nodeType":"YulFunctionCall","src":"15261:19:33"},"variableNames":[{"name":"tail","nativeSrc":"15253:4:33","nodeType":"YulIdentifier","src":"15253:4:33"}]},{"expression":{"arguments":[{"name":"headStart","nativeSrc":"15296:9:33","nodeType":"YulIdentifier","src":"15296:9:33"},{"name":"value0","nativeSrc":"15307:6:33","nodeType":"YulIdentifier","src":"15307:6:33"}],"functionName":{"name":"mstore","nativeSrc":"15289:6:33","nodeType":"YulIdentifier","src":"15289:6:33"},"nativeSrc":"15289:25:33","nodeType":"YulFunctionCall","src":"15289:25:33"},"nativeSrc":"15289:25:33","nodeType":"YulExpressionStatement","src":"15289:25:33"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"15334:9:33","nodeType":"YulIdentifier","src":"15334:9:33"},{"kind":"number","nativeSrc":"15345:2:33","nodeType":"YulLiteral","src":"15345:2:33","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"15330:3:33","nodeType":"YulIdentifier","src":"15330:3:33"},"nativeSrc":"15330:18:33","nodeType":"YulFunctionCall","src":"15330:18:33"},{"arguments":[{"name":"value1","nativeSrc":"15354:6:33","nodeType":"YulIdentifier","src":"15354:6:33"},{"kind":"number","nativeSrc":"15362:4:33","nodeType":"YulLiteral","src":"15362:4:33","type":"","value":"0xff"}],"functionName":{"name":"and","nativeSrc":"15350:3:33","nodeType":"YulIdentifier","src":"15350:3:33"},"nativeSrc":"15350:17:33","nodeType":"YulFunctionCall","src":"15350:17:33"}],"functionName":{"name":"mstore","nativeSrc":"15323:6:33","nodeType":"YulIdentifier","src":"15323:6:33"},"nativeSrc":"15323:45:33","nodeType":"YulFunctionCall","src":"15323:45:33"},"nativeSrc":"15323:45:33","nodeType":"YulExpressionStatement","src":"15323:45:33"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"15388:9:33","nodeType":"YulIdentifier","src":"15388:9:33"},{"kind":"number","nativeSrc":"15399:2:33","nodeType":"YulLiteral","src":"15399:2:33","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"15384:3:33","nodeType":"YulIdentifier","src":"15384:3:33"},"nativeSrc":"15384:18:33","nodeType":"YulFunctionCall","src":"15384:18:33"},{"name":"value2","nativeSrc":"15404:6:33","nodeType":"YulIdentifier","src":"15404:6:33"}],"functionName":{"name":"mstore","nativeSrc":"15377:6:33","nodeType":"YulIdentifier","src":"15377:6:33"},"nativeSrc":"15377:34:33","nodeType":"YulFunctionCall","src":"15377:34:33"},"nativeSrc":"15377:34:33","nodeType":"YulExpressionStatement","src":"15377:34:33"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"15431:9:33","nodeType":"YulIdentifier","src":"15431:9:33"},{"kind":"number","nativeSrc":"15442:2:33","nodeType":"YulLiteral","src":"15442:2:33","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"15427:3:33","nodeType":"YulIdentifier","src":"15427:3:33"},"nativeSrc":"15427:18:33","nodeType":"YulFunctionCall","src":"15427:18:33"},{"name":"value3","nativeSrc":"15447:6:33","nodeType":"YulIdentifier","src":"15447:6:33"}],"functionName":{"name":"mstore","nativeSrc":"15420:6:33","nodeType":"YulIdentifier","src":"15420:6:33"},"nativeSrc":"15420:34:33","nodeType":"YulFunctionCall","src":"15420:34:33"},"nativeSrc":"15420:34:33","nodeType":"YulExpressionStatement","src":"15420:34:33"}]},"name":"abi_encode_tuple_t_bytes32_t_uint8_t_bytes32_t_bytes32__to_t_bytes32_t_uint8_t_bytes32_t_bytes32__fromStack_reversed","nativeSrc":"15062:398:33","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"15188:9:33","nodeType":"YulTypedName","src":"15188:9:33","type":""},{"name":"value3","nativeSrc":"15199:6:33","nodeType":"YulTypedName","src":"15199:6:33","type":""},{"name":"value2","nativeSrc":"15207:6:33","nodeType":"YulTypedName","src":"15207:6:33","type":""},{"name":"value1","nativeSrc":"15215:6:33","nodeType":"YulTypedName","src":"15215:6:33","type":""},{"name":"value0","nativeSrc":"15223:6:33","nodeType":"YulTypedName","src":"15223:6:33","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"15234:4:33","nodeType":"YulTypedName","src":"15234:4:33","type":""}],"src":"15062:398:33"},{"body":{"nativeSrc":"15497:95:33","nodeType":"YulBlock","src":"15497:95:33","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"15514:1:33","nodeType":"YulLiteral","src":"15514:1:33","type":"","value":"0"},{"arguments":[{"kind":"number","nativeSrc":"15521:3:33","nodeType":"YulLiteral","src":"15521:3:33","type":"","value":"224"},{"kind":"number","nativeSrc":"15526:10:33","nodeType":"YulLiteral","src":"15526:10:33","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nativeSrc":"15517:3:33","nodeType":"YulIdentifier","src":"15517:3:33"},"nativeSrc":"15517:20:33","nodeType":"YulFunctionCall","src":"15517:20:33"}],"functionName":{"name":"mstore","nativeSrc":"15507:6:33","nodeType":"YulIdentifier","src":"15507:6:33"},"nativeSrc":"15507:31:33","nodeType":"YulFunctionCall","src":"15507:31:33"},"nativeSrc":"15507:31:33","nodeType":"YulExpressionStatement","src":"15507:31:33"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"15554:1:33","nodeType":"YulLiteral","src":"15554:1:33","type":"","value":"4"},{"kind":"number","nativeSrc":"15557:4:33","nodeType":"YulLiteral","src":"15557:4:33","type":"","value":"0x21"}],"functionName":{"name":"mstore","nativeSrc":"15547:6:33","nodeType":"YulIdentifier","src":"15547:6:33"},"nativeSrc":"15547:15:33","nodeType":"YulFunctionCall","src":"15547:15:33"},"nativeSrc":"15547:15:33","nodeType":"YulExpressionStatement","src":"15547:15:33"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"15578:1:33","nodeType":"YulLiteral","src":"15578:1:33","type":"","value":"0"},{"kind":"number","nativeSrc":"15581:4:33","nodeType":"YulLiteral","src":"15581:4:33","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"15571:6:33","nodeType":"YulIdentifier","src":"15571:6:33"},"nativeSrc":"15571:15:33","nodeType":"YulFunctionCall","src":"15571:15:33"},"nativeSrc":"15571:15:33","nodeType":"YulExpressionStatement","src":"15571:15:33"}]},"name":"panic_error_0x21","nativeSrc":"15465:127:33","nodeType":"YulFunctionDefinition","src":"15465:127:33"},{"body":{"nativeSrc":"15653:65:33","nodeType":"YulBlock","src":"15653:65:33","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"15670:1:33","nodeType":"YulLiteral","src":"15670:1:33","type":"","value":"0"},{"name":"ptr","nativeSrc":"15673:3:33","nodeType":"YulIdentifier","src":"15673:3:33"}],"functionName":{"name":"mstore","nativeSrc":"15663:6:33","nodeType":"YulIdentifier","src":"15663:6:33"},"nativeSrc":"15663:14:33","nodeType":"YulFunctionCall","src":"15663:14:33"},"nativeSrc":"15663:14:33","nodeType":"YulExpressionStatement","src":"15663:14:33"},{"nativeSrc":"15686:26:33","nodeType":"YulAssignment","src":"15686:26:33","value":{"arguments":[{"kind":"number","nativeSrc":"15704:1:33","nodeType":"YulLiteral","src":"15704:1:33","type":"","value":"0"},{"kind":"number","nativeSrc":"15707:4:33","nodeType":"YulLiteral","src":"15707:4:33","type":"","value":"0x20"}],"functionName":{"name":"keccak256","nativeSrc":"15694:9:33","nodeType":"YulIdentifier","src":"15694:9:33"},"nativeSrc":"15694:18:33","nodeType":"YulFunctionCall","src":"15694:18:33"},"variableNames":[{"name":"data","nativeSrc":"15686:4:33","nodeType":"YulIdentifier","src":"15686:4:33"}]}]},"name":"array_dataslot_string_storage","nativeSrc":"15597:121:33","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nativeSrc":"15636:3:33","nodeType":"YulTypedName","src":"15636:3:33","type":""}],"returnVariables":[{"name":"data","nativeSrc":"15644:4:33","nodeType":"YulTypedName","src":"15644:4:33","type":""}],"src":"15597:121:33"},{"body":{"nativeSrc":"15804:437:33","nodeType":"YulBlock","src":"15804:437:33","statements":[{"body":{"nativeSrc":"15837:398:33","nodeType":"YulBlock","src":"15837:398:33","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"15858:1:33","nodeType":"YulLiteral","src":"15858:1:33","type":"","value":"0"},{"name":"array","nativeSrc":"15861:5:33","nodeType":"YulIdentifier","src":"15861:5:33"}],"functionName":{"name":"mstore","nativeSrc":"15851:6:33","nodeType":"YulIdentifier","src":"15851:6:33"},"nativeSrc":"15851:16:33","nodeType":"YulFunctionCall","src":"15851:16:33"},"nativeSrc":"15851:16:33","nodeType":"YulExpressionStatement","src":"15851:16:33"},{"nativeSrc":"15880:30:33","nodeType":"YulVariableDeclaration","src":"15880:30:33","value":{"arguments":[{"kind":"number","nativeSrc":"15902:1:33","nodeType":"YulLiteral","src":"15902:1:33","type":"","value":"0"},{"kind":"number","nativeSrc":"15905:4:33","nodeType":"YulLiteral","src":"15905:4:33","type":"","value":"0x20"}],"functionName":{"name":"keccak256","nativeSrc":"15892:9:33","nodeType":"YulIdentifier","src":"15892:9:33"},"nativeSrc":"15892:18:33","nodeType":"YulFunctionCall","src":"15892:18:33"},"variables":[{"name":"data","nativeSrc":"15884:4:33","nodeType":"YulTypedName","src":"15884:4:33","type":""}]},{"nativeSrc":"15923:57:33","nodeType":"YulVariableDeclaration","src":"15923:57:33","value":{"arguments":[{"name":"data","nativeSrc":"15946:4:33","nodeType":"YulIdentifier","src":"15946:4:33"},{"arguments":[{"kind":"number","nativeSrc":"15956:1:33","nodeType":"YulLiteral","src":"15956:1:33","type":"","value":"5"},{"arguments":[{"name":"startIndex","nativeSrc":"15963:10:33","nodeType":"YulIdentifier","src":"15963:10:33"},{"kind":"number","nativeSrc":"15975:2:33","nodeType":"YulLiteral","src":"15975:2:33","type":"","value":"31"}],"functionName":{"name":"add","nativeSrc":"15959:3:33","nodeType":"YulIdentifier","src":"15959:3:33"},"nativeSrc":"15959:19:33","nodeType":"YulFunctionCall","src":"15959:19:33"}],"functionName":{"name":"shr","nativeSrc":"15952:3:33","nodeType":"YulIdentifier","src":"15952:3:33"},"nativeSrc":"15952:27:33","nodeType":"YulFunctionCall","src":"15952:27:33"}],"functionName":{"name":"add","nativeSrc":"15942:3:33","nodeType":"YulIdentifier","src":"15942:3:33"},"nativeSrc":"15942:38:33","nodeType":"YulFunctionCall","src":"15942:38:33"},"variables":[{"name":"deleteStart","nativeSrc":"15927:11:33","nodeType":"YulTypedName","src":"15927:11:33","type":""}]},{"body":{"nativeSrc":"16017:23:33","nodeType":"YulBlock","src":"16017:23:33","statements":[{"nativeSrc":"16019:19:33","nodeType":"YulAssignment","src":"16019:19:33","value":{"name":"data","nativeSrc":"16034:4:33","nodeType":"YulIdentifier","src":"16034:4:33"},"variableNames":[{"name":"deleteStart","nativeSrc":"16019:11:33","nodeType":"YulIdentifier","src":"16019:11:33"}]}]},"condition":{"arguments":[{"name":"startIndex","nativeSrc":"15999:10:33","nodeType":"YulIdentifier","src":"15999:10:33"},{"kind":"number","nativeSrc":"16011:4:33","nodeType":"YulLiteral","src":"16011:4:33","type":"","value":"0x20"}],"functionName":{"name":"lt","nativeSrc":"15996:2:33","nodeType":"YulIdentifier","src":"15996:2:33"},"nativeSrc":"15996:20:33","nodeType":"YulFunctionCall","src":"15996:20:33"},"nativeSrc":"15993:47:33","nodeType":"YulIf","src":"15993:47:33"},{"nativeSrc":"16053:41:33","nodeType":"YulVariableDeclaration","src":"16053:41:33","value":{"arguments":[{"name":"data","nativeSrc":"16067:4:33","nodeType":"YulIdentifier","src":"16067:4:33"},{"arguments":[{"kind":"number","nativeSrc":"16077:1:33","nodeType":"YulLiteral","src":"16077:1:33","type":"","value":"5"},{"arguments":[{"name":"len","nativeSrc":"16084:3:33","nodeType":"YulIdentifier","src":"16084:3:33"},{"kind":"number","nativeSrc":"16089:2:33","nodeType":"YulLiteral","src":"16089:2:33","type":"","value":"31"}],"functionName":{"name":"add","nativeSrc":"16080:3:33","nodeType":"YulIdentifier","src":"16080:3:33"},"nativeSrc":"16080:12:33","nodeType":"YulFunctionCall","src":"16080:12:33"}],"functionName":{"name":"shr","nativeSrc":"16073:3:33","nodeType":"YulIdentifier","src":"16073:3:33"},"nativeSrc":"16073:20:33","nodeType":"YulFunctionCall","src":"16073:20:33"}],"functionName":{"name":"add","nativeSrc":"16063:3:33","nodeType":"YulIdentifier","src":"16063:3:33"},"nativeSrc":"16063:31:33","nodeType":"YulFunctionCall","src":"16063:31:33"},"variables":[{"name":"_1","nativeSrc":"16057:2:33","nodeType":"YulTypedName","src":"16057:2:33","type":""}]},{"nativeSrc":"16107:24:33","nodeType":"YulVariableDeclaration","src":"16107:24:33","value":{"name":"deleteStart","nativeSrc":"16120:11:33","nodeType":"YulIdentifier","src":"16120:11:33"},"variables":[{"name":"start","nativeSrc":"16111:5:33","nodeType":"YulTypedName","src":"16111:5:33","type":""}]},{"body":{"nativeSrc":"16205:20:33","nodeType":"YulBlock","src":"16205:20:33","statements":[{"expression":{"arguments":[{"name":"start","nativeSrc":"16214:5:33","nodeType":"YulIdentifier","src":"16214:5:33"},{"kind":"number","nativeSrc":"16221:1:33","nodeType":"YulLiteral","src":"16221:1:33","type":"","value":"0"}],"functionName":{"name":"sstore","nativeSrc":"16207:6:33","nodeType":"YulIdentifier","src":"16207:6:33"},"nativeSrc":"16207:16:33","nodeType":"YulFunctionCall","src":"16207:16:33"},"nativeSrc":"16207:16:33","nodeType":"YulExpressionStatement","src":"16207:16:33"}]},"condition":{"arguments":[{"name":"start","nativeSrc":"16155:5:33","nodeType":"YulIdentifier","src":"16155:5:33"},{"name":"_1","nativeSrc":"16162:2:33","nodeType":"YulIdentifier","src":"16162:2:33"}],"functionName":{"name":"lt","nativeSrc":"16152:2:33","nodeType":"YulIdentifier","src":"16152:2:33"},"nativeSrc":"16152:13:33","nodeType":"YulFunctionCall","src":"16152:13:33"},"nativeSrc":"16144:81:33","nodeType":"YulForLoop","post":{"nativeSrc":"16166:26:33","nodeType":"YulBlock","src":"16166:26:33","statements":[{"nativeSrc":"16168:22:33","nodeType":"YulAssignment","src":"16168:22:33","value":{"arguments":[{"name":"start","nativeSrc":"16181:5:33","nodeType":"YulIdentifier","src":"16181:5:33"},{"kind":"number","nativeSrc":"16188:1:33","nodeType":"YulLiteral","src":"16188:1:33","type":"","value":"1"}],"functionName":{"name":"add","nativeSrc":"16177:3:33","nodeType":"YulIdentifier","src":"16177:3:33"},"nativeSrc":"16177:13:33","nodeType":"YulFunctionCall","src":"16177:13:33"},"variableNames":[{"name":"start","nativeSrc":"16168:5:33","nodeType":"YulIdentifier","src":"16168:5:33"}]}]},"pre":{"nativeSrc":"16148:3:33","nodeType":"YulBlock","src":"16148:3:33","statements":[]},"src":"16144:81:33"}]},"condition":{"arguments":[{"name":"len","nativeSrc":"15820:3:33","nodeType":"YulIdentifier","src":"15820:3:33"},{"kind":"number","nativeSrc":"15825:2:33","nodeType":"YulLiteral","src":"15825:2:33","type":"","value":"31"}],"functionName":{"name":"gt","nativeSrc":"15817:2:33","nodeType":"YulIdentifier","src":"15817:2:33"},"nativeSrc":"15817:11:33","nodeType":"YulFunctionCall","src":"15817:11:33"},"nativeSrc":"15814:421:33","nodeType":"YulIf","src":"15814:421:33"}]},"name":"clean_up_bytearray_end_slots_string_storage","nativeSrc":"15723:518:33","nodeType":"YulFunctionDefinition","parameters":[{"name":"array","nativeSrc":"15776:5:33","nodeType":"YulTypedName","src":"15776:5:33","type":""},{"name":"len","nativeSrc":"15783:3:33","nodeType":"YulTypedName","src":"15783:3:33","type":""},{"name":"startIndex","nativeSrc":"15788:10:33","nodeType":"YulTypedName","src":"15788:10:33","type":""}],"src":"15723:518:33"},{"body":{"nativeSrc":"16331:81:33","nodeType":"YulBlock","src":"16331:81:33","statements":[{"nativeSrc":"16341:65:33","nodeType":"YulAssignment","src":"16341:65:33","value":{"arguments":[{"arguments":[{"name":"data","nativeSrc":"16356:4:33","nodeType":"YulIdentifier","src":"16356:4:33"},{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"16374:1:33","nodeType":"YulLiteral","src":"16374:1:33","type":"","value":"3"},{"name":"len","nativeSrc":"16377:3:33","nodeType":"YulIdentifier","src":"16377:3:33"}],"functionName":{"name":"shl","nativeSrc":"16370:3:33","nodeType":"YulIdentifier","src":"16370:3:33"},"nativeSrc":"16370:11:33","nodeType":"YulFunctionCall","src":"16370:11:33"},{"arguments":[{"kind":"number","nativeSrc":"16387:1:33","nodeType":"YulLiteral","src":"16387:1:33","type":"","value":"0"}],"functionName":{"name":"not","nativeSrc":"16383:3:33","nodeType":"YulIdentifier","src":"16383:3:33"},"nativeSrc":"16383:6:33","nodeType":"YulFunctionCall","src":"16383:6:33"}],"functionName":{"name":"shr","nativeSrc":"16366:3:33","nodeType":"YulIdentifier","src":"16366:3:33"},"nativeSrc":"16366:24:33","nodeType":"YulFunctionCall","src":"16366:24:33"}],"functionName":{"name":"not","nativeSrc":"16362:3:33","nodeType":"YulIdentifier","src":"16362:3:33"},"nativeSrc":"16362:29:33","nodeType":"YulFunctionCall","src":"16362:29:33"}],"functionName":{"name":"and","nativeSrc":"16352:3:33","nodeType":"YulIdentifier","src":"16352:3:33"},"nativeSrc":"16352:40:33","nodeType":"YulFunctionCall","src":"16352:40:33"},{"arguments":[{"kind":"number","nativeSrc":"16398:1:33","nodeType":"YulLiteral","src":"16398:1:33","type":"","value":"1"},{"name":"len","nativeSrc":"16401:3:33","nodeType":"YulIdentifier","src":"16401:3:33"}],"functionName":{"name":"shl","nativeSrc":"16394:3:33","nodeType":"YulIdentifier","src":"16394:3:33"},"nativeSrc":"16394:11:33","nodeType":"YulFunctionCall","src":"16394:11:33"}],"functionName":{"name":"or","nativeSrc":"16349:2:33","nodeType":"YulIdentifier","src":"16349:2:33"},"nativeSrc":"16349:57:33","nodeType":"YulFunctionCall","src":"16349:57:33"},"variableNames":[{"name":"used","nativeSrc":"16341:4:33","nodeType":"YulIdentifier","src":"16341:4:33"}]}]},"name":"extract_used_part_and_set_length_of_short_byte_array","nativeSrc":"16246:166:33","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nativeSrc":"16308:4:33","nodeType":"YulTypedName","src":"16308:4:33","type":""},{"name":"len","nativeSrc":"16314:3:33","nodeType":"YulTypedName","src":"16314:3:33","type":""}],"returnVariables":[{"name":"used","nativeSrc":"16322:4:33","nodeType":"YulTypedName","src":"16322:4:33","type":""}],"src":"16246:166:33"},{"body":{"nativeSrc":"16513:1203:33","nodeType":"YulBlock","src":"16513:1203:33","statements":[{"nativeSrc":"16523:24:33","nodeType":"YulVariableDeclaration","src":"16523:24:33","value":{"arguments":[{"name":"src","nativeSrc":"16543:3:33","nodeType":"YulIdentifier","src":"16543:3:33"}],"functionName":{"name":"mload","nativeSrc":"16537:5:33","nodeType":"YulIdentifier","src":"16537:5:33"},"nativeSrc":"16537:10:33","nodeType":"YulFunctionCall","src":"16537:10:33"},"variables":[{"name":"newLen","nativeSrc":"16527:6:33","nodeType":"YulTypedName","src":"16527:6:33","type":""}]},{"body":{"nativeSrc":"16590:22:33","nodeType":"YulBlock","src":"16590:22:33","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nativeSrc":"16592:16:33","nodeType":"YulIdentifier","src":"16592:16:33"},"nativeSrc":"16592:18:33","nodeType":"YulFunctionCall","src":"16592:18:33"},"nativeSrc":"16592:18:33","nodeType":"YulExpressionStatement","src":"16592:18:33"}]},"condition":{"arguments":[{"name":"newLen","nativeSrc":"16562:6:33","nodeType":"YulIdentifier","src":"16562:6:33"},{"kind":"number","nativeSrc":"16570:18:33","nodeType":"YulLiteral","src":"16570:18:33","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nativeSrc":"16559:2:33","nodeType":"YulIdentifier","src":"16559:2:33"},"nativeSrc":"16559:30:33","nodeType":"YulFunctionCall","src":"16559:30:33"},"nativeSrc":"16556:56:33","nodeType":"YulIf","src":"16556:56:33"},{"expression":{"arguments":[{"name":"slot","nativeSrc":"16665:4:33","nodeType":"YulIdentifier","src":"16665:4:33"},{"arguments":[{"arguments":[{"name":"slot","nativeSrc":"16703:4:33","nodeType":"YulIdentifier","src":"16703:4:33"}],"functionName":{"name":"sload","nativeSrc":"16697:5:33","nodeType":"YulIdentifier","src":"16697:5:33"},"nativeSrc":"16697:11:33","nodeType":"YulFunctionCall","src":"16697:11:33"}],"functionName":{"name":"extract_byte_array_length","nativeSrc":"16671:25:33","nodeType":"YulIdentifier","src":"16671:25:33"},"nativeSrc":"16671:38:33","nodeType":"YulFunctionCall","src":"16671:38:33"},{"name":"newLen","nativeSrc":"16711:6:33","nodeType":"YulIdentifier","src":"16711:6:33"}],"functionName":{"name":"clean_up_bytearray_end_slots_string_storage","nativeSrc":"16621:43:33","nodeType":"YulIdentifier","src":"16621:43:33"},"nativeSrc":"16621:97:33","nodeType":"YulFunctionCall","src":"16621:97:33"},"nativeSrc":"16621:97:33","nodeType":"YulExpressionStatement","src":"16621:97:33"},{"nativeSrc":"16727:18:33","nodeType":"YulVariableDeclaration","src":"16727:18:33","value":{"kind":"number","nativeSrc":"16744:1:33","nodeType":"YulLiteral","src":"16744:1:33","type":"","value":"0"},"variables":[{"name":"srcOffset","nativeSrc":"16731:9:33","nodeType":"YulTypedName","src":"16731:9:33","type":""}]},{"nativeSrc":"16754:17:33","nodeType":"YulAssignment","src":"16754:17:33","value":{"kind":"number","nativeSrc":"16767:4:33","nodeType":"YulLiteral","src":"16767:4:33","type":"","value":"0x20"},"variableNames":[{"name":"srcOffset","nativeSrc":"16754:9:33","nodeType":"YulIdentifier","src":"16754:9:33"}]},{"cases":[{"body":{"nativeSrc":"16817:642:33","nodeType":"YulBlock","src":"16817:642:33","statements":[{"nativeSrc":"16831:35:33","nodeType":"YulVariableDeclaration","src":"16831:35:33","value":{"arguments":[{"name":"newLen","nativeSrc":"16850:6:33","nodeType":"YulIdentifier","src":"16850:6:33"},{"arguments":[{"kind":"number","nativeSrc":"16862:2:33","nodeType":"YulLiteral","src":"16862:2:33","type":"","value":"31"}],"functionName":{"name":"not","nativeSrc":"16858:3:33","nodeType":"YulIdentifier","src":"16858:3:33"},"nativeSrc":"16858:7:33","nodeType":"YulFunctionCall","src":"16858:7:33"}],"functionName":{"name":"and","nativeSrc":"16846:3:33","nodeType":"YulIdentifier","src":"16846:3:33"},"nativeSrc":"16846:20:33","nodeType":"YulFunctionCall","src":"16846:20:33"},"variables":[{"name":"loopEnd","nativeSrc":"16835:7:33","nodeType":"YulTypedName","src":"16835:7:33","type":""}]},{"nativeSrc":"16879:49:33","nodeType":"YulVariableDeclaration","src":"16879:49:33","value":{"arguments":[{"name":"slot","nativeSrc":"16923:4:33","nodeType":"YulIdentifier","src":"16923:4:33"}],"functionName":{"name":"array_dataslot_string_storage","nativeSrc":"16893:29:33","nodeType":"YulIdentifier","src":"16893:29:33"},"nativeSrc":"16893:35:33","nodeType":"YulFunctionCall","src":"16893:35:33"},"variables":[{"name":"dstPtr","nativeSrc":"16883:6:33","nodeType":"YulTypedName","src":"16883:6:33","type":""}]},{"nativeSrc":"16941:10:33","nodeType":"YulVariableDeclaration","src":"16941:10:33","value":{"kind":"number","nativeSrc":"16950:1:33","nodeType":"YulLiteral","src":"16950:1:33","type":"","value":"0"},"variables":[{"name":"i","nativeSrc":"16945:1:33","nodeType":"YulTypedName","src":"16945:1:33","type":""}]},{"body":{"nativeSrc":"17021:165:33","nodeType":"YulBlock","src":"17021:165:33","statements":[{"expression":{"arguments":[{"name":"dstPtr","nativeSrc":"17046:6:33","nodeType":"YulIdentifier","src":"17046:6:33"},{"arguments":[{"arguments":[{"name":"src","nativeSrc":"17064:3:33","nodeType":"YulIdentifier","src":"17064:3:33"},{"name":"srcOffset","nativeSrc":"17069:9:33","nodeType":"YulIdentifier","src":"17069:9:33"}],"functionName":{"name":"add","nativeSrc":"17060:3:33","nodeType":"YulIdentifier","src":"17060:3:33"},"nativeSrc":"17060:19:33","nodeType":"YulFunctionCall","src":"17060:19:33"}],"functionName":{"name":"mload","nativeSrc":"17054:5:33","nodeType":"YulIdentifier","src":"17054:5:33"},"nativeSrc":"17054:26:33","nodeType":"YulFunctionCall","src":"17054:26:33"}],"functionName":{"name":"sstore","nativeSrc":"17039:6:33","nodeType":"YulIdentifier","src":"17039:6:33"},"nativeSrc":"17039:42:33","nodeType":"YulFunctionCall","src":"17039:42:33"},"nativeSrc":"17039:42:33","nodeType":"YulExpressionStatement","src":"17039:42:33"},{"nativeSrc":"17098:24:33","nodeType":"YulAssignment","src":"17098:24:33","value":{"arguments":[{"name":"dstPtr","nativeSrc":"17112:6:33","nodeType":"YulIdentifier","src":"17112:6:33"},{"kind":"number","nativeSrc":"17120:1:33","nodeType":"YulLiteral","src":"17120:1:33","type":"","value":"1"}],"functionName":{"name":"add","nativeSrc":"17108:3:33","nodeType":"YulIdentifier","src":"17108:3:33"},"nativeSrc":"17108:14:33","nodeType":"YulFunctionCall","src":"17108:14:33"},"variableNames":[{"name":"dstPtr","nativeSrc":"17098:6:33","nodeType":"YulIdentifier","src":"17098:6:33"}]},{"nativeSrc":"17139:33:33","nodeType":"YulAssignment","src":"17139:33:33","value":{"arguments":[{"name":"srcOffset","nativeSrc":"17156:9:33","nodeType":"YulIdentifier","src":"17156:9:33"},{"kind":"number","nativeSrc":"17167:4:33","nodeType":"YulLiteral","src":"17167:4:33","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"17152:3:33","nodeType":"YulIdentifier","src":"17152:3:33"},"nativeSrc":"17152:20:33","nodeType":"YulFunctionCall","src":"17152:20:33"},"variableNames":[{"name":"srcOffset","nativeSrc":"17139:9:33","nodeType":"YulIdentifier","src":"17139:9:33"}]}]},"condition":{"arguments":[{"name":"i","nativeSrc":"16975:1:33","nodeType":"YulIdentifier","src":"16975:1:33"},{"name":"loopEnd","nativeSrc":"16978:7:33","nodeType":"YulIdentifier","src":"16978:7:33"}],"functionName":{"name":"lt","nativeSrc":"16972:2:33","nodeType":"YulIdentifier","src":"16972:2:33"},"nativeSrc":"16972:14:33","nodeType":"YulFunctionCall","src":"16972:14:33"},"nativeSrc":"16964:222:33","nodeType":"YulForLoop","post":{"nativeSrc":"16987:21:33","nodeType":"YulBlock","src":"16987:21:33","statements":[{"nativeSrc":"16989:17:33","nodeType":"YulAssignment","src":"16989:17:33","value":{"arguments":[{"name":"i","nativeSrc":"16998:1:33","nodeType":"YulIdentifier","src":"16998:1:33"},{"kind":"number","nativeSrc":"17001:4:33","nodeType":"YulLiteral","src":"17001:4:33","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"16994:3:33","nodeType":"YulIdentifier","src":"16994:3:33"},"nativeSrc":"16994:12:33","nodeType":"YulFunctionCall","src":"16994:12:33"},"variableNames":[{"name":"i","nativeSrc":"16989:1:33","nodeType":"YulIdentifier","src":"16989:1:33"}]}]},"pre":{"nativeSrc":"16968:3:33","nodeType":"YulBlock","src":"16968:3:33","statements":[]},"src":"16964:222:33"},{"body":{"nativeSrc":"17234:166:33","nodeType":"YulBlock","src":"17234:166:33","statements":[{"nativeSrc":"17252:43:33","nodeType":"YulVariableDeclaration","src":"17252:43:33","value":{"arguments":[{"arguments":[{"name":"src","nativeSrc":"17279:3:33","nodeType":"YulIdentifier","src":"17279:3:33"},{"name":"srcOffset","nativeSrc":"17284:9:33","nodeType":"YulIdentifier","src":"17284:9:33"}],"functionName":{"name":"add","nativeSrc":"17275:3:33","nodeType":"YulIdentifier","src":"17275:3:33"},"nativeSrc":"17275:19:33","nodeType":"YulFunctionCall","src":"17275:19:33"}],"functionName":{"name":"mload","nativeSrc":"17269:5:33","nodeType":"YulIdentifier","src":"17269:5:33"},"nativeSrc":"17269:26:33","nodeType":"YulFunctionCall","src":"17269:26:33"},"variables":[{"name":"lastValue","nativeSrc":"17256:9:33","nodeType":"YulTypedName","src":"17256:9:33","type":""}]},{"expression":{"arguments":[{"name":"dstPtr","nativeSrc":"17319:6:33","nodeType":"YulIdentifier","src":"17319:6:33"},{"arguments":[{"name":"lastValue","nativeSrc":"17331:9:33","nodeType":"YulIdentifier","src":"17331:9:33"},{"arguments":[{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"17358:1:33","nodeType":"YulLiteral","src":"17358:1:33","type":"","value":"3"},{"name":"newLen","nativeSrc":"17361:6:33","nodeType":"YulIdentifier","src":"17361:6:33"}],"functionName":{"name":"shl","nativeSrc":"17354:3:33","nodeType":"YulIdentifier","src":"17354:3:33"},"nativeSrc":"17354:14:33","nodeType":"YulFunctionCall","src":"17354:14:33"},{"kind":"number","nativeSrc":"17370:3:33","nodeType":"YulLiteral","src":"17370:3:33","type":"","value":"248"}],"functionName":{"name":"and","nativeSrc":"17350:3:33","nodeType":"YulIdentifier","src":"17350:3:33"},"nativeSrc":"17350:24:33","nodeType":"YulFunctionCall","src":"17350:24:33"},{"arguments":[{"kind":"number","nativeSrc":"17380:1:33","nodeType":"YulLiteral","src":"17380:1:33","type":"","value":"0"}],"functionName":{"name":"not","nativeSrc":"17376:3:33","nodeType":"YulIdentifier","src":"17376:3:33"},"nativeSrc":"17376:6:33","nodeType":"YulFunctionCall","src":"17376:6:33"}],"functionName":{"name":"shr","nativeSrc":"17346:3:33","nodeType":"YulIdentifier","src":"17346:3:33"},"nativeSrc":"17346:37:33","nodeType":"YulFunctionCall","src":"17346:37:33"}],"functionName":{"name":"not","nativeSrc":"17342:3:33","nodeType":"YulIdentifier","src":"17342:3:33"},"nativeSrc":"17342:42:33","nodeType":"YulFunctionCall","src":"17342:42:33"}],"functionName":{"name":"and","nativeSrc":"17327:3:33","nodeType":"YulIdentifier","src":"17327:3:33"},"nativeSrc":"17327:58:33","nodeType":"YulFunctionCall","src":"17327:58:33"}],"functionName":{"name":"sstore","nativeSrc":"17312:6:33","nodeType":"YulIdentifier","src":"17312:6:33"},"nativeSrc":"17312:74:33","nodeType":"YulFunctionCall","src":"17312:74:33"},"nativeSrc":"17312:74:33","nodeType":"YulExpressionStatement","src":"17312:74:33"}]},"condition":{"arguments":[{"name":"loopEnd","nativeSrc":"17205:7:33","nodeType":"YulIdentifier","src":"17205:7:33"},{"name":"newLen","nativeSrc":"17214:6:33","nodeType":"YulIdentifier","src":"17214:6:33"}],"functionName":{"name":"lt","nativeSrc":"17202:2:33","nodeType":"YulIdentifier","src":"17202:2:33"},"nativeSrc":"17202:19:33","nodeType":"YulFunctionCall","src":"17202:19:33"},"nativeSrc":"17199:201:33","nodeType":"YulIf","src":"17199:201:33"},{"expression":{"arguments":[{"name":"slot","nativeSrc":"17420:4:33","nodeType":"YulIdentifier","src":"17420:4:33"},{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"17434:1:33","nodeType":"YulLiteral","src":"17434:1:33","type":"","value":"1"},{"name":"newLen","nativeSrc":"17437:6:33","nodeType":"YulIdentifier","src":"17437:6:33"}],"functionName":{"name":"shl","nativeSrc":"17430:3:33","nodeType":"YulIdentifier","src":"17430:3:33"},"nativeSrc":"17430:14:33","nodeType":"YulFunctionCall","src":"17430:14:33"},{"kind":"number","nativeSrc":"17446:1:33","nodeType":"YulLiteral","src":"17446:1:33","type":"","value":"1"}],"functionName":{"name":"add","nativeSrc":"17426:3:33","nodeType":"YulIdentifier","src":"17426:3:33"},"nativeSrc":"17426:22:33","nodeType":"YulFunctionCall","src":"17426:22:33"}],"functionName":{"name":"sstore","nativeSrc":"17413:6:33","nodeType":"YulIdentifier","src":"17413:6:33"},"nativeSrc":"17413:36:33","nodeType":"YulFunctionCall","src":"17413:36:33"},"nativeSrc":"17413:36:33","nodeType":"YulExpressionStatement","src":"17413:36:33"}]},"nativeSrc":"16810:649:33","nodeType":"YulCase","src":"16810:649:33","value":{"kind":"number","nativeSrc":"16815:1:33","nodeType":"YulLiteral","src":"16815:1:33","type":"","value":"1"}},{"body":{"nativeSrc":"17476:234:33","nodeType":"YulBlock","src":"17476:234:33","statements":[{"nativeSrc":"17490:14:33","nodeType":"YulVariableDeclaration","src":"17490:14:33","value":{"kind":"number","nativeSrc":"17503:1:33","nodeType":"YulLiteral","src":"17503:1:33","type":"","value":"0"},"variables":[{"name":"value","nativeSrc":"17494:5:33","nodeType":"YulTypedName","src":"17494:5:33","type":""}]},{"body":{"nativeSrc":"17539:67:33","nodeType":"YulBlock","src":"17539:67:33","statements":[{"nativeSrc":"17557:35:33","nodeType":"YulAssignment","src":"17557:35:33","value":{"arguments":[{"arguments":[{"name":"src","nativeSrc":"17576:3:33","nodeType":"YulIdentifier","src":"17576:3:33"},{"name":"srcOffset","nativeSrc":"17581:9:33","nodeType":"YulIdentifier","src":"17581:9:33"}],"functionName":{"name":"add","nativeSrc":"17572:3:33","nodeType":"YulIdentifier","src":"17572:3:33"},"nativeSrc":"17572:19:33","nodeType":"YulFunctionCall","src":"17572:19:33"}],"functionName":{"name":"mload","nativeSrc":"17566:5:33","nodeType":"YulIdentifier","src":"17566:5:33"},"nativeSrc":"17566:26:33","nodeType":"YulFunctionCall","src":"17566:26:33"},"variableNames":[{"name":"value","nativeSrc":"17557:5:33","nodeType":"YulIdentifier","src":"17557:5:33"}]}]},"condition":{"name":"newLen","nativeSrc":"17520:6:33","nodeType":"YulIdentifier","src":"17520:6:33"},"nativeSrc":"17517:89:33","nodeType":"YulIf","src":"17517:89:33"},{"expression":{"arguments":[{"name":"slot","nativeSrc":"17626:4:33","nodeType":"YulIdentifier","src":"17626:4:33"},{"arguments":[{"name":"value","nativeSrc":"17685:5:33","nodeType":"YulIdentifier","src":"17685:5:33"},{"name":"newLen","nativeSrc":"17692:6:33","nodeType":"YulIdentifier","src":"17692:6:33"}],"functionName":{"name":"extract_used_part_and_set_length_of_short_byte_array","nativeSrc":"17632:52:33","nodeType":"YulIdentifier","src":"17632:52:33"},"nativeSrc":"17632:67:33","nodeType":"YulFunctionCall","src":"17632:67:33"}],"functionName":{"name":"sstore","nativeSrc":"17619:6:33","nodeType":"YulIdentifier","src":"17619:6:33"},"nativeSrc":"17619:81:33","nodeType":"YulFunctionCall","src":"17619:81:33"},"nativeSrc":"17619:81:33","nodeType":"YulExpressionStatement","src":"17619:81:33"}]},"nativeSrc":"17468:242:33","nodeType":"YulCase","src":"17468:242:33","value":"default"}],"expression":{"arguments":[{"name":"newLen","nativeSrc":"16790:6:33","nodeType":"YulIdentifier","src":"16790:6:33"},{"kind":"number","nativeSrc":"16798:2:33","nodeType":"YulLiteral","src":"16798:2:33","type":"","value":"31"}],"functionName":{"name":"gt","nativeSrc":"16787:2:33","nodeType":"YulIdentifier","src":"16787:2:33"},"nativeSrc":"16787:14:33","nodeType":"YulFunctionCall","src":"16787:14:33"},"nativeSrc":"16780:930:33","nodeType":"YulSwitch","src":"16780:930:33"}]},"name":"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage","nativeSrc":"16417:1299:33","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nativeSrc":"16498:4:33","nodeType":"YulTypedName","src":"16498:4:33","type":""},{"name":"src","nativeSrc":"16504:3:33","nodeType":"YulTypedName","src":"16504:3:33","type":""}],"src":"16417:1299:33"},{"body":{"nativeSrc":"17858:150:33","nodeType":"YulBlock","src":"17858:150:33","statements":[{"nativeSrc":"17868:27:33","nodeType":"YulVariableDeclaration","src":"17868:27:33","value":{"arguments":[{"name":"value0","nativeSrc":"17888:6:33","nodeType":"YulIdentifier","src":"17888:6:33"}],"functionName":{"name":"mload","nativeSrc":"17882:5:33","nodeType":"YulIdentifier","src":"17882:5:33"},"nativeSrc":"17882:13:33","nodeType":"YulFunctionCall","src":"17882:13:33"},"variables":[{"name":"length","nativeSrc":"17872:6:33","nodeType":"YulTypedName","src":"17872:6:33","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"value0","nativeSrc":"17943:6:33","nodeType":"YulIdentifier","src":"17943:6:33"},{"kind":"number","nativeSrc":"17951:4:33","nodeType":"YulLiteral","src":"17951:4:33","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"17939:3:33","nodeType":"YulIdentifier","src":"17939:3:33"},"nativeSrc":"17939:17:33","nodeType":"YulFunctionCall","src":"17939:17:33"},{"name":"pos","nativeSrc":"17958:3:33","nodeType":"YulIdentifier","src":"17958:3:33"},{"name":"length","nativeSrc":"17963:6:33","nodeType":"YulIdentifier","src":"17963:6:33"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nativeSrc":"17904:34:33","nodeType":"YulIdentifier","src":"17904:34:33"},"nativeSrc":"17904:66:33","nodeType":"YulFunctionCall","src":"17904:66:33"},"nativeSrc":"17904:66:33","nodeType":"YulExpressionStatement","src":"17904:66:33"},{"nativeSrc":"17979:23:33","nodeType":"YulAssignment","src":"17979:23:33","value":{"arguments":[{"name":"pos","nativeSrc":"17990:3:33","nodeType":"YulIdentifier","src":"17990:3:33"},{"name":"length","nativeSrc":"17995:6:33","nodeType":"YulIdentifier","src":"17995:6:33"}],"functionName":{"name":"add","nativeSrc":"17986:3:33","nodeType":"YulIdentifier","src":"17986:3:33"},"nativeSrc":"17986:16:33","nodeType":"YulFunctionCall","src":"17986:16:33"},"variableNames":[{"name":"end","nativeSrc":"17979:3:33","nodeType":"YulIdentifier","src":"17979:3:33"}]}]},"name":"abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed","nativeSrc":"17721:287:33","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"17834:3:33","nodeType":"YulTypedName","src":"17834:3:33","type":""},{"name":"value0","nativeSrc":"17839:6:33","nodeType":"YulTypedName","src":"17839:6:33","type":""}],"returnVariables":[{"name":"end","nativeSrc":"17850:3:33","nodeType":"YulTypedName","src":"17850:3:33","type":""}],"src":"17721:287:33"},{"body":{"nativeSrc":"18061:174:33","nodeType":"YulBlock","src":"18061:174:33","statements":[{"nativeSrc":"18071:16:33","nodeType":"YulAssignment","src":"18071:16:33","value":{"arguments":[{"name":"x","nativeSrc":"18082:1:33","nodeType":"YulIdentifier","src":"18082:1:33"},{"name":"y","nativeSrc":"18085:1:33","nodeType":"YulIdentifier","src":"18085:1:33"}],"functionName":{"name":"add","nativeSrc":"18078:3:33","nodeType":"YulIdentifier","src":"18078:3:33"},"nativeSrc":"18078:9:33","nodeType":"YulFunctionCall","src":"18078:9:33"},"variableNames":[{"name":"sum","nativeSrc":"18071:3:33","nodeType":"YulIdentifier","src":"18071:3:33"}]},{"body":{"nativeSrc":"18118:111:33","nodeType":"YulBlock","src":"18118:111:33","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"18139:1:33","nodeType":"YulLiteral","src":"18139:1:33","type":"","value":"0"},{"arguments":[{"kind":"number","nativeSrc":"18146:3:33","nodeType":"YulLiteral","src":"18146:3:33","type":"","value":"224"},{"kind":"number","nativeSrc":"18151:10:33","nodeType":"YulLiteral","src":"18151:10:33","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nativeSrc":"18142:3:33","nodeType":"YulIdentifier","src":"18142:3:33"},"nativeSrc":"18142:20:33","nodeType":"YulFunctionCall","src":"18142:20:33"}],"functionName":{"name":"mstore","nativeSrc":"18132:6:33","nodeType":"YulIdentifier","src":"18132:6:33"},"nativeSrc":"18132:31:33","nodeType":"YulFunctionCall","src":"18132:31:33"},"nativeSrc":"18132:31:33","nodeType":"YulExpressionStatement","src":"18132:31:33"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"18183:1:33","nodeType":"YulLiteral","src":"18183:1:33","type":"","value":"4"},{"kind":"number","nativeSrc":"18186:4:33","nodeType":"YulLiteral","src":"18186:4:33","type":"","value":"0x11"}],"functionName":{"name":"mstore","nativeSrc":"18176:6:33","nodeType":"YulIdentifier","src":"18176:6:33"},"nativeSrc":"18176:15:33","nodeType":"YulFunctionCall","src":"18176:15:33"},"nativeSrc":"18176:15:33","nodeType":"YulExpressionStatement","src":"18176:15:33"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"18211:1:33","nodeType":"YulLiteral","src":"18211:1:33","type":"","value":"0"},{"kind":"number","nativeSrc":"18214:4:33","nodeType":"YulLiteral","src":"18214:4:33","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"18204:6:33","nodeType":"YulIdentifier","src":"18204:6:33"},"nativeSrc":"18204:15:33","nodeType":"YulFunctionCall","src":"18204:15:33"},"nativeSrc":"18204:15:33","nodeType":"YulExpressionStatement","src":"18204:15:33"}]},"condition":{"arguments":[{"name":"x","nativeSrc":"18102:1:33","nodeType":"YulIdentifier","src":"18102:1:33"},{"name":"sum","nativeSrc":"18105:3:33","nodeType":"YulIdentifier","src":"18105:3:33"}],"functionName":{"name":"gt","nativeSrc":"18099:2:33","nodeType":"YulIdentifier","src":"18099:2:33"},"nativeSrc":"18099:10:33","nodeType":"YulFunctionCall","src":"18099:10:33"},"nativeSrc":"18096:133:33","nodeType":"YulIf","src":"18096:133:33"}]},"name":"checked_add_t_uint256","nativeSrc":"18013:222:33","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nativeSrc":"18044:1:33","nodeType":"YulTypedName","src":"18044:1:33","type":""},{"name":"y","nativeSrc":"18047:1:33","nodeType":"YulTypedName","src":"18047:1:33","type":""}],"returnVariables":[{"name":"sum","nativeSrc":"18053:3:33","nodeType":"YulTypedName","src":"18053:3:33","type":""}],"src":"18013:222:33"}]},"contents":"{\n    { }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_tuple_t_bytes4(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        if iszero(eq(value, and(value, shl(224, 0xffffffff)))) { revert(0, 0) }\n        value0 := value\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function copy_memory_to_memory_with_cleanup(src, dst, length)\n    {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n    function abi_encode_string(value, pos) -> end\n    {\n        let length := mload(value)\n        mstore(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), add(pos, 0x20), length)\n        end := add(add(pos, and(add(length, 31), not(31))), 0x20)\n    }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        tail := abi_encode_string(value0, add(headStart, 32))\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        let value := 0\n        value := calldataload(add(headStart, 32))\n        value1 := value\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        let value := 0\n        value := calldataload(add(headStart, 64))\n        value2 := value\n    }\n    function abi_decode_tuple_t_bytes32(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := 0\n        value := calldataload(headStart)\n        value0 := value\n    }\n    function abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_tuple_t_bytes32t_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let value := 0\n        value := calldataload(headStart)\n        value0 := value\n        value1 := abi_decode_address(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xff))\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function abi_decode_tuple_t_addresst_bytes_memory_ptr(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        let offset := calldataload(add(headStart, 32))\n        if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n        let _1 := add(headStart, offset)\n        if iszero(slt(add(_1, 0x1f), dataEnd)) { revert(0, 0) }\n        let length := calldataload(_1)\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n        let memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(and(add(length, 0x1f), not(31)), 63), not(31)))\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        mstore(memPtr, length)\n        if gt(add(add(_1, length), 32), dataEnd) { revert(0, 0) }\n        calldatacopy(add(memPtr, 32), add(_1, 32), length)\n        mstore(add(add(memPtr, length), 32), 0)\n        value1 := memPtr\n    }\n    function abi_decode_array_address_dyn_calldata(offset, end) -> arrayPos, length\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        length := calldataload(offset)\n        if gt(length, 0xffffffffffffffff) { revert(0, 0) }\n        arrayPos := add(offset, 0x20)\n        if gt(add(add(offset, shl(5, length)), 0x20), end) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_array$_t_address_$dyn_calldata_ptr(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let offset := calldataload(headStart)\n        if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n        let value0_1, value1_1 := abi_decode_array_address_dyn_calldata(add(headStart, offset), dataEnd)\n        value0 := value0_1\n        value1 := value1_1\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := 0\n        value := calldataload(headStart)\n        value0 := value\n    }\n    function abi_encode_tuple_t_bytes1_t_string_memory_ptr_t_string_memory_ptr_t_uint256_t_address_t_bytes32_t_array$_t_uint256_$dyn_memory_ptr__to_t_bytes1_t_string_memory_ptr_t_string_memory_ptr_t_uint256_t_address_t_bytes32_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed(headStart, value6, value5, value4, value3, value2, value1, value0) -> tail\n    {\n        mstore(headStart, and(value0, shl(248, 255)))\n        mstore(add(headStart, 32), 224)\n        let tail_1 := abi_encode_string(value1, add(headStart, 224))\n        mstore(add(headStart, 64), sub(tail_1, headStart))\n        let tail_2 := abi_encode_string(value2, tail_1)\n        mstore(add(headStart, 96), value3)\n        mstore(add(headStart, 128), and(value4, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 160), value5)\n        mstore(add(headStart, 192), sub(tail_2, headStart))\n        let pos := tail_2\n        let length := mload(value6)\n        mstore(tail_2, length)\n        pos := add(tail_2, 32)\n        let srcPtr := add(value6, 32)\n        let i := 0\n        for { } lt(i, length) { i := add(i, 1) }\n        {\n            mstore(pos, mload(srcPtr))\n            pos := add(pos, 32)\n            srcPtr := add(srcPtr, 32)\n        }\n        tail := pos\n    }\n    function abi_decode_tuple_t_array$_t_address_$dyn_calldata_ptrt_array$_t_uint256_$dyn_calldata_ptr(headStart, dataEnd) -> value0, value1, value2, value3\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let offset := calldataload(headStart)\n        if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n        let value0_1, value1_1 := abi_decode_array_address_dyn_calldata(add(headStart, offset), dataEnd)\n        value0 := value0_1\n        value1 := value1_1\n        let offset_1 := calldataload(add(headStart, 32))\n        if gt(offset_1, 0xffffffffffffffff) { revert(0, 0) }\n        let value2_1, value3_1 := abi_decode_array_address_dyn_calldata(add(headStart, offset_1), dataEnd)\n        value2 := value2_1\n        value3 := value3_1\n    }\n    function abi_encode_tuple_t_array$_t_bool_$dyn_memory_ptr__to_t_array$_t_bool_$dyn_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        let tail_1 := add(headStart, 32)\n        mstore(headStart, 32)\n        let pos := tail_1\n        let length := mload(value0)\n        mstore(tail_1, length)\n        pos := add(headStart, 64)\n        let srcPtr := add(value0, 32)\n        let i := 0\n        for { } lt(i, length) { i := add(i, 1) }\n        {\n            mstore(pos, iszero(iszero(mload(srcPtr))))\n            pos := add(pos, 32)\n            srcPtr := add(srcPtr, 32)\n        }\n        tail := pos\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_uint8t_bytes32t_bytes32(headStart, dataEnd) -> value0, value1, value2, value3, value4, value5, value6\n    {\n        if slt(sub(dataEnd, headStart), 224) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        let value := 0\n        value := calldataload(add(headStart, 64))\n        value2 := value\n        let value_1 := 0\n        value_1 := calldataload(add(headStart, 96))\n        value3 := value_1\n        let value_2 := calldataload(add(headStart, 128))\n        if iszero(eq(value_2, and(value_2, 0xff))) { revert(0, 0) }\n        value4 := value_2\n        let value_3 := 0\n        value_3 := calldataload(add(headStart, 160))\n        value5 := value_3\n        let value_4 := 0\n        value_4 := calldataload(add(headStart, 192))\n        value6 := value_4\n    }\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function abi_encode_tuple_t_uint64__to_t_uint64__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xffffffffffffffff))\n    }\n    function abi_encode_tuple_t_stringliteral_a504a1fbd4e76ffb6f138f0845a9c693852f9d2da4111969422ff798bbd49298__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 29)\n        mstore(add(headStart, 64), \"Cannot blacklist zero address\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_f788ca005c215621f24c46d9b760e3e23a15baf9bf1a15ac76063a2cdbbdd9f2__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 27)\n        mstore(add(headStart, 64), \"Address already blacklisted\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_461caef3ccd3511790a63bffbea84243153500414f0847913bd8083d6d4c23b3__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 23)\n        mstore(add(headStart, 64), \"Address not blacklisted\")\n        tail := add(headStart, 96)\n    }\n    function panic_error_0x32()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_encode_tuple_t_stringliteral_2e5045ff73280aa8e8acd8c82710f23812497f87f7f576e2220a2ddd0d45eade__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 21)\n        mstore(add(headStart, 64), \"EIP712: Uninitialized\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_582fd48f3876d7686bfeaaaa0db0589073271dedd50d66094f02fee2a3d2e01c__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 22)\n        mstore(add(headStart, 64), \"Arrays length mismatch\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_bytes32_t_address_t_address_t_uint256_t_uint256_t_uint256__to_t_bytes32_t_address_t_address_t_uint256_t_uint256_t_uint256__fromStack_reversed(headStart, value5, value4, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 192)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), and(value1, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 64), and(value2, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 96), value3)\n        mstore(add(headStart, 128), value4)\n        mstore(add(headStart, 160), value5)\n    }\n    function abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), and(value1, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_rational_1_by_1__to_t_uint64__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xffffffffffffffff))\n    }\n    function abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), value2)\n    }\n    function abi_decode_tuple_t_bytes32_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := mload(headStart)\n    }\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_encode_tuple_t_address_t_bytes32__to_t_address_t_bytes32__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_encode_tuple_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__to_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__fromStack_reversed(headStart, value4, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 160)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), value3)\n        mstore(add(headStart, 128), and(value4, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_bytes32_t_uint8_t_bytes32_t_bytes32__to_t_bytes32_t_uint8_t_bytes32_t_bytes32__fromStack_reversed(headStart, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 128)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), and(value1, 0xff))\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), value3)\n    }\n    function panic_error_0x21()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x21)\n        revert(0, 0x24)\n    }\n    function array_dataslot_string_storage(ptr) -> data\n    {\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n    }\n    function clean_up_bytearray_end_slots_string_storage(array, len, startIndex)\n    {\n        if gt(len, 31)\n        {\n            mstore(0, array)\n            let data := keccak256(0, 0x20)\n            let deleteStart := add(data, shr(5, add(startIndex, 31)))\n            if lt(startIndex, 0x20) { deleteStart := data }\n            let _1 := add(data, shr(5, add(len, 31)))\n            let start := deleteStart\n            for { } lt(start, _1) { start := add(start, 1) }\n            { sstore(start, 0) }\n        }\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used\n    {\n        used := or(and(data, not(shr(shl(3, len), not(0)))), shl(1, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src)\n    {\n        let newLen := mload(src)\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n        clean_up_bytearray_end_slots_string_storage(slot, extract_byte_array_length(sload(slot)), newLen)\n        let srcOffset := 0\n        srcOffset := 0x20\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(31))\n            let dstPtr := array_dataslot_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) }\n            {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 0x20)\n            }\n            if lt(loopEnd, newLen)\n            {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, and(lastValue, not(shr(and(shl(3, newLen), 248), not(0)))))\n            }\n            sstore(slot, add(shl(1, newLen), 1))\n        }\n        default {\n            let value := 0\n            if newLen\n            {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n    function abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos, value0) -> end\n    {\n        let length := mload(value0)\n        copy_memory_to_memory_with_cleanup(add(value0, 0x20), pos, length)\n        end := add(pos, length)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        sum := add(x, y)\n        if gt(x, sum)\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x11)\n            revert(0, 0x24)\n        }\n    }\n}","id":33,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{"652":[{"length":32,"start":6318},{"length":32,"start":6359},{"length":32,"start":6685}]},"linkReferences":{},"object":"","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x267 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x7ECEBE00 GT PUSH2 0x144 JUMPI DUP1 PUSH4 0xA9059CBB GT PUSH2 0xB6 JUMPI DUP1 PUSH4 0xD547741F GT PUSH2 0x7A JUMPI DUP1 PUSH4 0xD547741F EQ PUSH2 0x771 JUMPI DUP1 PUSH4 0xD7162657 EQ PUSH2 0x791 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x7B1 JUMPI DUP1 PUSH4 0xE63AB1E9 EQ PUSH2 0x7D1 JUMPI DUP1 PUSH4 0xFE4B84DF EQ PUSH2 0x7F3 JUMPI DUP1 PUSH4 0xFE575A87 EQ PUSH2 0x813 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x6AC JUMPI DUP1 PUSH4 0xAD3CB1CC EQ PUSH2 0x6CC JUMPI DUP1 PUSH4 0xC3085A3E EQ PUSH2 0x6FD JUMPI DUP1 PUSH4 0xD505ACCF EQ PUSH2 0x71D JUMPI DUP1 PUSH4 0xD5391393 EQ PUSH2 0x73D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x91D14854 GT PUSH2 0x108 JUMPI DUP1 PUSH4 0x91D14854 EQ PUSH2 0x5DD JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x5FD JUMPI DUP1 PUSH4 0x9781A37E EQ PUSH2 0x612 JUMPI DUP1 PUSH4 0xA217FDDF EQ PUSH2 0x632 JUMPI DUP1 PUSH4 0xA6ECC5CF EQ PUSH2 0x647 JUMPI DUP1 PUSH4 0xA84173AE EQ PUSH2 0x674 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x7ECEBE00 EQ PUSH2 0x540 JUMPI DUP1 PUSH4 0x80EA3DE1 EQ PUSH2 0x560 JUMPI DUP1 PUSH4 0x8456CB59 EQ PUSH2 0x580 JUMPI DUP1 PUSH4 0x84B0196E EQ PUSH2 0x595 JUMPI DUP1 PUSH4 0x88D695B2 EQ PUSH2 0x5BD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x36568ABE GT PUSH2 0x1DD JUMPI DUP1 PUSH4 0x52D1902D GT PUSH2 0x1A1 JUMPI DUP1 PUSH4 0x52D1902D EQ PUSH2 0x478 JUMPI DUP1 PUSH4 0x537DF3B6 EQ PUSH2 0x48D JUMPI DUP1 PUSH4 0x54FD4D50 EQ PUSH2 0x4AD JUMPI DUP1 PUSH4 0x5C975ABB EQ PUSH2 0x4DB JUMPI DUP1 PUSH4 0x679D665F EQ PUSH2 0x500 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x520 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x36568ABE EQ PUSH2 0x3FB JUMPI DUP1 PUSH4 0x38E454B1 EQ PUSH2 0x41B JUMPI DUP1 PUSH4 0x3F4BA83A EQ PUSH2 0x430 JUMPI DUP1 PUSH4 0x44337EA1 EQ PUSH2 0x445 JUMPI DUP1 PUSH4 0x4F1EF286 EQ PUSH2 0x465 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x18160DDD GT PUSH2 0x22F JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x334 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x368 JUMPI DUP1 PUSH4 0x248A9CA3 EQ PUSH2 0x388 JUMPI DUP1 PUSH4 0x2F2FF15D EQ PUSH2 0x3A8 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x3CA JUMPI DUP1 PUSH4 0x3644E515 EQ PUSH2 0x3E6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x1320FE2 EQ PUSH2 0x26C JUMPI DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x2AC JUMPI DUP1 PUSH4 0x4646A49 EQ PUSH2 0x2DC JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x2F2 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x314 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x278 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x299 PUSH2 0x287 CALLDATASIZE PUSH1 0x4 PUSH2 0x25EB JUMP JUMPDEST PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2B8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2CC PUSH2 0x2C7 CALLDATASIZE PUSH1 0x4 PUSH2 0x2606 JUMP JUMPDEST PUSH2 0x84C JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x2A3 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2E8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x299 PUSH1 0x1 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2FE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x307 PUSH2 0x883 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2A3 SWAP2 SWAP1 PUSH2 0x2680 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x320 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2CC PUSH2 0x32F CALLDATASIZE PUSH1 0x4 PUSH2 0x2693 JUMP JUMPDEST PUSH2 0x92C JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x340 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH32 0x52C63247E1F47DB19D5CE0460030C497F067CA4CEBF71BA98EEADABE20BACE02 SLOAD PUSH2 0x299 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x374 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2CC PUSH2 0x383 CALLDATASIZE PUSH1 0x4 PUSH2 0x26BD JUMP JUMPDEST PUSH2 0x944 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x394 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x299 PUSH2 0x3A3 CALLDATASIZE PUSH1 0x4 PUSH2 0x26FA JUMP JUMPDEST PUSH2 0x96A JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3B4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3C8 PUSH2 0x3C3 CALLDATASIZE PUSH1 0x4 PUSH2 0x2713 JUMP JUMPDEST PUSH2 0x98C JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3D6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x2A3 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3F2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x299 PUSH2 0x9AE JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x407 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3C8 PUSH2 0x416 CALLDATASIZE PUSH1 0x4 PUSH2 0x2713 JUMP JUMPDEST PUSH2 0x9BD JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x427 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3C8 PUSH2 0x9F5 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x43C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3C8 PUSH2 0xAA7 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x451 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3C8 PUSH2 0x460 CALLDATASIZE PUSH1 0x4 PUSH2 0x25EB JUMP JUMPDEST PUSH2 0xACA JUMP JUMPDEST PUSH2 0x3C8 PUSH2 0x473 CALLDATASIZE PUSH1 0x4 PUSH2 0x2755 JUMP JUMPDEST PUSH2 0xBE8 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x484 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x299 PUSH2 0xC07 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x499 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3C8 PUSH2 0x4A8 CALLDATASIZE PUSH1 0x4 PUSH2 0x25EB JUMP JUMPDEST PUSH2 0xC24 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4B9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x5 DUP2 MSTORE PUSH5 0x332E302E3 PUSH1 0xDC SHL PUSH1 0x20 DUP3 ADD MSTORE PUSH2 0x307 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4E7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2CF3 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SLOAD PUSH1 0xFF AND PUSH2 0x2CC JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x50C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3C8 PUSH2 0x51B CALLDATASIZE PUSH1 0x4 PUSH2 0x2867 JUMP JUMPDEST PUSH2 0xCE3 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x52C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x299 PUSH2 0x53B CALLDATASIZE PUSH1 0x4 PUSH2 0x25EB JUMP JUMPDEST PUSH2 0xDAF JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x54C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x299 PUSH2 0x55B CALLDATASIZE PUSH1 0x4 PUSH2 0x25EB JUMP JUMPDEST PUSH2 0xDE2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x56C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3C8 PUSH2 0x57B CALLDATASIZE PUSH1 0x4 PUSH2 0x26FA JUMP JUMPDEST PUSH2 0xDED JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x58C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3C8 PUSH2 0xE3E JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5A1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x5AA PUSH2 0xE5E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2A3 SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x28A8 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5C9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3C8 PUSH2 0x5D8 CALLDATASIZE PUSH1 0x4 PUSH2 0x2940 JUMP JUMPDEST PUSH2 0xF0A JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5E9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2CC PUSH2 0x5F8 CALLDATASIZE PUSH1 0x4 PUSH2 0x2713 JUMP JUMPDEST PUSH2 0xFB5 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x609 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x307 PUSH2 0xFED JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x61E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3C8 PUSH2 0x62D CALLDATASIZE PUSH1 0x4 PUSH2 0x2693 JUMP JUMPDEST PUSH2 0x102C JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x63E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x299 PUSH1 0x0 DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x653 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x667 PUSH2 0x662 CALLDATASIZE PUSH1 0x4 PUSH2 0x2867 JUMP JUMPDEST PUSH2 0x1091 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2A3 SWAP2 SWAP1 PUSH2 0x29AF JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x680 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x0 SLOAD PUSH2 0x694 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x2A3 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x6B8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2CC PUSH2 0x6C7 CALLDATASIZE PUSH1 0x4 PUSH2 0x2693 JUMP JUMPDEST PUSH2 0x1160 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x6D8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x307 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x5 DUP2 MSTORE PUSH1 0x20 ADD PUSH5 0x352E302E3 PUSH1 0xDC SHL DUP2 MSTORE POP DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x709 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3C8 PUSH2 0x718 CALLDATASIZE PUSH1 0x4 PUSH2 0x25EB JUMP JUMPDEST PUSH2 0x116E JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x729 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3C8 PUSH2 0x738 CALLDATASIZE PUSH1 0x4 PUSH2 0x29F4 JUMP JUMPDEST PUSH2 0x11CA JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x749 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x299 PUSH32 0x9F2DF0FED2C77648DE5860A4CC508CD0818C85B8B8A1AB4CEEEF8D981C8956A6 DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x77D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3C8 PUSH2 0x78C CALLDATASIZE PUSH1 0x4 PUSH2 0x2713 JUMP JUMPDEST PUSH2 0x1323 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x79D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3C8 PUSH2 0x7AC CALLDATASIZE PUSH1 0x4 PUSH2 0x2867 JUMP JUMPDEST PUSH2 0x133F JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x7BD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x299 PUSH2 0x7CC CALLDATASIZE PUSH1 0x4 PUSH2 0x2A67 JUMP JUMPDEST PUSH2 0x13F4 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x7DD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x299 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2CB3 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x7FF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3C8 PUSH2 0x80E CALLDATASIZE PUSH1 0x4 PUSH2 0x26FA JUMP JUMPDEST PUSH2 0x143E JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x81F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2CC PUSH2 0x82E CALLDATASIZE PUSH1 0x4 PUSH2 0x25EB JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x7965DB0B PUSH1 0xE0 SHL EQ DUP1 PUSH2 0x87D JUMPI POP PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP4 AND EQ JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2C53 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE JUMPDEST SWAP1 POP DUP1 PUSH1 0x3 ADD DUP1 SLOAD PUSH2 0x8A8 SWAP1 PUSH2 0x2A91 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x8D4 SWAP1 PUSH2 0x2A91 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x921 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x8F6 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x921 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x904 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x93A DUP2 DUP6 DUP6 PUSH2 0x1618 JUMP JUMPDEST POP PUSH1 0x1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x952 DUP6 DUP3 DUP6 PUSH2 0x1625 JUMP JUMPDEST PUSH2 0x95D DUP6 DUP6 DUP6 PUSH2 0x1686 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2CD3 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x995 DUP3 PUSH2 0x96A JUMP JUMPDEST PUSH2 0x99E DUP2 PUSH2 0x16E5 JUMP JUMPDEST PUSH2 0x9A8 DUP4 DUP4 PUSH2 0x16EF JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x9B8 PUSH2 0x1794 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND CALLER EQ PUSH2 0x9E6 JUMPI PUSH1 0x40 MLOAD PUSH4 0x334BD919 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x9F0 DUP3 DUP3 PUSH2 0x179E JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x3 PUSH1 0x0 PUSH2 0xA01 PUSH2 0x181A JUMP JUMPDEST DUP1 SLOAD SWAP1 SWAP2 POP PUSH1 0x1 PUSH1 0x40 SHL SWAP1 DIV PUSH1 0xFF AND DUP1 PUSH2 0xA28 JUMPI POP DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP5 AND SWAP2 AND LT ISZERO JUMPDEST ISZERO PUSH2 0xA46 JUMPI PUSH1 0x40 MLOAD PUSH4 0xF92EE8A9 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SLOAD PUSH9 0xFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP4 AND SWAP1 DUP2 OR PUSH1 0x1 PUSH1 0x40 SHL OR PUSH1 0xFF PUSH1 0x40 SHL NOT AND DUP3 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH32 0xC7F505B2F371AE2175EE4913F4499E1F2633A7B5936321EED1CDAEB6115181D2 SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2CB3 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH2 0xABF DUP2 PUSH2 0x16E5 JUMP JUMPDEST PUSH2 0xAC7 PUSH2 0x1843 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xAD5 DUP2 PUSH2 0x16E5 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xB30 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x43616E6E6F7420626C61636B6C697374207A65726F2061646472657373000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0xB99 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4164647265737320616C726561647920626C61636B6C69737465640000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xB27 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE MLOAD CALLER SWAP3 SWAP2 PUSH32 0x4A740BEBDA0BDE2BAF1735E1B1FA93BABE7A2BB77ECADE7BF5E222D541C076CD SWAP2 LOG3 POP POP JUMP JUMPDEST PUSH2 0xBF0 PUSH2 0x18A3 JUMP JUMPDEST PUSH2 0xBF9 DUP3 PUSH2 0x194A JUMP JUMPDEST PUSH2 0xC03 DUP3 DUP3 PUSH2 0x1955 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC11 PUSH2 0x1A12 JUMP JUMPDEST POP PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2C93 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC2F DUP2 PUSH2 0x16E5 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0xC97 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x41646472657373206E6F7420626C61636B6C6973746564000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xB27 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE MLOAD CALLER SWAP3 SWAP2 PUSH32 0xC5D633221A999DA7B50BAD97DDD6CFF0C917455D8651123A6433642833252B7C SWAP2 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xCEE DUP2 PUSH2 0x16E5 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x9A8 JUMPI PUSH1 0x0 DUP5 DUP5 DUP4 DUP2 DUP2 LT PUSH2 0xD0D JUMPI PUSH2 0xD0D PUSH2 0x2ACB JUMP JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0xD22 SWAP2 SWAP1 PUSH2 0x25EB JUMP JUMPDEST SWAP1 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND ISZERO DUP1 ISZERO SWAP1 PUSH2 0xD55 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO JUMPDEST ISZERO PUSH2 0xDA6 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE MLOAD CALLER SWAP3 SWAP2 PUSH32 0x4A740BEBDA0BDE2BAF1735E1B1FA93BABE7A2BB77ECADE7BF5E222D541C076CD SWAP2 LOG3 JUMPDEST POP PUSH1 0x1 ADD PUSH2 0xCF1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2C53 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 SWAP4 SWAP1 SWAP4 MSTORE POP POP PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x87D DUP3 PUSH2 0x1A5B JUMP JUMPDEST PUSH1 0x0 PUSH2 0xDF8 DUP2 PUSH2 0x16E5 JUMP JUMPDEST PUSH1 0x1 DUP1 SLOAD SWAP1 DUP4 SWAP1 SSTORE PUSH1 0x40 DUP1 MLOAD DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP6 SWAP1 MSTORE PUSH32 0x98EAABFE135A9C40C420208962BF81E7926B4D6DF3E23502164C0554B7B35224 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2CB3 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH2 0xE56 DUP2 PUSH2 0x16E5 JUMP JUMPDEST PUSH2 0xAC7 PUSH2 0x1A84 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP1 DUP3 DUP1 DUP1 DUP4 DUP2 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2C73 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP1 SLOAD SWAP1 SWAP2 POP ISZERO DUP1 ISZERO PUSH2 0xE8B JUMPI POP PUSH1 0x1 DUP2 ADD SLOAD ISZERO JUMPDEST PUSH2 0xECF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x1152540DCC4C8E88155B9A5B9A5D1A585B1A5E9959 PUSH1 0x5A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xB27 JUMP JUMPDEST PUSH2 0xED7 PUSH2 0x1ACD JUMP JUMPDEST PUSH2 0xEDF PUSH2 0x1B0C JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x0 DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 SWAP3 MSTORE PUSH1 0xF PUSH1 0xF8 SHL SWAP13 SWAP4 SWAP12 POP SWAP2 SWAP10 POP CHAINID SWAP9 POP ADDRESS SWAP8 POP SWAP6 POP SWAP4 POP SWAP2 POP POP JUMP JUMPDEST DUP3 DUP2 EQ PUSH2 0xF52 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x82E4E4C2F2E640D8CADCCEE8D040DAD2E6DAC2E8C6D PUSH1 0x53 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xB27 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xFAE JUMPI PUSH2 0xFA6 CALLER DUP7 DUP7 DUP5 DUP2 DUP2 LT PUSH2 0xF73 JUMPI PUSH2 0xF73 PUSH2 0x2ACB JUMP JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0xF88 SWAP2 SWAP1 PUSH2 0x25EB JUMP JUMPDEST DUP6 DUP6 DUP6 DUP2 DUP2 LT PUSH2 0xF9A JUMPI PUSH2 0xF9A PUSH2 0x2ACB JUMP JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD CALLDATALOAD PUSH2 0x1686 JUMP JUMPDEST PUSH1 0x1 ADD PUSH2 0xF55 JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2CD3 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 SWAP1 SWAP4 AND DUP5 MSTORE SWAP2 SWAP1 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH32 0x52C63247E1F47DB19D5CE0460030C497F067CA4CEBF71BA98EEADABE20BACE04 DUP1 SLOAD PUSH1 0x60 SWAP2 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2C53 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP2 PUSH2 0x8A8 SWAP1 PUSH2 0x2A91 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1037 DUP2 PUSH2 0x16E5 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 DUP2 SWAP1 KECCAK256 DUP5 SWAP1 SSTORE MLOAD PUSH32 0xA162F0703CBC0C48EA2C9E9BED5743AABC058E7532E594490E3A35BFB0F75AB8 SWAP1 PUSH2 0x1084 SWAP1 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x10AB JUMPI PUSH2 0x10AB PUSH2 0x273F JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x10D4 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x1159 JUMPI PUSH1 0x3 PUSH1 0x0 DUP6 DUP6 DUP5 DUP2 DUP2 LT PUSH2 0x10F8 JUMPI PUSH2 0x10F8 PUSH2 0x2ACB JUMP JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x110D SWAP2 SWAP1 PUSH2 0x25EB JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 ADD PUSH1 0x0 KECCAK256 SLOAD DUP3 MLOAD PUSH1 0xFF SWAP1 SWAP2 AND SWAP1 DUP4 SWAP1 DUP4 SWAP1 DUP2 LT PUSH2 0x1141 JUMPI PUSH2 0x1141 PUSH2 0x2ACB JUMP JUMPDEST SWAP2 ISZERO ISZERO PUSH1 0x20 SWAP3 DUP4 MUL SWAP2 SWAP1 SWAP2 ADD SWAP1 SWAP2 ADD MSTORE PUSH1 0x1 ADD PUSH2 0x10DA JUMP JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x93A DUP2 DUP6 DUP6 PUSH2 0x1686 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1179 DUP2 PUSH2 0x16E5 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0xDAAF87D9985C65A1BFBD019043294923AE1B048BA8B4616E3ACB32741D268DA1 SWAP2 SWAP1 LOG3 POP POP POP JUMP JUMPDEST DUP4 TIMESTAMP GT ISZERO PUSH2 0x11EE JUMPI PUSH1 0x40 MLOAD PUSH4 0x313C8981 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP6 SWAP1 MSTORE PUSH1 0x24 ADD PUSH2 0xB27 JUMP JUMPDEST PUSH1 0x0 PUSH32 0x6E71EDAE12B1B97F4D1F60370FEF10105FA2FAAE0126114A169C64845D6126C9 DUP9 DUP9 DUP9 PUSH2 0x125A DUP13 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH32 0x5AB42CED628888259C08AC98DB1EB0CF702FC1501344311D8B100CD1BFE4BB00 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP2 ADD SWAP1 SWAP2 SSTORE SWAP1 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP2 ADD SWAP7 SWAP1 SWAP7 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP5 DUP6 AND SWAP1 DUP7 ADD MSTORE SWAP3 SWAP1 SWAP2 AND PUSH1 0x60 DUP5 ADD MSTORE PUSH1 0x80 DUP4 ADD MSTORE PUSH1 0xA0 DUP3 ADD MSTORE PUSH1 0xC0 DUP2 ADD DUP7 SWAP1 MSTORE PUSH1 0xE0 ADD PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP PUSH1 0x0 PUSH2 0x12B5 DUP3 PUSH2 0x1B24 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x12C5 DUP3 DUP8 DUP8 DUP8 PUSH2 0x1B51 JUMP JUMPDEST SWAP1 POP DUP10 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x130C JUMPI PUSH1 0x40 MLOAD PUSH4 0x25C00723 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP4 AND PUSH1 0x4 DUP4 ADD MSTORE DUP12 AND PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 ADD PUSH2 0xB27 JUMP JUMPDEST PUSH2 0x1317 DUP11 DUP11 DUP11 PUSH2 0x1618 JUMP JUMPDEST POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x132C DUP3 PUSH2 0x96A JUMP JUMPDEST PUSH2 0x1335 DUP2 PUSH2 0x16E5 JUMP JUMPDEST PUSH2 0x9A8 DUP4 DUP4 PUSH2 0x179E JUMP JUMPDEST PUSH1 0x0 PUSH2 0x134A DUP2 PUSH2 0x16E5 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x9A8 JUMPI PUSH1 0x0 DUP5 DUP5 DUP4 DUP2 DUP2 LT PUSH2 0x1369 JUMPI PUSH2 0x1369 PUSH2 0x2ACB JUMP JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x137E SWAP2 SWAP1 PUSH2 0x25EB JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 SWAP2 POP PUSH1 0xFF AND ISZERO PUSH2 0x13EB JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE MLOAD CALLER SWAP3 SWAP2 PUSH32 0xC5D633221A999DA7B50BAD97DDD6CFF0C917455D8651123A6433642833252B7C SWAP2 LOG3 JUMPDEST POP PUSH1 0x1 ADD PUSH2 0x134D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH32 0x52C63247E1F47DB19D5CE0460030C497F067CA4CEBF71BA98EEADABE20BACE01 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1448 PUSH2 0x181A JUMP JUMPDEST DUP1 SLOAD SWAP1 SWAP2 POP PUSH1 0xFF PUSH1 0x1 PUSH1 0x40 SHL DUP3 DIV AND ISZERO SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND PUSH1 0x0 DUP2 ISZERO DUP1 ISZERO PUSH2 0x146F JUMPI POP DUP3 JUMPDEST SWAP1 POP PUSH1 0x0 DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND PUSH1 0x1 EQ DUP1 ISZERO PUSH2 0x148B JUMPI POP ADDRESS EXTCODESIZE ISZERO JUMPDEST SWAP1 POP DUP2 ISZERO DUP1 ISZERO PUSH2 0x1499 JUMPI POP DUP1 ISZERO JUMPDEST ISZERO PUSH2 0x14B7 JUMPI PUSH1 0x40 MLOAD PUSH4 0xF92EE8A9 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP5 SLOAD PUSH8 0xFFFFFFFFFFFFFFFF NOT AND PUSH1 0x1 OR DUP6 SSTORE DUP4 ISZERO PUSH2 0x14E1 JUMPI DUP5 SLOAD PUSH1 0xFF PUSH1 0x40 SHL NOT AND PUSH1 0x1 PUSH1 0x40 SHL OR DUP6 SSTORE JUMPDEST PUSH2 0x1527 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x9 DUP2 MSTORE PUSH1 0x20 ADD PUSH9 0x2820A2102A37B5B2B7 PUSH1 0xB9 SHL DUP2 MSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x3 DUP2 MSTORE PUSH1 0x20 ADD PUSH3 0x141051 PUSH1 0xEA SHL DUP2 MSTORE POP PUSH2 0x1B7F JUMP JUMPDEST PUSH2 0x1551 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x9 DUP2 MSTORE PUSH1 0x20 ADD PUSH9 0x2820A2102A37B5B2B7 PUSH1 0xB9 SHL DUP2 MSTORE POP PUSH2 0x1B91 JUMP JUMPDEST PUSH2 0x1559 PUSH2 0x1BBC JUMP JUMPDEST PUSH2 0x1561 PUSH2 0x1BBC JUMP JUMPDEST PUSH2 0x1569 PUSH2 0x1BBC JUMP JUMPDEST PUSH2 0x1574 PUSH1 0x0 CALLER PUSH2 0x16EF JUMP JUMPDEST POP PUSH2 0x158D PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2CB3 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE CALLER PUSH2 0x16EF JUMP JUMPDEST POP PUSH2 0x15B8 PUSH32 0x9F2DF0FED2C77648DE5860A4CC508CD0818C85B8B8A1AB4CEEEF8D981C8956A6 CALLER PUSH2 0x16EF JUMP JUMPDEST POP PUSH2 0x15C3 CALLER DUP8 PUSH2 0x1BC4 JUMP JUMPDEST PUSH3 0x15180 PUSH1 0x1 SSTORE DUP4 ISZERO PUSH2 0x1610 JUMPI DUP5 SLOAD PUSH1 0xFF PUSH1 0x40 SHL NOT AND DUP6 SSTORE PUSH1 0x40 MLOAD PUSH1 0x1 DUP2 MSTORE PUSH32 0xC7F505B2F371AE2175EE4913F4499E1F2633A7B5936321EED1CDAEB6115181D2 SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x9F0 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x1BFA JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1631 DUP5 DUP5 PUSH2 0x13F4 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 NOT DUP2 LT ISZERO PUSH2 0x9A8 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x1677 JUMPI PUSH1 0x40 MLOAD PUSH4 0x7DC7A0D9 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x44 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x64 ADD PUSH2 0xB27 JUMP JUMPDEST PUSH2 0x9A8 DUP5 DUP5 DUP5 DUP5 SUB PUSH1 0x0 PUSH2 0x1BFA JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x16B0 JUMPI PUSH1 0x40 MLOAD PUSH4 0x4B637E8F PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0xB27 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x16DA JUMPI PUSH1 0x40 MLOAD PUSH4 0xEC442F05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0xB27 JUMP JUMPDEST PUSH2 0x9F0 DUP4 DUP4 DUP4 PUSH2 0x1CE1 JUMP JUMPDEST PUSH2 0xAC7 DUP2 CALLER PUSH2 0x1DFB JUMP JUMPDEST PUSH1 0x0 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2CD3 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH2 0x170A DUP5 DUP5 PUSH2 0xFB5 JUMP JUMPDEST PUSH2 0x178A JUMPI PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 DUP3 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH2 0x1740 CALLER SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH1 0x1 SWAP2 POP POP PUSH2 0x87D JUMP JUMPDEST PUSH1 0x0 SWAP2 POP POP PUSH2 0x87D JUMP JUMPDEST PUSH1 0x0 PUSH2 0x9B8 PUSH2 0x1E34 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2CD3 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH2 0x17B9 DUP5 DUP5 PUSH2 0xFB5 JUMP JUMPDEST ISZERO PUSH2 0x178A JUMPI PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 DUP3 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND DUP1 DUP6 MSTORE SWAP3 MSTORE DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE MLOAD CALLER SWAP3 DUP8 SWAP2 PUSH32 0xF6391F5C32D9C69D2A47EA670B442974B53935D1EDC7FD64EB21E047A839171B SWAP2 SWAP1 LOG4 PUSH1 0x1 SWAP2 POP POP PUSH2 0x87D JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH32 0xF0C57E16840DF040F15088DC2F81FE391C3923BEC73E23A9662EFC9C229C6A00 PUSH2 0x87D JUMP JUMPDEST PUSH2 0x184B PUSH2 0x1EA8 JUMP JUMPDEST PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2CF3 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP1 SLOAD PUSH1 0xFF NOT AND DUP2 SSTORE PUSH32 0x5DB9EE0A495BF2E6FF9C91A7834C1BA4FDD244A5E8AA4E537BD38AEAE4B073AA CALLER JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST ADDRESS PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND EQ DUP1 PUSH2 0x192A JUMPI POP PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x191E PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2C93 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO JUMPDEST ISZERO PUSH2 0x1948 JUMPI PUSH1 0x40 MLOAD PUSH4 0x703E46DD PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC03 DUP2 PUSH2 0x16E5 JUMP JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x52D1902D PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x19AF JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0x19AC SWAP2 DUP2 ADD SWAP1 PUSH2 0x2AE1 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x19D7 JUMPI PUSH1 0x40 MLOAD PUSH4 0x4C9C8CE3 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0xB27 JUMP JUMPDEST PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2C93 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP2 EQ PUSH2 0x1A08 JUMPI PUSH1 0x40 MLOAD PUSH4 0x2A875269 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x24 ADD PUSH2 0xB27 JUMP JUMPDEST PUSH2 0x9F0 DUP4 DUP4 PUSH2 0x1ED8 JUMP JUMPDEST ADDRESS PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND EQ PUSH2 0x1948 JUMPI PUSH1 0x40 MLOAD PUSH4 0x703E46DD PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH32 0x5AB42CED628888259C08AC98DB1EB0CF702FC1501344311D8B100CD1BFE4BB00 PUSH2 0xDC2 JUMP JUMPDEST PUSH2 0x1A8C PUSH2 0x1F2E JUMP JUMPDEST PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2CF3 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR DUP2 SSTORE PUSH32 0x62E78CEA01BEE320CD4E420270B5EA74000D11B0C9F74754EBDBFC544B05A258 CALLER PUSH2 0x1885 JUMP JUMPDEST PUSH32 0xA16A46D94261C7517CC8FF89F61C0CE93598E3C849801011DEE649A6A557D102 DUP1 SLOAD PUSH1 0x60 SWAP2 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2C73 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP2 PUSH2 0x8A8 SWAP1 PUSH2 0x2A91 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2C73 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH2 0x897 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x87D PUSH2 0x1B31 PUSH2 0x1794 JUMP JUMPDEST DUP4 PUSH1 0x40 MLOAD PUSH2 0x1901 PUSH1 0xF0 SHL DUP2 MSTORE PUSH1 0x2 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x22 DUP3 ADD MSTORE PUSH1 0x42 SWAP1 KECCAK256 SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH2 0x1B63 DUP9 DUP9 DUP9 DUP9 PUSH2 0x1F5F JUMP JUMPDEST SWAP3 POP SWAP3 POP SWAP3 POP PUSH2 0x1B73 DUP3 DUP3 PUSH2 0x202E JUMP JUMPDEST POP SWAP1 SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x1B87 PUSH2 0x20E7 JUMP JUMPDEST PUSH2 0xC03 DUP3 DUP3 PUSH2 0x210C JUMP JUMPDEST PUSH2 0x1B99 PUSH2 0x20E7 JUMP JUMPDEST PUSH2 0xAC7 DUP2 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x31 PUSH1 0xF8 SHL DUP2 MSTORE POP PUSH2 0x215D JUMP JUMPDEST PUSH2 0x1948 PUSH2 0x20E7 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x1BEE JUMPI PUSH1 0x40 MLOAD PUSH4 0xEC442F05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0xB27 JUMP JUMPDEST PUSH2 0xC03 PUSH1 0x0 DUP4 DUP4 PUSH2 0x1CE1 JUMP JUMPDEST PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2C53 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH2 0x1C33 JUMPI PUSH1 0x40 MLOAD PUSH4 0xE602DF05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0xB27 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x1C5D JUMPI PUSH1 0x40 MLOAD PUSH4 0x4A1406B1 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0xB27 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP7 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 DUP4 ADD PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP9 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 DUP4 SWAP1 SSTORE DUP2 ISZERO PUSH2 0xFAE JUMPI DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP6 PUSH1 0x40 MLOAD PUSH2 0x1CD2 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP4 SWAP1 PUSH1 0xFF AND ISZERO PUSH2 0x1D28 JUMPI PUSH1 0x40 MLOAD PUSH4 0xE2A0FE63 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0xB27 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP4 SWAP1 PUSH1 0xFF AND ISZERO PUSH2 0x1D6F JUMPI PUSH1 0x40 MLOAD PUSH4 0xE2A0FE63 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0xB27 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND ISZERO DUP1 ISZERO SWAP1 PUSH2 0x1D8F JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND ISZERO ISZERO JUMPDEST ISZERO PUSH2 0x1DF0 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD TIMESTAMP LT ISZERO PUSH2 0x1DF0 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 DUP2 SWAP1 KECCAK256 SLOAD SWAP1 MLOAD PUSH4 0xDAC64F9 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 ADD PUSH2 0xB27 JUMP JUMPDEST PUSH2 0xFAE DUP6 DUP6 DUP6 PUSH2 0x21BE JUMP JUMPDEST PUSH2 0x1E05 DUP3 DUP3 PUSH2 0xFB5 JUMP JUMPDEST PUSH2 0xC03 JUMPI PUSH1 0x40 MLOAD PUSH4 0xE2517D3F PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x44 ADD PUSH2 0xB27 JUMP JUMPDEST PUSH1 0x0 PUSH32 0x8B73C3C69BB8FE3D512ECC4CF759CC79239F7B179B0FFACAA9A75D522B39400F PUSH2 0x1E5F PUSH2 0x224A JUMP JUMPDEST PUSH2 0x1E67 PUSH2 0x22B4 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP2 ADD SWAP5 SWAP1 SWAP5 MSTORE DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x60 DUP3 ADD MSTORE CHAINID PUSH1 0x80 DUP3 ADD MSTORE ADDRESS PUSH1 0xA0 DUP3 ADD MSTORE PUSH1 0xC0 ADD PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2CF3 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SLOAD PUSH1 0xFF AND PUSH2 0x1948 JUMPI PUSH1 0x40 MLOAD PUSH4 0x8DFC202B PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1EE1 DUP3 PUSH2 0x22F8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 PUSH32 0xBC7CD75A20EE27FD9ADEBAB32041F755214DBC6BFFA90CC0225B39DA2E5C2D3B SWAP1 PUSH1 0x0 SWAP1 LOG2 DUP1 MLOAD ISZERO PUSH2 0x1F26 JUMPI PUSH2 0x9F0 DUP3 DUP3 PUSH2 0x235D JUMP JUMPDEST PUSH2 0xC03 PUSH2 0x23D3 JUMP JUMPDEST PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2CF3 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x1948 JUMPI PUSH1 0x40 MLOAD PUSH4 0xD93C0665 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP1 PUSH32 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0 DUP5 GT ISZERO PUSH2 0x1F9A JUMPI POP PUSH1 0x0 SWAP2 POP PUSH1 0x3 SWAP1 POP DUP3 PUSH2 0x2024 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x0 DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD DUP1 DUP5 MSTORE DUP11 SWAP1 MSTORE PUSH1 0xFF DUP10 AND SWAP3 DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x60 DUP2 ADD DUP8 SWAP1 MSTORE PUSH1 0x80 DUP2 ADD DUP7 SWAP1 MSTORE PUSH1 0x1 SWAP1 PUSH1 0xA0 ADD PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 SUB SWAP1 DUP1 DUP5 SUB SWAP1 DUP6 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1FEE JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x40 MLOAD PUSH1 0x1F NOT ADD MLOAD SWAP2 POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x201A JUMPI POP PUSH1 0x0 SWAP3 POP PUSH1 0x1 SWAP2 POP DUP3 SWAP1 POP PUSH2 0x2024 JUMP JUMPDEST SWAP3 POP PUSH1 0x0 SWAP2 POP DUP2 SWAP1 POP JUMPDEST SWAP5 POP SWAP5 POP SWAP5 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x2042 JUMPI PUSH2 0x2042 PUSH2 0x2AFA JUMP JUMPDEST SUB PUSH2 0x204B JUMPI POP POP JUMP JUMPDEST PUSH1 0x1 DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x205F JUMPI PUSH2 0x205F PUSH2 0x2AFA JUMP JUMPDEST SUB PUSH2 0x207D JUMPI PUSH1 0x40 MLOAD PUSH4 0xF645EEDF PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x2091 JUMPI PUSH2 0x2091 PUSH2 0x2AFA JUMP JUMPDEST SUB PUSH2 0x20B2 JUMPI PUSH1 0x40 MLOAD PUSH4 0xFCE698F7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x24 ADD PUSH2 0xB27 JUMP JUMPDEST PUSH1 0x3 DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x20C6 JUMPI PUSH2 0x20C6 PUSH2 0x2AFA JUMP JUMPDEST SUB PUSH2 0xC03 JUMPI PUSH1 0x40 MLOAD PUSH4 0x35E2F383 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x24 ADD PUSH2 0xB27 JUMP JUMPDEST PUSH2 0x20EF PUSH2 0x23F2 JUMP JUMPDEST PUSH2 0x1948 JUMPI PUSH1 0x40 MLOAD PUSH4 0x1AFCD79F PUSH1 0xE3 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x2114 PUSH2 0x20E7 JUMP JUMPDEST PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2C53 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH32 0x52C63247E1F47DB19D5CE0460030C497F067CA4CEBF71BA98EEADABE20BACE03 PUSH2 0x214E DUP5 DUP3 PUSH2 0x2B57 JUMP JUMPDEST POP PUSH1 0x4 DUP2 ADD PUSH2 0x9A8 DUP4 DUP3 PUSH2 0x2B57 JUMP JUMPDEST PUSH2 0x2165 PUSH2 0x20E7 JUMP JUMPDEST PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2C73 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH32 0xA16A46D94261C7517CC8FF89F61C0CE93598E3C849801011DEE649A6A557D102 PUSH2 0x219F DUP5 DUP3 PUSH2 0x2B57 JUMP JUMPDEST POP PUSH1 0x3 DUP2 ADD PUSH2 0x21AE DUP4 DUP3 PUSH2 0x2B57 JUMP JUMPDEST POP PUSH1 0x0 DUP1 DUP3 SSTORE PUSH1 0x1 SWAP1 SWAP2 ADD SSTORE POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND ISZERO DUP1 ISZERO SWAP1 PUSH2 0x21DE JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND ISZERO ISZERO JUMPDEST ISZERO PUSH2 0x223F JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD TIMESTAMP LT ISZERO PUSH2 0x223F JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 DUP2 SWAP1 KECCAK256 SLOAD SWAP1 MLOAD PUSH4 0xDAC64F9 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 ADD PUSH2 0xB27 JUMP JUMPDEST PUSH2 0x9F0 DUP4 DUP4 DUP4 PUSH2 0x240C JUMP JUMPDEST PUSH1 0x0 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2C73 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP2 PUSH2 0x2264 PUSH2 0x1ACD JUMP JUMPDEST DUP1 MLOAD SWAP1 SWAP2 POP ISZERO PUSH2 0x227C JUMPI DUP1 MLOAD PUSH1 0x20 SWAP1 SWAP2 ADD KECCAK256 SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP2 SLOAD DUP1 ISZERO PUSH2 0x228B JUMPI SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0xC5D2460186F7233C927E7DB2DCC703C0E500B653CA82273B7BFAD8045D85A470 SWAP4 POP POP POP POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2C73 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP2 PUSH2 0x22CE PUSH2 0x1B0C JUMP JUMPDEST DUP1 MLOAD SWAP1 SWAP2 POP ISZERO PUSH2 0x22E6 JUMPI DUP1 MLOAD PUSH1 0x20 SWAP1 SWAP2 ADD KECCAK256 SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 DUP3 ADD SLOAD DUP1 ISZERO PUSH2 0x228B JUMPI SWAP4 SWAP3 POP POP POP JUMP JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EXTCODESIZE PUSH1 0x0 SUB PUSH2 0x232E JUMPI PUSH1 0x40 MLOAD PUSH4 0x4C9C8CE3 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0xB27 JUMP JUMPDEST PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2C93 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP1 DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x40 MLOAD PUSH2 0x237A SWAP2 SWAP1 PUSH2 0x2C15 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 GAS DELEGATECALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x23B5 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x23BA JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0x23CA DUP6 DUP4 DUP4 PUSH2 0x254A JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST CALLVALUE ISZERO PUSH2 0x1948 JUMPI PUSH1 0x40 MLOAD PUSH4 0xB398979F PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x23FC PUSH2 0x181A JUMP JUMPDEST SLOAD PUSH1 0x1 PUSH1 0x40 SHL SWAP1 DIV PUSH1 0xFF AND SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2C53 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x2448 JUMPI DUP2 DUP2 PUSH1 0x2 ADD PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x243D SWAP2 SWAP1 PUSH2 0x2C31 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH2 0x24BA SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP3 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP3 DUP2 LT ISZERO PUSH2 0x249B JUMPI PUSH1 0x40 MLOAD PUSH4 0x391434E3 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x44 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x64 ADD PUSH2 0xB27 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP4 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SWAP1 DUP4 SWAP1 SUB SWAP1 SSTORE JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x24D8 JUMPI PUSH1 0x2 DUP2 ADD DUP1 SLOAD DUP4 SWAP1 SUB SWAP1 SSTORE PUSH2 0x24F7 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP3 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD DUP4 ADD SWAP1 SSTORE JUMPDEST DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 PUSH1 0x40 MLOAD PUSH2 0x253C SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP3 PUSH2 0x255F JUMPI PUSH2 0x255A DUP3 PUSH2 0x25A6 JUMP JUMPDEST PUSH2 0x963 JUMP JUMPDEST DUP2 MLOAD ISZERO DUP1 ISZERO PUSH2 0x2576 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND EXTCODESIZE ISZERO JUMPDEST ISZERO PUSH2 0x259F JUMPI PUSH1 0x40 MLOAD PUSH4 0x9996B315 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0xB27 JUMP JUMPDEST POP DUP1 PUSH2 0x963 JUMP JUMPDEST DUP1 MLOAD ISZERO PUSH2 0x25B6 JUMPI DUP1 MLOAD DUP1 DUP3 PUSH1 0x20 ADD REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xD6BDA275 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x25E6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x25FD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x963 DUP3 PUSH2 0x25CF JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2618 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND DUP2 EQ PUSH2 0x963 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x264B JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x2633 JUMP JUMPDEST POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH2 0x266C DUP2 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP7 ADD PUSH2 0x2630 JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x20 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0x963 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x2654 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x26A6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x26AF DUP4 PUSH2 0x25CF JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x26D2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x26DB DUP5 PUSH2 0x25CF JUMP JUMPDEST SWAP3 POP PUSH2 0x26E9 PUSH1 0x20 DUP6 ADD PUSH2 0x25CF JUMP JUMPDEST SWAP3 SWAP6 SWAP3 SWAP5 POP POP POP PUSH1 0x40 SWAP2 SWAP1 SWAP2 ADD CALLDATALOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x270C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2726 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD SWAP2 POP PUSH2 0x2736 PUSH1 0x20 DUP5 ADD PUSH2 0x25CF JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2768 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2771 DUP4 PUSH2 0x25CF JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x278C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 ADD PUSH1 0x1F DUP2 ADD DUP6 SGT PUSH2 0x279D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x27B6 JUMPI PUSH2 0x27B6 PUSH2 0x273F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0x27E4 JUMPI PUSH2 0x27E4 PUSH2 0x273F JUMP JUMPDEST PUSH1 0x40 MSTORE DUP2 DUP2 MSTORE DUP3 DUP3 ADD PUSH1 0x20 ADD DUP8 LT ISZERO PUSH2 0x27FC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 PUSH1 0x20 DUP5 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 PUSH1 0x20 DUP4 DUP4 ADD ADD MSTORE DUP1 SWAP4 POP POP POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0x282E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x2845 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x20 DUP3 PUSH1 0x5 SHL DUP6 ADD ADD GT ISZERO PUSH2 0x2860 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x20 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x287A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x2890 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x289C DUP6 DUP3 DUP7 ADD PUSH2 0x281C JUMP JUMPDEST SWAP1 SWAP7 SWAP1 SWAP6 POP SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0xFF PUSH1 0xF8 SHL DUP9 AND DUP2 MSTORE PUSH1 0xE0 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x0 PUSH2 0x28C7 PUSH1 0xE0 DUP4 ADD DUP10 PUSH2 0x2654 JUMP JUMPDEST DUP3 DUP2 SUB PUSH1 0x40 DUP5 ADD MSTORE PUSH2 0x28D9 DUP2 DUP10 PUSH2 0x2654 JUMP JUMPDEST PUSH1 0x60 DUP5 ADD DUP9 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND PUSH1 0x80 DUP6 ADD MSTORE PUSH1 0xA0 DUP5 ADD DUP7 SWAP1 MSTORE DUP4 DUP2 SUB PUSH1 0xC0 DUP6 ADD MSTORE DUP5 MLOAD DUP1 DUP3 MSTORE PUSH1 0x20 DUP1 DUP8 ADD SWAP4 POP SWAP1 SWAP2 ADD SWAP1 PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x292F JUMPI DUP4 MLOAD DUP4 MSTORE PUSH1 0x20 SWAP4 DUP5 ADD SWAP4 SWAP1 SWAP3 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0x2911 JUMP JUMPDEST POP SWAP1 SWAP12 SWAP11 POP POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x40 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x2956 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP5 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x296C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2978 DUP8 DUP3 DUP9 ADD PUSH2 0x281C JUMP JUMPDEST SWAP1 SWAP6 POP SWAP4 POP POP PUSH1 0x20 DUP6 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x2997 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x29A3 DUP8 DUP3 DUP9 ADD PUSH2 0x281C JUMP JUMPDEST SWAP6 SWAP9 SWAP5 SWAP8 POP SWAP6 POP POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP3 MLOAD DUP3 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP2 DUP5 ADD SWAP1 PUSH1 0x40 DUP5 ADD SWAP1 DUP4 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x29E9 JUMPI DUP4 MLOAD ISZERO ISZERO DUP4 MSTORE PUSH1 0x20 SWAP4 DUP5 ADD SWAP4 SWAP1 SWAP3 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0x29C9 JUMP JUMPDEST POP SWAP1 SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xE0 DUP9 DUP11 SUB SLT ISZERO PUSH2 0x2A0F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2A18 DUP9 PUSH2 0x25CF JUMP JUMPDEST SWAP7 POP PUSH2 0x2A26 PUSH1 0x20 DUP10 ADD PUSH2 0x25CF JUMP JUMPDEST SWAP6 POP PUSH1 0x40 DUP9 ADD CALLDATALOAD SWAP5 POP PUSH1 0x60 DUP9 ADD CALLDATALOAD SWAP4 POP PUSH1 0x80 DUP9 ADD CALLDATALOAD PUSH1 0xFF DUP2 AND DUP2 EQ PUSH2 0x2A4A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP7 SWAP10 SWAP6 SWAP9 POP SWAP4 SWAP7 SWAP3 SWAP6 SWAP5 PUSH1 0xA0 DUP5 ADD CALLDATALOAD SWAP5 POP PUSH1 0xC0 SWAP1 SWAP4 ADD CALLDATALOAD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2A7A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2A83 DUP4 PUSH2 0x25CF JUMP JUMPDEST SWAP2 POP PUSH2 0x2736 PUSH1 0x20 DUP5 ADD PUSH2 0x25CF JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x2AA5 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x2AC5 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2AF3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x9F0 JUMPI DUP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x2B37 JUMPI POP DUP1 JUMPDEST PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP3 ADD SWAP2 POP JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0xFAE JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x2B43 JUMP JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x2B70 JUMPI PUSH2 0x2B70 PUSH2 0x273F JUMP JUMPDEST PUSH2 0x2B84 DUP2 PUSH2 0x2B7E DUP5 SLOAD PUSH2 0x2A91 JUMP JUMPDEST DUP5 PUSH2 0x2B10 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x1F DUP3 GT PUSH1 0x1 DUP2 EQ PUSH2 0x2BB8 JUMPI PUSH1 0x0 DUP4 ISZERO PUSH2 0x2BA0 JUMPI POP DUP5 DUP3 ADD MLOAD JUMPDEST PUSH1 0x0 NOT PUSH1 0x3 DUP6 SWAP1 SHL SHR NOT AND PUSH1 0x1 DUP5 SWAP1 SHL OR DUP5 SSTORE PUSH2 0xFAE JUMP JUMPDEST PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F NOT DUP6 AND SWAP2 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x2BE8 JUMPI DUP8 DUP6 ADD MLOAD DUP3 SSTORE PUSH1 0x20 SWAP5 DUP6 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP3 ADD SWAP2 ADD PUSH2 0x2BC8 JUMP JUMPDEST POP DUP5 DUP3 LT ISZERO PUSH2 0x2C06 JUMPI DUP7 DUP5 ADD MLOAD PUSH1 0x0 NOT PUSH1 0x3 DUP8 SWAP1 SHL PUSH1 0xF8 AND SHR NOT AND DUP2 SSTORE JUMPDEST POP POP POP POP PUSH1 0x1 SWAP1 DUP2 SHL ADD SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD PUSH2 0x2C27 DUP2 DUP5 PUSH1 0x20 DUP8 ADD PUSH2 0x2630 JUMP JUMPDEST SWAP2 SWAP1 SWAP2 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x87D JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID MSTORE 0xC6 ORIGIN SELFBALANCE 0xE1 DELEGATECALL PUSH30 0xB19D5CE0460030C497F067CA4CEBF71BA98EEADABE20BACE00A16A46D942 PUSH2 0xC751 PUSH29 0xC8FF89F61C0CE93598E3C849801011DEE649A6A557D100360894A13BA1 LOG3 0x21 MOD PUSH8 0xC828492DB98DCA3E KECCAK256 PUSH23 0xCC3735A920A3CA505D382BBC65D7A28E3265B37A647492 SWAP16 CALLER PUSH6 0x21B332C1681B SWAP4 EXTCODEHASH PUSH13 0xB9F3376673440D862A02DD7BC7 0xDE 0xC4 0xDC 0xEE 0xDD 0xA7 PUSH22 0xE58DD541E08A116C6C53815C0BD028192F7B626800CD MCOPY 0xD1 TLOAD PUSH15 0x187E77E9AEE88184C21F4F2182AB58 0x27 0xCB EXTCODESIZE PUSH31 0x7FBEDCD63F03300A2646970667358221220F886522BA52D6949BB91587414 SWAP10 PUSH32 0xFD3E434D01E8D7CCDE6D0AE11B8001E5C664736F6C634300081C003300000000 ","sourceMap":"283:4322:32:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1100:44:31;;;;;;;;;;-1:-1:-1;1100:44:31;;;;;:::i;:::-;;;;;;;;;;;;;;;;;529:25:33;;;517:2;502:18;1100:44:31;;;;;;;;3491:202:0;;;;;;;;;;-1:-1:-1;3491:202:0;;;;;:::i;:::-;;:::i;:::-;;;1021:14:33;;1014:22;996:41;;984:2;969:18;3491:202:0;856:187:33;1064:29:31;;;;;;;;;;;;;;;;2697:144:3;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;5114:186::-;;;;;;;;;;-1:-1:-1;5114:186:3;;;;;:::i;:::-;;:::i;3850:152::-;;;;;;;;;;-1:-1:-1;3981:14:3;;3850:152;;5892:244;;;;;;;;;;-1:-1:-1;5892:244:3;;;;;:::i;:::-;;:::i;4807:191:0:-;;;;;;;;;;-1:-1:-1;4807:191:0;;;;;:::i;:::-;;:::i;5294:136::-;;;;;;;;;;-1:-1:-1;5294:136:0;;;;;:::i;:::-;;:::i;:::-;;3735:82:3;;;;;;;;;;-1:-1:-1;3735:82:3;;3808:2;3348:36:33;;3336:2;3321:18;3735:82:3;3206:184:33;3040:112:4;;;;;;;;;;;;;:::i;6396:245:0:-;;;;;;;;;;-1:-1:-1;6396:245:0;;;;;:::i;:::-;;:::i;739:123:32:-;;;;;;;;;;;;;:::i;2548:77:31:-;;;;;;;;;;;;;:::i;1259:338:32:-;;;;;;;;;;-1:-1:-1;1259:338:32;;;;;:::i;:::-;;:::i;4161:214:2:-;;;;;;:::i;:::-;;:::i;3708:134::-;;;;;;;;;;;;;:::i;1739:274:32:-;;;;;;;;;;-1:-1:-1;1739:274:32;;;;;:::i;:::-;;:::i;4503:99::-;;;;;;;;;;-1:-1:-1;4580:14:32;;;;;;;;;;;;-1:-1:-1;;;4580:14:32;;;;4503:99;;2496:145:7;;;;;;;;;;-1:-1:-1;;;;;;;;;;;;2625:9:7;;;2496:145;;2158:409:32;;;;;;;;;;-1:-1:-1;2158:409:32;;;;;:::i;:::-;;:::i;4035:171:3:-;;;;;;;;;;-1:-1:-1;4035:171:3;;;;;:::i;:::-;;:::i;2794:154:4:-;;;;;;;;;;-1:-1:-1;2794:154:4;;;;;:::i;:::-;;:::i;2974:251:31:-;;;;;;;;;;-1:-1:-1;2974:251:31;;;;;:::i;:::-;;:::i;2408:73::-;;;;;;;;;;;;;:::i;5043:903:8:-;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;:::i;3551:323:31:-;;;;;;;;;;-1:-1:-1;3551:323:31;;;;;:::i;:::-;;:::i;3780:207:0:-;;;;;;;;;;-1:-1:-1;3780:207:0;;;;;:::i;:::-;;:::i;2954:148:3:-;;;;;;;;;;;;;:::i;3296:188:31:-;;;;;;;;;;-1:-1:-1;3296:188:31;;;;;:::i;:::-;;:::i;2398:49:0:-;;;;;;;;;;-1:-1:-1;2398:49:0;2443:4;2398:49;;4111:283:32;;;;;;;;;;-1:-1:-1;4111:283:32;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;1032:25:31:-;;;;;;;;;;-1:-1:-1;1032:25:31;;;;-1:-1:-1;;;;;1032:25:31;;;;;;-1:-1:-1;;;;;8401:32:33;;;8383:51;;8371:2;8356:18;1032:25:31;8237:203:33;4401:178:3;;;;;;;;;;-1:-1:-1;4401:178:3;;;;;:::i;:::-;;:::i;1819:58:2:-;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;1819:58:2;;;;;2692:219:31;;;;;;;;;;-1:-1:-1;2692:219:31;;;;;:::i;:::-;;:::i;2083:672:4:-;;;;;;;;;;-1:-1:-1;2083:672:4;;;;;:::i;:::-;;:::i;933:62:31:-;;;;;;;;;;;;971:24;933:62;;5710:138:0;;;;;;;;;;-1:-1:-1;5710:138:0;;;;;:::i;:::-;;:::i;2729:398:32:-;;;;;;;;;;-1:-1:-1;2729:398:32;;;;;:::i;:::-;;:::i;4612:195:3:-;;;;;;;;;;-1:-1:-1;4612:195:3;;;;;:::i;:::-;;:::i;864:62:31:-;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;864:62:31;;1726:617;;;;;;;;;;-1:-1:-1;1726:617:31;;;;;:::i;:::-;;:::i;1018:116:32:-;;;;;;;;;;-1:-1:-1;1018:116:32;;;;;:::i;:::-;-1:-1:-1;;;;;1105:21:32;1081:4;1105:21;;;:12;:21;;;;;;;;;1018:116;3491:202:0;3576:4;-1:-1:-1;;;;;;3599:47:0;;-1:-1:-1;;;3599:47:0;;:87;;-1:-1:-1;;;;;;;;;;1101:40:9;;;3650:36:0;3592:94;3491:202;-1:-1:-1;;3491:202:0:o;2697:144:3:-;2742:13;2767:22;-1:-1:-1;;;;;;;;;;;2792:18:3;2767:43;;2827:1;:7;;2820:14;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2697:144;:::o;5114:186::-;5187:4;966:10:5;5241:31:3;966:10:5;5257:7:3;5266:5;5241:8;:31::i;:::-;-1:-1:-1;5289:4:3;;5114:186;-1:-1:-1;;;5114:186:3:o;5892:244::-;5979:4;966:10:5;6035:37:3;6051:4;966:10:5;6066:5:3;6035:15;:37::i;:::-;6082:26;6092:4;6098:2;6102:5;6082:9;:26::i;:::-;6125:4;6118:11;;;5892:244;;;;;;:::o;4807:191:0:-;4872:7;4967:14;;;-1:-1:-1;;;;;;;;;;;4967:14:0;;;;;:24;;;;4807:191::o;5294:136::-;5368:18;5381:4;5368:12;:18::i;:::-;3272:16;3283:4;3272:10;:16::i;:::-;5398:25:::1;5409:4;5415:7;5398:10;:25::i;:::-;;5294:136:::0;;;:::o;3040:112:4:-;3099:7;3125:20;:18;:20::i;:::-;3118:27;;3040:112;:::o;6396:245:0:-;-1:-1:-1;;;;;6489:34:0;;966:10:5;6489:34:0;6485:102;;6546:30;;-1:-1:-1;;;6546:30:0;;;;;;;;;;;6485:102;6597:37;6609:4;6615:18;6597:11;:37::i;:::-;;6396:245;;:::o;739:123:32:-;786:1;6355:30:1;6388:26;:24;:26::i;:::-;6429:15;;;;-1:-1:-1;;;;6429:15:1;;;;;:44;;-1:-1:-1;6448:14:1;;-1:-1:-1;;;;;6448:25:1;;;:14;;:25;;6429:44;6425:105;;;6496:23;;-1:-1:-1;;;6496:23:1;;;;;;;;;;;6425:105;6539:24;;-1:-1:-1;;6573:22:1;-1:-1:-1;;;;;6539:24:1;;6573:22;;;-1:-1:-1;;;6573:22:1;-1:-1:-1;;;;6616:23:1;;;6654:20;;10147:50:33;;;6654:20:1;;10135:2:33;10120:18;6654:20:1;;;;;;;6289:392;739:123:32;:::o;2548:77:31:-;-1:-1:-1;;;;;;;;;;;3272:16:0;3283:4;3272:10;:16::i;:::-;2607:10:31::1;:8;:10::i;:::-;2548:77:::0;:::o;1259:338:32:-;2443:4:0;3272:16;2443:4;3272:10;:16::i;:::-;-1:-1:-1;;;;;1357:21:32;::::1;1349:63;;;::::0;-1:-1:-1;;;1349:63:32;;10410:2:33;1349:63:32::1;::::0;::::1;10392:21:33::0;10449:2;10429:18;;;10422:30;10488:31;10468:18;;;10461:59;10537:18;;1349:63:32::1;;;;;;;;;-1:-1:-1::0;;;;;1432:21:32;::::1;;::::0;;;:12:::1;:21;::::0;;;;;::::1;;1431:22;1423:62;;;::::0;-1:-1:-1;;;1423:62:32;;10768:2:33;1423:62:32::1;::::0;::::1;10750:21:33::0;10807:2;10787:18;;;10780:30;10846:29;10826:18;;;10819:57;10893:18;;1423:62:32::1;10566:351:33::0;1423:62:32::1;-1:-1:-1::0;;;;;1506:21:32;::::1;;::::0;;;:12:::1;:21;::::0;;;;;:28;;-1:-1:-1;;1506:28:32::1;1530:4;1506:28;::::0;;1550:39;1578:10:::1;::::0;1506:21;1550:39:::1;::::0;::::1;1259:338:::0;;:::o;4161:214:2:-;2655:13;:11;:13::i;:::-;4276:36:::1;4294:17;4276;:36::i;:::-;4322:46;4344:17;4363:4;4322:21;:46::i;:::-;4161:214:::0;;:::o;3708:134::-;3777:7;2926:20;:18;:20::i;:::-;-1:-1:-1;;;;;;;;;;;;3708:134:2;:::o;1739:274:32:-;2443:4:0;3272:16;2443:4;3272:10;:16::i;:::-;-1:-1:-1;;;;;1842:21:32;::::1;;::::0;;;:12:::1;:21;::::0;;;;;::::1;;1834:57;;;::::0;-1:-1:-1;;;1834:57:32;;11124:2:33;1834:57:32::1;::::0;::::1;11106:21:33::0;11163:2;11143:18;;;11136:30;11202:25;11182:18;;;11175:53;11245:18;;1834:57:32::1;10922:347:33::0;1834:57:32::1;-1:-1:-1::0;;;;;1912:21:32;::::1;1936:5;1912:21:::0;;;:12:::1;:21;::::0;;;;;:29;;-1:-1:-1;;1912:29:32::1;::::0;;1957:48;1994:10:::1;::::0;1912:21;1957:48:::1;::::0;::::1;1739:274:::0;;:::o;2158:409::-;2443:4:0;3272:16;2443:4;3272:10;:16::i;:::-;2270:9:32::1;2265:295;2285:19:::0;;::::1;2265:295;;;2326:15;2344:8;;2353:1;2344:11;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;2326:29:::0;-1:-1:-1;;;;;;2374:21:32;::::1;::::0;;::::1;::::0;:47:::1;;-1:-1:-1::0;;;;;;2400:21:32;::::1;;::::0;;;:12:::1;:21;::::0;;;;;::::1;;2399:22;2374:47;2370:179;;;-1:-1:-1::0;;;;;2442:21:32;::::1;;::::0;;;:12:::1;:21;::::0;;;;;:28;;-1:-1:-1;;2442:28:32::1;2466:4;2442:28;::::0;;2494:39;2522:10:::1;::::0;2442:21;2494:39:::1;::::0;::::1;2370:179;-1:-1:-1::0;2306:3:32::1;;2265:295;;4035:171:3::0;4100:7;;-1:-1:-1;;;;;;;;;;;4144:18:3;-1:-1:-1;;;;;4179:20:3;;;:11;:20;;;;;;;;-1:-1:-1;;4179:20:3;;;;;4035:171::o;2794:154:4:-;2896:7;2922:19;2935:5;2922:12;:19::i;2974:251:31:-;2443:4:0;3272:16;2443:4;3272:10;:16::i;:::-;3095:14:31::1;::::0;;3120:32;;;;3168:49:::1;::::0;;11580:25:33;;;11636:2;11621:18;;11614:34;;;3168:49:31::1;::::0;11553:18:33;3168:49:31::1;;;;;;;3064:161;2974:251:::0;;:::o;2408:73::-;-1:-1:-1;;;;;;;;;;;3272:16:0;3283:4;3272:10;:16::i;:::-;2465:8:31::1;:6;:8::i;5043:903:8:-:0;5141:13;5168:18;;5141:13;;;5168:18;5141:13;-1:-1:-1;;;;;;;;;;;5647:13:8;;5381:45;;-1:-1:-1;5647:18:8;:43;;;;-1:-1:-1;5669:16:8;;;;:21;5647:43;5639:77;;;;-1:-1:-1;;;5639:77:8;;11861:2:33;5639:77:8;;;11843:21:33;11900:2;11880:18;;;11873:30;-1:-1:-1;;;11919:18:33;;;11912:51;11980:18;;5639:77:8;11659:345:33;5639:77:8;5778:13;:11;:13::i;:::-;5805:16;:14;:16::i;:::-;5913;;;5897:1;5913:16;;;;;;;;;-1:-1:-1;;;5727:212:8;;;-1:-1:-1;5727:212:8;;-1:-1:-1;5835:13:8;;-1:-1:-1;5870:4:8;;-1:-1:-1;5897:1:8;-1:-1:-1;5913:16:8;-1:-1:-1;5727:212:8;-1:-1:-1;;5043:903:8:o;3551:323:31:-;3661:35;;;3653:70;;;;-1:-1:-1;;;3653:70:31;;12211:2:33;3653:70:31;;;12193:21:33;12250:2;12230:18;;;12223:30;-1:-1:-1;;;12269:18:33;;;12262:52;12331:18;;3653:70:31;12009:346:33;3653:70:31;3749:9;3744:123;3764:21;;;3744:123;;;3807:48;3817:10;3829;;3840:1;3829:13;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;3844:7;;3852:1;3844:10;;;;;;;:::i;:::-;;;;;;;3807:9;:48::i;:::-;3787:3;;3744:123;;;;3551:323;;;;:::o;3780:207:0:-;3857:4;3949:14;;;-1:-1:-1;;;;;;;;;;;3949:14:0;;;;;;;;-1:-1:-1;;;;;3949:31:0;;;;;;;;;;;;;;;3780:207::o;2954:148:3:-;3086:9;3079:16;;3001:13;;-1:-1:-1;;;;;;;;;;;2064:20:3;3079:16;;;:::i;3296:188:31:-;2443:4:0;3272:16;2443:4;3272:10;:16::i;:::-;-1:-1:-1;;;;;3401:18:31;::::1;;::::0;;;:9:::1;:18;::::0;;;;;;:29;;;3446:30;::::1;::::0;::::1;::::0;3422:8;529:25:33;;517:2;502:18;;383:177;3446:30:31::1;;;;;;;;3296:188:::0;;;:::o;4111:283:32:-;4191:22;4248:8;-1:-1:-1;;;;;4237:27:32;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;4237:27:32;;4226:38;;4280:9;4275:112;4295:19;;;4275:112;;;4350:12;:25;4363:8;;4372:1;4363:11;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;4350:25:32;;;;;;;;;;;;-1:-1:-1;4350:25:32;;4336:11;;4350:25;;;;;4336:8;;4345:1;;4336:11;;;;;;:::i;:::-;:39;;;:11;;;;;;;;;;;:39;4316:3;;4275:112;;;;4111:283;;;;:::o;4401:178:3:-;4470:4;966:10:5;4524:27:3;966:10:5;4541:2:3;4545:5;4524:9;:27::i;2692:219:31:-;2443:4:0;3272:16;2443:4;3272:10;:16::i;:::-;2785:15:31::1;2803:10:::0;;-1:-1:-1;;;;;2824:24:31;;::::1;-1:-1:-1::0;;;;;;2824:24:31;::::1;::::0;::::1;::::0;;2864:39:::1;::::0;2803:10;;;::::1;::::0;;;2864:39:::1;::::0;2785:15;2864:39:::1;2774:137;2692:219:::0;;:::o;2083:672:4:-;2304:8;2286:15;:26;2282:97;;;2335:33;;-1:-1:-1;;;2335:33:4;;;;;529:25:33;;;502:18;;2335:33:4;383:177:33;2282:97:4;2389:18;1279:95;2448:5;2455:7;2464:5;2471:16;2481:5;-1:-1:-1;;;;;1954:16:6;1597:7;1954:16;;;1005:21;1954:16;;;;;:18;;;;;;;;;1537:452;2471:16:4;2420:78;;;;;;12647:25:33;;;;-1:-1:-1;;;;;12708:32:33;;;12688:18;;;12681:60;12777:32;;;;12757:18;;;12750:60;12826:18;;;12819:34;12869:19;;;12862:35;12913:19;;;12906:35;;;12619:19;;2420:78:4;;;;;;;;;;;;2410:89;;;;;;2389:110;;2510:12;2525:28;2542:10;2525:16;:28::i;:::-;2510:43;;2564:14;2581:28;2595:4;2601:1;2604;2607;2581:13;:28::i;:::-;2564:45;;2633:5;-1:-1:-1;;;;;2623:15:4;:6;-1:-1:-1;;;;;2623:15:4;;2619:88;;2661:35;;-1:-1:-1;;;2661:35:4;;-1:-1:-1;;;;;13144:32:33;;;2661:35:4;;;13126:51:33;13213:32;;13193:18;;;13186:60;13099:18;;2661:35:4;12952:300:33;2619:88:4;2717:31;2726:5;2733:7;2742:5;2717:8;:31::i;:::-;2272:483;;;2083:672;;;;;;;:::o;5710:138:0:-;5785:18;5798:4;5785:12;:18::i;:::-;3272:16;3283:4;3272:10;:16::i;:::-;5815:26:::1;5827:4;5833:7;5815:11;:26::i;2729:398:32:-:0;2443:4:0;3272:16;2443:4;3272:10;:16::i;:::-;2846:9:32::1;2841:279;2861:19:::0;;::::1;2841:279;;;2902:15;2920:8;;2929:1;2920:11;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1::0;;;;;2950:21:32;::::1;;::::0;;;:12:::1;:21;::::0;;;;;2902:29;;-1:-1:-1;2950:21:32::1;;2946:163;;;-1:-1:-1::0;;;;;2992:21:32;::::1;3016:5;2992:21:::0;;;:12:::1;:21;::::0;;;;;:29;;-1:-1:-1;;2992:29:32::1;::::0;;3045:48;3082:10:::1;::::0;2992:21;3045:48:::1;::::0;::::1;2946:163;-1:-1:-1::0;2882:3:32::1;;2841:279;;4612:195:3::0;-1:-1:-1;;;;;4771:20:3;;;4692:7;4771:20;;;:13;:20;;;;;;;;:29;;;;;;;;;;;;;4612:195::o;1726:617:31:-;4158:30:1;4191:26;:24;:26::i;:::-;4302:15;;4158:59;;-1:-1:-1;4302:15:1;-1:-1:-1;;;4302:15:1;;;4301:16;;-1:-1:-1;;;;;4348:14:1;4279:19;4724:16;;:34;;;;;4744:14;4724:34;4704:54;;4768:17;4788:11;-1:-1:-1;;;;;4788:16:1;4803:1;4788:16;:50;;;;-1:-1:-1;4816:4:1;4808:25;:30;4788:50;4768:70;;4854:12;4853:13;:30;;;;;4871:12;4870:13;4853:30;4849:91;;;4906:23;;-1:-1:-1;;;4906:23:1;;;;;;;;;;;4849:91;4949:18;;-1:-1:-1;;4949:18:1;4966:1;4949:18;;;4977:67;;;;5011:22;;-1:-1:-1;;;;5011:22:1;-1:-1:-1;;;5011:22:1;;;4977:67;1799:32:31::1;;;;;;;;;;;;;;-1:-1:-1::0;;;1799:32:31::1;;::::0;::::1;;;;;;;;;;;;;-1:-1:-1::0;;;1799:32:31::1;;::::0;:12:::1;:32::i;:::-;1842:31;;;;;;;;;;;;;;-1:-1:-1::0;;;1842:31:31::1;;::::0;:18:::1;:31::i;:::-;1884:17;:15;:17::i;:::-;1912:22;:20;:22::i;:::-;1945:24;:22;:24::i;:::-;2015:42;2443:4:0;2046:10:31;2015;:42::i;:::-;;2068:35;-1:-1:-1::0;;;;;;;;;;;2092:10:31::1;2068;:35::i;:::-;;2114;971:24;2138:10;2114;:35::i;:::-;;2202:32;2208:10;2220:13;2202:5;:32::i;:::-;2323:12;2306:14;:29:::0;5064:101:1;;;;5098:23;;-1:-1:-1;;;;5098:23:1;;;5140:14;;-1:-1:-1;10147:50:33;;5140:14:1;;10135:2:33;10120:18;5140:14:1;;;;;;;5064:101;4092:1079;;;;;1726:617:31;:::o;9905:128:3:-;9989:37;9998:5;10005:7;10014:5;10021:4;9989:8;:37::i;11649:476::-;11748:24;11775:25;11785:5;11792:7;11775:9;:25::i;:::-;11748:52;;-1:-1:-1;;11814:16:3;:36;11810:309;;;11889:5;11870:16;:24;11866:130;;;11921:60;;-1:-1:-1;;;11921:60:3;;-1:-1:-1;;;;;13691:32:33;;11921:60:3;;;13673:51:33;13740:18;;;13733:34;;;13783:18;;;13776:34;;;13646:18;;11921:60:3;13471:345:33;11866:130:3;12037:57;12046:5;12053:7;12081:5;12062:16;:24;12088:5;12037:8;:57::i;6509:300::-;-1:-1:-1;;;;;6592:18:3;;6588:86;;6633:30;;-1:-1:-1;;;6633:30:3;;6660:1;6633:30;;;8383:51:33;8356:18;;6633:30:3;8237:203:33;6588:86:3;-1:-1:-1;;;;;6687:16:3;;6683:86;;6726:32;;-1:-1:-1;;;6726:32:3;;6755:1;6726:32;;;8383:51:33;8356:18;;6726:32:3;8237:203:33;6683:86:3;6778:24;6786:4;6792:2;6796:5;6778:7;:24::i;4196:103:0:-;4262:30;4273:4;966:10:5;4262::0;:30::i;7318:387::-;7395:4;-1:-1:-1;;;;;;;;;;;7485:22:0;7493:4;7499:7;7485;:22::i;:::-;7480:219;;7523:8;:14;;;;;;;;;;;-1:-1:-1;;;;;7523:31:0;;;;;;;;;:38;;-1:-1:-1;;7523:38:0;7557:4;7523:38;;;7607:12;966:10:5;;887:96;7607:12:0;-1:-1:-1;;;;;7580:40:0;7598:7;-1:-1:-1;;;;;7580:40:0;7592:4;7580:40;;;;;;;;;;7641:4;7634:11;;;;;7480:219;7683:5;7676:12;;;;;3901:109:8;3954:7;3980:23;:21;:23::i;7942:388:0:-;8020:4;-1:-1:-1;;;;;;;;;;;8109:22:0;8117:4;8123:7;8109;:22::i;:::-;8105:219;;;8181:5;8147:14;;;;;;;;;;;-1:-1:-1;;;;;8147:31:0;;;;;;;;;;:39;;-1:-1:-1;;8147:39:0;;;8205:40;966:10:5;;8147:14:0;;8205:40;;8181:5;8205:40;8266:4;8259:11;;;;;9071:205:1;9129:30;;3147:66;9186:27;8819:122;3478:178:7;2226:16;:14;:16::i;:::-;-1:-1:-1;;;;;;;;;;;3595:17:7;;-1:-1:-1;;3595:17:7::1;::::0;;3627:22:::1;966:10:5::0;3636:12:7::1;3627:22;::::0;-1:-1:-1;;;;;8401:32:33;;;8383:51;;8371:2;8356:18;3627:22:7::1;;;;;;;3526:130;3478:178::o:0;4578:312:2:-;4658:4;-1:-1:-1;;;;;4667:6:2;4650:23;;;:120;;;4764:6;-1:-1:-1;;;;;4728:42:2;:32;-1:-1:-1;;;;;;;;;;;1565:53:15;-1:-1:-1;;;;;1565:53:15;;1486:140;4728:32:2;-1:-1:-1;;;;;4728:42:2;;;4650:120;4633:251;;;4844:29;;-1:-1:-1;;;4844:29:2;;;;;;;;;;;4633:251;4578:312::o;4442:155:31:-;2443:4:0;3272:16;2443:4;3272:10;:16::i;6032:538:2:-;6149:17;-1:-1:-1;;;;;6131:50:2;;:52;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;6131:52:2;;;;;;;;-1:-1:-1;;6131:52:2;;;;;;;;;;;;:::i;:::-;;;6127:437;;6493:60;;-1:-1:-1;;;6493:60:2;;-1:-1:-1;;;;;8401:32:33;;6493:60:2;;;8383:51:33;8356:18;;6493:60:2;8237:203:33;6127:437:2;-1:-1:-1;;;;;;;;;;;6225:40:2;;6221:120;;6292:34;;-1:-1:-1;;;6292:34:2;;;;;529:25:33;;;502:18;;6292:34:2;383:177:33;6221:120:2;6354:54;6384:17;6403:4;6354:29;:54::i;5007:213::-;5081:4;-1:-1:-1;;;;;5090:6:2;5073:23;;5069:145;;5174:29;;-1:-1:-1;;;5174:29:2;;;;;;;;;;;1259:164:6;1319:7;;1005:21;1364:19;886:156;3170:176:7;1979:19;:17;:19::i;:::-;-1:-1:-1;;;;;;;;;;;3288:16:7;;-1:-1:-1;;3288:16:7::1;3300:4;3288:16;::::0;;3319:20:::1;966:10:5::0;3326:12:7::1;887:96:5::0;6170:155:8;6311:7;6304:14;;6224:13;;-1:-1:-1;;;;;;;;;;;2725:21:8;6304:14;;;:::i;6552:161::-;6609:13;6634:23;-1:-1:-1;;;;;;;;;;;6660:19:8;2606:156;4832:176;4909:7;4935:66;4968:20;:18;:20::i;:::-;4990:10;4140:4:26;4134:11;-1:-1:-1;;;4159:23:26;;4212:4;4203:14;;4196:39;;;;4265:4;4256:14;;4249:34;4322:4;4307:20;;;3963:382;7046:264:25;7131:7;7152:17;7171:18;7191:16;7211:25;7222:4;7228:1;7231;7234;7211:10;:25::i;:::-;7151:85;;;;;;7247:28;7259:5;7266:8;7247:11;:28::i;:::-;-1:-1:-1;7293:9:25;;7046:264;-1:-1:-1;;;;;;7046:264:25:o;2263:147:3:-;6929:20:1;:18;:20::i;:::-;2365:38:3::1;2388:5;2395:7;2365:22;:38::i;1832:125:4:-:0;6929:20:1;:18;:20::i;:::-;1916:34:4::1;1940:4;1916:34;;;;;;;;;;;;;-1:-1:-1::0;;;1916:34:4::1;;::::0;:23:::1;:34::i;2266:60:7:-:0;6929:20:1;:18;:20::i;8637:208:3:-;-1:-1:-1;;;;;8707:21:3;;8703:91;;8751:32;;-1:-1:-1;;;8751:32:3;;8780:1;8751:32;;;8383:51:33;8356:18;;8751:32:3;8237:203:33;8703:91:3;8803:35;8819:1;8823:7;8832:5;8803:7;:35::i;10880:487::-;-1:-1:-1;;;;;;;;;;;;;;;;11045:19:3;;11041:89;;11087:32;;-1:-1:-1;;;11087:32:3;;11116:1;11087:32;;;8383:51:33;8356:18;;11087:32:3;8237:203:33;11041:89:3;-1:-1:-1;;;;;11143:21:3;;11139:90;;11187:31;;-1:-1:-1;;;11187:31:3;;11215:1;11187:31;;;8383:51:33;8356:18;;11187:31:3;8237:203:33;11139:90:3;-1:-1:-1;;;;;11238:20:3;;;;;;;:13;;;:20;;;;;;;;:29;;;;;;;;;:37;;;11285:76;;;;11335:7;-1:-1:-1;;;;;11319:31:3;11328:5;-1:-1:-1;;;;;11319:31:3;;11344:5;11319:31;;;;529:25:33;;517:2;502:18;;383:177;11319:31:3;;;;;;;;10978:389;10880:487;;;;:::o;3472:447:32:-;-1:-1:-1;;;;;3274:21:32;;;;;;:12;:21;;;;;;3563:4;;3274:21;;3270:90;;;3319:29;;-1:-1:-1;;;3319:29:32;;-1:-1:-1;;;;;8401:32:33;;3319:29:32;;;8383:51:33;8356:18;;3319:29:32;8237:203:33;3270:90:32;-1:-1:-1;;;;;3274:21:32;::::1;;::::0;;;:12:::1;:21;::::0;;;;;3584:2;;3274:21:::1;;3270:90;;;3319:29;::::0;-1:-1:-1;;;3319:29:32;;-1:-1:-1;;;;;8401:32:33;;3319:29:32::1;::::0;::::1;8383:51:33::0;8356:18;;3319:29:32::1;8237:203:33::0;3270:90:32::1;-1:-1:-1::0;;;;;3673:18:32;::::2;::::0;;::::2;::::0;:38:::2;;-1:-1:-1::0;;;;;;3695:16:32;::::2;::::0;::::2;3673:38;3669:192;;;-1:-1:-1::0;;;;;3732:15:32;::::2;;::::0;;;:9:::2;:15;::::0;;;;;3750::::2;-1:-1:-1::0;3728:122:32::2;;;-1:-1:-1::0;;;;;3818:15:32;::::2;;::::0;;;:9:::2;:15;::::0;;;;;;;3793:41;;-1:-1:-1;;;3793:41:32;;::::2;::::0;::::2;14184:51:33::0;;;;14251:18;;;14244:34;14157:18;;3793:41:32::2;14010:274:33::0;3728:122:32::2;3881:30;3895:4;3901:2;3905:5;3881:13;:30::i;4429:197:0:-:0;4517:22;4525:4;4531:7;4517;:22::i;:::-;4512:108;;4562:47;;-1:-1:-1;;;4562:47:0;;-1:-1:-1;;;;;14202:32:33;;4562:47:0;;;14184:51:33;14251:18;;;14244:34;;;14157:18;;4562:47:0;14010:274:33;4016:191:8;4071:7;1959:95;4129:17;:15;:17::i;:::-;4148:20;:18;:20::i;:::-;4107:92;;;;;;14827:25:33;;;;14868:18;;14861:34;;;;14911:18;;;14904:34;4170:13:8;14954:18:33;;;14947:34;4193:4:8;14997:19:33;;;14990:61;14799:19;;4107:92:8;;;;;;;;;;;;4097:103;;;;;;4090:110;;4016:191;:::o;2909:126:7:-;-1:-1:-1;;;;;;;;;;;2625:9:7;;;2967:62;;3003:15;;-1:-1:-1;;;3003:15:7;;;;;;;;;;;2330:353:15;2422:37;2441:17;2422:18;:37::i;:::-;2475:36;;-1:-1:-1;;;;;2475:36:15;;;;;;;;2528:11;;:15;2524:152;;2560:53;2589:17;2608:4;2560:28;:53::i;2524:152::-;2646:18;:16;:18::i;2709:128:7:-;-1:-1:-1;;;;;;;;;;;2625:9:7;;;2770:61;;;2805:15;;-1:-1:-1;;;2805:15:7;;;;;;;;;;;5330:1577:25;5461:17;;;6425:66;6412:79;;6408:166;;;-1:-1:-1;6524:1:25;;-1:-1:-1;6528:30:25;;-1:-1:-1;6560:1:25;6508:54;;6408:166;6688:24;;;6671:14;6688:24;;;;;;;;;15289:25:33;;;15362:4;15350:17;;15330:18;;;15323:45;;;;15384:18;;;15377:34;;;15427:18;;;15420:34;;;6688:24:25;;15261:19:33;;6688:24:25;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;6688:24:25;;-1:-1:-1;;6688:24:25;;;-1:-1:-1;;;;;;;6727:20:25;;6723:115;;-1:-1:-1;6780:1:25;;-1:-1:-1;6784:29:25;;-1:-1:-1;6780:1:25;;-1:-1:-1;6764:62:25;;6723:115;6858:6;-1:-1:-1;6866:20:25;;-1:-1:-1;6866:20:25;;-1:-1:-1;5330:1577:25;;;;;;;;;:::o;7448:542::-;7544:20;7535:5;:29;;;;;;;;:::i;:::-;;7531:452;;7448:542;;:::o;7531:452::-;7642:29;7633:5;:38;;;;;;;;:::i;:::-;;7629:354;;7695:23;;-1:-1:-1;;;7695:23:25;;;;;;;;;;;7629:354;7749:35;7740:5;:44;;;;;;;;:::i;:::-;;7736:247;;7808:46;;-1:-1:-1;;;7808:46:25;;;;;529:25:33;;;502:18;;7808:46:25;383:177:33;7736:247:25;7885:30;7876:5;:39;;;;;;;;:::i;:::-;;7872:111;;7939:32;;-1:-1:-1;;;7939:32:25;;;;;529:25:33;;;502:18;;7939:32:25;383:177:33;7082:141:1;7149:17;:15;:17::i;:::-;7144:73;;7189:17;;-1:-1:-1;;;7189:17:1;;;;;;;;;;;2416:216:3;6929:20:1;:18;:20::i;:::-;-1:-1:-1;;;;;;;;;;;2581:7:3;:15:::1;2591:5:::0;2581:7;:15:::1;:::i;:::-;-1:-1:-1::0;2606:9:3::1;::::0;::::1;:19;2618:7:::0;2606:9;:19:::1;:::i;3485:330:8:-:0;6929:20:1;:18;:20::i;:::-;-1:-1:-1;;;;;;;;;;;3652:7:8;:14:::1;3662:4:::0;3652:7;:14:::1;:::i;:::-;-1:-1:-1::0;3676:10:8::1;::::0;::::1;:20;3689:7:::0;3676:10;:20:::1;:::i;:::-;-1:-1:-1::0;3777:1:8::1;3761:17:::0;;;3788:16:::1;::::0;;::::1;:20:::0;-1:-1:-1;;3485:330:8:o;3953:415:31:-;-1:-1:-1;;;;;4122:18:31;;;;;;:38;;-1:-1:-1;;;;;;4144:16:31;;;;4122:38;4118:192;;;-1:-1:-1;;;;;4181:15:31;;;;;;:9;:15;;;;;;4199;-1:-1:-1;4177:122:31;;;-1:-1:-1;;;;;4267:15:31;;;;;;:9;:15;;;;;;;;4242:41;;-1:-1:-1;;;4242:41:31;;;;;14184:51:33;;;;14251:18;;;14244:34;14157:18;;4242:41:31;14010:274:33;4177:122:31;4330:30;4344:4;4350:2;4354:5;4330:13;:30::i;6928:687:8:-;6978:7;-1:-1:-1;;;;;;;;;;;6978:7:8;7073:13;:11;:13::i;:::-;7100:18;;7052:34;;-1:-1:-1;7100:22:8;7096:513;;7145:22;;;;;;;;6928:687;-1:-1:-1;;6928:687:8:o;7096:513::-;7442:13;;7473:15;;7469:130;;7515:10;6928:687;-1:-1:-1;;;6928:687:8:o;7469:130::-;7571:13;7564:20;;;;;6928:687;:::o;7836:723::-;7889:7;-1:-1:-1;;;;;;;;;;;7889:7:8;7987:16;:14;:16::i;:::-;8017:21;;7963:40;;-1:-1:-1;8017:25:8;8013:540;;8065:25;;;;;;;;7836:723;-1:-1:-1;;7836:723:8:o;8013:540::-;8377:16;;;;8411:18;;8407:136;;8456:13;7836:723;-1:-1:-1;;;7836:723:8:o;1723:286:15:-;1801:17;-1:-1:-1;;;;;1801:29:15;;1834:1;1801:34;1797:121;;1859:47;;-1:-1:-1;;;1859:47:15;;-1:-1:-1;;;;;8401:32:33;;1859:47:15;;;8383:51:33;8356:18;;1859:47:15;8237:203:33;1797:121:15;-1:-1:-1;;;;;;;;;;;1928:73:15;;-1:-1:-1;;;;;;1928:73:15;-1:-1:-1;;;;;1928:73:15;;;;;;;;;;1723:286::o;4011:256:20:-;4094:12;4120;4134:23;4161:6;-1:-1:-1;;;;;4161:19:20;4181:4;4161:25;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4119:67;;;;4204:55;4231:6;4239:7;4248:10;4204:26;:55::i;:::-;4197:62;4011:256;-1:-1:-1;;;;;4011:256:20:o;6284:126:15:-;6335:9;:13;6331:72;;6372:19;;-1:-1:-1;;;6372:19:15;;;;;;;;;;;8485:120:1;8535:4;8558:26;:24;:26::i;:::-;:40;-1:-1:-1;;;8558:40:1;;;;;;-1:-1:-1;8485:120:1:o;7124:1170:3:-;-1:-1:-1;;;;;;;;;;;;;;;;7266:18:3;;7262:546;;7420:5;7402:1;:14;;;:23;;;;;;;:::i;:::-;;;;-1:-1:-1;7262:546:3;;-1:-1:-1;7262:546:3;;-1:-1:-1;;;;;7478:17:3;;7456:19;7478:17;;;;;;;;;;;7513:19;;;7509:115;;;7559:50;;-1:-1:-1;;;7559:50:3;;-1:-1:-1;;;;;13691:32:33;;7559:50:3;;;13673:51:33;13740:18;;;13733:34;;;13783:18;;;13776:34;;;13646:18;;7559:50:3;13471:345:33;7509:115:3;-1:-1:-1;;;;;7744:17:3;;:11;:17;;;;;;;;;;7764:19;;;;7744:39;;7262:546;-1:-1:-1;;;;;7822:16:3;;7818:429;;7985:14;;;:23;;;;;;;7818:429;;;-1:-1:-1;;;;;8198:15:3;;:11;:15;;;;;;;;;;:24;;;;;;7818:429;8277:2;-1:-1:-1;;;;;8262:25:3;8271:4;-1:-1:-1;;;;;8262:25:3;;8281:5;8262:25;;;;529::33;;517:2;502:18;;383:177;8262:25:3;;;;;;;;7199:1095;7124:1170;;;:::o;4542:597:20:-;4690:12;4720:7;4715:417;;4744:19;4752:10;4744:7;:19::i;:::-;4715:417;;;4972:17;;:22;:49;;;;-1:-1:-1;;;;;;4998:18:20;;;:23;4972:49;4968:121;;;5049:24;;-1:-1:-1;;;5049:24:20;;-1:-1:-1;;;;;8401:32:33;;5049:24:20;;;8383:51:33;8356:18;;5049:24:20;8237:203:33;4968:121:20;-1:-1:-1;5110:10:20;5103:17;;5696:498;5829:17;;:21;5825:362;;6029:10;6023:17;6086:15;6073:10;6069:2;6065:19;6058:44;5825:362;6156:19;;-1:-1:-1;;;6156:19:20;;;;;;;;;;;14:173:33;82:20;;-1:-1:-1;;;;;131:31:33;;121:42;;111:70;;177:1;174;167:12;111:70;14:173;;;:::o;192:186::-;251:6;304:2;292:9;283:7;279:23;275:32;272:52;;;320:1;317;310:12;272:52;343:29;362:9;343:29;:::i;565:286::-;623:6;676:2;664:9;655:7;651:23;647:32;644:52;;;692:1;689;682:12;644:52;718:23;;-1:-1:-1;;;;;;770:32:33;;760:43;;750:71;;817:1;814;807:12;1048:250;1133:1;1143:113;1157:6;1154:1;1151:13;1143:113;;;1233:11;;;1227:18;1214:11;;;1207:39;1179:2;1172:10;1143:113;;;-1:-1:-1;;1290:1:33;1272:16;;1265:27;1048:250::o;1303:271::-;1345:3;1383:5;1377:12;1410:6;1405:3;1398:19;1426:76;1495:6;1488:4;1483:3;1479:14;1472:4;1465:5;1461:16;1426:76;:::i;:::-;1556:2;1535:15;-1:-1:-1;;1531:29:33;1522:39;;;;1563:4;1518:50;;1303:271;-1:-1:-1;;1303:271:33:o;1579:220::-;1728:2;1717:9;1710:21;1691:4;1748:45;1789:2;1778:9;1774:18;1766:6;1748:45;:::i;1804:300::-;1872:6;1880;1933:2;1921:9;1912:7;1908:23;1904:32;1901:52;;;1949:1;1946;1939:12;1901:52;1972:29;1991:9;1972:29;:::i;:::-;1962:39;2070:2;2055:18;;;;2042:32;;-1:-1:-1;;;1804:300:33:o;2109:374::-;2186:6;2194;2202;2255:2;2243:9;2234:7;2230:23;2226:32;2223:52;;;2271:1;2268;2261:12;2223:52;2294:29;2313:9;2294:29;:::i;:::-;2284:39;;2342:38;2376:2;2365:9;2361:18;2342:38;:::i;:::-;2109:374;;2332:48;;-1:-1:-1;;;2449:2:33;2434:18;;;;2421:32;;2109:374::o;2488:226::-;2547:6;2600:2;2588:9;2579:7;2575:23;2571:32;2568:52;;;2616:1;2613;2606:12;2568:52;-1:-1:-1;2661:23:33;;2488:226;-1:-1:-1;2488:226:33:o;2901:300::-;2969:6;2977;3030:2;3018:9;3009:7;3005:23;3001:32;2998:52;;;3046:1;3043;3036:12;2998:52;3091:23;;;-1:-1:-1;3157:38:33;3191:2;3176:18;;3157:38;:::i;:::-;3147:48;;2901:300;;;;;:::o;3395:127::-;3456:10;3451:3;3447:20;3444:1;3437:31;3487:4;3484:1;3477:15;3511:4;3508:1;3501:15;3527:1018;3604:6;3612;3665:2;3653:9;3644:7;3640:23;3636:32;3633:52;;;3681:1;3678;3671:12;3633:52;3704:29;3723:9;3704:29;:::i;:::-;3694:39;;3784:2;3773:9;3769:18;3756:32;-1:-1:-1;;;;;3803:6:33;3800:30;3797:50;;;3843:1;3840;3833:12;3797:50;3866:22;;3919:4;3911:13;;3907:27;-1:-1:-1;3897:55:33;;3948:1;3945;3938:12;3897:55;3988:2;3975:16;-1:-1:-1;;;;;4006:6:33;4003:30;4000:56;;;4036:18;;:::i;:::-;4085:2;4079:9;4177:2;4139:17;;-1:-1:-1;;4135:31:33;;;4168:2;4131:40;4127:54;4115:67;;-1:-1:-1;;;;;4197:34:33;;4233:22;;;4194:62;4191:88;;;4259:18;;:::i;:::-;4295:2;4288:22;4319;;;4360:15;;;4377:2;4356:24;4353:37;-1:-1:-1;4350:57:33;;;4403:1;4400;4393:12;4350:57;4459:6;4454:2;4450;4446:11;4441:2;4433:6;4429:15;4416:50;4512:1;4507:2;4498:6;4490;4486:19;4482:28;4475:39;4533:6;4523:16;;;;;3527:1018;;;;;:::o;4550:367::-;4613:8;4623:6;4677:3;4670:4;4662:6;4658:17;4654:27;4644:55;;4695:1;4692;4685:12;4644:55;-1:-1:-1;4718:20:33;;-1:-1:-1;;;;;4750:30:33;;4747:50;;;4793:1;4790;4783:12;4747:50;4830:4;4822:6;4818:17;4806:29;;4890:3;4883:4;4873:6;4870:1;4866:14;4858:6;4854:27;4850:38;4847:47;4844:67;;;4907:1;4904;4897:12;4844:67;4550:367;;;;;:::o;4922:437::-;5008:6;5016;5069:2;5057:9;5048:7;5044:23;5040:32;5037:52;;;5085:1;5082;5075:12;5037:52;5125:9;5112:23;-1:-1:-1;;;;;5150:6:33;5147:30;5144:50;;;5190:1;5187;5180:12;5144:50;5229:70;5291:7;5282:6;5271:9;5267:22;5229:70;:::i;:::-;5318:8;;5203:96;;-1:-1:-1;4922:437:33;-1:-1:-1;;;;4922:437:33:o;5595:1238::-;6001:3;5996;5992:13;5984:6;5980:26;5969:9;5962:45;6043:3;6038:2;6027:9;6023:18;6016:31;5943:4;6070:46;6111:3;6100:9;6096:19;6088:6;6070:46;:::i;:::-;6164:9;6156:6;6152:22;6147:2;6136:9;6132:18;6125:50;6198:33;6224:6;6216;6198:33;:::i;:::-;6262:2;6247:18;;6240:34;;;-1:-1:-1;;;;;6311:32:33;;6305:3;6290:19;;6283:61;6331:3;6360:19;;6353:35;;;6425:22;;;6419:3;6404:19;;6397:51;6497:13;;6519:22;;;6569:2;6595:15;;;;-1:-1:-1;6557:15:33;;;;-1:-1:-1;6638:169:33;6652:6;6649:1;6646:13;6638:169;;;6713:13;;6701:26;;6756:2;6782:15;;;;6747:12;;;;6674:1;6667:9;6638:169;;;-1:-1:-1;6824:3:33;;5595:1238;-1:-1:-1;;;;;;;;;;;5595:1238:33:o;6838:768::-;6960:6;6968;6976;6984;7037:2;7025:9;7016:7;7012:23;7008:32;7005:52;;;7053:1;7050;7043:12;7005:52;7093:9;7080:23;-1:-1:-1;;;;;7118:6:33;7115:30;7112:50;;;7158:1;7155;7148:12;7112:50;7197:70;7259:7;7250:6;7239:9;7235:22;7197:70;:::i;:::-;7286:8;;-1:-1:-1;7171:96:33;-1:-1:-1;;7374:2:33;7359:18;;7346:32;-1:-1:-1;;;;;7390:32:33;;7387:52;;;7435:1;7432;7425:12;7387:52;7474:72;7538:7;7527:8;7516:9;7512:24;7474:72;:::i;:::-;6838:768;;;;-1:-1:-1;7565:8:33;-1:-1:-1;;;;6838:768:33:o;7611:621::-;7795:2;7807:21;;;7877:13;;7780:18;;;7899:22;;;7747:4;;7978:15;;;7952:2;7937:18;;;7747:4;8021:185;8035:6;8032:1;8029:13;8021:185;;;8110:13;;8103:21;8096:29;8084:42;;8155:2;8181:15;;;;8146:12;;;;8057:1;8050:9;8021:185;;;-1:-1:-1;8223:3:33;;7611:621;-1:-1:-1;;;;;7611:621:33:o;8445:903::-;8556:6;8564;8572;8580;8588;8596;8604;8657:3;8645:9;8636:7;8632:23;8628:33;8625:53;;;8674:1;8671;8664:12;8625:53;8697:29;8716:9;8697:29;:::i;:::-;8687:39;;8745:38;8779:2;8768:9;8764:18;8745:38;:::i;:::-;8735:48;-1:-1:-1;8852:2:33;8837:18;;8824:32;;-1:-1:-1;8953:2:33;8938:18;;8925:32;;-1:-1:-1;9035:3:33;9020:19;;9007:33;9084:4;9071:18;;9059:31;;9049:59;;9104:1;9101;9094:12;9049:59;8445:903;;;;-1:-1:-1;8445:903:33;;;;9127:7;9207:3;9192:19;;9179:33;;-1:-1:-1;9311:3:33;9296:19;;;9283:33;;8445:903;-1:-1:-1;;8445:903:33:o;9353:260::-;9421:6;9429;9482:2;9470:9;9461:7;9457:23;9453:32;9450:52;;;9498:1;9495;9488:12;9450:52;9521:29;9540:9;9521:29;:::i;:::-;9511:39;;9569:38;9603:2;9592:9;9588:18;9569:38;:::i;9618:380::-;9697:1;9693:12;;;;9740;;;9761:61;;9815:4;9807:6;9803:17;9793:27;;9761:61;9868:2;9860:6;9857:14;9837:18;9834:38;9831:161;;9914:10;9909:3;9905:20;9902:1;9895:31;9949:4;9946:1;9939:15;9977:4;9974:1;9967:15;9831:161;;9618:380;;;:::o;11274:127::-;11335:10;11330:3;11326:20;11323:1;11316:31;11366:4;11363:1;11356:15;11390:4;11387:1;11380:15;13821:184;13891:6;13944:2;13932:9;13923:7;13919:23;13915:32;13912:52;;;13960:1;13957;13950:12;13912:52;-1:-1:-1;13983:16:33;;13821:184;-1:-1:-1;13821:184:33:o;15465:127::-;15526:10;15521:3;15517:20;15514:1;15507:31;15557:4;15554:1;15547:15;15581:4;15578:1;15571:15;15723:518;15825:2;15820:3;15817:11;15814:421;;;15861:5;15858:1;15851:16;15905:4;15902:1;15892:18;15975:2;15963:10;15959:19;15956:1;15952:27;15946:4;15942:38;16011:4;15999:10;15996:20;15993:47;;;-1:-1:-1;16034:4:33;15993:47;16089:2;16084:3;16080:12;16077:1;16073:20;16067:4;16063:31;16053:41;;16144:81;16162:2;16155:5;16152:13;16144:81;;;16221:1;16207:16;;16188:1;16177:13;16144:81;;16417:1299;16543:3;16537:10;-1:-1:-1;;;;;16562:6:33;16559:30;16556:56;;;16592:18;;:::i;:::-;16621:97;16711:6;16671:38;16703:4;16697:11;16671:38;:::i;:::-;16665:4;16621:97;:::i;:::-;16767:4;16798:2;16787:14;;16815:1;16810:649;;;;17503:1;17520:6;17517:89;;;-1:-1:-1;17572:19:33;;;17566:26;17517:89;-1:-1:-1;;16374:1:33;16370:11;;;16366:24;16362:29;16352:40;16398:1;16394:11;;;16349:57;17619:81;;16780:930;;16810:649;15670:1;15663:14;;;15707:4;15694:18;;-1:-1:-1;;16846:20:33;;;16964:222;16978:7;16975:1;16972:14;16964:222;;;17060:19;;;17054:26;17039:42;;17167:4;17152:20;;;;17120:1;17108:14;;;;16994:12;16964:222;;;16968:3;17214:6;17205:7;17202:19;17199:201;;;17275:19;;;17269:26;-1:-1:-1;;17358:1:33;17354:14;;;17370:3;17350:24;17346:37;17342:42;17327:58;17312:74;;17199:201;-1:-1:-1;;;;17446:1:33;17430:14;;;17426:22;17413:36;;-1:-1:-1;16417:1299:33:o;17721:287::-;17850:3;17888:6;17882:13;17904:66;17963:6;17958:3;17951:4;17943:6;17939:17;17904:66;:::i;:::-;17986:16;;;;;17721:287;-1:-1:-1;;17721:287:33:o;18013:222::-;18078:9;;;18099:10;;;18096:133;;;18151:10;18146:3;18142:20;18139:1;18132:31;18186:4;18183:1;18176:15;18214:4;18211:1;18204:15"},"methodIdentifiers":{"DEFAULT_ADMIN_ROLE()":"a217fddf","DOMAIN_SEPARATOR()":"3644e515","MINTER_ROLE()":"d5391393","PAUSER_ROLE()":"e63ab1e9","UPGRADE_INTERFACE_VERSION()":"ad3cb1cc","addToBlacklist(address)":"44337ea1","allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","batchAddToBlacklist(address[])":"679d665f","batchRemoveFromBlacklist(address[])":"d7162657","batchTransfer(address[],uint256[])":"88d695b2","cooldownPeriod()":"04646a49","cooldowns(address)":"01320fe2","decimals()":"313ce567","eip712Domain()":"84b0196e","getBlacklistStatus(address[])":"a6ecc5cf","getRoleAdmin(bytes32)":"248a9ca3","gnosisSafe()":"a84173ae","grantRole(bytes32,address)":"2f2ff15d","hasRole(bytes32,address)":"91d14854","initialize(uint256)":"fe4b84df","initializeV3()":"38e454b1","isBlacklisted(address)":"fe575a87","name()":"06fdde03","nonces(address)":"7ecebe00","pause()":"8456cb59","paused()":"5c975abb","permit(address,address,uint256,uint256,uint8,bytes32,bytes32)":"d505accf","proxiableUUID()":"52d1902d","removeFromBlacklist(address)":"537df3b6","renounceRole(bytes32,address)":"36568abe","revokeRole(bytes32,address)":"d547741f","setCooldown(address,uint256)":"9781a37e","setCooldownPeriod(uint256)":"80ea3de1","setGnosisSafe(address)":"c3085a3e","supportsInterface(bytes4)":"01ffc9a7","symbol()":"95d89b41","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd","unpause()":"3f4ba83a","upgradeToAndCall(address,bytes)":"4f1ef286","version()":"54fd4d50"}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"AccessControlBadConfirmation\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"neededRole\",\"type\":\"bytes32\"}],\"name\":\"AccessControlUnauthorizedAccount\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"AddressEmptyCode\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"AddressIsBlacklisted\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"cooldown\",\"type\":\"uint256\"}],\"name\":\"CooldownNotExpired\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ECDSAInvalidSignature\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"length\",\"type\":\"uint256\"}],\"name\":\"ECDSAInvalidSignatureLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"ECDSAInvalidSignatureS\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"ERC1967InvalidImplementation\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ERC1967NonPayable\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"ERC2612ExpiredSignature\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"signer\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC2612InvalidSigner\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"EnforcedPause\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ExpectedPause\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"FailedCall\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"currentNonce\",\"type\":\"uint256\"}],\"name\":\"InvalidAccountNonce\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"UUPSUnauthorizedCallContext\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"slot\",\"type\":\"bytes32\"}],\"name\":\"UUPSUnsupportedProxiableUUID\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"admin\",\"type\":\"address\"}],\"name\":\"AddressBlacklisted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"admin\",\"type\":\"address\"}],\"name\":\"AddressRemovedFromBlacklist\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"oldPeriod\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newPeriod\",\"type\":\"uint256\"}],\"name\":\"CooldownPeriodUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"cooldown\",\"type\":\"uint256\"}],\"name\":\"CooldownSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"EIP712DomainChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"oldSafe\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newSafe\",\"type\":\"address\"}],\"name\":\"GnosisSafeUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"Upgraded\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MINTER_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"PAUSER_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"UPGRADE_INTERFACE_VERSION\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"addToBlacklist\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"accounts\",\"type\":\"address[]\"}],\"name\":\"batchAddToBlacklist\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"accounts\",\"type\":\"address[]\"}],\"name\":\"batchRemoveFromBlacklist\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"recipients\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"name\":\"batchTransfer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"cooldownPeriod\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"cooldowns\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"eip712Domain\",\"outputs\":[{\"internalType\":\"bytes1\",\"name\":\"fields\",\"type\":\"bytes1\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"version\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"chainId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"verifyingContract\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"},{\"internalType\":\"uint256[]\",\"name\":\"extensions\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"accounts\",\"type\":\"address[]\"}],\"name\":\"getBlacklistStatus\",\"outputs\":[{\"internalType\":\"bool[]\",\"name\":\"statuses\",\"type\":\"bool[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"gnosisSafe\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"initialSupply\",\"type\":\"uint256\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"initializeV3\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"isBlacklisted\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"permit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"proxiableUUID\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"removeFromBlacklist\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"callerConfirmation\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"cooldown\",\"type\":\"uint256\"}],\"name\":\"setCooldown\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_cooldownPeriod\",\"type\":\"uint256\"}],\"name\":\"setCooldownPeriod\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_gnosisSafe\",\"type\":\"address\"}],\"name\":\"setGnosisSafe\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unpause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newImplementation\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"upgradeToAndCall\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"version\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Version 3 with Blacklist functionality for token transfers\",\"errors\":{\"AccessControlBadConfirmation()\":[{\"details\":\"The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}.\"}],\"AccessControlUnauthorizedAccount(address,bytes32)\":[{\"details\":\"The `account` is missing a role.\"}],\"AddressEmptyCode(address)\":[{\"details\":\"There's no code at `target` (it is not a contract).\"}],\"ECDSAInvalidSignature()\":[{\"details\":\"The signature derives the `address(0)`.\"}],\"ECDSAInvalidSignatureLength(uint256)\":[{\"details\":\"The signature has an invalid length.\"}],\"ECDSAInvalidSignatureS(bytes32)\":[{\"details\":\"The signature has an S value that is in the upper half order.\"}],\"ERC1967InvalidImplementation(address)\":[{\"details\":\"The `implementation` of the proxy is invalid.\"}],\"ERC1967NonPayable()\":[{\"details\":\"An upgrade function sees `msg.value > 0` that may be lost.\"}],\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC2612ExpiredSignature(uint256)\":[{\"details\":\"Permit deadline has expired.\"}],\"ERC2612InvalidSigner(address,address)\":[{\"details\":\"Mismatched signature.\"}],\"EnforcedPause()\":[{\"details\":\"The operation failed because the contract is paused.\"}],\"ExpectedPause()\":[{\"details\":\"The operation failed because the contract is not paused.\"}],\"FailedCall()\":[{\"details\":\"A call to an address target failed. The target may have reverted.\"}],\"InvalidAccountNonce(address,uint256)\":[{\"details\":\"The nonce used for an `account` is not the expected current nonce.\"}],\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}],\"UUPSUnauthorizedCallContext()\":[{\"details\":\"The call is from an unauthorized context.\"}],\"UUPSUnsupportedProxiableUUID(bytes32)\":[{\"details\":\"The storage `slot` is unsupported as a UUID.\"}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"EIP712DomainChanged()\":{\"details\":\"MAY be emitted to signal that the domain could have changed.\"},\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"},\"Paused(address)\":{\"details\":\"Emitted when the pause is triggered by `account`.\"},\"RoleAdminChanged(bytes32,bytes32,bytes32)\":{\"details\":\"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted to signal this.\"},\"RoleGranted(bytes32,address,address)\":{\"details\":\"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call. This account bears the admin role (for the granted role). Expected in cases where the role was granted using the internal {AccessControl-_grantRole}.\"},\"RoleRevoked(bytes32,address,address)\":{\"details\":\"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"},\"Unpaused(address)\":{\"details\":\"Emitted when the pause is lifted by `account`.\"},\"Upgraded(address)\":{\"details\":\"Emitted when the implementation is upgraded.\"}},\"kind\":\"dev\",\"methods\":{\"DOMAIN_SEPARATOR()\":{\"details\":\"Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\"},\"addToBlacklist(address)\":{\"details\":\"Add address to blacklist (Admin only)\",\"params\":{\"account\":\"Address to blacklist\"}},\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"batchAddToBlacklist(address[])\":{\"details\":\"Batch add addresses to blacklist (Admin only)\",\"params\":{\"accounts\":\"Array of addresses to blacklist\"}},\"batchRemoveFromBlacklist(address[])\":{\"details\":\"Batch remove addresses from blacklist (Admin only)\",\"params\":{\"accounts\":\"Array of addresses to remove from blacklist\"}},\"batchTransfer(address[],uint256[])\":{\"details\":\"Batch transfer function\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"eip712Domain()\":{\"details\":\"returns the fields and values that describe the domain separator used by this contract for EIP-712 signature.\"},\"getBlacklistStatus(address[])\":{\"details\":\"Get blacklist status for multiple addresses\",\"params\":{\"accounts\":\"Array of addresses to check\"},\"returns\":{\"statuses\":\"Array of blacklist statuses\"}},\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"initialize(uint256)\":{\"details\":\"Initialize the token\",\"params\":{\"initialSupply\":\"Initial token supply (1 billion tokens)\"}},\"initializeV3()\":{\"details\":\"Initialize V3 - only callable once\"},\"isBlacklisted(address)\":{\"details\":\"Check if address is blacklisted\",\"params\":{\"account\":\"Address to check\"},\"returns\":{\"_0\":\"bool True if blacklisted\"}},\"name()\":{\"details\":\"Returns the name of the token.\"},\"nonces(address)\":{\"details\":\"Returns the current nonce for `owner`. This value must be included whenever a signature is generated for {permit}. Every successful call to {permit} increases ``owner``'s nonce by one. This prevents a signature from being used multiple times.\"},\"pause()\":{\"details\":\"Pause token transfers\"},\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"},\"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)\":{\"details\":\"Sets `value` as the allowance of `spender` over ``owner``'s tokens, given ``owner``'s signed approval. IMPORTANT: The same issues {IERC20-approve} has related to transaction ordering also apply here. Emits an {Approval} event. Requirements: - `spender` cannot be the zero address. - `deadline` must be a timestamp in the future. - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner` over the EIP712-formatted function arguments. - the signature must use ``owner``'s current nonce (see {nonces}). For more information on the signature format, see the https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP section]. CAUTION: See Security Considerations above.\"},\"proxiableUUID()\":{\"details\":\"Implementation of the ERC-1822 {proxiableUUID} function. This returns the storage slot used by the implementation. It is used to validate the implementation's compatibility when performing an upgrade. IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier.\"},\"removeFromBlacklist(address)\":{\"details\":\"Remove address from blacklist (Admin only)\",\"params\":{\"account\":\"Address to remove from blacklist\"}},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`. May emit a {RoleRevoked} event.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event.\"},\"setCooldown(address,uint256)\":{\"details\":\"Set cooldown for an account\"},\"setCooldownPeriod(uint256)\":{\"details\":\"Set cooldown period\"},\"setGnosisSafe(address)\":{\"details\":\"Set Gnosis Safe address\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"},\"unpause()\":{\"details\":\"Unpause token transfers\"},\"upgradeToAndCall(address,bytes)\":{\"custom:oz-upgrades-unsafe-allow-reachable\":\"delegatecall\",\"details\":\"Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call encoded in `data`. Calls {_authorizeUpgrade}. Emits an {Upgraded} event.\"},\"version()\":{\"details\":\"Get version of the contract\",\"returns\":{\"_0\":\"string Version string\"}}},\"title\":\"PADTokenV3\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"Adds blacklist management to prevent certain addresses from transferring tokens\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/PADTokenV3.sol\":\"PADTokenV3\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":{\"keccak256\":\"0x85a70e2b1b65e9ba456add364d22b97eb9944083df1c39c0b4bd6a4b5aa386a4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d32a33be6ca4d8e89b9e82e3f9cec7a6c4e040534152313ff55da85b8f193059\",\"dweb:/ipfs/QmeR55L8t2A8xZ1nvT5y4yVWfFbbmpaGAtGBMz3GGNpuyP\"]},\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0xdb4d24ee2c087c391d587cd17adfe5b3f9d93b3110b1388c2ab6c7c0ad1dcd05\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ab7b6d5b9e2b88176312967fe0f0e78f3d9a1422fa5e4b64e2440c35869b5d08\",\"dweb:/ipfs/QmXKYWWyzcLg1B2k7Sb1qkEXgLCYfXecR9wYW5obRzWP1Q\"]},\"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":{\"keccak256\":\"0x574a7451e42724f7de29e2855c392a8a5020acd695169466a18459467d719d63\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5bc189f63b639ee173dd7b6fecc39baf7113bf161776aea22b34c57fdd1872ec\",\"dweb:/ipfs/QmZAf2VtjDLRULqjJkde6LNsxAg12tUqpPqgUQQZbAjgtZ\"]},\"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":{\"keccak256\":\"0xfcd09c2aa8cc3f93e12545454359f901965db312bc03833daf84de0c03e05022\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://07701188648d2ab83dab1037808298585264559bddf243bd8929037adcb984b0\",\"dweb:/ipfs/QmavmG5REdHCAWsZ8Cag26BCxAq27DRKGxr3uBg5ZYxQ51\"]},\"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20PermitUpgradeable.sol\":{\"keccak256\":\"0x075302c23ba4b3a1d2a5000947ac44bbb4e84b011ecadad6f5e3fd92cd568659\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13806b62ea930e61dfba5fbbfd4eafe135bb0e2e4d55ce8cde1407d7b20a739\",\"dweb:/ipfs/QmYjt4fwBLdKrMbGHZPqdsiwsK4obFdXdKFhQBBW5ruEuC\"]},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0xdbef5f0c787055227243a7318ef74c8a5a1108ca3a07f2b3a00ef67769e1e397\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://08e39f23d5b4692f9a40803e53a8156b72b4c1f9902a88cd65ba964db103dab9\",\"dweb:/ipfs/QmPKn6EYDgpga7KtpkA8wV2yJCYGMtc9K4LkJfhKX2RVSV\"]},\"@openzeppelin/contracts-upgradeable/utils/NoncesUpgradeable.sol\":{\"keccak256\":\"0x778f4a1546a1c6c726ecc8e2348a2789690fb8f26e12bd9d89537669167b79a4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://851d3dfe724e918ff0a064b206e1ef46b27ab0df2aa2c8af976973a22ef59827\",\"dweb:/ipfs/Qmd4wb7zX8ueYhMVBy5PJjfsANK3Ra3pKPN7qQkNsdwGHn\"]},\"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\":{\"keccak256\":\"0xa6bf6b7efe0e6625a9dcd30c5ddf52c4c24fe8372f37c7de9dbf5034746768d5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8c353ee3705bbf6fadb84c0fb10ef1b736e8ca3ca1867814349d1487ed207beb\",\"dweb:/ipfs/QmcugaPssrzGGE8q4YZKm2ZhnD3kCijjcgdWWg76nWt3FY\"]},\"@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol\":{\"keccak256\":\"0x89374b2a634f0a9c08f5891b6ecce0179bc2e0577819c787ed3268ca428c2459\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f13d2572e5bdd55e483dfac069aac47603644071616a41fce699e94368e38c13\",\"dweb:/ipfs/QmfKeyNT6vyb99vJQatPZ88UyZgXNmAiHUXSWnaR1TPE11\"]},\"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol\":{\"keccak256\":\"0x6694b63ddb2c59bbe341c846171798350e8f72fa02189fcdeaca864e28b54e1f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7d945d33e2189ac4e531e4ed228f59ca957b3898c4f9051f4b8c7ae44d72b23a\",\"dweb:/ipfs/QmRcEwubTe3xyXxthijs5fVzEgUFSxeddjd5PGfhBnkunX\"]},\"@openzeppelin/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0x3ecafd57f4d8502737e032c7a72086b6dd32bf5b69d70429e483f89cf310c2c7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b9e8a35d9edbaba568e89782eb806e16a5734a69e275f5d0d52e24537fa11653\",\"dweb:/ipfs/QmdBUAJKXXa5he87an93H96cwiv6c5XpzS1vTkiQtxyKND\"]},\"@openzeppelin/contracts/interfaces/IERC1967.sol\":{\"keccak256\":\"0x61f1ec8767d80a9fd97e30fb57b529a3ef0d2d646c938fbca30781cdc4d6e3db\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4e34ab801d50581a330540b5f78d7f284ec681ed59cb4142e90440c05bc27e72\",\"dweb:/ipfs/QmeRcreQohkvfhHo3jsaAUcqDbKCGixjXovDgzvQKfQM3Y\"]},\"@openzeppelin/contracts/interfaces/IERC5267.sol\":{\"keccak256\":\"0x28b2a1f629338ad9bfe7bdab27a478f3d04001bbde67aefb48f473e01589a05a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b13fe921b3a4db8194370374451c3243045d4852e6e27c00fe161acc3eff59ee\",\"dweb:/ipfs/QmfNmkXJsDj9x2et6BTibrbonVGhcP8bRDkRTiXuqhevvR\"]},\"@openzeppelin/contracts/interfaces/draft-IERC1822.sol\":{\"keccak256\":\"0xddd8e9df40ba9f231b829e3caad53a02da69c03d31e2e638f9f1be50207bd5b0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://108f498e5ef2873ab4a1fef748ca23709ef7aa7b61c40bd4c8f1745c95eb7951\",\"dweb:/ipfs/QmfZhCVy1mEUn2Dh1yrEmv4zfnpZQSSvW7V1BMKuxctWk4\"]},\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0xe53865a480e99e5c35c3b1fd673cdccae2b5ddb7e0260e82b19d40d99980e146\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bd6c5d37ed3bbb994f5d63f62bfec105dd9dbd11ae8cecdb93232d64a9677143\",\"dweb:/ipfs/QmefNhF6r94wZBqL2XxZMvkrGr4WgLLoWts5oasPWpMUun\"]},\"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":{\"keccak256\":\"0x299a09b824bffd95d5c9f503dc1870d98aea1d7fb40242a13004b5f3b19addc2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2a576ce7ad5133b0f0b682f58c1f78e97f0359b6d6991bbc07994b45b1526487\",\"dweb:/ipfs/QmWoUp91kDnHMmfsN9LcKCRQ5GZhemsP7Meqo2cjBcJpdi\"]},\"@openzeppelin/contracts/proxy/beacon/IBeacon.sol\":{\"keccak256\":\"0x42193c28259cdffc814b368ddf341ab97b6d6002edefb06fef668859a7aefca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d3bc03aa072ce10d5932bc7252dc777ee5a917a9eb69ca5591f48f03d5e4afd9\",\"dweb:/ipfs/QmYvi7VCFGr5t8K4ruK4LYsf1CR2jLaEpWD2Gg6MntVSXi\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x01e4bd12aef9e3d0956451e6ac9ece01554db0bc484ebc9287e5d57b4fd431d7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cb6de9142941eb74004600d0b23a0753846824648e6ddc23bc93889d03a79441\",\"dweb:/ipfs/QmckMYX9vjZNEx4pLGt6ePpvRcYuvt8s2zWoqSHxX2niHZ\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x5b0e97d38fc94a3e9031e6f6bb948991499dd5fd9fbe74898326e1b5cecc61b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f326d045fa9d7fa02f53b5c0750830127e98c4c3d104ef207ed3bb272d049f89\",\"dweb:/ipfs/QmTGhzTSMdCRZr5JWA48ZoujUPT6LWK3qJnQx2Xq8Z6i3m\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\":{\"keccak256\":\"0x79ee51693b808ffdb306266b04709183c403b04078211b149794bc11d6c3fc39\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c50b360520e990c689b887ed508c6f6acff9309dc207c0f05ad8ebcacf4b98cb\",\"dweb:/ipfs/QmeXjWT5Z5X5UzMbiBd3MoEUnfNAtV8HpoasznLkq34JWZ\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x97666faabffacffa761c0a8c4946e3a717d6b133ae90ee10c068b9d59c8cfcdb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a73a610b6d0b3b2e3be13a48a57421c46c9e83b0cfc4bfc7bf400dfcc12f28cf\",\"dweb:/ipfs/QmXBbeNAodKW36xWTYW9yK16QtVUaq1ieB5FusggyEX6T8\"]},\"@openzeppelin/contracts/utils/Errors.sol\":{\"keccak256\":\"0x74545f3228c285dd99d357eeb35da9b9d87acf00fcf5ca5b2be7a4baf5b8bfc4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ef798292c67a9e6d922a6ebbb6a8e93db894736947db625da9f14acf047792e\",\"dweb:/ipfs/Qmb95rNRHCky4JeJF58Zgh87NvkniWpULc2SEngMowTAKd\"]},\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0x65fd7c9cac0812d510bbaac59b007da1df6f3820f939fca04fd2b7ed07e341c6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f30f7cf8b553278b1bbad1f6aaf4b227b98b1532b3c16dbca92d815d627779df\",\"dweb:/ipfs/QmTkA1v7mrd2ymdTcPYFuNjguKhQx99npcPYKAdMfgfKvB\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0xb9355bac6de0c0dd42a7f3c4ad3e6e7bdff95109e1bb6ba5be0dce666b314921\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b8449ecfc29ae42905bcfd8fa232bd73eccb14365f1894a3cc1abcce90639379\",\"dweb:/ipfs/QmWwdkEJXZjk57T7T5JRogJzEhcT7JpnmxEVfHAwFSMuZ1\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x831320073a13168dd04b3b7dc0d7c3c4fd1f8d699c3b3709900d1dd7e52ae931\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d37bb18e9824f73bd0cbf259d2326028031e60ed89bf4eba095c73d605f243ed\",\"dweb:/ipfs/QmWxNLK1eZBwA1GdxzwqGkarHhbciAvM8bg6qcRafeS47J\"]},\"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":{\"keccak256\":\"0xbe22c37080f9052e0e18062a527a19f9354703ee48888c71baf0abd747a34a8b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://eb85649fce273c8c19eeba7db292f92b6653263ae39f12e427a066b998c9cec4\",\"dweb:/ipfs/QmRaTEqA15siRJoiPCuvtzK29dgXxQu94n4JBabHUSFXXQ\"]},\"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol\":{\"keccak256\":\"0xd7999d7b3c3a121215a15e205b381e06cfff55c47f67220d1605cd96cd0848d8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e259964860d8625d6c33d841c870af390834c037c4459c8b14231f1bd440f682\",\"dweb:/ipfs/QmWyFHT1oipmXVN4NLxrdBL9nayTzFfPrkAQbRozeWdhKQ\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0xdbf01f069eb0b0a7a6ace73b250fdeb7e338d719bb40b5dd1fe7069004a36607\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1fc4a1dfe79b2adc6e22af84838c217946853d28a4291fcd8bbcc6fb226a0470\",\"dweb:/ipfs/QmaJbxCcdE76P1a8rjxkBqTXAfF11XebfwURamUB92G4WN\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xe09e820269ce218384211e4bf344056f0aab77a27b953012a3fb647d7631b7c2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0a8e7a7218203b059b4b4a423a93d6066eb9cec0a8affde80bb4a6c44d6a14a0\",\"dweb:/ipfs/QmSbmEzwGBFD3TntztEE5ZFLBqP1SZYiQhA1dLoDgzrcz4\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0xf1e73884b1e40057009853b1ee55ec66413cfa5eaa9074e5dd85bd070ea8b91c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1d29fd43e41bd73ac0fb65ac77c309c88651a42f8e49989cf1558f64f731697b\",\"dweb:/ipfs/Qmd61ZCYWHj9PJ3uSXaJekif8tkKgmfU6PLunszwhY2QX3\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0x7c35afe4f4b7e64ea6efa5216f51790d8ce80cd764a00790203a59ebf20202ec\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0b264b01df570c48603e16066aea73d3200c78523f9d94dd587a61eafa33705c\",\"dweb:/ipfs/QmayVg47dBKddrgrgsbr4Wu8hQBWZk5oMpiUtXKz1uEo1v\"]},\"contracts/PADTokenV2.sol\":{\"keccak256\":\"0x5df5ab121558f8227ab43d3bf16565d72b15ac41d0fc3ff1cf47bc2054d4a416\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6574669417842565740ecd2e9ed5af74fd53b88fb748d045c3da61fea2601b30\",\"dweb:/ipfs/QmVWZ6fxe2mNo8WJbaWXGSSk4JBQiN9rCjgqFHzMkxTTom\"]},\"contracts/PADTokenV3.sol\":{\"keccak256\":\"0x291e837fb5d388283f3ffa1b1a71a86908bd0faa66cc20c94beb716f0134bf15\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7445cd693be3a0f4bf85e91977d1b8bfe99dd1fea3907226b6ee1ad87d2a9f58\",\"dweb:/ipfs/QmSLPPvYCXuzHQMRv3M9YPXG9rJmJaMQyyJhJ2cZPHduaa\"]}},\"version\":1}","storageLayout":{"storage":[{"astId":8890,"contract":"contracts/PADTokenV3.sol:PADTokenV3","label":"gnosisSafe","offset":0,"slot":"0","type":"t_address"},{"astId":8892,"contract":"contracts/PADTokenV3.sol:PADTokenV3","label":"cooldownPeriod","offset":0,"slot":"1","type":"t_uint256"},{"astId":8896,"contract":"contracts/PADTokenV3.sol:PADTokenV3","label":"cooldowns","offset":0,"slot":"2","type":"t_mapping(t_address,t_uint256)"},{"astId":9203,"contract":"contracts/PADTokenV3.sol:PADTokenV3","label":"_blacklisted","offset":0,"slot":"3","type":"t_mapping(t_address,t_bool)"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"},"t_bool":{"encoding":"inplace","label":"bool","numberOfBytes":"1"},"t_mapping(t_address,t_bool)":{"encoding":"mapping","key":"t_address","label":"mapping(address => bool)","numberOfBytes":"32","value":"t_bool"},"t_mapping(t_address,t_uint256)":{"encoding":"mapping","key":"t_address","label":"mapping(address => uint256)","numberOfBytes":"32","value":"t_uint256"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"}}}}}}}}