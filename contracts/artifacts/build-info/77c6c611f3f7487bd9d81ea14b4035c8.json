{"id":"77c6c611f3f7487bd9d81ea14b4035c8","_format":"hh-sol-build-info-1","solcVersion":"0.8.28","solcLongVersion":"0.8.28+commit.7893614a","input":{"language":"Solidity","sources":{"@openzeppelin/contracts/access/AccessControl.sol":{"content":"// SPDX-License-Identifier: MIT\r\n// OpenZeppelin Contracts (last updated v5.3.0) (access/AccessControl.sol)\r\n\r\npragma solidity ^0.8.20;\r\n\r\nimport {IAccessControl} from \"./IAccessControl.sol\";\r\nimport {Context} from \"../utils/Context.sol\";\r\nimport {ERC165} from \"../utils/introspection/ERC165.sol\";\r\n\r\n/**\r\n * @dev Contract module that allows children to implement role-based access\r\n * control mechanisms. This is a lightweight version that doesn't allow enumerating role\r\n * members except through off-chain means by accessing the contract event logs. Some\r\n * applications may benefit from on-chain enumerability, for those cases see\r\n * {AccessControlEnumerable}.\r\n *\r\n * Roles are referred to by their `bytes32` identifier. These should be exposed\r\n * in the external API and be unique. The best way to achieve this is by\r\n * using `public constant` hash digests:\r\n *\r\n * ```solidity\r\n * bytes32 public constant MY_ROLE = keccak256(\"MY_ROLE\");\r\n * ```\r\n *\r\n * Roles can be used to represent a set of permissions. To restrict access to a\r\n * function call, use {hasRole}:\r\n *\r\n * ```solidity\r\n * function foo() public {\r\n *     require(hasRole(MY_ROLE, msg.sender));\r\n *     ...\r\n * }\r\n * ```\r\n *\r\n * Roles can be granted and revoked dynamically via the {grantRole} and\r\n * {revokeRole} functions. Each role has an associated admin role, and only\r\n * accounts that have a role's admin role can call {grantRole} and {revokeRole}.\r\n *\r\n * By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means\r\n * that only accounts with this role will be able to grant or revoke other\r\n * roles. More complex role relationships can be created by using\r\n * {_setRoleAdmin}.\r\n *\r\n * WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to\r\n * grant and revoke this role. Extra precautions should be taken to secure\r\n * accounts that have been granted it. We recommend using {AccessControlDefaultAdminRules}\r\n * to enforce additional security measures for this role.\r\n */\r\nabstract contract AccessControl is Context, IAccessControl, ERC165 {\r\n    struct RoleData {\r\n        mapping(address account => bool) hasRole;\r\n        bytes32 adminRole;\r\n    }\r\n\r\n    mapping(bytes32 role => RoleData) private _roles;\r\n\r\n    bytes32 public constant DEFAULT_ADMIN_ROLE = 0x00;\r\n\r\n    /**\r\n     * @dev Modifier that checks that an account has a specific role. Reverts\r\n     * with an {AccessControlUnauthorizedAccount} error including the required role.\r\n     */\r\n    modifier onlyRole(bytes32 role) {\r\n        _checkRole(role);\r\n        _;\r\n    }\r\n\r\n    /**\r\n     * @dev See {IERC165-supportsInterface}.\r\n     */\r\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\r\n        return interfaceId == type(IAccessControl).interfaceId || super.supportsInterface(interfaceId);\r\n    }\r\n\r\n    /**\r\n     * @dev Returns `true` if `account` has been granted `role`.\r\n     */\r\n    function hasRole(bytes32 role, address account) public view virtual returns (bool) {\r\n        return _roles[role].hasRole[account];\r\n    }\r\n\r\n    /**\r\n     * @dev Reverts with an {AccessControlUnauthorizedAccount} error if `_msgSender()`\r\n     * is missing `role`. Overriding this function changes the behavior of the {onlyRole} modifier.\r\n     */\r\n    function _checkRole(bytes32 role) internal view virtual {\r\n        _checkRole(role, _msgSender());\r\n    }\r\n\r\n    /**\r\n     * @dev Reverts with an {AccessControlUnauthorizedAccount} error if `account`\r\n     * is missing `role`.\r\n     */\r\n    function _checkRole(bytes32 role, address account) internal view virtual {\r\n        if (!hasRole(role, account)) {\r\n            revert AccessControlUnauthorizedAccount(account, role);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the admin role that controls `role`. See {grantRole} and\r\n     * {revokeRole}.\r\n     *\r\n     * To change a role's admin, use {_setRoleAdmin}.\r\n     */\r\n    function getRoleAdmin(bytes32 role) public view virtual returns (bytes32) {\r\n        return _roles[role].adminRole;\r\n    }\r\n\r\n    /**\r\n     * @dev Grants `role` to `account`.\r\n     *\r\n     * If `account` had not been already granted `role`, emits a {RoleGranted}\r\n     * event.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - the caller must have ``role``'s admin role.\r\n     *\r\n     * May emit a {RoleGranted} event.\r\n     */\r\n    function grantRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {\r\n        _grantRole(role, account);\r\n    }\r\n\r\n    /**\r\n     * @dev Revokes `role` from `account`.\r\n     *\r\n     * If `account` had been granted `role`, emits a {RoleRevoked} event.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - the caller must have ``role``'s admin role.\r\n     *\r\n     * May emit a {RoleRevoked} event.\r\n     */\r\n    function revokeRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {\r\n        _revokeRole(role, account);\r\n    }\r\n\r\n    /**\r\n     * @dev Revokes `role` from the calling account.\r\n     *\r\n     * Roles are often managed via {grantRole} and {revokeRole}: this function's\r\n     * purpose is to provide a mechanism for accounts to lose their privileges\r\n     * if they are compromised (such as when a trusted device is misplaced).\r\n     *\r\n     * If the calling account had been revoked `role`, emits a {RoleRevoked}\r\n     * event.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - the caller must be `callerConfirmation`.\r\n     *\r\n     * May emit a {RoleRevoked} event.\r\n     */\r\n    function renounceRole(bytes32 role, address callerConfirmation) public virtual {\r\n        if (callerConfirmation != _msgSender()) {\r\n            revert AccessControlBadConfirmation();\r\n        }\r\n\r\n        _revokeRole(role, callerConfirmation);\r\n    }\r\n\r\n    /**\r\n     * @dev Sets `adminRole` as ``role``'s admin role.\r\n     *\r\n     * Emits a {RoleAdminChanged} event.\r\n     */\r\n    function _setRoleAdmin(bytes32 role, bytes32 adminRole) internal virtual {\r\n        bytes32 previousAdminRole = getRoleAdmin(role);\r\n        _roles[role].adminRole = adminRole;\r\n        emit RoleAdminChanged(role, previousAdminRole, adminRole);\r\n    }\r\n\r\n    /**\r\n     * @dev Attempts to grant `role` to `account` and returns a boolean indicating if `role` was granted.\r\n     *\r\n     * Internal function without access restriction.\r\n     *\r\n     * May emit a {RoleGranted} event.\r\n     */\r\n    function _grantRole(bytes32 role, address account) internal virtual returns (bool) {\r\n        if (!hasRole(role, account)) {\r\n            _roles[role].hasRole[account] = true;\r\n            emit RoleGranted(role, account, _msgSender());\r\n            return true;\r\n        } else {\r\n            return false;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Attempts to revoke `role` from `account` and returns a boolean indicating if `role` was revoked.\r\n     *\r\n     * Internal function without access restriction.\r\n     *\r\n     * May emit a {RoleRevoked} event.\r\n     */\r\n    function _revokeRole(bytes32 role, address account) internal virtual returns (bool) {\r\n        if (hasRole(role, account)) {\r\n            _roles[role].hasRole[account] = false;\r\n            emit RoleRevoked(role, account, _msgSender());\r\n            return true;\r\n        } else {\r\n            return false;\r\n        }\r\n    }\r\n}\r\n"},"@openzeppelin/contracts/access/IAccessControl.sol":{"content":"// SPDX-License-Identifier: MIT\r\n// OpenZeppelin Contracts (last updated v5.3.0) (access/IAccessControl.sol)\r\n\r\npragma solidity ^0.8.20;\r\n\r\n/**\r\n * @dev External interface of AccessControl declared to support ERC-165 detection.\r\n */\r\ninterface IAccessControl {\r\n    /**\r\n     * @dev The `account` is missing a role.\r\n     */\r\n    error AccessControlUnauthorizedAccount(address account, bytes32 neededRole);\r\n\r\n    /**\r\n     * @dev The caller of a function is not the expected one.\r\n     *\r\n     * NOTE: Don't confuse with {AccessControlUnauthorizedAccount}.\r\n     */\r\n    error AccessControlBadConfirmation();\r\n\r\n    /**\r\n     * @dev Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole`\r\n     *\r\n     * `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite\r\n     * {RoleAdminChanged} not being emitted to signal this.\r\n     */\r\n    event RoleAdminChanged(bytes32 indexed role, bytes32 indexed previousAdminRole, bytes32 indexed newAdminRole);\r\n\r\n    /**\r\n     * @dev Emitted when `account` is granted `role`.\r\n     *\r\n     * `sender` is the account that originated the contract call. This account bears the admin role (for the granted role).\r\n     * Expected in cases where the role was granted using the internal {AccessControl-_grantRole}.\r\n     */\r\n    event RoleGranted(bytes32 indexed role, address indexed account, address indexed sender);\r\n\r\n    /**\r\n     * @dev Emitted when `account` is revoked `role`.\r\n     *\r\n     * `sender` is the account that originated the contract call:\r\n     *   - if using `revokeRole`, it is the admin role bearer\r\n     *   - if using `renounceRole`, it is the role bearer (i.e. `account`)\r\n     */\r\n    event RoleRevoked(bytes32 indexed role, address indexed account, address indexed sender);\r\n\r\n    /**\r\n     * @dev Returns `true` if `account` has been granted `role`.\r\n     */\r\n    function hasRole(bytes32 role, address account) external view returns (bool);\r\n\r\n    /**\r\n     * @dev Returns the admin role that controls `role`. See {grantRole} and\r\n     * {revokeRole}.\r\n     *\r\n     * To change a role's admin, use {AccessControl-_setRoleAdmin}.\r\n     */\r\n    function getRoleAdmin(bytes32 role) external view returns (bytes32);\r\n\r\n    /**\r\n     * @dev Grants `role` to `account`.\r\n     *\r\n     * If `account` had not been already granted `role`, emits a {RoleGranted}\r\n     * event.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - the caller must have ``role``'s admin role.\r\n     */\r\n    function grantRole(bytes32 role, address account) external;\r\n\r\n    /**\r\n     * @dev Revokes `role` from `account`.\r\n     *\r\n     * If `account` had been granted `role`, emits a {RoleRevoked} event.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - the caller must have ``role``'s admin role.\r\n     */\r\n    function revokeRole(bytes32 role, address account) external;\r\n\r\n    /**\r\n     * @dev Revokes `role` from the calling account.\r\n     *\r\n     * Roles are often managed via {grantRole} and {revokeRole}: this function's\r\n     * purpose is to provide a mechanism for accounts to lose their privileges\r\n     * if they are compromised (such as when a trusted device is misplaced).\r\n     *\r\n     * If the calling account had been granted `role`, emits a {RoleRevoked}\r\n     * event.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - the caller must be `callerConfirmation`.\r\n     */\r\n    function renounceRole(bytes32 role, address callerConfirmation) external;\r\n}\r\n"},"@openzeppelin/contracts/interfaces/draft-IERC6093.sol":{"content":"// SPDX-License-Identifier: MIT\r\n// OpenZeppelin Contracts (last updated v5.1.0) (interfaces/draft-IERC6093.sol)\r\npragma solidity ^0.8.20;\r\n\r\n/**\r\n * @dev Standard ERC-20 Errors\r\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.\r\n */\r\ninterface IERC20Errors {\r\n    /**\r\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\r\n     * @param sender Address whose tokens are being transferred.\r\n     * @param balance Current balance for the interacting account.\r\n     * @param needed Minimum amount required to perform a transfer.\r\n     */\r\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\r\n\r\n    /**\r\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\r\n     * @param sender Address whose tokens are being transferred.\r\n     */\r\n    error ERC20InvalidSender(address sender);\r\n\r\n    /**\r\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\r\n     * @param receiver Address to which tokens are being transferred.\r\n     */\r\n    error ERC20InvalidReceiver(address receiver);\r\n\r\n    /**\r\n     * @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\r\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\r\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\r\n     * @param needed Minimum amount required to perform a transfer.\r\n     */\r\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\r\n\r\n    /**\r\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\r\n     * @param approver Address initiating an approval operation.\r\n     */\r\n    error ERC20InvalidApprover(address approver);\r\n\r\n    /**\r\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\r\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\r\n     */\r\n    error ERC20InvalidSpender(address spender);\r\n}\r\n\r\n/**\r\n * @dev Standard ERC-721 Errors\r\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.\r\n */\r\ninterface IERC721Errors {\r\n    /**\r\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20.\r\n     * Used in balance queries.\r\n     * @param owner Address of the current owner of a token.\r\n     */\r\n    error ERC721InvalidOwner(address owner);\r\n\r\n    /**\r\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\r\n     * @param tokenId Identifier number of a token.\r\n     */\r\n    error ERC721NonexistentToken(uint256 tokenId);\r\n\r\n    /**\r\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\r\n     * @param sender Address whose tokens are being transferred.\r\n     * @param tokenId Identifier number of a token.\r\n     * @param owner Address of the current owner of a token.\r\n     */\r\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\r\n\r\n    /**\r\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\r\n     * @param sender Address whose tokens are being transferred.\r\n     */\r\n    error ERC721InvalidSender(address sender);\r\n\r\n    /**\r\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\r\n     * @param receiver Address to which tokens are being transferred.\r\n     */\r\n    error ERC721InvalidReceiver(address receiver);\r\n\r\n    /**\r\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\r\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\r\n     * @param tokenId Identifier number of a token.\r\n     */\r\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\r\n\r\n    /**\r\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\r\n     * @param approver Address initiating an approval operation.\r\n     */\r\n    error ERC721InvalidApprover(address approver);\r\n\r\n    /**\r\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\r\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\r\n     */\r\n    error ERC721InvalidOperator(address operator);\r\n}\r\n\r\n/**\r\n * @dev Standard ERC-1155 Errors\r\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.\r\n */\r\ninterface IERC1155Errors {\r\n    /**\r\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\r\n     * @param sender Address whose tokens are being transferred.\r\n     * @param balance Current balance for the interacting account.\r\n     * @param needed Minimum amount required to perform a transfer.\r\n     * @param tokenId Identifier number of a token.\r\n     */\r\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\r\n\r\n    /**\r\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\r\n     * @param sender Address whose tokens are being transferred.\r\n     */\r\n    error ERC1155InvalidSender(address sender);\r\n\r\n    /**\r\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\r\n     * @param receiver Address to which tokens are being transferred.\r\n     */\r\n    error ERC1155InvalidReceiver(address receiver);\r\n\r\n    /**\r\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\r\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\r\n     * @param owner Address of the current owner of a token.\r\n     */\r\n    error ERC1155MissingApprovalForAll(address operator, address owner);\r\n\r\n    /**\r\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\r\n     * @param approver Address initiating an approval operation.\r\n     */\r\n    error ERC1155InvalidApprover(address approver);\r\n\r\n    /**\r\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\r\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\r\n     */\r\n    error ERC1155InvalidOperator(address operator);\r\n\r\n    /**\r\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\r\n     * Used in batch transfers.\r\n     * @param idsLength Length of the array of token identifiers\r\n     * @param valuesLength Length of the array of token amounts\r\n     */\r\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\r\n}\r\n"},"@openzeppelin/contracts/interfaces/IERC5267.sol":{"content":"// SPDX-License-Identifier: MIT\r\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/IERC5267.sol)\r\n\r\npragma solidity ^0.8.20;\r\n\r\ninterface IERC5267 {\r\n    /**\r\n     * @dev MAY be emitted to signal that the domain could have changed.\r\n     */\r\n    event EIP712DomainChanged();\r\n\r\n    /**\r\n     * @dev returns the fields and values that describe the domain separator used by this contract for EIP-712\r\n     * signature.\r\n     */\r\n    function eip712Domain()\r\n        external\r\n        view\r\n        returns (\r\n            bytes1 fields,\r\n            string memory name,\r\n            string memory version,\r\n            uint256 chainId,\r\n            address verifyingContract,\r\n            bytes32 salt,\r\n            uint256[] memory extensions\r\n        );\r\n}\r\n"},"@openzeppelin/contracts/token/ERC20/ERC20.sol":{"content":"// SPDX-License-Identifier: MIT\r\n// OpenZeppelin Contracts (last updated v5.3.0) (token/ERC20/ERC20.sol)\r\n\r\npragma solidity ^0.8.20;\r\n\r\nimport {IERC20} from \"./IERC20.sol\";\r\nimport {IERC20Metadata} from \"./extensions/IERC20Metadata.sol\";\r\nimport {Context} from \"../../utils/Context.sol\";\r\nimport {IERC20Errors} from \"../../interfaces/draft-IERC6093.sol\";\r\n\r\n/**\r\n * @dev Implementation of the {IERC20} interface.\r\n *\r\n * This implementation is agnostic to the way tokens are created. This means\r\n * that a supply mechanism has to be added in a derived contract using {_mint}.\r\n *\r\n * TIP: For a detailed writeup see our guide\r\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\r\n * to implement supply mechanisms].\r\n *\r\n * The default value of {decimals} is 18. To change this, you should override\r\n * this function so it returns a different value.\r\n *\r\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\r\n * instead returning `false` on failure. This behavior is nonetheless\r\n * conventional and does not conflict with the expectations of ERC-20\r\n * applications.\r\n */\r\nabstract contract ERC20 is Context, IERC20, IERC20Metadata, IERC20Errors {\r\n    mapping(address account => uint256) private _balances;\r\n\r\n    mapping(address account => mapping(address spender => uint256)) private _allowances;\r\n\r\n    uint256 private _totalSupply;\r\n\r\n    string private _name;\r\n    string private _symbol;\r\n\r\n    /**\r\n     * @dev Sets the values for {name} and {symbol}.\r\n     *\r\n     * Both values are immutable: they can only be set once during construction.\r\n     */\r\n    constructor(string memory name_, string memory symbol_) {\r\n        _name = name_;\r\n        _symbol = symbol_;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the name of the token.\r\n     */\r\n    function name() public view virtual returns (string memory) {\r\n        return _name;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the symbol of the token, usually a shorter version of the\r\n     * name.\r\n     */\r\n    function symbol() public view virtual returns (string memory) {\r\n        return _symbol;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the number of decimals used to get its user representation.\r\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\r\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\r\n     *\r\n     * Tokens usually opt for a value of 18, imitating the relationship between\r\n     * Ether and Wei. This is the default value returned by this function, unless\r\n     * it's overridden.\r\n     *\r\n     * NOTE: This information is only used for _display_ purposes: it in\r\n     * no way affects any of the arithmetic of the contract, including\r\n     * {IERC20-balanceOf} and {IERC20-transfer}.\r\n     */\r\n    function decimals() public view virtual returns (uint8) {\r\n        return 18;\r\n    }\r\n\r\n    /**\r\n     * @dev See {IERC20-totalSupply}.\r\n     */\r\n    function totalSupply() public view virtual returns (uint256) {\r\n        return _totalSupply;\r\n    }\r\n\r\n    /**\r\n     * @dev See {IERC20-balanceOf}.\r\n     */\r\n    function balanceOf(address account) public view virtual returns (uint256) {\r\n        return _balances[account];\r\n    }\r\n\r\n    /**\r\n     * @dev See {IERC20-transfer}.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `to` cannot be the zero address.\r\n     * - the caller must have a balance of at least `value`.\r\n     */\r\n    function transfer(address to, uint256 value) public virtual returns (bool) {\r\n        address owner = _msgSender();\r\n        _transfer(owner, to, value);\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * @dev See {IERC20-allowance}.\r\n     */\r\n    function allowance(address owner, address spender) public view virtual returns (uint256) {\r\n        return _allowances[owner][spender];\r\n    }\r\n\r\n    /**\r\n     * @dev See {IERC20-approve}.\r\n     *\r\n     * NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\r\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `spender` cannot be the zero address.\r\n     */\r\n    function approve(address spender, uint256 value) public virtual returns (bool) {\r\n        address owner = _msgSender();\r\n        _approve(owner, spender, value);\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * @dev See {IERC20-transferFrom}.\r\n     *\r\n     * Skips emitting an {Approval} event indicating an allowance update. This is not\r\n     * required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve].\r\n     *\r\n     * NOTE: Does not update the allowance if the current allowance\r\n     * is the maximum `uint256`.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `from` and `to` cannot be the zero address.\r\n     * - `from` must have a balance of at least `value`.\r\n     * - the caller must have allowance for ``from``'s tokens of at least\r\n     * `value`.\r\n     */\r\n    function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {\r\n        address spender = _msgSender();\r\n        _spendAllowance(from, spender, value);\r\n        _transfer(from, to, value);\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * @dev Moves a `value` amount of tokens from `from` to `to`.\r\n     *\r\n     * This internal function is equivalent to {transfer}, and can be used to\r\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\r\n     *\r\n     * Emits a {Transfer} event.\r\n     *\r\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\r\n     */\r\n    function _transfer(address from, address to, uint256 value) internal {\r\n        if (from == address(0)) {\r\n            revert ERC20InvalidSender(address(0));\r\n        }\r\n        if (to == address(0)) {\r\n            revert ERC20InvalidReceiver(address(0));\r\n        }\r\n        _update(from, to, value);\r\n    }\r\n\r\n    /**\r\n     * @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\r\n     * (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\r\n     * this function.\r\n     *\r\n     * Emits a {Transfer} event.\r\n     */\r\n    function _update(address from, address to, uint256 value) internal virtual {\r\n        if (from == address(0)) {\r\n            // Overflow check required: The rest of the code assumes that totalSupply never overflows\r\n            _totalSupply += value;\r\n        } else {\r\n            uint256 fromBalance = _balances[from];\r\n            if (fromBalance < value) {\r\n                revert ERC20InsufficientBalance(from, fromBalance, value);\r\n            }\r\n            unchecked {\r\n                // Overflow not possible: value <= fromBalance <= totalSupply.\r\n                _balances[from] = fromBalance - value;\r\n            }\r\n        }\r\n\r\n        if (to == address(0)) {\r\n            unchecked {\r\n                // Overflow not possible: value <= totalSupply or value <= fromBalance <= totalSupply.\r\n                _totalSupply -= value;\r\n            }\r\n        } else {\r\n            unchecked {\r\n                // Overflow not possible: balance + value is at most totalSupply, which we know fits into a uint256.\r\n                _balances[to] += value;\r\n            }\r\n        }\r\n\r\n        emit Transfer(from, to, value);\r\n    }\r\n\r\n    /**\r\n     * @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\r\n     * Relies on the `_update` mechanism\r\n     *\r\n     * Emits a {Transfer} event with `from` set to the zero address.\r\n     *\r\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\r\n     */\r\n    function _mint(address account, uint256 value) internal {\r\n        if (account == address(0)) {\r\n            revert ERC20InvalidReceiver(address(0));\r\n        }\r\n        _update(address(0), account, value);\r\n    }\r\n\r\n    /**\r\n     * @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\r\n     * Relies on the `_update` mechanism.\r\n     *\r\n     * Emits a {Transfer} event with `to` set to the zero address.\r\n     *\r\n     * NOTE: This function is not virtual, {_update} should be overridden instead\r\n     */\r\n    function _burn(address account, uint256 value) internal {\r\n        if (account == address(0)) {\r\n            revert ERC20InvalidSender(address(0));\r\n        }\r\n        _update(account, address(0), value);\r\n    }\r\n\r\n    /**\r\n     * @dev Sets `value` as the allowance of `spender` over the `owner`'s tokens.\r\n     *\r\n     * This internal function is equivalent to `approve`, and can be used to\r\n     * e.g. set automatic allowances for certain subsystems, etc.\r\n     *\r\n     * Emits an {Approval} event.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `owner` cannot be the zero address.\r\n     * - `spender` cannot be the zero address.\r\n     *\r\n     * Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument.\r\n     */\r\n    function _approve(address owner, address spender, uint256 value) internal {\r\n        _approve(owner, spender, value, true);\r\n    }\r\n\r\n    /**\r\n     * @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\r\n     *\r\n     * By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\r\n     * `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\r\n     * `Approval` event during `transferFrom` operations.\r\n     *\r\n     * Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\r\n     * true using the following override:\r\n     *\r\n     * ```solidity\r\n     * function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\r\n     *     super._approve(owner, spender, value, true);\r\n     * }\r\n     * ```\r\n     *\r\n     * Requirements are the same as {_approve}.\r\n     */\r\n    function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {\r\n        if (owner == address(0)) {\r\n            revert ERC20InvalidApprover(address(0));\r\n        }\r\n        if (spender == address(0)) {\r\n            revert ERC20InvalidSpender(address(0));\r\n        }\r\n        _allowances[owner][spender] = value;\r\n        if (emitEvent) {\r\n            emit Approval(owner, spender, value);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Updates `owner`'s allowance for `spender` based on spent `value`.\r\n     *\r\n     * Does not update the allowance value in case of infinite allowance.\r\n     * Revert if not enough allowance is available.\r\n     *\r\n     * Does not emit an {Approval} event.\r\n     */\r\n    function _spendAllowance(address owner, address spender, uint256 value) internal virtual {\r\n        uint256 currentAllowance = allowance(owner, spender);\r\n        if (currentAllowance < type(uint256).max) {\r\n            if (currentAllowance < value) {\r\n                revert ERC20InsufficientAllowance(spender, currentAllowance, value);\r\n            }\r\n            unchecked {\r\n                _approve(owner, spender, currentAllowance - value, false);\r\n            }\r\n        }\r\n    }\r\n}\r\n"},"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol":{"content":"// SPDX-License-Identifier: MIT\r\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/extensions/ERC20Permit.sol)\r\n\r\npragma solidity ^0.8.20;\r\n\r\nimport {IERC20Permit} from \"./IERC20Permit.sol\";\r\nimport {ERC20} from \"../ERC20.sol\";\r\nimport {ECDSA} from \"../../../utils/cryptography/ECDSA.sol\";\r\nimport {EIP712} from \"../../../utils/cryptography/EIP712.sol\";\r\nimport {Nonces} from \"../../../utils/Nonces.sol\";\r\n\r\n/**\r\n * @dev Implementation of the ERC-20 Permit extension allowing approvals to be made via signatures, as defined in\r\n * https://eips.ethereum.org/EIPS/eip-2612[ERC-2612].\r\n *\r\n * Adds the {permit} method, which can be used to change an account's ERC-20 allowance (see {IERC20-allowance}) by\r\n * presenting a message signed by the account. By not relying on `{IERC20-approve}`, the token holder account doesn't\r\n * need to send a transaction, and thus is not required to hold Ether at all.\r\n */\r\nabstract contract ERC20Permit is ERC20, IERC20Permit, EIP712, Nonces {\r\n    bytes32 private constant PERMIT_TYPEHASH =\r\n        keccak256(\"Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)\");\r\n\r\n    /**\r\n     * @dev Permit deadline has expired.\r\n     */\r\n    error ERC2612ExpiredSignature(uint256 deadline);\r\n\r\n    /**\r\n     * @dev Mismatched signature.\r\n     */\r\n    error ERC2612InvalidSigner(address signer, address owner);\r\n\r\n    /**\r\n     * @dev Initializes the {EIP712} domain separator using the `name` parameter, and setting `version` to `\"1\"`.\r\n     *\r\n     * It's a good idea to use the same `name` that is defined as the ERC-20 token name.\r\n     */\r\n    constructor(string memory name) EIP712(name, \"1\") {}\r\n\r\n    /**\r\n     * @inheritdoc IERC20Permit\r\n     */\r\n    function permit(\r\n        address owner,\r\n        address spender,\r\n        uint256 value,\r\n        uint256 deadline,\r\n        uint8 v,\r\n        bytes32 r,\r\n        bytes32 s\r\n    ) public virtual {\r\n        if (block.timestamp > deadline) {\r\n            revert ERC2612ExpiredSignature(deadline);\r\n        }\r\n\r\n        bytes32 structHash = keccak256(abi.encode(PERMIT_TYPEHASH, owner, spender, value, _useNonce(owner), deadline));\r\n\r\n        bytes32 hash = _hashTypedDataV4(structHash);\r\n\r\n        address signer = ECDSA.recover(hash, v, r, s);\r\n        if (signer != owner) {\r\n            revert ERC2612InvalidSigner(signer, owner);\r\n        }\r\n\r\n        _approve(owner, spender, value);\r\n    }\r\n\r\n    /**\r\n     * @inheritdoc IERC20Permit\r\n     */\r\n    function nonces(address owner) public view virtual override(IERC20Permit, Nonces) returns (uint256) {\r\n        return super.nonces(owner);\r\n    }\r\n\r\n    /**\r\n     * @inheritdoc IERC20Permit\r\n     */\r\n    // solhint-disable-next-line func-name-mixedcase\r\n    function DOMAIN_SEPARATOR() external view virtual returns (bytes32) {\r\n        return _domainSeparatorV4();\r\n    }\r\n}\r\n"},"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol":{"content":"// SPDX-License-Identifier: MIT\r\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/extensions/IERC20Metadata.sol)\r\n\r\npragma solidity ^0.8.20;\r\n\r\nimport {IERC20} from \"../IERC20.sol\";\r\n\r\n/**\r\n * @dev Interface for the optional metadata functions from the ERC-20 standard.\r\n */\r\ninterface IERC20Metadata is IERC20 {\r\n    /**\r\n     * @dev Returns the name of the token.\r\n     */\r\n    function name() external view returns (string memory);\r\n\r\n    /**\r\n     * @dev Returns the symbol of the token.\r\n     */\r\n    function symbol() external view returns (string memory);\r\n\r\n    /**\r\n     * @dev Returns the decimals places of the token.\r\n     */\r\n    function decimals() external view returns (uint8);\r\n}\r\n"},"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol":{"content":"// SPDX-License-Identifier: MIT\r\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/extensions/IERC20Permit.sol)\r\n\r\npragma solidity ^0.8.20;\r\n\r\n/**\r\n * @dev Interface of the ERC-20 Permit extension allowing approvals to be made via signatures, as defined in\r\n * https://eips.ethereum.org/EIPS/eip-2612[ERC-2612].\r\n *\r\n * Adds the {permit} method, which can be used to change an account's ERC-20 allowance (see {IERC20-allowance}) by\r\n * presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't\r\n * need to send a transaction, and thus is not required to hold Ether at all.\r\n *\r\n * ==== Security Considerations\r\n *\r\n * There are two important considerations concerning the use of `permit`. The first is that a valid permit signature\r\n * expresses an allowance, and it should not be assumed to convey additional meaning. In particular, it should not be\r\n * considered as an intention to spend the allowance in any specific way. The second is that because permits have\r\n * built-in replay protection and can be submitted by anyone, they can be frontrun. A protocol that uses permits should\r\n * take this into consideration and allow a `permit` call to fail. Combining these two aspects, a pattern that may be\r\n * generally recommended is:\r\n *\r\n * ```solidity\r\n * function doThingWithPermit(..., uint256 value, uint256 deadline, uint8 v, bytes32 r, bytes32 s) public {\r\n *     try token.permit(msg.sender, address(this), value, deadline, v, r, s) {} catch {}\r\n *     doThing(..., value);\r\n * }\r\n *\r\n * function doThing(..., uint256 value) public {\r\n *     token.safeTransferFrom(msg.sender, address(this), value);\r\n *     ...\r\n * }\r\n * ```\r\n *\r\n * Observe that: 1) `msg.sender` is used as the owner, leaving no ambiguity as to the signer intent, and 2) the use of\r\n * `try/catch` allows the permit to fail and makes the code tolerant to frontrunning. (See also\r\n * {SafeERC20-safeTransferFrom}).\r\n *\r\n * Additionally, note that smart contract wallets (such as Argent or Safe) are not able to produce permit signatures, so\r\n * contracts should have entry points that don't rely on permit.\r\n */\r\ninterface IERC20Permit {\r\n    /**\r\n     * @dev Sets `value` as the allowance of `spender` over ``owner``'s tokens,\r\n     * given ``owner``'s signed approval.\r\n     *\r\n     * IMPORTANT: The same issues {IERC20-approve} has related to transaction\r\n     * ordering also apply here.\r\n     *\r\n     * Emits an {Approval} event.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `spender` cannot be the zero address.\r\n     * - `deadline` must be a timestamp in the future.\r\n     * - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner`\r\n     * over the EIP712-formatted function arguments.\r\n     * - the signature must use ``owner``'s current nonce (see {nonces}).\r\n     *\r\n     * For more information on the signature format, see the\r\n     * https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP\r\n     * section].\r\n     *\r\n     * CAUTION: See Security Considerations above.\r\n     */\r\n    function permit(\r\n        address owner,\r\n        address spender,\r\n        uint256 value,\r\n        uint256 deadline,\r\n        uint8 v,\r\n        bytes32 r,\r\n        bytes32 s\r\n    ) external;\r\n\r\n    /**\r\n     * @dev Returns the current nonce for `owner`. This value must be\r\n     * included whenever a signature is generated for {permit}.\r\n     *\r\n     * Every successful call to {permit} increases ``owner``'s nonce by one. This\r\n     * prevents a signature from being used multiple times.\r\n     */\r\n    function nonces(address owner) external view returns (uint256);\r\n\r\n    /**\r\n     * @dev Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\r\n     */\r\n    // solhint-disable-next-line func-name-mixedcase\r\n    function DOMAIN_SEPARATOR() external view returns (bytes32);\r\n}\r\n"},"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"content":"// SPDX-License-Identifier: MIT\r\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/IERC20.sol)\r\n\r\npragma solidity ^0.8.20;\r\n\r\n/**\r\n * @dev Interface of the ERC-20 standard as defined in the ERC.\r\n */\r\ninterface IERC20 {\r\n    /**\r\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\r\n     * another (`to`).\r\n     *\r\n     * Note that `value` may be zero.\r\n     */\r\n    event Transfer(address indexed from, address indexed to, uint256 value);\r\n\r\n    /**\r\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\r\n     * a call to {approve}. `value` is the new allowance.\r\n     */\r\n    event Approval(address indexed owner, address indexed spender, uint256 value);\r\n\r\n    /**\r\n     * @dev Returns the value of tokens in existence.\r\n     */\r\n    function totalSupply() external view returns (uint256);\r\n\r\n    /**\r\n     * @dev Returns the value of tokens owned by `account`.\r\n     */\r\n    function balanceOf(address account) external view returns (uint256);\r\n\r\n    /**\r\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\r\n     *\r\n     * Returns a boolean value indicating whether the operation succeeded.\r\n     *\r\n     * Emits a {Transfer} event.\r\n     */\r\n    function transfer(address to, uint256 value) external returns (bool);\r\n\r\n    /**\r\n     * @dev Returns the remaining number of tokens that `spender` will be\r\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\r\n     * zero by default.\r\n     *\r\n     * This value changes when {approve} or {transferFrom} are called.\r\n     */\r\n    function allowance(address owner, address spender) external view returns (uint256);\r\n\r\n    /**\r\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\r\n     * caller's tokens.\r\n     *\r\n     * Returns a boolean value indicating whether the operation succeeded.\r\n     *\r\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\r\n     * that someone may use both the old and the new allowance by unfortunate\r\n     * transaction ordering. One possible solution to mitigate this race\r\n     * condition is to first reduce the spender's allowance to 0 and set the\r\n     * desired value afterwards:\r\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\r\n     *\r\n     * Emits an {Approval} event.\r\n     */\r\n    function approve(address spender, uint256 value) external returns (bool);\r\n\r\n    /**\r\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\r\n     * allowance mechanism. `value` is then deducted from the caller's\r\n     * allowance.\r\n     *\r\n     * Returns a boolean value indicating whether the operation succeeded.\r\n     *\r\n     * Emits a {Transfer} event.\r\n     */\r\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\r\n}\r\n"},"@openzeppelin/contracts/utils/Context.sol":{"content":"// SPDX-License-Identifier: MIT\r\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\r\n\r\npragma solidity ^0.8.20;\r\n\r\n/**\r\n * @dev Provides information about the current execution context, including the\r\n * sender of the transaction and its data. While these are generally available\r\n * via msg.sender and msg.data, they should not be accessed in such a direct\r\n * manner, since when dealing with meta-transactions the account sending and\r\n * paying for execution may not be the actual sender (as far as an application\r\n * is concerned).\r\n *\r\n * This contract is only required for intermediate, library-like contracts.\r\n */\r\nabstract contract Context {\r\n    function _msgSender() internal view virtual returns (address) {\r\n        return msg.sender;\r\n    }\r\n\r\n    function _msgData() internal view virtual returns (bytes calldata) {\r\n        return msg.data;\r\n    }\r\n\r\n    function _contextSuffixLength() internal view virtual returns (uint256) {\r\n        return 0;\r\n    }\r\n}\r\n"},"@openzeppelin/contracts/utils/cryptography/ECDSA.sol":{"content":"// SPDX-License-Identifier: MIT\r\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/cryptography/ECDSA.sol)\r\n\r\npragma solidity ^0.8.20;\r\n\r\n/**\r\n * @dev Elliptic Curve Digital Signature Algorithm (ECDSA) operations.\r\n *\r\n * These functions can be used to verify that a message was signed by the holder\r\n * of the private keys of a given address.\r\n */\r\nlibrary ECDSA {\r\n    enum RecoverError {\r\n        NoError,\r\n        InvalidSignature,\r\n        InvalidSignatureLength,\r\n        InvalidSignatureS\r\n    }\r\n\r\n    /**\r\n     * @dev The signature derives the `address(0)`.\r\n     */\r\n    error ECDSAInvalidSignature();\r\n\r\n    /**\r\n     * @dev The signature has an invalid length.\r\n     */\r\n    error ECDSAInvalidSignatureLength(uint256 length);\r\n\r\n    /**\r\n     * @dev The signature has an S value that is in the upper half order.\r\n     */\r\n    error ECDSAInvalidSignatureS(bytes32 s);\r\n\r\n    /**\r\n     * @dev Returns the address that signed a hashed message (`hash`) with `signature` or an error. This will not\r\n     * return address(0) without also returning an error description. Errors are documented using an enum (error type)\r\n     * and a bytes32 providing additional information about the error.\r\n     *\r\n     * If no error is returned, then the address can be used for verification purposes.\r\n     *\r\n     * The `ecrecover` EVM precompile allows for malleable (non-unique) signatures:\r\n     * this function rejects them by requiring the `s` value to be in the lower\r\n     * half order, and the `v` value to be either 27 or 28.\r\n     *\r\n     * IMPORTANT: `hash` _must_ be the result of a hash operation for the\r\n     * verification to be secure: it is possible to craft signatures that\r\n     * recover to arbitrary addresses for non-hashed data. A safe way to ensure\r\n     * this is by receiving a hash of the original message (which may otherwise\r\n     * be too long), and then calling {MessageHashUtils-toEthSignedMessageHash} on it.\r\n     *\r\n     * Documentation for signature generation:\r\n     * - with https://web3js.readthedocs.io/en/v1.3.4/web3-eth-accounts.html#sign[Web3.js]\r\n     * - with https://docs.ethers.io/v5/api/signer/#Signer-signMessage[ethers]\r\n     */\r\n    function tryRecover(\r\n        bytes32 hash,\r\n        bytes memory signature\r\n    ) internal pure returns (address recovered, RecoverError err, bytes32 errArg) {\r\n        if (signature.length == 65) {\r\n            bytes32 r;\r\n            bytes32 s;\r\n            uint8 v;\r\n            // ecrecover takes the signature parameters, and the only way to get them\r\n            // currently is to use assembly.\r\n            assembly (\"memory-safe\") {\r\n                r := mload(add(signature, 0x20))\r\n                s := mload(add(signature, 0x40))\r\n                v := byte(0, mload(add(signature, 0x60)))\r\n            }\r\n            return tryRecover(hash, v, r, s);\r\n        } else {\r\n            return (address(0), RecoverError.InvalidSignatureLength, bytes32(signature.length));\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the address that signed a hashed message (`hash`) with\r\n     * `signature`. This address can then be used for verification purposes.\r\n     *\r\n     * The `ecrecover` EVM precompile allows for malleable (non-unique) signatures:\r\n     * this function rejects them by requiring the `s` value to be in the lower\r\n     * half order, and the `v` value to be either 27 or 28.\r\n     *\r\n     * IMPORTANT: `hash` _must_ be the result of a hash operation for the\r\n     * verification to be secure: it is possible to craft signatures that\r\n     * recover to arbitrary addresses for non-hashed data. A safe way to ensure\r\n     * this is by receiving a hash of the original message (which may otherwise\r\n     * be too long), and then calling {MessageHashUtils-toEthSignedMessageHash} on it.\r\n     */\r\n    function recover(bytes32 hash, bytes memory signature) internal pure returns (address) {\r\n        (address recovered, RecoverError error, bytes32 errorArg) = tryRecover(hash, signature);\r\n        _throwError(error, errorArg);\r\n        return recovered;\r\n    }\r\n\r\n    /**\r\n     * @dev Overload of {ECDSA-tryRecover} that receives the `r` and `vs` short-signature fields separately.\r\n     *\r\n     * See https://eips.ethereum.org/EIPS/eip-2098[ERC-2098 short signatures]\r\n     */\r\n    function tryRecover(\r\n        bytes32 hash,\r\n        bytes32 r,\r\n        bytes32 vs\r\n    ) internal pure returns (address recovered, RecoverError err, bytes32 errArg) {\r\n        unchecked {\r\n            bytes32 s = vs & bytes32(0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff);\r\n            // We do not check for an overflow here since the shift operation results in 0 or 1.\r\n            uint8 v = uint8((uint256(vs) >> 255) + 27);\r\n            return tryRecover(hash, v, r, s);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Overload of {ECDSA-recover} that receives the `r and `vs` short-signature fields separately.\r\n     */\r\n    function recover(bytes32 hash, bytes32 r, bytes32 vs) internal pure returns (address) {\r\n        (address recovered, RecoverError error, bytes32 errorArg) = tryRecover(hash, r, vs);\r\n        _throwError(error, errorArg);\r\n        return recovered;\r\n    }\r\n\r\n    /**\r\n     * @dev Overload of {ECDSA-tryRecover} that receives the `v`,\r\n     * `r` and `s` signature fields separately.\r\n     */\r\n    function tryRecover(\r\n        bytes32 hash,\r\n        uint8 v,\r\n        bytes32 r,\r\n        bytes32 s\r\n    ) internal pure returns (address recovered, RecoverError err, bytes32 errArg) {\r\n        // EIP-2 still allows signature malleability for ecrecover(). Remove this possibility and make the signature\r\n        // unique. Appendix F in the Ethereum Yellow paper (https://ethereum.github.io/yellowpaper/paper.pdf), defines\r\n        // the valid range for s in (301): 0 < s < secp256k1n ÷ 2 + 1, and for v in (302): v ∈ {27, 28}. Most\r\n        // signatures from current libraries generate a unique signature with an s-value in the lower half order.\r\n        //\r\n        // If your library generates malleable signatures, such as s-values in the upper range, calculate a new s-value\r\n        // with 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEBAAEDCE6AF48A03BBFD25E8CD0364141 - s1 and flip v from 27 to 28 or\r\n        // vice versa. If your library also generates signatures with 0/1 for v instead 27/28, add 27 to v to accept\r\n        // these malleable signatures as well.\r\n        if (uint256(s) > 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0) {\r\n            return (address(0), RecoverError.InvalidSignatureS, s);\r\n        }\r\n\r\n        // If the signature is valid (and not malleable), return the signer address\r\n        address signer = ecrecover(hash, v, r, s);\r\n        if (signer == address(0)) {\r\n            return (address(0), RecoverError.InvalidSignature, bytes32(0));\r\n        }\r\n\r\n        return (signer, RecoverError.NoError, bytes32(0));\r\n    }\r\n\r\n    /**\r\n     * @dev Overload of {ECDSA-recover} that receives the `v`,\r\n     * `r` and `s` signature fields separately.\r\n     */\r\n    function recover(bytes32 hash, uint8 v, bytes32 r, bytes32 s) internal pure returns (address) {\r\n        (address recovered, RecoverError error, bytes32 errorArg) = tryRecover(hash, v, r, s);\r\n        _throwError(error, errorArg);\r\n        return recovered;\r\n    }\r\n\r\n    /**\r\n     * @dev Optionally reverts with the corresponding custom error according to the `error` argument provided.\r\n     */\r\n    function _throwError(RecoverError error, bytes32 errorArg) private pure {\r\n        if (error == RecoverError.NoError) {\r\n            return; // no error: do nothing\r\n        } else if (error == RecoverError.InvalidSignature) {\r\n            revert ECDSAInvalidSignature();\r\n        } else if (error == RecoverError.InvalidSignatureLength) {\r\n            revert ECDSAInvalidSignatureLength(uint256(errorArg));\r\n        } else if (error == RecoverError.InvalidSignatureS) {\r\n            revert ECDSAInvalidSignatureS(errorArg);\r\n        }\r\n    }\r\n}\r\n"},"@openzeppelin/contracts/utils/cryptography/EIP712.sol":{"content":"// SPDX-License-Identifier: MIT\r\n// OpenZeppelin Contracts (last updated v5.3.0) (utils/cryptography/EIP712.sol)\r\n\r\npragma solidity ^0.8.20;\r\n\r\nimport {MessageHashUtils} from \"./MessageHashUtils.sol\";\r\nimport {ShortStrings, ShortString} from \"../ShortStrings.sol\";\r\nimport {IERC5267} from \"../../interfaces/IERC5267.sol\";\r\n\r\n/**\r\n * @dev https://eips.ethereum.org/EIPS/eip-712[EIP-712] is a standard for hashing and signing of typed structured data.\r\n *\r\n * The encoding scheme specified in the EIP requires a domain separator and a hash of the typed structured data, whose\r\n * encoding is very generic and therefore its implementation in Solidity is not feasible, thus this contract\r\n * does not implement the encoding itself. Protocols need to implement the type-specific encoding they need in order to\r\n * produce the hash of their typed data using a combination of `abi.encode` and `keccak256`.\r\n *\r\n * This contract implements the EIP-712 domain separator ({_domainSeparatorV4}) that is used as part of the encoding\r\n * scheme, and the final step of the encoding to obtain the message digest that is then signed via ECDSA\r\n * ({_hashTypedDataV4}).\r\n *\r\n * The implementation of the domain separator was designed to be as efficient as possible while still properly updating\r\n * the chain id to protect against replay attacks on an eventual fork of the chain.\r\n *\r\n * NOTE: This contract implements the version of the encoding known as \"v4\", as implemented by the JSON RPC method\r\n * https://docs.metamask.io/guide/signing-data.html[`eth_signTypedDataV4` in MetaMask].\r\n *\r\n * NOTE: In the upgradeable version of this contract, the cached values will correspond to the address, and the domain\r\n * separator of the implementation contract. This will cause the {_domainSeparatorV4} function to always rebuild the\r\n * separator from the immutable values, which is cheaper than accessing a cached version in cold storage.\r\n *\r\n * @custom:oz-upgrades-unsafe-allow state-variable-immutable\r\n */\r\nabstract contract EIP712 is IERC5267 {\r\n    using ShortStrings for *;\r\n\r\n    bytes32 private constant TYPE_HASH =\r\n        keccak256(\"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\");\r\n\r\n    // Cache the domain separator as an immutable value, but also store the chain id that it corresponds to, in order to\r\n    // invalidate the cached domain separator if the chain id changes.\r\n    bytes32 private immutable _cachedDomainSeparator;\r\n    uint256 private immutable _cachedChainId;\r\n    address private immutable _cachedThis;\r\n\r\n    bytes32 private immutable _hashedName;\r\n    bytes32 private immutable _hashedVersion;\r\n\r\n    ShortString private immutable _name;\r\n    ShortString private immutable _version;\r\n    // slither-disable-next-line constable-states\r\n    string private _nameFallback;\r\n    // slither-disable-next-line constable-states\r\n    string private _versionFallback;\r\n\r\n    /**\r\n     * @dev Initializes the domain separator and parameter caches.\r\n     *\r\n     * The meaning of `name` and `version` is specified in\r\n     * https://eips.ethereum.org/EIPS/eip-712#definition-of-domainseparator[EIP-712]:\r\n     *\r\n     * - `name`: the user readable name of the signing domain, i.e. the name of the DApp or the protocol.\r\n     * - `version`: the current major version of the signing domain.\r\n     *\r\n     * NOTE: These parameters cannot be changed except through a xref:learn::upgrading-smart-contracts.adoc[smart\r\n     * contract upgrade].\r\n     */\r\n    constructor(string memory name, string memory version) {\r\n        _name = name.toShortStringWithFallback(_nameFallback);\r\n        _version = version.toShortStringWithFallback(_versionFallback);\r\n        _hashedName = keccak256(bytes(name));\r\n        _hashedVersion = keccak256(bytes(version));\r\n\r\n        _cachedChainId = block.chainid;\r\n        _cachedDomainSeparator = _buildDomainSeparator();\r\n        _cachedThis = address(this);\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the domain separator for the current chain.\r\n     */\r\n    function _domainSeparatorV4() internal view returns (bytes32) {\r\n        if (address(this) == _cachedThis && block.chainid == _cachedChainId) {\r\n            return _cachedDomainSeparator;\r\n        } else {\r\n            return _buildDomainSeparator();\r\n        }\r\n    }\r\n\r\n    function _buildDomainSeparator() private view returns (bytes32) {\r\n        return keccak256(abi.encode(TYPE_HASH, _hashedName, _hashedVersion, block.chainid, address(this)));\r\n    }\r\n\r\n    /**\r\n     * @dev Given an already https://eips.ethereum.org/EIPS/eip-712#definition-of-hashstruct[hashed struct], this\r\n     * function returns the hash of the fully encoded EIP712 message for this domain.\r\n     *\r\n     * This hash can be used together with {ECDSA-recover} to obtain the signer of a message. For example:\r\n     *\r\n     * ```solidity\r\n     * bytes32 digest = _hashTypedDataV4(keccak256(abi.encode(\r\n     *     keccak256(\"Mail(address to,string contents)\"),\r\n     *     mailTo,\r\n     *     keccak256(bytes(mailContents))\r\n     * )));\r\n     * address signer = ECDSA.recover(digest, signature);\r\n     * ```\r\n     */\r\n    function _hashTypedDataV4(bytes32 structHash) internal view virtual returns (bytes32) {\r\n        return MessageHashUtils.toTypedDataHash(_domainSeparatorV4(), structHash);\r\n    }\r\n\r\n    /**\r\n     * @inheritdoc IERC5267\r\n     */\r\n    function eip712Domain()\r\n        public\r\n        view\r\n        virtual\r\n        returns (\r\n            bytes1 fields,\r\n            string memory name,\r\n            string memory version,\r\n            uint256 chainId,\r\n            address verifyingContract,\r\n            bytes32 salt,\r\n            uint256[] memory extensions\r\n        )\r\n    {\r\n        return (\r\n            hex\"0f\", // 01111\r\n            _EIP712Name(),\r\n            _EIP712Version(),\r\n            block.chainid,\r\n            address(this),\r\n            bytes32(0),\r\n            new uint256[](0)\r\n        );\r\n    }\r\n\r\n    /**\r\n     * @dev The name parameter for the EIP712 domain.\r\n     *\r\n     * NOTE: By default this function reads _name which is an immutable value.\r\n     * It only reads from storage if necessary (in case the value is too large to fit in a ShortString).\r\n     */\r\n    // solhint-disable-next-line func-name-mixedcase\r\n    function _EIP712Name() internal view returns (string memory) {\r\n        return _name.toStringWithFallback(_nameFallback);\r\n    }\r\n\r\n    /**\r\n     * @dev The version parameter for the EIP712 domain.\r\n     *\r\n     * NOTE: By default this function reads _version which is an immutable value.\r\n     * It only reads from storage if necessary (in case the value is too large to fit in a ShortString).\r\n     */\r\n    // solhint-disable-next-line func-name-mixedcase\r\n    function _EIP712Version() internal view returns (string memory) {\r\n        return _version.toStringWithFallback(_versionFallback);\r\n    }\r\n}\r\n"},"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol":{"content":"// SPDX-License-Identifier: MIT\r\n// OpenZeppelin Contracts (last updated v5.3.0) (utils/cryptography/MessageHashUtils.sol)\r\n\r\npragma solidity ^0.8.20;\r\n\r\nimport {Strings} from \"../Strings.sol\";\r\n\r\n/**\r\n * @dev Signature message hash utilities for producing digests to be consumed by {ECDSA} recovery or signing.\r\n *\r\n * The library provides methods for generating a hash of a message that conforms to the\r\n * https://eips.ethereum.org/EIPS/eip-191[ERC-191] and https://eips.ethereum.org/EIPS/eip-712[EIP 712]\r\n * specifications.\r\n */\r\nlibrary MessageHashUtils {\r\n    /**\r\n     * @dev Returns the keccak256 digest of an ERC-191 signed data with version\r\n     * `0x45` (`personal_sign` messages).\r\n     *\r\n     * The digest is calculated by prefixing a bytes32 `messageHash` with\r\n     * `\"\\x19Ethereum Signed Message:\\n32\"` and hashing the result. It corresponds with the\r\n     * hash signed when using the https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_sign[`eth_sign`] JSON-RPC method.\r\n     *\r\n     * NOTE: The `messageHash` parameter is intended to be the result of hashing a raw message with\r\n     * keccak256, although any bytes32 value can be safely used because the final digest will\r\n     * be re-hashed.\r\n     *\r\n     * See {ECDSA-recover}.\r\n     */\r\n    function toEthSignedMessageHash(bytes32 messageHash) internal pure returns (bytes32 digest) {\r\n        assembly (\"memory-safe\") {\r\n            mstore(0x00, \"\\x19Ethereum Signed Message:\\n32\") // 32 is the bytes-length of messageHash\r\n            mstore(0x1c, messageHash) // 0x1c (28) is the length of the prefix\r\n            digest := keccak256(0x00, 0x3c) // 0x3c is the length of the prefix (0x1c) + messageHash (0x20)\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the keccak256 digest of an ERC-191 signed data with version\r\n     * `0x45` (`personal_sign` messages).\r\n     *\r\n     * The digest is calculated by prefixing an arbitrary `message` with\r\n     * `\"\\x19Ethereum Signed Message:\\n\" + len(message)` and hashing the result. It corresponds with the\r\n     * hash signed when using the https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_sign[`eth_sign`] JSON-RPC method.\r\n     *\r\n     * See {ECDSA-recover}.\r\n     */\r\n    function toEthSignedMessageHash(bytes memory message) internal pure returns (bytes32) {\r\n        return\r\n            keccak256(bytes.concat(\"\\x19Ethereum Signed Message:\\n\", bytes(Strings.toString(message.length)), message));\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the keccak256 digest of an ERC-191 signed data with version\r\n     * `0x00` (data with intended validator).\r\n     *\r\n     * The digest is calculated by prefixing an arbitrary `data` with `\"\\x19\\x00\"` and the intended\r\n     * `validator` address. Then hashing the result.\r\n     *\r\n     * See {ECDSA-recover}.\r\n     */\r\n    function toDataWithIntendedValidatorHash(address validator, bytes memory data) internal pure returns (bytes32) {\r\n        return keccak256(abi.encodePacked(hex\"19_00\", validator, data));\r\n    }\r\n\r\n    /**\r\n     * @dev Variant of {toDataWithIntendedValidatorHash-address-bytes} optimized for cases where `data` is a bytes32.\r\n     */\r\n    function toDataWithIntendedValidatorHash(\r\n        address validator,\r\n        bytes32 messageHash\r\n    ) internal pure returns (bytes32 digest) {\r\n        assembly (\"memory-safe\") {\r\n            mstore(0x00, hex\"19_00\")\r\n            mstore(0x02, shl(96, validator))\r\n            mstore(0x16, messageHash)\r\n            digest := keccak256(0x00, 0x36)\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the keccak256 digest of an EIP-712 typed data (ERC-191 version `0x01`).\r\n     *\r\n     * The digest is calculated from a `domainSeparator` and a `structHash`, by prefixing them with\r\n     * `\\x19\\x01` and hashing the result. It corresponds to the hash signed by the\r\n     * https://eips.ethereum.org/EIPS/eip-712[`eth_signTypedData`] JSON-RPC method as part of EIP-712.\r\n     *\r\n     * See {ECDSA-recover}.\r\n     */\r\n    function toTypedDataHash(bytes32 domainSeparator, bytes32 structHash) internal pure returns (bytes32 digest) {\r\n        assembly (\"memory-safe\") {\r\n            let ptr := mload(0x40)\r\n            mstore(ptr, hex\"19_01\")\r\n            mstore(add(ptr, 0x02), domainSeparator)\r\n            mstore(add(ptr, 0x22), structHash)\r\n            digest := keccak256(ptr, 0x42)\r\n        }\r\n    }\r\n}\r\n"},"@openzeppelin/contracts/utils/introspection/ERC165.sol":{"content":"// SPDX-License-Identifier: MIT\r\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/introspection/ERC165.sol)\r\n\r\npragma solidity ^0.8.20;\r\n\r\nimport {IERC165} from \"./IERC165.sol\";\r\n\r\n/**\r\n * @dev Implementation of the {IERC165} interface.\r\n *\r\n * Contracts that want to implement ERC-165 should inherit from this contract and override {supportsInterface} to check\r\n * for the additional interface id that will be supported. For example:\r\n *\r\n * ```solidity\r\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\r\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\r\n * }\r\n * ```\r\n */\r\nabstract contract ERC165 is IERC165 {\r\n    /**\r\n     * @dev See {IERC165-supportsInterface}.\r\n     */\r\n    function supportsInterface(bytes4 interfaceId) public view virtual returns (bool) {\r\n        return interfaceId == type(IERC165).interfaceId;\r\n    }\r\n}\r\n"},"@openzeppelin/contracts/utils/introspection/IERC165.sol":{"content":"// SPDX-License-Identifier: MIT\r\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/introspection/IERC165.sol)\r\n\r\npragma solidity ^0.8.20;\r\n\r\n/**\r\n * @dev Interface of the ERC-165 standard, as defined in the\r\n * https://eips.ethereum.org/EIPS/eip-165[ERC].\r\n *\r\n * Implementers can declare support of contract interfaces, which can then be\r\n * queried by others ({ERC165Checker}).\r\n *\r\n * For an implementation, see {ERC165}.\r\n */\r\ninterface IERC165 {\r\n    /**\r\n     * @dev Returns true if this contract implements the interface defined by\r\n     * `interfaceId`. See the corresponding\r\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section]\r\n     * to learn more about how these ids are created.\r\n     *\r\n     * This function call must use less than 30 000 gas.\r\n     */\r\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\r\n}\r\n"},"@openzeppelin/contracts/utils/math/Math.sol":{"content":"// SPDX-License-Identifier: MIT\r\n// OpenZeppelin Contracts (last updated v5.3.0) (utils/math/Math.sol)\r\n\r\npragma solidity ^0.8.20;\r\n\r\nimport {Panic} from \"../Panic.sol\";\r\nimport {SafeCast} from \"./SafeCast.sol\";\r\n\r\n/**\r\n * @dev Standard math utilities missing in the Solidity language.\r\n */\r\nlibrary Math {\r\n    enum Rounding {\r\n        Floor, // Toward negative infinity\r\n        Ceil, // Toward positive infinity\r\n        Trunc, // Toward zero\r\n        Expand // Away from zero\r\n    }\r\n\r\n    /**\r\n     * @dev Return the 512-bit addition of two uint256.\r\n     *\r\n     * The result is stored in two 256 variables such that sum = high * 2²⁵⁶ + low.\r\n     */\r\n    function add512(uint256 a, uint256 b) internal pure returns (uint256 high, uint256 low) {\r\n        assembly (\"memory-safe\") {\r\n            low := add(a, b)\r\n            high := lt(low, a)\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Return the 512-bit multiplication of two uint256.\r\n     *\r\n     * The result is stored in two 256 variables such that product = high * 2²⁵⁶ + low.\r\n     */\r\n    function mul512(uint256 a, uint256 b) internal pure returns (uint256 high, uint256 low) {\r\n        // 512-bit multiply [high low] = x * y. Compute the product mod 2²⁵⁶ and mod 2²⁵⁶ - 1, then use\r\n        // the Chinese Remainder Theorem to reconstruct the 512 bit result. The result is stored in two 256\r\n        // variables such that product = high * 2²⁵⁶ + low.\r\n        assembly (\"memory-safe\") {\r\n            let mm := mulmod(a, b, not(0))\r\n            low := mul(a, b)\r\n            high := sub(sub(mm, low), lt(mm, low))\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the addition of two unsigned integers, with a success flag (no overflow).\r\n     */\r\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool success, uint256 result) {\r\n        unchecked {\r\n            uint256 c = a + b;\r\n            success = c >= a;\r\n            result = c * SafeCast.toUint(success);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the subtraction of two unsigned integers, with a success flag (no overflow).\r\n     */\r\n    function trySub(uint256 a, uint256 b) internal pure returns (bool success, uint256 result) {\r\n        unchecked {\r\n            uint256 c = a - b;\r\n            success = c <= a;\r\n            result = c * SafeCast.toUint(success);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the multiplication of two unsigned integers, with a success flag (no overflow).\r\n     */\r\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool success, uint256 result) {\r\n        unchecked {\r\n            uint256 c = a * b;\r\n            assembly (\"memory-safe\") {\r\n                // Only true when the multiplication doesn't overflow\r\n                // (c / a == b) || (a == 0)\r\n                success := or(eq(div(c, a), b), iszero(a))\r\n            }\r\n            // equivalent to: success ? c : 0\r\n            result = c * SafeCast.toUint(success);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the division of two unsigned integers, with a success flag (no division by zero).\r\n     */\r\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool success, uint256 result) {\r\n        unchecked {\r\n            success = b > 0;\r\n            assembly (\"memory-safe\") {\r\n                // The `DIV` opcode returns zero when the denominator is 0.\r\n                result := div(a, b)\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the remainder of dividing two unsigned integers, with a success flag (no division by zero).\r\n     */\r\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool success, uint256 result) {\r\n        unchecked {\r\n            success = b > 0;\r\n            assembly (\"memory-safe\") {\r\n                // The `MOD` opcode returns zero when the denominator is 0.\r\n                result := mod(a, b)\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Unsigned saturating addition, bounds to `2²⁵⁶ - 1` instead of overflowing.\r\n     */\r\n    function saturatingAdd(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        (bool success, uint256 result) = tryAdd(a, b);\r\n        return ternary(success, result, type(uint256).max);\r\n    }\r\n\r\n    /**\r\n     * @dev Unsigned saturating subtraction, bounds to zero instead of overflowing.\r\n     */\r\n    function saturatingSub(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        (, uint256 result) = trySub(a, b);\r\n        return result;\r\n    }\r\n\r\n    /**\r\n     * @dev Unsigned saturating multiplication, bounds to `2²⁵⁶ - 1` instead of overflowing.\r\n     */\r\n    function saturatingMul(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        (bool success, uint256 result) = tryMul(a, b);\r\n        return ternary(success, result, type(uint256).max);\r\n    }\r\n\r\n    /**\r\n     * @dev Branchless ternary evaluation for `a ? b : c`. Gas costs are constant.\r\n     *\r\n     * IMPORTANT: This function may reduce bytecode size and consume less gas when used standalone.\r\n     * However, the compiler may optimize Solidity ternary operations (i.e. `a ? b : c`) to only compute\r\n     * one branch when needed, making this function more expensive.\r\n     */\r\n    function ternary(bool condition, uint256 a, uint256 b) internal pure returns (uint256) {\r\n        unchecked {\r\n            // branchless ternary works because:\r\n            // b ^ (a ^ b) == a\r\n            // b ^ 0 == b\r\n            return b ^ ((a ^ b) * SafeCast.toUint(condition));\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the largest of two numbers.\r\n     */\r\n    function max(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        return ternary(a > b, a, b);\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the smallest of two numbers.\r\n     */\r\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        return ternary(a < b, a, b);\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the average of two numbers. The result is rounded towards\r\n     * zero.\r\n     */\r\n    function average(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        // (a + b) / 2 can overflow.\r\n        return (a & b) + (a ^ b) / 2;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the ceiling of the division of two numbers.\r\n     *\r\n     * This differs from standard division with `/` in that it rounds towards infinity instead\r\n     * of rounding towards zero.\r\n     */\r\n    function ceilDiv(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        if (b == 0) {\r\n            // Guarantee the same behavior as in a regular Solidity division.\r\n            Panic.panic(Panic.DIVISION_BY_ZERO);\r\n        }\r\n\r\n        // The following calculation ensures accurate ceiling division without overflow.\r\n        // Since a is non-zero, (a - 1) / b will not overflow.\r\n        // The largest possible result occurs when (a - 1) / b is type(uint256).max,\r\n        // but the largest value we can obtain is type(uint256).max - 1, which happens\r\n        // when a = type(uint256).max and b = 1.\r\n        unchecked {\r\n            return SafeCast.toUint(a > 0) * ((a - 1) / b + 1);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or\r\n     * denominator == 0.\r\n     *\r\n     * Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv) with further edits by\r\n     * Uniswap Labs also under MIT license.\r\n     */\r\n    function mulDiv(uint256 x, uint256 y, uint256 denominator) internal pure returns (uint256 result) {\r\n        unchecked {\r\n            (uint256 high, uint256 low) = mul512(x, y);\r\n\r\n            // Handle non-overflow cases, 256 by 256 division.\r\n            if (high == 0) {\r\n                // Solidity will revert if denominator == 0, unlike the div opcode on its own.\r\n                // The surrounding unchecked block does not change this fact.\r\n                // See https://docs.soliditylang.org/en/latest/control-structures.html#checked-or-unchecked-arithmetic.\r\n                return low / denominator;\r\n            }\r\n\r\n            // Make sure the result is less than 2²⁵⁶. Also prevents denominator == 0.\r\n            if (denominator <= high) {\r\n                Panic.panic(ternary(denominator == 0, Panic.DIVISION_BY_ZERO, Panic.UNDER_OVERFLOW));\r\n            }\r\n\r\n            ///////////////////////////////////////////////\r\n            // 512 by 256 division.\r\n            ///////////////////////////////////////////////\r\n\r\n            // Make division exact by subtracting the remainder from [high low].\r\n            uint256 remainder;\r\n            assembly (\"memory-safe\") {\r\n                // Compute remainder using mulmod.\r\n                remainder := mulmod(x, y, denominator)\r\n\r\n                // Subtract 256 bit number from 512 bit number.\r\n                high := sub(high, gt(remainder, low))\r\n                low := sub(low, remainder)\r\n            }\r\n\r\n            // Factor powers of two out of denominator and compute largest power of two divisor of denominator.\r\n            // Always >= 1. See https://cs.stackexchange.com/q/138556/92363.\r\n\r\n            uint256 twos = denominator & (0 - denominator);\r\n            assembly (\"memory-safe\") {\r\n                // Divide denominator by twos.\r\n                denominator := div(denominator, twos)\r\n\r\n                // Divide [high low] by twos.\r\n                low := div(low, twos)\r\n\r\n                // Flip twos such that it is 2²⁵⁶ / twos. If twos is zero, then it becomes one.\r\n                twos := add(div(sub(0, twos), twos), 1)\r\n            }\r\n\r\n            // Shift in bits from high into low.\r\n            low |= high * twos;\r\n\r\n            // Invert denominator mod 2²⁵⁶. Now that denominator is an odd number, it has an inverse modulo 2²⁵⁶ such\r\n            // that denominator * inv ≡ 1 mod 2²⁵⁶. Compute the inverse by starting with a seed that is correct for\r\n            // four bits. That is, denominator * inv ≡ 1 mod 2⁴.\r\n            uint256 inverse = (3 * denominator) ^ 2;\r\n\r\n            // Use the Newton-Raphson iteration to improve the precision. Thanks to Hensel's lifting lemma, this also\r\n            // works in modular arithmetic, doubling the correct bits in each step.\r\n            inverse *= 2 - denominator * inverse; // inverse mod 2⁸\r\n            inverse *= 2 - denominator * inverse; // inverse mod 2¹⁶\r\n            inverse *= 2 - denominator * inverse; // inverse mod 2³²\r\n            inverse *= 2 - denominator * inverse; // inverse mod 2⁶⁴\r\n            inverse *= 2 - denominator * inverse; // inverse mod 2¹²⁸\r\n            inverse *= 2 - denominator * inverse; // inverse mod 2²⁵⁶\r\n\r\n            // Because the division is now exact we can divide by multiplying with the modular inverse of denominator.\r\n            // This will give us the correct result modulo 2²⁵⁶. Since the preconditions guarantee that the outcome is\r\n            // less than 2²⁵⁶, this is the final result. We don't need to compute the high bits of the result and high\r\n            // is no longer required.\r\n            result = low * inverse;\r\n            return result;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Calculates x * y / denominator with full precision, following the selected rounding direction.\r\n     */\r\n    function mulDiv(uint256 x, uint256 y, uint256 denominator, Rounding rounding) internal pure returns (uint256) {\r\n        return mulDiv(x, y, denominator) + SafeCast.toUint(unsignedRoundsUp(rounding) && mulmod(x, y, denominator) > 0);\r\n    }\r\n\r\n    /**\r\n     * @dev Calculates floor(x * y >> n) with full precision. Throws if result overflows a uint256.\r\n     */\r\n    function mulShr(uint256 x, uint256 y, uint8 n) internal pure returns (uint256 result) {\r\n        unchecked {\r\n            (uint256 high, uint256 low) = mul512(x, y);\r\n            if (high >= 1 << n) {\r\n                Panic.panic(Panic.UNDER_OVERFLOW);\r\n            }\r\n            return (high << (256 - n)) | (low >> n);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Calculates x * y >> n with full precision, following the selected rounding direction.\r\n     */\r\n    function mulShr(uint256 x, uint256 y, uint8 n, Rounding rounding) internal pure returns (uint256) {\r\n        return mulShr(x, y, n) + SafeCast.toUint(unsignedRoundsUp(rounding) && mulmod(x, y, 1 << n) > 0);\r\n    }\r\n\r\n    /**\r\n     * @dev Calculate the modular multiplicative inverse of a number in Z/nZ.\r\n     *\r\n     * If n is a prime, then Z/nZ is a field. In that case all elements are inversible, except 0.\r\n     * If n is not a prime, then Z/nZ is not a field, and some elements might not be inversible.\r\n     *\r\n     * If the input value is not inversible, 0 is returned.\r\n     *\r\n     * NOTE: If you know for sure that n is (big) a prime, it may be cheaper to use Fermat's little theorem and get the\r\n     * inverse using `Math.modExp(a, n - 2, n)`. See {invModPrime}.\r\n     */\r\n    function invMod(uint256 a, uint256 n) internal pure returns (uint256) {\r\n        unchecked {\r\n            if (n == 0) return 0;\r\n\r\n            // The inverse modulo is calculated using the Extended Euclidean Algorithm (iterative version)\r\n            // Used to compute integers x and y such that: ax + ny = gcd(a, n).\r\n            // When the gcd is 1, then the inverse of a modulo n exists and it's x.\r\n            // ax + ny = 1\r\n            // ax = 1 + (-y)n\r\n            // ax ≡ 1 (mod n) # x is the inverse of a modulo n\r\n\r\n            // If the remainder is 0 the gcd is n right away.\r\n            uint256 remainder = a % n;\r\n            uint256 gcd = n;\r\n\r\n            // Therefore the initial coefficients are:\r\n            // ax + ny = gcd(a, n) = n\r\n            // 0a + 1n = n\r\n            int256 x = 0;\r\n            int256 y = 1;\r\n\r\n            while (remainder != 0) {\r\n                uint256 quotient = gcd / remainder;\r\n\r\n                (gcd, remainder) = (\r\n                    // The old remainder is the next gcd to try.\r\n                    remainder,\r\n                    // Compute the next remainder.\r\n                    // Can't overflow given that (a % gcd) * (gcd // (a % gcd)) <= gcd\r\n                    // where gcd is at most n (capped to type(uint256).max)\r\n                    gcd - remainder * quotient\r\n                );\r\n\r\n                (x, y) = (\r\n                    // Increment the coefficient of a.\r\n                    y,\r\n                    // Decrement the coefficient of n.\r\n                    // Can overflow, but the result is casted to uint256 so that the\r\n                    // next value of y is \"wrapped around\" to a value between 0 and n - 1.\r\n                    x - y * int256(quotient)\r\n                );\r\n            }\r\n\r\n            if (gcd != 1) return 0; // No inverse exists.\r\n            return ternary(x < 0, n - uint256(-x), uint256(x)); // Wrap the result if it's negative.\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Variant of {invMod}. More efficient, but only works if `p` is known to be a prime greater than `2`.\r\n     *\r\n     * From https://en.wikipedia.org/wiki/Fermat%27s_little_theorem[Fermat's little theorem], we know that if p is\r\n     * prime, then `a**(p-1) ≡ 1 mod p`. As a consequence, we have `a * a**(p-2) ≡ 1 mod p`, which means that\r\n     * `a**(p-2)` is the modular multiplicative inverse of a in Fp.\r\n     *\r\n     * NOTE: this function does NOT check that `p` is a prime greater than `2`.\r\n     */\r\n    function invModPrime(uint256 a, uint256 p) internal view returns (uint256) {\r\n        unchecked {\r\n            return Math.modExp(a, p - 2, p);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the modular exponentiation of the specified base, exponent and modulus (b ** e % m)\r\n     *\r\n     * Requirements:\r\n     * - modulus can't be zero\r\n     * - underlying staticcall to precompile must succeed\r\n     *\r\n     * IMPORTANT: The result is only valid if the underlying call succeeds. When using this function, make\r\n     * sure the chain you're using it on supports the precompiled contract for modular exponentiation\r\n     * at address 0x05 as specified in https://eips.ethereum.org/EIPS/eip-198[EIP-198]. Otherwise,\r\n     * the underlying function will succeed given the lack of a revert, but the result may be incorrectly\r\n     * interpreted as 0.\r\n     */\r\n    function modExp(uint256 b, uint256 e, uint256 m) internal view returns (uint256) {\r\n        (bool success, uint256 result) = tryModExp(b, e, m);\r\n        if (!success) {\r\n            Panic.panic(Panic.DIVISION_BY_ZERO);\r\n        }\r\n        return result;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the modular exponentiation of the specified base, exponent and modulus (b ** e % m).\r\n     * It includes a success flag indicating if the operation succeeded. Operation will be marked as failed if trying\r\n     * to operate modulo 0 or if the underlying precompile reverted.\r\n     *\r\n     * IMPORTANT: The result is only valid if the success flag is true. When using this function, make sure the chain\r\n     * you're using it on supports the precompiled contract for modular exponentiation at address 0x05 as specified in\r\n     * https://eips.ethereum.org/EIPS/eip-198[EIP-198]. Otherwise, the underlying function will succeed given the lack\r\n     * of a revert, but the result may be incorrectly interpreted as 0.\r\n     */\r\n    function tryModExp(uint256 b, uint256 e, uint256 m) internal view returns (bool success, uint256 result) {\r\n        if (m == 0) return (false, 0);\r\n        assembly (\"memory-safe\") {\r\n            let ptr := mload(0x40)\r\n            // | Offset    | Content    | Content (Hex)                                                      |\r\n            // |-----------|------------|--------------------------------------------------------------------|\r\n            // | 0x00:0x1f | size of b  | 0x0000000000000000000000000000000000000000000000000000000000000020 |\r\n            // | 0x20:0x3f | size of e  | 0x0000000000000000000000000000000000000000000000000000000000000020 |\r\n            // | 0x40:0x5f | size of m  | 0x0000000000000000000000000000000000000000000000000000000000000020 |\r\n            // | 0x60:0x7f | value of b | 0x<.............................................................b> |\r\n            // | 0x80:0x9f | value of e | 0x<.............................................................e> |\r\n            // | 0xa0:0xbf | value of m | 0x<.............................................................m> |\r\n            mstore(ptr, 0x20)\r\n            mstore(add(ptr, 0x20), 0x20)\r\n            mstore(add(ptr, 0x40), 0x20)\r\n            mstore(add(ptr, 0x60), b)\r\n            mstore(add(ptr, 0x80), e)\r\n            mstore(add(ptr, 0xa0), m)\r\n\r\n            // Given the result < m, it's guaranteed to fit in 32 bytes,\r\n            // so we can use the memory scratch space located at offset 0.\r\n            success := staticcall(gas(), 0x05, ptr, 0xc0, 0x00, 0x20)\r\n            result := mload(0x00)\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Variant of {modExp} that supports inputs of arbitrary length.\r\n     */\r\n    function modExp(bytes memory b, bytes memory e, bytes memory m) internal view returns (bytes memory) {\r\n        (bool success, bytes memory result) = tryModExp(b, e, m);\r\n        if (!success) {\r\n            Panic.panic(Panic.DIVISION_BY_ZERO);\r\n        }\r\n        return result;\r\n    }\r\n\r\n    /**\r\n     * @dev Variant of {tryModExp} that supports inputs of arbitrary length.\r\n     */\r\n    function tryModExp(\r\n        bytes memory b,\r\n        bytes memory e,\r\n        bytes memory m\r\n    ) internal view returns (bool success, bytes memory result) {\r\n        if (_zeroBytes(m)) return (false, new bytes(0));\r\n\r\n        uint256 mLen = m.length;\r\n\r\n        // Encode call args in result and move the free memory pointer\r\n        result = abi.encodePacked(b.length, e.length, mLen, b, e, m);\r\n\r\n        assembly (\"memory-safe\") {\r\n            let dataPtr := add(result, 0x20)\r\n            // Write result on top of args to avoid allocating extra memory.\r\n            success := staticcall(gas(), 0x05, dataPtr, mload(result), dataPtr, mLen)\r\n            // Overwrite the length.\r\n            // result.length > returndatasize() is guaranteed because returndatasize() == m.length\r\n            mstore(result, mLen)\r\n            // Set the memory pointer after the returned data.\r\n            mstore(0x40, add(dataPtr, mLen))\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Returns whether the provided byte array is zero.\r\n     */\r\n    function _zeroBytes(bytes memory byteArray) private pure returns (bool) {\r\n        for (uint256 i = 0; i < byteArray.length; ++i) {\r\n            if (byteArray[i] != 0) {\r\n                return false;\r\n            }\r\n        }\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded\r\n     * towards zero.\r\n     *\r\n     * This method is based on Newton's method for computing square roots; the algorithm is restricted to only\r\n     * using integer operations.\r\n     */\r\n    function sqrt(uint256 a) internal pure returns (uint256) {\r\n        unchecked {\r\n            // Take care of easy edge cases when a == 0 or a == 1\r\n            if (a <= 1) {\r\n                return a;\r\n            }\r\n\r\n            // In this function, we use Newton's method to get a root of `f(x) := x² - a`. It involves building a\r\n            // sequence x_n that converges toward sqrt(a). For each iteration x_n, we also define the error between\r\n            // the current value as `ε_n = | x_n - sqrt(a) |`.\r\n            //\r\n            // For our first estimation, we consider `e` the smallest power of 2 which is bigger than the square root\r\n            // of the target. (i.e. `2**(e-1) ≤ sqrt(a) < 2**e`). We know that `e ≤ 128` because `(2¹²⁸)² = 2²⁵⁶` is\r\n            // bigger than any uint256.\r\n            //\r\n            // By noticing that\r\n            // `2**(e-1) ≤ sqrt(a) < 2**e → (2**(e-1))² ≤ a < (2**e)² → 2**(2*e-2) ≤ a < 2**(2*e)`\r\n            // we can deduce that `e - 1` is `log2(a) / 2`. We can thus compute `x_n = 2**(e-1)` using a method similar\r\n            // to the msb function.\r\n            uint256 aa = a;\r\n            uint256 xn = 1;\r\n\r\n            if (aa >= (1 << 128)) {\r\n                aa >>= 128;\r\n                xn <<= 64;\r\n            }\r\n            if (aa >= (1 << 64)) {\r\n                aa >>= 64;\r\n                xn <<= 32;\r\n            }\r\n            if (aa >= (1 << 32)) {\r\n                aa >>= 32;\r\n                xn <<= 16;\r\n            }\r\n            if (aa >= (1 << 16)) {\r\n                aa >>= 16;\r\n                xn <<= 8;\r\n            }\r\n            if (aa >= (1 << 8)) {\r\n                aa >>= 8;\r\n                xn <<= 4;\r\n            }\r\n            if (aa >= (1 << 4)) {\r\n                aa >>= 4;\r\n                xn <<= 2;\r\n            }\r\n            if (aa >= (1 << 2)) {\r\n                xn <<= 1;\r\n            }\r\n\r\n            // We now have x_n such that `x_n = 2**(e-1) ≤ sqrt(a) < 2**e = 2 * x_n`. This implies ε_n ≤ 2**(e-1).\r\n            //\r\n            // We can refine our estimation by noticing that the middle of that interval minimizes the error.\r\n            // If we move x_n to equal 2**(e-1) + 2**(e-2), then we reduce the error to ε_n ≤ 2**(e-2).\r\n            // This is going to be our x_0 (and ε_0)\r\n            xn = (3 * xn) >> 1; // ε_0 := | x_0 - sqrt(a) | ≤ 2**(e-2)\r\n\r\n            // From here, Newton's method give us:\r\n            // x_{n+1} = (x_n + a / x_n) / 2\r\n            //\r\n            // One should note that:\r\n            // x_{n+1}² - a = ((x_n + a / x_n) / 2)² - a\r\n            //              = ((x_n² + a) / (2 * x_n))² - a\r\n            //              = (x_n⁴ + 2 * a * x_n² + a²) / (4 * x_n²) - a\r\n            //              = (x_n⁴ + 2 * a * x_n² + a² - 4 * a * x_n²) / (4 * x_n²)\r\n            //              = (x_n⁴ - 2 * a * x_n² + a²) / (4 * x_n²)\r\n            //              = (x_n² - a)² / (2 * x_n)²\r\n            //              = ((x_n² - a) / (2 * x_n))²\r\n            //              ≥ 0\r\n            // Which proves that for all n ≥ 1, sqrt(a) ≤ x_n\r\n            //\r\n            // This gives us the proof of quadratic convergence of the sequence:\r\n            // ε_{n+1} = | x_{n+1} - sqrt(a) |\r\n            //         = | (x_n + a / x_n) / 2 - sqrt(a) |\r\n            //         = | (x_n² + a - 2*x_n*sqrt(a)) / (2 * x_n) |\r\n            //         = | (x_n - sqrt(a))² / (2 * x_n) |\r\n            //         = | ε_n² / (2 * x_n) |\r\n            //         = ε_n² / | (2 * x_n) |\r\n            //\r\n            // For the first iteration, we have a special case where x_0 is known:\r\n            // ε_1 = ε_0² / | (2 * x_0) |\r\n            //     ≤ (2**(e-2))² / (2 * (2**(e-1) + 2**(e-2)))\r\n            //     ≤ 2**(2*e-4) / (3 * 2**(e-1))\r\n            //     ≤ 2**(e-3) / 3\r\n            //     ≤ 2**(e-3-log2(3))\r\n            //     ≤ 2**(e-4.5)\r\n            //\r\n            // For the following iterations, we use the fact that, 2**(e-1) ≤ sqrt(a) ≤ x_n:\r\n            // ε_{n+1} = ε_n² / | (2 * x_n) |\r\n            //         ≤ (2**(e-k))² / (2 * 2**(e-1))\r\n            //         ≤ 2**(2*e-2*k) / 2**e\r\n            //         ≤ 2**(e-2*k)\r\n            xn = (xn + a / xn) >> 1; // ε_1 := | x_1 - sqrt(a) | ≤ 2**(e-4.5)  -- special case, see above\r\n            xn = (xn + a / xn) >> 1; // ε_2 := | x_2 - sqrt(a) | ≤ 2**(e-9)    -- general case with k = 4.5\r\n            xn = (xn + a / xn) >> 1; // ε_3 := | x_3 - sqrt(a) | ≤ 2**(e-18)   -- general case with k = 9\r\n            xn = (xn + a / xn) >> 1; // ε_4 := | x_4 - sqrt(a) | ≤ 2**(e-36)   -- general case with k = 18\r\n            xn = (xn + a / xn) >> 1; // ε_5 := | x_5 - sqrt(a) | ≤ 2**(e-72)   -- general case with k = 36\r\n            xn = (xn + a / xn) >> 1; // ε_6 := | x_6 - sqrt(a) | ≤ 2**(e-144)  -- general case with k = 72\r\n\r\n            // Because e ≤ 128 (as discussed during the first estimation phase), we know have reached a precision\r\n            // ε_6 ≤ 2**(e-144) < 1. Given we're operating on integers, then we can ensure that xn is now either\r\n            // sqrt(a) or sqrt(a) + 1.\r\n            return xn - SafeCast.toUint(xn > a / xn);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Calculates sqrt(a), following the selected rounding direction.\r\n     */\r\n    function sqrt(uint256 a, Rounding rounding) internal pure returns (uint256) {\r\n        unchecked {\r\n            uint256 result = sqrt(a);\r\n            return result + SafeCast.toUint(unsignedRoundsUp(rounding) && result * result < a);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Return the log in base 2 of a positive value rounded towards zero.\r\n     * Returns 0 if given 0.\r\n     */\r\n    function log2(uint256 x) internal pure returns (uint256 r) {\r\n        // If value has upper 128 bits set, log2 result is at least 128\r\n        r = SafeCast.toUint(x > 0xffffffffffffffffffffffffffffffff) << 7;\r\n        // If upper 64 bits of 128-bit half set, add 64 to result\r\n        r |= SafeCast.toUint((x >> r) > 0xffffffffffffffff) << 6;\r\n        // If upper 32 bits of 64-bit half set, add 32 to result\r\n        r |= SafeCast.toUint((x >> r) > 0xffffffff) << 5;\r\n        // If upper 16 bits of 32-bit half set, add 16 to result\r\n        r |= SafeCast.toUint((x >> r) > 0xffff) << 4;\r\n        // If upper 8 bits of 16-bit half set, add 8 to result\r\n        r |= SafeCast.toUint((x >> r) > 0xff) << 3;\r\n        // If upper 4 bits of 8-bit half set, add 4 to result\r\n        r |= SafeCast.toUint((x >> r) > 0xf) << 2;\r\n\r\n        // Shifts value right by the current result and use it as an index into this lookup table:\r\n        //\r\n        // | x (4 bits) |  index  | table[index] = MSB position |\r\n        // |------------|---------|-----------------------------|\r\n        // |    0000    |    0    |        table[0] = 0         |\r\n        // |    0001    |    1    |        table[1] = 0         |\r\n        // |    0010    |    2    |        table[2] = 1         |\r\n        // |    0011    |    3    |        table[3] = 1         |\r\n        // |    0100    |    4    |        table[4] = 2         |\r\n        // |    0101    |    5    |        table[5] = 2         |\r\n        // |    0110    |    6    |        table[6] = 2         |\r\n        // |    0111    |    7    |        table[7] = 2         |\r\n        // |    1000    |    8    |        table[8] = 3         |\r\n        // |    1001    |    9    |        table[9] = 3         |\r\n        // |    1010    |   10    |        table[10] = 3        |\r\n        // |    1011    |   11    |        table[11] = 3        |\r\n        // |    1100    |   12    |        table[12] = 3        |\r\n        // |    1101    |   13    |        table[13] = 3        |\r\n        // |    1110    |   14    |        table[14] = 3        |\r\n        // |    1111    |   15    |        table[15] = 3        |\r\n        //\r\n        // The lookup table is represented as a 32-byte value with the MSB positions for 0-15 in the last 16 bytes.\r\n        assembly (\"memory-safe\") {\r\n            r := or(r, byte(shr(r, x), 0x0000010102020202030303030303030300000000000000000000000000000000))\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Return the log in base 2, following the selected rounding direction, of a positive value.\r\n     * Returns 0 if given 0.\r\n     */\r\n    function log2(uint256 value, Rounding rounding) internal pure returns (uint256) {\r\n        unchecked {\r\n            uint256 result = log2(value);\r\n            return result + SafeCast.toUint(unsignedRoundsUp(rounding) && 1 << result < value);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Return the log in base 10 of a positive value rounded towards zero.\r\n     * Returns 0 if given 0.\r\n     */\r\n    function log10(uint256 value) internal pure returns (uint256) {\r\n        uint256 result = 0;\r\n        unchecked {\r\n            if (value >= 10 ** 64) {\r\n                value /= 10 ** 64;\r\n                result += 64;\r\n            }\r\n            if (value >= 10 ** 32) {\r\n                value /= 10 ** 32;\r\n                result += 32;\r\n            }\r\n            if (value >= 10 ** 16) {\r\n                value /= 10 ** 16;\r\n                result += 16;\r\n            }\r\n            if (value >= 10 ** 8) {\r\n                value /= 10 ** 8;\r\n                result += 8;\r\n            }\r\n            if (value >= 10 ** 4) {\r\n                value /= 10 ** 4;\r\n                result += 4;\r\n            }\r\n            if (value >= 10 ** 2) {\r\n                value /= 10 ** 2;\r\n                result += 2;\r\n            }\r\n            if (value >= 10 ** 1) {\r\n                result += 1;\r\n            }\r\n        }\r\n        return result;\r\n    }\r\n\r\n    /**\r\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\r\n     * Returns 0 if given 0.\r\n     */\r\n    function log10(uint256 value, Rounding rounding) internal pure returns (uint256) {\r\n        unchecked {\r\n            uint256 result = log10(value);\r\n            return result + SafeCast.toUint(unsignedRoundsUp(rounding) && 10 ** result < value);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Return the log in base 256 of a positive value rounded towards zero.\r\n     * Returns 0 if given 0.\r\n     *\r\n     * Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string.\r\n     */\r\n    function log256(uint256 x) internal pure returns (uint256 r) {\r\n        // If value has upper 128 bits set, log2 result is at least 128\r\n        r = SafeCast.toUint(x > 0xffffffffffffffffffffffffffffffff) << 7;\r\n        // If upper 64 bits of 128-bit half set, add 64 to result\r\n        r |= SafeCast.toUint((x >> r) > 0xffffffffffffffff) << 6;\r\n        // If upper 32 bits of 64-bit half set, add 32 to result\r\n        r |= SafeCast.toUint((x >> r) > 0xffffffff) << 5;\r\n        // If upper 16 bits of 32-bit half set, add 16 to result\r\n        r |= SafeCast.toUint((x >> r) > 0xffff) << 4;\r\n        // Add 1 if upper 8 bits of 16-bit half set, and divide accumulated result by 8\r\n        return (r >> 3) | SafeCast.toUint((x >> r) > 0xff);\r\n    }\r\n\r\n    /**\r\n     * @dev Return the log in base 256, following the selected rounding direction, of a positive value.\r\n     * Returns 0 if given 0.\r\n     */\r\n    function log256(uint256 value, Rounding rounding) internal pure returns (uint256) {\r\n        unchecked {\r\n            uint256 result = log256(value);\r\n            return result + SafeCast.toUint(unsignedRoundsUp(rounding) && 1 << (result << 3) < value);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Returns whether a provided rounding mode is considered rounding up for unsigned integers.\r\n     */\r\n    function unsignedRoundsUp(Rounding rounding) internal pure returns (bool) {\r\n        return uint8(rounding) % 2 == 1;\r\n    }\r\n}\r\n"},"@openzeppelin/contracts/utils/math/SafeCast.sol":{"content":"// SPDX-License-Identifier: MIT\r\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/math/SafeCast.sol)\r\n// This file was procedurally generated from scripts/generate/templates/SafeCast.js.\r\n\r\npragma solidity ^0.8.20;\r\n\r\n/**\r\n * @dev Wrappers over Solidity's uintXX/intXX/bool casting operators with added overflow\r\n * checks.\r\n *\r\n * Downcasting from uint256/int256 in Solidity does not revert on overflow. This can\r\n * easily result in undesired exploitation or bugs, since developers usually\r\n * assume that overflows raise errors. `SafeCast` restores this intuition by\r\n * reverting the transaction when such an operation overflows.\r\n *\r\n * Using this library instead of the unchecked operations eliminates an entire\r\n * class of bugs, so it's recommended to use it always.\r\n */\r\nlibrary SafeCast {\r\n    /**\r\n     * @dev Value doesn't fit in an uint of `bits` size.\r\n     */\r\n    error SafeCastOverflowedUintDowncast(uint8 bits, uint256 value);\r\n\r\n    /**\r\n     * @dev An int value doesn't fit in an uint of `bits` size.\r\n     */\r\n    error SafeCastOverflowedIntToUint(int256 value);\r\n\r\n    /**\r\n     * @dev Value doesn't fit in an int of `bits` size.\r\n     */\r\n    error SafeCastOverflowedIntDowncast(uint8 bits, int256 value);\r\n\r\n    /**\r\n     * @dev An uint value doesn't fit in an int of `bits` size.\r\n     */\r\n    error SafeCastOverflowedUintToInt(uint256 value);\r\n\r\n    /**\r\n     * @dev Returns the downcasted uint248 from uint256, reverting on\r\n     * overflow (when the input is greater than largest uint248).\r\n     *\r\n     * Counterpart to Solidity's `uint248` operator.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - input must fit into 248 bits\r\n     */\r\n    function toUint248(uint256 value) internal pure returns (uint248) {\r\n        if (value > type(uint248).max) {\r\n            revert SafeCastOverflowedUintDowncast(248, value);\r\n        }\r\n        return uint248(value);\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the downcasted uint240 from uint256, reverting on\r\n     * overflow (when the input is greater than largest uint240).\r\n     *\r\n     * Counterpart to Solidity's `uint240` operator.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - input must fit into 240 bits\r\n     */\r\n    function toUint240(uint256 value) internal pure returns (uint240) {\r\n        if (value > type(uint240).max) {\r\n            revert SafeCastOverflowedUintDowncast(240, value);\r\n        }\r\n        return uint240(value);\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the downcasted uint232 from uint256, reverting on\r\n     * overflow (when the input is greater than largest uint232).\r\n     *\r\n     * Counterpart to Solidity's `uint232` operator.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - input must fit into 232 bits\r\n     */\r\n    function toUint232(uint256 value) internal pure returns (uint232) {\r\n        if (value > type(uint232).max) {\r\n            revert SafeCastOverflowedUintDowncast(232, value);\r\n        }\r\n        return uint232(value);\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the downcasted uint224 from uint256, reverting on\r\n     * overflow (when the input is greater than largest uint224).\r\n     *\r\n     * Counterpart to Solidity's `uint224` operator.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - input must fit into 224 bits\r\n     */\r\n    function toUint224(uint256 value) internal pure returns (uint224) {\r\n        if (value > type(uint224).max) {\r\n            revert SafeCastOverflowedUintDowncast(224, value);\r\n        }\r\n        return uint224(value);\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the downcasted uint216 from uint256, reverting on\r\n     * overflow (when the input is greater than largest uint216).\r\n     *\r\n     * Counterpart to Solidity's `uint216` operator.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - input must fit into 216 bits\r\n     */\r\n    function toUint216(uint256 value) internal pure returns (uint216) {\r\n        if (value > type(uint216).max) {\r\n            revert SafeCastOverflowedUintDowncast(216, value);\r\n        }\r\n        return uint216(value);\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the downcasted uint208 from uint256, reverting on\r\n     * overflow (when the input is greater than largest uint208).\r\n     *\r\n     * Counterpart to Solidity's `uint208` operator.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - input must fit into 208 bits\r\n     */\r\n    function toUint208(uint256 value) internal pure returns (uint208) {\r\n        if (value > type(uint208).max) {\r\n            revert SafeCastOverflowedUintDowncast(208, value);\r\n        }\r\n        return uint208(value);\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the downcasted uint200 from uint256, reverting on\r\n     * overflow (when the input is greater than largest uint200).\r\n     *\r\n     * Counterpart to Solidity's `uint200` operator.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - input must fit into 200 bits\r\n     */\r\n    function toUint200(uint256 value) internal pure returns (uint200) {\r\n        if (value > type(uint200).max) {\r\n            revert SafeCastOverflowedUintDowncast(200, value);\r\n        }\r\n        return uint200(value);\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the downcasted uint192 from uint256, reverting on\r\n     * overflow (when the input is greater than largest uint192).\r\n     *\r\n     * Counterpart to Solidity's `uint192` operator.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - input must fit into 192 bits\r\n     */\r\n    function toUint192(uint256 value) internal pure returns (uint192) {\r\n        if (value > type(uint192).max) {\r\n            revert SafeCastOverflowedUintDowncast(192, value);\r\n        }\r\n        return uint192(value);\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the downcasted uint184 from uint256, reverting on\r\n     * overflow (when the input is greater than largest uint184).\r\n     *\r\n     * Counterpart to Solidity's `uint184` operator.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - input must fit into 184 bits\r\n     */\r\n    function toUint184(uint256 value) internal pure returns (uint184) {\r\n        if (value > type(uint184).max) {\r\n            revert SafeCastOverflowedUintDowncast(184, value);\r\n        }\r\n        return uint184(value);\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the downcasted uint176 from uint256, reverting on\r\n     * overflow (when the input is greater than largest uint176).\r\n     *\r\n     * Counterpart to Solidity's `uint176` operator.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - input must fit into 176 bits\r\n     */\r\n    function toUint176(uint256 value) internal pure returns (uint176) {\r\n        if (value > type(uint176).max) {\r\n            revert SafeCastOverflowedUintDowncast(176, value);\r\n        }\r\n        return uint176(value);\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the downcasted uint168 from uint256, reverting on\r\n     * overflow (when the input is greater than largest uint168).\r\n     *\r\n     * Counterpart to Solidity's `uint168` operator.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - input must fit into 168 bits\r\n     */\r\n    function toUint168(uint256 value) internal pure returns (uint168) {\r\n        if (value > type(uint168).max) {\r\n            revert SafeCastOverflowedUintDowncast(168, value);\r\n        }\r\n        return uint168(value);\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the downcasted uint160 from uint256, reverting on\r\n     * overflow (when the input is greater than largest uint160).\r\n     *\r\n     * Counterpart to Solidity's `uint160` operator.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - input must fit into 160 bits\r\n     */\r\n    function toUint160(uint256 value) internal pure returns (uint160) {\r\n        if (value > type(uint160).max) {\r\n            revert SafeCastOverflowedUintDowncast(160, value);\r\n        }\r\n        return uint160(value);\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the downcasted uint152 from uint256, reverting on\r\n     * overflow (when the input is greater than largest uint152).\r\n     *\r\n     * Counterpart to Solidity's `uint152` operator.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - input must fit into 152 bits\r\n     */\r\n    function toUint152(uint256 value) internal pure returns (uint152) {\r\n        if (value > type(uint152).max) {\r\n            revert SafeCastOverflowedUintDowncast(152, value);\r\n        }\r\n        return uint152(value);\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the downcasted uint144 from uint256, reverting on\r\n     * overflow (when the input is greater than largest uint144).\r\n     *\r\n     * Counterpart to Solidity's `uint144` operator.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - input must fit into 144 bits\r\n     */\r\n    function toUint144(uint256 value) internal pure returns (uint144) {\r\n        if (value > type(uint144).max) {\r\n            revert SafeCastOverflowedUintDowncast(144, value);\r\n        }\r\n        return uint144(value);\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the downcasted uint136 from uint256, reverting on\r\n     * overflow (when the input is greater than largest uint136).\r\n     *\r\n     * Counterpart to Solidity's `uint136` operator.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - input must fit into 136 bits\r\n     */\r\n    function toUint136(uint256 value) internal pure returns (uint136) {\r\n        if (value > type(uint136).max) {\r\n            revert SafeCastOverflowedUintDowncast(136, value);\r\n        }\r\n        return uint136(value);\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the downcasted uint128 from uint256, reverting on\r\n     * overflow (when the input is greater than largest uint128).\r\n     *\r\n     * Counterpart to Solidity's `uint128` operator.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - input must fit into 128 bits\r\n     */\r\n    function toUint128(uint256 value) internal pure returns (uint128) {\r\n        if (value > type(uint128).max) {\r\n            revert SafeCastOverflowedUintDowncast(128, value);\r\n        }\r\n        return uint128(value);\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the downcasted uint120 from uint256, reverting on\r\n     * overflow (when the input is greater than largest uint120).\r\n     *\r\n     * Counterpart to Solidity's `uint120` operator.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - input must fit into 120 bits\r\n     */\r\n    function toUint120(uint256 value) internal pure returns (uint120) {\r\n        if (value > type(uint120).max) {\r\n            revert SafeCastOverflowedUintDowncast(120, value);\r\n        }\r\n        return uint120(value);\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the downcasted uint112 from uint256, reverting on\r\n     * overflow (when the input is greater than largest uint112).\r\n     *\r\n     * Counterpart to Solidity's `uint112` operator.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - input must fit into 112 bits\r\n     */\r\n    function toUint112(uint256 value) internal pure returns (uint112) {\r\n        if (value > type(uint112).max) {\r\n            revert SafeCastOverflowedUintDowncast(112, value);\r\n        }\r\n        return uint112(value);\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the downcasted uint104 from uint256, reverting on\r\n     * overflow (when the input is greater than largest uint104).\r\n     *\r\n     * Counterpart to Solidity's `uint104` operator.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - input must fit into 104 bits\r\n     */\r\n    function toUint104(uint256 value) internal pure returns (uint104) {\r\n        if (value > type(uint104).max) {\r\n            revert SafeCastOverflowedUintDowncast(104, value);\r\n        }\r\n        return uint104(value);\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the downcasted uint96 from uint256, reverting on\r\n     * overflow (when the input is greater than largest uint96).\r\n     *\r\n     * Counterpart to Solidity's `uint96` operator.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - input must fit into 96 bits\r\n     */\r\n    function toUint96(uint256 value) internal pure returns (uint96) {\r\n        if (value > type(uint96).max) {\r\n            revert SafeCastOverflowedUintDowncast(96, value);\r\n        }\r\n        return uint96(value);\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the downcasted uint88 from uint256, reverting on\r\n     * overflow (when the input is greater than largest uint88).\r\n     *\r\n     * Counterpart to Solidity's `uint88` operator.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - input must fit into 88 bits\r\n     */\r\n    function toUint88(uint256 value) internal pure returns (uint88) {\r\n        if (value > type(uint88).max) {\r\n            revert SafeCastOverflowedUintDowncast(88, value);\r\n        }\r\n        return uint88(value);\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the downcasted uint80 from uint256, reverting on\r\n     * overflow (when the input is greater than largest uint80).\r\n     *\r\n     * Counterpart to Solidity's `uint80` operator.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - input must fit into 80 bits\r\n     */\r\n    function toUint80(uint256 value) internal pure returns (uint80) {\r\n        if (value > type(uint80).max) {\r\n            revert SafeCastOverflowedUintDowncast(80, value);\r\n        }\r\n        return uint80(value);\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the downcasted uint72 from uint256, reverting on\r\n     * overflow (when the input is greater than largest uint72).\r\n     *\r\n     * Counterpart to Solidity's `uint72` operator.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - input must fit into 72 bits\r\n     */\r\n    function toUint72(uint256 value) internal pure returns (uint72) {\r\n        if (value > type(uint72).max) {\r\n            revert SafeCastOverflowedUintDowncast(72, value);\r\n        }\r\n        return uint72(value);\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the downcasted uint64 from uint256, reverting on\r\n     * overflow (when the input is greater than largest uint64).\r\n     *\r\n     * Counterpart to Solidity's `uint64` operator.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - input must fit into 64 bits\r\n     */\r\n    function toUint64(uint256 value) internal pure returns (uint64) {\r\n        if (value > type(uint64).max) {\r\n            revert SafeCastOverflowedUintDowncast(64, value);\r\n        }\r\n        return uint64(value);\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the downcasted uint56 from uint256, reverting on\r\n     * overflow (when the input is greater than largest uint56).\r\n     *\r\n     * Counterpart to Solidity's `uint56` operator.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - input must fit into 56 bits\r\n     */\r\n    function toUint56(uint256 value) internal pure returns (uint56) {\r\n        if (value > type(uint56).max) {\r\n            revert SafeCastOverflowedUintDowncast(56, value);\r\n        }\r\n        return uint56(value);\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the downcasted uint48 from uint256, reverting on\r\n     * overflow (when the input is greater than largest uint48).\r\n     *\r\n     * Counterpart to Solidity's `uint48` operator.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - input must fit into 48 bits\r\n     */\r\n    function toUint48(uint256 value) internal pure returns (uint48) {\r\n        if (value > type(uint48).max) {\r\n            revert SafeCastOverflowedUintDowncast(48, value);\r\n        }\r\n        return uint48(value);\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the downcasted uint40 from uint256, reverting on\r\n     * overflow (when the input is greater than largest uint40).\r\n     *\r\n     * Counterpart to Solidity's `uint40` operator.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - input must fit into 40 bits\r\n     */\r\n    function toUint40(uint256 value) internal pure returns (uint40) {\r\n        if (value > type(uint40).max) {\r\n            revert SafeCastOverflowedUintDowncast(40, value);\r\n        }\r\n        return uint40(value);\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the downcasted uint32 from uint256, reverting on\r\n     * overflow (when the input is greater than largest uint32).\r\n     *\r\n     * Counterpart to Solidity's `uint32` operator.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - input must fit into 32 bits\r\n     */\r\n    function toUint32(uint256 value) internal pure returns (uint32) {\r\n        if (value > type(uint32).max) {\r\n            revert SafeCastOverflowedUintDowncast(32, value);\r\n        }\r\n        return uint32(value);\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the downcasted uint24 from uint256, reverting on\r\n     * overflow (when the input is greater than largest uint24).\r\n     *\r\n     * Counterpart to Solidity's `uint24` operator.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - input must fit into 24 bits\r\n     */\r\n    function toUint24(uint256 value) internal pure returns (uint24) {\r\n        if (value > type(uint24).max) {\r\n            revert SafeCastOverflowedUintDowncast(24, value);\r\n        }\r\n        return uint24(value);\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the downcasted uint16 from uint256, reverting on\r\n     * overflow (when the input is greater than largest uint16).\r\n     *\r\n     * Counterpart to Solidity's `uint16` operator.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - input must fit into 16 bits\r\n     */\r\n    function toUint16(uint256 value) internal pure returns (uint16) {\r\n        if (value > type(uint16).max) {\r\n            revert SafeCastOverflowedUintDowncast(16, value);\r\n        }\r\n        return uint16(value);\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the downcasted uint8 from uint256, reverting on\r\n     * overflow (when the input is greater than largest uint8).\r\n     *\r\n     * Counterpart to Solidity's `uint8` operator.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - input must fit into 8 bits\r\n     */\r\n    function toUint8(uint256 value) internal pure returns (uint8) {\r\n        if (value > type(uint8).max) {\r\n            revert SafeCastOverflowedUintDowncast(8, value);\r\n        }\r\n        return uint8(value);\r\n    }\r\n\r\n    /**\r\n     * @dev Converts a signed int256 into an unsigned uint256.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - input must be greater than or equal to 0.\r\n     */\r\n    function toUint256(int256 value) internal pure returns (uint256) {\r\n        if (value < 0) {\r\n            revert SafeCastOverflowedIntToUint(value);\r\n        }\r\n        return uint256(value);\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the downcasted int248 from int256, reverting on\r\n     * overflow (when the input is less than smallest int248 or\r\n     * greater than largest int248).\r\n     *\r\n     * Counterpart to Solidity's `int248` operator.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - input must fit into 248 bits\r\n     */\r\n    function toInt248(int256 value) internal pure returns (int248 downcasted) {\r\n        downcasted = int248(value);\r\n        if (downcasted != value) {\r\n            revert SafeCastOverflowedIntDowncast(248, value);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the downcasted int240 from int256, reverting on\r\n     * overflow (when the input is less than smallest int240 or\r\n     * greater than largest int240).\r\n     *\r\n     * Counterpart to Solidity's `int240` operator.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - input must fit into 240 bits\r\n     */\r\n    function toInt240(int256 value) internal pure returns (int240 downcasted) {\r\n        downcasted = int240(value);\r\n        if (downcasted != value) {\r\n            revert SafeCastOverflowedIntDowncast(240, value);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the downcasted int232 from int256, reverting on\r\n     * overflow (when the input is less than smallest int232 or\r\n     * greater than largest int232).\r\n     *\r\n     * Counterpart to Solidity's `int232` operator.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - input must fit into 232 bits\r\n     */\r\n    function toInt232(int256 value) internal pure returns (int232 downcasted) {\r\n        downcasted = int232(value);\r\n        if (downcasted != value) {\r\n            revert SafeCastOverflowedIntDowncast(232, value);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the downcasted int224 from int256, reverting on\r\n     * overflow (when the input is less than smallest int224 or\r\n     * greater than largest int224).\r\n     *\r\n     * Counterpart to Solidity's `int224` operator.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - input must fit into 224 bits\r\n     */\r\n    function toInt224(int256 value) internal pure returns (int224 downcasted) {\r\n        downcasted = int224(value);\r\n        if (downcasted != value) {\r\n            revert SafeCastOverflowedIntDowncast(224, value);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the downcasted int216 from int256, reverting on\r\n     * overflow (when the input is less than smallest int216 or\r\n     * greater than largest int216).\r\n     *\r\n     * Counterpart to Solidity's `int216` operator.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - input must fit into 216 bits\r\n     */\r\n    function toInt216(int256 value) internal pure returns (int216 downcasted) {\r\n        downcasted = int216(value);\r\n        if (downcasted != value) {\r\n            revert SafeCastOverflowedIntDowncast(216, value);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the downcasted int208 from int256, reverting on\r\n     * overflow (when the input is less than smallest int208 or\r\n     * greater than largest int208).\r\n     *\r\n     * Counterpart to Solidity's `int208` operator.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - input must fit into 208 bits\r\n     */\r\n    function toInt208(int256 value) internal pure returns (int208 downcasted) {\r\n        downcasted = int208(value);\r\n        if (downcasted != value) {\r\n            revert SafeCastOverflowedIntDowncast(208, value);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the downcasted int200 from int256, reverting on\r\n     * overflow (when the input is less than smallest int200 or\r\n     * greater than largest int200).\r\n     *\r\n     * Counterpart to Solidity's `int200` operator.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - input must fit into 200 bits\r\n     */\r\n    function toInt200(int256 value) internal pure returns (int200 downcasted) {\r\n        downcasted = int200(value);\r\n        if (downcasted != value) {\r\n            revert SafeCastOverflowedIntDowncast(200, value);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the downcasted int192 from int256, reverting on\r\n     * overflow (when the input is less than smallest int192 or\r\n     * greater than largest int192).\r\n     *\r\n     * Counterpart to Solidity's `int192` operator.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - input must fit into 192 bits\r\n     */\r\n    function toInt192(int256 value) internal pure returns (int192 downcasted) {\r\n        downcasted = int192(value);\r\n        if (downcasted != value) {\r\n            revert SafeCastOverflowedIntDowncast(192, value);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the downcasted int184 from int256, reverting on\r\n     * overflow (when the input is less than smallest int184 or\r\n     * greater than largest int184).\r\n     *\r\n     * Counterpart to Solidity's `int184` operator.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - input must fit into 184 bits\r\n     */\r\n    function toInt184(int256 value) internal pure returns (int184 downcasted) {\r\n        downcasted = int184(value);\r\n        if (downcasted != value) {\r\n            revert SafeCastOverflowedIntDowncast(184, value);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the downcasted int176 from int256, reverting on\r\n     * overflow (when the input is less than smallest int176 or\r\n     * greater than largest int176).\r\n     *\r\n     * Counterpart to Solidity's `int176` operator.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - input must fit into 176 bits\r\n     */\r\n    function toInt176(int256 value) internal pure returns (int176 downcasted) {\r\n        downcasted = int176(value);\r\n        if (downcasted != value) {\r\n            revert SafeCastOverflowedIntDowncast(176, value);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the downcasted int168 from int256, reverting on\r\n     * overflow (when the input is less than smallest int168 or\r\n     * greater than largest int168).\r\n     *\r\n     * Counterpart to Solidity's `int168` operator.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - input must fit into 168 bits\r\n     */\r\n    function toInt168(int256 value) internal pure returns (int168 downcasted) {\r\n        downcasted = int168(value);\r\n        if (downcasted != value) {\r\n            revert SafeCastOverflowedIntDowncast(168, value);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the downcasted int160 from int256, reverting on\r\n     * overflow (when the input is less than smallest int160 or\r\n     * greater than largest int160).\r\n     *\r\n     * Counterpart to Solidity's `int160` operator.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - input must fit into 160 bits\r\n     */\r\n    function toInt160(int256 value) internal pure returns (int160 downcasted) {\r\n        downcasted = int160(value);\r\n        if (downcasted != value) {\r\n            revert SafeCastOverflowedIntDowncast(160, value);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the downcasted int152 from int256, reverting on\r\n     * overflow (when the input is less than smallest int152 or\r\n     * greater than largest int152).\r\n     *\r\n     * Counterpart to Solidity's `int152` operator.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - input must fit into 152 bits\r\n     */\r\n    function toInt152(int256 value) internal pure returns (int152 downcasted) {\r\n        downcasted = int152(value);\r\n        if (downcasted != value) {\r\n            revert SafeCastOverflowedIntDowncast(152, value);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the downcasted int144 from int256, reverting on\r\n     * overflow (when the input is less than smallest int144 or\r\n     * greater than largest int144).\r\n     *\r\n     * Counterpart to Solidity's `int144` operator.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - input must fit into 144 bits\r\n     */\r\n    function toInt144(int256 value) internal pure returns (int144 downcasted) {\r\n        downcasted = int144(value);\r\n        if (downcasted != value) {\r\n            revert SafeCastOverflowedIntDowncast(144, value);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the downcasted int136 from int256, reverting on\r\n     * overflow (when the input is less than smallest int136 or\r\n     * greater than largest int136).\r\n     *\r\n     * Counterpart to Solidity's `int136` operator.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - input must fit into 136 bits\r\n     */\r\n    function toInt136(int256 value) internal pure returns (int136 downcasted) {\r\n        downcasted = int136(value);\r\n        if (downcasted != value) {\r\n            revert SafeCastOverflowedIntDowncast(136, value);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the downcasted int128 from int256, reverting on\r\n     * overflow (when the input is less than smallest int128 or\r\n     * greater than largest int128).\r\n     *\r\n     * Counterpart to Solidity's `int128` operator.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - input must fit into 128 bits\r\n     */\r\n    function toInt128(int256 value) internal pure returns (int128 downcasted) {\r\n        downcasted = int128(value);\r\n        if (downcasted != value) {\r\n            revert SafeCastOverflowedIntDowncast(128, value);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the downcasted int120 from int256, reverting on\r\n     * overflow (when the input is less than smallest int120 or\r\n     * greater than largest int120).\r\n     *\r\n     * Counterpart to Solidity's `int120` operator.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - input must fit into 120 bits\r\n     */\r\n    function toInt120(int256 value) internal pure returns (int120 downcasted) {\r\n        downcasted = int120(value);\r\n        if (downcasted != value) {\r\n            revert SafeCastOverflowedIntDowncast(120, value);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the downcasted int112 from int256, reverting on\r\n     * overflow (when the input is less than smallest int112 or\r\n     * greater than largest int112).\r\n     *\r\n     * Counterpart to Solidity's `int112` operator.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - input must fit into 112 bits\r\n     */\r\n    function toInt112(int256 value) internal pure returns (int112 downcasted) {\r\n        downcasted = int112(value);\r\n        if (downcasted != value) {\r\n            revert SafeCastOverflowedIntDowncast(112, value);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the downcasted int104 from int256, reverting on\r\n     * overflow (when the input is less than smallest int104 or\r\n     * greater than largest int104).\r\n     *\r\n     * Counterpart to Solidity's `int104` operator.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - input must fit into 104 bits\r\n     */\r\n    function toInt104(int256 value) internal pure returns (int104 downcasted) {\r\n        downcasted = int104(value);\r\n        if (downcasted != value) {\r\n            revert SafeCastOverflowedIntDowncast(104, value);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the downcasted int96 from int256, reverting on\r\n     * overflow (when the input is less than smallest int96 or\r\n     * greater than largest int96).\r\n     *\r\n     * Counterpart to Solidity's `int96` operator.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - input must fit into 96 bits\r\n     */\r\n    function toInt96(int256 value) internal pure returns (int96 downcasted) {\r\n        downcasted = int96(value);\r\n        if (downcasted != value) {\r\n            revert SafeCastOverflowedIntDowncast(96, value);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the downcasted int88 from int256, reverting on\r\n     * overflow (when the input is less than smallest int88 or\r\n     * greater than largest int88).\r\n     *\r\n     * Counterpart to Solidity's `int88` operator.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - input must fit into 88 bits\r\n     */\r\n    function toInt88(int256 value) internal pure returns (int88 downcasted) {\r\n        downcasted = int88(value);\r\n        if (downcasted != value) {\r\n            revert SafeCastOverflowedIntDowncast(88, value);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the downcasted int80 from int256, reverting on\r\n     * overflow (when the input is less than smallest int80 or\r\n     * greater than largest int80).\r\n     *\r\n     * Counterpart to Solidity's `int80` operator.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - input must fit into 80 bits\r\n     */\r\n    function toInt80(int256 value) internal pure returns (int80 downcasted) {\r\n        downcasted = int80(value);\r\n        if (downcasted != value) {\r\n            revert SafeCastOverflowedIntDowncast(80, value);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the downcasted int72 from int256, reverting on\r\n     * overflow (when the input is less than smallest int72 or\r\n     * greater than largest int72).\r\n     *\r\n     * Counterpart to Solidity's `int72` operator.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - input must fit into 72 bits\r\n     */\r\n    function toInt72(int256 value) internal pure returns (int72 downcasted) {\r\n        downcasted = int72(value);\r\n        if (downcasted != value) {\r\n            revert SafeCastOverflowedIntDowncast(72, value);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the downcasted int64 from int256, reverting on\r\n     * overflow (when the input is less than smallest int64 or\r\n     * greater than largest int64).\r\n     *\r\n     * Counterpart to Solidity's `int64` operator.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - input must fit into 64 bits\r\n     */\r\n    function toInt64(int256 value) internal pure returns (int64 downcasted) {\r\n        downcasted = int64(value);\r\n        if (downcasted != value) {\r\n            revert SafeCastOverflowedIntDowncast(64, value);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the downcasted int56 from int256, reverting on\r\n     * overflow (when the input is less than smallest int56 or\r\n     * greater than largest int56).\r\n     *\r\n     * Counterpart to Solidity's `int56` operator.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - input must fit into 56 bits\r\n     */\r\n    function toInt56(int256 value) internal pure returns (int56 downcasted) {\r\n        downcasted = int56(value);\r\n        if (downcasted != value) {\r\n            revert SafeCastOverflowedIntDowncast(56, value);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the downcasted int48 from int256, reverting on\r\n     * overflow (when the input is less than smallest int48 or\r\n     * greater than largest int48).\r\n     *\r\n     * Counterpart to Solidity's `int48` operator.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - input must fit into 48 bits\r\n     */\r\n    function toInt48(int256 value) internal pure returns (int48 downcasted) {\r\n        downcasted = int48(value);\r\n        if (downcasted != value) {\r\n            revert SafeCastOverflowedIntDowncast(48, value);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the downcasted int40 from int256, reverting on\r\n     * overflow (when the input is less than smallest int40 or\r\n     * greater than largest int40).\r\n     *\r\n     * Counterpart to Solidity's `int40` operator.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - input must fit into 40 bits\r\n     */\r\n    function toInt40(int256 value) internal pure returns (int40 downcasted) {\r\n        downcasted = int40(value);\r\n        if (downcasted != value) {\r\n            revert SafeCastOverflowedIntDowncast(40, value);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the downcasted int32 from int256, reverting on\r\n     * overflow (when the input is less than smallest int32 or\r\n     * greater than largest int32).\r\n     *\r\n     * Counterpart to Solidity's `int32` operator.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - input must fit into 32 bits\r\n     */\r\n    function toInt32(int256 value) internal pure returns (int32 downcasted) {\r\n        downcasted = int32(value);\r\n        if (downcasted != value) {\r\n            revert SafeCastOverflowedIntDowncast(32, value);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the downcasted int24 from int256, reverting on\r\n     * overflow (when the input is less than smallest int24 or\r\n     * greater than largest int24).\r\n     *\r\n     * Counterpart to Solidity's `int24` operator.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - input must fit into 24 bits\r\n     */\r\n    function toInt24(int256 value) internal pure returns (int24 downcasted) {\r\n        downcasted = int24(value);\r\n        if (downcasted != value) {\r\n            revert SafeCastOverflowedIntDowncast(24, value);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the downcasted int16 from int256, reverting on\r\n     * overflow (when the input is less than smallest int16 or\r\n     * greater than largest int16).\r\n     *\r\n     * Counterpart to Solidity's `int16` operator.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - input must fit into 16 bits\r\n     */\r\n    function toInt16(int256 value) internal pure returns (int16 downcasted) {\r\n        downcasted = int16(value);\r\n        if (downcasted != value) {\r\n            revert SafeCastOverflowedIntDowncast(16, value);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the downcasted int8 from int256, reverting on\r\n     * overflow (when the input is less than smallest int8 or\r\n     * greater than largest int8).\r\n     *\r\n     * Counterpart to Solidity's `int8` operator.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - input must fit into 8 bits\r\n     */\r\n    function toInt8(int256 value) internal pure returns (int8 downcasted) {\r\n        downcasted = int8(value);\r\n        if (downcasted != value) {\r\n            revert SafeCastOverflowedIntDowncast(8, value);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Converts an unsigned uint256 into a signed int256.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - input must be less than or equal to maxInt256.\r\n     */\r\n    function toInt256(uint256 value) internal pure returns (int256) {\r\n        // Note: Unsafe cast below is okay because `type(int256).max` is guaranteed to be positive\r\n        if (value > uint256(type(int256).max)) {\r\n            revert SafeCastOverflowedUintToInt(value);\r\n        }\r\n        return int256(value);\r\n    }\r\n\r\n    /**\r\n     * @dev Cast a boolean (false or true) to a uint256 (0 or 1) with no jump.\r\n     */\r\n    function toUint(bool b) internal pure returns (uint256 u) {\r\n        assembly (\"memory-safe\") {\r\n            u := iszero(iszero(b))\r\n        }\r\n    }\r\n}\r\n"},"@openzeppelin/contracts/utils/math/SignedMath.sol":{"content":"// SPDX-License-Identifier: MIT\r\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/math/SignedMath.sol)\r\n\r\npragma solidity ^0.8.20;\r\n\r\nimport {SafeCast} from \"./SafeCast.sol\";\r\n\r\n/**\r\n * @dev Standard signed math utilities missing in the Solidity language.\r\n */\r\nlibrary SignedMath {\r\n    /**\r\n     * @dev Branchless ternary evaluation for `a ? b : c`. Gas costs are constant.\r\n     *\r\n     * IMPORTANT: This function may reduce bytecode size and consume less gas when used standalone.\r\n     * However, the compiler may optimize Solidity ternary operations (i.e. `a ? b : c`) to only compute\r\n     * one branch when needed, making this function more expensive.\r\n     */\r\n    function ternary(bool condition, int256 a, int256 b) internal pure returns (int256) {\r\n        unchecked {\r\n            // branchless ternary works because:\r\n            // b ^ (a ^ b) == a\r\n            // b ^ 0 == b\r\n            return b ^ ((a ^ b) * int256(SafeCast.toUint(condition)));\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the largest of two signed numbers.\r\n     */\r\n    function max(int256 a, int256 b) internal pure returns (int256) {\r\n        return ternary(a > b, a, b);\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the smallest of two signed numbers.\r\n     */\r\n    function min(int256 a, int256 b) internal pure returns (int256) {\r\n        return ternary(a < b, a, b);\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the average of two signed numbers without overflow.\r\n     * The result is rounded towards zero.\r\n     */\r\n    function average(int256 a, int256 b) internal pure returns (int256) {\r\n        // Formula from the book \"Hacker's Delight\"\r\n        int256 x = (a & b) + ((a ^ b) >> 1);\r\n        return x + (int256(uint256(x) >> 255) & (a ^ b));\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the absolute unsigned value of a signed value.\r\n     */\r\n    function abs(int256 n) internal pure returns (uint256) {\r\n        unchecked {\r\n            // Formula from the \"Bit Twiddling Hacks\" by Sean Eron Anderson.\r\n            // Since `n` is a signed integer, the generated bytecode will use the SAR opcode to perform the right shift,\r\n            // taking advantage of the most significant (or \"sign\" bit) in two's complement representation.\r\n            // This opcode adds new most significant bits set to the value of the previous most significant bit. As a result,\r\n            // the mask will either be `bytes32(0)` (if n is positive) or `~bytes32(0)` (if n is negative).\r\n            int256 mask = n >> 255;\r\n\r\n            // A `bytes32(0)` mask leaves the input unchanged, while a `~bytes32(0)` mask complements it.\r\n            return uint256((n + mask) ^ mask);\r\n        }\r\n    }\r\n}\r\n"},"@openzeppelin/contracts/utils/Nonces.sol":{"content":"// SPDX-License-Identifier: MIT\r\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/Nonces.sol)\r\npragma solidity ^0.8.20;\r\n\r\n/**\r\n * @dev Provides tracking nonces for addresses. Nonces will only increment.\r\n */\r\nabstract contract Nonces {\r\n    /**\r\n     * @dev The nonce used for an `account` is not the expected current nonce.\r\n     */\r\n    error InvalidAccountNonce(address account, uint256 currentNonce);\r\n\r\n    mapping(address account => uint256) private _nonces;\r\n\r\n    /**\r\n     * @dev Returns the next unused nonce for an address.\r\n     */\r\n    function nonces(address owner) public view virtual returns (uint256) {\r\n        return _nonces[owner];\r\n    }\r\n\r\n    /**\r\n     * @dev Consumes a nonce.\r\n     *\r\n     * Returns the current value and increments nonce.\r\n     */\r\n    function _useNonce(address owner) internal virtual returns (uint256) {\r\n        // For each account, the nonce has an initial value of 0, can only be incremented by one, and cannot be\r\n        // decremented or reset. This guarantees that the nonce never overflows.\r\n        unchecked {\r\n            // It is important to do x++ and not ++x here.\r\n            return _nonces[owner]++;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Same as {_useNonce} but checking that `nonce` is the next valid for `owner`.\r\n     */\r\n    function _useCheckedNonce(address owner, uint256 nonce) internal virtual {\r\n        uint256 current = _useNonce(owner);\r\n        if (nonce != current) {\r\n            revert InvalidAccountNonce(owner, current);\r\n        }\r\n    }\r\n}\r\n"},"@openzeppelin/contracts/utils/Panic.sol":{"content":"// SPDX-License-Identifier: MIT\r\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/Panic.sol)\r\n\r\npragma solidity ^0.8.20;\r\n\r\n/**\r\n * @dev Helper library for emitting standardized panic codes.\r\n *\r\n * ```solidity\r\n * contract Example {\r\n *      using Panic for uint256;\r\n *\r\n *      // Use any of the declared internal constants\r\n *      function foo() { Panic.GENERIC.panic(); }\r\n *\r\n *      // Alternatively\r\n *      function foo() { Panic.panic(Panic.GENERIC); }\r\n * }\r\n * ```\r\n *\r\n * Follows the list from https://github.com/ethereum/solidity/blob/v0.8.24/libsolutil/ErrorCodes.h[libsolutil].\r\n *\r\n * _Available since v5.1._\r\n */\r\n// slither-disable-next-line unused-state\r\nlibrary Panic {\r\n    /// @dev generic / unspecified error\r\n    uint256 internal constant GENERIC = 0x00;\r\n    /// @dev used by the assert() builtin\r\n    uint256 internal constant ASSERT = 0x01;\r\n    /// @dev arithmetic underflow or overflow\r\n    uint256 internal constant UNDER_OVERFLOW = 0x11;\r\n    /// @dev division or modulo by zero\r\n    uint256 internal constant DIVISION_BY_ZERO = 0x12;\r\n    /// @dev enum conversion error\r\n    uint256 internal constant ENUM_CONVERSION_ERROR = 0x21;\r\n    /// @dev invalid encoding in storage\r\n    uint256 internal constant STORAGE_ENCODING_ERROR = 0x22;\r\n    /// @dev empty array pop\r\n    uint256 internal constant EMPTY_ARRAY_POP = 0x31;\r\n    /// @dev array out of bounds access\r\n    uint256 internal constant ARRAY_OUT_OF_BOUNDS = 0x32;\r\n    /// @dev resource error (too large allocation or too large array)\r\n    uint256 internal constant RESOURCE_ERROR = 0x41;\r\n    /// @dev calling invalid internal function\r\n    uint256 internal constant INVALID_INTERNAL_FUNCTION = 0x51;\r\n\r\n    /// @dev Reverts with a panic code. Recommended to use with\r\n    /// the internal constants with predefined codes.\r\n    function panic(uint256 code) internal pure {\r\n        assembly (\"memory-safe\") {\r\n            mstore(0x00, 0x4e487b71)\r\n            mstore(0x20, code)\r\n            revert(0x1c, 0x24)\r\n        }\r\n    }\r\n}\r\n"},"@openzeppelin/contracts/utils/Pausable.sol":{"content":"// SPDX-License-Identifier: MIT\r\n// OpenZeppelin Contracts (last updated v5.3.0) (utils/Pausable.sol)\r\n\r\npragma solidity ^0.8.20;\r\n\r\nimport {Context} from \"../utils/Context.sol\";\r\n\r\n/**\r\n * @dev Contract module which allows children to implement an emergency stop\r\n * mechanism that can be triggered by an authorized account.\r\n *\r\n * This module is used through inheritance. It will make available the\r\n * modifiers `whenNotPaused` and `whenPaused`, which can be applied to\r\n * the functions of your contract. Note that they will not be pausable by\r\n * simply including this module, only once the modifiers are put in place.\r\n */\r\nabstract contract Pausable is Context {\r\n    bool private _paused;\r\n\r\n    /**\r\n     * @dev Emitted when the pause is triggered by `account`.\r\n     */\r\n    event Paused(address account);\r\n\r\n    /**\r\n     * @dev Emitted when the pause is lifted by `account`.\r\n     */\r\n    event Unpaused(address account);\r\n\r\n    /**\r\n     * @dev The operation failed because the contract is paused.\r\n     */\r\n    error EnforcedPause();\r\n\r\n    /**\r\n     * @dev The operation failed because the contract is not paused.\r\n     */\r\n    error ExpectedPause();\r\n\r\n    /**\r\n     * @dev Modifier to make a function callable only when the contract is not paused.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - The contract must not be paused.\r\n     */\r\n    modifier whenNotPaused() {\r\n        _requireNotPaused();\r\n        _;\r\n    }\r\n\r\n    /**\r\n     * @dev Modifier to make a function callable only when the contract is paused.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - The contract must be paused.\r\n     */\r\n    modifier whenPaused() {\r\n        _requirePaused();\r\n        _;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns true if the contract is paused, and false otherwise.\r\n     */\r\n    function paused() public view virtual returns (bool) {\r\n        return _paused;\r\n    }\r\n\r\n    /**\r\n     * @dev Throws if the contract is paused.\r\n     */\r\n    function _requireNotPaused() internal view virtual {\r\n        if (paused()) {\r\n            revert EnforcedPause();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Throws if the contract is not paused.\r\n     */\r\n    function _requirePaused() internal view virtual {\r\n        if (!paused()) {\r\n            revert ExpectedPause();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Triggers stopped state.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - The contract must not be paused.\r\n     */\r\n    function _pause() internal virtual whenNotPaused {\r\n        _paused = true;\r\n        emit Paused(_msgSender());\r\n    }\r\n\r\n    /**\r\n     * @dev Returns to normal state.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - The contract must be paused.\r\n     */\r\n    function _unpause() internal virtual whenPaused {\r\n        _paused = false;\r\n        emit Unpaused(_msgSender());\r\n    }\r\n}\r\n"},"@openzeppelin/contracts/utils/ShortStrings.sol":{"content":"// SPDX-License-Identifier: MIT\r\n// OpenZeppelin Contracts (last updated v5.3.0) (utils/ShortStrings.sol)\r\n\r\npragma solidity ^0.8.20;\r\n\r\nimport {StorageSlot} from \"./StorageSlot.sol\";\r\n\r\n// | string  | 0xAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA   |\r\n// | length  | 0x                                                              BB |\r\ntype ShortString is bytes32;\r\n\r\n/**\r\n * @dev This library provides functions to convert short memory strings\r\n * into a `ShortString` type that can be used as an immutable variable.\r\n *\r\n * Strings of arbitrary length can be optimized using this library if\r\n * they are short enough (up to 31 bytes) by packing them with their\r\n * length (1 byte) in a single EVM word (32 bytes). Additionally, a\r\n * fallback mechanism can be used for every other case.\r\n *\r\n * Usage example:\r\n *\r\n * ```solidity\r\n * contract Named {\r\n *     using ShortStrings for *;\r\n *\r\n *     ShortString private immutable _name;\r\n *     string private _nameFallback;\r\n *\r\n *     constructor(string memory contractName) {\r\n *         _name = contractName.toShortStringWithFallback(_nameFallback);\r\n *     }\r\n *\r\n *     function name() external view returns (string memory) {\r\n *         return _name.toStringWithFallback(_nameFallback);\r\n *     }\r\n * }\r\n * ```\r\n */\r\nlibrary ShortStrings {\r\n    // Used as an identifier for strings longer than 31 bytes.\r\n    bytes32 private constant FALLBACK_SENTINEL = 0x00000000000000000000000000000000000000000000000000000000000000FF;\r\n\r\n    error StringTooLong(string str);\r\n    error InvalidShortString();\r\n\r\n    /**\r\n     * @dev Encode a string of at most 31 chars into a `ShortString`.\r\n     *\r\n     * This will trigger a `StringTooLong` error is the input string is too long.\r\n     */\r\n    function toShortString(string memory str) internal pure returns (ShortString) {\r\n        bytes memory bstr = bytes(str);\r\n        if (bstr.length > 31) {\r\n            revert StringTooLong(str);\r\n        }\r\n        return ShortString.wrap(bytes32(uint256(bytes32(bstr)) | bstr.length));\r\n    }\r\n\r\n    /**\r\n     * @dev Decode a `ShortString` back to a \"normal\" string.\r\n     */\r\n    function toString(ShortString sstr) internal pure returns (string memory) {\r\n        uint256 len = byteLength(sstr);\r\n        // using `new string(len)` would work locally but is not memory safe.\r\n        string memory str = new string(32);\r\n        assembly (\"memory-safe\") {\r\n            mstore(str, len)\r\n            mstore(add(str, 0x20), sstr)\r\n        }\r\n        return str;\r\n    }\r\n\r\n    /**\r\n     * @dev Return the length of a `ShortString`.\r\n     */\r\n    function byteLength(ShortString sstr) internal pure returns (uint256) {\r\n        uint256 result = uint256(ShortString.unwrap(sstr)) & 0xFF;\r\n        if (result > 31) {\r\n            revert InvalidShortString();\r\n        }\r\n        return result;\r\n    }\r\n\r\n    /**\r\n     * @dev Encode a string into a `ShortString`, or write it to storage if it is too long.\r\n     */\r\n    function toShortStringWithFallback(string memory value, string storage store) internal returns (ShortString) {\r\n        if (bytes(value).length < 32) {\r\n            return toShortString(value);\r\n        } else {\r\n            StorageSlot.getStringSlot(store).value = value;\r\n            return ShortString.wrap(FALLBACK_SENTINEL);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Decode a string that was encoded to `ShortString` or written to storage using {toShortStringWithFallback}.\r\n     */\r\n    function toStringWithFallback(ShortString value, string storage store) internal pure returns (string memory) {\r\n        if (ShortString.unwrap(value) != FALLBACK_SENTINEL) {\r\n            return toString(value);\r\n        } else {\r\n            return store;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Return the length of a string that was encoded to `ShortString` or written to storage using\r\n     * {toShortStringWithFallback}.\r\n     *\r\n     * WARNING: This will return the \"byte length\" of the string. This may not reflect the actual length in terms of\r\n     * actual characters as the UTF-8 encoding of a single character can span over multiple bytes.\r\n     */\r\n    function byteLengthWithFallback(ShortString value, string storage store) internal view returns (uint256) {\r\n        if (ShortString.unwrap(value) != FALLBACK_SENTINEL) {\r\n            return byteLength(value);\r\n        } else {\r\n            return bytes(store).length;\r\n        }\r\n    }\r\n}\r\n"},"@openzeppelin/contracts/utils/StorageSlot.sol":{"content":"// SPDX-License-Identifier: MIT\r\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/StorageSlot.sol)\r\n// This file was procedurally generated from scripts/generate/templates/StorageSlot.js.\r\n\r\npragma solidity ^0.8.20;\r\n\r\n/**\r\n * @dev Library for reading and writing primitive types to specific storage slots.\r\n *\r\n * Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts.\r\n * This library helps with reading and writing to such slots without the need for inline assembly.\r\n *\r\n * The functions in this library return Slot structs that contain a `value` member that can be used to read or write.\r\n *\r\n * Example usage to set ERC-1967 implementation slot:\r\n * ```solidity\r\n * contract ERC1967 {\r\n *     // Define the slot. Alternatively, use the SlotDerivation library to derive the slot.\r\n *     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\r\n *\r\n *     function _getImplementation() internal view returns (address) {\r\n *         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\r\n *     }\r\n *\r\n *     function _setImplementation(address newImplementation) internal {\r\n *         require(newImplementation.code.length > 0);\r\n *         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\r\n *     }\r\n * }\r\n * ```\r\n *\r\n * TIP: Consider using this library along with {SlotDerivation}.\r\n */\r\nlibrary StorageSlot {\r\n    struct AddressSlot {\r\n        address value;\r\n    }\r\n\r\n    struct BooleanSlot {\r\n        bool value;\r\n    }\r\n\r\n    struct Bytes32Slot {\r\n        bytes32 value;\r\n    }\r\n\r\n    struct Uint256Slot {\r\n        uint256 value;\r\n    }\r\n\r\n    struct Int256Slot {\r\n        int256 value;\r\n    }\r\n\r\n    struct StringSlot {\r\n        string value;\r\n    }\r\n\r\n    struct BytesSlot {\r\n        bytes value;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns an `AddressSlot` with member `value` located at `slot`.\r\n     */\r\n    function getAddressSlot(bytes32 slot) internal pure returns (AddressSlot storage r) {\r\n        assembly (\"memory-safe\") {\r\n            r.slot := slot\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Returns a `BooleanSlot` with member `value` located at `slot`.\r\n     */\r\n    function getBooleanSlot(bytes32 slot) internal pure returns (BooleanSlot storage r) {\r\n        assembly (\"memory-safe\") {\r\n            r.slot := slot\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Returns a `Bytes32Slot` with member `value` located at `slot`.\r\n     */\r\n    function getBytes32Slot(bytes32 slot) internal pure returns (Bytes32Slot storage r) {\r\n        assembly (\"memory-safe\") {\r\n            r.slot := slot\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Returns a `Uint256Slot` with member `value` located at `slot`.\r\n     */\r\n    function getUint256Slot(bytes32 slot) internal pure returns (Uint256Slot storage r) {\r\n        assembly (\"memory-safe\") {\r\n            r.slot := slot\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Returns a `Int256Slot` with member `value` located at `slot`.\r\n     */\r\n    function getInt256Slot(bytes32 slot) internal pure returns (Int256Slot storage r) {\r\n        assembly (\"memory-safe\") {\r\n            r.slot := slot\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Returns a `StringSlot` with member `value` located at `slot`.\r\n     */\r\n    function getStringSlot(bytes32 slot) internal pure returns (StringSlot storage r) {\r\n        assembly (\"memory-safe\") {\r\n            r.slot := slot\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Returns an `StringSlot` representation of the string storage pointer `store`.\r\n     */\r\n    function getStringSlot(string storage store) internal pure returns (StringSlot storage r) {\r\n        assembly (\"memory-safe\") {\r\n            r.slot := store.slot\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Returns a `BytesSlot` with member `value` located at `slot`.\r\n     */\r\n    function getBytesSlot(bytes32 slot) internal pure returns (BytesSlot storage r) {\r\n        assembly (\"memory-safe\") {\r\n            r.slot := slot\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Returns an `BytesSlot` representation of the bytes storage pointer `store`.\r\n     */\r\n    function getBytesSlot(bytes storage store) internal pure returns (BytesSlot storage r) {\r\n        assembly (\"memory-safe\") {\r\n            r.slot := store.slot\r\n        }\r\n    }\r\n}\r\n"},"@openzeppelin/contracts/utils/Strings.sol":{"content":"// SPDX-License-Identifier: MIT\r\n// OpenZeppelin Contracts (last updated v5.3.0) (utils/Strings.sol)\r\n\r\npragma solidity ^0.8.20;\r\n\r\nimport {Math} from \"./math/Math.sol\";\r\nimport {SafeCast} from \"./math/SafeCast.sol\";\r\nimport {SignedMath} from \"./math/SignedMath.sol\";\r\n\r\n/**\r\n * @dev String operations.\r\n */\r\nlibrary Strings {\r\n    using SafeCast for *;\r\n\r\n    bytes16 private constant HEX_DIGITS = \"0123456789abcdef\";\r\n    uint8 private constant ADDRESS_LENGTH = 20;\r\n    uint256 private constant SPECIAL_CHARS_LOOKUP =\r\n        (1 << 0x08) | // backspace\r\n            (1 << 0x09) | // tab\r\n            (1 << 0x0a) | // newline\r\n            (1 << 0x0c) | // form feed\r\n            (1 << 0x0d) | // carriage return\r\n            (1 << 0x22) | // double quote\r\n            (1 << 0x5c); // backslash\r\n\r\n    /**\r\n     * @dev The `value` string doesn't fit in the specified `length`.\r\n     */\r\n    error StringsInsufficientHexLength(uint256 value, uint256 length);\r\n\r\n    /**\r\n     * @dev The string being parsed contains characters that are not in scope of the given base.\r\n     */\r\n    error StringsInvalidChar();\r\n\r\n    /**\r\n     * @dev The string being parsed is not a properly formatted address.\r\n     */\r\n    error StringsInvalidAddressFormat();\r\n\r\n    /**\r\n     * @dev Converts a `uint256` to its ASCII `string` decimal representation.\r\n     */\r\n    function toString(uint256 value) internal pure returns (string memory) {\r\n        unchecked {\r\n            uint256 length = Math.log10(value) + 1;\r\n            string memory buffer = new string(length);\r\n            uint256 ptr;\r\n            assembly (\"memory-safe\") {\r\n                ptr := add(buffer, add(32, length))\r\n            }\r\n            while (true) {\r\n                ptr--;\r\n                assembly (\"memory-safe\") {\r\n                    mstore8(ptr, byte(mod(value, 10), HEX_DIGITS))\r\n                }\r\n                value /= 10;\r\n                if (value == 0) break;\r\n            }\r\n            return buffer;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Converts a `int256` to its ASCII `string` decimal representation.\r\n     */\r\n    function toStringSigned(int256 value) internal pure returns (string memory) {\r\n        return string.concat(value < 0 ? \"-\" : \"\", toString(SignedMath.abs(value)));\r\n    }\r\n\r\n    /**\r\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation.\r\n     */\r\n    function toHexString(uint256 value) internal pure returns (string memory) {\r\n        unchecked {\r\n            return toHexString(value, Math.log256(value) + 1);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length.\r\n     */\r\n    function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {\r\n        uint256 localValue = value;\r\n        bytes memory buffer = new bytes(2 * length + 2);\r\n        buffer[0] = \"0\";\r\n        buffer[1] = \"x\";\r\n        for (uint256 i = 2 * length + 1; i > 1; --i) {\r\n            buffer[i] = HEX_DIGITS[localValue & 0xf];\r\n            localValue >>= 4;\r\n        }\r\n        if (localValue != 0) {\r\n            revert StringsInsufficientHexLength(value, length);\r\n        }\r\n        return string(buffer);\r\n    }\r\n\r\n    /**\r\n     * @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal\r\n     * representation.\r\n     */\r\n    function toHexString(address addr) internal pure returns (string memory) {\r\n        return toHexString(uint256(uint160(addr)), ADDRESS_LENGTH);\r\n    }\r\n\r\n    /**\r\n     * @dev Converts an `address` with fixed length of 20 bytes to its checksummed ASCII `string` hexadecimal\r\n     * representation, according to EIP-55.\r\n     */\r\n    function toChecksumHexString(address addr) internal pure returns (string memory) {\r\n        bytes memory buffer = bytes(toHexString(addr));\r\n\r\n        // hash the hex part of buffer (skip length + 2 bytes, length 40)\r\n        uint256 hashValue;\r\n        assembly (\"memory-safe\") {\r\n            hashValue := shr(96, keccak256(add(buffer, 0x22), 40))\r\n        }\r\n\r\n        for (uint256 i = 41; i > 1; --i) {\r\n            // possible values for buffer[i] are 48 (0) to 57 (9) and 97 (a) to 102 (f)\r\n            if (hashValue & 0xf > 7 && uint8(buffer[i]) > 96) {\r\n                // case shift by xoring with 0x20\r\n                buffer[i] ^= 0x20;\r\n            }\r\n            hashValue >>= 4;\r\n        }\r\n        return string(buffer);\r\n    }\r\n\r\n    /**\r\n     * @dev Returns true if the two strings are equal.\r\n     */\r\n    function equal(string memory a, string memory b) internal pure returns (bool) {\r\n        return bytes(a).length == bytes(b).length && keccak256(bytes(a)) == keccak256(bytes(b));\r\n    }\r\n\r\n    /**\r\n     * @dev Parse a decimal string and returns the value as a `uint256`.\r\n     *\r\n     * Requirements:\r\n     * - The string must be formatted as `[0-9]*`\r\n     * - The result must fit into an `uint256` type\r\n     */\r\n    function parseUint(string memory input) internal pure returns (uint256) {\r\n        return parseUint(input, 0, bytes(input).length);\r\n    }\r\n\r\n    /**\r\n     * @dev Variant of {parseUint-string} that parses a substring of `input` located between position `begin` (included) and\r\n     * `end` (excluded).\r\n     *\r\n     * Requirements:\r\n     * - The substring must be formatted as `[0-9]*`\r\n     * - The result must fit into an `uint256` type\r\n     */\r\n    function parseUint(string memory input, uint256 begin, uint256 end) internal pure returns (uint256) {\r\n        (bool success, uint256 value) = tryParseUint(input, begin, end);\r\n        if (!success) revert StringsInvalidChar();\r\n        return value;\r\n    }\r\n\r\n    /**\r\n     * @dev Variant of {parseUint-string} that returns false if the parsing fails because of an invalid character.\r\n     *\r\n     * NOTE: This function will revert if the result does not fit in a `uint256`.\r\n     */\r\n    function tryParseUint(string memory input) internal pure returns (bool success, uint256 value) {\r\n        return _tryParseUintUncheckedBounds(input, 0, bytes(input).length);\r\n    }\r\n\r\n    /**\r\n     * @dev Variant of {parseUint-string-uint256-uint256} that returns false if the parsing fails because of an invalid\r\n     * character.\r\n     *\r\n     * NOTE: This function will revert if the result does not fit in a `uint256`.\r\n     */\r\n    function tryParseUint(\r\n        string memory input,\r\n        uint256 begin,\r\n        uint256 end\r\n    ) internal pure returns (bool success, uint256 value) {\r\n        if (end > bytes(input).length || begin > end) return (false, 0);\r\n        return _tryParseUintUncheckedBounds(input, begin, end);\r\n    }\r\n\r\n    /**\r\n     * @dev Implementation of {tryParseUint-string-uint256-uint256} that does not check bounds. Caller should make sure that\r\n     * `begin <= end <= input.length`. Other inputs would result in undefined behavior.\r\n     */\r\n    function _tryParseUintUncheckedBounds(\r\n        string memory input,\r\n        uint256 begin,\r\n        uint256 end\r\n    ) private pure returns (bool success, uint256 value) {\r\n        bytes memory buffer = bytes(input);\r\n\r\n        uint256 result = 0;\r\n        for (uint256 i = begin; i < end; ++i) {\r\n            uint8 chr = _tryParseChr(bytes1(_unsafeReadBytesOffset(buffer, i)));\r\n            if (chr > 9) return (false, 0);\r\n            result *= 10;\r\n            result += chr;\r\n        }\r\n        return (true, result);\r\n    }\r\n\r\n    /**\r\n     * @dev Parse a decimal string and returns the value as a `int256`.\r\n     *\r\n     * Requirements:\r\n     * - The string must be formatted as `[-+]?[0-9]*`\r\n     * - The result must fit in an `int256` type.\r\n     */\r\n    function parseInt(string memory input) internal pure returns (int256) {\r\n        return parseInt(input, 0, bytes(input).length);\r\n    }\r\n\r\n    /**\r\n     * @dev Variant of {parseInt-string} that parses a substring of `input` located between position `begin` (included) and\r\n     * `end` (excluded).\r\n     *\r\n     * Requirements:\r\n     * - The substring must be formatted as `[-+]?[0-9]*`\r\n     * - The result must fit in an `int256` type.\r\n     */\r\n    function parseInt(string memory input, uint256 begin, uint256 end) internal pure returns (int256) {\r\n        (bool success, int256 value) = tryParseInt(input, begin, end);\r\n        if (!success) revert StringsInvalidChar();\r\n        return value;\r\n    }\r\n\r\n    /**\r\n     * @dev Variant of {parseInt-string} that returns false if the parsing fails because of an invalid character or if\r\n     * the result does not fit in a `int256`.\r\n     *\r\n     * NOTE: This function will revert if the absolute value of the result does not fit in a `uint256`.\r\n     */\r\n    function tryParseInt(string memory input) internal pure returns (bool success, int256 value) {\r\n        return _tryParseIntUncheckedBounds(input, 0, bytes(input).length);\r\n    }\r\n\r\n    uint256 private constant ABS_MIN_INT256 = 2 ** 255;\r\n\r\n    /**\r\n     * @dev Variant of {parseInt-string-uint256-uint256} that returns false if the parsing fails because of an invalid\r\n     * character or if the result does not fit in a `int256`.\r\n     *\r\n     * NOTE: This function will revert if the absolute value of the result does not fit in a `uint256`.\r\n     */\r\n    function tryParseInt(\r\n        string memory input,\r\n        uint256 begin,\r\n        uint256 end\r\n    ) internal pure returns (bool success, int256 value) {\r\n        if (end > bytes(input).length || begin > end) return (false, 0);\r\n        return _tryParseIntUncheckedBounds(input, begin, end);\r\n    }\r\n\r\n    /**\r\n     * @dev Implementation of {tryParseInt-string-uint256-uint256} that does not check bounds. Caller should make sure that\r\n     * `begin <= end <= input.length`. Other inputs would result in undefined behavior.\r\n     */\r\n    function _tryParseIntUncheckedBounds(\r\n        string memory input,\r\n        uint256 begin,\r\n        uint256 end\r\n    ) private pure returns (bool success, int256 value) {\r\n        bytes memory buffer = bytes(input);\r\n\r\n        // Check presence of a negative sign.\r\n        bytes1 sign = begin == end ? bytes1(0) : bytes1(_unsafeReadBytesOffset(buffer, begin)); // don't do out-of-bound (possibly unsafe) read if sub-string is empty\r\n        bool positiveSign = sign == bytes1(\"+\");\r\n        bool negativeSign = sign == bytes1(\"-\");\r\n        uint256 offset = (positiveSign || negativeSign).toUint();\r\n\r\n        (bool absSuccess, uint256 absValue) = tryParseUint(input, begin + offset, end);\r\n\r\n        if (absSuccess && absValue < ABS_MIN_INT256) {\r\n            return (true, negativeSign ? -int256(absValue) : int256(absValue));\r\n        } else if (absSuccess && negativeSign && absValue == ABS_MIN_INT256) {\r\n            return (true, type(int256).min);\r\n        } else return (false, 0);\r\n    }\r\n\r\n    /**\r\n     * @dev Parse a hexadecimal string (with or without \"0x\" prefix), and returns the value as a `uint256`.\r\n     *\r\n     * Requirements:\r\n     * - The string must be formatted as `(0x)?[0-9a-fA-F]*`\r\n     * - The result must fit in an `uint256` type.\r\n     */\r\n    function parseHexUint(string memory input) internal pure returns (uint256) {\r\n        return parseHexUint(input, 0, bytes(input).length);\r\n    }\r\n\r\n    /**\r\n     * @dev Variant of {parseHexUint-string} that parses a substring of `input` located between position `begin` (included) and\r\n     * `end` (excluded).\r\n     *\r\n     * Requirements:\r\n     * - The substring must be formatted as `(0x)?[0-9a-fA-F]*`\r\n     * - The result must fit in an `uint256` type.\r\n     */\r\n    function parseHexUint(string memory input, uint256 begin, uint256 end) internal pure returns (uint256) {\r\n        (bool success, uint256 value) = tryParseHexUint(input, begin, end);\r\n        if (!success) revert StringsInvalidChar();\r\n        return value;\r\n    }\r\n\r\n    /**\r\n     * @dev Variant of {parseHexUint-string} that returns false if the parsing fails because of an invalid character.\r\n     *\r\n     * NOTE: This function will revert if the result does not fit in a `uint256`.\r\n     */\r\n    function tryParseHexUint(string memory input) internal pure returns (bool success, uint256 value) {\r\n        return _tryParseHexUintUncheckedBounds(input, 0, bytes(input).length);\r\n    }\r\n\r\n    /**\r\n     * @dev Variant of {parseHexUint-string-uint256-uint256} that returns false if the parsing fails because of an\r\n     * invalid character.\r\n     *\r\n     * NOTE: This function will revert if the result does not fit in a `uint256`.\r\n     */\r\n    function tryParseHexUint(\r\n        string memory input,\r\n        uint256 begin,\r\n        uint256 end\r\n    ) internal pure returns (bool success, uint256 value) {\r\n        if (end > bytes(input).length || begin > end) return (false, 0);\r\n        return _tryParseHexUintUncheckedBounds(input, begin, end);\r\n    }\r\n\r\n    /**\r\n     * @dev Implementation of {tryParseHexUint-string-uint256-uint256} that does not check bounds. Caller should make sure that\r\n     * `begin <= end <= input.length`. Other inputs would result in undefined behavior.\r\n     */\r\n    function _tryParseHexUintUncheckedBounds(\r\n        string memory input,\r\n        uint256 begin,\r\n        uint256 end\r\n    ) private pure returns (bool success, uint256 value) {\r\n        bytes memory buffer = bytes(input);\r\n\r\n        // skip 0x prefix if present\r\n        bool hasPrefix = (end > begin + 1) && bytes2(_unsafeReadBytesOffset(buffer, begin)) == bytes2(\"0x\"); // don't do out-of-bound (possibly unsafe) read if sub-string is empty\r\n        uint256 offset = hasPrefix.toUint() * 2;\r\n\r\n        uint256 result = 0;\r\n        for (uint256 i = begin + offset; i < end; ++i) {\r\n            uint8 chr = _tryParseChr(bytes1(_unsafeReadBytesOffset(buffer, i)));\r\n            if (chr > 15) return (false, 0);\r\n            result *= 16;\r\n            unchecked {\r\n                // Multiplying by 16 is equivalent to a shift of 4 bits (with additional overflow check).\r\n                // This guarantees that adding a value < 16 will not cause an overflow, hence the unchecked.\r\n                result += chr;\r\n            }\r\n        }\r\n        return (true, result);\r\n    }\r\n\r\n    /**\r\n     * @dev Parse a hexadecimal string (with or without \"0x\" prefix), and returns the value as an `address`.\r\n     *\r\n     * Requirements:\r\n     * - The string must be formatted as `(0x)?[0-9a-fA-F]{40}`\r\n     */\r\n    function parseAddress(string memory input) internal pure returns (address) {\r\n        return parseAddress(input, 0, bytes(input).length);\r\n    }\r\n\r\n    /**\r\n     * @dev Variant of {parseAddress-string} that parses a substring of `input` located between position `begin` (included) and\r\n     * `end` (excluded).\r\n     *\r\n     * Requirements:\r\n     * - The substring must be formatted as `(0x)?[0-9a-fA-F]{40}`\r\n     */\r\n    function parseAddress(string memory input, uint256 begin, uint256 end) internal pure returns (address) {\r\n        (bool success, address value) = tryParseAddress(input, begin, end);\r\n        if (!success) revert StringsInvalidAddressFormat();\r\n        return value;\r\n    }\r\n\r\n    /**\r\n     * @dev Variant of {parseAddress-string} that returns false if the parsing fails because the input is not a properly\r\n     * formatted address. See {parseAddress-string} requirements.\r\n     */\r\n    function tryParseAddress(string memory input) internal pure returns (bool success, address value) {\r\n        return tryParseAddress(input, 0, bytes(input).length);\r\n    }\r\n\r\n    /**\r\n     * @dev Variant of {parseAddress-string-uint256-uint256} that returns false if the parsing fails because input is not a properly\r\n     * formatted address. See {parseAddress-string-uint256-uint256} requirements.\r\n     */\r\n    function tryParseAddress(\r\n        string memory input,\r\n        uint256 begin,\r\n        uint256 end\r\n    ) internal pure returns (bool success, address value) {\r\n        if (end > bytes(input).length || begin > end) return (false, address(0));\r\n\r\n        bool hasPrefix = (end > begin + 1) && bytes2(_unsafeReadBytesOffset(bytes(input), begin)) == bytes2(\"0x\"); // don't do out-of-bound (possibly unsafe) read if sub-string is empty\r\n        uint256 expectedLength = 40 + hasPrefix.toUint() * 2;\r\n\r\n        // check that input is the correct length\r\n        if (end - begin == expectedLength) {\r\n            // length guarantees that this does not overflow, and value is at most type(uint160).max\r\n            (bool s, uint256 v) = _tryParseHexUintUncheckedBounds(input, begin, end);\r\n            return (s, address(uint160(v)));\r\n        } else {\r\n            return (false, address(0));\r\n        }\r\n    }\r\n\r\n    function _tryParseChr(bytes1 chr) private pure returns (uint8) {\r\n        uint8 value = uint8(chr);\r\n\r\n        // Try to parse `chr`:\r\n        // - Case 1: [0-9]\r\n        // - Case 2: [a-f]\r\n        // - Case 3: [A-F]\r\n        // - otherwise not supported\r\n        unchecked {\r\n            if (value > 47 && value < 58) value -= 48;\r\n            else if (value > 96 && value < 103) value -= 87;\r\n            else if (value > 64 && value < 71) value -= 55;\r\n            else return type(uint8).max;\r\n        }\r\n\r\n        return value;\r\n    }\r\n\r\n    /**\r\n     * @dev Escape special characters in JSON strings. This can be useful to prevent JSON injection in NFT metadata.\r\n     *\r\n     * WARNING: This function should only be used in double quoted JSON strings. Single quotes are not escaped.\r\n     *\r\n     * NOTE: This function escapes all unicode characters, and not just the ones in ranges defined in section 2.5 of\r\n     * RFC-4627 (U+0000 to U+001F, U+0022 and U+005C). ECMAScript's `JSON.parse` does recover escaped unicode\r\n     * characters that are not in this range, but other tooling may provide different results.\r\n     */\r\n    function escapeJSON(string memory input) internal pure returns (string memory) {\r\n        bytes memory buffer = bytes(input);\r\n        bytes memory output = new bytes(2 * buffer.length); // worst case scenario\r\n        uint256 outputLength = 0;\r\n\r\n        for (uint256 i; i < buffer.length; ++i) {\r\n            bytes1 char = bytes1(_unsafeReadBytesOffset(buffer, i));\r\n            if (((SPECIAL_CHARS_LOOKUP & (1 << uint8(char))) != 0)) {\r\n                output[outputLength++] = \"\\\\\";\r\n                if (char == 0x08) output[outputLength++] = \"b\";\r\n                else if (char == 0x09) output[outputLength++] = \"t\";\r\n                else if (char == 0x0a) output[outputLength++] = \"n\";\r\n                else if (char == 0x0c) output[outputLength++] = \"f\";\r\n                else if (char == 0x0d) output[outputLength++] = \"r\";\r\n                else if (char == 0x5c) output[outputLength++] = \"\\\\\";\r\n                else if (char == 0x22) {\r\n                    // solhint-disable-next-line quotes\r\n                    output[outputLength++] = '\"';\r\n                }\r\n            } else {\r\n                output[outputLength++] = char;\r\n            }\r\n        }\r\n        // write the actual length and deallocate unused memory\r\n        assembly (\"memory-safe\") {\r\n            mstore(output, outputLength)\r\n            mstore(0x40, add(output, shl(5, shr(5, add(outputLength, 63)))))\r\n        }\r\n\r\n        return string(output);\r\n    }\r\n\r\n    /**\r\n     * @dev Reads a bytes32 from a bytes array without bounds checking.\r\n     *\r\n     * NOTE: making this function internal would mean it could be used with memory unsafe offset, and marking the\r\n     * assembly block as such would prevent some optimizations.\r\n     */\r\n    function _unsafeReadBytesOffset(bytes memory buffer, uint256 offset) private pure returns (bytes32 value) {\r\n        // This is not memory safe in the general case, but all calls to this private function are within bounds.\r\n        assembly (\"memory-safe\") {\r\n            value := mload(add(buffer, add(0x20, offset)))\r\n        }\r\n    }\r\n}\r\n"},"contracts/PADToken.sol":{"content":"// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.20;\r\n\r\nimport \"@openzeppelin/contracts/token/ERC20/ERC20.sol\";\r\nimport \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol\";\r\nimport \"@openzeppelin/contracts/utils/Pausable.sol\";\r\nimport \"@openzeppelin/contracts/access/AccessControl.sol\";\r\n\r\n/**\r\n * @title PADToken\r\n * @dev ERC20 + EIP-2612 Permit, batch transfer, pausable (Gnosis Safe + role)\r\n * Anti-flash-loan protection with cooldown periods\r\n */\r\ncontract PADToken is ERC20, ERC20Permit, Pausable, AccessControl {\r\n    bytes32 public constant PAUSER_ROLE = keccak256(\"PAUSER_ROLE\");\r\n    bytes32 public constant ADMIN_ROLE = keccak256(\"ADMIN_ROLE\");\r\n    address public gnosisSafe;\r\n\r\n    // Cooldown period in seconds\r\n    uint256 public cooldownPeriod;\r\n    // Mapping of address to last transfer timestamp\r\n    mapping(address => uint256) public lastTransferTimestamp;\r\n    // Mapping of address to cooldown status\r\n    mapping(address => bool) public hasCooldown;\r\n\r\n    event GnosisSafeSet(address indexed newGnosisSafe);\r\n    event CooldownSet(address indexed account, bool status);\r\n    event CooldownPeriodSet(uint256 newPeriod);\r\n\r\n    constructor() ERC20(\"PAD Token\", \"PAD\") ERC20Permit(\"PAD Token\") {\r\n        _grantRole(DEFAULT_ADMIN_ROLE, msg.sender);\r\n        _grantRole(PAUSER_ROLE, msg.sender);\r\n        _grantRole(ADMIN_ROLE, msg.sender);\r\n        _mint(msg.sender, 1_000_000_000 * 10 ** decimals());\r\n        cooldownPeriod = 1 hours; // Default cooldown period\r\n    }\r\n\r\n    function pause() public onlyRole(PAUSER_ROLE) {\r\n        _pause();\r\n    }\r\n\r\n    function unpause() public onlyRole(PAUSER_ROLE) {\r\n        _unpause();\r\n    }\r\n\r\n    function setGnosisSafe(address _gnosisSafe) external onlyRole(ADMIN_ROLE) {\r\n        require(_gnosisSafe != address(0), \"Invalid address\");\r\n        gnosisSafe = _gnosisSafe;\r\n        emit GnosisSafeSet(_gnosisSafe);\r\n    }\r\n\r\n    function setCooldownPeriod(uint256 _cooldownPeriod) external onlyRole(ADMIN_ROLE) {\r\n        require(_cooldownPeriod > 0, \"Invalid cooldown period\");\r\n        cooldownPeriod = _cooldownPeriod;\r\n        emit CooldownPeriodSet(_cooldownPeriod);\r\n    }\r\n\r\n    function setCooldown(address account, bool status) external onlyRole(ADMIN_ROLE) {\r\n        hasCooldown[account] = status;\r\n        emit CooldownSet(account, status);\r\n    }\r\n\r\n    function batchTransfer(address[] calldata recipients, uint256[] calldata amounts) external whenNotPaused {\r\n        require(recipients.length == amounts.length, \"Arrays length mismatch\");\r\n        uint256 totalAmount = 0;\r\n        for (uint256 i = 0; i < amounts.length; i++) {\r\n            totalAmount += amounts[i];\r\n        }\r\n        require(balanceOf(msg.sender) >= totalAmount, \"Insufficient balance\");\r\n        \r\n        // Check cooldown for sender\r\n        if (hasCooldown[msg.sender]) {\r\n            require(block.timestamp >= lastTransferTimestamp[msg.sender] + cooldownPeriod, \"Cooldown period not elapsed\");\r\n        }\r\n\r\n        for (uint256 i = 0; i < recipients.length; i++) {\r\n            _transfer(msg.sender, recipients[i], amounts[i]);\r\n        }\r\n\r\n        // Update last transfer timestamp\r\n        lastTransferTimestamp[msg.sender] = block.timestamp;\r\n    }\r\n\r\n    function _update(address from, address to, uint256 value) internal override(ERC20) whenNotPaused {\r\n        // Check cooldown for sender\r\n        if (hasCooldown[from]) {\r\n            require(block.timestamp >= lastTransferTimestamp[from] + cooldownPeriod, \"Cooldown period not elapsed\");\r\n            lastTransferTimestamp[from] = block.timestamp;\r\n        }\r\n        super._update(from, to, value);\r\n    }\r\n\r\n    // --- AccessControl override ---\r\n    function supportsInterface(bytes4 interfaceId) public view override(AccessControl) returns (bool) {\r\n        return super.supportsInterface(interfaceId);\r\n    }\r\n} "}},"settings":{"optimizer":{"enabled":true,"runs":200},"evmVersion":"paris","outputSelection":{"*":{"*":["abi","evm.bytecode","evm.deployedBytecode","evm.methodIdentifiers","metadata","storageLayout"],"":["ast"]}}}},"output":{"sources":{"@openzeppelin/contracts/access/AccessControl.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/access/AccessControl.sol","exportedSymbols":{"AccessControl":[295],"Context":[1379],"ERC165":[4035],"IAccessControl":[378]},"id":296,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"111:24:0"},{"absolutePath":"@openzeppelin/contracts/access/IAccessControl.sol","file":"./IAccessControl.sol","id":3,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":296,"sourceUnit":379,"src":"139:52:0","symbolAliases":[{"foreign":{"id":2,"name":"IAccessControl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":378,"src":"147:14:0","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","file":"../utils/Context.sol","id":5,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":296,"sourceUnit":1380,"src":"193:45:0","symbolAliases":[{"foreign":{"id":4,"name":"Context","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1379,"src":"201:7:0","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/introspection/ERC165.sol","file":"../utils/introspection/ERC165.sol","id":7,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":296,"sourceUnit":4036,"src":"240:57:0","symbolAliases":[{"foreign":{"id":6,"name":"ERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4035,"src":"248:6:0","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":9,"name":"Context","nameLocations":["2036:7:0"],"nodeType":"IdentifierPath","referencedDeclaration":1379,"src":"2036:7:0"},"id":10,"nodeType":"InheritanceSpecifier","src":"2036:7:0"},{"baseName":{"id":11,"name":"IAccessControl","nameLocations":["2045:14:0"],"nodeType":"IdentifierPath","referencedDeclaration":378,"src":"2045:14:0"},"id":12,"nodeType":"InheritanceSpecifier","src":"2045:14:0"},{"baseName":{"id":13,"name":"ERC165","nameLocations":["2061:6:0"],"nodeType":"IdentifierPath","referencedDeclaration":4035,"src":"2061:6:0"},"id":14,"nodeType":"InheritanceSpecifier","src":"2061:6:0"}],"canonicalName":"AccessControl","contractDependencies":[],"contractKind":"contract","documentation":{"id":8,"nodeType":"StructuredDocumentation","src":"301:1698:0","text":" @dev Contract module that allows children to implement role-based access\n control mechanisms. This is a lightweight version that doesn't allow enumerating role\n members except through off-chain means by accessing the contract event logs. Some\n applications may benefit from on-chain enumerability, for those cases see\n {AccessControlEnumerable}.\n Roles are referred to by their `bytes32` identifier. These should be exposed\n in the external API and be unique. The best way to achieve this is by\n using `public constant` hash digests:\n ```solidity\n bytes32 public constant MY_ROLE = keccak256(\"MY_ROLE\");\n ```\n Roles can be used to represent a set of permissions. To restrict access to a\n function call, use {hasRole}:\n ```solidity\n function foo() public {\n     require(hasRole(MY_ROLE, msg.sender));\n     ...\n }\n ```\n Roles can be granted and revoked dynamically via the {grantRole} and\n {revokeRole} functions. Each role has an associated admin role, and only\n accounts that have a role's admin role can call {grantRole} and {revokeRole}.\n By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means\n that only accounts with this role will be able to grant or revoke other\n roles. More complex role relationships can be created by using\n {_setRoleAdmin}.\n WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to\n grant and revoke this role. Extra precautions should be taken to secure\n accounts that have been granted it. We recommend using {AccessControlDefaultAdminRules}\n to enforce additional security measures for this role."},"fullyImplemented":true,"id":295,"linearizedBaseContracts":[295,4035,4047,378,1379],"name":"AccessControl","nameLocation":"2019:13:0","nodeType":"ContractDefinition","nodes":[{"canonicalName":"AccessControl.RoleData","id":21,"members":[{"constant":false,"id":18,"mutability":"mutable","name":"hasRole","nameLocation":"2135:7:0","nodeType":"VariableDeclaration","scope":21,"src":"2102:40:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"},"typeName":{"id":17,"keyName":"account","keyNameLocation":"2118:7:0","keyType":{"id":15,"name":"address","nodeType":"ElementaryTypeName","src":"2110:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"2102:32:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":16,"name":"bool","nodeType":"ElementaryTypeName","src":"2129:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}},"visibility":"internal"},{"constant":false,"id":20,"mutability":"mutable","name":"adminRole","nameLocation":"2161:9:0","nodeType":"VariableDeclaration","scope":21,"src":"2153:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":19,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2153:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"name":"RoleData","nameLocation":"2082:8:0","nodeType":"StructDefinition","scope":295,"src":"2075:103:0","visibility":"public"},{"constant":false,"id":26,"mutability":"mutable","name":"_roles","nameLocation":"2228:6:0","nodeType":"VariableDeclaration","scope":295,"src":"2186:48:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_RoleData_$21_storage_$","typeString":"mapping(bytes32 => struct AccessControl.RoleData)"},"typeName":{"id":25,"keyName":"role","keyNameLocation":"2202:4:0","keyType":{"id":22,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2194:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Mapping","src":"2186:33:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_RoleData_$21_storage_$","typeString":"mapping(bytes32 => struct AccessControl.RoleData)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":24,"nodeType":"UserDefinedTypeName","pathNode":{"id":23,"name":"RoleData","nameLocations":["2210:8:0"],"nodeType":"IdentifierPath","referencedDeclaration":21,"src":"2210:8:0"},"referencedDeclaration":21,"src":"2210:8:0","typeDescriptions":{"typeIdentifier":"t_struct$_RoleData_$21_storage_ptr","typeString":"struct AccessControl.RoleData"}}},"visibility":"private"},{"constant":true,"functionSelector":"a217fddf","id":29,"mutability":"constant","name":"DEFAULT_ADMIN_ROLE","nameLocation":"2267:18:0","nodeType":"VariableDeclaration","scope":295,"src":"2243:49:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":27,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2243:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"hexValue":"30783030","id":28,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2288:4:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0x00"},"visibility":"public"},{"body":{"id":39,"nodeType":"Block","src":"2516:47:0","statements":[{"expression":{"arguments":[{"id":35,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":32,"src":"2538:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":34,"name":"_checkRole","nodeType":"Identifier","overloadedDeclarations":[93,114],"referencedDeclaration":93,"src":"2527:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$returns$__$","typeString":"function (bytes32) view"}},"id":36,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2527:16:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":37,"nodeType":"ExpressionStatement","src":"2527:16:0"},{"id":38,"nodeType":"PlaceholderStatement","src":"2554:1:0"}]},"documentation":{"id":30,"nodeType":"StructuredDocumentation","src":"2301:177:0","text":" @dev Modifier that checks that an account has a specific role. Reverts\n with an {AccessControlUnauthorizedAccount} error including the required role."},"id":40,"name":"onlyRole","nameLocation":"2493:8:0","nodeType":"ModifierDefinition","parameters":{"id":33,"nodeType":"ParameterList","parameters":[{"constant":false,"id":32,"mutability":"mutable","name":"role","nameLocation":"2510:4:0","nodeType":"VariableDeclaration","scope":40,"src":"2502:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":31,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2502:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2501:14:0"},"src":"2484:79:0","virtual":false,"visibility":"internal"},{"baseFunctions":[4034],"body":{"id":61,"nodeType":"Block","src":"2726:113:0","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":59,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":54,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":49,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":43,"src":"2744:11:0","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":51,"name":"IAccessControl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":378,"src":"2764:14:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IAccessControl_$378_$","typeString":"type(contract IAccessControl)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_contract$_IAccessControl_$378_$","typeString":"type(contract IAccessControl)"}],"id":50,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"2759:4:0","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":52,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2759:20:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_contract$_IAccessControl_$378","typeString":"type(contract IAccessControl)"}},"id":53,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2780:11:0","memberName":"interfaceId","nodeType":"MemberAccess","src":"2759:32:0","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"2744:47:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"arguments":[{"id":57,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":43,"src":"2819:11:0","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"}],"expression":{"id":55,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"2795:5:0","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_AccessControl_$295_$","typeString":"type(contract super AccessControl)"}},"id":56,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2801:17:0","memberName":"supportsInterface","nodeType":"MemberAccess","referencedDeclaration":4034,"src":"2795:23:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes4_$returns$_t_bool_$","typeString":"function (bytes4) view returns (bool)"}},"id":58,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2795:36:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"2744:87:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":48,"id":60,"nodeType":"Return","src":"2737:94:0"}]},"documentation":{"id":41,"nodeType":"StructuredDocumentation","src":"2571:58:0","text":" @dev See {IERC165-supportsInterface}."},"functionSelector":"01ffc9a7","id":62,"implemented":true,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"2644:17:0","nodeType":"FunctionDefinition","overrides":{"id":45,"nodeType":"OverrideSpecifier","overrides":[],"src":"2702:8:0"},"parameters":{"id":44,"nodeType":"ParameterList","parameters":[{"constant":false,"id":43,"mutability":"mutable","name":"interfaceId","nameLocation":"2669:11:0","nodeType":"VariableDeclaration","scope":62,"src":"2662:18:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":42,"name":"bytes4","nodeType":"ElementaryTypeName","src":"2662:6:0","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"2661:20:0"},"returnParameters":{"id":48,"nodeType":"ParameterList","parameters":[{"constant":false,"id":47,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":62,"src":"2720:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":46,"name":"bool","nodeType":"ElementaryTypeName","src":"2720:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2719:6:0"},"scope":295,"src":"2635:204:0","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[345],"body":{"id":79,"nodeType":"Block","src":"3014:55:0","statements":[{"expression":{"baseExpression":{"expression":{"baseExpression":{"id":72,"name":"_roles","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":26,"src":"3032:6:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_RoleData_$21_storage_$","typeString":"mapping(bytes32 => struct AccessControl.RoleData storage ref)"}},"id":74,"indexExpression":{"id":73,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":65,"src":"3039:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3032:12:0","typeDescriptions":{"typeIdentifier":"t_struct$_RoleData_$21_storage","typeString":"struct AccessControl.RoleData storage ref"}},"id":75,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3045:7:0","memberName":"hasRole","nodeType":"MemberAccess","referencedDeclaration":18,"src":"3032:20:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":77,"indexExpression":{"id":76,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":67,"src":"3053:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3032:29:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":71,"id":78,"nodeType":"Return","src":"3025:36:0"}]},"documentation":{"id":63,"nodeType":"StructuredDocumentation","src":"2847:78:0","text":" @dev Returns `true` if `account` has been granted `role`."},"functionSelector":"91d14854","id":80,"implemented":true,"kind":"function","modifiers":[],"name":"hasRole","nameLocation":"2940:7:0","nodeType":"FunctionDefinition","parameters":{"id":68,"nodeType":"ParameterList","parameters":[{"constant":false,"id":65,"mutability":"mutable","name":"role","nameLocation":"2956:4:0","nodeType":"VariableDeclaration","scope":80,"src":"2948:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":64,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2948:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":67,"mutability":"mutable","name":"account","nameLocation":"2970:7:0","nodeType":"VariableDeclaration","scope":80,"src":"2962:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":66,"name":"address","nodeType":"ElementaryTypeName","src":"2962:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2947:31:0"},"returnParameters":{"id":71,"nodeType":"ParameterList","parameters":[{"constant":false,"id":70,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":80,"src":"3008:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":69,"name":"bool","nodeType":"ElementaryTypeName","src":"3008:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3007:6:0"},"scope":295,"src":"2931:138:0","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":92,"nodeType":"Block","src":"3340:49:0","statements":[{"expression":{"arguments":[{"id":87,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":83,"src":"3362:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"arguments":[],"expression":{"argumentTypes":[],"id":88,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1361,"src":"3368:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":89,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3368:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":86,"name":"_checkRole","nodeType":"Identifier","overloadedDeclarations":[93,114],"referencedDeclaration":114,"src":"3351:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_address_$returns$__$","typeString":"function (bytes32,address) view"}},"id":90,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3351:30:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":91,"nodeType":"ExpressionStatement","src":"3351:30:0"}]},"documentation":{"id":81,"nodeType":"StructuredDocumentation","src":"3077:201:0","text":" @dev Reverts with an {AccessControlUnauthorizedAccount} error if `_msgSender()`\n is missing `role`. Overriding this function changes the behavior of the {onlyRole} modifier."},"id":93,"implemented":true,"kind":"function","modifiers":[],"name":"_checkRole","nameLocation":"3293:10:0","nodeType":"FunctionDefinition","parameters":{"id":84,"nodeType":"ParameterList","parameters":[{"constant":false,"id":83,"mutability":"mutable","name":"role","nameLocation":"3312:4:0","nodeType":"VariableDeclaration","scope":93,"src":"3304:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":82,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3304:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3303:14:0"},"returnParameters":{"id":85,"nodeType":"ParameterList","parameters":[],"src":"3340:0:0"},"scope":295,"src":"3284:105:0","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":113,"nodeType":"Block","src":"3598:128:0","statements":[{"condition":{"id":105,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"3613:23:0","subExpression":{"arguments":[{"id":102,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":96,"src":"3622:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":103,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":98,"src":"3628:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":101,"name":"hasRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":80,"src":"3614:7:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) view returns (bool)"}},"id":104,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3614:22:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":112,"nodeType":"IfStatement","src":"3609:110:0","trueBody":{"id":111,"nodeType":"Block","src":"3638:81:0","statements":[{"errorCall":{"arguments":[{"id":107,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":98,"src":"3693:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":108,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":96,"src":"3702:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":106,"name":"AccessControlUnauthorizedAccount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":305,"src":"3660:32:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$_t_bytes32_$returns$_t_error_$","typeString":"function (address,bytes32) pure returns (error)"}},"id":109,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3660:47:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":110,"nodeType":"RevertStatement","src":"3653:54:0"}]}}]},"documentation":{"id":94,"nodeType":"StructuredDocumentation","src":"3397:122:0","text":" @dev Reverts with an {AccessControlUnauthorizedAccount} error if `account`\n is missing `role`."},"id":114,"implemented":true,"kind":"function","modifiers":[],"name":"_checkRole","nameLocation":"3534:10:0","nodeType":"FunctionDefinition","parameters":{"id":99,"nodeType":"ParameterList","parameters":[{"constant":false,"id":96,"mutability":"mutable","name":"role","nameLocation":"3553:4:0","nodeType":"VariableDeclaration","scope":114,"src":"3545:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":95,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3545:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":98,"mutability":"mutable","name":"account","nameLocation":"3567:7:0","nodeType":"VariableDeclaration","scope":114,"src":"3559:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":97,"name":"address","nodeType":"ElementaryTypeName","src":"3559:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3544:31:0"},"returnParameters":{"id":100,"nodeType":"ParameterList","parameters":[],"src":"3598:0:0"},"scope":295,"src":"3525:201:0","stateMutability":"view","virtual":true,"visibility":"internal"},{"baseFunctions":[353],"body":{"id":127,"nodeType":"Block","src":"3989:48:0","statements":[{"expression":{"expression":{"baseExpression":{"id":122,"name":"_roles","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":26,"src":"4007:6:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_RoleData_$21_storage_$","typeString":"mapping(bytes32 => struct AccessControl.RoleData storage ref)"}},"id":124,"indexExpression":{"id":123,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":117,"src":"4014:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4007:12:0","typeDescriptions":{"typeIdentifier":"t_struct$_RoleData_$21_storage","typeString":"struct AccessControl.RoleData storage ref"}},"id":125,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4020:9:0","memberName":"adminRole","nodeType":"MemberAccess","referencedDeclaration":20,"src":"4007:22:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":121,"id":126,"nodeType":"Return","src":"4000:29:0"}]},"documentation":{"id":115,"nodeType":"StructuredDocumentation","src":"3734:175:0","text":" @dev Returns the admin role that controls `role`. See {grantRole} and\n {revokeRole}.\n To change a role's admin, use {_setRoleAdmin}."},"functionSelector":"248a9ca3","id":128,"implemented":true,"kind":"function","modifiers":[],"name":"getRoleAdmin","nameLocation":"3924:12:0","nodeType":"FunctionDefinition","parameters":{"id":118,"nodeType":"ParameterList","parameters":[{"constant":false,"id":117,"mutability":"mutable","name":"role","nameLocation":"3945:4:0","nodeType":"VariableDeclaration","scope":128,"src":"3937:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":116,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3937:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3936:14:0"},"returnParameters":{"id":121,"nodeType":"ParameterList","parameters":[{"constant":false,"id":120,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":128,"src":"3980:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":119,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3980:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3979:9:0"},"scope":295,"src":"3915:122:0","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[361],"body":{"id":146,"nodeType":"Block","src":"4441:44:0","statements":[{"expression":{"arguments":[{"id":142,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":131,"src":"4463:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":143,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":133,"src":"4469:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":141,"name":"_grantRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":256,"src":"4452:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) returns (bool)"}},"id":144,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4452:25:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":145,"nodeType":"ExpressionStatement","src":"4452:25:0"}]},"documentation":{"id":129,"nodeType":"StructuredDocumentation","src":"4045:296:0","text":" @dev Grants `role` to `account`.\n If `account` had not been already granted `role`, emits a {RoleGranted}\n event.\n Requirements:\n - the caller must have ``role``'s admin role.\n May emit a {RoleGranted} event."},"functionSelector":"2f2ff15d","id":147,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"arguments":[{"id":137,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":131,"src":"4434:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":136,"name":"getRoleAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":128,"src":"4421:12:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32) view returns (bytes32)"}},"id":138,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4421:18:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":139,"kind":"modifierInvocation","modifierName":{"id":135,"name":"onlyRole","nameLocations":["4412:8:0"],"nodeType":"IdentifierPath","referencedDeclaration":40,"src":"4412:8:0"},"nodeType":"ModifierInvocation","src":"4412:28:0"}],"name":"grantRole","nameLocation":"4356:9:0","nodeType":"FunctionDefinition","parameters":{"id":134,"nodeType":"ParameterList","parameters":[{"constant":false,"id":131,"mutability":"mutable","name":"role","nameLocation":"4374:4:0","nodeType":"VariableDeclaration","scope":147,"src":"4366:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":130,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4366:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":133,"mutability":"mutable","name":"account","nameLocation":"4388:7:0","nodeType":"VariableDeclaration","scope":147,"src":"4380:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":132,"name":"address","nodeType":"ElementaryTypeName","src":"4380:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4365:31:0"},"returnParameters":{"id":140,"nodeType":"ParameterList","parameters":[],"src":"4441:0:0"},"scope":295,"src":"4347:138:0","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[369],"body":{"id":165,"nodeType":"Block","src":"4873:45:0","statements":[{"expression":{"arguments":[{"id":161,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":150,"src":"4896:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":162,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":152,"src":"4902:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":160,"name":"_revokeRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":294,"src":"4884:11:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) returns (bool)"}},"id":163,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4884:26:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":164,"nodeType":"ExpressionStatement","src":"4884:26:0"}]},"documentation":{"id":148,"nodeType":"StructuredDocumentation","src":"4493:279:0","text":" @dev Revokes `role` from `account`.\n If `account` had been granted `role`, emits a {RoleRevoked} event.\n Requirements:\n - the caller must have ``role``'s admin role.\n May emit a {RoleRevoked} event."},"functionSelector":"d547741f","id":166,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"arguments":[{"id":156,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":150,"src":"4866:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":155,"name":"getRoleAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":128,"src":"4853:12:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32) view returns (bytes32)"}},"id":157,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4853:18:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":158,"kind":"modifierInvocation","modifierName":{"id":154,"name":"onlyRole","nameLocations":["4844:8:0"],"nodeType":"IdentifierPath","referencedDeclaration":40,"src":"4844:8:0"},"nodeType":"ModifierInvocation","src":"4844:28:0"}],"name":"revokeRole","nameLocation":"4787:10:0","nodeType":"FunctionDefinition","parameters":{"id":153,"nodeType":"ParameterList","parameters":[{"constant":false,"id":150,"mutability":"mutable","name":"role","nameLocation":"4806:4:0","nodeType":"VariableDeclaration","scope":166,"src":"4798:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":149,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4798:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":152,"mutability":"mutable","name":"account","nameLocation":"4820:7:0","nodeType":"VariableDeclaration","scope":166,"src":"4812:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":151,"name":"address","nodeType":"ElementaryTypeName","src":"4812:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4797:31:0"},"returnParameters":{"id":159,"nodeType":"ParameterList","parameters":[],"src":"4873:0:0"},"scope":295,"src":"4778:140:0","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[377],"body":{"id":188,"nodeType":"Block","src":"5563:172:0","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":177,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":174,"name":"callerConfirmation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":171,"src":"5578:18:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":175,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1361,"src":"5600:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":176,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5600:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5578:34:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":182,"nodeType":"IfStatement","src":"5574:104:0","trueBody":{"id":181,"nodeType":"Block","src":"5614:64:0","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":178,"name":"AccessControlBadConfirmation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":308,"src":"5636:28:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$_t_error_$","typeString":"function () pure returns (error)"}},"id":179,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5636:30:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":180,"nodeType":"RevertStatement","src":"5629:37:0"}]}},{"expression":{"arguments":[{"id":184,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":169,"src":"5702:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":185,"name":"callerConfirmation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":171,"src":"5708:18:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":183,"name":"_revokeRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":294,"src":"5690:11:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) returns (bool)"}},"id":186,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5690:37:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":187,"nodeType":"ExpressionStatement","src":"5690:37:0"}]},"documentation":{"id":167,"nodeType":"StructuredDocumentation","src":"4926:552:0","text":" @dev Revokes `role` from the calling account.\n Roles are often managed via {grantRole} and {revokeRole}: this function's\n purpose is to provide a mechanism for accounts to lose their privileges\n if they are compromised (such as when a trusted device is misplaced).\n If the calling account had been revoked `role`, emits a {RoleRevoked}\n event.\n Requirements:\n - the caller must be `callerConfirmation`.\n May emit a {RoleRevoked} event."},"functionSelector":"36568abe","id":189,"implemented":true,"kind":"function","modifiers":[],"name":"renounceRole","nameLocation":"5493:12:0","nodeType":"FunctionDefinition","parameters":{"id":172,"nodeType":"ParameterList","parameters":[{"constant":false,"id":169,"mutability":"mutable","name":"role","nameLocation":"5514:4:0","nodeType":"VariableDeclaration","scope":189,"src":"5506:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":168,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5506:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":171,"mutability":"mutable","name":"callerConfirmation","nameLocation":"5528:18:0","nodeType":"VariableDeclaration","scope":189,"src":"5520:26:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":170,"name":"address","nodeType":"ElementaryTypeName","src":"5520:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5505:42:0"},"returnParameters":{"id":173,"nodeType":"ParameterList","parameters":[],"src":"5563:0:0"},"scope":295,"src":"5484:251:0","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":216,"nodeType":"Block","src":"5940:178:0","statements":[{"assignments":[198],"declarations":[{"constant":false,"id":198,"mutability":"mutable","name":"previousAdminRole","nameLocation":"5959:17:0","nodeType":"VariableDeclaration","scope":216,"src":"5951:25:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":197,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5951:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":202,"initialValue":{"arguments":[{"id":200,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":192,"src":"5992:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":199,"name":"getRoleAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":128,"src":"5979:12:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32) view returns (bytes32)"}},"id":201,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5979:18:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"5951:46:0"},{"expression":{"id":208,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"baseExpression":{"id":203,"name":"_roles","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":26,"src":"6008:6:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_RoleData_$21_storage_$","typeString":"mapping(bytes32 => struct AccessControl.RoleData storage ref)"}},"id":205,"indexExpression":{"id":204,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":192,"src":"6015:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6008:12:0","typeDescriptions":{"typeIdentifier":"t_struct$_RoleData_$21_storage","typeString":"struct AccessControl.RoleData storage ref"}},"id":206,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"6021:9:0","memberName":"adminRole","nodeType":"MemberAccess","referencedDeclaration":20,"src":"6008:22:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":207,"name":"adminRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":194,"src":"6033:9:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"6008:34:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":209,"nodeType":"ExpressionStatement","src":"6008:34:0"},{"eventCall":{"arguments":[{"id":211,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":192,"src":"6075:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":212,"name":"previousAdminRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":198,"src":"6081:17:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":213,"name":"adminRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":194,"src":"6100:9:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":210,"name":"RoleAdminChanged","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":317,"src":"6058:16:0","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_bytes32_$_t_bytes32_$_t_bytes32_$returns$__$","typeString":"function (bytes32,bytes32,bytes32)"}},"id":214,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6058:52:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":215,"nodeType":"EmitStatement","src":"6053:57:0"}]},"documentation":{"id":190,"nodeType":"StructuredDocumentation","src":"5743:118:0","text":" @dev Sets `adminRole` as ``role``'s admin role.\n Emits a {RoleAdminChanged} event."},"id":217,"implemented":true,"kind":"function","modifiers":[],"name":"_setRoleAdmin","nameLocation":"5876:13:0","nodeType":"FunctionDefinition","parameters":{"id":195,"nodeType":"ParameterList","parameters":[{"constant":false,"id":192,"mutability":"mutable","name":"role","nameLocation":"5898:4:0","nodeType":"VariableDeclaration","scope":217,"src":"5890:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":191,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5890:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":194,"mutability":"mutable","name":"adminRole","nameLocation":"5912:9:0","nodeType":"VariableDeclaration","scope":217,"src":"5904:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":193,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5904:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"5889:33:0"},"returnParameters":{"id":196,"nodeType":"ParameterList","parameters":[],"src":"5940:0:0"},"scope":295,"src":"5867:251:0","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":255,"nodeType":"Block","src":"6444:241:0","statements":[{"condition":{"id":231,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"6459:23:0","subExpression":{"arguments":[{"id":228,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":220,"src":"6468:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":229,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":222,"src":"6474:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":227,"name":"hasRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":80,"src":"6460:7:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) view returns (bool)"}},"id":230,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6460:22:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":253,"nodeType":"Block","src":"6639:39:0","statements":[{"expression":{"hexValue":"66616c7365","id":251,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"6661:5:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"functionReturnParameters":226,"id":252,"nodeType":"Return","src":"6654:12:0"}]},"id":254,"nodeType":"IfStatement","src":"6455:223:0","trueBody":{"id":250,"nodeType":"Block","src":"6484:149:0","statements":[{"expression":{"id":239,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"expression":{"baseExpression":{"id":232,"name":"_roles","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":26,"src":"6499:6:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_RoleData_$21_storage_$","typeString":"mapping(bytes32 => struct AccessControl.RoleData storage ref)"}},"id":234,"indexExpression":{"id":233,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":220,"src":"6506:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6499:12:0","typeDescriptions":{"typeIdentifier":"t_struct$_RoleData_$21_storage","typeString":"struct AccessControl.RoleData storage ref"}},"id":235,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6512:7:0","memberName":"hasRole","nodeType":"MemberAccess","referencedDeclaration":18,"src":"6499:20:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":237,"indexExpression":{"id":236,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":222,"src":"6520:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"6499:29:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":238,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"6531:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"6499:36:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":240,"nodeType":"ExpressionStatement","src":"6499:36:0"},{"eventCall":{"arguments":[{"id":242,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":220,"src":"6567:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":243,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":222,"src":"6573:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[],"expression":{"argumentTypes":[],"id":244,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1361,"src":"6582:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":245,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6582:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":241,"name":"RoleGranted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":326,"src":"6555:11:0","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_bytes32_$_t_address_$_t_address_$returns$__$","typeString":"function (bytes32,address,address)"}},"id":246,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6555:40:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":247,"nodeType":"EmitStatement","src":"6550:45:0"},{"expression":{"hexValue":"74727565","id":248,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"6617:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":226,"id":249,"nodeType":"Return","src":"6610:11:0"}]}}]},"documentation":{"id":218,"nodeType":"StructuredDocumentation","src":"6126:229:0","text":" @dev Attempts to grant `role` to `account` and returns a boolean indicating if `role` was granted.\n Internal function without access restriction.\n May emit a {RoleGranted} event."},"id":256,"implemented":true,"kind":"function","modifiers":[],"name":"_grantRole","nameLocation":"6370:10:0","nodeType":"FunctionDefinition","parameters":{"id":223,"nodeType":"ParameterList","parameters":[{"constant":false,"id":220,"mutability":"mutable","name":"role","nameLocation":"6389:4:0","nodeType":"VariableDeclaration","scope":256,"src":"6381:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":219,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6381:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":222,"mutability":"mutable","name":"account","nameLocation":"6403:7:0","nodeType":"VariableDeclaration","scope":256,"src":"6395:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":221,"name":"address","nodeType":"ElementaryTypeName","src":"6395:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6380:31:0"},"returnParameters":{"id":226,"nodeType":"ParameterList","parameters":[{"constant":false,"id":225,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":256,"src":"6438:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":224,"name":"bool","nodeType":"ElementaryTypeName","src":"6438:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"6437:6:0"},"scope":295,"src":"6361:324:0","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":293,"nodeType":"Block","src":"7015:241:0","statements":[{"condition":{"arguments":[{"id":267,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":259,"src":"7038:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":268,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":261,"src":"7044:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":266,"name":"hasRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":80,"src":"7030:7:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) view returns (bool)"}},"id":269,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7030:22:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":291,"nodeType":"Block","src":"7210:39:0","statements":[{"expression":{"hexValue":"66616c7365","id":289,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"7232:5:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"functionReturnParameters":265,"id":290,"nodeType":"Return","src":"7225:12:0"}]},"id":292,"nodeType":"IfStatement","src":"7026:223:0","trueBody":{"id":288,"nodeType":"Block","src":"7054:150:0","statements":[{"expression":{"id":277,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"expression":{"baseExpression":{"id":270,"name":"_roles","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":26,"src":"7069:6:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_RoleData_$21_storage_$","typeString":"mapping(bytes32 => struct AccessControl.RoleData storage ref)"}},"id":272,"indexExpression":{"id":271,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":259,"src":"7076:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7069:12:0","typeDescriptions":{"typeIdentifier":"t_struct$_RoleData_$21_storage","typeString":"struct AccessControl.RoleData storage ref"}},"id":273,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7082:7:0","memberName":"hasRole","nodeType":"MemberAccess","referencedDeclaration":18,"src":"7069:20:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":275,"indexExpression":{"id":274,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":261,"src":"7090:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"7069:29:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"66616c7365","id":276,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"7101:5:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"src":"7069:37:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":278,"nodeType":"ExpressionStatement","src":"7069:37:0"},{"eventCall":{"arguments":[{"id":280,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":259,"src":"7138:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":281,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":261,"src":"7144:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[],"expression":{"argumentTypes":[],"id":282,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1361,"src":"7153:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":283,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7153:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":279,"name":"RoleRevoked","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":335,"src":"7126:11:0","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_bytes32_$_t_address_$_t_address_$returns$__$","typeString":"function (bytes32,address,address)"}},"id":284,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7126:40:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":285,"nodeType":"EmitStatement","src":"7121:45:0"},{"expression":{"hexValue":"74727565","id":286,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"7188:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":265,"id":287,"nodeType":"Return","src":"7181:11:0"}]}}]},"documentation":{"id":257,"nodeType":"StructuredDocumentation","src":"6693:232:0","text":" @dev Attempts to revoke `role` from `account` and returns a boolean indicating if `role` was revoked.\n Internal function without access restriction.\n May emit a {RoleRevoked} event."},"id":294,"implemented":true,"kind":"function","modifiers":[],"name":"_revokeRole","nameLocation":"6940:11:0","nodeType":"FunctionDefinition","parameters":{"id":262,"nodeType":"ParameterList","parameters":[{"constant":false,"id":259,"mutability":"mutable","name":"role","nameLocation":"6960:4:0","nodeType":"VariableDeclaration","scope":294,"src":"6952:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":258,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6952:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":261,"mutability":"mutable","name":"account","nameLocation":"6974:7:0","nodeType":"VariableDeclaration","scope":294,"src":"6966:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":260,"name":"address","nodeType":"ElementaryTypeName","src":"6966:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6951:31:0"},"returnParameters":{"id":265,"nodeType":"ParameterList","parameters":[{"constant":false,"id":264,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":294,"src":"7009:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":263,"name":"bool","nodeType":"ElementaryTypeName","src":"7009:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"7008:6:0"},"scope":295,"src":"6931:325:0","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":296,"src":"2001:5258:0","usedErrors":[305,308],"usedEvents":[317,326,335]}],"src":"111:7150:0"},"id":0},"@openzeppelin/contracts/access/IAccessControl.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/access/IAccessControl.sol","exportedSymbols":{"IAccessControl":[378]},"id":379,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":297,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"112:24:1"},{"abstract":false,"baseContracts":[],"canonicalName":"IAccessControl","contractDependencies":[],"contractKind":"interface","documentation":{"id":298,"nodeType":"StructuredDocumentation","src":"140:92:1","text":" @dev External interface of AccessControl declared to support ERC-165 detection."},"fullyImplemented":false,"id":378,"linearizedBaseContracts":[378],"name":"IAccessControl","nameLocation":"244:14:1","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":299,"nodeType":"StructuredDocumentation","src":"266:58:1","text":" @dev The `account` is missing a role."},"errorSelector":"e2517d3f","id":305,"name":"AccessControlUnauthorizedAccount","nameLocation":"336:32:1","nodeType":"ErrorDefinition","parameters":{"id":304,"nodeType":"ParameterList","parameters":[{"constant":false,"id":301,"mutability":"mutable","name":"account","nameLocation":"377:7:1","nodeType":"VariableDeclaration","scope":305,"src":"369:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":300,"name":"address","nodeType":"ElementaryTypeName","src":"369:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":303,"mutability":"mutable","name":"neededRole","nameLocation":"394:10:1","nodeType":"VariableDeclaration","scope":305,"src":"386:18:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":302,"name":"bytes32","nodeType":"ElementaryTypeName","src":"386:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"368:37:1"},"src":"330:76:1"},{"documentation":{"id":306,"nodeType":"StructuredDocumentation","src":"414:152:1","text":" @dev The caller of a function is not the expected one.\n NOTE: Don't confuse with {AccessControlUnauthorizedAccount}."},"errorSelector":"6697b232","id":308,"name":"AccessControlBadConfirmation","nameLocation":"578:28:1","nodeType":"ErrorDefinition","parameters":{"id":307,"nodeType":"ParameterList","parameters":[],"src":"606:2:1"},"src":"572:37:1"},{"anonymous":false,"documentation":{"id":309,"nodeType":"StructuredDocumentation","src":"617:259:1","text":" @dev Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole`\n `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite\n {RoleAdminChanged} not being emitted to signal this."},"eventSelector":"bd79b86ffe0ab8e8776151514217cd7cacd52c909f66475c3af44e129f0b00ff","id":317,"name":"RoleAdminChanged","nameLocation":"888:16:1","nodeType":"EventDefinition","parameters":{"id":316,"nodeType":"ParameterList","parameters":[{"constant":false,"id":311,"indexed":true,"mutability":"mutable","name":"role","nameLocation":"921:4:1","nodeType":"VariableDeclaration","scope":317,"src":"905:20:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":310,"name":"bytes32","nodeType":"ElementaryTypeName","src":"905:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":313,"indexed":true,"mutability":"mutable","name":"previousAdminRole","nameLocation":"943:17:1","nodeType":"VariableDeclaration","scope":317,"src":"927:33:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":312,"name":"bytes32","nodeType":"ElementaryTypeName","src":"927:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":315,"indexed":true,"mutability":"mutable","name":"newAdminRole","nameLocation":"978:12:1","nodeType":"VariableDeclaration","scope":317,"src":"962:28:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":314,"name":"bytes32","nodeType":"ElementaryTypeName","src":"962:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"904:87:1"},"src":"882:110:1"},{"anonymous":false,"documentation":{"id":318,"nodeType":"StructuredDocumentation","src":"1000:300:1","text":" @dev Emitted when `account` is granted `role`.\n `sender` is the account that originated the contract call. This account bears the admin role (for the granted role).\n Expected in cases where the role was granted using the internal {AccessControl-_grantRole}."},"eventSelector":"2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d","id":326,"name":"RoleGranted","nameLocation":"1312:11:1","nodeType":"EventDefinition","parameters":{"id":325,"nodeType":"ParameterList","parameters":[{"constant":false,"id":320,"indexed":true,"mutability":"mutable","name":"role","nameLocation":"1340:4:1","nodeType":"VariableDeclaration","scope":326,"src":"1324:20:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":319,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1324:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":322,"indexed":true,"mutability":"mutable","name":"account","nameLocation":"1362:7:1","nodeType":"VariableDeclaration","scope":326,"src":"1346:23:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":321,"name":"address","nodeType":"ElementaryTypeName","src":"1346:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":324,"indexed":true,"mutability":"mutable","name":"sender","nameLocation":"1387:6:1","nodeType":"VariableDeclaration","scope":326,"src":"1371:22:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":323,"name":"address","nodeType":"ElementaryTypeName","src":"1371:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1323:71:1"},"src":"1306:89:1"},{"anonymous":false,"documentation":{"id":327,"nodeType":"StructuredDocumentation","src":"1403:281:1","text":" @dev Emitted when `account` is revoked `role`.\n `sender` is the account that originated the contract call:\n   - if using `revokeRole`, it is the admin role bearer\n   - if using `renounceRole`, it is the role bearer (i.e. `account`)"},"eventSelector":"f6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b","id":335,"name":"RoleRevoked","nameLocation":"1696:11:1","nodeType":"EventDefinition","parameters":{"id":334,"nodeType":"ParameterList","parameters":[{"constant":false,"id":329,"indexed":true,"mutability":"mutable","name":"role","nameLocation":"1724:4:1","nodeType":"VariableDeclaration","scope":335,"src":"1708:20:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":328,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1708:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":331,"indexed":true,"mutability":"mutable","name":"account","nameLocation":"1746:7:1","nodeType":"VariableDeclaration","scope":335,"src":"1730:23:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":330,"name":"address","nodeType":"ElementaryTypeName","src":"1730:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":333,"indexed":true,"mutability":"mutable","name":"sender","nameLocation":"1771:6:1","nodeType":"VariableDeclaration","scope":335,"src":"1755:22:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":332,"name":"address","nodeType":"ElementaryTypeName","src":"1755:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1707:71:1"},"src":"1690:89:1"},{"documentation":{"id":336,"nodeType":"StructuredDocumentation","src":"1787:78:1","text":" @dev Returns `true` if `account` has been granted `role`."},"functionSelector":"91d14854","id":345,"implemented":false,"kind":"function","modifiers":[],"name":"hasRole","nameLocation":"1880:7:1","nodeType":"FunctionDefinition","parameters":{"id":341,"nodeType":"ParameterList","parameters":[{"constant":false,"id":338,"mutability":"mutable","name":"role","nameLocation":"1896:4:1","nodeType":"VariableDeclaration","scope":345,"src":"1888:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":337,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1888:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":340,"mutability":"mutable","name":"account","nameLocation":"1910:7:1","nodeType":"VariableDeclaration","scope":345,"src":"1902:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":339,"name":"address","nodeType":"ElementaryTypeName","src":"1902:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1887:31:1"},"returnParameters":{"id":344,"nodeType":"ParameterList","parameters":[{"constant":false,"id":343,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":345,"src":"1942:4:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":342,"name":"bool","nodeType":"ElementaryTypeName","src":"1942:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1941:6:1"},"scope":378,"src":"1871:77:1","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":346,"nodeType":"StructuredDocumentation","src":"1956:189:1","text":" @dev Returns the admin role that controls `role`. See {grantRole} and\n {revokeRole}.\n To change a role's admin, use {AccessControl-_setRoleAdmin}."},"functionSelector":"248a9ca3","id":353,"implemented":false,"kind":"function","modifiers":[],"name":"getRoleAdmin","nameLocation":"2160:12:1","nodeType":"FunctionDefinition","parameters":{"id":349,"nodeType":"ParameterList","parameters":[{"constant":false,"id":348,"mutability":"mutable","name":"role","nameLocation":"2181:4:1","nodeType":"VariableDeclaration","scope":353,"src":"2173:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":347,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2173:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2172:14:1"},"returnParameters":{"id":352,"nodeType":"ParameterList","parameters":[{"constant":false,"id":351,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":353,"src":"2210:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":350,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2210:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2209:9:1"},"scope":378,"src":"2151:68:1","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":354,"nodeType":"StructuredDocumentation","src":"2227:248:1","text":" @dev Grants `role` to `account`.\n If `account` had not been already granted `role`, emits a {RoleGranted}\n event.\n Requirements:\n - the caller must have ``role``'s admin role."},"functionSelector":"2f2ff15d","id":361,"implemented":false,"kind":"function","modifiers":[],"name":"grantRole","nameLocation":"2490:9:1","nodeType":"FunctionDefinition","parameters":{"id":359,"nodeType":"ParameterList","parameters":[{"constant":false,"id":356,"mutability":"mutable","name":"role","nameLocation":"2508:4:1","nodeType":"VariableDeclaration","scope":361,"src":"2500:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":355,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2500:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":358,"mutability":"mutable","name":"account","nameLocation":"2522:7:1","nodeType":"VariableDeclaration","scope":361,"src":"2514:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":357,"name":"address","nodeType":"ElementaryTypeName","src":"2514:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2499:31:1"},"returnParameters":{"id":360,"nodeType":"ParameterList","parameters":[],"src":"2539:0:1"},"scope":378,"src":"2481:59:1","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":362,"nodeType":"StructuredDocumentation","src":"2548:231:1","text":" @dev Revokes `role` from `account`.\n If `account` had been granted `role`, emits a {RoleRevoked} event.\n Requirements:\n - the caller must have ``role``'s admin role."},"functionSelector":"d547741f","id":369,"implemented":false,"kind":"function","modifiers":[],"name":"revokeRole","nameLocation":"2794:10:1","nodeType":"FunctionDefinition","parameters":{"id":367,"nodeType":"ParameterList","parameters":[{"constant":false,"id":364,"mutability":"mutable","name":"role","nameLocation":"2813:4:1","nodeType":"VariableDeclaration","scope":369,"src":"2805:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":363,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2805:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":366,"mutability":"mutable","name":"account","nameLocation":"2827:7:1","nodeType":"VariableDeclaration","scope":369,"src":"2819:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":365,"name":"address","nodeType":"ElementaryTypeName","src":"2819:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2804:31:1"},"returnParameters":{"id":368,"nodeType":"ParameterList","parameters":[],"src":"2844:0:1"},"scope":378,"src":"2785:60:1","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":370,"nodeType":"StructuredDocumentation","src":"2853:504:1","text":" @dev Revokes `role` from the calling account.\n Roles are often managed via {grantRole} and {revokeRole}: this function's\n purpose is to provide a mechanism for accounts to lose their privileges\n if they are compromised (such as when a trusted device is misplaced).\n If the calling account had been granted `role`, emits a {RoleRevoked}\n event.\n Requirements:\n - the caller must be `callerConfirmation`."},"functionSelector":"36568abe","id":377,"implemented":false,"kind":"function","modifiers":[],"name":"renounceRole","nameLocation":"3372:12:1","nodeType":"FunctionDefinition","parameters":{"id":375,"nodeType":"ParameterList","parameters":[{"constant":false,"id":372,"mutability":"mutable","name":"role","nameLocation":"3393:4:1","nodeType":"VariableDeclaration","scope":377,"src":"3385:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":371,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3385:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":374,"mutability":"mutable","name":"callerConfirmation","nameLocation":"3407:18:1","nodeType":"VariableDeclaration","scope":377,"src":"3399:26:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":373,"name":"address","nodeType":"ElementaryTypeName","src":"3399:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3384:42:1"},"returnParameters":{"id":376,"nodeType":"ParameterList","parameters":[],"src":"3435:0:1"},"scope":378,"src":"3363:73:1","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":379,"src":"234:3205:1","usedErrors":[305,308],"usedEvents":[317,326,335]}],"src":"112:3329:1"},"id":1},"@openzeppelin/contracts/interfaces/IERC5267.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/interfaces/IERC5267.sol","exportedSymbols":{"IERC5267":[403]},"id":404,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":380,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"110:24:2"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC5267","contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":403,"linearizedBaseContracts":[403],"name":"IERC5267","nameLocation":"148:8:2","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":381,"nodeType":"StructuredDocumentation","src":"164:86:2","text":" @dev MAY be emitted to signal that the domain could have changed."},"eventSelector":"0a6387c9ea3628b88a633bb4f3b151770f70085117a15f9bf3787cda53f13d31","id":383,"name":"EIP712DomainChanged","nameLocation":"262:19:2","nodeType":"EventDefinition","parameters":{"id":382,"nodeType":"ParameterList","parameters":[],"src":"281:2:2"},"src":"256:28:2"},{"documentation":{"id":384,"nodeType":"StructuredDocumentation","src":"292:143:2","text":" @dev returns the fields and values that describe the domain separator used by this contract for EIP-712\n signature."},"functionSelector":"84b0196e","id":402,"implemented":false,"kind":"function","modifiers":[],"name":"eip712Domain","nameLocation":"450:12:2","nodeType":"FunctionDefinition","parameters":{"id":385,"nodeType":"ParameterList","parameters":[],"src":"462:2:2"},"returnParameters":{"id":401,"nodeType":"ParameterList","parameters":[{"constant":false,"id":387,"mutability":"mutable","name":"fields","nameLocation":"536:6:2","nodeType":"VariableDeclaration","scope":402,"src":"529:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"typeName":{"id":386,"name":"bytes1","nodeType":"ElementaryTypeName","src":"529:6:2","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"visibility":"internal"},{"constant":false,"id":389,"mutability":"mutable","name":"name","nameLocation":"571:4:2","nodeType":"VariableDeclaration","scope":402,"src":"557:18:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":388,"name":"string","nodeType":"ElementaryTypeName","src":"557:6:2","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":391,"mutability":"mutable","name":"version","nameLocation":"604:7:2","nodeType":"VariableDeclaration","scope":402,"src":"590:21:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":390,"name":"string","nodeType":"ElementaryTypeName","src":"590:6:2","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":393,"mutability":"mutable","name":"chainId","nameLocation":"634:7:2","nodeType":"VariableDeclaration","scope":402,"src":"626:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":392,"name":"uint256","nodeType":"ElementaryTypeName","src":"626:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":395,"mutability":"mutable","name":"verifyingContract","nameLocation":"664:17:2","nodeType":"VariableDeclaration","scope":402,"src":"656:25:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":394,"name":"address","nodeType":"ElementaryTypeName","src":"656:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":397,"mutability":"mutable","name":"salt","nameLocation":"704:4:2","nodeType":"VariableDeclaration","scope":402,"src":"696:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":396,"name":"bytes32","nodeType":"ElementaryTypeName","src":"696:7:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":400,"mutability":"mutable","name":"extensions","nameLocation":"740:10:2","nodeType":"VariableDeclaration","scope":402,"src":"723:27:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":398,"name":"uint256","nodeType":"ElementaryTypeName","src":"723:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":399,"nodeType":"ArrayTypeName","src":"723:9:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"514:247:2"},"scope":403,"src":"441:321:2","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":404,"src":"138:627:2","usedErrors":[],"usedEvents":[383]}],"src":"110:657:2"},"id":2},"@openzeppelin/contracts/interfaces/draft-IERC6093.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/interfaces/draft-IERC6093.sol","exportedSymbols":{"IERC1155Errors":[540],"IERC20Errors":[445],"IERC721Errors":[493]},"id":541,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":405,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"114:24:3"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC20Errors","contractDependencies":[],"contractKind":"interface","documentation":{"id":406,"nodeType":"StructuredDocumentation","src":"142:144:3","text":" @dev Standard ERC-20 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens."},"fullyImplemented":true,"id":445,"linearizedBaseContracts":[445],"name":"IERC20Errors","nameLocation":"298:12:3","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":407,"nodeType":"StructuredDocumentation","src":"318:314:3","text":" @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer."},"errorSelector":"e450d38c","id":415,"name":"ERC20InsufficientBalance","nameLocation":"644:24:3","nodeType":"ErrorDefinition","parameters":{"id":414,"nodeType":"ParameterList","parameters":[{"constant":false,"id":409,"mutability":"mutable","name":"sender","nameLocation":"677:6:3","nodeType":"VariableDeclaration","scope":415,"src":"669:14:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":408,"name":"address","nodeType":"ElementaryTypeName","src":"669:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":411,"mutability":"mutable","name":"balance","nameLocation":"693:7:3","nodeType":"VariableDeclaration","scope":415,"src":"685:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":410,"name":"uint256","nodeType":"ElementaryTypeName","src":"685:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":413,"mutability":"mutable","name":"needed","nameLocation":"710:6:3","nodeType":"VariableDeclaration","scope":415,"src":"702:14:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":412,"name":"uint256","nodeType":"ElementaryTypeName","src":"702:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"668:49:3"},"src":"638:80:3"},{"documentation":{"id":416,"nodeType":"StructuredDocumentation","src":"726:155:3","text":" @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."},"errorSelector":"96c6fd1e","id":420,"name":"ERC20InvalidSender","nameLocation":"893:18:3","nodeType":"ErrorDefinition","parameters":{"id":419,"nodeType":"ParameterList","parameters":[{"constant":false,"id":418,"mutability":"mutable","name":"sender","nameLocation":"920:6:3","nodeType":"VariableDeclaration","scope":420,"src":"912:14:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":417,"name":"address","nodeType":"ElementaryTypeName","src":"912:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"911:16:3"},"src":"887:41:3"},{"documentation":{"id":421,"nodeType":"StructuredDocumentation","src":"936:162:3","text":" @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."},"errorSelector":"ec442f05","id":425,"name":"ERC20InvalidReceiver","nameLocation":"1110:20:3","nodeType":"ErrorDefinition","parameters":{"id":424,"nodeType":"ParameterList","parameters":[{"constant":false,"id":423,"mutability":"mutable","name":"receiver","nameLocation":"1139:8:3","nodeType":"VariableDeclaration","scope":425,"src":"1131:16:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":422,"name":"address","nodeType":"ElementaryTypeName","src":"1131:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1130:18:3"},"src":"1104:45:3"},{"documentation":{"id":426,"nodeType":"StructuredDocumentation","src":"1157:350:3","text":" @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n @param spender Address that may be allowed to operate on tokens without being their owner.\n @param allowance Amount of tokens a `spender` is allowed to operate with.\n @param needed Minimum amount required to perform a transfer."},"errorSelector":"fb8f41b2","id":434,"name":"ERC20InsufficientAllowance","nameLocation":"1519:26:3","nodeType":"ErrorDefinition","parameters":{"id":433,"nodeType":"ParameterList","parameters":[{"constant":false,"id":428,"mutability":"mutable","name":"spender","nameLocation":"1554:7:3","nodeType":"VariableDeclaration","scope":434,"src":"1546:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":427,"name":"address","nodeType":"ElementaryTypeName","src":"1546:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":430,"mutability":"mutable","name":"allowance","nameLocation":"1571:9:3","nodeType":"VariableDeclaration","scope":434,"src":"1563:17:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":429,"name":"uint256","nodeType":"ElementaryTypeName","src":"1563:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":432,"mutability":"mutable","name":"needed","nameLocation":"1590:6:3","nodeType":"VariableDeclaration","scope":434,"src":"1582:14:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":431,"name":"uint256","nodeType":"ElementaryTypeName","src":"1582:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1545:52:3"},"src":"1513:85:3"},{"documentation":{"id":435,"nodeType":"StructuredDocumentation","src":"1606:177:3","text":" @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."},"errorSelector":"e602df05","id":439,"name":"ERC20InvalidApprover","nameLocation":"1795:20:3","nodeType":"ErrorDefinition","parameters":{"id":438,"nodeType":"ParameterList","parameters":[{"constant":false,"id":437,"mutability":"mutable","name":"approver","nameLocation":"1824:8:3","nodeType":"VariableDeclaration","scope":439,"src":"1816:16:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":436,"name":"address","nodeType":"ElementaryTypeName","src":"1816:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1815:18:3"},"src":"1789:45:3"},{"documentation":{"id":440,"nodeType":"StructuredDocumentation","src":"1842:198:3","text":" @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n @param spender Address that may be allowed to operate on tokens without being their owner."},"errorSelector":"94280d62","id":444,"name":"ERC20InvalidSpender","nameLocation":"2052:19:3","nodeType":"ErrorDefinition","parameters":{"id":443,"nodeType":"ParameterList","parameters":[{"constant":false,"id":442,"mutability":"mutable","name":"spender","nameLocation":"2080:7:3","nodeType":"VariableDeclaration","scope":444,"src":"2072:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":441,"name":"address","nodeType":"ElementaryTypeName","src":"2072:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2071:17:3"},"src":"2046:43:3"}],"scope":541,"src":"288:1804:3","usedErrors":[415,420,425,434,439,444],"usedEvents":[]},{"abstract":false,"baseContracts":[],"canonicalName":"IERC721Errors","contractDependencies":[],"contractKind":"interface","documentation":{"id":446,"nodeType":"StructuredDocumentation","src":"2096:146:3","text":" @dev Standard ERC-721 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens."},"fullyImplemented":true,"id":493,"linearizedBaseContracts":[493],"name":"IERC721Errors","nameLocation":"2254:13:3","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":447,"nodeType":"StructuredDocumentation","src":"2275:223:3","text":" @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20.\n Used in balance queries.\n @param owner Address of the current owner of a token."},"errorSelector":"89c62b64","id":451,"name":"ERC721InvalidOwner","nameLocation":"2510:18:3","nodeType":"ErrorDefinition","parameters":{"id":450,"nodeType":"ParameterList","parameters":[{"constant":false,"id":449,"mutability":"mutable","name":"owner","nameLocation":"2537:5:3","nodeType":"VariableDeclaration","scope":451,"src":"2529:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":448,"name":"address","nodeType":"ElementaryTypeName","src":"2529:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2528:15:3"},"src":"2504:40:3"},{"documentation":{"id":452,"nodeType":"StructuredDocumentation","src":"2552:135:3","text":" @dev Indicates a `tokenId` whose `owner` is the zero address.\n @param tokenId Identifier number of a token."},"errorSelector":"7e273289","id":456,"name":"ERC721NonexistentToken","nameLocation":"2699:22:3","nodeType":"ErrorDefinition","parameters":{"id":455,"nodeType":"ParameterList","parameters":[{"constant":false,"id":454,"mutability":"mutable","name":"tokenId","nameLocation":"2730:7:3","nodeType":"VariableDeclaration","scope":456,"src":"2722:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":453,"name":"uint256","nodeType":"ElementaryTypeName","src":"2722:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2721:17:3"},"src":"2693:46:3"},{"documentation":{"id":457,"nodeType":"StructuredDocumentation","src":"2747:294:3","text":" @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param tokenId Identifier number of a token.\n @param owner Address of the current owner of a token."},"errorSelector":"64283d7b","id":465,"name":"ERC721IncorrectOwner","nameLocation":"3053:20:3","nodeType":"ErrorDefinition","parameters":{"id":464,"nodeType":"ParameterList","parameters":[{"constant":false,"id":459,"mutability":"mutable","name":"sender","nameLocation":"3082:6:3","nodeType":"VariableDeclaration","scope":465,"src":"3074:14:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":458,"name":"address","nodeType":"ElementaryTypeName","src":"3074:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":461,"mutability":"mutable","name":"tokenId","nameLocation":"3098:7:3","nodeType":"VariableDeclaration","scope":465,"src":"3090:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":460,"name":"uint256","nodeType":"ElementaryTypeName","src":"3090:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":463,"mutability":"mutable","name":"owner","nameLocation":"3115:5:3","nodeType":"VariableDeclaration","scope":465,"src":"3107:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":462,"name":"address","nodeType":"ElementaryTypeName","src":"3107:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3073:48:3"},"src":"3047:75:3"},{"documentation":{"id":466,"nodeType":"StructuredDocumentation","src":"3130:155:3","text":" @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."},"errorSelector":"73c6ac6e","id":470,"name":"ERC721InvalidSender","nameLocation":"3297:19:3","nodeType":"ErrorDefinition","parameters":{"id":469,"nodeType":"ParameterList","parameters":[{"constant":false,"id":468,"mutability":"mutable","name":"sender","nameLocation":"3325:6:3","nodeType":"VariableDeclaration","scope":470,"src":"3317:14:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":467,"name":"address","nodeType":"ElementaryTypeName","src":"3317:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3316:16:3"},"src":"3291:42:3"},{"documentation":{"id":471,"nodeType":"StructuredDocumentation","src":"3341:162:3","text":" @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."},"errorSelector":"64a0ae92","id":475,"name":"ERC721InvalidReceiver","nameLocation":"3515:21:3","nodeType":"ErrorDefinition","parameters":{"id":474,"nodeType":"ParameterList","parameters":[{"constant":false,"id":473,"mutability":"mutable","name":"receiver","nameLocation":"3545:8:3","nodeType":"VariableDeclaration","scope":475,"src":"3537:16:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":472,"name":"address","nodeType":"ElementaryTypeName","src":"3537:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3536:18:3"},"src":"3509:46:3"},{"documentation":{"id":476,"nodeType":"StructuredDocumentation","src":"3563:251:3","text":" @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param tokenId Identifier number of a token."},"errorSelector":"177e802f","id":482,"name":"ERC721InsufficientApproval","nameLocation":"3826:26:3","nodeType":"ErrorDefinition","parameters":{"id":481,"nodeType":"ParameterList","parameters":[{"constant":false,"id":478,"mutability":"mutable","name":"operator","nameLocation":"3861:8:3","nodeType":"VariableDeclaration","scope":482,"src":"3853:16:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":477,"name":"address","nodeType":"ElementaryTypeName","src":"3853:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":480,"mutability":"mutable","name":"tokenId","nameLocation":"3879:7:3","nodeType":"VariableDeclaration","scope":482,"src":"3871:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":479,"name":"uint256","nodeType":"ElementaryTypeName","src":"3871:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3852:35:3"},"src":"3820:68:3"},{"documentation":{"id":483,"nodeType":"StructuredDocumentation","src":"3896:177:3","text":" @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."},"errorSelector":"a9fbf51f","id":487,"name":"ERC721InvalidApprover","nameLocation":"4085:21:3","nodeType":"ErrorDefinition","parameters":{"id":486,"nodeType":"ParameterList","parameters":[{"constant":false,"id":485,"mutability":"mutable","name":"approver","nameLocation":"4115:8:3","nodeType":"VariableDeclaration","scope":487,"src":"4107:16:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":484,"name":"address","nodeType":"ElementaryTypeName","src":"4107:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4106:18:3"},"src":"4079:46:3"},{"documentation":{"id":488,"nodeType":"StructuredDocumentation","src":"4133:200:3","text":" @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."},"errorSelector":"5b08ba18","id":492,"name":"ERC721InvalidOperator","nameLocation":"4345:21:3","nodeType":"ErrorDefinition","parameters":{"id":491,"nodeType":"ParameterList","parameters":[{"constant":false,"id":490,"mutability":"mutable","name":"operator","nameLocation":"4375:8:3","nodeType":"VariableDeclaration","scope":492,"src":"4367:16:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":489,"name":"address","nodeType":"ElementaryTypeName","src":"4367:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4366:18:3"},"src":"4339:46:3"}],"scope":541,"src":"2244:2144:3","usedErrors":[451,456,465,470,475,482,487,492],"usedEvents":[]},{"abstract":false,"baseContracts":[],"canonicalName":"IERC1155Errors","contractDependencies":[],"contractKind":"interface","documentation":{"id":494,"nodeType":"StructuredDocumentation","src":"4392:148:3","text":" @dev Standard ERC-1155 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens."},"fullyImplemented":true,"id":540,"linearizedBaseContracts":[540],"name":"IERC1155Errors","nameLocation":"4552:14:3","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":495,"nodeType":"StructuredDocumentation","src":"4574:367:3","text":" @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer.\n @param tokenId Identifier number of a token."},"errorSelector":"03dee4c5","id":505,"name":"ERC1155InsufficientBalance","nameLocation":"4953:26:3","nodeType":"ErrorDefinition","parameters":{"id":504,"nodeType":"ParameterList","parameters":[{"constant":false,"id":497,"mutability":"mutable","name":"sender","nameLocation":"4988:6:3","nodeType":"VariableDeclaration","scope":505,"src":"4980:14:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":496,"name":"address","nodeType":"ElementaryTypeName","src":"4980:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":499,"mutability":"mutable","name":"balance","nameLocation":"5004:7:3","nodeType":"VariableDeclaration","scope":505,"src":"4996:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":498,"name":"uint256","nodeType":"ElementaryTypeName","src":"4996:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":501,"mutability":"mutable","name":"needed","nameLocation":"5021:6:3","nodeType":"VariableDeclaration","scope":505,"src":"5013:14:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":500,"name":"uint256","nodeType":"ElementaryTypeName","src":"5013:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":503,"mutability":"mutable","name":"tokenId","nameLocation":"5037:7:3","nodeType":"VariableDeclaration","scope":505,"src":"5029:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":502,"name":"uint256","nodeType":"ElementaryTypeName","src":"5029:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4979:66:3"},"src":"4947:99:3"},{"documentation":{"id":506,"nodeType":"StructuredDocumentation","src":"5054:155:3","text":" @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."},"errorSelector":"01a83514","id":510,"name":"ERC1155InvalidSender","nameLocation":"5221:20:3","nodeType":"ErrorDefinition","parameters":{"id":509,"nodeType":"ParameterList","parameters":[{"constant":false,"id":508,"mutability":"mutable","name":"sender","nameLocation":"5250:6:3","nodeType":"VariableDeclaration","scope":510,"src":"5242:14:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":507,"name":"address","nodeType":"ElementaryTypeName","src":"5242:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5241:16:3"},"src":"5215:43:3"},{"documentation":{"id":511,"nodeType":"StructuredDocumentation","src":"5266:162:3","text":" @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."},"errorSelector":"57f447ce","id":515,"name":"ERC1155InvalidReceiver","nameLocation":"5440:22:3","nodeType":"ErrorDefinition","parameters":{"id":514,"nodeType":"ParameterList","parameters":[{"constant":false,"id":513,"mutability":"mutable","name":"receiver","nameLocation":"5471:8:3","nodeType":"VariableDeclaration","scope":515,"src":"5463:16:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":512,"name":"address","nodeType":"ElementaryTypeName","src":"5463:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5462:18:3"},"src":"5434:47:3"},{"documentation":{"id":516,"nodeType":"StructuredDocumentation","src":"5489:260:3","text":" @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param owner Address of the current owner of a token."},"errorSelector":"e237d922","id":522,"name":"ERC1155MissingApprovalForAll","nameLocation":"5761:28:3","nodeType":"ErrorDefinition","parameters":{"id":521,"nodeType":"ParameterList","parameters":[{"constant":false,"id":518,"mutability":"mutable","name":"operator","nameLocation":"5798:8:3","nodeType":"VariableDeclaration","scope":522,"src":"5790:16:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":517,"name":"address","nodeType":"ElementaryTypeName","src":"5790:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":520,"mutability":"mutable","name":"owner","nameLocation":"5816:5:3","nodeType":"VariableDeclaration","scope":522,"src":"5808:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":519,"name":"address","nodeType":"ElementaryTypeName","src":"5808:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5789:33:3"},"src":"5755:68:3"},{"documentation":{"id":523,"nodeType":"StructuredDocumentation","src":"5831:177:3","text":" @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."},"errorSelector":"3e31884e","id":527,"name":"ERC1155InvalidApprover","nameLocation":"6020:22:3","nodeType":"ErrorDefinition","parameters":{"id":526,"nodeType":"ParameterList","parameters":[{"constant":false,"id":525,"mutability":"mutable","name":"approver","nameLocation":"6051:8:3","nodeType":"VariableDeclaration","scope":527,"src":"6043:16:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":524,"name":"address","nodeType":"ElementaryTypeName","src":"6043:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6042:18:3"},"src":"6014:47:3"},{"documentation":{"id":528,"nodeType":"StructuredDocumentation","src":"6069:200:3","text":" @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."},"errorSelector":"ced3e100","id":532,"name":"ERC1155InvalidOperator","nameLocation":"6281:22:3","nodeType":"ErrorDefinition","parameters":{"id":531,"nodeType":"ParameterList","parameters":[{"constant":false,"id":530,"mutability":"mutable","name":"operator","nameLocation":"6312:8:3","nodeType":"VariableDeclaration","scope":532,"src":"6304:16:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":529,"name":"address","nodeType":"ElementaryTypeName","src":"6304:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6303:18:3"},"src":"6275:47:3"},{"documentation":{"id":533,"nodeType":"StructuredDocumentation","src":"6330:285:3","text":" @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n Used in batch transfers.\n @param idsLength Length of the array of token identifiers\n @param valuesLength Length of the array of token amounts"},"errorSelector":"5b059991","id":539,"name":"ERC1155InvalidArrayLength","nameLocation":"6627:25:3","nodeType":"ErrorDefinition","parameters":{"id":538,"nodeType":"ParameterList","parameters":[{"constant":false,"id":535,"mutability":"mutable","name":"idsLength","nameLocation":"6661:9:3","nodeType":"VariableDeclaration","scope":539,"src":"6653:17:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":534,"name":"uint256","nodeType":"ElementaryTypeName","src":"6653:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":537,"mutability":"mutable","name":"valuesLength","nameLocation":"6680:12:3","nodeType":"VariableDeclaration","scope":539,"src":"6672:20:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":536,"name":"uint256","nodeType":"ElementaryTypeName","src":"6672:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6652:41:3"},"src":"6621:73:3"}],"scope":541,"src":"4542:2155:3","usedErrors":[505,510,515,522,527,532,539],"usedEvents":[]}],"src":"114:6585:3"},"id":3},"@openzeppelin/contracts/token/ERC20/ERC20.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/ERC20.sol","exportedSymbols":{"Context":[1379],"ERC20":[1055],"IERC20":[1133],"IERC20Errors":[445],"IERC20Metadata":[1313]},"id":1056,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":542,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"108:24:4"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","file":"./IERC20.sol","id":544,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1056,"sourceUnit":1134,"src":"136:36:4","symbolAliases":[{"foreign":{"id":543,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1133,"src":"144:6:4","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol","file":"./extensions/IERC20Metadata.sol","id":546,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1056,"sourceUnit":1314,"src":"174:63:4","symbolAliases":[{"foreign":{"id":545,"name":"IERC20Metadata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1313,"src":"182:14:4","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","file":"../../utils/Context.sol","id":548,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1056,"sourceUnit":1380,"src":"239:48:4","symbolAliases":[{"foreign":{"id":547,"name":"Context","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1379,"src":"247:7:4","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/interfaces/draft-IERC6093.sol","file":"../../interfaces/draft-IERC6093.sol","id":550,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1056,"sourceUnit":541,"src":"289:65:4","symbolAliases":[{"foreign":{"id":549,"name":"IERC20Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":445,"src":"297:12:4","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":552,"name":"Context","nameLocations":["1161:7:4"],"nodeType":"IdentifierPath","referencedDeclaration":1379,"src":"1161:7:4"},"id":553,"nodeType":"InheritanceSpecifier","src":"1161:7:4"},{"baseName":{"id":554,"name":"IERC20","nameLocations":["1170:6:4"],"nodeType":"IdentifierPath","referencedDeclaration":1133,"src":"1170:6:4"},"id":555,"nodeType":"InheritanceSpecifier","src":"1170:6:4"},{"baseName":{"id":556,"name":"IERC20Metadata","nameLocations":["1178:14:4"],"nodeType":"IdentifierPath","referencedDeclaration":1313,"src":"1178:14:4"},"id":557,"nodeType":"InheritanceSpecifier","src":"1178:14:4"},{"baseName":{"id":558,"name":"IERC20Errors","nameLocations":["1194:12:4"],"nodeType":"IdentifierPath","referencedDeclaration":445,"src":"1194:12:4"},"id":559,"nodeType":"InheritanceSpecifier","src":"1194:12:4"}],"canonicalName":"ERC20","contractDependencies":[],"contractKind":"contract","documentation":{"id":551,"nodeType":"StructuredDocumentation","src":"358:774:4","text":" @dev Implementation of the {IERC20} interface.\n This implementation is agnostic to the way tokens are created. This means\n that a supply mechanism has to be added in a derived contract using {_mint}.\n TIP: For a detailed writeup see our guide\n https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n to implement supply mechanisms].\n The default value of {decimals} is 18. To change this, you should override\n this function so it returns a different value.\n We have followed general OpenZeppelin Contracts guidelines: functions revert\n instead returning `false` on failure. This behavior is nonetheless\n conventional and does not conflict with the expectations of ERC-20\n applications."},"fullyImplemented":true,"id":1055,"linearizedBaseContracts":[1055,445,1313,1133,1379],"name":"ERC20","nameLocation":"1152:5:4","nodeType":"ContractDefinition","nodes":[{"constant":false,"id":563,"mutability":"mutable","name":"_balances","nameLocation":"1258:9:4","nodeType":"VariableDeclaration","scope":1055,"src":"1214:53:4","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"typeName":{"id":562,"keyName":"account","keyNameLocation":"1230:7:4","keyType":{"id":560,"name":"address","nodeType":"ElementaryTypeName","src":"1222:7:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1214:35:4","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":561,"name":"uint256","nodeType":"ElementaryTypeName","src":"1241:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"private"},{"constant":false,"id":569,"mutability":"mutable","name":"_allowances","nameLocation":"1348:11:4","nodeType":"VariableDeclaration","scope":1055,"src":"1276:83:4","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"},"typeName":{"id":568,"keyName":"account","keyNameLocation":"1292:7:4","keyType":{"id":564,"name":"address","nodeType":"ElementaryTypeName","src":"1284:7:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1276:63:4","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":567,"keyName":"spender","keyNameLocation":"1319:7:4","keyType":{"id":565,"name":"address","nodeType":"ElementaryTypeName","src":"1311:7:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1303:35:4","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":566,"name":"uint256","nodeType":"ElementaryTypeName","src":"1330:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}}},"visibility":"private"},{"constant":false,"id":571,"mutability":"mutable","name":"_totalSupply","nameLocation":"1384:12:4","nodeType":"VariableDeclaration","scope":1055,"src":"1368:28:4","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":570,"name":"uint256","nodeType":"ElementaryTypeName","src":"1368:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"private"},{"constant":false,"id":573,"mutability":"mutable","name":"_name","nameLocation":"1420:5:4","nodeType":"VariableDeclaration","scope":1055,"src":"1405:20:4","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":572,"name":"string","nodeType":"ElementaryTypeName","src":"1405:6:4","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"private"},{"constant":false,"id":575,"mutability":"mutable","name":"_symbol","nameLocation":"1447:7:4","nodeType":"VariableDeclaration","scope":1055,"src":"1432:22:4","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":574,"name":"string","nodeType":"ElementaryTypeName","src":"1432:6:4","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"private"},{"body":{"id":591,"nodeType":"Block","src":"1681:60:4","statements":[{"expression":{"id":585,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":583,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":573,"src":"1692:5:4","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":584,"name":"name_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":578,"src":"1700:5:4","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"1692:13:4","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":586,"nodeType":"ExpressionStatement","src":"1692:13:4"},{"expression":{"id":589,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":587,"name":"_symbol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":575,"src":"1716:7:4","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":588,"name":"symbol_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":580,"src":"1726:7:4","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"1716:17:4","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":590,"nodeType":"ExpressionStatement","src":"1716:17:4"}]},"documentation":{"id":576,"nodeType":"StructuredDocumentation","src":"1463:156:4","text":" @dev Sets the values for {name} and {symbol}.\n Both values are immutable: they can only be set once during construction."},"id":592,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":581,"nodeType":"ParameterList","parameters":[{"constant":false,"id":578,"mutability":"mutable","name":"name_","nameLocation":"1651:5:4","nodeType":"VariableDeclaration","scope":592,"src":"1637:19:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":577,"name":"string","nodeType":"ElementaryTypeName","src":"1637:6:4","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":580,"mutability":"mutable","name":"symbol_","nameLocation":"1672:7:4","nodeType":"VariableDeclaration","scope":592,"src":"1658:21:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":579,"name":"string","nodeType":"ElementaryTypeName","src":"1658:6:4","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1636:44:4"},"returnParameters":{"id":582,"nodeType":"ParameterList","parameters":[],"src":"1681:0:4"},"scope":1055,"src":"1625:116:4","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"baseFunctions":[1300],"body":{"id":600,"nodeType":"Block","src":"1871:31:4","statements":[{"expression":{"id":598,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":573,"src":"1889:5:4","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"functionReturnParameters":597,"id":599,"nodeType":"Return","src":"1882:12:4"}]},"documentation":{"id":593,"nodeType":"StructuredDocumentation","src":"1749:56:4","text":" @dev Returns the name of the token."},"functionSelector":"06fdde03","id":601,"implemented":true,"kind":"function","modifiers":[],"name":"name","nameLocation":"1820:4:4","nodeType":"FunctionDefinition","parameters":{"id":594,"nodeType":"ParameterList","parameters":[],"src":"1824:2:4"},"returnParameters":{"id":597,"nodeType":"ParameterList","parameters":[{"constant":false,"id":596,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":601,"src":"1856:13:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":595,"name":"string","nodeType":"ElementaryTypeName","src":"1856:6:4","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1855:15:4"},"scope":1055,"src":"1811:91:4","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1306],"body":{"id":609,"nodeType":"Block","src":"2083:33:4","statements":[{"expression":{"id":607,"name":"_symbol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":575,"src":"2101:7:4","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"functionReturnParameters":606,"id":608,"nodeType":"Return","src":"2094:14:4"}]},"documentation":{"id":602,"nodeType":"StructuredDocumentation","src":"1910:105:4","text":" @dev Returns the symbol of the token, usually a shorter version of the\n name."},"functionSelector":"95d89b41","id":610,"implemented":true,"kind":"function","modifiers":[],"name":"symbol","nameLocation":"2030:6:4","nodeType":"FunctionDefinition","parameters":{"id":603,"nodeType":"ParameterList","parameters":[],"src":"2036:2:4"},"returnParameters":{"id":606,"nodeType":"ParameterList","parameters":[{"constant":false,"id":605,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":610,"src":"2068:13:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":604,"name":"string","nodeType":"ElementaryTypeName","src":"2068:6:4","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2067:15:4"},"scope":1055,"src":"2021:95:4","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1312],"body":{"id":618,"nodeType":"Block","src":"2820:28:4","statements":[{"expression":{"hexValue":"3138","id":616,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2838:2:4","typeDescriptions":{"typeIdentifier":"t_rational_18_by_1","typeString":"int_const 18"},"value":"18"},"functionReturnParameters":615,"id":617,"nodeType":"Return","src":"2831:9:4"}]},"documentation":{"id":611,"nodeType":"StructuredDocumentation","src":"2124:634:4","text":" @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5.05` (`505 / 10 ** 2`).\n Tokens usually opt for a value of 18, imitating the relationship between\n Ether and Wei. This is the default value returned by this function, unless\n it's overridden.\n NOTE: This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {IERC20-balanceOf} and {IERC20-transfer}."},"functionSelector":"313ce567","id":619,"implemented":true,"kind":"function","modifiers":[],"name":"decimals","nameLocation":"2773:8:4","nodeType":"FunctionDefinition","parameters":{"id":612,"nodeType":"ParameterList","parameters":[],"src":"2781:2:4"},"returnParameters":{"id":615,"nodeType":"ParameterList","parameters":[{"constant":false,"id":614,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":619,"src":"2813:5:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":613,"name":"uint8","nodeType":"ElementaryTypeName","src":"2813:5:4","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"2812:7:4"},"scope":1055,"src":"2764:84:4","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1082],"body":{"id":627,"nodeType":"Block","src":"2974:38:4","statements":[{"expression":{"id":625,"name":"_totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":571,"src":"2992:12:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":624,"id":626,"nodeType":"Return","src":"2985:19:4"}]},"documentation":{"id":620,"nodeType":"StructuredDocumentation","src":"2856:51:4","text":" @dev See {IERC20-totalSupply}."},"functionSelector":"18160ddd","id":628,"implemented":true,"kind":"function","modifiers":[],"name":"totalSupply","nameLocation":"2922:11:4","nodeType":"FunctionDefinition","parameters":{"id":621,"nodeType":"ParameterList","parameters":[],"src":"2933:2:4"},"returnParameters":{"id":624,"nodeType":"ParameterList","parameters":[{"constant":false,"id":623,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":628,"src":"2965:7:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":622,"name":"uint256","nodeType":"ElementaryTypeName","src":"2965:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2964:9:4"},"scope":1055,"src":"2913:99:4","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1090],"body":{"id":640,"nodeType":"Block","src":"3149:44:4","statements":[{"expression":{"baseExpression":{"id":636,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":563,"src":"3167:9:4","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":638,"indexExpression":{"id":637,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":631,"src":"3177:7:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3167:18:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":635,"id":639,"nodeType":"Return","src":"3160:25:4"}]},"documentation":{"id":629,"nodeType":"StructuredDocumentation","src":"3020:49:4","text":" @dev See {IERC20-balanceOf}."},"functionSelector":"70a08231","id":641,"implemented":true,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"3084:9:4","nodeType":"FunctionDefinition","parameters":{"id":632,"nodeType":"ParameterList","parameters":[{"constant":false,"id":631,"mutability":"mutable","name":"account","nameLocation":"3102:7:4","nodeType":"VariableDeclaration","scope":641,"src":"3094:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":630,"name":"address","nodeType":"ElementaryTypeName","src":"3094:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3093:17:4"},"returnParameters":{"id":635,"nodeType":"ParameterList","parameters":[{"constant":false,"id":634,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":641,"src":"3140:7:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":633,"name":"uint256","nodeType":"ElementaryTypeName","src":"3140:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3139:9:4"},"scope":1055,"src":"3075:118:4","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1100],"body":{"id":664,"nodeType":"Block","src":"3473:107:4","statements":[{"assignments":[652],"declarations":[{"constant":false,"id":652,"mutability":"mutable","name":"owner","nameLocation":"3492:5:4","nodeType":"VariableDeclaration","scope":664,"src":"3484:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":651,"name":"address","nodeType":"ElementaryTypeName","src":"3484:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":655,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":653,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1361,"src":"3500:10:4","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":654,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3500:12:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"3484:28:4"},{"expression":{"arguments":[{"id":657,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":652,"src":"3533:5:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":658,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":644,"src":"3540:2:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":659,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":646,"src":"3544:5:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":656,"name":"_transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":785,"src":"3523:9:4","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":660,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3523:27:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":661,"nodeType":"ExpressionStatement","src":"3523:27:4"},{"expression":{"hexValue":"74727565","id":662,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"3568:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":650,"id":663,"nodeType":"Return","src":"3561:11:4"}]},"documentation":{"id":642,"nodeType":"StructuredDocumentation","src":"3201:191:4","text":" @dev See {IERC20-transfer}.\n Requirements:\n - `to` cannot be the zero address.\n - the caller must have a balance of at least `value`."},"functionSelector":"a9059cbb","id":665,"implemented":true,"kind":"function","modifiers":[],"name":"transfer","nameLocation":"3407:8:4","nodeType":"FunctionDefinition","parameters":{"id":647,"nodeType":"ParameterList","parameters":[{"constant":false,"id":644,"mutability":"mutable","name":"to","nameLocation":"3424:2:4","nodeType":"VariableDeclaration","scope":665,"src":"3416:10:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":643,"name":"address","nodeType":"ElementaryTypeName","src":"3416:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":646,"mutability":"mutable","name":"value","nameLocation":"3436:5:4","nodeType":"VariableDeclaration","scope":665,"src":"3428:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":645,"name":"uint256","nodeType":"ElementaryTypeName","src":"3428:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3415:27:4"},"returnParameters":{"id":650,"nodeType":"ParameterList","parameters":[{"constant":false,"id":649,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":665,"src":"3467:4:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":648,"name":"bool","nodeType":"ElementaryTypeName","src":"3467:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3466:6:4"},"scope":1055,"src":"3398:182:4","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[1110],"body":{"id":681,"nodeType":"Block","src":"3732:53:4","statements":[{"expression":{"baseExpression":{"baseExpression":{"id":675,"name":"_allowances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":569,"src":"3750:11:4","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"}},"id":677,"indexExpression":{"id":676,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":668,"src":"3762:5:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3750:18:4","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":679,"indexExpression":{"id":678,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":670,"src":"3769:7:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3750:27:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":674,"id":680,"nodeType":"Return","src":"3743:34:4"}]},"documentation":{"id":666,"nodeType":"StructuredDocumentation","src":"3588:49:4","text":" @dev See {IERC20-allowance}."},"functionSelector":"dd62ed3e","id":682,"implemented":true,"kind":"function","modifiers":[],"name":"allowance","nameLocation":"3652:9:4","nodeType":"FunctionDefinition","parameters":{"id":671,"nodeType":"ParameterList","parameters":[{"constant":false,"id":668,"mutability":"mutable","name":"owner","nameLocation":"3670:5:4","nodeType":"VariableDeclaration","scope":682,"src":"3662:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":667,"name":"address","nodeType":"ElementaryTypeName","src":"3662:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":670,"mutability":"mutable","name":"spender","nameLocation":"3685:7:4","nodeType":"VariableDeclaration","scope":682,"src":"3677:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":669,"name":"address","nodeType":"ElementaryTypeName","src":"3677:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3661:32:4"},"returnParameters":{"id":674,"nodeType":"ParameterList","parameters":[{"constant":false,"id":673,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":682,"src":"3723:7:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":672,"name":"uint256","nodeType":"ElementaryTypeName","src":"3723:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3722:9:4"},"scope":1055,"src":"3643:142:4","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1120],"body":{"id":705,"nodeType":"Block","src":"4183:111:4","statements":[{"assignments":[693],"declarations":[{"constant":false,"id":693,"mutability":"mutable","name":"owner","nameLocation":"4202:5:4","nodeType":"VariableDeclaration","scope":705,"src":"4194:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":692,"name":"address","nodeType":"ElementaryTypeName","src":"4194:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":696,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":694,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1361,"src":"4210:10:4","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":695,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4210:12:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"4194:28:4"},{"expression":{"arguments":[{"id":698,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":693,"src":"4242:5:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":699,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":685,"src":"4249:7:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":700,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":687,"src":"4258:5:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":697,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[946,1006],"referencedDeclaration":946,"src":"4233:8:4","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":701,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4233:31:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":702,"nodeType":"ExpressionStatement","src":"4233:31:4"},{"expression":{"hexValue":"74727565","id":703,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"4282:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":691,"id":704,"nodeType":"Return","src":"4275:11:4"}]},"documentation":{"id":683,"nodeType":"StructuredDocumentation","src":"3793:305:4","text":" @dev See {IERC20-approve}.\n NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n `transferFrom`. This is semantically equivalent to an infinite approval.\n Requirements:\n - `spender` cannot be the zero address."},"functionSelector":"095ea7b3","id":706,"implemented":true,"kind":"function","modifiers":[],"name":"approve","nameLocation":"4113:7:4","nodeType":"FunctionDefinition","parameters":{"id":688,"nodeType":"ParameterList","parameters":[{"constant":false,"id":685,"mutability":"mutable","name":"spender","nameLocation":"4129:7:4","nodeType":"VariableDeclaration","scope":706,"src":"4121:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":684,"name":"address","nodeType":"ElementaryTypeName","src":"4121:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":687,"mutability":"mutable","name":"value","nameLocation":"4146:5:4","nodeType":"VariableDeclaration","scope":706,"src":"4138:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":686,"name":"uint256","nodeType":"ElementaryTypeName","src":"4138:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4120:32:4"},"returnParameters":{"id":691,"nodeType":"ParameterList","parameters":[{"constant":false,"id":690,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":706,"src":"4177:4:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":689,"name":"bool","nodeType":"ElementaryTypeName","src":"4177:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4176:6:4"},"scope":1055,"src":"4104:190:4","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[1132],"body":{"id":737,"nodeType":"Block","src":"4997:156:4","statements":[{"assignments":[719],"declarations":[{"constant":false,"id":719,"mutability":"mutable","name":"spender","nameLocation":"5016:7:4","nodeType":"VariableDeclaration","scope":737,"src":"5008:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":718,"name":"address","nodeType":"ElementaryTypeName","src":"5008:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":722,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":720,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1361,"src":"5026:10:4","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":721,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5026:12:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"5008:30:4"},{"expression":{"arguments":[{"id":724,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":709,"src":"5065:4:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":725,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":719,"src":"5071:7:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":726,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":713,"src":"5080:5:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":723,"name":"_spendAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1054,"src":"5049:15:4","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":727,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5049:37:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":728,"nodeType":"ExpressionStatement","src":"5049:37:4"},{"expression":{"arguments":[{"id":730,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":709,"src":"5107:4:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":731,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":711,"src":"5113:2:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":732,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":713,"src":"5117:5:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":729,"name":"_transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":785,"src":"5097:9:4","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":733,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5097:26:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":734,"nodeType":"ExpressionStatement","src":"5097:26:4"},{"expression":{"hexValue":"74727565","id":735,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"5141:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":717,"id":736,"nodeType":"Return","src":"5134:11:4"}]},"documentation":{"id":707,"nodeType":"StructuredDocumentation","src":"4302:596:4","text":" @dev See {IERC20-transferFrom}.\n Skips emitting an {Approval} event indicating an allowance update. This is not\n required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve].\n NOTE: Does not update the allowance if the current allowance\n is the maximum `uint256`.\n Requirements:\n - `from` and `to` cannot be the zero address.\n - `from` must have a balance of at least `value`.\n - the caller must have allowance for ``from``'s tokens of at least\n `value`."},"functionSelector":"23b872dd","id":738,"implemented":true,"kind":"function","modifiers":[],"name":"transferFrom","nameLocation":"4913:12:4","nodeType":"FunctionDefinition","parameters":{"id":714,"nodeType":"ParameterList","parameters":[{"constant":false,"id":709,"mutability":"mutable","name":"from","nameLocation":"4934:4:4","nodeType":"VariableDeclaration","scope":738,"src":"4926:12:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":708,"name":"address","nodeType":"ElementaryTypeName","src":"4926:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":711,"mutability":"mutable","name":"to","nameLocation":"4948:2:4","nodeType":"VariableDeclaration","scope":738,"src":"4940:10:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":710,"name":"address","nodeType":"ElementaryTypeName","src":"4940:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":713,"mutability":"mutable","name":"value","nameLocation":"4960:5:4","nodeType":"VariableDeclaration","scope":738,"src":"4952:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":712,"name":"uint256","nodeType":"ElementaryTypeName","src":"4952:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4925:41:4"},"returnParameters":{"id":717,"nodeType":"ParameterList","parameters":[{"constant":false,"id":716,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":738,"src":"4991:4:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":715,"name":"bool","nodeType":"ElementaryTypeName","src":"4991:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4990:6:4"},"scope":1055,"src":"4904:249:4","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":784,"nodeType":"Block","src":"5607:239:4","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":753,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":748,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":741,"src":"5622:4:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":751,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5638:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":750,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5630:7:4","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":749,"name":"address","nodeType":"ElementaryTypeName","src":"5630:7:4","typeDescriptions":{}}},"id":752,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5630:10:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5622:18:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":762,"nodeType":"IfStatement","src":"5618:88:4","trueBody":{"id":761,"nodeType":"Block","src":"5642:64:4","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":757,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5691:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":756,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5683:7:4","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":755,"name":"address","nodeType":"ElementaryTypeName","src":"5683:7:4","typeDescriptions":{}}},"id":758,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5683:10:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":754,"name":"ERC20InvalidSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":420,"src":"5664:18:4","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$_t_error_$","typeString":"function (address) pure returns (error)"}},"id":759,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5664:30:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":760,"nodeType":"RevertStatement","src":"5657:37:4"}]}},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":768,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":763,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":743,"src":"5720:2:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":766,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5734:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":765,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5726:7:4","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":764,"name":"address","nodeType":"ElementaryTypeName","src":"5726:7:4","typeDescriptions":{}}},"id":767,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5726:10:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5720:16:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":777,"nodeType":"IfStatement","src":"5716:88:4","trueBody":{"id":776,"nodeType":"Block","src":"5738:66:4","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":772,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5789:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":771,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5781:7:4","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":770,"name":"address","nodeType":"ElementaryTypeName","src":"5781:7:4","typeDescriptions":{}}},"id":773,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5781:10:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":769,"name":"ERC20InvalidReceiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":425,"src":"5760:20:4","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$_t_error_$","typeString":"function (address) pure returns (error)"}},"id":774,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5760:32:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":775,"nodeType":"RevertStatement","src":"5753:39:4"}]}},{"expression":{"arguments":[{"id":779,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":741,"src":"5822:4:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":780,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":743,"src":"5828:2:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":781,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":745,"src":"5832:5:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":778,"name":"_update","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":862,"src":"5814:7:4","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":782,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5814:24:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":783,"nodeType":"ExpressionStatement","src":"5814:24:4"}]},"documentation":{"id":739,"nodeType":"StructuredDocumentation","src":"5161:371:4","text":" @dev Moves a `value` amount of tokens from `from` to `to`.\n This internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n NOTE: This function is not virtual, {_update} should be overridden instead."},"id":785,"implemented":true,"kind":"function","modifiers":[],"name":"_transfer","nameLocation":"5547:9:4","nodeType":"FunctionDefinition","parameters":{"id":746,"nodeType":"ParameterList","parameters":[{"constant":false,"id":741,"mutability":"mutable","name":"from","nameLocation":"5565:4:4","nodeType":"VariableDeclaration","scope":785,"src":"5557:12:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":740,"name":"address","nodeType":"ElementaryTypeName","src":"5557:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":743,"mutability":"mutable","name":"to","nameLocation":"5579:2:4","nodeType":"VariableDeclaration","scope":785,"src":"5571:10:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":742,"name":"address","nodeType":"ElementaryTypeName","src":"5571:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":745,"mutability":"mutable","name":"value","nameLocation":"5591:5:4","nodeType":"VariableDeclaration","scope":785,"src":"5583:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":744,"name":"uint256","nodeType":"ElementaryTypeName","src":"5583:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5556:41:4"},"returnParameters":{"id":747,"nodeType":"ParameterList","parameters":[],"src":"5607:0:4"},"scope":1055,"src":"5538:308:4","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":861,"nodeType":"Block","src":"6245:1060:4","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":800,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":795,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":788,"src":"6260:4:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":798,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6276:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":797,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6268:7:4","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":796,"name":"address","nodeType":"ElementaryTypeName","src":"6268:7:4","typeDescriptions":{}}},"id":799,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6268:10:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6260:18:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":832,"nodeType":"Block","src":"6437:371:4","statements":[{"assignments":[807],"declarations":[{"constant":false,"id":807,"mutability":"mutable","name":"fromBalance","nameLocation":"6460:11:4","nodeType":"VariableDeclaration","scope":832,"src":"6452:19:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":806,"name":"uint256","nodeType":"ElementaryTypeName","src":"6452:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":811,"initialValue":{"baseExpression":{"id":808,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":563,"src":"6474:9:4","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":810,"indexExpression":{"id":809,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":788,"src":"6484:4:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6474:15:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"6452:37:4"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":814,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":812,"name":"fromBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":807,"src":"6508:11:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":813,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":792,"src":"6522:5:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6508:19:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":822,"nodeType":"IfStatement","src":"6504:117:4","trueBody":{"id":821,"nodeType":"Block","src":"6529:92:4","statements":[{"errorCall":{"arguments":[{"id":816,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":788,"src":"6580:4:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":817,"name":"fromBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":807,"src":"6586:11:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":818,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":792,"src":"6599:5:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":815,"name":"ERC20InsufficientBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":415,"src":"6555:24:4","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$_t_error_$","typeString":"function (address,uint256,uint256) pure returns (error)"}},"id":819,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6555:50:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":820,"nodeType":"RevertStatement","src":"6548:57:4"}]}},{"id":831,"nodeType":"UncheckedBlock","src":"6635:162:4","statements":[{"expression":{"id":829,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":823,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":563,"src":"6744:9:4","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":825,"indexExpression":{"id":824,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":788,"src":"6754:4:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"6744:15:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":828,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":826,"name":"fromBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":807,"src":"6762:11:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":827,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":792,"src":"6776:5:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6762:19:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6744:37:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":830,"nodeType":"ExpressionStatement","src":"6744:37:4"}]}]},"id":833,"nodeType":"IfStatement","src":"6256:552:4","trueBody":{"id":805,"nodeType":"Block","src":"6280:151:4","statements":[{"expression":{"id":803,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":801,"name":"_totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":571,"src":"6398:12:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":802,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":792,"src":"6414:5:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6398:21:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":804,"nodeType":"ExpressionStatement","src":"6398:21:4"}]}},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":839,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":834,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":790,"src":"6824:2:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":837,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6838:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":836,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6830:7:4","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":835,"name":"address","nodeType":"ElementaryTypeName","src":"6830:7:4","typeDescriptions":{}}},"id":838,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6830:10:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6824:16:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":853,"nodeType":"Block","src":"7044:211:4","statements":[{"id":852,"nodeType":"UncheckedBlock","src":"7059:185:4","statements":[{"expression":{"id":850,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":846,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":563,"src":"7206:9:4","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":848,"indexExpression":{"id":847,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":790,"src":"7216:2:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"7206:13:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":849,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":792,"src":"7223:5:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7206:22:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":851,"nodeType":"ExpressionStatement","src":"7206:22:4"}]}]},"id":854,"nodeType":"IfStatement","src":"6820:435:4","trueBody":{"id":845,"nodeType":"Block","src":"6842:196:4","statements":[{"id":844,"nodeType":"UncheckedBlock","src":"6857:170:4","statements":[{"expression":{"id":842,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":840,"name":"_totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":571,"src":"6990:12:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"id":841,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":792,"src":"7006:5:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6990:21:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":843,"nodeType":"ExpressionStatement","src":"6990:21:4"}]}]}},{"eventCall":{"arguments":[{"id":856,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":788,"src":"7281:4:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":857,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":790,"src":"7287:2:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":858,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":792,"src":"7291:5:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":855,"name":"Transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1067,"src":"7272:8:4","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":859,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7272:25:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":860,"nodeType":"EmitStatement","src":"7267:30:4"}]},"documentation":{"id":786,"nodeType":"StructuredDocumentation","src":"5854:310:4","text":" @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n this function.\n Emits a {Transfer} event."},"id":862,"implemented":true,"kind":"function","modifiers":[],"name":"_update","nameLocation":"6179:7:4","nodeType":"FunctionDefinition","parameters":{"id":793,"nodeType":"ParameterList","parameters":[{"constant":false,"id":788,"mutability":"mutable","name":"from","nameLocation":"6195:4:4","nodeType":"VariableDeclaration","scope":862,"src":"6187:12:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":787,"name":"address","nodeType":"ElementaryTypeName","src":"6187:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":790,"mutability":"mutable","name":"to","nameLocation":"6209:2:4","nodeType":"VariableDeclaration","scope":862,"src":"6201:10:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":789,"name":"address","nodeType":"ElementaryTypeName","src":"6201:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":792,"mutability":"mutable","name":"value","nameLocation":"6221:5:4","nodeType":"VariableDeclaration","scope":862,"src":"6213:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":791,"name":"uint256","nodeType":"ElementaryTypeName","src":"6213:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6186:41:4"},"returnParameters":{"id":794,"nodeType":"ParameterList","parameters":[],"src":"6245:0:4"},"scope":1055,"src":"6170:1135:4","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":894,"nodeType":"Block","src":"7714:157:4","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":875,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":870,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":865,"src":"7729:7:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":873,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7748:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":872,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7740:7:4","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":871,"name":"address","nodeType":"ElementaryTypeName","src":"7740:7:4","typeDescriptions":{}}},"id":874,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7740:10:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"7729:21:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":884,"nodeType":"IfStatement","src":"7725:93:4","trueBody":{"id":883,"nodeType":"Block","src":"7752:66:4","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":879,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7803:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":878,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7795:7:4","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":877,"name":"address","nodeType":"ElementaryTypeName","src":"7795:7:4","typeDescriptions":{}}},"id":880,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7795:10:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":876,"name":"ERC20InvalidReceiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":425,"src":"7774:20:4","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$_t_error_$","typeString":"function (address) pure returns (error)"}},"id":881,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7774:32:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":882,"nodeType":"RevertStatement","src":"7767:39:4"}]}},{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":888,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7844:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":887,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7836:7:4","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":886,"name":"address","nodeType":"ElementaryTypeName","src":"7836:7:4","typeDescriptions":{}}},"id":889,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7836:10:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":890,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":865,"src":"7848:7:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":891,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":867,"src":"7857:5:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":885,"name":"_update","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":862,"src":"7828:7:4","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":892,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7828:35:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":893,"nodeType":"ExpressionStatement","src":"7828:35:4"}]},"documentation":{"id":863,"nodeType":"StructuredDocumentation","src":"7313:339:4","text":" @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n Relies on the `_update` mechanism\n Emits a {Transfer} event with `from` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead."},"id":895,"implemented":true,"kind":"function","modifiers":[],"name":"_mint","nameLocation":"7667:5:4","nodeType":"FunctionDefinition","parameters":{"id":868,"nodeType":"ParameterList","parameters":[{"constant":false,"id":865,"mutability":"mutable","name":"account","nameLocation":"7681:7:4","nodeType":"VariableDeclaration","scope":895,"src":"7673:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":864,"name":"address","nodeType":"ElementaryTypeName","src":"7673:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":867,"mutability":"mutable","name":"value","nameLocation":"7698:5:4","nodeType":"VariableDeclaration","scope":895,"src":"7690:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":866,"name":"uint256","nodeType":"ElementaryTypeName","src":"7690:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7672:32:4"},"returnParameters":{"id":869,"nodeType":"ParameterList","parameters":[],"src":"7714:0:4"},"scope":1055,"src":"7658:213:4","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":927,"nodeType":"Block","src":"8255:155:4","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":908,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":903,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":898,"src":"8270:7:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":906,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8289:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":905,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8281:7:4","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":904,"name":"address","nodeType":"ElementaryTypeName","src":"8281:7:4","typeDescriptions":{}}},"id":907,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8281:10:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"8270:21:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":917,"nodeType":"IfStatement","src":"8266:91:4","trueBody":{"id":916,"nodeType":"Block","src":"8293:64:4","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":912,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8342:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":911,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8334:7:4","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":910,"name":"address","nodeType":"ElementaryTypeName","src":"8334:7:4","typeDescriptions":{}}},"id":913,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8334:10:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":909,"name":"ERC20InvalidSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":420,"src":"8315:18:4","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$_t_error_$","typeString":"function (address) pure returns (error)"}},"id":914,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8315:30:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":915,"nodeType":"RevertStatement","src":"8308:37:4"}]}},{"expression":{"arguments":[{"id":919,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":898,"src":"8375:7:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":922,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8392:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":921,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8384:7:4","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":920,"name":"address","nodeType":"ElementaryTypeName","src":"8384:7:4","typeDescriptions":{}}},"id":923,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8384:10:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":924,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":900,"src":"8396:5:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":918,"name":"_update","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":862,"src":"8367:7:4","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":925,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8367:35:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":926,"nodeType":"ExpressionStatement","src":"8367:35:4"}]},"documentation":{"id":896,"nodeType":"StructuredDocumentation","src":"7879:314:4","text":" @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n Relies on the `_update` mechanism.\n Emits a {Transfer} event with `to` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead"},"id":928,"implemented":true,"kind":"function","modifiers":[],"name":"_burn","nameLocation":"8208:5:4","nodeType":"FunctionDefinition","parameters":{"id":901,"nodeType":"ParameterList","parameters":[{"constant":false,"id":898,"mutability":"mutable","name":"account","nameLocation":"8222:7:4","nodeType":"VariableDeclaration","scope":928,"src":"8214:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":897,"name":"address","nodeType":"ElementaryTypeName","src":"8214:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":900,"mutability":"mutable","name":"value","nameLocation":"8239:5:4","nodeType":"VariableDeclaration","scope":928,"src":"8231:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":899,"name":"uint256","nodeType":"ElementaryTypeName","src":"8231:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8213:32:4"},"returnParameters":{"id":902,"nodeType":"ParameterList","parameters":[],"src":"8255:0:4"},"scope":1055,"src":"8199:211:4","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":945,"nodeType":"Block","src":"9037:56:4","statements":[{"expression":{"arguments":[{"id":939,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":931,"src":"9057:5:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":940,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":933,"src":"9064:7:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":941,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":935,"src":"9073:5:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"74727565","id":942,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"9080:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":938,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[946,1006],"referencedDeclaration":1006,"src":"9048:8:4","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$","typeString":"function (address,address,uint256,bool)"}},"id":943,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9048:37:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":944,"nodeType":"ExpressionStatement","src":"9048:37:4"}]},"documentation":{"id":929,"nodeType":"StructuredDocumentation","src":"8418:539:4","text":" @dev Sets `value` as the allowance of `spender` over the `owner`'s tokens.\n This internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address.\n Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument."},"id":946,"implemented":true,"kind":"function","modifiers":[],"name":"_approve","nameLocation":"8972:8:4","nodeType":"FunctionDefinition","parameters":{"id":936,"nodeType":"ParameterList","parameters":[{"constant":false,"id":931,"mutability":"mutable","name":"owner","nameLocation":"8989:5:4","nodeType":"VariableDeclaration","scope":946,"src":"8981:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":930,"name":"address","nodeType":"ElementaryTypeName","src":"8981:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":933,"mutability":"mutable","name":"spender","nameLocation":"9004:7:4","nodeType":"VariableDeclaration","scope":946,"src":"8996:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":932,"name":"address","nodeType":"ElementaryTypeName","src":"8996:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":935,"mutability":"mutable","name":"value","nameLocation":"9021:5:4","nodeType":"VariableDeclaration","scope":946,"src":"9013:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":934,"name":"uint256","nodeType":"ElementaryTypeName","src":"9013:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8980:47:4"},"returnParameters":{"id":937,"nodeType":"ParameterList","parameters":[],"src":"9037:0:4"},"scope":1055,"src":"8963:130:4","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1005,"nodeType":"Block","src":"10058:345:4","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":963,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":958,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":949,"src":"10073:5:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":961,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10090:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":960,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10082:7:4","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":959,"name":"address","nodeType":"ElementaryTypeName","src":"10082:7:4","typeDescriptions":{}}},"id":962,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10082:10:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"10073:19:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":972,"nodeType":"IfStatement","src":"10069:91:4","trueBody":{"id":971,"nodeType":"Block","src":"10094:66:4","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":967,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10145:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":966,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10137:7:4","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":965,"name":"address","nodeType":"ElementaryTypeName","src":"10137:7:4","typeDescriptions":{}}},"id":968,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10137:10:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":964,"name":"ERC20InvalidApprover","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":439,"src":"10116:20:4","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$_t_error_$","typeString":"function (address) pure returns (error)"}},"id":969,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10116:32:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":970,"nodeType":"RevertStatement","src":"10109:39:4"}]}},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":978,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":973,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":951,"src":"10174:7:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":976,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10193:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":975,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10185:7:4","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":974,"name":"address","nodeType":"ElementaryTypeName","src":"10185:7:4","typeDescriptions":{}}},"id":977,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10185:10:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"10174:21:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":987,"nodeType":"IfStatement","src":"10170:92:4","trueBody":{"id":986,"nodeType":"Block","src":"10197:65:4","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":982,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10247:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":981,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10239:7:4","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":980,"name":"address","nodeType":"ElementaryTypeName","src":"10239:7:4","typeDescriptions":{}}},"id":983,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10239:10:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":979,"name":"ERC20InvalidSpender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":444,"src":"10219:19:4","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$_t_error_$","typeString":"function (address) pure returns (error)"}},"id":984,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10219:31:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":985,"nodeType":"RevertStatement","src":"10212:38:4"}]}},{"expression":{"id":994,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":988,"name":"_allowances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":569,"src":"10272:11:4","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"}},"id":991,"indexExpression":{"id":989,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":949,"src":"10284:5:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"10272:18:4","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":992,"indexExpression":{"id":990,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":951,"src":"10291:7:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"10272:27:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":993,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":953,"src":"10302:5:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10272:35:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":995,"nodeType":"ExpressionStatement","src":"10272:35:4"},{"condition":{"id":996,"name":"emitEvent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":955,"src":"10322:9:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1004,"nodeType":"IfStatement","src":"10318:78:4","trueBody":{"id":1003,"nodeType":"Block","src":"10333:63:4","statements":[{"eventCall":{"arguments":[{"id":998,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":949,"src":"10362:5:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":999,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":951,"src":"10369:7:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1000,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":953,"src":"10378:5:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":997,"name":"Approval","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1076,"src":"10353:8:4","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1001,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10353:31:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1002,"nodeType":"EmitStatement","src":"10348:36:4"}]}}]},"documentation":{"id":947,"nodeType":"StructuredDocumentation","src":"9101:853:4","text":" @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n `Approval` event during `transferFrom` operations.\n Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n true using the following override:\n ```solidity\n function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     super._approve(owner, spender, value, true);\n }\n ```\n Requirements are the same as {_approve}."},"id":1006,"implemented":true,"kind":"function","modifiers":[],"name":"_approve","nameLocation":"9969:8:4","nodeType":"FunctionDefinition","parameters":{"id":956,"nodeType":"ParameterList","parameters":[{"constant":false,"id":949,"mutability":"mutable","name":"owner","nameLocation":"9986:5:4","nodeType":"VariableDeclaration","scope":1006,"src":"9978:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":948,"name":"address","nodeType":"ElementaryTypeName","src":"9978:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":951,"mutability":"mutable","name":"spender","nameLocation":"10001:7:4","nodeType":"VariableDeclaration","scope":1006,"src":"9993:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":950,"name":"address","nodeType":"ElementaryTypeName","src":"9993:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":953,"mutability":"mutable","name":"value","nameLocation":"10018:5:4","nodeType":"VariableDeclaration","scope":1006,"src":"10010:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":952,"name":"uint256","nodeType":"ElementaryTypeName","src":"10010:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":955,"mutability":"mutable","name":"emitEvent","nameLocation":"10030:9:4","nodeType":"VariableDeclaration","scope":1006,"src":"10025:14:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":954,"name":"bool","nodeType":"ElementaryTypeName","src":"10025:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"9977:63:4"},"returnParameters":{"id":957,"nodeType":"ParameterList","parameters":[],"src":"10058:0:4"},"scope":1055,"src":"9960:443:4","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1053,"nodeType":"Block","src":"10784:397:4","statements":[{"assignments":[1017],"declarations":[{"constant":false,"id":1017,"mutability":"mutable","name":"currentAllowance","nameLocation":"10803:16:4","nodeType":"VariableDeclaration","scope":1053,"src":"10795:24:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1016,"name":"uint256","nodeType":"ElementaryTypeName","src":"10795:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1022,"initialValue":{"arguments":[{"id":1019,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1009,"src":"10832:5:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1020,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1011,"src":"10839:7:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":1018,"name":"allowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":682,"src":"10822:9:4","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address) view returns (uint256)"}},"id":1021,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10822:25:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"10795:52:4"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1029,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1023,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1017,"src":"10862:16:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"arguments":[{"id":1026,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10886:7:4","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":1025,"name":"uint256","nodeType":"ElementaryTypeName","src":"10886:7:4","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"}],"id":1024,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"10881:4:4","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":1027,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10881:13:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint256","typeString":"type(uint256)"}},"id":1028,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"10895:3:4","memberName":"max","nodeType":"MemberAccess","src":"10881:17:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10862:36:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1052,"nodeType":"IfStatement","src":"10858:316:4","trueBody":{"id":1051,"nodeType":"Block","src":"10900:274:4","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1032,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1030,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1017,"src":"10919:16:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":1031,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1013,"src":"10938:5:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10919:24:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1040,"nodeType":"IfStatement","src":"10915:132:4","trueBody":{"id":1039,"nodeType":"Block","src":"10945:102:4","statements":[{"errorCall":{"arguments":[{"id":1034,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1011,"src":"10998:7:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1035,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1017,"src":"11007:16:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1036,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1013,"src":"11025:5:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1033,"name":"ERC20InsufficientAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":434,"src":"10971:26:4","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$_t_error_$","typeString":"function (address,uint256,uint256) pure returns (error)"}},"id":1037,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10971:60:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":1038,"nodeType":"RevertStatement","src":"10964:67:4"}]}},{"id":1050,"nodeType":"UncheckedBlock","src":"11061:102:4","statements":[{"expression":{"arguments":[{"id":1042,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1009,"src":"11099:5:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1043,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1011,"src":"11106:7:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1046,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1044,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1017,"src":"11115:16:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":1045,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1013,"src":"11134:5:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11115:24:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"66616c7365","id":1047,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"11141:5:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":1041,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[946,1006],"referencedDeclaration":1006,"src":"11090:8:4","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$","typeString":"function (address,address,uint256,bool)"}},"id":1048,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11090:57:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1049,"nodeType":"ExpressionStatement","src":"11090:57:4"}]}]}}]},"documentation":{"id":1007,"nodeType":"StructuredDocumentation","src":"10411:278:4","text":" @dev Updates `owner`'s allowance for `spender` based on spent `value`.\n Does not update the allowance value in case of infinite allowance.\n Revert if not enough allowance is available.\n Does not emit an {Approval} event."},"id":1054,"implemented":true,"kind":"function","modifiers":[],"name":"_spendAllowance","nameLocation":"10704:15:4","nodeType":"FunctionDefinition","parameters":{"id":1014,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1009,"mutability":"mutable","name":"owner","nameLocation":"10728:5:4","nodeType":"VariableDeclaration","scope":1054,"src":"10720:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1008,"name":"address","nodeType":"ElementaryTypeName","src":"10720:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1011,"mutability":"mutable","name":"spender","nameLocation":"10743:7:4","nodeType":"VariableDeclaration","scope":1054,"src":"10735:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1010,"name":"address","nodeType":"ElementaryTypeName","src":"10735:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1013,"mutability":"mutable","name":"value","nameLocation":"10760:5:4","nodeType":"VariableDeclaration","scope":1054,"src":"10752:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1012,"name":"uint256","nodeType":"ElementaryTypeName","src":"10752:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10719:47:4"},"returnParameters":{"id":1015,"nodeType":"ParameterList","parameters":[],"src":"10784:0:4"},"scope":1055,"src":"10695:486:4","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":1056,"src":"1134:10050:4","usedErrors":[415,420,425,434,439,444],"usedEvents":[1067,1076]}],"src":"108:11078:4"},"id":4},"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","exportedSymbols":{"IERC20":[1133]},"id":1134,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1057,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"109:24:5"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC20","contractDependencies":[],"contractKind":"interface","documentation":{"id":1058,"nodeType":"StructuredDocumentation","src":"137:73:5","text":" @dev Interface of the ERC-20 standard as defined in the ERC."},"fullyImplemented":false,"id":1133,"linearizedBaseContracts":[1133],"name":"IERC20","nameLocation":"222:6:5","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":1059,"nodeType":"StructuredDocumentation","src":"236:163:5","text":" @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."},"eventSelector":"ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef","id":1067,"name":"Transfer","nameLocation":"411:8:5","nodeType":"EventDefinition","parameters":{"id":1066,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1061,"indexed":true,"mutability":"mutable","name":"from","nameLocation":"436:4:5","nodeType":"VariableDeclaration","scope":1067,"src":"420:20:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1060,"name":"address","nodeType":"ElementaryTypeName","src":"420:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1063,"indexed":true,"mutability":"mutable","name":"to","nameLocation":"458:2:5","nodeType":"VariableDeclaration","scope":1067,"src":"442:18:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1062,"name":"address","nodeType":"ElementaryTypeName","src":"442:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1065,"indexed":false,"mutability":"mutable","name":"value","nameLocation":"470:5:5","nodeType":"VariableDeclaration","scope":1067,"src":"462:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1064,"name":"uint256","nodeType":"ElementaryTypeName","src":"462:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"419:57:5"},"src":"405:72:5"},{"anonymous":false,"documentation":{"id":1068,"nodeType":"StructuredDocumentation","src":"485:151:5","text":" @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."},"eventSelector":"8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925","id":1076,"name":"Approval","nameLocation":"648:8:5","nodeType":"EventDefinition","parameters":{"id":1075,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1070,"indexed":true,"mutability":"mutable","name":"owner","nameLocation":"673:5:5","nodeType":"VariableDeclaration","scope":1076,"src":"657:21:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1069,"name":"address","nodeType":"ElementaryTypeName","src":"657:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1072,"indexed":true,"mutability":"mutable","name":"spender","nameLocation":"696:7:5","nodeType":"VariableDeclaration","scope":1076,"src":"680:23:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1071,"name":"address","nodeType":"ElementaryTypeName","src":"680:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1074,"indexed":false,"mutability":"mutable","name":"value","nameLocation":"713:5:5","nodeType":"VariableDeclaration","scope":1076,"src":"705:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1073,"name":"uint256","nodeType":"ElementaryTypeName","src":"705:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"656:63:5"},"src":"642:78:5"},{"documentation":{"id":1077,"nodeType":"StructuredDocumentation","src":"728:67:5","text":" @dev Returns the value of tokens in existence."},"functionSelector":"18160ddd","id":1082,"implemented":false,"kind":"function","modifiers":[],"name":"totalSupply","nameLocation":"810:11:5","nodeType":"FunctionDefinition","parameters":{"id":1078,"nodeType":"ParameterList","parameters":[],"src":"821:2:5"},"returnParameters":{"id":1081,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1080,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1082,"src":"847:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1079,"name":"uint256","nodeType":"ElementaryTypeName","src":"847:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"846:9:5"},"scope":1133,"src":"801:55:5","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1083,"nodeType":"StructuredDocumentation","src":"864:73:5","text":" @dev Returns the value of tokens owned by `account`."},"functionSelector":"70a08231","id":1090,"implemented":false,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"952:9:5","nodeType":"FunctionDefinition","parameters":{"id":1086,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1085,"mutability":"mutable","name":"account","nameLocation":"970:7:5","nodeType":"VariableDeclaration","scope":1090,"src":"962:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1084,"name":"address","nodeType":"ElementaryTypeName","src":"962:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"961:17:5"},"returnParameters":{"id":1089,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1088,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1090,"src":"1002:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1087,"name":"uint256","nodeType":"ElementaryTypeName","src":"1002:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1001:9:5"},"scope":1133,"src":"943:68:5","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1091,"nodeType":"StructuredDocumentation","src":"1019:219:5","text":" @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."},"functionSelector":"a9059cbb","id":1100,"implemented":false,"kind":"function","modifiers":[],"name":"transfer","nameLocation":"1253:8:5","nodeType":"FunctionDefinition","parameters":{"id":1096,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1093,"mutability":"mutable","name":"to","nameLocation":"1270:2:5","nodeType":"VariableDeclaration","scope":1100,"src":"1262:10:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1092,"name":"address","nodeType":"ElementaryTypeName","src":"1262:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1095,"mutability":"mutable","name":"value","nameLocation":"1282:5:5","nodeType":"VariableDeclaration","scope":1100,"src":"1274:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1094,"name":"uint256","nodeType":"ElementaryTypeName","src":"1274:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1261:27:5"},"returnParameters":{"id":1099,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1098,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1100,"src":"1307:4:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1097,"name":"bool","nodeType":"ElementaryTypeName","src":"1307:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1306:6:5"},"scope":1133,"src":"1244:69:5","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1101,"nodeType":"StructuredDocumentation","src":"1321:270:5","text":" @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."},"functionSelector":"dd62ed3e","id":1110,"implemented":false,"kind":"function","modifiers":[],"name":"allowance","nameLocation":"1606:9:5","nodeType":"FunctionDefinition","parameters":{"id":1106,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1103,"mutability":"mutable","name":"owner","nameLocation":"1624:5:5","nodeType":"VariableDeclaration","scope":1110,"src":"1616:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1102,"name":"address","nodeType":"ElementaryTypeName","src":"1616:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1105,"mutability":"mutable","name":"spender","nameLocation":"1639:7:5","nodeType":"VariableDeclaration","scope":1110,"src":"1631:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1104,"name":"address","nodeType":"ElementaryTypeName","src":"1631:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1615:32:5"},"returnParameters":{"id":1109,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1108,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1110,"src":"1671:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1107,"name":"uint256","nodeType":"ElementaryTypeName","src":"1671:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1670:9:5"},"scope":1133,"src":"1597:83:5","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1111,"nodeType":"StructuredDocumentation","src":"1688:681:5","text":" @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."},"functionSelector":"095ea7b3","id":1120,"implemented":false,"kind":"function","modifiers":[],"name":"approve","nameLocation":"2384:7:5","nodeType":"FunctionDefinition","parameters":{"id":1116,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1113,"mutability":"mutable","name":"spender","nameLocation":"2400:7:5","nodeType":"VariableDeclaration","scope":1120,"src":"2392:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1112,"name":"address","nodeType":"ElementaryTypeName","src":"2392:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1115,"mutability":"mutable","name":"value","nameLocation":"2417:5:5","nodeType":"VariableDeclaration","scope":1120,"src":"2409:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1114,"name":"uint256","nodeType":"ElementaryTypeName","src":"2409:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2391:32:5"},"returnParameters":{"id":1119,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1118,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1120,"src":"2442:4:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1117,"name":"bool","nodeType":"ElementaryTypeName","src":"2442:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2441:6:5"},"scope":1133,"src":"2375:73:5","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1121,"nodeType":"StructuredDocumentation","src":"2456:305:5","text":" @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."},"functionSelector":"23b872dd","id":1132,"implemented":false,"kind":"function","modifiers":[],"name":"transferFrom","nameLocation":"2776:12:5","nodeType":"FunctionDefinition","parameters":{"id":1128,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1123,"mutability":"mutable","name":"from","nameLocation":"2797:4:5","nodeType":"VariableDeclaration","scope":1132,"src":"2789:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1122,"name":"address","nodeType":"ElementaryTypeName","src":"2789:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1125,"mutability":"mutable","name":"to","nameLocation":"2811:2:5","nodeType":"VariableDeclaration","scope":1132,"src":"2803:10:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1124,"name":"address","nodeType":"ElementaryTypeName","src":"2803:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1127,"mutability":"mutable","name":"value","nameLocation":"2823:5:5","nodeType":"VariableDeclaration","scope":1132,"src":"2815:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1126,"name":"uint256","nodeType":"ElementaryTypeName","src":"2815:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2788:41:5"},"returnParameters":{"id":1131,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1130,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1132,"src":"2848:4:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1129,"name":"bool","nodeType":"ElementaryTypeName","src":"2848:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2847:6:5"},"scope":1133,"src":"2767:87:5","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":1134,"src":"212:2645:5","usedErrors":[],"usedEvents":[1067,1076]}],"src":"109:2750:5"},"id":5},"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol","exportedSymbols":{"ECDSA":[3698],"EIP712":[3925],"ERC20":[1055],"ERC20Permit":[1287],"IERC20Permit":[1349],"Nonces":[1447]},"id":1288,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1135,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"125:24:6"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol","file":"./IERC20Permit.sol","id":1137,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1288,"sourceUnit":1350,"src":"153:48:6","symbolAliases":[{"foreign":{"id":1136,"name":"IERC20Permit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1349,"src":"161:12:6","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC20/ERC20.sol","file":"../ERC20.sol","id":1139,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1288,"sourceUnit":1056,"src":"203:35:6","symbolAliases":[{"foreign":{"id":1138,"name":"ERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1055,"src":"211:5:6","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/cryptography/ECDSA.sol","file":"../../../utils/cryptography/ECDSA.sol","id":1141,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1288,"sourceUnit":3699,"src":"240:60:6","symbolAliases":[{"foreign":{"id":1140,"name":"ECDSA","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3698,"src":"248:5:6","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/cryptography/EIP712.sol","file":"../../../utils/cryptography/EIP712.sol","id":1143,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1288,"sourceUnit":3926,"src":"302:62:6","symbolAliases":[{"foreign":{"id":1142,"name":"EIP712","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3925,"src":"310:6:6","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Nonces.sol","file":"../../../utils/Nonces.sol","id":1145,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1288,"sourceUnit":1448,"src":"366:49:6","symbolAliases":[{"foreign":{"id":1144,"name":"Nonces","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1447,"src":"374:6:6","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":1147,"name":"ERC20","nameLocations":["950:5:6"],"nodeType":"IdentifierPath","referencedDeclaration":1055,"src":"950:5:6"},"id":1148,"nodeType":"InheritanceSpecifier","src":"950:5:6"},{"baseName":{"id":1149,"name":"IERC20Permit","nameLocations":["957:12:6"],"nodeType":"IdentifierPath","referencedDeclaration":1349,"src":"957:12:6"},"id":1150,"nodeType":"InheritanceSpecifier","src":"957:12:6"},{"baseName":{"id":1151,"name":"EIP712","nameLocations":["971:6:6"],"nodeType":"IdentifierPath","referencedDeclaration":3925,"src":"971:6:6"},"id":1152,"nodeType":"InheritanceSpecifier","src":"971:6:6"},{"baseName":{"id":1153,"name":"Nonces","nameLocations":["979:6:6"],"nodeType":"IdentifierPath","referencedDeclaration":1447,"src":"979:6:6"},"id":1154,"nodeType":"InheritanceSpecifier","src":"979:6:6"}],"canonicalName":"ERC20Permit","contractDependencies":[],"contractKind":"contract","documentation":{"id":1146,"nodeType":"StructuredDocumentation","src":"419:496:6","text":" @dev Implementation of the ERC-20 Permit extension allowing approvals to be made via signatures, as defined in\n https://eips.ethereum.org/EIPS/eip-2612[ERC-2612].\n Adds the {permit} method, which can be used to change an account's ERC-20 allowance (see {IERC20-allowance}) by\n presenting a message signed by the account. By not relying on `{IERC20-approve}`, the token holder account doesn't\n need to send a transaction, and thus is not required to hold Ether at all."},"fullyImplemented":true,"id":1287,"linearizedBaseContracts":[1287,1447,3925,403,1349,1055,445,1313,1133,1379],"name":"ERC20Permit","nameLocation":"935:11:6","nodeType":"ContractDefinition","nodes":[{"constant":true,"id":1159,"mutability":"constant","name":"PERMIT_TYPEHASH","nameLocation":"1018:15:6","nodeType":"VariableDeclaration","scope":1287,"src":"993:147:6","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1155,"name":"bytes32","nodeType":"ElementaryTypeName","src":"993:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"arguments":[{"hexValue":"5065726d69742861646472657373206f776e65722c61646472657373207370656e6465722c75696e743235362076616c75652c75696e74323536206e6f6e63652c75696e7432353620646561646c696e6529","id":1157,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1055:84:6","typeDescriptions":{"typeIdentifier":"t_stringliteral_6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9","typeString":"literal_string \"Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)\""},"value":"Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9","typeString":"literal_string \"Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)\""}],"id":1156,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"1045:9:6","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":1158,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1045:95:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"private"},{"documentation":{"id":1160,"nodeType":"StructuredDocumentation","src":"1149:54:6","text":" @dev Permit deadline has expired."},"errorSelector":"62791302","id":1164,"name":"ERC2612ExpiredSignature","nameLocation":"1215:23:6","nodeType":"ErrorDefinition","parameters":{"id":1163,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1162,"mutability":"mutable","name":"deadline","nameLocation":"1247:8:6","nodeType":"VariableDeclaration","scope":1164,"src":"1239:16:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1161,"name":"uint256","nodeType":"ElementaryTypeName","src":"1239:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1238:18:6"},"src":"1209:48:6"},{"documentation":{"id":1165,"nodeType":"StructuredDocumentation","src":"1265:47:6","text":" @dev Mismatched signature."},"errorSelector":"4b800e46","id":1171,"name":"ERC2612InvalidSigner","nameLocation":"1324:20:6","nodeType":"ErrorDefinition","parameters":{"id":1170,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1167,"mutability":"mutable","name":"signer","nameLocation":"1353:6:6","nodeType":"VariableDeclaration","scope":1171,"src":"1345:14:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1166,"name":"address","nodeType":"ElementaryTypeName","src":"1345:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1169,"mutability":"mutable","name":"owner","nameLocation":"1369:5:6","nodeType":"VariableDeclaration","scope":1171,"src":"1361:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1168,"name":"address","nodeType":"ElementaryTypeName","src":"1361:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1344:31:6"},"src":"1318:58:6"},{"body":{"id":1181,"nodeType":"Block","src":"1665:2:6","statements":[]},"documentation":{"id":1172,"nodeType":"StructuredDocumentation","src":"1384:225:6","text":" @dev Initializes the {EIP712} domain separator using the `name` parameter, and setting `version` to `\"1\"`.\n It's a good idea to use the same `name` that is defined as the ERC-20 token name."},"id":1182,"implemented":true,"kind":"constructor","modifiers":[{"arguments":[{"id":1177,"name":"name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1174,"src":"1654:4:6","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"31","id":1178,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1660:3:6","typeDescriptions":{"typeIdentifier":"t_stringliteral_c89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc6","typeString":"literal_string \"1\""},"value":"1"}],"id":1179,"kind":"baseConstructorSpecifier","modifierName":{"id":1176,"name":"EIP712","nameLocations":["1647:6:6"],"nodeType":"IdentifierPath","referencedDeclaration":3925,"src":"1647:6:6"},"nodeType":"ModifierInvocation","src":"1647:17:6"}],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":1175,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1174,"mutability":"mutable","name":"name","nameLocation":"1641:4:6","nodeType":"VariableDeclaration","scope":1182,"src":"1627:18:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1173,"name":"string","nodeType":"ElementaryTypeName","src":"1627:6:6","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1626:20:6"},"returnParameters":{"id":1180,"nodeType":"ParameterList","parameters":[],"src":"1665:0:6"},"scope":1287,"src":"1615:52:6","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"baseFunctions":[1334],"body":{"id":1258,"nodeType":"Block","src":"1923:498:6","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1203,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1200,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"1938:5:6","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":1201,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1944:9:6","memberName":"timestamp","nodeType":"MemberAccess","src":"1938:15:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":1202,"name":"deadline","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1191,"src":"1956:8:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1938:26:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1209,"nodeType":"IfStatement","src":"1934:99:6","trueBody":{"id":1208,"nodeType":"Block","src":"1966:67:6","statements":[{"errorCall":{"arguments":[{"id":1205,"name":"deadline","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1191,"src":"2012:8:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1204,"name":"ERC2612ExpiredSignature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1164,"src":"1988:23:6","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$returns$_t_error_$","typeString":"function (uint256) pure returns (error)"}},"id":1206,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1988:33:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":1207,"nodeType":"RevertStatement","src":"1981:40:6"}]}},{"assignments":[1211],"declarations":[{"constant":false,"id":1211,"mutability":"mutable","name":"structHash","nameLocation":"2053:10:6","nodeType":"VariableDeclaration","scope":1258,"src":"2045:18:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1210,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2045:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":1225,"initialValue":{"arguments":[{"arguments":[{"id":1215,"name":"PERMIT_TYPEHASH","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1159,"src":"2087:15:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":1216,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1185,"src":"2104:5:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1217,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1187,"src":"2111:7:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1218,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1189,"src":"2120:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"id":1220,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1185,"src":"2137:5:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1219,"name":"_useNonce","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1421,"src":"2127:9:6","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$_t_uint256_$","typeString":"function (address) returns (uint256)"}},"id":1221,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2127:16:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1222,"name":"deadline","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1191,"src":"2145:8:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1213,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"2076:3:6","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":1214,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2080:6:6","memberName":"encode","nodeType":"MemberAccess","src":"2076:10:6","typeDescriptions":{"typeIdentifier":"t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":1223,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2076:78:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1212,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"2066:9:6","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":1224,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2066:89:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"2045:110:6"},{"assignments":[1227],"declarations":[{"constant":false,"id":1227,"mutability":"mutable","name":"hash","nameLocation":"2176:4:6","nodeType":"VariableDeclaration","scope":1258,"src":"2168:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1226,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2168:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":1231,"initialValue":{"arguments":[{"id":1229,"name":"structHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1211,"src":"2200:10:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":1228,"name":"_hashTypedDataV4","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3858,"src":"2183:16:6","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32) view returns (bytes32)"}},"id":1230,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2183:28:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"2168:43:6"},{"assignments":[1233],"declarations":[{"constant":false,"id":1233,"mutability":"mutable","name":"signer","nameLocation":"2232:6:6","nodeType":"VariableDeclaration","scope":1258,"src":"2224:14:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1232,"name":"address","nodeType":"ElementaryTypeName","src":"2224:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":1241,"initialValue":{"arguments":[{"id":1236,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1227,"src":"2255:4:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":1237,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1193,"src":"2261:1:6","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":1238,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1195,"src":"2264:1:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":1239,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1197,"src":"2267:1:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":1234,"name":"ECDSA","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3698,"src":"2241:5:6","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ECDSA_$3698_$","typeString":"type(library ECDSA)"}},"id":1235,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2247:7:6","memberName":"recover","nodeType":"MemberAccess","referencedDeclaration":3648,"src":"2241:13:6","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$","typeString":"function (bytes32,uint8,bytes32,bytes32) pure returns (address)"}},"id":1240,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2241:28:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"2224:45:6"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1244,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1242,"name":"signer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1233,"src":"2284:6:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":1243,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1185,"src":"2294:5:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2284:15:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1251,"nodeType":"IfStatement","src":"2280:90:6","trueBody":{"id":1250,"nodeType":"Block","src":"2301:69:6","statements":[{"errorCall":{"arguments":[{"id":1246,"name":"signer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1233,"src":"2344:6:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1247,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1185,"src":"2352:5:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":1245,"name":"ERC2612InvalidSigner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1171,"src":"2323:20:6","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$_t_address_$returns$_t_error_$","typeString":"function (address,address) pure returns (error)"}},"id":1248,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2323:35:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":1249,"nodeType":"RevertStatement","src":"2316:42:6"}]}},{"expression":{"arguments":[{"id":1253,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1185,"src":"2391:5:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1254,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1187,"src":"2398:7:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1255,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1189,"src":"2407:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1252,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[946,1006],"referencedDeclaration":946,"src":"2382:8:6","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1256,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2382:31:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1257,"nodeType":"ExpressionStatement","src":"2382:31:6"}]},"documentation":{"id":1183,"nodeType":"StructuredDocumentation","src":"1675:45:6","text":" @inheritdoc IERC20Permit"},"functionSelector":"d505accf","id":1259,"implemented":true,"kind":"function","modifiers":[],"name":"permit","nameLocation":"1735:6:6","nodeType":"FunctionDefinition","parameters":{"id":1198,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1185,"mutability":"mutable","name":"owner","nameLocation":"1760:5:6","nodeType":"VariableDeclaration","scope":1259,"src":"1752:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1184,"name":"address","nodeType":"ElementaryTypeName","src":"1752:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1187,"mutability":"mutable","name":"spender","nameLocation":"1784:7:6","nodeType":"VariableDeclaration","scope":1259,"src":"1776:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1186,"name":"address","nodeType":"ElementaryTypeName","src":"1776:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1189,"mutability":"mutable","name":"value","nameLocation":"1810:5:6","nodeType":"VariableDeclaration","scope":1259,"src":"1802:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1188,"name":"uint256","nodeType":"ElementaryTypeName","src":"1802:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1191,"mutability":"mutable","name":"deadline","nameLocation":"1834:8:6","nodeType":"VariableDeclaration","scope":1259,"src":"1826:16:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1190,"name":"uint256","nodeType":"ElementaryTypeName","src":"1826:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1193,"mutability":"mutable","name":"v","nameLocation":"1859:1:6","nodeType":"VariableDeclaration","scope":1259,"src":"1853:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":1192,"name":"uint8","nodeType":"ElementaryTypeName","src":"1853:5:6","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":1195,"mutability":"mutable","name":"r","nameLocation":"1879:1:6","nodeType":"VariableDeclaration","scope":1259,"src":"1871:9:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1194,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1871:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1197,"mutability":"mutable","name":"s","nameLocation":"1899:1:6","nodeType":"VariableDeclaration","scope":1259,"src":"1891:9:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1196,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1891:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1741:166:6"},"returnParameters":{"id":1199,"nodeType":"ParameterList","parameters":[],"src":"1923:0:6"},"scope":1287,"src":"1726:695:6","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[1342,1406],"body":{"id":1275,"nodeType":"Block","src":"2580:45:6","statements":[{"expression":{"arguments":[{"id":1272,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1262,"src":"2611:5:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":1270,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"2598:5:6","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_ERC20Permit_$1287_$","typeString":"type(contract super ERC20Permit)"}},"id":1271,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2604:6:6","memberName":"nonces","nodeType":"MemberAccess","referencedDeclaration":1406,"src":"2598:12:6","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view returns (uint256)"}},"id":1273,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2598:19:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1269,"id":1274,"nodeType":"Return","src":"2591:26:6"}]},"documentation":{"id":1260,"nodeType":"StructuredDocumentation","src":"2429:45:6","text":" @inheritdoc IERC20Permit"},"functionSelector":"7ecebe00","id":1276,"implemented":true,"kind":"function","modifiers":[],"name":"nonces","nameLocation":"2489:6:6","nodeType":"FunctionDefinition","overrides":{"id":1266,"nodeType":"OverrideSpecifier","overrides":[{"id":1264,"name":"IERC20Permit","nameLocations":["2540:12:6"],"nodeType":"IdentifierPath","referencedDeclaration":1349,"src":"2540:12:6"},{"id":1265,"name":"Nonces","nameLocations":["2554:6:6"],"nodeType":"IdentifierPath","referencedDeclaration":1447,"src":"2554:6:6"}],"src":"2531:30:6"},"parameters":{"id":1263,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1262,"mutability":"mutable","name":"owner","nameLocation":"2504:5:6","nodeType":"VariableDeclaration","scope":1276,"src":"2496:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1261,"name":"address","nodeType":"ElementaryTypeName","src":"2496:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2495:15:6"},"returnParameters":{"id":1269,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1268,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1276,"src":"2571:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1267,"name":"uint256","nodeType":"ElementaryTypeName","src":"2571:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2570:9:6"},"scope":1287,"src":"2480:145:6","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1348],"body":{"id":1285,"nodeType":"Block","src":"2806:46:6","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":1282,"name":"_domainSeparatorV4","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3821,"src":"2824:18:6","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_bytes32_$","typeString":"function () view returns (bytes32)"}},"id":1283,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2824:20:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":1281,"id":1284,"nodeType":"Return","src":"2817:27:6"}]},"documentation":{"id":1277,"nodeType":"StructuredDocumentation","src":"2633:45:6","text":" @inheritdoc IERC20Permit"},"functionSelector":"3644e515","id":1286,"implemented":true,"kind":"function","modifiers":[],"name":"DOMAIN_SEPARATOR","nameLocation":"2747:16:6","nodeType":"FunctionDefinition","parameters":{"id":1278,"nodeType":"ParameterList","parameters":[],"src":"2763:2:6"},"returnParameters":{"id":1281,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1280,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1286,"src":"2797:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1279,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2797:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2796:9:6"},"scope":1287,"src":"2738:114:6","stateMutability":"view","virtual":true,"visibility":"external"}],"scope":1288,"src":"917:1938:6","usedErrors":[415,420,425,434,439,444,1164,1171,1389,1621,1623,3361,3366,3371],"usedEvents":[383,1067,1076]}],"src":"125:2732:6"},"id":6},"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol","exportedSymbols":{"IERC20":[1133],"IERC20Metadata":[1313]},"id":1314,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1289,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"128:24:7"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","file":"../IERC20.sol","id":1291,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1314,"sourceUnit":1134,"src":"156:37:7","symbolAliases":[{"foreign":{"id":1290,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1133,"src":"164:6:7","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":1293,"name":"IERC20","nameLocations":["316:6:7"],"nodeType":"IdentifierPath","referencedDeclaration":1133,"src":"316:6:7"},"id":1294,"nodeType":"InheritanceSpecifier","src":"316:6:7"}],"canonicalName":"IERC20Metadata","contractDependencies":[],"contractKind":"interface","documentation":{"id":1292,"nodeType":"StructuredDocumentation","src":"197:89:7","text":" @dev Interface for the optional metadata functions from the ERC-20 standard."},"fullyImplemented":false,"id":1313,"linearizedBaseContracts":[1313,1133],"name":"IERC20Metadata","nameLocation":"298:14:7","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":1295,"nodeType":"StructuredDocumentation","src":"330:56:7","text":" @dev Returns the name of the token."},"functionSelector":"06fdde03","id":1300,"implemented":false,"kind":"function","modifiers":[],"name":"name","nameLocation":"401:4:7","nodeType":"FunctionDefinition","parameters":{"id":1296,"nodeType":"ParameterList","parameters":[],"src":"405:2:7"},"returnParameters":{"id":1299,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1298,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1300,"src":"431:13:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1297,"name":"string","nodeType":"ElementaryTypeName","src":"431:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"430:15:7"},"scope":1313,"src":"392:54:7","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1301,"nodeType":"StructuredDocumentation","src":"454:58:7","text":" @dev Returns the symbol of the token."},"functionSelector":"95d89b41","id":1306,"implemented":false,"kind":"function","modifiers":[],"name":"symbol","nameLocation":"527:6:7","nodeType":"FunctionDefinition","parameters":{"id":1302,"nodeType":"ParameterList","parameters":[],"src":"533:2:7"},"returnParameters":{"id":1305,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1304,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1306,"src":"559:13:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1303,"name":"string","nodeType":"ElementaryTypeName","src":"559:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"558:15:7"},"scope":1313,"src":"518:56:7","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1307,"nodeType":"StructuredDocumentation","src":"582:67:7","text":" @dev Returns the decimals places of the token."},"functionSelector":"313ce567","id":1312,"implemented":false,"kind":"function","modifiers":[],"name":"decimals","nameLocation":"664:8:7","nodeType":"FunctionDefinition","parameters":{"id":1308,"nodeType":"ParameterList","parameters":[],"src":"672:2:7"},"returnParameters":{"id":1311,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1310,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1312,"src":"698:5:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":1309,"name":"uint8","nodeType":"ElementaryTypeName","src":"698:5:7","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"697:7:7"},"scope":1313,"src":"655:50:7","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":1314,"src":"288:420:7","usedErrors":[],"usedEvents":[1067,1076]}],"src":"128:582:7"},"id":7},"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol","exportedSymbols":{"IERC20Permit":[1349]},"id":1350,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1315,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"126:24:8"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC20Permit","contractDependencies":[],"contractKind":"interface","documentation":{"id":1316,"nodeType":"StructuredDocumentation","src":"154:2000:8","text":" @dev Interface of the ERC-20 Permit extension allowing approvals to be made via signatures, as defined in\n https://eips.ethereum.org/EIPS/eip-2612[ERC-2612].\n Adds the {permit} method, which can be used to change an account's ERC-20 allowance (see {IERC20-allowance}) by\n presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't\n need to send a transaction, and thus is not required to hold Ether at all.\n ==== Security Considerations\n There are two important considerations concerning the use of `permit`. The first is that a valid permit signature\n expresses an allowance, and it should not be assumed to convey additional meaning. In particular, it should not be\n considered as an intention to spend the allowance in any specific way. The second is that because permits have\n built-in replay protection and can be submitted by anyone, they can be frontrun. A protocol that uses permits should\n take this into consideration and allow a `permit` call to fail. Combining these two aspects, a pattern that may be\n generally recommended is:\n ```solidity\n function doThingWithPermit(..., uint256 value, uint256 deadline, uint8 v, bytes32 r, bytes32 s) public {\n     try token.permit(msg.sender, address(this), value, deadline, v, r, s) {} catch {}\n     doThing(..., value);\n }\n function doThing(..., uint256 value) public {\n     token.safeTransferFrom(msg.sender, address(this), value);\n     ...\n }\n ```\n Observe that: 1) `msg.sender` is used as the owner, leaving no ambiguity as to the signer intent, and 2) the use of\n `try/catch` allows the permit to fail and makes the code tolerant to frontrunning. (See also\n {SafeERC20-safeTransferFrom}).\n Additionally, note that smart contract wallets (such as Argent or Safe) are not able to produce permit signatures, so\n contracts should have entry points that don't rely on permit."},"fullyImplemented":false,"id":1349,"linearizedBaseContracts":[1349],"name":"IERC20Permit","nameLocation":"2166:12:8","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":1317,"nodeType":"StructuredDocumentation","src":"2186:872:8","text":" @dev Sets `value` as the allowance of `spender` over ``owner``'s tokens,\n given ``owner``'s signed approval.\n IMPORTANT: The same issues {IERC20-approve} has related to transaction\n ordering also apply here.\n Emits an {Approval} event.\n Requirements:\n - `spender` cannot be the zero address.\n - `deadline` must be a timestamp in the future.\n - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner`\n over the EIP712-formatted function arguments.\n - the signature must use ``owner``'s current nonce (see {nonces}).\n For more information on the signature format, see the\n https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP\n section].\n CAUTION: See Security Considerations above."},"functionSelector":"d505accf","id":1334,"implemented":false,"kind":"function","modifiers":[],"name":"permit","nameLocation":"3073:6:8","nodeType":"FunctionDefinition","parameters":{"id":1332,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1319,"mutability":"mutable","name":"owner","nameLocation":"3098:5:8","nodeType":"VariableDeclaration","scope":1334,"src":"3090:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1318,"name":"address","nodeType":"ElementaryTypeName","src":"3090:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1321,"mutability":"mutable","name":"spender","nameLocation":"3122:7:8","nodeType":"VariableDeclaration","scope":1334,"src":"3114:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1320,"name":"address","nodeType":"ElementaryTypeName","src":"3114:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1323,"mutability":"mutable","name":"value","nameLocation":"3148:5:8","nodeType":"VariableDeclaration","scope":1334,"src":"3140:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1322,"name":"uint256","nodeType":"ElementaryTypeName","src":"3140:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1325,"mutability":"mutable","name":"deadline","nameLocation":"3172:8:8","nodeType":"VariableDeclaration","scope":1334,"src":"3164:16:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1324,"name":"uint256","nodeType":"ElementaryTypeName","src":"3164:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1327,"mutability":"mutable","name":"v","nameLocation":"3197:1:8","nodeType":"VariableDeclaration","scope":1334,"src":"3191:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":1326,"name":"uint8","nodeType":"ElementaryTypeName","src":"3191:5:8","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":1329,"mutability":"mutable","name":"r","nameLocation":"3217:1:8","nodeType":"VariableDeclaration","scope":1334,"src":"3209:9:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1328,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3209:7:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1331,"mutability":"mutable","name":"s","nameLocation":"3237:1:8","nodeType":"VariableDeclaration","scope":1334,"src":"3229:9:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1330,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3229:7:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3079:166:8"},"returnParameters":{"id":1333,"nodeType":"ParameterList","parameters":[],"src":"3254:0:8"},"scope":1349,"src":"3064:191:8","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1335,"nodeType":"StructuredDocumentation","src":"3263:300:8","text":" @dev Returns the current nonce for `owner`. This value must be\n included whenever a signature is generated for {permit}.\n Every successful call to {permit} increases ``owner``'s nonce by one. This\n prevents a signature from being used multiple times."},"functionSelector":"7ecebe00","id":1342,"implemented":false,"kind":"function","modifiers":[],"name":"nonces","nameLocation":"3578:6:8","nodeType":"FunctionDefinition","parameters":{"id":1338,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1337,"mutability":"mutable","name":"owner","nameLocation":"3593:5:8","nodeType":"VariableDeclaration","scope":1342,"src":"3585:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1336,"name":"address","nodeType":"ElementaryTypeName","src":"3585:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3584:15:8"},"returnParameters":{"id":1341,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1340,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1342,"src":"3623:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1339,"name":"uint256","nodeType":"ElementaryTypeName","src":"3623:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3622:9:8"},"scope":1349,"src":"3569:63:8","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1343,"nodeType":"StructuredDocumentation","src":"3640:130:8","text":" @dev Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}."},"functionSelector":"3644e515","id":1348,"implemented":false,"kind":"function","modifiers":[],"name":"DOMAIN_SEPARATOR","nameLocation":"3839:16:8","nodeType":"FunctionDefinition","parameters":{"id":1344,"nodeType":"ParameterList","parameters":[],"src":"3855:2:8"},"returnParameters":{"id":1347,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1346,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1348,"src":"3881:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1345,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3881:7:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3880:9:8"},"scope":1349,"src":"3830:60:8","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":1350,"src":"2156:1737:8","usedErrors":[],"usedEvents":[]}],"src":"126:3769:8"},"id":8},"@openzeppelin/contracts/utils/Context.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","exportedSymbols":{"Context":[1379]},"id":1380,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1351,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"104:24:9"},{"abstract":true,"baseContracts":[],"canonicalName":"Context","contractDependencies":[],"contractKind":"contract","documentation":{"id":1352,"nodeType":"StructuredDocumentation","src":"132:505:9","text":" @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."},"fullyImplemented":true,"id":1379,"linearizedBaseContracts":[1379],"name":"Context","nameLocation":"657:7:9","nodeType":"ContractDefinition","nodes":[{"body":{"id":1360,"nodeType":"Block","src":"734:36:9","statements":[{"expression":{"expression":{"id":1357,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"752:3:9","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1358,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"756:6:9","memberName":"sender","nodeType":"MemberAccess","src":"752:10:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":1356,"id":1359,"nodeType":"Return","src":"745:17:9"}]},"id":1361,"implemented":true,"kind":"function","modifiers":[],"name":"_msgSender","nameLocation":"681:10:9","nodeType":"FunctionDefinition","parameters":{"id":1353,"nodeType":"ParameterList","parameters":[],"src":"691:2:9"},"returnParameters":{"id":1356,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1355,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1361,"src":"725:7:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1354,"name":"address","nodeType":"ElementaryTypeName","src":"725:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"724:9:9"},"scope":1379,"src":"672:98:9","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":1369,"nodeType":"Block","src":"845:34:9","statements":[{"expression":{"expression":{"id":1366,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"863:3:9","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1367,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"867:4:9","memberName":"data","nodeType":"MemberAccess","src":"863:8:9","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"functionReturnParameters":1365,"id":1368,"nodeType":"Return","src":"856:15:9"}]},"id":1370,"implemented":true,"kind":"function","modifiers":[],"name":"_msgData","nameLocation":"787:8:9","nodeType":"FunctionDefinition","parameters":{"id":1362,"nodeType":"ParameterList","parameters":[],"src":"795:2:9"},"returnParameters":{"id":1365,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1364,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1370,"src":"829:14:9","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":1363,"name":"bytes","nodeType":"ElementaryTypeName","src":"829:5:9","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"828:16:9"},"scope":1379,"src":"778:101:9","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":1377,"nodeType":"Block","src":"959:27:9","statements":[{"expression":{"hexValue":"30","id":1375,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"977:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":1374,"id":1376,"nodeType":"Return","src":"970:8:9"}]},"id":1378,"implemented":true,"kind":"function","modifiers":[],"name":"_contextSuffixLength","nameLocation":"896:20:9","nodeType":"FunctionDefinition","parameters":{"id":1371,"nodeType":"ParameterList","parameters":[],"src":"916:2:9"},"returnParameters":{"id":1374,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1373,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1378,"src":"950:7:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1372,"name":"uint256","nodeType":"ElementaryTypeName","src":"950:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"949:9:9"},"scope":1379,"src":"887:99:9","stateMutability":"view","virtual":true,"visibility":"internal"}],"scope":1380,"src":"639:350:9","usedErrors":[],"usedEvents":[]}],"src":"104:887:9"},"id":9},"@openzeppelin/contracts/utils/Nonces.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Nonces.sol","exportedSymbols":{"Nonces":[1447]},"id":1448,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1381,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"101:24:10"},{"abstract":true,"baseContracts":[],"canonicalName":"Nonces","contractDependencies":[],"contractKind":"contract","documentation":{"id":1382,"nodeType":"StructuredDocumentation","src":"129:85:10","text":" @dev Provides tracking nonces for addresses. Nonces will only increment."},"fullyImplemented":true,"id":1447,"linearizedBaseContracts":[1447],"name":"Nonces","nameLocation":"234:6:10","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":1383,"nodeType":"StructuredDocumentation","src":"248:92:10","text":" @dev The nonce used for an `account` is not the expected current nonce."},"errorSelector":"752d88c0","id":1389,"name":"InvalidAccountNonce","nameLocation":"352:19:10","nodeType":"ErrorDefinition","parameters":{"id":1388,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1385,"mutability":"mutable","name":"account","nameLocation":"380:7:10","nodeType":"VariableDeclaration","scope":1389,"src":"372:15:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1384,"name":"address","nodeType":"ElementaryTypeName","src":"372:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1387,"mutability":"mutable","name":"currentNonce","nameLocation":"397:12:10","nodeType":"VariableDeclaration","scope":1389,"src":"389:20:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1386,"name":"uint256","nodeType":"ElementaryTypeName","src":"389:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"371:39:10"},"src":"346:65:10"},{"constant":false,"id":1393,"mutability":"mutable","name":"_nonces","nameLocation":"463:7:10","nodeType":"VariableDeclaration","scope":1447,"src":"419:51:10","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"typeName":{"id":1392,"keyName":"account","keyNameLocation":"435:7:10","keyType":{"id":1390,"name":"address","nodeType":"ElementaryTypeName","src":"427:7:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"419:35:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":1391,"name":"uint256","nodeType":"ElementaryTypeName","src":"446:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"private"},{"body":{"id":1405,"nodeType":"Block","src":"625:40:10","statements":[{"expression":{"baseExpression":{"id":1401,"name":"_nonces","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1393,"src":"643:7:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1403,"indexExpression":{"id":1402,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1396,"src":"651:5:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"643:14:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1400,"id":1404,"nodeType":"Return","src":"636:21:10"}]},"documentation":{"id":1394,"nodeType":"StructuredDocumentation","src":"479:71:10","text":" @dev Returns the next unused nonce for an address."},"functionSelector":"7ecebe00","id":1406,"implemented":true,"kind":"function","modifiers":[],"name":"nonces","nameLocation":"565:6:10","nodeType":"FunctionDefinition","parameters":{"id":1397,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1396,"mutability":"mutable","name":"owner","nameLocation":"580:5:10","nodeType":"VariableDeclaration","scope":1406,"src":"572:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1395,"name":"address","nodeType":"ElementaryTypeName","src":"572:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"571:15:10"},"returnParameters":{"id":1400,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1399,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1406,"src":"616:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1398,"name":"uint256","nodeType":"ElementaryTypeName","src":"616:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"615:9:10"},"scope":1447,"src":"556:109:10","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":1420,"nodeType":"Block","src":"855:333:10","statements":[{"id":1419,"nodeType":"UncheckedBlock","src":"1061:120:10","statements":[{"expression":{"id":1417,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"1153:16:10","subExpression":{"baseExpression":{"id":1414,"name":"_nonces","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1393,"src":"1153:7:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1416,"indexExpression":{"id":1415,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1409,"src":"1161:5:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"1153:14:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1413,"id":1418,"nodeType":"Return","src":"1146:23:10"}]}]},"documentation":{"id":1407,"nodeType":"StructuredDocumentation","src":"673:107:10","text":" @dev Consumes a nonce.\n Returns the current value and increments nonce."},"id":1421,"implemented":true,"kind":"function","modifiers":[],"name":"_useNonce","nameLocation":"795:9:10","nodeType":"FunctionDefinition","parameters":{"id":1410,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1409,"mutability":"mutable","name":"owner","nameLocation":"813:5:10","nodeType":"VariableDeclaration","scope":1421,"src":"805:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1408,"name":"address","nodeType":"ElementaryTypeName","src":"805:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"804:15:10"},"returnParameters":{"id":1413,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1412,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1421,"src":"846:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1411,"name":"uint256","nodeType":"ElementaryTypeName","src":"846:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"845:9:10"},"scope":1447,"src":"786:402:10","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1445,"nodeType":"Block","src":"1377:154:10","statements":[{"assignments":[1430],"declarations":[{"constant":false,"id":1430,"mutability":"mutable","name":"current","nameLocation":"1396:7:10","nodeType":"VariableDeclaration","scope":1445,"src":"1388:15:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1429,"name":"uint256","nodeType":"ElementaryTypeName","src":"1388:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1434,"initialValue":{"arguments":[{"id":1432,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1424,"src":"1416:5:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1431,"name":"_useNonce","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1421,"src":"1406:9:10","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$_t_uint256_$","typeString":"function (address) returns (uint256)"}},"id":1433,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1406:16:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1388:34:10"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1437,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1435,"name":"nonce","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1426,"src":"1437:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":1436,"name":"current","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1430,"src":"1446:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1437:16:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1444,"nodeType":"IfStatement","src":"1433:91:10","trueBody":{"id":1443,"nodeType":"Block","src":"1455:69:10","statements":[{"errorCall":{"arguments":[{"id":1439,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1424,"src":"1497:5:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1440,"name":"current","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1430,"src":"1504:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1438,"name":"InvalidAccountNonce","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1389,"src":"1477:19:10","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$_t_uint256_$returns$_t_error_$","typeString":"function (address,uint256) pure returns (error)"}},"id":1441,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1477:35:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":1442,"nodeType":"RevertStatement","src":"1470:42:10"}]}}]},"documentation":{"id":1422,"nodeType":"StructuredDocumentation","src":"1196:102:10","text":" @dev Same as {_useNonce} but checking that `nonce` is the next valid for `owner`."},"id":1446,"implemented":true,"kind":"function","modifiers":[],"name":"_useCheckedNonce","nameLocation":"1313:16:10","nodeType":"FunctionDefinition","parameters":{"id":1427,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1424,"mutability":"mutable","name":"owner","nameLocation":"1338:5:10","nodeType":"VariableDeclaration","scope":1446,"src":"1330:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1423,"name":"address","nodeType":"ElementaryTypeName","src":"1330:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1426,"mutability":"mutable","name":"nonce","nameLocation":"1353:5:10","nodeType":"VariableDeclaration","scope":1446,"src":"1345:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1425,"name":"uint256","nodeType":"ElementaryTypeName","src":"1345:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1329:30:10"},"returnParameters":{"id":1428,"nodeType":"ParameterList","parameters":[],"src":"1377:0:10"},"scope":1447,"src":"1304:227:10","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":1448,"src":"216:1318:10","usedErrors":[1389],"usedEvents":[]}],"src":"101:1435:10"},"id":10},"@openzeppelin/contracts/utils/Panic.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Panic.sol","exportedSymbols":{"Panic":[1499]},"id":1500,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1449,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"102:24:11"},{"abstract":false,"baseContracts":[],"canonicalName":"Panic","contractDependencies":[],"contractKind":"library","documentation":{"id":1450,"nodeType":"StructuredDocumentation","src":"130:507:11","text":" @dev Helper library for emitting standardized panic codes.\n ```solidity\n contract Example {\n      using Panic for uint256;\n      // Use any of the declared internal constants\n      function foo() { Panic.GENERIC.panic(); }\n      // Alternatively\n      function foo() { Panic.panic(Panic.GENERIC); }\n }\n ```\n Follows the list from https://github.com/ethereum/solidity/blob/v0.8.24/libsolutil/ErrorCodes.h[libsolutil].\n _Available since v5.1._"},"fullyImplemented":true,"id":1499,"linearizedBaseContracts":[1499],"name":"Panic","nameLocation":"690:5:11","nodeType":"ContractDefinition","nodes":[{"constant":true,"documentation":{"id":1451,"nodeType":"StructuredDocumentation","src":"703:36:11","text":"@dev generic / unspecified error"},"id":1454,"mutability":"constant","name":"GENERIC","nameLocation":"771:7:11","nodeType":"VariableDeclaration","scope":1499,"src":"745:40:11","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1452,"name":"uint256","nodeType":"ElementaryTypeName","src":"745:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783030","id":1453,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"781:4:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0x00"},"visibility":"internal"},{"constant":true,"documentation":{"id":1455,"nodeType":"StructuredDocumentation","src":"792:37:11","text":"@dev used by the assert() builtin"},"id":1458,"mutability":"constant","name":"ASSERT","nameLocation":"861:6:11","nodeType":"VariableDeclaration","scope":1499,"src":"835:39:11","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1456,"name":"uint256","nodeType":"ElementaryTypeName","src":"835:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783031","id":1457,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"870:4:11","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"0x01"},"visibility":"internal"},{"constant":true,"documentation":{"id":1459,"nodeType":"StructuredDocumentation","src":"881:41:11","text":"@dev arithmetic underflow or overflow"},"id":1462,"mutability":"constant","name":"UNDER_OVERFLOW","nameLocation":"954:14:11","nodeType":"VariableDeclaration","scope":1499,"src":"928:47:11","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1460,"name":"uint256","nodeType":"ElementaryTypeName","src":"928:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783131","id":1461,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"971:4:11","typeDescriptions":{"typeIdentifier":"t_rational_17_by_1","typeString":"int_const 17"},"value":"0x11"},"visibility":"internal"},{"constant":true,"documentation":{"id":1463,"nodeType":"StructuredDocumentation","src":"982:35:11","text":"@dev division or modulo by zero"},"id":1466,"mutability":"constant","name":"DIVISION_BY_ZERO","nameLocation":"1049:16:11","nodeType":"VariableDeclaration","scope":1499,"src":"1023:49:11","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1464,"name":"uint256","nodeType":"ElementaryTypeName","src":"1023:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783132","id":1465,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1068:4:11","typeDescriptions":{"typeIdentifier":"t_rational_18_by_1","typeString":"int_const 18"},"value":"0x12"},"visibility":"internal"},{"constant":true,"documentation":{"id":1467,"nodeType":"StructuredDocumentation","src":"1079:30:11","text":"@dev enum conversion error"},"id":1470,"mutability":"constant","name":"ENUM_CONVERSION_ERROR","nameLocation":"1141:21:11","nodeType":"VariableDeclaration","scope":1499,"src":"1115:54:11","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1468,"name":"uint256","nodeType":"ElementaryTypeName","src":"1115:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783231","id":1469,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1165:4:11","typeDescriptions":{"typeIdentifier":"t_rational_33_by_1","typeString":"int_const 33"},"value":"0x21"},"visibility":"internal"},{"constant":true,"documentation":{"id":1471,"nodeType":"StructuredDocumentation","src":"1176:36:11","text":"@dev invalid encoding in storage"},"id":1474,"mutability":"constant","name":"STORAGE_ENCODING_ERROR","nameLocation":"1244:22:11","nodeType":"VariableDeclaration","scope":1499,"src":"1218:55:11","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1472,"name":"uint256","nodeType":"ElementaryTypeName","src":"1218:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783232","id":1473,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1269:4:11","typeDescriptions":{"typeIdentifier":"t_rational_34_by_1","typeString":"int_const 34"},"value":"0x22"},"visibility":"internal"},{"constant":true,"documentation":{"id":1475,"nodeType":"StructuredDocumentation","src":"1280:24:11","text":"@dev empty array pop"},"id":1478,"mutability":"constant","name":"EMPTY_ARRAY_POP","nameLocation":"1336:15:11","nodeType":"VariableDeclaration","scope":1499,"src":"1310:48:11","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1476,"name":"uint256","nodeType":"ElementaryTypeName","src":"1310:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783331","id":1477,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1354:4:11","typeDescriptions":{"typeIdentifier":"t_rational_49_by_1","typeString":"int_const 49"},"value":"0x31"},"visibility":"internal"},{"constant":true,"documentation":{"id":1479,"nodeType":"StructuredDocumentation","src":"1365:35:11","text":"@dev array out of bounds access"},"id":1482,"mutability":"constant","name":"ARRAY_OUT_OF_BOUNDS","nameLocation":"1432:19:11","nodeType":"VariableDeclaration","scope":1499,"src":"1406:52:11","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1480,"name":"uint256","nodeType":"ElementaryTypeName","src":"1406:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783332","id":1481,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1454:4:11","typeDescriptions":{"typeIdentifier":"t_rational_50_by_1","typeString":"int_const 50"},"value":"0x32"},"visibility":"internal"},{"constant":true,"documentation":{"id":1483,"nodeType":"StructuredDocumentation","src":"1465:65:11","text":"@dev resource error (too large allocation or too large array)"},"id":1486,"mutability":"constant","name":"RESOURCE_ERROR","nameLocation":"1562:14:11","nodeType":"VariableDeclaration","scope":1499,"src":"1536:47:11","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1484,"name":"uint256","nodeType":"ElementaryTypeName","src":"1536:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783431","id":1485,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1579:4:11","typeDescriptions":{"typeIdentifier":"t_rational_65_by_1","typeString":"int_const 65"},"value":"0x41"},"visibility":"internal"},{"constant":true,"documentation":{"id":1487,"nodeType":"StructuredDocumentation","src":"1590:42:11","text":"@dev calling invalid internal function"},"id":1490,"mutability":"constant","name":"INVALID_INTERNAL_FUNCTION","nameLocation":"1664:25:11","nodeType":"VariableDeclaration","scope":1499,"src":"1638:58:11","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1488,"name":"uint256","nodeType":"ElementaryTypeName","src":"1638:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783531","id":1489,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1692:4:11","typeDescriptions":{"typeIdentifier":"t_rational_81_by_1","typeString":"int_const 81"},"value":"0x51"},"visibility":"internal"},{"body":{"id":1497,"nodeType":"Block","src":"1868:157:11","statements":[{"AST":{"nativeSrc":"1904:114:11","nodeType":"YulBlock","src":"1904:114:11","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"1926:4:11","nodeType":"YulLiteral","src":"1926:4:11","type":"","value":"0x00"},{"kind":"number","nativeSrc":"1932:10:11","nodeType":"YulLiteral","src":"1932:10:11","type":"","value":"0x4e487b71"}],"functionName":{"name":"mstore","nativeSrc":"1919:6:11","nodeType":"YulIdentifier","src":"1919:6:11"},"nativeSrc":"1919:24:11","nodeType":"YulFunctionCall","src":"1919:24:11"},"nativeSrc":"1919:24:11","nodeType":"YulExpressionStatement","src":"1919:24:11"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"1964:4:11","nodeType":"YulLiteral","src":"1964:4:11","type":"","value":"0x20"},{"name":"code","nativeSrc":"1970:4:11","nodeType":"YulIdentifier","src":"1970:4:11"}],"functionName":{"name":"mstore","nativeSrc":"1957:6:11","nodeType":"YulIdentifier","src":"1957:6:11"},"nativeSrc":"1957:18:11","nodeType":"YulFunctionCall","src":"1957:18:11"},"nativeSrc":"1957:18:11","nodeType":"YulExpressionStatement","src":"1957:18:11"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"1996:4:11","nodeType":"YulLiteral","src":"1996:4:11","type":"","value":"0x1c"},{"kind":"number","nativeSrc":"2002:4:11","nodeType":"YulLiteral","src":"2002:4:11","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"1989:6:11","nodeType":"YulIdentifier","src":"1989:6:11"},"nativeSrc":"1989:18:11","nodeType":"YulFunctionCall","src":"1989:18:11"},"nativeSrc":"1989:18:11","nodeType":"YulExpressionStatement","src":"1989:18:11"}]},"evmVersion":"paris","externalReferences":[{"declaration":1493,"isOffset":false,"isSlot":false,"src":"1970:4:11","valueSize":1}],"flags":["memory-safe"],"id":1496,"nodeType":"InlineAssembly","src":"1879:139:11"}]},"documentation":{"id":1491,"nodeType":"StructuredDocumentation","src":"1705:114:11","text":"@dev Reverts with a panic code. Recommended to use with\n the internal constants with predefined codes."},"id":1498,"implemented":true,"kind":"function","modifiers":[],"name":"panic","nameLocation":"1834:5:11","nodeType":"FunctionDefinition","parameters":{"id":1494,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1493,"mutability":"mutable","name":"code","nameLocation":"1848:4:11","nodeType":"VariableDeclaration","scope":1498,"src":"1840:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1492,"name":"uint256","nodeType":"ElementaryTypeName","src":"1840:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1839:14:11"},"returnParameters":{"id":1495,"nodeType":"ParameterList","parameters":[],"src":"1868:0:11"},"scope":1499,"src":"1825:200:11","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":1500,"src":"682:1346:11","usedErrors":[],"usedEvents":[]}],"src":"102:1928:11"},"id":11},"@openzeppelin/contracts/utils/Pausable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Pausable.sol","exportedSymbols":{"Context":[1379],"Pausable":[1607]},"id":1608,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1501,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"105:24:12"},{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","file":"../utils/Context.sol","id":1503,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1608,"sourceUnit":1380,"src":"133:45:12","symbolAliases":[{"foreign":{"id":1502,"name":"Context","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1379,"src":"141:7:12","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":1505,"name":"Context","nameLocations":["661:7:12"],"nodeType":"IdentifierPath","referencedDeclaration":1379,"src":"661:7:12"},"id":1506,"nodeType":"InheritanceSpecifier","src":"661:7:12"}],"canonicalName":"Pausable","contractDependencies":[],"contractKind":"contract","documentation":{"id":1504,"nodeType":"StructuredDocumentation","src":"182:447:12","text":" @dev Contract module which allows children to implement an emergency stop\n mechanism that can be triggered by an authorized account.\n This module is used through inheritance. It will make available the\n modifiers `whenNotPaused` and `whenPaused`, which can be applied to\n the functions of your contract. Note that they will not be pausable by\n simply including this module, only once the modifiers are put in place."},"fullyImplemented":true,"id":1607,"linearizedBaseContracts":[1607,1379],"name":"Pausable","nameLocation":"649:8:12","nodeType":"ContractDefinition","nodes":[{"constant":false,"id":1508,"mutability":"mutable","name":"_paused","nameLocation":"689:7:12","nodeType":"VariableDeclaration","scope":1607,"src":"676:20:12","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1507,"name":"bool","nodeType":"ElementaryTypeName","src":"676:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"private"},{"anonymous":false,"documentation":{"id":1509,"nodeType":"StructuredDocumentation","src":"705:75:12","text":" @dev Emitted when the pause is triggered by `account`."},"eventSelector":"62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258","id":1513,"name":"Paused","nameLocation":"792:6:12","nodeType":"EventDefinition","parameters":{"id":1512,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1511,"indexed":false,"mutability":"mutable","name":"account","nameLocation":"807:7:12","nodeType":"VariableDeclaration","scope":1513,"src":"799:15:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1510,"name":"address","nodeType":"ElementaryTypeName","src":"799:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"798:17:12"},"src":"786:30:12"},{"anonymous":false,"documentation":{"id":1514,"nodeType":"StructuredDocumentation","src":"824:72:12","text":" @dev Emitted when the pause is lifted by `account`."},"eventSelector":"5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa","id":1518,"name":"Unpaused","nameLocation":"908:8:12","nodeType":"EventDefinition","parameters":{"id":1517,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1516,"indexed":false,"mutability":"mutable","name":"account","nameLocation":"925:7:12","nodeType":"VariableDeclaration","scope":1518,"src":"917:15:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1515,"name":"address","nodeType":"ElementaryTypeName","src":"917:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"916:17:12"},"src":"902:32:12"},{"documentation":{"id":1519,"nodeType":"StructuredDocumentation","src":"942:78:12","text":" @dev The operation failed because the contract is paused."},"errorSelector":"d93c0665","id":1521,"name":"EnforcedPause","nameLocation":"1032:13:12","nodeType":"ErrorDefinition","parameters":{"id":1520,"nodeType":"ParameterList","parameters":[],"src":"1045:2:12"},"src":"1026:22:12"},{"documentation":{"id":1522,"nodeType":"StructuredDocumentation","src":"1056:82:12","text":" @dev The operation failed because the contract is not paused."},"errorSelector":"8dfc202b","id":1524,"name":"ExpectedPause","nameLocation":"1150:13:12","nodeType":"ErrorDefinition","parameters":{"id":1523,"nodeType":"ParameterList","parameters":[],"src":"1163:2:12"},"src":"1144:22:12"},{"body":{"id":1531,"nodeType":"Block","src":"1386:50:12","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":1527,"name":"_requireNotPaused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1561,"src":"1397:17:12","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$__$","typeString":"function () view"}},"id":1528,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1397:19:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1529,"nodeType":"ExpressionStatement","src":"1397:19:12"},{"id":1530,"nodeType":"PlaceholderStatement","src":"1427:1:12"}]},"documentation":{"id":1525,"nodeType":"StructuredDocumentation","src":"1174:181:12","text":" @dev Modifier to make a function callable only when the contract is not paused.\n Requirements:\n - The contract must not be paused."},"id":1532,"name":"whenNotPaused","nameLocation":"1370:13:12","nodeType":"ModifierDefinition","parameters":{"id":1526,"nodeType":"ParameterList","parameters":[],"src":"1383:2:12"},"src":"1361:75:12","virtual":false,"visibility":"internal"},{"body":{"id":1539,"nodeType":"Block","src":"1645:47:12","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":1535,"name":"_requirePaused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1574,"src":"1656:14:12","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$__$","typeString":"function () view"}},"id":1536,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1656:16:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1537,"nodeType":"ExpressionStatement","src":"1656:16:12"},{"id":1538,"nodeType":"PlaceholderStatement","src":"1683:1:12"}]},"documentation":{"id":1533,"nodeType":"StructuredDocumentation","src":"1444:173:12","text":" @dev Modifier to make a function callable only when the contract is paused.\n Requirements:\n - The contract must be paused."},"id":1540,"name":"whenPaused","nameLocation":"1632:10:12","nodeType":"ModifierDefinition","parameters":{"id":1534,"nodeType":"ParameterList","parameters":[],"src":"1642:2:12"},"src":"1623:69:12","virtual":false,"visibility":"internal"},{"body":{"id":1548,"nodeType":"Block","src":"1845:33:12","statements":[{"expression":{"id":1546,"name":"_paused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1508,"src":"1863:7:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":1545,"id":1547,"nodeType":"Return","src":"1856:14:12"}]},"documentation":{"id":1541,"nodeType":"StructuredDocumentation","src":"1700:86:12","text":" @dev Returns true if the contract is paused, and false otherwise."},"functionSelector":"5c975abb","id":1549,"implemented":true,"kind":"function","modifiers":[],"name":"paused","nameLocation":"1801:6:12","nodeType":"FunctionDefinition","parameters":{"id":1542,"nodeType":"ParameterList","parameters":[],"src":"1807:2:12"},"returnParameters":{"id":1545,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1544,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1549,"src":"1839:4:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1543,"name":"bool","nodeType":"ElementaryTypeName","src":"1839:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1838:6:12"},"scope":1607,"src":"1792:86:12","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":1560,"nodeType":"Block","src":"2002:81:12","statements":[{"condition":{"arguments":[],"expression":{"argumentTypes":[],"id":1553,"name":"paused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1549,"src":"2017:6:12","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_bool_$","typeString":"function () view returns (bool)"}},"id":1554,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2017:8:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1559,"nodeType":"IfStatement","src":"2013:63:12","trueBody":{"id":1558,"nodeType":"Block","src":"2027:49:12","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":1555,"name":"EnforcedPause","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1521,"src":"2049:13:12","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$_t_error_$","typeString":"function () pure returns (error)"}},"id":1556,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2049:15:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":1557,"nodeType":"RevertStatement","src":"2042:22:12"}]}}]},"documentation":{"id":1550,"nodeType":"StructuredDocumentation","src":"1886:59:12","text":" @dev Throws if the contract is paused."},"id":1561,"implemented":true,"kind":"function","modifiers":[],"name":"_requireNotPaused","nameLocation":"1960:17:12","nodeType":"FunctionDefinition","parameters":{"id":1551,"nodeType":"ParameterList","parameters":[],"src":"1977:2:12"},"returnParameters":{"id":1552,"nodeType":"ParameterList","parameters":[],"src":"2002:0:12"},"scope":1607,"src":"1951:132:12","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":1573,"nodeType":"Block","src":"2208:82:12","statements":[{"condition":{"id":1567,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"2223:9:12","subExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":1565,"name":"paused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1549,"src":"2224:6:12","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_bool_$","typeString":"function () view returns (bool)"}},"id":1566,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2224:8:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1572,"nodeType":"IfStatement","src":"2219:64:12","trueBody":{"id":1571,"nodeType":"Block","src":"2234:49:12","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":1568,"name":"ExpectedPause","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1524,"src":"2256:13:12","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$_t_error_$","typeString":"function () pure returns (error)"}},"id":1569,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2256:15:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":1570,"nodeType":"RevertStatement","src":"2249:22:12"}]}}]},"documentation":{"id":1562,"nodeType":"StructuredDocumentation","src":"2091:63:12","text":" @dev Throws if the contract is not paused."},"id":1574,"implemented":true,"kind":"function","modifiers":[],"name":"_requirePaused","nameLocation":"2169:14:12","nodeType":"FunctionDefinition","parameters":{"id":1563,"nodeType":"ParameterList","parameters":[],"src":"2183:2:12"},"returnParameters":{"id":1564,"nodeType":"ParameterList","parameters":[],"src":"2208:0:12"},"scope":1607,"src":"2160:130:12","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":1589,"nodeType":"Block","src":"2483:69:12","statements":[{"expression":{"id":1582,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1580,"name":"_paused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1508,"src":"2494:7:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":1581,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2504:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"2494:14:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1583,"nodeType":"ExpressionStatement","src":"2494:14:12"},{"eventCall":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":1585,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1361,"src":"2531:10:12","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1586,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2531:12:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1584,"name":"Paused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1513,"src":"2524:6:12","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":1587,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2524:20:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1588,"nodeType":"EmitStatement","src":"2519:25:12"}]},"documentation":{"id":1575,"nodeType":"StructuredDocumentation","src":"2298:130:12","text":" @dev Triggers stopped state.\n Requirements:\n - The contract must not be paused."},"id":1590,"implemented":true,"kind":"function","modifiers":[{"id":1578,"kind":"modifierInvocation","modifierName":{"id":1577,"name":"whenNotPaused","nameLocations":["2469:13:12"],"nodeType":"IdentifierPath","referencedDeclaration":1532,"src":"2469:13:12"},"nodeType":"ModifierInvocation","src":"2469:13:12"}],"name":"_pause","nameLocation":"2443:6:12","nodeType":"FunctionDefinition","parameters":{"id":1576,"nodeType":"ParameterList","parameters":[],"src":"2449:2:12"},"returnParameters":{"id":1579,"nodeType":"ParameterList","parameters":[],"src":"2483:0:12"},"scope":1607,"src":"2434:118:12","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1605,"nodeType":"Block","src":"2741:72:12","statements":[{"expression":{"id":1598,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1596,"name":"_paused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1508,"src":"2752:7:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"66616c7365","id":1597,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2762:5:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"src":"2752:15:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1599,"nodeType":"ExpressionStatement","src":"2752:15:12"},{"eventCall":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":1601,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1361,"src":"2792:10:12","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1602,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2792:12:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1600,"name":"Unpaused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1518,"src":"2783:8:12","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":1603,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2783:22:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1604,"nodeType":"EmitStatement","src":"2778:27:12"}]},"documentation":{"id":1591,"nodeType":"StructuredDocumentation","src":"2560:127:12","text":" @dev Returns to normal state.\n Requirements:\n - The contract must be paused."},"id":1606,"implemented":true,"kind":"function","modifiers":[{"id":1594,"kind":"modifierInvocation","modifierName":{"id":1593,"name":"whenPaused","nameLocations":["2730:10:12"],"nodeType":"IdentifierPath","referencedDeclaration":1540,"src":"2730:10:12"},"nodeType":"ModifierInvocation","src":"2730:10:12"}],"name":"_unpause","nameLocation":"2702:8:12","nodeType":"FunctionDefinition","parameters":{"id":1592,"nodeType":"ParameterList","parameters":[],"src":"2710:2:12"},"returnParameters":{"id":1595,"nodeType":"ParameterList","parameters":[],"src":"2741:0:12"},"scope":1607,"src":"2693:120:12","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":1608,"src":"631:2185:12","usedErrors":[1521,1524],"usedEvents":[1513,1518]}],"src":"105:2713:12"},"id":12},"@openzeppelin/contracts/utils/ShortStrings.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/ShortStrings.sol","exportedSymbols":{"ShortString":[1613],"ShortStrings":[1824],"StorageSlot":[1948]},"id":1825,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1609,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"109:24:13"},{"absolutePath":"@openzeppelin/contracts/utils/StorageSlot.sol","file":"./StorageSlot.sol","id":1611,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1825,"sourceUnit":1949,"src":"137:46:13","symbolAliases":[{"foreign":{"id":1610,"name":"StorageSlot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1948,"src":"145:11:13","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"canonicalName":"ShortString","id":1613,"name":"ShortString","nameLocation":"362:11:13","nodeType":"UserDefinedValueTypeDefinition","src":"357:28:13","underlyingType":{"id":1612,"name":"bytes32","nodeType":"ElementaryTypeName","src":"377:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}},{"abstract":false,"baseContracts":[],"canonicalName":"ShortStrings","contractDependencies":[],"contractKind":"library","documentation":{"id":1614,"nodeType":"StructuredDocumentation","src":"389:903:13","text":" @dev This library provides functions to convert short memory strings\n into a `ShortString` type that can be used as an immutable variable.\n Strings of arbitrary length can be optimized using this library if\n they are short enough (up to 31 bytes) by packing them with their\n length (1 byte) in a single EVM word (32 bytes). Additionally, a\n fallback mechanism can be used for every other case.\n Usage example:\n ```solidity\n contract Named {\n     using ShortStrings for *;\n     ShortString private immutable _name;\n     string private _nameFallback;\n     constructor(string memory contractName) {\n         _name = contractName.toShortStringWithFallback(_nameFallback);\n     }\n     function name() external view returns (string memory) {\n         return _name.toStringWithFallback(_nameFallback);\n     }\n }\n ```"},"fullyImplemented":true,"id":1824,"linearizedBaseContracts":[1824],"name":"ShortStrings","nameLocation":"1302:12:13","nodeType":"ContractDefinition","nodes":[{"constant":true,"id":1617,"mutability":"constant","name":"FALLBACK_SENTINEL","nameLocation":"1411:17:13","nodeType":"VariableDeclaration","scope":1824,"src":"1386:111:13","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1615,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1386:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"hexValue":"307830303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030304646","id":1616,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1431:66:13","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"0x00000000000000000000000000000000000000000000000000000000000000FF"},"visibility":"private"},{"errorSelector":"305a27a9","id":1621,"name":"StringTooLong","nameLocation":"1512:13:13","nodeType":"ErrorDefinition","parameters":{"id":1620,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1619,"mutability":"mutable","name":"str","nameLocation":"1533:3:13","nodeType":"VariableDeclaration","scope":1621,"src":"1526:10:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1618,"name":"string","nodeType":"ElementaryTypeName","src":"1526:6:13","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1525:12:13"},"src":"1506:32:13"},{"errorSelector":"b3512b0c","id":1623,"name":"InvalidShortString","nameLocation":"1550:18:13","nodeType":"ErrorDefinition","parameters":{"id":1622,"nodeType":"ParameterList","parameters":[],"src":"1568:2:13"},"src":"1544:27:13"},{"body":{"id":1666,"nodeType":"Block","src":"1837:214:13","statements":[{"assignments":[1633],"declarations":[{"constant":false,"id":1633,"mutability":"mutable","name":"bstr","nameLocation":"1861:4:13","nodeType":"VariableDeclaration","scope":1666,"src":"1848:17:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1632,"name":"bytes","nodeType":"ElementaryTypeName","src":"1848:5:13","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":1638,"initialValue":{"arguments":[{"id":1636,"name":"str","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1626,"src":"1874:3:13","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1635,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1868:5:13","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":1634,"name":"bytes","nodeType":"ElementaryTypeName","src":"1868:5:13","typeDescriptions":{}}},"id":1637,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1868:10:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"1848:30:13"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1642,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1639,"name":"bstr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1633,"src":"1893:4:13","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1640,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1898:6:13","memberName":"length","nodeType":"MemberAccess","src":"1893:11:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"3331","id":1641,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1907:2:13","typeDescriptions":{"typeIdentifier":"t_rational_31_by_1","typeString":"int_const 31"},"value":"31"},"src":"1893:16:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1648,"nodeType":"IfStatement","src":"1889:74:13","trueBody":{"id":1647,"nodeType":"Block","src":"1911:52:13","statements":[{"errorCall":{"arguments":[{"id":1644,"name":"str","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1626,"src":"1947:3:13","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1643,"name":"StringTooLong","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1621,"src":"1933:13:13","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_string_memory_ptr_$returns$_t_error_$","typeString":"function (string memory) pure returns (error)"}},"id":1645,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1933:18:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":1646,"nodeType":"RevertStatement","src":"1926:25:13"}]}},{"expression":{"arguments":[{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1662,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"id":1657,"name":"bstr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1633,"src":"2021:4:13","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1656,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2013:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":1655,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2013:7:13","typeDescriptions":{}}},"id":1658,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2013:13:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":1654,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2005:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":1653,"name":"uint256","nodeType":"ElementaryTypeName","src":"2005:7:13","typeDescriptions":{}}},"id":1659,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2005:22:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"expression":{"id":1660,"name":"bstr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1633,"src":"2030:4:13","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1661,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2035:6:13","memberName":"length","nodeType":"MemberAccess","src":"2030:11:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2005:36:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1652,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1997:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":1651,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1997:7:13","typeDescriptions":{}}},"id":1663,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1997:45:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":1649,"name":"ShortString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1613,"src":"1980:11:13","typeDescriptions":{"typeIdentifier":"t_type$_t_userDefinedValueType$_ShortString_$1613_$","typeString":"type(ShortString)"}},"id":1650,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1992:4:13","memberName":"wrap","nodeType":"MemberAccess","src":"1980:16:13","typeDescriptions":{"typeIdentifier":"t_function_wrap_pure$_t_bytes32_$returns$_t_userDefinedValueType$_ShortString_$1613_$","typeString":"function (bytes32) pure returns (ShortString)"}},"id":1664,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1980:63:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1613","typeString":"ShortString"}},"functionReturnParameters":1631,"id":1665,"nodeType":"Return","src":"1973:70:13"}]},"documentation":{"id":1624,"nodeType":"StructuredDocumentation","src":"1579:174:13","text":" @dev Encode a string of at most 31 chars into a `ShortString`.\n This will trigger a `StringTooLong` error is the input string is too long."},"id":1667,"implemented":true,"kind":"function","modifiers":[],"name":"toShortString","nameLocation":"1768:13:13","nodeType":"FunctionDefinition","parameters":{"id":1627,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1626,"mutability":"mutable","name":"str","nameLocation":"1796:3:13","nodeType":"VariableDeclaration","scope":1667,"src":"1782:17:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1625,"name":"string","nodeType":"ElementaryTypeName","src":"1782:6:13","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1781:19:13"},"returnParameters":{"id":1631,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1630,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1667,"src":"1824:11:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1613","typeString":"ShortString"},"typeName":{"id":1629,"nodeType":"UserDefinedTypeName","pathNode":{"id":1628,"name":"ShortString","nameLocations":["1824:11:13"],"nodeType":"IdentifierPath","referencedDeclaration":1613,"src":"1824:11:13"},"referencedDeclaration":1613,"src":"1824:11:13","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1613","typeString":"ShortString"}},"visibility":"internal"}],"src":"1823:13:13"},"scope":1824,"src":"1759:292:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1692,"nodeType":"Block","src":"2214:313:13","statements":[{"assignments":[1677],"declarations":[{"constant":false,"id":1677,"mutability":"mutable","name":"len","nameLocation":"2233:3:13","nodeType":"VariableDeclaration","scope":1692,"src":"2225:11:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1676,"name":"uint256","nodeType":"ElementaryTypeName","src":"2225:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1681,"initialValue":{"arguments":[{"id":1679,"name":"sstr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1671,"src":"2250:4:13","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1613","typeString":"ShortString"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1613","typeString":"ShortString"}],"id":1678,"name":"byteLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1725,"src":"2239:10:13","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_userDefinedValueType$_ShortString_$1613_$returns$_t_uint256_$","typeString":"function (ShortString) pure returns (uint256)"}},"id":1680,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2239:16:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2225:30:13"},{"assignments":[1683],"declarations":[{"constant":false,"id":1683,"mutability":"mutable","name":"str","nameLocation":"2359:3:13","nodeType":"VariableDeclaration","scope":1692,"src":"2345:17:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1682,"name":"string","nodeType":"ElementaryTypeName","src":"2345:6:13","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"id":1688,"initialValue":{"arguments":[{"hexValue":"3332","id":1686,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2376:2:13","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"}],"id":1685,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"2365:10:13","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) pure returns (string memory)"},"typeName":{"id":1684,"name":"string","nodeType":"ElementaryTypeName","src":"2369:6:13","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}}},"id":1687,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2365:14:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"nodeType":"VariableDeclarationStatement","src":"2345:34:13"},{"AST":{"nativeSrc":"2415:84:13","nodeType":"YulBlock","src":"2415:84:13","statements":[{"expression":{"arguments":[{"name":"str","nativeSrc":"2437:3:13","nodeType":"YulIdentifier","src":"2437:3:13"},{"name":"len","nativeSrc":"2442:3:13","nodeType":"YulIdentifier","src":"2442:3:13"}],"functionName":{"name":"mstore","nativeSrc":"2430:6:13","nodeType":"YulIdentifier","src":"2430:6:13"},"nativeSrc":"2430:16:13","nodeType":"YulFunctionCall","src":"2430:16:13"},"nativeSrc":"2430:16:13","nodeType":"YulExpressionStatement","src":"2430:16:13"},{"expression":{"arguments":[{"arguments":[{"name":"str","nativeSrc":"2471:3:13","nodeType":"YulIdentifier","src":"2471:3:13"},{"kind":"number","nativeSrc":"2476:4:13","nodeType":"YulLiteral","src":"2476:4:13","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"2467:3:13","nodeType":"YulIdentifier","src":"2467:3:13"},"nativeSrc":"2467:14:13","nodeType":"YulFunctionCall","src":"2467:14:13"},{"name":"sstr","nativeSrc":"2483:4:13","nodeType":"YulIdentifier","src":"2483:4:13"}],"functionName":{"name":"mstore","nativeSrc":"2460:6:13","nodeType":"YulIdentifier","src":"2460:6:13"},"nativeSrc":"2460:28:13","nodeType":"YulFunctionCall","src":"2460:28:13"},"nativeSrc":"2460:28:13","nodeType":"YulExpressionStatement","src":"2460:28:13"}]},"evmVersion":"paris","externalReferences":[{"declaration":1677,"isOffset":false,"isSlot":false,"src":"2442:3:13","valueSize":1},{"declaration":1671,"isOffset":false,"isSlot":false,"src":"2483:4:13","valueSize":1},{"declaration":1683,"isOffset":false,"isSlot":false,"src":"2437:3:13","valueSize":1},{"declaration":1683,"isOffset":false,"isSlot":false,"src":"2471:3:13","valueSize":1}],"flags":["memory-safe"],"id":1689,"nodeType":"InlineAssembly","src":"2390:109:13"},{"expression":{"id":1690,"name":"str","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1683,"src":"2516:3:13","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":1675,"id":1691,"nodeType":"Return","src":"2509:10:13"}]},"documentation":{"id":1668,"nodeType":"StructuredDocumentation","src":"2059:75:13","text":" @dev Decode a `ShortString` back to a \"normal\" string."},"id":1693,"implemented":true,"kind":"function","modifiers":[],"name":"toString","nameLocation":"2149:8:13","nodeType":"FunctionDefinition","parameters":{"id":1672,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1671,"mutability":"mutable","name":"sstr","nameLocation":"2170:4:13","nodeType":"VariableDeclaration","scope":1693,"src":"2158:16:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1613","typeString":"ShortString"},"typeName":{"id":1670,"nodeType":"UserDefinedTypeName","pathNode":{"id":1669,"name":"ShortString","nameLocations":["2158:11:13"],"nodeType":"IdentifierPath","referencedDeclaration":1613,"src":"2158:11:13"},"referencedDeclaration":1613,"src":"2158:11:13","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1613","typeString":"ShortString"}},"visibility":"internal"}],"src":"2157:18:13"},"returnParameters":{"id":1675,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1674,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1693,"src":"2199:13:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1673,"name":"string","nodeType":"ElementaryTypeName","src":"2199:6:13","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2198:15:13"},"scope":1824,"src":"2140:387:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1724,"nodeType":"Block","src":"2674:181:13","statements":[{"assignments":[1703],"declarations":[{"constant":false,"id":1703,"mutability":"mutable","name":"result","nameLocation":"2693:6:13","nodeType":"VariableDeclaration","scope":1724,"src":"2685:14:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1702,"name":"uint256","nodeType":"ElementaryTypeName","src":"2685:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1713,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1712,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"id":1708,"name":"sstr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1697,"src":"2729:4:13","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1613","typeString":"ShortString"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1613","typeString":"ShortString"}],"expression":{"id":1706,"name":"ShortString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1613,"src":"2710:11:13","typeDescriptions":{"typeIdentifier":"t_type$_t_userDefinedValueType$_ShortString_$1613_$","typeString":"type(ShortString)"}},"id":1707,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2722:6:13","memberName":"unwrap","nodeType":"MemberAccess","src":"2710:18:13","typeDescriptions":{"typeIdentifier":"t_function_unwrap_pure$_t_userDefinedValueType$_ShortString_$1613_$returns$_t_bytes32_$","typeString":"function (ShortString) pure returns (bytes32)"}},"id":1709,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2710:24:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":1705,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2702:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":1704,"name":"uint256","nodeType":"ElementaryTypeName","src":"2702:7:13","typeDescriptions":{}}},"id":1710,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2702:33:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"hexValue":"30784646","id":1711,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2738:4:13","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"0xFF"},"src":"2702:40:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2685:57:13"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1716,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1714,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1703,"src":"2757:6:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"3331","id":1715,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2766:2:13","typeDescriptions":{"typeIdentifier":"t_rational_31_by_1","typeString":"int_const 31"},"value":"31"},"src":"2757:11:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1721,"nodeType":"IfStatement","src":"2753:71:13","trueBody":{"id":1720,"nodeType":"Block","src":"2770:54:13","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":1717,"name":"InvalidShortString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1623,"src":"2792:18:13","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$_t_error_$","typeString":"function () pure returns (error)"}},"id":1718,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2792:20:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":1719,"nodeType":"RevertStatement","src":"2785:27:13"}]}},{"expression":{"id":1722,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1703,"src":"2841:6:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1701,"id":1723,"nodeType":"Return","src":"2834:13:13"}]},"documentation":{"id":1694,"nodeType":"StructuredDocumentation","src":"2535:63:13","text":" @dev Return the length of a `ShortString`."},"id":1725,"implemented":true,"kind":"function","modifiers":[],"name":"byteLength","nameLocation":"2613:10:13","nodeType":"FunctionDefinition","parameters":{"id":1698,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1697,"mutability":"mutable","name":"sstr","nameLocation":"2636:4:13","nodeType":"VariableDeclaration","scope":1725,"src":"2624:16:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1613","typeString":"ShortString"},"typeName":{"id":1696,"nodeType":"UserDefinedTypeName","pathNode":{"id":1695,"name":"ShortString","nameLocations":["2624:11:13"],"nodeType":"IdentifierPath","referencedDeclaration":1613,"src":"2624:11:13"},"referencedDeclaration":1613,"src":"2624:11:13","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1613","typeString":"ShortString"}},"visibility":"internal"}],"src":"2623:18:13"},"returnParameters":{"id":1701,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1700,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1725,"src":"2665:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1699,"name":"uint256","nodeType":"ElementaryTypeName","src":"2665:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2664:9:13"},"scope":1824,"src":"2604:251:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1764,"nodeType":"Block","src":"3083:238:13","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1742,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":1738,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1728,"src":"3104:5:13","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1737,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3098:5:13","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":1736,"name":"bytes","nodeType":"ElementaryTypeName","src":"3098:5:13","typeDescriptions":{}}},"id":1739,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3098:12:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1740,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3111:6:13","memberName":"length","nodeType":"MemberAccess","src":"3098:19:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"3332","id":1741,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3120:2:13","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"3098:24:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1762,"nodeType":"Block","src":"3184:130:13","statements":[{"expression":{"id":1755,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"arguments":[{"id":1751,"name":"store","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1730,"src":"3225:5:13","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string storage pointer"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_storage_ptr","typeString":"string storage pointer"}],"expression":{"id":1748,"name":"StorageSlot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1948,"src":"3199:11:13","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_StorageSlot_$1948_$","typeString":"type(library StorageSlot)"}},"id":1750,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3211:13:13","memberName":"getStringSlot","nodeType":"MemberAccess","referencedDeclaration":1925,"src":"3199:25:13","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_storage_ptr_$returns$_t_struct$_StringSlot_$1845_storage_ptr_$","typeString":"function (string storage pointer) pure returns (struct StorageSlot.StringSlot storage pointer)"}},"id":1752,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3199:32:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_StringSlot_$1845_storage_ptr","typeString":"struct StorageSlot.StringSlot storage pointer"}},"id":1753,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"3232:5:13","memberName":"value","nodeType":"MemberAccess","referencedDeclaration":1844,"src":"3199:38:13","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1754,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1728,"src":"3240:5:13","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"3199:46:13","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":1756,"nodeType":"ExpressionStatement","src":"3199:46:13"},{"expression":{"arguments":[{"id":1759,"name":"FALLBACK_SENTINEL","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1617,"src":"3284:17:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":1757,"name":"ShortString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1613,"src":"3267:11:13","typeDescriptions":{"typeIdentifier":"t_type$_t_userDefinedValueType$_ShortString_$1613_$","typeString":"type(ShortString)"}},"id":1758,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3279:4:13","memberName":"wrap","nodeType":"MemberAccess","src":"3267:16:13","typeDescriptions":{"typeIdentifier":"t_function_wrap_pure$_t_bytes32_$returns$_t_userDefinedValueType$_ShortString_$1613_$","typeString":"function (bytes32) pure returns (ShortString)"}},"id":1760,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3267:35:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1613","typeString":"ShortString"}},"functionReturnParameters":1735,"id":1761,"nodeType":"Return","src":"3260:42:13"}]},"id":1763,"nodeType":"IfStatement","src":"3094:220:13","trueBody":{"id":1747,"nodeType":"Block","src":"3124:54:13","statements":[{"expression":{"arguments":[{"id":1744,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1728,"src":"3160:5:13","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1743,"name":"toShortString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1667,"src":"3146:13:13","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$returns$_t_userDefinedValueType$_ShortString_$1613_$","typeString":"function (string memory) pure returns (ShortString)"}},"id":1745,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3146:20:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1613","typeString":"ShortString"}},"functionReturnParameters":1735,"id":1746,"nodeType":"Return","src":"3139:27:13"}]}}]},"documentation":{"id":1726,"nodeType":"StructuredDocumentation","src":"2863:105:13","text":" @dev Encode a string into a `ShortString`, or write it to storage if it is too long."},"id":1765,"implemented":true,"kind":"function","modifiers":[],"name":"toShortStringWithFallback","nameLocation":"2983:25:13","nodeType":"FunctionDefinition","parameters":{"id":1731,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1728,"mutability":"mutable","name":"value","nameLocation":"3023:5:13","nodeType":"VariableDeclaration","scope":1765,"src":"3009:19:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1727,"name":"string","nodeType":"ElementaryTypeName","src":"3009:6:13","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":1730,"mutability":"mutable","name":"store","nameLocation":"3045:5:13","nodeType":"VariableDeclaration","scope":1765,"src":"3030:20:13","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":1729,"name":"string","nodeType":"ElementaryTypeName","src":"3030:6:13","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3008:43:13"},"returnParameters":{"id":1735,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1734,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1765,"src":"3070:11:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1613","typeString":"ShortString"},"typeName":{"id":1733,"nodeType":"UserDefinedTypeName","pathNode":{"id":1732,"name":"ShortString","nameLocations":["3070:11:13"],"nodeType":"IdentifierPath","referencedDeclaration":1613,"src":"3070:11:13"},"referencedDeclaration":1613,"src":"3070:11:13","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1613","typeString":"ShortString"}},"visibility":"internal"}],"src":"3069:13:13"},"scope":1824,"src":"2974:347:13","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1791,"nodeType":"Block","src":"3576:164:13","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":1781,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":1778,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1769,"src":"3610:5:13","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1613","typeString":"ShortString"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1613","typeString":"ShortString"}],"expression":{"id":1776,"name":"ShortString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1613,"src":"3591:11:13","typeDescriptions":{"typeIdentifier":"t_type$_t_userDefinedValueType$_ShortString_$1613_$","typeString":"type(ShortString)"}},"id":1777,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3603:6:13","memberName":"unwrap","nodeType":"MemberAccess","src":"3591:18:13","typeDescriptions":{"typeIdentifier":"t_function_unwrap_pure$_t_userDefinedValueType$_ShortString_$1613_$returns$_t_bytes32_$","typeString":"function (ShortString) pure returns (bytes32)"}},"id":1779,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3591:25:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":1780,"name":"FALLBACK_SENTINEL","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1617,"src":"3620:17:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"3591:46:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1789,"nodeType":"Block","src":"3694:39:13","statements":[{"expression":{"id":1787,"name":"store","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1771,"src":"3716:5:13","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string storage pointer"}},"functionReturnParameters":1775,"id":1788,"nodeType":"Return","src":"3709:12:13"}]},"id":1790,"nodeType":"IfStatement","src":"3587:146:13","trueBody":{"id":1786,"nodeType":"Block","src":"3639:49:13","statements":[{"expression":{"arguments":[{"id":1783,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1769,"src":"3670:5:13","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1613","typeString":"ShortString"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1613","typeString":"ShortString"}],"id":1782,"name":"toString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1693,"src":"3661:8:13","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_userDefinedValueType$_ShortString_$1613_$returns$_t_string_memory_ptr_$","typeString":"function (ShortString) pure returns (string memory)"}},"id":1784,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3661:15:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":1775,"id":1785,"nodeType":"Return","src":"3654:22:13"}]}}]},"documentation":{"id":1766,"nodeType":"StructuredDocumentation","src":"3329:132:13","text":" @dev Decode a string that was encoded to `ShortString` or written to storage using {toShortStringWithFallback}."},"id":1792,"implemented":true,"kind":"function","modifiers":[],"name":"toStringWithFallback","nameLocation":"3476:20:13","nodeType":"FunctionDefinition","parameters":{"id":1772,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1769,"mutability":"mutable","name":"value","nameLocation":"3509:5:13","nodeType":"VariableDeclaration","scope":1792,"src":"3497:17:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1613","typeString":"ShortString"},"typeName":{"id":1768,"nodeType":"UserDefinedTypeName","pathNode":{"id":1767,"name":"ShortString","nameLocations":["3497:11:13"],"nodeType":"IdentifierPath","referencedDeclaration":1613,"src":"3497:11:13"},"referencedDeclaration":1613,"src":"3497:11:13","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1613","typeString":"ShortString"}},"visibility":"internal"},{"constant":false,"id":1771,"mutability":"mutable","name":"store","nameLocation":"3531:5:13","nodeType":"VariableDeclaration","scope":1792,"src":"3516:20:13","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":1770,"name":"string","nodeType":"ElementaryTypeName","src":"3516:6:13","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3496:41:13"},"returnParameters":{"id":1775,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1774,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1792,"src":"3561:13:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1773,"name":"string","nodeType":"ElementaryTypeName","src":"3561:6:13","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3560:15:13"},"scope":1824,"src":"3467:273:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1822,"nodeType":"Block","src":"4239:180:13","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":1808,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":1805,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1796,"src":"4273:5:13","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1613","typeString":"ShortString"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1613","typeString":"ShortString"}],"expression":{"id":1803,"name":"ShortString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1613,"src":"4254:11:13","typeDescriptions":{"typeIdentifier":"t_type$_t_userDefinedValueType$_ShortString_$1613_$","typeString":"type(ShortString)"}},"id":1804,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4266:6:13","memberName":"unwrap","nodeType":"MemberAccess","src":"4254:18:13","typeDescriptions":{"typeIdentifier":"t_function_unwrap_pure$_t_userDefinedValueType$_ShortString_$1613_$returns$_t_bytes32_$","typeString":"function (ShortString) pure returns (bytes32)"}},"id":1806,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4254:25:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":1807,"name":"FALLBACK_SENTINEL","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1617,"src":"4283:17:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"4254:46:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1820,"nodeType":"Block","src":"4359:53:13","statements":[{"expression":{"expression":{"arguments":[{"id":1816,"name":"store","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1798,"src":"4387:5:13","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string storage pointer"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_storage_ptr","typeString":"string storage pointer"}],"id":1815,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4381:5:13","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":1814,"name":"bytes","nodeType":"ElementaryTypeName","src":"4381:5:13","typeDescriptions":{}}},"id":1817,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4381:12:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes storage pointer"}},"id":1818,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4394:6:13","memberName":"length","nodeType":"MemberAccess","src":"4381:19:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1802,"id":1819,"nodeType":"Return","src":"4374:26:13"}]},"id":1821,"nodeType":"IfStatement","src":"4250:162:13","trueBody":{"id":1813,"nodeType":"Block","src":"4302:51:13","statements":[{"expression":{"arguments":[{"id":1810,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1796,"src":"4335:5:13","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1613","typeString":"ShortString"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1613","typeString":"ShortString"}],"id":1809,"name":"byteLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1725,"src":"4324:10:13","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_userDefinedValueType$_ShortString_$1613_$returns$_t_uint256_$","typeString":"function (ShortString) pure returns (uint256)"}},"id":1811,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4324:17:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1802,"id":1812,"nodeType":"Return","src":"4317:24:13"}]}}]},"documentation":{"id":1793,"nodeType":"StructuredDocumentation","src":"3748:380:13","text":" @dev Return the length of a string that was encoded to `ShortString` or written to storage using\n {toShortStringWithFallback}.\n WARNING: This will return the \"byte length\" of the string. This may not reflect the actual length in terms of\n actual characters as the UTF-8 encoding of a single character can span over multiple bytes."},"id":1823,"implemented":true,"kind":"function","modifiers":[],"name":"byteLengthWithFallback","nameLocation":"4143:22:13","nodeType":"FunctionDefinition","parameters":{"id":1799,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1796,"mutability":"mutable","name":"value","nameLocation":"4178:5:13","nodeType":"VariableDeclaration","scope":1823,"src":"4166:17:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1613","typeString":"ShortString"},"typeName":{"id":1795,"nodeType":"UserDefinedTypeName","pathNode":{"id":1794,"name":"ShortString","nameLocations":["4166:11:13"],"nodeType":"IdentifierPath","referencedDeclaration":1613,"src":"4166:11:13"},"referencedDeclaration":1613,"src":"4166:11:13","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1613","typeString":"ShortString"}},"visibility":"internal"},{"constant":false,"id":1798,"mutability":"mutable","name":"store","nameLocation":"4200:5:13","nodeType":"VariableDeclaration","scope":1823,"src":"4185:20:13","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":1797,"name":"string","nodeType":"ElementaryTypeName","src":"4185:6:13","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"4165:41:13"},"returnParameters":{"id":1802,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1801,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1823,"src":"4230:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1800,"name":"uint256","nodeType":"ElementaryTypeName","src":"4230:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4229:9:13"},"scope":1824,"src":"4134:285:13","stateMutability":"view","virtual":false,"visibility":"internal"}],"scope":1825,"src":"1294:3128:13","usedErrors":[1621,1623],"usedEvents":[]}],"src":"109:4315:13"},"id":13},"@openzeppelin/contracts/utils/StorageSlot.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/StorageSlot.sol","exportedSymbols":{"StorageSlot":[1948]},"id":1949,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1826,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"197:24:14"},{"abstract":false,"baseContracts":[],"canonicalName":"StorageSlot","contractDependencies":[],"contractKind":"library","documentation":{"id":1827,"nodeType":"StructuredDocumentation","src":"225:1213:14","text":" @dev Library for reading and writing primitive types to specific storage slots.\n Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts.\n This library helps with reading and writing to such slots without the need for inline assembly.\n The functions in this library return Slot structs that contain a `value` member that can be used to read or write.\n Example usage to set ERC-1967 implementation slot:\n ```solidity\n contract ERC1967 {\n     // Define the slot. Alternatively, use the SlotDerivation library to derive the slot.\n     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\n     function _getImplementation() internal view returns (address) {\n         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\n     }\n     function _setImplementation(address newImplementation) internal {\n         require(newImplementation.code.length > 0);\n         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\n     }\n }\n ```\n TIP: Consider using this library along with {SlotDerivation}."},"fullyImplemented":true,"id":1948,"linearizedBaseContracts":[1948],"name":"StorageSlot","nameLocation":"1448:11:14","nodeType":"ContractDefinition","nodes":[{"canonicalName":"StorageSlot.AddressSlot","id":1830,"members":[{"constant":false,"id":1829,"mutability":"mutable","name":"value","nameLocation":"1505:5:14","nodeType":"VariableDeclaration","scope":1830,"src":"1497:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1828,"name":"address","nodeType":"ElementaryTypeName","src":"1497:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"name":"AddressSlot","nameLocation":"1474:11:14","nodeType":"StructDefinition","scope":1948,"src":"1467:51:14","visibility":"public"},{"canonicalName":"StorageSlot.BooleanSlot","id":1833,"members":[{"constant":false,"id":1832,"mutability":"mutable","name":"value","nameLocation":"1561:5:14","nodeType":"VariableDeclaration","scope":1833,"src":"1556:10:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1831,"name":"bool","nodeType":"ElementaryTypeName","src":"1556:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"name":"BooleanSlot","nameLocation":"1533:11:14","nodeType":"StructDefinition","scope":1948,"src":"1526:48:14","visibility":"public"},{"canonicalName":"StorageSlot.Bytes32Slot","id":1836,"members":[{"constant":false,"id":1835,"mutability":"mutable","name":"value","nameLocation":"1620:5:14","nodeType":"VariableDeclaration","scope":1836,"src":"1612:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1834,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1612:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"name":"Bytes32Slot","nameLocation":"1589:11:14","nodeType":"StructDefinition","scope":1948,"src":"1582:51:14","visibility":"public"},{"canonicalName":"StorageSlot.Uint256Slot","id":1839,"members":[{"constant":false,"id":1838,"mutability":"mutable","name":"value","nameLocation":"1679:5:14","nodeType":"VariableDeclaration","scope":1839,"src":"1671:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1837,"name":"uint256","nodeType":"ElementaryTypeName","src":"1671:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"Uint256Slot","nameLocation":"1648:11:14","nodeType":"StructDefinition","scope":1948,"src":"1641:51:14","visibility":"public"},{"canonicalName":"StorageSlot.Int256Slot","id":1842,"members":[{"constant":false,"id":1841,"mutability":"mutable","name":"value","nameLocation":"1736:5:14","nodeType":"VariableDeclaration","scope":1842,"src":"1729:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":1840,"name":"int256","nodeType":"ElementaryTypeName","src":"1729:6:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"name":"Int256Slot","nameLocation":"1707:10:14","nodeType":"StructDefinition","scope":1948,"src":"1700:49:14","visibility":"public"},{"canonicalName":"StorageSlot.StringSlot","id":1845,"members":[{"constant":false,"id":1844,"mutability":"mutable","name":"value","nameLocation":"1793:5:14","nodeType":"VariableDeclaration","scope":1845,"src":"1786:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":1843,"name":"string","nodeType":"ElementaryTypeName","src":"1786:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"name":"StringSlot","nameLocation":"1764:10:14","nodeType":"StructDefinition","scope":1948,"src":"1757:49:14","visibility":"public"},{"canonicalName":"StorageSlot.BytesSlot","id":1848,"members":[{"constant":false,"id":1847,"mutability":"mutable","name":"value","nameLocation":"1848:5:14","nodeType":"VariableDeclaration","scope":1848,"src":"1842:11:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":1846,"name":"bytes","nodeType":"ElementaryTypeName","src":"1842:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"name":"BytesSlot","nameLocation":"1821:9:14","nodeType":"StructDefinition","scope":1948,"src":"1814:47:14","visibility":"public"},{"body":{"id":1858,"nodeType":"Block","src":"2048:83:14","statements":[{"AST":{"nativeSrc":"2084:40:14","nodeType":"YulBlock","src":"2084:40:14","statements":[{"nativeSrc":"2099:14:14","nodeType":"YulAssignment","src":"2099:14:14","value":{"name":"slot","nativeSrc":"2109:4:14","nodeType":"YulIdentifier","src":"2109:4:14"},"variableNames":[{"name":"r.slot","nativeSrc":"2099:6:14","nodeType":"YulIdentifier","src":"2099:6:14"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":1855,"isOffset":false,"isSlot":true,"src":"2099:6:14","suffix":"slot","valueSize":1},{"declaration":1851,"isOffset":false,"isSlot":false,"src":"2109:4:14","valueSize":1}],"flags":["memory-safe"],"id":1857,"nodeType":"InlineAssembly","src":"2059:65:14"}]},"documentation":{"id":1849,"nodeType":"StructuredDocumentation","src":"1869:89:14","text":" @dev Returns an `AddressSlot` with member `value` located at `slot`."},"id":1859,"implemented":true,"kind":"function","modifiers":[],"name":"getAddressSlot","nameLocation":"1973:14:14","nodeType":"FunctionDefinition","parameters":{"id":1852,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1851,"mutability":"mutable","name":"slot","nameLocation":"1996:4:14","nodeType":"VariableDeclaration","scope":1859,"src":"1988:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1850,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1988:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1987:14:14"},"returnParameters":{"id":1856,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1855,"mutability":"mutable","name":"r","nameLocation":"2045:1:14","nodeType":"VariableDeclaration","scope":1859,"src":"2025:21:14","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSlot_$1830_storage_ptr","typeString":"struct StorageSlot.AddressSlot"},"typeName":{"id":1854,"nodeType":"UserDefinedTypeName","pathNode":{"id":1853,"name":"AddressSlot","nameLocations":["2025:11:14"],"nodeType":"IdentifierPath","referencedDeclaration":1830,"src":"2025:11:14"},"referencedDeclaration":1830,"src":"2025:11:14","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSlot_$1830_storage_ptr","typeString":"struct StorageSlot.AddressSlot"}},"visibility":"internal"}],"src":"2024:23:14"},"scope":1948,"src":"1964:167:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1869,"nodeType":"Block","src":"2317:83:14","statements":[{"AST":{"nativeSrc":"2353:40:14","nodeType":"YulBlock","src":"2353:40:14","statements":[{"nativeSrc":"2368:14:14","nodeType":"YulAssignment","src":"2368:14:14","value":{"name":"slot","nativeSrc":"2378:4:14","nodeType":"YulIdentifier","src":"2378:4:14"},"variableNames":[{"name":"r.slot","nativeSrc":"2368:6:14","nodeType":"YulIdentifier","src":"2368:6:14"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":1866,"isOffset":false,"isSlot":true,"src":"2368:6:14","suffix":"slot","valueSize":1},{"declaration":1862,"isOffset":false,"isSlot":false,"src":"2378:4:14","valueSize":1}],"flags":["memory-safe"],"id":1868,"nodeType":"InlineAssembly","src":"2328:65:14"}]},"documentation":{"id":1860,"nodeType":"StructuredDocumentation","src":"2139:88:14","text":" @dev Returns a `BooleanSlot` with member `value` located at `slot`."},"id":1870,"implemented":true,"kind":"function","modifiers":[],"name":"getBooleanSlot","nameLocation":"2242:14:14","nodeType":"FunctionDefinition","parameters":{"id":1863,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1862,"mutability":"mutable","name":"slot","nameLocation":"2265:4:14","nodeType":"VariableDeclaration","scope":1870,"src":"2257:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1861,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2257:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2256:14:14"},"returnParameters":{"id":1867,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1866,"mutability":"mutable","name":"r","nameLocation":"2314:1:14","nodeType":"VariableDeclaration","scope":1870,"src":"2294:21:14","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_BooleanSlot_$1833_storage_ptr","typeString":"struct StorageSlot.BooleanSlot"},"typeName":{"id":1865,"nodeType":"UserDefinedTypeName","pathNode":{"id":1864,"name":"BooleanSlot","nameLocations":["2294:11:14"],"nodeType":"IdentifierPath","referencedDeclaration":1833,"src":"2294:11:14"},"referencedDeclaration":1833,"src":"2294:11:14","typeDescriptions":{"typeIdentifier":"t_struct$_BooleanSlot_$1833_storage_ptr","typeString":"struct StorageSlot.BooleanSlot"}},"visibility":"internal"}],"src":"2293:23:14"},"scope":1948,"src":"2233:167:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1880,"nodeType":"Block","src":"2586:83:14","statements":[{"AST":{"nativeSrc":"2622:40:14","nodeType":"YulBlock","src":"2622:40:14","statements":[{"nativeSrc":"2637:14:14","nodeType":"YulAssignment","src":"2637:14:14","value":{"name":"slot","nativeSrc":"2647:4:14","nodeType":"YulIdentifier","src":"2647:4:14"},"variableNames":[{"name":"r.slot","nativeSrc":"2637:6:14","nodeType":"YulIdentifier","src":"2637:6:14"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":1877,"isOffset":false,"isSlot":true,"src":"2637:6:14","suffix":"slot","valueSize":1},{"declaration":1873,"isOffset":false,"isSlot":false,"src":"2647:4:14","valueSize":1}],"flags":["memory-safe"],"id":1879,"nodeType":"InlineAssembly","src":"2597:65:14"}]},"documentation":{"id":1871,"nodeType":"StructuredDocumentation","src":"2408:88:14","text":" @dev Returns a `Bytes32Slot` with member `value` located at `slot`."},"id":1881,"implemented":true,"kind":"function","modifiers":[],"name":"getBytes32Slot","nameLocation":"2511:14:14","nodeType":"FunctionDefinition","parameters":{"id":1874,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1873,"mutability":"mutable","name":"slot","nameLocation":"2534:4:14","nodeType":"VariableDeclaration","scope":1881,"src":"2526:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1872,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2526:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2525:14:14"},"returnParameters":{"id":1878,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1877,"mutability":"mutable","name":"r","nameLocation":"2583:1:14","nodeType":"VariableDeclaration","scope":1881,"src":"2563:21:14","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Slot_$1836_storage_ptr","typeString":"struct StorageSlot.Bytes32Slot"},"typeName":{"id":1876,"nodeType":"UserDefinedTypeName","pathNode":{"id":1875,"name":"Bytes32Slot","nameLocations":["2563:11:14"],"nodeType":"IdentifierPath","referencedDeclaration":1836,"src":"2563:11:14"},"referencedDeclaration":1836,"src":"2563:11:14","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Slot_$1836_storage_ptr","typeString":"struct StorageSlot.Bytes32Slot"}},"visibility":"internal"}],"src":"2562:23:14"},"scope":1948,"src":"2502:167:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1891,"nodeType":"Block","src":"2855:83:14","statements":[{"AST":{"nativeSrc":"2891:40:14","nodeType":"YulBlock","src":"2891:40:14","statements":[{"nativeSrc":"2906:14:14","nodeType":"YulAssignment","src":"2906:14:14","value":{"name":"slot","nativeSrc":"2916:4:14","nodeType":"YulIdentifier","src":"2916:4:14"},"variableNames":[{"name":"r.slot","nativeSrc":"2906:6:14","nodeType":"YulIdentifier","src":"2906:6:14"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":1888,"isOffset":false,"isSlot":true,"src":"2906:6:14","suffix":"slot","valueSize":1},{"declaration":1884,"isOffset":false,"isSlot":false,"src":"2916:4:14","valueSize":1}],"flags":["memory-safe"],"id":1890,"nodeType":"InlineAssembly","src":"2866:65:14"}]},"documentation":{"id":1882,"nodeType":"StructuredDocumentation","src":"2677:88:14","text":" @dev Returns a `Uint256Slot` with member `value` located at `slot`."},"id":1892,"implemented":true,"kind":"function","modifiers":[],"name":"getUint256Slot","nameLocation":"2780:14:14","nodeType":"FunctionDefinition","parameters":{"id":1885,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1884,"mutability":"mutable","name":"slot","nameLocation":"2803:4:14","nodeType":"VariableDeclaration","scope":1892,"src":"2795:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1883,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2795:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2794:14:14"},"returnParameters":{"id":1889,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1888,"mutability":"mutable","name":"r","nameLocation":"2852:1:14","nodeType":"VariableDeclaration","scope":1892,"src":"2832:21:14","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Uint256Slot_$1839_storage_ptr","typeString":"struct StorageSlot.Uint256Slot"},"typeName":{"id":1887,"nodeType":"UserDefinedTypeName","pathNode":{"id":1886,"name":"Uint256Slot","nameLocations":["2832:11:14"],"nodeType":"IdentifierPath","referencedDeclaration":1839,"src":"2832:11:14"},"referencedDeclaration":1839,"src":"2832:11:14","typeDescriptions":{"typeIdentifier":"t_struct$_Uint256Slot_$1839_storage_ptr","typeString":"struct StorageSlot.Uint256Slot"}},"visibility":"internal"}],"src":"2831:23:14"},"scope":1948,"src":"2771:167:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1902,"nodeType":"Block","src":"3121:83:14","statements":[{"AST":{"nativeSrc":"3157:40:14","nodeType":"YulBlock","src":"3157:40:14","statements":[{"nativeSrc":"3172:14:14","nodeType":"YulAssignment","src":"3172:14:14","value":{"name":"slot","nativeSrc":"3182:4:14","nodeType":"YulIdentifier","src":"3182:4:14"},"variableNames":[{"name":"r.slot","nativeSrc":"3172:6:14","nodeType":"YulIdentifier","src":"3172:6:14"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":1899,"isOffset":false,"isSlot":true,"src":"3172:6:14","suffix":"slot","valueSize":1},{"declaration":1895,"isOffset":false,"isSlot":false,"src":"3182:4:14","valueSize":1}],"flags":["memory-safe"],"id":1901,"nodeType":"InlineAssembly","src":"3132:65:14"}]},"documentation":{"id":1893,"nodeType":"StructuredDocumentation","src":"2946:87:14","text":" @dev Returns a `Int256Slot` with member `value` located at `slot`."},"id":1903,"implemented":true,"kind":"function","modifiers":[],"name":"getInt256Slot","nameLocation":"3048:13:14","nodeType":"FunctionDefinition","parameters":{"id":1896,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1895,"mutability":"mutable","name":"slot","nameLocation":"3070:4:14","nodeType":"VariableDeclaration","scope":1903,"src":"3062:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1894,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3062:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3061:14:14"},"returnParameters":{"id":1900,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1899,"mutability":"mutable","name":"r","nameLocation":"3118:1:14","nodeType":"VariableDeclaration","scope":1903,"src":"3099:20:14","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Int256Slot_$1842_storage_ptr","typeString":"struct StorageSlot.Int256Slot"},"typeName":{"id":1898,"nodeType":"UserDefinedTypeName","pathNode":{"id":1897,"name":"Int256Slot","nameLocations":["3099:10:14"],"nodeType":"IdentifierPath","referencedDeclaration":1842,"src":"3099:10:14"},"referencedDeclaration":1842,"src":"3099:10:14","typeDescriptions":{"typeIdentifier":"t_struct$_Int256Slot_$1842_storage_ptr","typeString":"struct StorageSlot.Int256Slot"}},"visibility":"internal"}],"src":"3098:22:14"},"scope":1948,"src":"3039:165:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1913,"nodeType":"Block","src":"3387:83:14","statements":[{"AST":{"nativeSrc":"3423:40:14","nodeType":"YulBlock","src":"3423:40:14","statements":[{"nativeSrc":"3438:14:14","nodeType":"YulAssignment","src":"3438:14:14","value":{"name":"slot","nativeSrc":"3448:4:14","nodeType":"YulIdentifier","src":"3448:4:14"},"variableNames":[{"name":"r.slot","nativeSrc":"3438:6:14","nodeType":"YulIdentifier","src":"3438:6:14"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":1910,"isOffset":false,"isSlot":true,"src":"3438:6:14","suffix":"slot","valueSize":1},{"declaration":1906,"isOffset":false,"isSlot":false,"src":"3448:4:14","valueSize":1}],"flags":["memory-safe"],"id":1912,"nodeType":"InlineAssembly","src":"3398:65:14"}]},"documentation":{"id":1904,"nodeType":"StructuredDocumentation","src":"3212:87:14","text":" @dev Returns a `StringSlot` with member `value` located at `slot`."},"id":1914,"implemented":true,"kind":"function","modifiers":[],"name":"getStringSlot","nameLocation":"3314:13:14","nodeType":"FunctionDefinition","parameters":{"id":1907,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1906,"mutability":"mutable","name":"slot","nameLocation":"3336:4:14","nodeType":"VariableDeclaration","scope":1914,"src":"3328:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1905,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3328:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3327:14:14"},"returnParameters":{"id":1911,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1910,"mutability":"mutable","name":"r","nameLocation":"3384:1:14","nodeType":"VariableDeclaration","scope":1914,"src":"3365:20:14","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_StringSlot_$1845_storage_ptr","typeString":"struct StorageSlot.StringSlot"},"typeName":{"id":1909,"nodeType":"UserDefinedTypeName","pathNode":{"id":1908,"name":"StringSlot","nameLocations":["3365:10:14"],"nodeType":"IdentifierPath","referencedDeclaration":1845,"src":"3365:10:14"},"referencedDeclaration":1845,"src":"3365:10:14","typeDescriptions":{"typeIdentifier":"t_struct$_StringSlot_$1845_storage_ptr","typeString":"struct StorageSlot.StringSlot"}},"visibility":"internal"}],"src":"3364:22:14"},"scope":1948,"src":"3305:165:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1924,"nodeType":"Block","src":"3677:89:14","statements":[{"AST":{"nativeSrc":"3713:46:14","nodeType":"YulBlock","src":"3713:46:14","statements":[{"nativeSrc":"3728:20:14","nodeType":"YulAssignment","src":"3728:20:14","value":{"name":"store.slot","nativeSrc":"3738:10:14","nodeType":"YulIdentifier","src":"3738:10:14"},"variableNames":[{"name":"r.slot","nativeSrc":"3728:6:14","nodeType":"YulIdentifier","src":"3728:6:14"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":1921,"isOffset":false,"isSlot":true,"src":"3728:6:14","suffix":"slot","valueSize":1},{"declaration":1917,"isOffset":false,"isSlot":true,"src":"3738:10:14","suffix":"slot","valueSize":1}],"flags":["memory-safe"],"id":1923,"nodeType":"InlineAssembly","src":"3688:71:14"}]},"documentation":{"id":1915,"nodeType":"StructuredDocumentation","src":"3478:103:14","text":" @dev Returns an `StringSlot` representation of the string storage pointer `store`."},"id":1925,"implemented":true,"kind":"function","modifiers":[],"name":"getStringSlot","nameLocation":"3596:13:14","nodeType":"FunctionDefinition","parameters":{"id":1918,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1917,"mutability":"mutable","name":"store","nameLocation":"3625:5:14","nodeType":"VariableDeclaration","scope":1925,"src":"3610:20:14","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":1916,"name":"string","nodeType":"ElementaryTypeName","src":"3610:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3609:22:14"},"returnParameters":{"id":1922,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1921,"mutability":"mutable","name":"r","nameLocation":"3674:1:14","nodeType":"VariableDeclaration","scope":1925,"src":"3655:20:14","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_StringSlot_$1845_storage_ptr","typeString":"struct StorageSlot.StringSlot"},"typeName":{"id":1920,"nodeType":"UserDefinedTypeName","pathNode":{"id":1919,"name":"StringSlot","nameLocations":["3655:10:14"],"nodeType":"IdentifierPath","referencedDeclaration":1845,"src":"3655:10:14"},"referencedDeclaration":1845,"src":"3655:10:14","typeDescriptions":{"typeIdentifier":"t_struct$_StringSlot_$1845_storage_ptr","typeString":"struct StorageSlot.StringSlot"}},"visibility":"internal"}],"src":"3654:22:14"},"scope":1948,"src":"3587:179:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1935,"nodeType":"Block","src":"3946:83:14","statements":[{"AST":{"nativeSrc":"3982:40:14","nodeType":"YulBlock","src":"3982:40:14","statements":[{"nativeSrc":"3997:14:14","nodeType":"YulAssignment","src":"3997:14:14","value":{"name":"slot","nativeSrc":"4007:4:14","nodeType":"YulIdentifier","src":"4007:4:14"},"variableNames":[{"name":"r.slot","nativeSrc":"3997:6:14","nodeType":"YulIdentifier","src":"3997:6:14"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":1932,"isOffset":false,"isSlot":true,"src":"3997:6:14","suffix":"slot","valueSize":1},{"declaration":1928,"isOffset":false,"isSlot":false,"src":"4007:4:14","valueSize":1}],"flags":["memory-safe"],"id":1934,"nodeType":"InlineAssembly","src":"3957:65:14"}]},"documentation":{"id":1926,"nodeType":"StructuredDocumentation","src":"3774:86:14","text":" @dev Returns a `BytesSlot` with member `value` located at `slot`."},"id":1936,"implemented":true,"kind":"function","modifiers":[],"name":"getBytesSlot","nameLocation":"3875:12:14","nodeType":"FunctionDefinition","parameters":{"id":1929,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1928,"mutability":"mutable","name":"slot","nameLocation":"3896:4:14","nodeType":"VariableDeclaration","scope":1936,"src":"3888:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1927,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3888:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3887:14:14"},"returnParameters":{"id":1933,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1932,"mutability":"mutable","name":"r","nameLocation":"3943:1:14","nodeType":"VariableDeclaration","scope":1936,"src":"3925:19:14","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_BytesSlot_$1848_storage_ptr","typeString":"struct StorageSlot.BytesSlot"},"typeName":{"id":1931,"nodeType":"UserDefinedTypeName","pathNode":{"id":1930,"name":"BytesSlot","nameLocations":["3925:9:14"],"nodeType":"IdentifierPath","referencedDeclaration":1848,"src":"3925:9:14"},"referencedDeclaration":1848,"src":"3925:9:14","typeDescriptions":{"typeIdentifier":"t_struct$_BytesSlot_$1848_storage_ptr","typeString":"struct StorageSlot.BytesSlot"}},"visibility":"internal"}],"src":"3924:21:14"},"scope":1948,"src":"3866:163:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1946,"nodeType":"Block","src":"4231:89:14","statements":[{"AST":{"nativeSrc":"4267:46:14","nodeType":"YulBlock","src":"4267:46:14","statements":[{"nativeSrc":"4282:20:14","nodeType":"YulAssignment","src":"4282:20:14","value":{"name":"store.slot","nativeSrc":"4292:10:14","nodeType":"YulIdentifier","src":"4292:10:14"},"variableNames":[{"name":"r.slot","nativeSrc":"4282:6:14","nodeType":"YulIdentifier","src":"4282:6:14"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":1943,"isOffset":false,"isSlot":true,"src":"4282:6:14","suffix":"slot","valueSize":1},{"declaration":1939,"isOffset":false,"isSlot":true,"src":"4292:10:14","suffix":"slot","valueSize":1}],"flags":["memory-safe"],"id":1945,"nodeType":"InlineAssembly","src":"4242:71:14"}]},"documentation":{"id":1937,"nodeType":"StructuredDocumentation","src":"4037:101:14","text":" @dev Returns an `BytesSlot` representation of the bytes storage pointer `store`."},"id":1947,"implemented":true,"kind":"function","modifiers":[],"name":"getBytesSlot","nameLocation":"4153:12:14","nodeType":"FunctionDefinition","parameters":{"id":1940,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1939,"mutability":"mutable","name":"store","nameLocation":"4180:5:14","nodeType":"VariableDeclaration","scope":1947,"src":"4166:19:14","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":1938,"name":"bytes","nodeType":"ElementaryTypeName","src":"4166:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4165:21:14"},"returnParameters":{"id":1944,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1943,"mutability":"mutable","name":"r","nameLocation":"4228:1:14","nodeType":"VariableDeclaration","scope":1947,"src":"4210:19:14","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_BytesSlot_$1848_storage_ptr","typeString":"struct StorageSlot.BytesSlot"},"typeName":{"id":1942,"nodeType":"UserDefinedTypeName","pathNode":{"id":1941,"name":"BytesSlot","nameLocations":["4210:9:14"],"nodeType":"IdentifierPath","referencedDeclaration":1848,"src":"4210:9:14"},"referencedDeclaration":1848,"src":"4210:9:14","typeDescriptions":{"typeIdentifier":"t_struct$_BytesSlot_$1848_storage_ptr","typeString":"struct StorageSlot.BytesSlot"}},"visibility":"internal"}],"src":"4209:21:14"},"scope":1948,"src":"4144:176:14","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":1949,"src":"1440:2883:14","usedErrors":[],"usedEvents":[]}],"src":"197:4128:14"},"id":14},"@openzeppelin/contracts/utils/Strings.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Strings.sol","exportedSymbols":{"Math":[5668],"SafeCast":[7433],"SignedMath":[7577],"Strings":[3350]},"id":3351,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1950,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"104:24:15"},{"absolutePath":"@openzeppelin/contracts/utils/math/Math.sol","file":"./math/Math.sol","id":1952,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3351,"sourceUnit":5669,"src":"132:37:15","symbolAliases":[{"foreign":{"id":1951,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5668,"src":"140:4:15","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/math/SafeCast.sol","file":"./math/SafeCast.sol","id":1954,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3351,"sourceUnit":7434,"src":"171:45:15","symbolAliases":[{"foreign":{"id":1953,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7433,"src":"179:8:15","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/math/SignedMath.sol","file":"./math/SignedMath.sol","id":1956,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3351,"sourceUnit":7578,"src":"218:49:15","symbolAliases":[{"foreign":{"id":1955,"name":"SignedMath","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7577,"src":"226:10:15","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"Strings","contractDependencies":[],"contractKind":"library","documentation":{"id":1957,"nodeType":"StructuredDocumentation","src":"271:36:15","text":" @dev String operations."},"fullyImplemented":true,"id":3350,"linearizedBaseContracts":[3350],"name":"Strings","nameLocation":"317:7:15","nodeType":"ContractDefinition","nodes":[{"global":false,"id":1959,"libraryName":{"id":1958,"name":"SafeCast","nameLocations":["338:8:15"],"nodeType":"IdentifierPath","referencedDeclaration":7433,"src":"338:8:15"},"nodeType":"UsingForDirective","src":"332:21:15"},{"constant":true,"id":1962,"mutability":"constant","name":"HEX_DIGITS","nameLocation":"386:10:15","nodeType":"VariableDeclaration","scope":3350,"src":"361:56:15","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"},"typeName":{"id":1960,"name":"bytes16","nodeType":"ElementaryTypeName","src":"361:7:15","typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"}},"value":{"hexValue":"30313233343536373839616263646566","id":1961,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"399:18:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_cb29997ed99ead0db59ce4d12b7d3723198c827273e5796737c926d78019c39f","typeString":"literal_string \"0123456789abcdef\""},"value":"0123456789abcdef"},"visibility":"private"},{"constant":true,"id":1965,"mutability":"constant","name":"ADDRESS_LENGTH","nameLocation":"447:14:15","nodeType":"VariableDeclaration","scope":3350,"src":"424:42:15","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":1963,"name":"uint8","nodeType":"ElementaryTypeName","src":"424:5:15","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"value":{"hexValue":"3230","id":1964,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"464:2:15","typeDescriptions":{"typeIdentifier":"t_rational_20_by_1","typeString":"int_const 20"},"value":"20"},"visibility":"private"},{"constant":true,"id":2001,"mutability":"constant","name":"SPECIAL_CHARS_LOOKUP","nameLocation":"498:20:15","nodeType":"VariableDeclaration","scope":3350,"src":"473:309:15","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1966,"name":"uint256","nodeType":"ElementaryTypeName","src":"473:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"commonType":{"typeIdentifier":"t_rational_4951760157141521116776380160_by_1","typeString":"int_const 4951760157141521116776380160"},"id":2000,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_rational_17179883264_by_1","typeString":"int_const 17179883264"},"id":1995,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_rational_14080_by_1","typeString":"int_const 14080"},"id":1990,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_rational_5888_by_1","typeString":"int_const 5888"},"id":1985,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_rational_1792_by_1","typeString":"int_const 1792"},"id":1980,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_rational_768_by_1","typeString":"int_const 768"},"id":1975,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"},"id":1969,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":1967,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"531:1:15","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"30783038","id":1968,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"536:4:15","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"0x08"},"src":"531:9:15","typeDescriptions":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"}}],"id":1970,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"530:11:15","typeDescriptions":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_512_by_1","typeString":"int_const 512"},"id":1973,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":1971,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"571:1:15","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"30783039","id":1972,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"576:4:15","typeDescriptions":{"typeIdentifier":"t_rational_9_by_1","typeString":"int_const 9"},"value":"0x09"},"src":"571:9:15","typeDescriptions":{"typeIdentifier":"t_rational_512_by_1","typeString":"int_const 512"}}],"id":1974,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"570:11:15","typeDescriptions":{"typeIdentifier":"t_rational_512_by_1","typeString":"int_const 512"}},"src":"530:51:15","typeDescriptions":{"typeIdentifier":"t_rational_768_by_1","typeString":"int_const 768"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_1024_by_1","typeString":"int_const 1024"},"id":1978,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":1976,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"605:1:15","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"30783061","id":1977,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"610:4:15","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"0x0a"},"src":"605:9:15","typeDescriptions":{"typeIdentifier":"t_rational_1024_by_1","typeString":"int_const 1024"}}],"id":1979,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"604:11:15","typeDescriptions":{"typeIdentifier":"t_rational_1024_by_1","typeString":"int_const 1024"}},"src":"530:85:15","typeDescriptions":{"typeIdentifier":"t_rational_1792_by_1","typeString":"int_const 1792"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_4096_by_1","typeString":"int_const 4096"},"id":1983,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":1981,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"643:1:15","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"30783063","id":1982,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"648:4:15","typeDescriptions":{"typeIdentifier":"t_rational_12_by_1","typeString":"int_const 12"},"value":"0x0c"},"src":"643:9:15","typeDescriptions":{"typeIdentifier":"t_rational_4096_by_1","typeString":"int_const 4096"}}],"id":1984,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"642:11:15","typeDescriptions":{"typeIdentifier":"t_rational_4096_by_1","typeString":"int_const 4096"}},"src":"530:123:15","typeDescriptions":{"typeIdentifier":"t_rational_5888_by_1","typeString":"int_const 5888"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_8192_by_1","typeString":"int_const 8192"},"id":1988,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":1986,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"683:1:15","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"30783064","id":1987,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"688:4:15","typeDescriptions":{"typeIdentifier":"t_rational_13_by_1","typeString":"int_const 13"},"value":"0x0d"},"src":"683:9:15","typeDescriptions":{"typeIdentifier":"t_rational_8192_by_1","typeString":"int_const 8192"}}],"id":1989,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"682:11:15","typeDescriptions":{"typeIdentifier":"t_rational_8192_by_1","typeString":"int_const 8192"}},"src":"530:163:15","typeDescriptions":{"typeIdentifier":"t_rational_14080_by_1","typeString":"int_const 14080"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_17179869184_by_1","typeString":"int_const 17179869184"},"id":1993,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":1991,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"729:1:15","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"30783232","id":1992,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"734:4:15","typeDescriptions":{"typeIdentifier":"t_rational_34_by_1","typeString":"int_const 34"},"value":"0x22"},"src":"729:9:15","typeDescriptions":{"typeIdentifier":"t_rational_17179869184_by_1","typeString":"int_const 17179869184"}}],"id":1994,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"728:11:15","typeDescriptions":{"typeIdentifier":"t_rational_17179869184_by_1","typeString":"int_const 17179869184"}},"src":"530:209:15","typeDescriptions":{"typeIdentifier":"t_rational_17179883264_by_1","typeString":"int_const 17179883264"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_4951760157141521099596496896_by_1","typeString":"int_const 4951760157141521099596496896"},"id":1998,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":1996,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"772:1:15","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"30783563","id":1997,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"777:4:15","typeDescriptions":{"typeIdentifier":"t_rational_92_by_1","typeString":"int_const 92"},"value":"0x5c"},"src":"772:9:15","typeDescriptions":{"typeIdentifier":"t_rational_4951760157141521099596496896_by_1","typeString":"int_const 4951760157141521099596496896"}}],"id":1999,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"771:11:15","typeDescriptions":{"typeIdentifier":"t_rational_4951760157141521099596496896_by_1","typeString":"int_const 4951760157141521099596496896"}},"src":"530:252:15","typeDescriptions":{"typeIdentifier":"t_rational_4951760157141521116776380160_by_1","typeString":"int_const 4951760157141521116776380160"}},"visibility":"private"},{"documentation":{"id":2002,"nodeType":"StructuredDocumentation","src":"804:83:15","text":" @dev The `value` string doesn't fit in the specified `length`."},"errorSelector":"e22e27eb","id":2008,"name":"StringsInsufficientHexLength","nameLocation":"899:28:15","nodeType":"ErrorDefinition","parameters":{"id":2007,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2004,"mutability":"mutable","name":"value","nameLocation":"936:5:15","nodeType":"VariableDeclaration","scope":2008,"src":"928:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2003,"name":"uint256","nodeType":"ElementaryTypeName","src":"928:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2006,"mutability":"mutable","name":"length","nameLocation":"951:6:15","nodeType":"VariableDeclaration","scope":2008,"src":"943:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2005,"name":"uint256","nodeType":"ElementaryTypeName","src":"943:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"927:31:15"},"src":"893:66:15"},{"documentation":{"id":2009,"nodeType":"StructuredDocumentation","src":"967:110:15","text":" @dev The string being parsed contains characters that are not in scope of the given base."},"errorSelector":"94e2737e","id":2011,"name":"StringsInvalidChar","nameLocation":"1089:18:15","nodeType":"ErrorDefinition","parameters":{"id":2010,"nodeType":"ParameterList","parameters":[],"src":"1107:2:15"},"src":"1083:27:15"},{"documentation":{"id":2012,"nodeType":"StructuredDocumentation","src":"1118:86:15","text":" @dev The string being parsed is not a properly formatted address."},"errorSelector":"1d15ae44","id":2014,"name":"StringsInvalidAddressFormat","nameLocation":"1216:27:15","nodeType":"ErrorDefinition","parameters":{"id":2013,"nodeType":"ParameterList","parameters":[],"src":"1243:2:15"},"src":"1210:36:15"},{"body":{"id":2061,"nodeType":"Block","src":"1423:579:15","statements":[{"id":2060,"nodeType":"UncheckedBlock","src":"1434:561:15","statements":[{"assignments":[2023],"declarations":[{"constant":false,"id":2023,"mutability":"mutable","name":"length","nameLocation":"1467:6:15","nodeType":"VariableDeclaration","scope":2060,"src":"1459:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2022,"name":"uint256","nodeType":"ElementaryTypeName","src":"1459:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2030,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2029,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":2026,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2017,"src":"1487:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":2024,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5668,"src":"1476:4:15","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$5668_$","typeString":"type(library Math)"}},"id":2025,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1481:5:15","memberName":"log10","nodeType":"MemberAccess","referencedDeclaration":5500,"src":"1476:10:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":2027,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1476:17:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":2028,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1496:1:15","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1476:21:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1459:38:15"},{"assignments":[2032],"declarations":[{"constant":false,"id":2032,"mutability":"mutable","name":"buffer","nameLocation":"1526:6:15","nodeType":"VariableDeclaration","scope":2060,"src":"1512:20:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2031,"name":"string","nodeType":"ElementaryTypeName","src":"1512:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"id":2037,"initialValue":{"arguments":[{"id":2035,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2023,"src":"1546:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2034,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"1535:10:15","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) pure returns (string memory)"},"typeName":{"id":2033,"name":"string","nodeType":"ElementaryTypeName","src":"1539:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}}},"id":2036,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1535:18:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"nodeType":"VariableDeclarationStatement","src":"1512:41:15"},{"assignments":[2039],"declarations":[{"constant":false,"id":2039,"mutability":"mutable","name":"ptr","nameLocation":"1576:3:15","nodeType":"VariableDeclaration","scope":2060,"src":"1568:11:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2038,"name":"uint256","nodeType":"ElementaryTypeName","src":"1568:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2040,"nodeType":"VariableDeclarationStatement","src":"1568:11:15"},{"AST":{"nativeSrc":"1619:69:15","nodeType":"YulBlock","src":"1619:69:15","statements":[{"nativeSrc":"1638:35:15","nodeType":"YulAssignment","src":"1638:35:15","value":{"arguments":[{"name":"buffer","nativeSrc":"1649:6:15","nodeType":"YulIdentifier","src":"1649:6:15"},{"arguments":[{"kind":"number","nativeSrc":"1661:2:15","nodeType":"YulLiteral","src":"1661:2:15","type":"","value":"32"},{"name":"length","nativeSrc":"1665:6:15","nodeType":"YulIdentifier","src":"1665:6:15"}],"functionName":{"name":"add","nativeSrc":"1657:3:15","nodeType":"YulIdentifier","src":"1657:3:15"},"nativeSrc":"1657:15:15","nodeType":"YulFunctionCall","src":"1657:15:15"}],"functionName":{"name":"add","nativeSrc":"1645:3:15","nodeType":"YulIdentifier","src":"1645:3:15"},"nativeSrc":"1645:28:15","nodeType":"YulFunctionCall","src":"1645:28:15"},"variableNames":[{"name":"ptr","nativeSrc":"1638:3:15","nodeType":"YulIdentifier","src":"1638:3:15"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":2032,"isOffset":false,"isSlot":false,"src":"1649:6:15","valueSize":1},{"declaration":2023,"isOffset":false,"isSlot":false,"src":"1665:6:15","valueSize":1},{"declaration":2039,"isOffset":false,"isSlot":false,"src":"1638:3:15","valueSize":1}],"flags":["memory-safe"],"id":2041,"nodeType":"InlineAssembly","src":"1594:94:15"},{"body":{"id":2056,"nodeType":"Block","src":"1715:241:15","statements":[{"expression":{"id":2044,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"--","prefix":false,"src":"1734:5:15","subExpression":{"id":2043,"name":"ptr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2039,"src":"1734:3:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2045,"nodeType":"ExpressionStatement","src":"1734:5:15"},{"AST":{"nativeSrc":"1783:88:15","nodeType":"YulBlock","src":"1783:88:15","statements":[{"expression":{"arguments":[{"name":"ptr","nativeSrc":"1814:3:15","nodeType":"YulIdentifier","src":"1814:3:15"},{"arguments":[{"arguments":[{"name":"value","nativeSrc":"1828:5:15","nodeType":"YulIdentifier","src":"1828:5:15"},{"kind":"number","nativeSrc":"1835:2:15","nodeType":"YulLiteral","src":"1835:2:15","type":"","value":"10"}],"functionName":{"name":"mod","nativeSrc":"1824:3:15","nodeType":"YulIdentifier","src":"1824:3:15"},"nativeSrc":"1824:14:15","nodeType":"YulFunctionCall","src":"1824:14:15"},{"name":"HEX_DIGITS","nativeSrc":"1840:10:15","nodeType":"YulIdentifier","src":"1840:10:15"}],"functionName":{"name":"byte","nativeSrc":"1819:4:15","nodeType":"YulIdentifier","src":"1819:4:15"},"nativeSrc":"1819:32:15","nodeType":"YulFunctionCall","src":"1819:32:15"}],"functionName":{"name":"mstore8","nativeSrc":"1806:7:15","nodeType":"YulIdentifier","src":"1806:7:15"},"nativeSrc":"1806:46:15","nodeType":"YulFunctionCall","src":"1806:46:15"},"nativeSrc":"1806:46:15","nodeType":"YulExpressionStatement","src":"1806:46:15"}]},"evmVersion":"paris","externalReferences":[{"declaration":1962,"isOffset":false,"isSlot":false,"src":"1840:10:15","valueSize":1},{"declaration":2039,"isOffset":false,"isSlot":false,"src":"1814:3:15","valueSize":1},{"declaration":2017,"isOffset":false,"isSlot":false,"src":"1828:5:15","valueSize":1}],"flags":["memory-safe"],"id":2046,"nodeType":"InlineAssembly","src":"1758:113:15"},{"expression":{"id":2049,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2047,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2017,"src":"1889:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"hexValue":"3130","id":2048,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1898:2:15","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"src":"1889:11:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2050,"nodeType":"ExpressionStatement","src":"1889:11:15"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2053,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2051,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2017,"src":"1923:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2052,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1932:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1923:10:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2055,"nodeType":"IfStatement","src":"1919:21:15","trueBody":{"id":2054,"nodeType":"Break","src":"1935:5:15"}}]},"condition":{"hexValue":"74727565","id":2042,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1709:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"id":2057,"nodeType":"WhileStatement","src":"1702:254:15"},{"expression":{"id":2058,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2032,"src":"1977:6:15","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":2021,"id":2059,"nodeType":"Return","src":"1970:13:15"}]}]},"documentation":{"id":2015,"nodeType":"StructuredDocumentation","src":"1254:92:15","text":" @dev Converts a `uint256` to its ASCII `string` decimal representation."},"id":2062,"implemented":true,"kind":"function","modifiers":[],"name":"toString","nameLocation":"1361:8:15","nodeType":"FunctionDefinition","parameters":{"id":2018,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2017,"mutability":"mutable","name":"value","nameLocation":"1378:5:15","nodeType":"VariableDeclaration","scope":2062,"src":"1370:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2016,"name":"uint256","nodeType":"ElementaryTypeName","src":"1370:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1369:15:15"},"returnParameters":{"id":2021,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2020,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2062,"src":"1408:13:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2019,"name":"string","nodeType":"ElementaryTypeName","src":"1408:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1407:15:15"},"scope":3350,"src":"1352:650:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2087,"nodeType":"Block","src":"2183:94:15","statements":[{"expression":{"arguments":[{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":2075,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2073,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2065,"src":"2215:5:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"30","id":2074,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2223:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2215:9:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"","id":2077,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2233:2:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""},"id":2078,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"2215:20:15","trueExpression":{"hexValue":"2d","id":2076,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2227:3:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_d3b8281179950f98149eefdb158d0e1acb56f56e8e343aa9fefafa7e36959561","typeString":"literal_string \"-\""},"value":"-"},"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"arguments":[{"arguments":[{"id":2082,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2065,"src":"2261:5:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"expression":{"id":2080,"name":"SignedMath","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7577,"src":"2246:10:15","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SignedMath_$7577_$","typeString":"type(library SignedMath)"}},"id":2081,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2257:3:15","memberName":"abs","nodeType":"MemberAccess","referencedDeclaration":7576,"src":"2246:14:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_int256_$returns$_t_uint256_$","typeString":"function (int256) pure returns (uint256)"}},"id":2083,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2246:21:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2079,"name":"toString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2062,"src":"2237:8:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) pure returns (string memory)"}},"id":2084,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2237:31:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"expression":{"id":2071,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2201:6:15","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":2070,"name":"string","nodeType":"ElementaryTypeName","src":"2201:6:15","typeDescriptions":{}}},"id":2072,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2208:6:15","memberName":"concat","nodeType":"MemberAccess","src":"2201:13:15","typeDescriptions":{"typeIdentifier":"t_function_stringconcat_pure$__$returns$_t_string_memory_ptr_$","typeString":"function () pure returns (string memory)"}},"id":2085,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2201:68:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":2069,"id":2086,"nodeType":"Return","src":"2194:75:15"}]},"documentation":{"id":2063,"nodeType":"StructuredDocumentation","src":"2010:91:15","text":" @dev Converts a `int256` to its ASCII `string` decimal representation."},"id":2088,"implemented":true,"kind":"function","modifiers":[],"name":"toStringSigned","nameLocation":"2116:14:15","nodeType":"FunctionDefinition","parameters":{"id":2066,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2065,"mutability":"mutable","name":"value","nameLocation":"2138:5:15","nodeType":"VariableDeclaration","scope":2088,"src":"2131:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2064,"name":"int256","nodeType":"ElementaryTypeName","src":"2131:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"2130:14:15"},"returnParameters":{"id":2069,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2068,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2088,"src":"2168:13:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2067,"name":"string","nodeType":"ElementaryTypeName","src":"2168:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2167:15:15"},"scope":3350,"src":"2107:170:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2107,"nodeType":"Block","src":"2461:104:15","statements":[{"id":2106,"nodeType":"UncheckedBlock","src":"2472:86:15","statements":[{"expression":{"arguments":[{"id":2097,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2091,"src":"2516:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2103,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":2100,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2091,"src":"2535:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":2098,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5668,"src":"2523:4:15","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$5668_$","typeString":"type(library Math)"}},"id":2099,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2528:6:15","memberName":"log256","nodeType":"MemberAccess","referencedDeclaration":5611,"src":"2523:11:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":2101,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2523:18:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":2102,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2544:1:15","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"2523:22:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2096,"name":"toHexString","nodeType":"Identifier","overloadedDeclarations":[2108,2191,2211],"referencedDeclaration":2191,"src":"2504:11:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256,uint256) pure returns (string memory)"}},"id":2104,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2504:42:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":2095,"id":2105,"nodeType":"Return","src":"2497:49:15"}]}]},"documentation":{"id":2089,"nodeType":"StructuredDocumentation","src":"2285:96:15","text":" @dev Converts a `uint256` to its ASCII `string` hexadecimal representation."},"id":2108,"implemented":true,"kind":"function","modifiers":[],"name":"toHexString","nameLocation":"2396:11:15","nodeType":"FunctionDefinition","parameters":{"id":2092,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2091,"mutability":"mutable","name":"value","nameLocation":"2416:5:15","nodeType":"VariableDeclaration","scope":2108,"src":"2408:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2090,"name":"uint256","nodeType":"ElementaryTypeName","src":"2408:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2407:15:15"},"returnParameters":{"id":2095,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2094,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2108,"src":"2446:13:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2093,"name":"string","nodeType":"ElementaryTypeName","src":"2446:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2445:15:15"},"scope":3350,"src":"2387:178:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2190,"nodeType":"Block","src":"2783:448:15","statements":[{"assignments":[2119],"declarations":[{"constant":false,"id":2119,"mutability":"mutable","name":"localValue","nameLocation":"2802:10:15","nodeType":"VariableDeclaration","scope":2190,"src":"2794:18:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2118,"name":"uint256","nodeType":"ElementaryTypeName","src":"2794:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2121,"initialValue":{"id":2120,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2111,"src":"2815:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2794:26:15"},{"assignments":[2123],"declarations":[{"constant":false,"id":2123,"mutability":"mutable","name":"buffer","nameLocation":"2844:6:15","nodeType":"VariableDeclaration","scope":2190,"src":"2831:19:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2122,"name":"bytes","nodeType":"ElementaryTypeName","src":"2831:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":2132,"initialValue":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2130,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2128,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":2126,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2863:1:15","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2127,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2113,"src":"2867:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2863:10:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"32","id":2129,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2876:1:15","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"2863:14:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2125,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"2853:9:15","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$","typeString":"function (uint256) pure returns (bytes memory)"},"typeName":{"id":2124,"name":"bytes","nodeType":"ElementaryTypeName","src":"2857:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}}},"id":2131,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2853:25:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"2831:47:15"},{"expression":{"id":2137,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2133,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2123,"src":"2889:6:15","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2135,"indexExpression":{"hexValue":"30","id":2134,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2896:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2889:9:15","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"30","id":2136,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2901:3:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_044852b2a670ade5407e78fb2863c51de9fcb96542a07186fe3aeda6bb8a116d","typeString":"literal_string \"0\""},"value":"0"},"src":"2889:15:15","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":2138,"nodeType":"ExpressionStatement","src":"2889:15:15"},{"expression":{"id":2143,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2139,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2123,"src":"2915:6:15","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2141,"indexExpression":{"hexValue":"31","id":2140,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2922:1:15","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2915:9:15","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"78","id":2142,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2927:3:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_7521d1cadbcfa91eec65aa16715b94ffc1c9654ba57ea2ef1a2127bca1127a83","typeString":"literal_string \"x\""},"value":"x"},"src":"2915:15:15","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":2144,"nodeType":"ExpressionStatement","src":"2915:15:15"},{"body":{"id":2173,"nodeType":"Block","src":"2986:98:15","statements":[{"expression":{"id":2167,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2159,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2123,"src":"3001:6:15","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2161,"indexExpression":{"id":2160,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2146,"src":"3008:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"3001:9:15","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"baseExpression":{"id":2162,"name":"HEX_DIGITS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1962,"src":"3013:10:15","typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"}},"id":2166,"indexExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2165,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2163,"name":"localValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2119,"src":"3024:10:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"hexValue":"307866","id":2164,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3037:3:15","typeDescriptions":{"typeIdentifier":"t_rational_15_by_1","typeString":"int_const 15"},"value":"0xf"},"src":"3024:16:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3013:28:15","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"src":"3001:40:15","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":2168,"nodeType":"ExpressionStatement","src":"3001:40:15"},{"expression":{"id":2171,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2169,"name":"localValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2119,"src":"3056:10:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"34","id":2170,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3071:1:15","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"3056:16:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2172,"nodeType":"ExpressionStatement","src":"3056:16:15"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2155,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2153,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2146,"src":"2974:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"31","id":2154,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2978:1:15","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"2974:5:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2174,"initializationExpression":{"assignments":[2146],"declarations":[{"constant":false,"id":2146,"mutability":"mutable","name":"i","nameLocation":"2954:1:15","nodeType":"VariableDeclaration","scope":2174,"src":"2946:9:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2145,"name":"uint256","nodeType":"ElementaryTypeName","src":"2946:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2152,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2151,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2149,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":2147,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2958:1:15","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2148,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2113,"src":"2962:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2958:10:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":2150,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2971:1:15","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"2958:14:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2946:26:15"},"isSimpleCounterLoop":false,"loopExpression":{"expression":{"id":2157,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"--","prefix":true,"src":"2981:3:15","subExpression":{"id":2156,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2146,"src":"2983:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2158,"nodeType":"ExpressionStatement","src":"2981:3:15"},"nodeType":"ForStatement","src":"2941:143:15"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2177,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2175,"name":"localValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2119,"src":"3098:10:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":2176,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3112:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3098:15:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2184,"nodeType":"IfStatement","src":"3094:98:15","trueBody":{"id":2183,"nodeType":"Block","src":"3115:77:15","statements":[{"errorCall":{"arguments":[{"id":2179,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2111,"src":"3166:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2180,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2113,"src":"3173:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2178,"name":"StringsInsufficientHexLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2008,"src":"3137:28:15","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$_t_uint256_$returns$_t_error_$","typeString":"function (uint256,uint256) pure returns (error)"}},"id":2181,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3137:43:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":2182,"nodeType":"RevertStatement","src":"3130:50:15"}]}},{"expression":{"arguments":[{"id":2187,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2123,"src":"3216:6:15","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2186,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3209:6:15","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":2185,"name":"string","nodeType":"ElementaryTypeName","src":"3209:6:15","typeDescriptions":{}}},"id":2188,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3209:14:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":2117,"id":2189,"nodeType":"Return","src":"3202:21:15"}]},"documentation":{"id":2109,"nodeType":"StructuredDocumentation","src":"2573:114:15","text":" @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length."},"id":2191,"implemented":true,"kind":"function","modifiers":[],"name":"toHexString","nameLocation":"2702:11:15","nodeType":"FunctionDefinition","parameters":{"id":2114,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2111,"mutability":"mutable","name":"value","nameLocation":"2722:5:15","nodeType":"VariableDeclaration","scope":2191,"src":"2714:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2110,"name":"uint256","nodeType":"ElementaryTypeName","src":"2714:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2113,"mutability":"mutable","name":"length","nameLocation":"2737:6:15","nodeType":"VariableDeclaration","scope":2191,"src":"2729:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2112,"name":"uint256","nodeType":"ElementaryTypeName","src":"2729:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2713:31:15"},"returnParameters":{"id":2117,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2116,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2191,"src":"2768:13:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2115,"name":"string","nodeType":"ElementaryTypeName","src":"2768:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2767:15:15"},"scope":3350,"src":"2693:538:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2210,"nodeType":"Block","src":"3469:77:15","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[{"id":2204,"name":"addr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2194,"src":"3515:4:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2203,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3507:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":2202,"name":"uint160","nodeType":"ElementaryTypeName","src":"3507:7:15","typeDescriptions":{}}},"id":2205,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3507:13:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":2201,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3499:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":2200,"name":"uint256","nodeType":"ElementaryTypeName","src":"3499:7:15","typeDescriptions":{}}},"id":2206,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3499:22:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2207,"name":"ADDRESS_LENGTH","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1965,"src":"3523:14:15","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint8","typeString":"uint8"}],"id":2199,"name":"toHexString","nodeType":"Identifier","overloadedDeclarations":[2108,2191,2211],"referencedDeclaration":2191,"src":"3487:11:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256,uint256) pure returns (string memory)"}},"id":2208,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3487:51:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":2198,"id":2209,"nodeType":"Return","src":"3480:58:15"}]},"documentation":{"id":2192,"nodeType":"StructuredDocumentation","src":"3239:151:15","text":" @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal\n representation."},"id":2211,"implemented":true,"kind":"function","modifiers":[],"name":"toHexString","nameLocation":"3405:11:15","nodeType":"FunctionDefinition","parameters":{"id":2195,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2194,"mutability":"mutable","name":"addr","nameLocation":"3425:4:15","nodeType":"VariableDeclaration","scope":2211,"src":"3417:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2193,"name":"address","nodeType":"ElementaryTypeName","src":"3417:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3416:14:15"},"returnParameters":{"id":2198,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2197,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2211,"src":"3454:13:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2196,"name":"string","nodeType":"ElementaryTypeName","src":"3454:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3453:15:15"},"scope":3350,"src":"3396:150:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2275,"nodeType":"Block","src":"3809:660:15","statements":[{"assignments":[2220],"declarations":[{"constant":false,"id":2220,"mutability":"mutable","name":"buffer","nameLocation":"3833:6:15","nodeType":"VariableDeclaration","scope":2275,"src":"3820:19:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2219,"name":"bytes","nodeType":"ElementaryTypeName","src":"3820:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":2227,"initialValue":{"arguments":[{"arguments":[{"id":2224,"name":"addr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2214,"src":"3860:4:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2223,"name":"toHexString","nodeType":"Identifier","overloadedDeclarations":[2108,2191,2211],"referencedDeclaration":2211,"src":"3848:11:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_address_$returns$_t_string_memory_ptr_$","typeString":"function (address) pure returns (string memory)"}},"id":2225,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3848:17:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2222,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3842:5:15","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2221,"name":"bytes","nodeType":"ElementaryTypeName","src":"3842:5:15","typeDescriptions":{}}},"id":2226,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3842:24:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"3820:46:15"},{"assignments":[2229],"declarations":[{"constant":false,"id":2229,"mutability":"mutable","name":"hashValue","nameLocation":"3962:9:15","nodeType":"VariableDeclaration","scope":2275,"src":"3954:17:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2228,"name":"uint256","nodeType":"ElementaryTypeName","src":"3954:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2230,"nodeType":"VariableDeclarationStatement","src":"3954:17:15"},{"AST":{"nativeSrc":"4007:80:15","nodeType":"YulBlock","src":"4007:80:15","statements":[{"nativeSrc":"4022:54:15","nodeType":"YulAssignment","src":"4022:54:15","value":{"arguments":[{"kind":"number","nativeSrc":"4039:2:15","nodeType":"YulLiteral","src":"4039:2:15","type":"","value":"96"},{"arguments":[{"arguments":[{"name":"buffer","nativeSrc":"4057:6:15","nodeType":"YulIdentifier","src":"4057:6:15"},{"kind":"number","nativeSrc":"4065:4:15","nodeType":"YulLiteral","src":"4065:4:15","type":"","value":"0x22"}],"functionName":{"name":"add","nativeSrc":"4053:3:15","nodeType":"YulIdentifier","src":"4053:3:15"},"nativeSrc":"4053:17:15","nodeType":"YulFunctionCall","src":"4053:17:15"},{"kind":"number","nativeSrc":"4072:2:15","nodeType":"YulLiteral","src":"4072:2:15","type":"","value":"40"}],"functionName":{"name":"keccak256","nativeSrc":"4043:9:15","nodeType":"YulIdentifier","src":"4043:9:15"},"nativeSrc":"4043:32:15","nodeType":"YulFunctionCall","src":"4043:32:15"}],"functionName":{"name":"shr","nativeSrc":"4035:3:15","nodeType":"YulIdentifier","src":"4035:3:15"},"nativeSrc":"4035:41:15","nodeType":"YulFunctionCall","src":"4035:41:15"},"variableNames":[{"name":"hashValue","nativeSrc":"4022:9:15","nodeType":"YulIdentifier","src":"4022:9:15"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":2220,"isOffset":false,"isSlot":false,"src":"4057:6:15","valueSize":1},{"declaration":2229,"isOffset":false,"isSlot":false,"src":"4022:9:15","valueSize":1}],"flags":["memory-safe"],"id":2231,"nodeType":"InlineAssembly","src":"3982:105:15"},{"body":{"id":2268,"nodeType":"Block","src":"4132:298:15","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2255,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2246,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2244,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2242,"name":"hashValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2229,"src":"4240:9:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"hexValue":"307866","id":2243,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4252:3:15","typeDescriptions":{"typeIdentifier":"t_rational_15_by_1","typeString":"int_const 15"},"value":"0xf"},"src":"4240:15:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"37","id":2245,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4258:1:15","typeDescriptions":{"typeIdentifier":"t_rational_7_by_1","typeString":"int_const 7"},"value":"7"},"src":"4240:19:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":2254,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"baseExpression":{"id":2249,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2220,"src":"4269:6:15","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2251,"indexExpression":{"id":2250,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2233,"src":"4276:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4269:9:15","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes1","typeString":"bytes1"}],"id":2248,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4263:5:15","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":2247,"name":"uint8","nodeType":"ElementaryTypeName","src":"4263:5:15","typeDescriptions":{}}},"id":2252,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4263:16:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"3936","id":2253,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4282:2:15","typeDescriptions":{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},"value":"96"},"src":"4263:21:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"4240:44:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2263,"nodeType":"IfStatement","src":"4236:153:15","trueBody":{"id":2262,"nodeType":"Block","src":"4286:103:15","statements":[{"expression":{"id":2260,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2256,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2220,"src":"4356:6:15","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2258,"indexExpression":{"id":2257,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2233,"src":"4363:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"4356:9:15","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"^=","rightHandSide":{"hexValue":"30783230","id":2259,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4369:4:15","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"0x20"},"src":"4356:17:15","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":2261,"nodeType":"ExpressionStatement","src":"4356:17:15"}]}},{"expression":{"id":2266,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2264,"name":"hashValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2229,"src":"4403:9:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"34","id":2265,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4417:1:15","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"4403:15:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2267,"nodeType":"ExpressionStatement","src":"4403:15:15"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2238,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2236,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2233,"src":"4120:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"31","id":2237,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4124:1:15","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"4120:5:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2269,"initializationExpression":{"assignments":[2233],"declarations":[{"constant":false,"id":2233,"mutability":"mutable","name":"i","nameLocation":"4112:1:15","nodeType":"VariableDeclaration","scope":2269,"src":"4104:9:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2232,"name":"uint256","nodeType":"ElementaryTypeName","src":"4104:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2235,"initialValue":{"hexValue":"3431","id":2234,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4116:2:15","typeDescriptions":{"typeIdentifier":"t_rational_41_by_1","typeString":"int_const 41"},"value":"41"},"nodeType":"VariableDeclarationStatement","src":"4104:14:15"},"isSimpleCounterLoop":false,"loopExpression":{"expression":{"id":2240,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"--","prefix":true,"src":"4127:3:15","subExpression":{"id":2239,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2233,"src":"4129:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2241,"nodeType":"ExpressionStatement","src":"4127:3:15"},"nodeType":"ForStatement","src":"4099:331:15"},{"expression":{"arguments":[{"id":2272,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2220,"src":"4454:6:15","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2271,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4447:6:15","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":2270,"name":"string","nodeType":"ElementaryTypeName","src":"4447:6:15","typeDescriptions":{}}},"id":2273,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4447:14:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":2218,"id":2274,"nodeType":"Return","src":"4440:21:15"}]},"documentation":{"id":2212,"nodeType":"StructuredDocumentation","src":"3554:168:15","text":" @dev Converts an `address` with fixed length of 20 bytes to its checksummed ASCII `string` hexadecimal\n representation, according to EIP-55."},"id":2276,"implemented":true,"kind":"function","modifiers":[],"name":"toChecksumHexString","nameLocation":"3737:19:15","nodeType":"FunctionDefinition","parameters":{"id":2215,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2214,"mutability":"mutable","name":"addr","nameLocation":"3765:4:15","nodeType":"VariableDeclaration","scope":2276,"src":"3757:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2213,"name":"address","nodeType":"ElementaryTypeName","src":"3757:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3756:14:15"},"returnParameters":{"id":2218,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2217,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2276,"src":"3794:13:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2216,"name":"string","nodeType":"ElementaryTypeName","src":"3794:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3793:15:15"},"scope":3350,"src":"3728:741:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2312,"nodeType":"Block","src":"4629:106:15","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2310,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2296,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":2288,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2279,"src":"4653:1:15","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2287,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4647:5:15","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2286,"name":"bytes","nodeType":"ElementaryTypeName","src":"4647:5:15","typeDescriptions":{}}},"id":2289,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4647:8:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2290,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4656:6:15","memberName":"length","nodeType":"MemberAccess","src":"4647:15:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":2293,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2281,"src":"4672:1:15","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2292,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4666:5:15","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2291,"name":"bytes","nodeType":"ElementaryTypeName","src":"4666:5:15","typeDescriptions":{}}},"id":2294,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4666:8:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2295,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4675:6:15","memberName":"length","nodeType":"MemberAccess","src":"4666:15:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4647:34:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":2309,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"id":2300,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2279,"src":"4701:1:15","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2299,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4695:5:15","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2298,"name":"bytes","nodeType":"ElementaryTypeName","src":"4695:5:15","typeDescriptions":{}}},"id":2301,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4695:8:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2297,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"4685:9:15","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":2302,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4685:19:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"arguments":[{"id":2306,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2281,"src":"4724:1:15","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2305,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4718:5:15","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2304,"name":"bytes","nodeType":"ElementaryTypeName","src":"4718:5:15","typeDescriptions":{}}},"id":2307,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4718:8:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2303,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"4708:9:15","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":2308,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4708:19:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"4685:42:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"4647:80:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":2285,"id":2311,"nodeType":"Return","src":"4640:87:15"}]},"documentation":{"id":2277,"nodeType":"StructuredDocumentation","src":"4477:68:15","text":" @dev Returns true if the two strings are equal."},"id":2313,"implemented":true,"kind":"function","modifiers":[],"name":"equal","nameLocation":"4560:5:15","nodeType":"FunctionDefinition","parameters":{"id":2282,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2279,"mutability":"mutable","name":"a","nameLocation":"4580:1:15","nodeType":"VariableDeclaration","scope":2313,"src":"4566:15:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2278,"name":"string","nodeType":"ElementaryTypeName","src":"4566:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2281,"mutability":"mutable","name":"b","nameLocation":"4597:1:15","nodeType":"VariableDeclaration","scope":2313,"src":"4583:15:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2280,"name":"string","nodeType":"ElementaryTypeName","src":"4583:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"4565:34:15"},"returnParameters":{"id":2285,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2284,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2313,"src":"4623:4:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2283,"name":"bool","nodeType":"ElementaryTypeName","src":"4623:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4622:6:15"},"scope":3350,"src":"4551:184:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2331,"nodeType":"Block","src":"5041:66:15","statements":[{"expression":{"arguments":[{"id":2322,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2316,"src":"5069:5:15","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"30","id":2323,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5076:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"expression":{"arguments":[{"id":2326,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2316,"src":"5085:5:15","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2325,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5079:5:15","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2324,"name":"bytes","nodeType":"ElementaryTypeName","src":"5079:5:15","typeDescriptions":{}}},"id":2327,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5079:12:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2328,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5092:6:15","memberName":"length","nodeType":"MemberAccess","src":"5079:19:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2321,"name":"parseUint","nodeType":"Identifier","overloadedDeclarations":[2332,2363],"referencedDeclaration":2363,"src":"5059:9:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (uint256)"}},"id":2329,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5059:40:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2320,"id":2330,"nodeType":"Return","src":"5052:47:15"}]},"documentation":{"id":2314,"nodeType":"StructuredDocumentation","src":"4743:220:15","text":" @dev Parse a decimal string and returns the value as a `uint256`.\n Requirements:\n - The string must be formatted as `[0-9]*`\n - The result must fit into an `uint256` type"},"id":2332,"implemented":true,"kind":"function","modifiers":[],"name":"parseUint","nameLocation":"4978:9:15","nodeType":"FunctionDefinition","parameters":{"id":2317,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2316,"mutability":"mutable","name":"input","nameLocation":"5002:5:15","nodeType":"VariableDeclaration","scope":2332,"src":"4988:19:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2315,"name":"string","nodeType":"ElementaryTypeName","src":"4988:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"4987:21:15"},"returnParameters":{"id":2320,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2319,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2332,"src":"5032:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2318,"name":"uint256","nodeType":"ElementaryTypeName","src":"5032:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5031:9:15"},"scope":3350,"src":"4969:138:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2362,"nodeType":"Block","src":"5522:157:15","statements":[{"assignments":[2345,2347],"declarations":[{"constant":false,"id":2345,"mutability":"mutable","name":"success","nameLocation":"5539:7:15","nodeType":"VariableDeclaration","scope":2362,"src":"5534:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2344,"name":"bool","nodeType":"ElementaryTypeName","src":"5534:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2347,"mutability":"mutable","name":"value","nameLocation":"5556:5:15","nodeType":"VariableDeclaration","scope":2362,"src":"5548:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2346,"name":"uint256","nodeType":"ElementaryTypeName","src":"5548:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2353,"initialValue":{"arguments":[{"id":2349,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2335,"src":"5578:5:15","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":2350,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2337,"src":"5585:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2351,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2339,"src":"5592:3:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2348,"name":"tryParseUint","nodeType":"Identifier","overloadedDeclarations":[2384,2421],"referencedDeclaration":2421,"src":"5565:12:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,uint256)"}},"id":2352,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5565:31:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"5533:63:15"},{"condition":{"id":2355,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"5611:8:15","subExpression":{"id":2354,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2345,"src":"5612:7:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2359,"nodeType":"IfStatement","src":"5607:41:15","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":2356,"name":"StringsInvalidChar","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2011,"src":"5628:18:15","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$_t_error_$","typeString":"function () pure returns (error)"}},"id":2357,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5628:20:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":2358,"nodeType":"RevertStatement","src":"5621:27:15"}},{"expression":{"id":2360,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2347,"src":"5666:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2343,"id":2361,"nodeType":"Return","src":"5659:12:15"}]},"documentation":{"id":2333,"nodeType":"StructuredDocumentation","src":"5115:301:15","text":" @dev Variant of {parseUint-string} that parses a substring of `input` located between position `begin` (included) and\n `end` (excluded).\n Requirements:\n - The substring must be formatted as `[0-9]*`\n - The result must fit into an `uint256` type"},"id":2363,"implemented":true,"kind":"function","modifiers":[],"name":"parseUint","nameLocation":"5431:9:15","nodeType":"FunctionDefinition","parameters":{"id":2340,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2335,"mutability":"mutable","name":"input","nameLocation":"5455:5:15","nodeType":"VariableDeclaration","scope":2363,"src":"5441:19:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2334,"name":"string","nodeType":"ElementaryTypeName","src":"5441:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2337,"mutability":"mutable","name":"begin","nameLocation":"5470:5:15","nodeType":"VariableDeclaration","scope":2363,"src":"5462:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2336,"name":"uint256","nodeType":"ElementaryTypeName","src":"5462:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2339,"mutability":"mutable","name":"end","nameLocation":"5485:3:15","nodeType":"VariableDeclaration","scope":2363,"src":"5477:11:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2338,"name":"uint256","nodeType":"ElementaryTypeName","src":"5477:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5440:49:15"},"returnParameters":{"id":2343,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2342,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2363,"src":"5513:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2341,"name":"uint256","nodeType":"ElementaryTypeName","src":"5513:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5512:9:15"},"scope":3350,"src":"5422:257:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2383,"nodeType":"Block","src":"6007:85:15","statements":[{"expression":{"arguments":[{"id":2374,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2366,"src":"6054:5:15","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"30","id":2375,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6061:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"expression":{"arguments":[{"id":2378,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2366,"src":"6070:5:15","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2377,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6064:5:15","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2376,"name":"bytes","nodeType":"ElementaryTypeName","src":"6064:5:15","typeDescriptions":{}}},"id":2379,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6064:12:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2380,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6077:6:15","memberName":"length","nodeType":"MemberAccess","src":"6064:19:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2373,"name":"_tryParseUintUncheckedBounds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2491,"src":"6025:28:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,uint256)"}},"id":2381,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6025:59:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":2372,"id":2382,"nodeType":"Return","src":"6018:66:15"}]},"documentation":{"id":2364,"nodeType":"StructuredDocumentation","src":"5687:219:15","text":" @dev Variant of {parseUint-string} that returns false if the parsing fails because of an invalid character.\n NOTE: This function will revert if the result does not fit in a `uint256`."},"id":2384,"implemented":true,"kind":"function","modifiers":[],"name":"tryParseUint","nameLocation":"5921:12:15","nodeType":"FunctionDefinition","parameters":{"id":2367,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2366,"mutability":"mutable","name":"input","nameLocation":"5948:5:15","nodeType":"VariableDeclaration","scope":2384,"src":"5934:19:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2365,"name":"string","nodeType":"ElementaryTypeName","src":"5934:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"5933:21:15"},"returnParameters":{"id":2372,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2369,"mutability":"mutable","name":"success","nameLocation":"5983:7:15","nodeType":"VariableDeclaration","scope":2384,"src":"5978:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2368,"name":"bool","nodeType":"ElementaryTypeName","src":"5978:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2371,"mutability":"mutable","name":"value","nameLocation":"6000:5:15","nodeType":"VariableDeclaration","scope":2384,"src":"5992:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2370,"name":"uint256","nodeType":"ElementaryTypeName","src":"5992:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5977:29:15"},"scope":3350,"src":"5912:180:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2420,"nodeType":"Block","src":"6506:147:15","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2408,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2404,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2398,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2391,"src":"6521:3:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":2401,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2387,"src":"6533:5:15","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2400,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6527:5:15","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2399,"name":"bytes","nodeType":"ElementaryTypeName","src":"6527:5:15","typeDescriptions":{}}},"id":2402,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6527:12:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2403,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6540:6:15","memberName":"length","nodeType":"MemberAccess","src":"6527:19:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6521:25:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2407,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2405,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2389,"src":"6550:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":2406,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2391,"src":"6558:3:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6550:11:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"6521:40:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2413,"nodeType":"IfStatement","src":"6517:63:15","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":2409,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"6571:5:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":2410,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6578:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":2411,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"6570:10:15","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":2397,"id":2412,"nodeType":"Return","src":"6563:17:15"}},{"expression":{"arguments":[{"id":2415,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2387,"src":"6627:5:15","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":2416,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2389,"src":"6634:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2417,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2391,"src":"6641:3:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2414,"name":"_tryParseUintUncheckedBounds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2491,"src":"6598:28:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,uint256)"}},"id":2418,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6598:47:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":2397,"id":2419,"nodeType":"Return","src":"6591:54:15"}]},"documentation":{"id":2385,"nodeType":"StructuredDocumentation","src":"6100:243:15","text":" @dev Variant of {parseUint-string-uint256-uint256} that returns false if the parsing fails because of an invalid\n character.\n NOTE: This function will revert if the result does not fit in a `uint256`."},"id":2421,"implemented":true,"kind":"function","modifiers":[],"name":"tryParseUint","nameLocation":"6358:12:15","nodeType":"FunctionDefinition","parameters":{"id":2392,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2387,"mutability":"mutable","name":"input","nameLocation":"6395:5:15","nodeType":"VariableDeclaration","scope":2421,"src":"6381:19:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2386,"name":"string","nodeType":"ElementaryTypeName","src":"6381:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2389,"mutability":"mutable","name":"begin","nameLocation":"6419:5:15","nodeType":"VariableDeclaration","scope":2421,"src":"6411:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2388,"name":"uint256","nodeType":"ElementaryTypeName","src":"6411:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2391,"mutability":"mutable","name":"end","nameLocation":"6443:3:15","nodeType":"VariableDeclaration","scope":2421,"src":"6435:11:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2390,"name":"uint256","nodeType":"ElementaryTypeName","src":"6435:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6370:83:15"},"returnParameters":{"id":2397,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2394,"mutability":"mutable","name":"success","nameLocation":"6482:7:15","nodeType":"VariableDeclaration","scope":2421,"src":"6477:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2393,"name":"bool","nodeType":"ElementaryTypeName","src":"6477:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2396,"mutability":"mutable","name":"value","nameLocation":"6499:5:15","nodeType":"VariableDeclaration","scope":2421,"src":"6491:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2395,"name":"uint256","nodeType":"ElementaryTypeName","src":"6491:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6476:29:15"},"scope":3350,"src":"6349:304:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2490,"nodeType":"Block","src":"7066:358:15","statements":[{"assignments":[2436],"declarations":[{"constant":false,"id":2436,"mutability":"mutable","name":"buffer","nameLocation":"7090:6:15","nodeType":"VariableDeclaration","scope":2490,"src":"7077:19:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2435,"name":"bytes","nodeType":"ElementaryTypeName","src":"7077:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":2441,"initialValue":{"arguments":[{"id":2439,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2424,"src":"7105:5:15","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2438,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7099:5:15","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2437,"name":"bytes","nodeType":"ElementaryTypeName","src":"7099:5:15","typeDescriptions":{}}},"id":2440,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7099:12:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"7077:34:15"},{"assignments":[2443],"declarations":[{"constant":false,"id":2443,"mutability":"mutable","name":"result","nameLocation":"7132:6:15","nodeType":"VariableDeclaration","scope":2490,"src":"7124:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2442,"name":"uint256","nodeType":"ElementaryTypeName","src":"7124:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2445,"initialValue":{"hexValue":"30","id":2444,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7141:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"7124:18:15"},{"body":{"id":2484,"nodeType":"Block","src":"7191:194:15","statements":[{"assignments":[2457],"declarations":[{"constant":false,"id":2457,"mutability":"mutable","name":"chr","nameLocation":"7212:3:15","nodeType":"VariableDeclaration","scope":2484,"src":"7206:9:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":2456,"name":"uint8","nodeType":"ElementaryTypeName","src":"7206:5:15","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"id":2467,"initialValue":{"arguments":[{"arguments":[{"arguments":[{"id":2462,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2436,"src":"7261:6:15","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":2463,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2447,"src":"7269:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2461,"name":"_unsafeReadBytesOffset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3349,"src":"7238:22:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_bytes32_$","typeString":"function (bytes memory,uint256) pure returns (bytes32)"}},"id":2464,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7238:33:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2460,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7231:6:15","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes1_$","typeString":"type(bytes1)"},"typeName":{"id":2459,"name":"bytes1","nodeType":"ElementaryTypeName","src":"7231:6:15","typeDescriptions":{}}},"id":2465,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7231:41:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes1","typeString":"bytes1"}],"id":2458,"name":"_tryParseChr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3171,"src":"7218:12:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes1_$returns$_t_uint8_$","typeString":"function (bytes1) pure returns (uint8)"}},"id":2466,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7218:55:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"VariableDeclarationStatement","src":"7206:67:15"},{"condition":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":2470,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2468,"name":"chr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2457,"src":"7292:3:15","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"39","id":2469,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7298:1:15","typeDescriptions":{"typeIdentifier":"t_rational_9_by_1","typeString":"int_const 9"},"value":"9"},"src":"7292:7:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2475,"nodeType":"IfStatement","src":"7288:30:15","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":2471,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"7309:5:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":2472,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7316:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":2473,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"7308:10:15","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":2434,"id":2474,"nodeType":"Return","src":"7301:17:15"}},{"expression":{"id":2478,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2476,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2443,"src":"7333:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"hexValue":"3130","id":2477,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7343:2:15","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"src":"7333:12:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2479,"nodeType":"ExpressionStatement","src":"7333:12:15"},{"expression":{"id":2482,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2480,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2443,"src":"7360:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":2481,"name":"chr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2457,"src":"7370:3:15","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"7360:13:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2483,"nodeType":"ExpressionStatement","src":"7360:13:15"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2452,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2450,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2447,"src":"7177:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":2451,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2428,"src":"7181:3:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7177:7:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2485,"initializationExpression":{"assignments":[2447],"declarations":[{"constant":false,"id":2447,"mutability":"mutable","name":"i","nameLocation":"7166:1:15","nodeType":"VariableDeclaration","scope":2485,"src":"7158:9:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2446,"name":"uint256","nodeType":"ElementaryTypeName","src":"7158:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2449,"initialValue":{"id":2448,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2426,"src":"7170:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"7158:17:15"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":2454,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":true,"src":"7186:3:15","subExpression":{"id":2453,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2447,"src":"7188:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2455,"nodeType":"ExpressionStatement","src":"7186:3:15"},"nodeType":"ForStatement","src":"7153:232:15"},{"expression":{"components":[{"hexValue":"74727565","id":2486,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"7403:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"id":2487,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2443,"src":"7409:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2488,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7402:14:15","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":2434,"id":2489,"nodeType":"Return","src":"7395:21:15"}]},"documentation":{"id":2422,"nodeType":"StructuredDocumentation","src":"6661:227:15","text":" @dev Implementation of {tryParseUint-string-uint256-uint256} that does not check bounds. Caller should make sure that\n `begin <= end <= input.length`. Other inputs would result in undefined behavior."},"id":2491,"implemented":true,"kind":"function","modifiers":[],"name":"_tryParseUintUncheckedBounds","nameLocation":"6903:28:15","nodeType":"FunctionDefinition","parameters":{"id":2429,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2424,"mutability":"mutable","name":"input","nameLocation":"6956:5:15","nodeType":"VariableDeclaration","scope":2491,"src":"6942:19:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2423,"name":"string","nodeType":"ElementaryTypeName","src":"6942:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2426,"mutability":"mutable","name":"begin","nameLocation":"6980:5:15","nodeType":"VariableDeclaration","scope":2491,"src":"6972:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2425,"name":"uint256","nodeType":"ElementaryTypeName","src":"6972:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2428,"mutability":"mutable","name":"end","nameLocation":"7004:3:15","nodeType":"VariableDeclaration","scope":2491,"src":"6996:11:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2427,"name":"uint256","nodeType":"ElementaryTypeName","src":"6996:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6931:83:15"},"returnParameters":{"id":2434,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2431,"mutability":"mutable","name":"success","nameLocation":"7042:7:15","nodeType":"VariableDeclaration","scope":2491,"src":"7037:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2430,"name":"bool","nodeType":"ElementaryTypeName","src":"7037:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2433,"mutability":"mutable","name":"value","nameLocation":"7059:5:15","nodeType":"VariableDeclaration","scope":2491,"src":"7051:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2432,"name":"uint256","nodeType":"ElementaryTypeName","src":"7051:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7036:29:15"},"scope":3350,"src":"6894:530:15","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":2509,"nodeType":"Block","src":"7730:65:15","statements":[{"expression":{"arguments":[{"id":2500,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2494,"src":"7757:5:15","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"30","id":2501,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7764:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"expression":{"arguments":[{"id":2504,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2494,"src":"7773:5:15","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2503,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7767:5:15","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2502,"name":"bytes","nodeType":"ElementaryTypeName","src":"7767:5:15","typeDescriptions":{}}},"id":2505,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7767:12:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2506,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7780:6:15","memberName":"length","nodeType":"MemberAccess","src":"7767:19:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2499,"name":"parseInt","nodeType":"Identifier","overloadedDeclarations":[2510,2541],"referencedDeclaration":2541,"src":"7748:8:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_int256_$","typeString":"function (string memory,uint256,uint256) pure returns (int256)"}},"id":2507,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7748:39:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":2498,"id":2508,"nodeType":"Return","src":"7741:46:15"}]},"documentation":{"id":2492,"nodeType":"StructuredDocumentation","src":"7432:222:15","text":" @dev Parse a decimal string and returns the value as a `int256`.\n Requirements:\n - The string must be formatted as `[-+]?[0-9]*`\n - The result must fit in an `int256` type."},"id":2510,"implemented":true,"kind":"function","modifiers":[],"name":"parseInt","nameLocation":"7669:8:15","nodeType":"FunctionDefinition","parameters":{"id":2495,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2494,"mutability":"mutable","name":"input","nameLocation":"7692:5:15","nodeType":"VariableDeclaration","scope":2510,"src":"7678:19:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2493,"name":"string","nodeType":"ElementaryTypeName","src":"7678:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"7677:21:15"},"returnParameters":{"id":2498,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2497,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2510,"src":"7722:6:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2496,"name":"int256","nodeType":"ElementaryTypeName","src":"7722:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"7721:8:15"},"scope":3350,"src":"7660:135:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2540,"nodeType":"Block","src":"8210:155:15","statements":[{"assignments":[2523,2525],"declarations":[{"constant":false,"id":2523,"mutability":"mutable","name":"success","nameLocation":"8227:7:15","nodeType":"VariableDeclaration","scope":2540,"src":"8222:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2522,"name":"bool","nodeType":"ElementaryTypeName","src":"8222:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2525,"mutability":"mutable","name":"value","nameLocation":"8243:5:15","nodeType":"VariableDeclaration","scope":2540,"src":"8236:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2524,"name":"int256","nodeType":"ElementaryTypeName","src":"8236:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"id":2531,"initialValue":{"arguments":[{"id":2527,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2513,"src":"8264:5:15","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":2528,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2515,"src":"8271:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2529,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2517,"src":"8278:3:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2526,"name":"tryParseInt","nodeType":"Identifier","overloadedDeclarations":[2562,2604],"referencedDeclaration":2604,"src":"8252:11:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_int256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,int256)"}},"id":2530,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8252:30:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_int256_$","typeString":"tuple(bool,int256)"}},"nodeType":"VariableDeclarationStatement","src":"8221:61:15"},{"condition":{"id":2533,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"8297:8:15","subExpression":{"id":2532,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2523,"src":"8298:7:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2537,"nodeType":"IfStatement","src":"8293:41:15","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":2534,"name":"StringsInvalidChar","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2011,"src":"8314:18:15","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$_t_error_$","typeString":"function () pure returns (error)"}},"id":2535,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8314:20:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":2536,"nodeType":"RevertStatement","src":"8307:27:15"}},{"expression":{"id":2538,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2525,"src":"8352:5:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":2521,"id":2539,"nodeType":"Return","src":"8345:12:15"}]},"documentation":{"id":2511,"nodeType":"StructuredDocumentation","src":"7803:303:15","text":" @dev Variant of {parseInt-string} that parses a substring of `input` located between position `begin` (included) and\n `end` (excluded).\n Requirements:\n - The substring must be formatted as `[-+]?[0-9]*`\n - The result must fit in an `int256` type."},"id":2541,"implemented":true,"kind":"function","modifiers":[],"name":"parseInt","nameLocation":"8121:8:15","nodeType":"FunctionDefinition","parameters":{"id":2518,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2513,"mutability":"mutable","name":"input","nameLocation":"8144:5:15","nodeType":"VariableDeclaration","scope":2541,"src":"8130:19:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2512,"name":"string","nodeType":"ElementaryTypeName","src":"8130:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2515,"mutability":"mutable","name":"begin","nameLocation":"8159:5:15","nodeType":"VariableDeclaration","scope":2541,"src":"8151:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2514,"name":"uint256","nodeType":"ElementaryTypeName","src":"8151:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2517,"mutability":"mutable","name":"end","nameLocation":"8174:3:15","nodeType":"VariableDeclaration","scope":2541,"src":"8166:11:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2516,"name":"uint256","nodeType":"ElementaryTypeName","src":"8166:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8129:49:15"},"returnParameters":{"id":2521,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2520,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2541,"src":"8202:6:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2519,"name":"int256","nodeType":"ElementaryTypeName","src":"8202:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"8201:8:15"},"scope":3350,"src":"8112:253:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2561,"nodeType":"Block","src":"8764:84:15","statements":[{"expression":{"arguments":[{"id":2552,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2544,"src":"8810:5:15","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"30","id":2553,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8817:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"expression":{"arguments":[{"id":2556,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2544,"src":"8826:5:15","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2555,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8820:5:15","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2554,"name":"bytes","nodeType":"ElementaryTypeName","src":"8820:5:15","typeDescriptions":{}}},"id":2557,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8820:12:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2558,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8833:6:15","memberName":"length","nodeType":"MemberAccess","src":"8820:19:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2551,"name":"_tryParseIntUncheckedBounds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2725,"src":"8782:27:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_int256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,int256)"}},"id":2559,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8782:58:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_int256_$","typeString":"tuple(bool,int256)"}},"functionReturnParameters":2550,"id":2560,"nodeType":"Return","src":"8775:65:15"}]},"documentation":{"id":2542,"nodeType":"StructuredDocumentation","src":"8373:292:15","text":" @dev Variant of {parseInt-string} that returns false if the parsing fails because of an invalid character or if\n the result does not fit in a `int256`.\n NOTE: This function will revert if the absolute value of the result does not fit in a `uint256`."},"id":2562,"implemented":true,"kind":"function","modifiers":[],"name":"tryParseInt","nameLocation":"8680:11:15","nodeType":"FunctionDefinition","parameters":{"id":2545,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2544,"mutability":"mutable","name":"input","nameLocation":"8706:5:15","nodeType":"VariableDeclaration","scope":2562,"src":"8692:19:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2543,"name":"string","nodeType":"ElementaryTypeName","src":"8692:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"8691:21:15"},"returnParameters":{"id":2550,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2547,"mutability":"mutable","name":"success","nameLocation":"8741:7:15","nodeType":"VariableDeclaration","scope":2562,"src":"8736:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2546,"name":"bool","nodeType":"ElementaryTypeName","src":"8736:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2549,"mutability":"mutable","name":"value","nameLocation":"8757:5:15","nodeType":"VariableDeclaration","scope":2562,"src":"8750:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2548,"name":"int256","nodeType":"ElementaryTypeName","src":"8750:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"8735:28:15"},"scope":3350,"src":"8671:177:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"constant":true,"id":2567,"mutability":"constant","name":"ABS_MIN_INT256","nameLocation":"8881:14:15","nodeType":"VariableDeclaration","scope":3350,"src":"8856:50:15","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2563,"name":"uint256","nodeType":"ElementaryTypeName","src":"8856:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"commonType":{"typeIdentifier":"t_rational_57896044618658097711785492504343953926634992332820282019728792003956564819968_by_1","typeString":"int_const 5789...(69 digits omitted)...9968"},"id":2566,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":2564,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8898:1:15","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"323535","id":2565,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8903:3:15","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"255"},"src":"8898:8:15","typeDescriptions":{"typeIdentifier":"t_rational_57896044618658097711785492504343953926634992332820282019728792003956564819968_by_1","typeString":"int_const 5789...(69 digits omitted)...9968"}},"visibility":"private"},{"body":{"id":2603,"nodeType":"Block","src":"9384:146:15","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2591,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2587,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2581,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2574,"src":"9399:3:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":2584,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2570,"src":"9411:5:15","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2583,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9405:5:15","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2582,"name":"bytes","nodeType":"ElementaryTypeName","src":"9405:5:15","typeDescriptions":{}}},"id":2585,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9405:12:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2586,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9418:6:15","memberName":"length","nodeType":"MemberAccess","src":"9405:19:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9399:25:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2590,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2588,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2572,"src":"9428:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":2589,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2574,"src":"9436:3:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9428:11:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"9399:40:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2596,"nodeType":"IfStatement","src":"9395:63:15","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":2592,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"9449:5:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":2593,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9456:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":2594,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"9448:10:15","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":2580,"id":2595,"nodeType":"Return","src":"9441:17:15"}},{"expression":{"arguments":[{"id":2598,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2570,"src":"9504:5:15","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":2599,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2572,"src":"9511:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2600,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2574,"src":"9518:3:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2597,"name":"_tryParseIntUncheckedBounds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2725,"src":"9476:27:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_int256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,int256)"}},"id":2601,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9476:46:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_int256_$","typeString":"tuple(bool,int256)"}},"functionReturnParameters":2580,"id":2602,"nodeType":"Return","src":"9469:53:15"}]},"documentation":{"id":2568,"nodeType":"StructuredDocumentation","src":"8915:308:15","text":" @dev Variant of {parseInt-string-uint256-uint256} that returns false if the parsing fails because of an invalid\n character or if the result does not fit in a `int256`.\n NOTE: This function will revert if the absolute value of the result does not fit in a `uint256`."},"id":2604,"implemented":true,"kind":"function","modifiers":[],"name":"tryParseInt","nameLocation":"9238:11:15","nodeType":"FunctionDefinition","parameters":{"id":2575,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2570,"mutability":"mutable","name":"input","nameLocation":"9274:5:15","nodeType":"VariableDeclaration","scope":2604,"src":"9260:19:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2569,"name":"string","nodeType":"ElementaryTypeName","src":"9260:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2572,"mutability":"mutable","name":"begin","nameLocation":"9298:5:15","nodeType":"VariableDeclaration","scope":2604,"src":"9290:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2571,"name":"uint256","nodeType":"ElementaryTypeName","src":"9290:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2574,"mutability":"mutable","name":"end","nameLocation":"9322:3:15","nodeType":"VariableDeclaration","scope":2604,"src":"9314:11:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2573,"name":"uint256","nodeType":"ElementaryTypeName","src":"9314:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9249:83:15"},"returnParameters":{"id":2580,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2577,"mutability":"mutable","name":"success","nameLocation":"9361:7:15","nodeType":"VariableDeclaration","scope":2604,"src":"9356:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2576,"name":"bool","nodeType":"ElementaryTypeName","src":"9356:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2579,"mutability":"mutable","name":"value","nameLocation":"9377:5:15","nodeType":"VariableDeclaration","scope":2604,"src":"9370:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2578,"name":"int256","nodeType":"ElementaryTypeName","src":"9370:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"9355:28:15"},"scope":3350,"src":"9229:301:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2724,"nodeType":"Block","src":"9940:828:15","statements":[{"assignments":[2619],"declarations":[{"constant":false,"id":2619,"mutability":"mutable","name":"buffer","nameLocation":"9964:6:15","nodeType":"VariableDeclaration","scope":2724,"src":"9951:19:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2618,"name":"bytes","nodeType":"ElementaryTypeName","src":"9951:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":2624,"initialValue":{"arguments":[{"id":2622,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2607,"src":"9979:5:15","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2621,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9973:5:15","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2620,"name":"bytes","nodeType":"ElementaryTypeName","src":"9973:5:15","typeDescriptions":{}}},"id":2623,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9973:12:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"9951:34:15"},{"assignments":[2626],"declarations":[{"constant":false,"id":2626,"mutability":"mutable","name":"sign","nameLocation":"10052:4:15","nodeType":"VariableDeclaration","scope":2724,"src":"10045:11:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"typeName":{"id":2625,"name":"bytes1","nodeType":"ElementaryTypeName","src":"10045:6:15","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"visibility":"internal"}],"id":2642,"initialValue":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2629,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2627,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2609,"src":"10059:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":2628,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2611,"src":"10068:3:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10059:12:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"arguments":[{"arguments":[{"id":2637,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2619,"src":"10116:6:15","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":2638,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2609,"src":"10124:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2636,"name":"_unsafeReadBytesOffset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3349,"src":"10093:22:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_bytes32_$","typeString":"function (bytes memory,uint256) pure returns (bytes32)"}},"id":2639,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10093:37:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2635,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10086:6:15","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes1_$","typeString":"type(bytes1)"},"typeName":{"id":2634,"name":"bytes1","nodeType":"ElementaryTypeName","src":"10086:6:15","typeDescriptions":{}}},"id":2640,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10086:45:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":2641,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"10059:72:15","trueExpression":{"arguments":[{"hexValue":"30","id":2632,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10081:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2631,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10074:6:15","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes1_$","typeString":"type(bytes1)"},"typeName":{"id":2630,"name":"bytes1","nodeType":"ElementaryTypeName","src":"10074:6:15","typeDescriptions":{}}},"id":2633,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10074:9:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"VariableDeclarationStatement","src":"10045:86:15"},{"assignments":[2644],"declarations":[{"constant":false,"id":2644,"mutability":"mutable","name":"positiveSign","nameLocation":"10218:12:15","nodeType":"VariableDeclaration","scope":2724,"src":"10213:17:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2643,"name":"bool","nodeType":"ElementaryTypeName","src":"10213:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":2651,"initialValue":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":2650,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2645,"name":"sign","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2626,"src":"10233:4:15","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"2b","id":2648,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"10248:3:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_728b8dbbe730d9acd55e30e768e6a28a04bea0c61b88108287c2c87d79c98bb8","typeString":"literal_string \"+\""},"value":"+"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_728b8dbbe730d9acd55e30e768e6a28a04bea0c61b88108287c2c87d79c98bb8","typeString":"literal_string \"+\""}],"id":2647,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10241:6:15","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes1_$","typeString":"type(bytes1)"},"typeName":{"id":2646,"name":"bytes1","nodeType":"ElementaryTypeName","src":"10241:6:15","typeDescriptions":{}}},"id":2649,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10241:11:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"src":"10233:19:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"10213:39:15"},{"assignments":[2653],"declarations":[{"constant":false,"id":2653,"mutability":"mutable","name":"negativeSign","nameLocation":"10268:12:15","nodeType":"VariableDeclaration","scope":2724,"src":"10263:17:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2652,"name":"bool","nodeType":"ElementaryTypeName","src":"10263:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":2660,"initialValue":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":2659,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2654,"name":"sign","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2626,"src":"10283:4:15","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"2d","id":2657,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"10298:3:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_d3b8281179950f98149eefdb158d0e1acb56f56e8e343aa9fefafa7e36959561","typeString":"literal_string \"-\""},"value":"-"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_d3b8281179950f98149eefdb158d0e1acb56f56e8e343aa9fefafa7e36959561","typeString":"literal_string \"-\""}],"id":2656,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10291:6:15","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes1_$","typeString":"type(bytes1)"},"typeName":{"id":2655,"name":"bytes1","nodeType":"ElementaryTypeName","src":"10291:6:15","typeDescriptions":{}}},"id":2658,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10291:11:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"src":"10283:19:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"10263:39:15"},{"assignments":[2662],"declarations":[{"constant":false,"id":2662,"mutability":"mutable","name":"offset","nameLocation":"10321:6:15","nodeType":"VariableDeclaration","scope":2724,"src":"10313:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2661,"name":"uint256","nodeType":"ElementaryTypeName","src":"10313:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2669,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"components":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2665,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2663,"name":"positiveSign","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2644,"src":"10331:12:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"id":2664,"name":"negativeSign","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2653,"src":"10347:12:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"10331:28:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":2666,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"10330:30:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2667,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10361:6:15","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7432,"src":"10330:37:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$attached_to$_t_bool_$","typeString":"function (bool) pure returns (uint256)"}},"id":2668,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10330:39:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"10313:56:15"},{"assignments":[2671,2673],"declarations":[{"constant":false,"id":2671,"mutability":"mutable","name":"absSuccess","nameLocation":"10388:10:15","nodeType":"VariableDeclaration","scope":2724,"src":"10383:15:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2670,"name":"bool","nodeType":"ElementaryTypeName","src":"10383:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2673,"mutability":"mutable","name":"absValue","nameLocation":"10408:8:15","nodeType":"VariableDeclaration","scope":2724,"src":"10400:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2672,"name":"uint256","nodeType":"ElementaryTypeName","src":"10400:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2681,"initialValue":{"arguments":[{"id":2675,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2607,"src":"10433:5:15","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2678,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2676,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2609,"src":"10440:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":2677,"name":"offset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2662,"src":"10448:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10440:14:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2679,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2611,"src":"10456:3:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2674,"name":"tryParseUint","nodeType":"Identifier","overloadedDeclarations":[2384,2421],"referencedDeclaration":2421,"src":"10420:12:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,uint256)"}},"id":2680,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10420:40:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"10382:78:15"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2686,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2682,"name":"absSuccess","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2671,"src":"10477:10:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2685,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2683,"name":"absValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2673,"src":"10491:8:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":2684,"name":"ABS_MIN_INT256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2567,"src":"10502:14:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10491:25:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"10477:39:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2708,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2704,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2702,"name":"absSuccess","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2671,"src":"10621:10:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"id":2703,"name":"negativeSign","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2653,"src":"10635:12:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"10621:26:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2707,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2705,"name":"absValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2673,"src":"10651:8:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":2706,"name":"ABS_MIN_INT256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2567,"src":"10663:14:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10651:26:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"10621:56:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"expression":{"components":[{"hexValue":"66616c7365","id":2718,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"10751:5:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":2719,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10758:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":2720,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"10750:10:15","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":2617,"id":2721,"nodeType":"Return","src":"10743:17:15"},"id":2722,"nodeType":"IfStatement","src":"10617:143:15","trueBody":{"id":2717,"nodeType":"Block","src":"10679:58:15","statements":[{"expression":{"components":[{"hexValue":"74727565","id":2709,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"10702:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"expression":{"arguments":[{"id":2712,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10713:6:15","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":2711,"name":"int256","nodeType":"ElementaryTypeName","src":"10713:6:15","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"}],"id":2710,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"10708:4:15","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":2713,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10708:12:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_int256","typeString":"type(int256)"}},"id":2714,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"10721:3:15","memberName":"min","nodeType":"MemberAccess","src":"10708:16:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":2715,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"10701:24:15","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_int256_$","typeString":"tuple(bool,int256)"}},"functionReturnParameters":2617,"id":2716,"nodeType":"Return","src":"10694:31:15"}]}},"id":2723,"nodeType":"IfStatement","src":"10473:287:15","trueBody":{"id":2701,"nodeType":"Block","src":"10518:93:15","statements":[{"expression":{"components":[{"hexValue":"74727565","id":2687,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"10541:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"condition":{"id":2688,"name":"negativeSign","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2653,"src":"10547:12:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"arguments":[{"id":2696,"name":"absValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2673,"src":"10589:8:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2695,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10582:6:15","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":2694,"name":"int256","nodeType":"ElementaryTypeName","src":"10582:6:15","typeDescriptions":{}}},"id":2697,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10582:16:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":2698,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"10547:51:15","trueExpression":{"id":2693,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"-","prefix":true,"src":"10562:17:15","subExpression":{"arguments":[{"id":2691,"name":"absValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2673,"src":"10570:8:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2690,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10563:6:15","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":2689,"name":"int256","nodeType":"ElementaryTypeName","src":"10563:6:15","typeDescriptions":{}}},"id":2692,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10563:16:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":2699,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"10540:59:15","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_int256_$","typeString":"tuple(bool,int256)"}},"functionReturnParameters":2617,"id":2700,"nodeType":"Return","src":"10533:66:15"}]}}]},"documentation":{"id":2605,"nodeType":"StructuredDocumentation","src":"9538:226:15","text":" @dev Implementation of {tryParseInt-string-uint256-uint256} that does not check bounds. Caller should make sure that\n `begin <= end <= input.length`. Other inputs would result in undefined behavior."},"id":2725,"implemented":true,"kind":"function","modifiers":[],"name":"_tryParseIntUncheckedBounds","nameLocation":"9779:27:15","nodeType":"FunctionDefinition","parameters":{"id":2612,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2607,"mutability":"mutable","name":"input","nameLocation":"9831:5:15","nodeType":"VariableDeclaration","scope":2725,"src":"9817:19:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2606,"name":"string","nodeType":"ElementaryTypeName","src":"9817:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2609,"mutability":"mutable","name":"begin","nameLocation":"9855:5:15","nodeType":"VariableDeclaration","scope":2725,"src":"9847:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2608,"name":"uint256","nodeType":"ElementaryTypeName","src":"9847:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2611,"mutability":"mutable","name":"end","nameLocation":"9879:3:15","nodeType":"VariableDeclaration","scope":2725,"src":"9871:11:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2610,"name":"uint256","nodeType":"ElementaryTypeName","src":"9871:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9806:83:15"},"returnParameters":{"id":2617,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2614,"mutability":"mutable","name":"success","nameLocation":"9917:7:15","nodeType":"VariableDeclaration","scope":2725,"src":"9912:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2613,"name":"bool","nodeType":"ElementaryTypeName","src":"9912:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2616,"mutability":"mutable","name":"value","nameLocation":"9933:5:15","nodeType":"VariableDeclaration","scope":2725,"src":"9926:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2615,"name":"int256","nodeType":"ElementaryTypeName","src":"9926:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"9911:28:15"},"scope":3350,"src":"9770:998:15","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":2743,"nodeType":"Block","src":"11122:69:15","statements":[{"expression":{"arguments":[{"id":2734,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2728,"src":"11153:5:15","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"30","id":2735,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11160:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"expression":{"arguments":[{"id":2738,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2728,"src":"11169:5:15","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2737,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11163:5:15","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2736,"name":"bytes","nodeType":"ElementaryTypeName","src":"11163:5:15","typeDescriptions":{}}},"id":2739,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11163:12:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2740,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11176:6:15","memberName":"length","nodeType":"MemberAccess","src":"11163:19:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2733,"name":"parseHexUint","nodeType":"Identifier","overloadedDeclarations":[2744,2775],"referencedDeclaration":2775,"src":"11140:12:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (uint256)"}},"id":2741,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11140:43:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2732,"id":2742,"nodeType":"Return","src":"11133:50:15"}]},"documentation":{"id":2726,"nodeType":"StructuredDocumentation","src":"10776:265:15","text":" @dev Parse a hexadecimal string (with or without \"0x\" prefix), and returns the value as a `uint256`.\n Requirements:\n - The string must be formatted as `(0x)?[0-9a-fA-F]*`\n - The result must fit in an `uint256` type."},"id":2744,"implemented":true,"kind":"function","modifiers":[],"name":"parseHexUint","nameLocation":"11056:12:15","nodeType":"FunctionDefinition","parameters":{"id":2729,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2728,"mutability":"mutable","name":"input","nameLocation":"11083:5:15","nodeType":"VariableDeclaration","scope":2744,"src":"11069:19:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2727,"name":"string","nodeType":"ElementaryTypeName","src":"11069:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"11068:21:15"},"returnParameters":{"id":2732,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2731,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2744,"src":"11113:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2730,"name":"uint256","nodeType":"ElementaryTypeName","src":"11113:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11112:9:15"},"scope":3350,"src":"11047:144:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2774,"nodeType":"Block","src":"11622:160:15","statements":[{"assignments":[2757,2759],"declarations":[{"constant":false,"id":2757,"mutability":"mutable","name":"success","nameLocation":"11639:7:15","nodeType":"VariableDeclaration","scope":2774,"src":"11634:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2756,"name":"bool","nodeType":"ElementaryTypeName","src":"11634:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2759,"mutability":"mutable","name":"value","nameLocation":"11656:5:15","nodeType":"VariableDeclaration","scope":2774,"src":"11648:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2758,"name":"uint256","nodeType":"ElementaryTypeName","src":"11648:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2765,"initialValue":{"arguments":[{"id":2761,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2747,"src":"11681:5:15","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":2762,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2749,"src":"11688:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2763,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2751,"src":"11695:3:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2760,"name":"tryParseHexUint","nodeType":"Identifier","overloadedDeclarations":[2796,2833],"referencedDeclaration":2833,"src":"11665:15:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,uint256)"}},"id":2764,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11665:34:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"11633:66:15"},{"condition":{"id":2767,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"11714:8:15","subExpression":{"id":2766,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2757,"src":"11715:7:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2771,"nodeType":"IfStatement","src":"11710:41:15","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":2768,"name":"StringsInvalidChar","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2011,"src":"11731:18:15","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$_t_error_$","typeString":"function () pure returns (error)"}},"id":2769,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11731:20:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":2770,"nodeType":"RevertStatement","src":"11724:27:15"}},{"expression":{"id":2772,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2759,"src":"11769:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2755,"id":2773,"nodeType":"Return","src":"11762:12:15"}]},"documentation":{"id":2745,"nodeType":"StructuredDocumentation","src":"11199:314:15","text":" @dev Variant of {parseHexUint-string} that parses a substring of `input` located between position `begin` (included) and\n `end` (excluded).\n Requirements:\n - The substring must be formatted as `(0x)?[0-9a-fA-F]*`\n - The result must fit in an `uint256` type."},"id":2775,"implemented":true,"kind":"function","modifiers":[],"name":"parseHexUint","nameLocation":"11528:12:15","nodeType":"FunctionDefinition","parameters":{"id":2752,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2747,"mutability":"mutable","name":"input","nameLocation":"11555:5:15","nodeType":"VariableDeclaration","scope":2775,"src":"11541:19:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2746,"name":"string","nodeType":"ElementaryTypeName","src":"11541:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2749,"mutability":"mutable","name":"begin","nameLocation":"11570:5:15","nodeType":"VariableDeclaration","scope":2775,"src":"11562:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2748,"name":"uint256","nodeType":"ElementaryTypeName","src":"11562:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2751,"mutability":"mutable","name":"end","nameLocation":"11585:3:15","nodeType":"VariableDeclaration","scope":2775,"src":"11577:11:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2750,"name":"uint256","nodeType":"ElementaryTypeName","src":"11577:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11540:49:15"},"returnParameters":{"id":2755,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2754,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2775,"src":"11613:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2753,"name":"uint256","nodeType":"ElementaryTypeName","src":"11613:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11612:9:15"},"scope":3350,"src":"11519:263:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2795,"nodeType":"Block","src":"12116:88:15","statements":[{"expression":{"arguments":[{"id":2786,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2778,"src":"12166:5:15","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"30","id":2787,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12173:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"expression":{"arguments":[{"id":2790,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2778,"src":"12182:5:15","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2789,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12176:5:15","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2788,"name":"bytes","nodeType":"ElementaryTypeName","src":"12176:5:15","typeDescriptions":{}}},"id":2791,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12176:12:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2792,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12189:6:15","memberName":"length","nodeType":"MemberAccess","src":"12176:19:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2785,"name":"_tryParseHexUintUncheckedBounds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2936,"src":"12134:31:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,uint256)"}},"id":2793,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12134:62:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":2784,"id":2794,"nodeType":"Return","src":"12127:69:15"}]},"documentation":{"id":2776,"nodeType":"StructuredDocumentation","src":"11790:222:15","text":" @dev Variant of {parseHexUint-string} that returns false if the parsing fails because of an invalid character.\n NOTE: This function will revert if the result does not fit in a `uint256`."},"id":2796,"implemented":true,"kind":"function","modifiers":[],"name":"tryParseHexUint","nameLocation":"12027:15:15","nodeType":"FunctionDefinition","parameters":{"id":2779,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2778,"mutability":"mutable","name":"input","nameLocation":"12057:5:15","nodeType":"VariableDeclaration","scope":2796,"src":"12043:19:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2777,"name":"string","nodeType":"ElementaryTypeName","src":"12043:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"12042:21:15"},"returnParameters":{"id":2784,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2781,"mutability":"mutable","name":"success","nameLocation":"12092:7:15","nodeType":"VariableDeclaration","scope":2796,"src":"12087:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2780,"name":"bool","nodeType":"ElementaryTypeName","src":"12087:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2783,"mutability":"mutable","name":"value","nameLocation":"12109:5:15","nodeType":"VariableDeclaration","scope":2796,"src":"12101:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2782,"name":"uint256","nodeType":"ElementaryTypeName","src":"12101:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12086:29:15"},"scope":3350,"src":"12018:186:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2832,"nodeType":"Block","src":"12624:150:15","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2820,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2816,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2810,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2803,"src":"12639:3:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":2813,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2799,"src":"12651:5:15","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2812,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12645:5:15","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2811,"name":"bytes","nodeType":"ElementaryTypeName","src":"12645:5:15","typeDescriptions":{}}},"id":2814,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12645:12:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2815,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12658:6:15","memberName":"length","nodeType":"MemberAccess","src":"12645:19:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12639:25:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2819,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2817,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2801,"src":"12668:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":2818,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2803,"src":"12676:3:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12668:11:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"12639:40:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2825,"nodeType":"IfStatement","src":"12635:63:15","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":2821,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"12689:5:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":2822,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12696:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":2823,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"12688:10:15","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":2809,"id":2824,"nodeType":"Return","src":"12681:17:15"}},{"expression":{"arguments":[{"id":2827,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2799,"src":"12748:5:15","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":2828,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2801,"src":"12755:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2829,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2803,"src":"12762:3:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2826,"name":"_tryParseHexUintUncheckedBounds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2936,"src":"12716:31:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,uint256)"}},"id":2830,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12716:50:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":2809,"id":2831,"nodeType":"Return","src":"12709:57:15"}]},"documentation":{"id":2797,"nodeType":"StructuredDocumentation","src":"12212:246:15","text":" @dev Variant of {parseHexUint-string-uint256-uint256} that returns false if the parsing fails because of an\n invalid character.\n NOTE: This function will revert if the result does not fit in a `uint256`."},"id":2833,"implemented":true,"kind":"function","modifiers":[],"name":"tryParseHexUint","nameLocation":"12473:15:15","nodeType":"FunctionDefinition","parameters":{"id":2804,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2799,"mutability":"mutable","name":"input","nameLocation":"12513:5:15","nodeType":"VariableDeclaration","scope":2833,"src":"12499:19:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2798,"name":"string","nodeType":"ElementaryTypeName","src":"12499:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2801,"mutability":"mutable","name":"begin","nameLocation":"12537:5:15","nodeType":"VariableDeclaration","scope":2833,"src":"12529:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2800,"name":"uint256","nodeType":"ElementaryTypeName","src":"12529:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2803,"mutability":"mutable","name":"end","nameLocation":"12561:3:15","nodeType":"VariableDeclaration","scope":2833,"src":"12553:11:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2802,"name":"uint256","nodeType":"ElementaryTypeName","src":"12553:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12488:83:15"},"returnParameters":{"id":2809,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2806,"mutability":"mutable","name":"success","nameLocation":"12600:7:15","nodeType":"VariableDeclaration","scope":2833,"src":"12595:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2805,"name":"bool","nodeType":"ElementaryTypeName","src":"12595:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2808,"mutability":"mutable","name":"value","nameLocation":"12617:5:15","nodeType":"VariableDeclaration","scope":2833,"src":"12609:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2807,"name":"uint256","nodeType":"ElementaryTypeName","src":"12609:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12594:29:15"},"scope":3350,"src":"12464:310:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2935,"nodeType":"Block","src":"13193:900:15","statements":[{"assignments":[2848],"declarations":[{"constant":false,"id":2848,"mutability":"mutable","name":"buffer","nameLocation":"13217:6:15","nodeType":"VariableDeclaration","scope":2935,"src":"13204:19:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2847,"name":"bytes","nodeType":"ElementaryTypeName","src":"13204:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":2853,"initialValue":{"arguments":[{"id":2851,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2836,"src":"13232:5:15","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2850,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13226:5:15","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2849,"name":"bytes","nodeType":"ElementaryTypeName","src":"13226:5:15","typeDescriptions":{}}},"id":2852,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13226:12:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"13204:34:15"},{"assignments":[2855],"declarations":[{"constant":false,"id":2855,"mutability":"mutable","name":"hasPrefix","nameLocation":"13294:9:15","nodeType":"VariableDeclaration","scope":2935,"src":"13289:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2854,"name":"bool","nodeType":"ElementaryTypeName","src":"13289:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":2875,"initialValue":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2874,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2860,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2856,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2840,"src":"13307:3:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2859,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2857,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2838,"src":"13313:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":2858,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13321:1:15","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"13313:9:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13307:15:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":2861,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"13306:17:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_bytes2","typeString":"bytes2"},"id":2873,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"id":2865,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2848,"src":"13357:6:15","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":2866,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2838,"src":"13365:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2864,"name":"_unsafeReadBytesOffset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3349,"src":"13334:22:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_bytes32_$","typeString":"function (bytes memory,uint256) pure returns (bytes32)"}},"id":2867,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13334:37:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2863,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13327:6:15","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes2_$","typeString":"type(bytes2)"},"typeName":{"id":2862,"name":"bytes2","nodeType":"ElementaryTypeName","src":"13327:6:15","typeDescriptions":{}}},"id":2868,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13327:45:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes2","typeString":"bytes2"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"3078","id":2871,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"13383:4:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_39bef1777deb3dfb14f64b9f81ced092c501fee72f90e93d03bb95ee89df9837","typeString":"literal_string \"0x\""},"value":"0x"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_39bef1777deb3dfb14f64b9f81ced092c501fee72f90e93d03bb95ee89df9837","typeString":"literal_string \"0x\""}],"id":2870,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13376:6:15","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes2_$","typeString":"type(bytes2)"},"typeName":{"id":2869,"name":"bytes2","nodeType":"ElementaryTypeName","src":"13376:6:15","typeDescriptions":{}}},"id":2872,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13376:12:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes2","typeString":"bytes2"}},"src":"13327:61:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"13306:82:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"13289:99:15"},{"assignments":[2877],"declarations":[{"constant":false,"id":2877,"mutability":"mutable","name":"offset","nameLocation":"13478:6:15","nodeType":"VariableDeclaration","scope":2935,"src":"13470:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2876,"name":"uint256","nodeType":"ElementaryTypeName","src":"13470:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2883,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2882,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":2878,"name":"hasPrefix","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2855,"src":"13487:9:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2879,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"13497:6:15","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7432,"src":"13487:16:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$attached_to$_t_bool_$","typeString":"function (bool) pure returns (uint256)"}},"id":2880,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13487:18:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"32","id":2881,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13508:1:15","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"13487:22:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"13470:39:15"},{"assignments":[2885],"declarations":[{"constant":false,"id":2885,"mutability":"mutable","name":"result","nameLocation":"13530:6:15","nodeType":"VariableDeclaration","scope":2935,"src":"13522:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2884,"name":"uint256","nodeType":"ElementaryTypeName","src":"13522:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2887,"initialValue":{"hexValue":"30","id":2886,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13539:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"13522:18:15"},{"body":{"id":2929,"nodeType":"Block","src":"13598:456:15","statements":[{"assignments":[2901],"declarations":[{"constant":false,"id":2901,"mutability":"mutable","name":"chr","nameLocation":"13619:3:15","nodeType":"VariableDeclaration","scope":2929,"src":"13613:9:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":2900,"name":"uint8","nodeType":"ElementaryTypeName","src":"13613:5:15","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"id":2911,"initialValue":{"arguments":[{"arguments":[{"arguments":[{"id":2906,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2848,"src":"13668:6:15","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":2907,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2889,"src":"13676:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2905,"name":"_unsafeReadBytesOffset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3349,"src":"13645:22:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_bytes32_$","typeString":"function (bytes memory,uint256) pure returns (bytes32)"}},"id":2908,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13645:33:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2904,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13638:6:15","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes1_$","typeString":"type(bytes1)"},"typeName":{"id":2903,"name":"bytes1","nodeType":"ElementaryTypeName","src":"13638:6:15","typeDescriptions":{}}},"id":2909,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13638:41:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes1","typeString":"bytes1"}],"id":2902,"name":"_tryParseChr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3171,"src":"13625:12:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes1_$returns$_t_uint8_$","typeString":"function (bytes1) pure returns (uint8)"}},"id":2910,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13625:55:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"VariableDeclarationStatement","src":"13613:67:15"},{"condition":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":2914,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2912,"name":"chr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2901,"src":"13699:3:15","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"3135","id":2913,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13705:2:15","typeDescriptions":{"typeIdentifier":"t_rational_15_by_1","typeString":"int_const 15"},"value":"15"},"src":"13699:8:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2919,"nodeType":"IfStatement","src":"13695:31:15","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":2915,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"13717:5:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":2916,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13724:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":2917,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"13716:10:15","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":2846,"id":2918,"nodeType":"Return","src":"13709:17:15"}},{"expression":{"id":2922,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2920,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2885,"src":"13741:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"hexValue":"3136","id":2921,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13751:2:15","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"13741:12:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2923,"nodeType":"ExpressionStatement","src":"13741:12:15"},{"id":2928,"nodeType":"UncheckedBlock","src":"13768:275:15","statements":[{"expression":{"id":2926,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2924,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2885,"src":"14014:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":2925,"name":"chr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2901,"src":"14024:3:15","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"14014:13:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2927,"nodeType":"ExpressionStatement","src":"14014:13:15"}]}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2896,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2894,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2889,"src":"13584:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":2895,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2840,"src":"13588:3:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13584:7:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2930,"initializationExpression":{"assignments":[2889],"declarations":[{"constant":false,"id":2889,"mutability":"mutable","name":"i","nameLocation":"13564:1:15","nodeType":"VariableDeclaration","scope":2930,"src":"13556:9:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2888,"name":"uint256","nodeType":"ElementaryTypeName","src":"13556:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2893,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2892,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2890,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2838,"src":"13568:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":2891,"name":"offset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2877,"src":"13576:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13568:14:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"13556:26:15"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":2898,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":true,"src":"13593:3:15","subExpression":{"id":2897,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2889,"src":"13595:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2899,"nodeType":"ExpressionStatement","src":"13593:3:15"},"nodeType":"ForStatement","src":"13551:503:15"},{"expression":{"components":[{"hexValue":"74727565","id":2931,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"14072:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"id":2932,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2885,"src":"14078:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2933,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"14071:14:15","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":2846,"id":2934,"nodeType":"Return","src":"14064:21:15"}]},"documentation":{"id":2834,"nodeType":"StructuredDocumentation","src":"12782:230:15","text":" @dev Implementation of {tryParseHexUint-string-uint256-uint256} that does not check bounds. Caller should make sure that\n `begin <= end <= input.length`. Other inputs would result in undefined behavior."},"id":2936,"implemented":true,"kind":"function","modifiers":[],"name":"_tryParseHexUintUncheckedBounds","nameLocation":"13027:31:15","nodeType":"FunctionDefinition","parameters":{"id":2841,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2836,"mutability":"mutable","name":"input","nameLocation":"13083:5:15","nodeType":"VariableDeclaration","scope":2936,"src":"13069:19:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2835,"name":"string","nodeType":"ElementaryTypeName","src":"13069:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2838,"mutability":"mutable","name":"begin","nameLocation":"13107:5:15","nodeType":"VariableDeclaration","scope":2936,"src":"13099:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2837,"name":"uint256","nodeType":"ElementaryTypeName","src":"13099:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2840,"mutability":"mutable","name":"end","nameLocation":"13131:3:15","nodeType":"VariableDeclaration","scope":2936,"src":"13123:11:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2839,"name":"uint256","nodeType":"ElementaryTypeName","src":"13123:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13058:83:15"},"returnParameters":{"id":2846,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2843,"mutability":"mutable","name":"success","nameLocation":"13169:7:15","nodeType":"VariableDeclaration","scope":2936,"src":"13164:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2842,"name":"bool","nodeType":"ElementaryTypeName","src":"13164:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2845,"mutability":"mutable","name":"value","nameLocation":"13186:5:15","nodeType":"VariableDeclaration","scope":2936,"src":"13178:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2844,"name":"uint256","nodeType":"ElementaryTypeName","src":"13178:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13163:29:15"},"scope":3350,"src":"13018:1075:15","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":2954,"nodeType":"Block","src":"14399:69:15","statements":[{"expression":{"arguments":[{"id":2945,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2939,"src":"14430:5:15","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"30","id":2946,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14437:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"expression":{"arguments":[{"id":2949,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2939,"src":"14446:5:15","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2948,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14440:5:15","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2947,"name":"bytes","nodeType":"ElementaryTypeName","src":"14440:5:15","typeDescriptions":{}}},"id":2950,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14440:12:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2951,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"14453:6:15","memberName":"length","nodeType":"MemberAccess","src":"14440:19:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2944,"name":"parseAddress","nodeType":"Identifier","overloadedDeclarations":[2955,2986],"referencedDeclaration":2986,"src":"14417:12:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_address_$","typeString":"function (string memory,uint256,uint256) pure returns (address)"}},"id":2952,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14417:43:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":2943,"id":2953,"nodeType":"Return","src":"14410:50:15"}]},"documentation":{"id":2937,"nodeType":"StructuredDocumentation","src":"14101:217:15","text":" @dev Parse a hexadecimal string (with or without \"0x\" prefix), and returns the value as an `address`.\n Requirements:\n - The string must be formatted as `(0x)?[0-9a-fA-F]{40}`"},"id":2955,"implemented":true,"kind":"function","modifiers":[],"name":"parseAddress","nameLocation":"14333:12:15","nodeType":"FunctionDefinition","parameters":{"id":2940,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2939,"mutability":"mutable","name":"input","nameLocation":"14360:5:15","nodeType":"VariableDeclaration","scope":2955,"src":"14346:19:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2938,"name":"string","nodeType":"ElementaryTypeName","src":"14346:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"14345:21:15"},"returnParameters":{"id":2943,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2942,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2955,"src":"14390:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2941,"name":"address","nodeType":"ElementaryTypeName","src":"14390:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"14389:9:15"},"scope":3350,"src":"14324:144:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2985,"nodeType":"Block","src":"14850:169:15","statements":[{"assignments":[2968,2970],"declarations":[{"constant":false,"id":2968,"mutability":"mutable","name":"success","nameLocation":"14867:7:15","nodeType":"VariableDeclaration","scope":2985,"src":"14862:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2967,"name":"bool","nodeType":"ElementaryTypeName","src":"14862:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2970,"mutability":"mutable","name":"value","nameLocation":"14884:5:15","nodeType":"VariableDeclaration","scope":2985,"src":"14876:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2969,"name":"address","nodeType":"ElementaryTypeName","src":"14876:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":2976,"initialValue":{"arguments":[{"id":2972,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2958,"src":"14909:5:15","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":2973,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2960,"src":"14916:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2974,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2962,"src":"14923:3:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2971,"name":"tryParseAddress","nodeType":"Identifier","overloadedDeclarations":[3007,3111],"referencedDeclaration":3111,"src":"14893:15:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_address_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,address)"}},"id":2975,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14893:34:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_address_$","typeString":"tuple(bool,address)"}},"nodeType":"VariableDeclarationStatement","src":"14861:66:15"},{"condition":{"id":2978,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"14942:8:15","subExpression":{"id":2977,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2968,"src":"14943:7:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2982,"nodeType":"IfStatement","src":"14938:50:15","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":2979,"name":"StringsInvalidAddressFormat","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2014,"src":"14959:27:15","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$_t_error_$","typeString":"function () pure returns (error)"}},"id":2980,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14959:29:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":2981,"nodeType":"RevertStatement","src":"14952:36:15"}},{"expression":{"id":2983,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2970,"src":"15006:5:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":2966,"id":2984,"nodeType":"Return","src":"14999:12:15"}]},"documentation":{"id":2956,"nodeType":"StructuredDocumentation","src":"14476:265:15","text":" @dev Variant of {parseAddress-string} that parses a substring of `input` located between position `begin` (included) and\n `end` (excluded).\n Requirements:\n - The substring must be formatted as `(0x)?[0-9a-fA-F]{40}`"},"id":2986,"implemented":true,"kind":"function","modifiers":[],"name":"parseAddress","nameLocation":"14756:12:15","nodeType":"FunctionDefinition","parameters":{"id":2963,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2958,"mutability":"mutable","name":"input","nameLocation":"14783:5:15","nodeType":"VariableDeclaration","scope":2986,"src":"14769:19:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2957,"name":"string","nodeType":"ElementaryTypeName","src":"14769:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2960,"mutability":"mutable","name":"begin","nameLocation":"14798:5:15","nodeType":"VariableDeclaration","scope":2986,"src":"14790:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2959,"name":"uint256","nodeType":"ElementaryTypeName","src":"14790:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2962,"mutability":"mutable","name":"end","nameLocation":"14813:3:15","nodeType":"VariableDeclaration","scope":2986,"src":"14805:11:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2961,"name":"uint256","nodeType":"ElementaryTypeName","src":"14805:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14768:49:15"},"returnParameters":{"id":2966,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2965,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2986,"src":"14841:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2964,"name":"address","nodeType":"ElementaryTypeName","src":"14841:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"14840:9:15"},"scope":3350,"src":"14747:272:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3006,"nodeType":"Block","src":"15332:72:15","statements":[{"expression":{"arguments":[{"id":2997,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2989,"src":"15366:5:15","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"30","id":2998,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15373:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"expression":{"arguments":[{"id":3001,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2989,"src":"15382:5:15","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3000,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15376:5:15","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2999,"name":"bytes","nodeType":"ElementaryTypeName","src":"15376:5:15","typeDescriptions":{}}},"id":3002,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15376:12:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3003,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"15389:6:15","memberName":"length","nodeType":"MemberAccess","src":"15376:19:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2996,"name":"tryParseAddress","nodeType":"Identifier","overloadedDeclarations":[3007,3111],"referencedDeclaration":3111,"src":"15350:15:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_address_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,address)"}},"id":3004,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15350:46:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_address_$","typeString":"tuple(bool,address)"}},"functionReturnParameters":2995,"id":3005,"nodeType":"Return","src":"15343:53:15"}]},"documentation":{"id":2987,"nodeType":"StructuredDocumentation","src":"15027:201:15","text":" @dev Variant of {parseAddress-string} that returns false if the parsing fails because the input is not a properly\n formatted address. See {parseAddress-string} requirements."},"id":3007,"implemented":true,"kind":"function","modifiers":[],"name":"tryParseAddress","nameLocation":"15243:15:15","nodeType":"FunctionDefinition","parameters":{"id":2990,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2989,"mutability":"mutable","name":"input","nameLocation":"15273:5:15","nodeType":"VariableDeclaration","scope":3007,"src":"15259:19:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2988,"name":"string","nodeType":"ElementaryTypeName","src":"15259:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"15258:21:15"},"returnParameters":{"id":2995,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2992,"mutability":"mutable","name":"success","nameLocation":"15308:7:15","nodeType":"VariableDeclaration","scope":3007,"src":"15303:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2991,"name":"bool","nodeType":"ElementaryTypeName","src":"15303:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2994,"mutability":"mutable","name":"value","nameLocation":"15325:5:15","nodeType":"VariableDeclaration","scope":3007,"src":"15317:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2993,"name":"address","nodeType":"ElementaryTypeName","src":"15317:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"15302:29:15"},"scope":3350,"src":"15234:170:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3110,"nodeType":"Block","src":"15807:747:15","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3031,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3027,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3021,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3014,"src":"15822:3:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":3024,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3010,"src":"15834:5:15","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3023,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15828:5:15","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":3022,"name":"bytes","nodeType":"ElementaryTypeName","src":"15828:5:15","typeDescriptions":{}}},"id":3025,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15828:12:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3026,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"15841:6:15","memberName":"length","nodeType":"MemberAccess","src":"15828:19:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15822:25:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3030,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3028,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3012,"src":"15851:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":3029,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3014,"src":"15859:3:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15851:11:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"15822:40:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3039,"nodeType":"IfStatement","src":"15818:72:15","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":3032,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"15872:5:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"arguments":[{"hexValue":"30","id":3035,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15887:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3034,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15879:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3033,"name":"address","nodeType":"ElementaryTypeName","src":"15879:7:15","typeDescriptions":{}}},"id":3036,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15879:10:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":3037,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"15871:19:15","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_address_$","typeString":"tuple(bool,address)"}},"functionReturnParameters":3020,"id":3038,"nodeType":"Return","src":"15864:26:15"}},{"assignments":[3041],"declarations":[{"constant":false,"id":3041,"mutability":"mutable","name":"hasPrefix","nameLocation":"15908:9:15","nodeType":"VariableDeclaration","scope":3110,"src":"15903:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3040,"name":"bool","nodeType":"ElementaryTypeName","src":"15903:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":3064,"initialValue":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3063,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3046,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3042,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3014,"src":"15921:3:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3045,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3043,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3012,"src":"15927:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":3044,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15935:1:15","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"15927:9:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15921:15:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":3047,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"15920:17:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_bytes2","typeString":"bytes2"},"id":3062,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"arguments":[{"id":3053,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3010,"src":"15977:5:15","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3052,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15971:5:15","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":3051,"name":"bytes","nodeType":"ElementaryTypeName","src":"15971:5:15","typeDescriptions":{}}},"id":3054,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15971:12:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":3055,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3012,"src":"15985:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3050,"name":"_unsafeReadBytesOffset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3349,"src":"15948:22:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_bytes32_$","typeString":"function (bytes memory,uint256) pure returns (bytes32)"}},"id":3056,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15948:43:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3049,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15941:6:15","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes2_$","typeString":"type(bytes2)"},"typeName":{"id":3048,"name":"bytes2","nodeType":"ElementaryTypeName","src":"15941:6:15","typeDescriptions":{}}},"id":3057,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15941:51:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes2","typeString":"bytes2"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"3078","id":3060,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"16003:4:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_39bef1777deb3dfb14f64b9f81ced092c501fee72f90e93d03bb95ee89df9837","typeString":"literal_string \"0x\""},"value":"0x"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_39bef1777deb3dfb14f64b9f81ced092c501fee72f90e93d03bb95ee89df9837","typeString":"literal_string \"0x\""}],"id":3059,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15996:6:15","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes2_$","typeString":"type(bytes2)"},"typeName":{"id":3058,"name":"bytes2","nodeType":"ElementaryTypeName","src":"15996:6:15","typeDescriptions":{}}},"id":3061,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15996:12:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes2","typeString":"bytes2"}},"src":"15941:67:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"15920:88:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"15903:105:15"},{"assignments":[3066],"declarations":[{"constant":false,"id":3066,"mutability":"mutable","name":"expectedLength","nameLocation":"16098:14:15","nodeType":"VariableDeclaration","scope":3110,"src":"16090:22:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3065,"name":"uint256","nodeType":"ElementaryTypeName","src":"16090:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3074,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3073,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"3430","id":3067,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16115:2:15","typeDescriptions":{"typeIdentifier":"t_rational_40_by_1","typeString":"int_const 40"},"value":"40"},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3072,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":3068,"name":"hasPrefix","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3041,"src":"16120:9:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3069,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"16130:6:15","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7432,"src":"16120:16:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$attached_to$_t_bool_$","typeString":"function (bool) pure returns (uint256)"}},"id":3070,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16120:18:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"32","id":3071,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16141:1:15","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"16120:22:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"16115:27:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"16090:52:15"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3079,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3077,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3075,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3014,"src":"16210:3:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":3076,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3012,"src":"16216:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"16210:11:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":3078,"name":"expectedLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3066,"src":"16225:14:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"16210:29:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":3108,"nodeType":"Block","src":"16494:53:15","statements":[{"expression":{"components":[{"hexValue":"66616c7365","id":3101,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"16517:5:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"arguments":[{"hexValue":"30","id":3104,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16532:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3103,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16524:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3102,"name":"address","nodeType":"ElementaryTypeName","src":"16524:7:15","typeDescriptions":{}}},"id":3105,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16524:10:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":3106,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"16516:19:15","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_address_$","typeString":"tuple(bool,address)"}},"functionReturnParameters":3020,"id":3107,"nodeType":"Return","src":"16509:26:15"}]},"id":3109,"nodeType":"IfStatement","src":"16206:341:15","trueBody":{"id":3100,"nodeType":"Block","src":"16241:247:15","statements":[{"assignments":[3081,3083],"declarations":[{"constant":false,"id":3081,"mutability":"mutable","name":"s","nameLocation":"16364:1:15","nodeType":"VariableDeclaration","scope":3100,"src":"16359:6:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3080,"name":"bool","nodeType":"ElementaryTypeName","src":"16359:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3083,"mutability":"mutable","name":"v","nameLocation":"16375:1:15","nodeType":"VariableDeclaration","scope":3100,"src":"16367:9:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3082,"name":"uint256","nodeType":"ElementaryTypeName","src":"16367:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3089,"initialValue":{"arguments":[{"id":3085,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3010,"src":"16412:5:15","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":3086,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3012,"src":"16419:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3087,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3014,"src":"16426:3:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3084,"name":"_tryParseHexUintUncheckedBounds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2936,"src":"16380:31:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,uint256)"}},"id":3088,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16380:50:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"16358:72:15"},{"expression":{"components":[{"id":3090,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3081,"src":"16453:1:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"arguments":[{"arguments":[{"id":3095,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3083,"src":"16472:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3094,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16464:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":3093,"name":"uint160","nodeType":"ElementaryTypeName","src":"16464:7:15","typeDescriptions":{}}},"id":3096,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16464:10:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":3092,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16456:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3091,"name":"address","nodeType":"ElementaryTypeName","src":"16456:7:15","typeDescriptions":{}}},"id":3097,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16456:19:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":3098,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"16452:24:15","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_address_$","typeString":"tuple(bool,address)"}},"functionReturnParameters":3020,"id":3099,"nodeType":"Return","src":"16445:31:15"}]}}]},"documentation":{"id":3008,"nodeType":"StructuredDocumentation","src":"15412:229:15","text":" @dev Variant of {parseAddress-string-uint256-uint256} that returns false if the parsing fails because input is not a properly\n formatted address. See {parseAddress-string-uint256-uint256} requirements."},"id":3111,"implemented":true,"kind":"function","modifiers":[],"name":"tryParseAddress","nameLocation":"15656:15:15","nodeType":"FunctionDefinition","parameters":{"id":3015,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3010,"mutability":"mutable","name":"input","nameLocation":"15696:5:15","nodeType":"VariableDeclaration","scope":3111,"src":"15682:19:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3009,"name":"string","nodeType":"ElementaryTypeName","src":"15682:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":3012,"mutability":"mutable","name":"begin","nameLocation":"15720:5:15","nodeType":"VariableDeclaration","scope":3111,"src":"15712:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3011,"name":"uint256","nodeType":"ElementaryTypeName","src":"15712:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3014,"mutability":"mutable","name":"end","nameLocation":"15744:3:15","nodeType":"VariableDeclaration","scope":3111,"src":"15736:11:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3013,"name":"uint256","nodeType":"ElementaryTypeName","src":"15736:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15671:83:15"},"returnParameters":{"id":3020,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3017,"mutability":"mutable","name":"success","nameLocation":"15783:7:15","nodeType":"VariableDeclaration","scope":3111,"src":"15778:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3016,"name":"bool","nodeType":"ElementaryTypeName","src":"15778:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3019,"mutability":"mutable","name":"value","nameLocation":"15800:5:15","nodeType":"VariableDeclaration","scope":3111,"src":"15792:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3018,"name":"address","nodeType":"ElementaryTypeName","src":"15792:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"15777:29:15"},"scope":3350,"src":"15647:907:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3170,"nodeType":"Block","src":"16625:477:15","statements":[{"assignments":[3119],"declarations":[{"constant":false,"id":3119,"mutability":"mutable","name":"value","nameLocation":"16642:5:15","nodeType":"VariableDeclaration","scope":3170,"src":"16636:11:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":3118,"name":"uint8","nodeType":"ElementaryTypeName","src":"16636:5:15","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"id":3124,"initialValue":{"arguments":[{"id":3122,"name":"chr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3113,"src":"16656:3:15","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes1","typeString":"bytes1"}],"id":3121,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16650:5:15","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":3120,"name":"uint8","nodeType":"ElementaryTypeName","src":"16650:5:15","typeDescriptions":{}}},"id":3123,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16650:10:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"VariableDeclarationStatement","src":"16636:24:15"},{"id":3167,"nodeType":"UncheckedBlock","src":"16827:243:15","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3131,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":3127,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3125,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3119,"src":"16856:5:15","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"3437","id":3126,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16864:2:15","typeDescriptions":{"typeIdentifier":"t_rational_47_by_1","typeString":"int_const 47"},"value":"47"},"src":"16856:10:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":3130,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3128,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3119,"src":"16870:5:15","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"3538","id":3129,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16878:2:15","typeDescriptions":{"typeIdentifier":"t_rational_58_by_1","typeString":"int_const 58"},"value":"58"},"src":"16870:10:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"16856:24:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3142,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":3138,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3136,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3119,"src":"16917:5:15","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"3936","id":3137,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16925:2:15","typeDescriptions":{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},"value":"96"},"src":"16917:10:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":3141,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3139,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3119,"src":"16931:5:15","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"313033","id":3140,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16939:3:15","typeDescriptions":{"typeIdentifier":"t_rational_103_by_1","typeString":"int_const 103"},"value":"103"},"src":"16931:11:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"16917:25:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3153,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":3149,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3147,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3119,"src":"16979:5:15","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"3634","id":3148,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16987:2:15","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"16979:10:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":3152,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3150,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3119,"src":"16993:5:15","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"3731","id":3151,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17001:2:15","typeDescriptions":{"typeIdentifier":"t_rational_71_by_1","typeString":"int_const 71"},"value":"71"},"src":"16993:10:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"16979:24:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"expression":{"expression":{"arguments":[{"id":3160,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"17048:5:15","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":3159,"name":"uint8","nodeType":"ElementaryTypeName","src":"17048:5:15","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"}],"id":3158,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"17043:4:15","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":3161,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17043:11:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint8","typeString":"type(uint8)"}},"id":3162,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"17055:3:15","memberName":"max","nodeType":"MemberAccess","src":"17043:15:15","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"functionReturnParameters":3117,"id":3163,"nodeType":"Return","src":"17036:22:15"},"id":3164,"nodeType":"IfStatement","src":"16975:83:15","trueBody":{"expression":{"id":3156,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3154,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3119,"src":"17005:5:15","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"hexValue":"3535","id":3155,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17014:2:15","typeDescriptions":{"typeIdentifier":"t_rational_55_by_1","typeString":"int_const 55"},"value":"55"},"src":"17005:11:15","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"id":3157,"nodeType":"ExpressionStatement","src":"17005:11:15"}},"id":3165,"nodeType":"IfStatement","src":"16913:145:15","trueBody":{"expression":{"id":3145,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3143,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3119,"src":"16944:5:15","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"hexValue":"3837","id":3144,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16953:2:15","typeDescriptions":{"typeIdentifier":"t_rational_87_by_1","typeString":"int_const 87"},"value":"87"},"src":"16944:11:15","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"id":3146,"nodeType":"ExpressionStatement","src":"16944:11:15"}},"id":3166,"nodeType":"IfStatement","src":"16852:206:15","trueBody":{"expression":{"id":3134,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3132,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3119,"src":"16882:5:15","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"hexValue":"3438","id":3133,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16891:2:15","typeDescriptions":{"typeIdentifier":"t_rational_48_by_1","typeString":"int_const 48"},"value":"48"},"src":"16882:11:15","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"id":3135,"nodeType":"ExpressionStatement","src":"16882:11:15"}}]},{"expression":{"id":3168,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3119,"src":"17089:5:15","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"functionReturnParameters":3117,"id":3169,"nodeType":"Return","src":"17082:12:15"}]},"id":3171,"implemented":true,"kind":"function","modifiers":[],"name":"_tryParseChr","nameLocation":"16571:12:15","nodeType":"FunctionDefinition","parameters":{"id":3114,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3113,"mutability":"mutable","name":"chr","nameLocation":"16591:3:15","nodeType":"VariableDeclaration","scope":3171,"src":"16584:10:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"typeName":{"id":3112,"name":"bytes1","nodeType":"ElementaryTypeName","src":"16584:6:15","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"visibility":"internal"}],"src":"16583:12:15"},"returnParameters":{"id":3117,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3116,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3171,"src":"16618:5:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":3115,"name":"uint8","nodeType":"ElementaryTypeName","src":"16618:5:15","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"16617:7:15"},"scope":3350,"src":"16562:540:15","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":3336,"nodeType":"Block","src":"17779:1361:15","statements":[{"assignments":[3180],"declarations":[{"constant":false,"id":3180,"mutability":"mutable","name":"buffer","nameLocation":"17803:6:15","nodeType":"VariableDeclaration","scope":3336,"src":"17790:19:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3179,"name":"bytes","nodeType":"ElementaryTypeName","src":"17790:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":3185,"initialValue":{"arguments":[{"id":3183,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3174,"src":"17818:5:15","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3182,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"17812:5:15","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":3181,"name":"bytes","nodeType":"ElementaryTypeName","src":"17812:5:15","typeDescriptions":{}}},"id":3184,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17812:12:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"17790:34:15"},{"assignments":[3187],"declarations":[{"constant":false,"id":3187,"mutability":"mutable","name":"output","nameLocation":"17848:6:15","nodeType":"VariableDeclaration","scope":3336,"src":"17835:19:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3186,"name":"bytes","nodeType":"ElementaryTypeName","src":"17835:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":3195,"initialValue":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3193,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":3190,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17867:1:15","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"expression":{"id":3191,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3180,"src":"17871:6:15","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3192,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"17878:6:15","memberName":"length","nodeType":"MemberAccess","src":"17871:13:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"17867:17:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3189,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"17857:9:15","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$","typeString":"function (uint256) pure returns (bytes memory)"},"typeName":{"id":3188,"name":"bytes","nodeType":"ElementaryTypeName","src":"17861:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}}},"id":3194,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17857:28:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"17835:50:15"},{"assignments":[3197],"declarations":[{"constant":false,"id":3197,"mutability":"mutable","name":"outputLength","nameLocation":"17927:12:15","nodeType":"VariableDeclaration","scope":3336,"src":"17919:20:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3196,"name":"uint256","nodeType":"ElementaryTypeName","src":"17919:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3199,"initialValue":{"hexValue":"30","id":3198,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17942:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"17919:24:15"},{"body":{"id":3328,"nodeType":"Block","src":"17996:871:15","statements":[{"assignments":[3211],"declarations":[{"constant":false,"id":3211,"mutability":"mutable","name":"char","nameLocation":"18018:4:15","nodeType":"VariableDeclaration","scope":3328,"src":"18011:11:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"typeName":{"id":3210,"name":"bytes1","nodeType":"ElementaryTypeName","src":"18011:6:15","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"visibility":"internal"}],"id":3219,"initialValue":{"arguments":[{"arguments":[{"id":3215,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3180,"src":"18055:6:15","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":3216,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3201,"src":"18063:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3214,"name":"_unsafeReadBytesOffset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3349,"src":"18032:22:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_bytes32_$","typeString":"function (bytes memory,uint256) pure returns (bytes32)"}},"id":3217,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18032:33:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3213,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"18025:6:15","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes1_$","typeString":"type(bytes1)"},"typeName":{"id":3212,"name":"bytes1","nodeType":"ElementaryTypeName","src":"18025:6:15","typeDescriptions":{}}},"id":3218,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18025:41:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"VariableDeclarationStatement","src":"18011:55:15"},{"condition":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3231,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3228,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3220,"name":"SPECIAL_CHARS_LOOKUP","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2001,"src":"18087:20:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3226,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":3221,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18111:1:15","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"arguments":[{"id":3224,"name":"char","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3211,"src":"18122:4:15","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes1","typeString":"bytes1"}],"id":3223,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"18116:5:15","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":3222,"name":"uint8","nodeType":"ElementaryTypeName","src":"18116:5:15","typeDescriptions":{}}},"id":3225,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18116:11:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"18111:16:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3227,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"18110:18:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"18087:41:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3229,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"18086:43:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":3230,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18133:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"18086:48:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":3232,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"18085:50:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":3326,"nodeType":"Block","src":"18792:64:15","statements":[{"expression":{"id":3324,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":3319,"name":"output","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3187,"src":"18811:6:15","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3322,"indexExpression":{"id":3321,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"18818:14:15","subExpression":{"id":3320,"name":"outputLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3197,"src":"18818:12:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"18811:22:15","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":3323,"name":"char","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3211,"src":"18836:4:15","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"src":"18811:29:15","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":3325,"nodeType":"ExpressionStatement","src":"18811:29:15"}]},"id":3327,"nodeType":"IfStatement","src":"18081:775:15","trueBody":{"id":3318,"nodeType":"Block","src":"18137:649:15","statements":[{"expression":{"id":3238,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":3233,"name":"output","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3187,"src":"18156:6:15","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3236,"indexExpression":{"id":3235,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"18163:14:15","subExpression":{"id":3234,"name":"outputLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3197,"src":"18163:12:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"18156:22:15","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"5c","id":3237,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"18181:4:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_731553fa98541ade8b78284229adfe09a819380dee9244baac20dd1e0aa24095","typeString":"literal_string \"\\\""},"value":"\\"},"src":"18156:29:15","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":3239,"nodeType":"ExpressionStatement","src":"18156:29:15"},{"condition":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":3242,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3240,"name":"char","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3211,"src":"18208:4:15","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30783038","id":3241,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18216:4:15","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"0x08"},"src":"18208:12:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":3252,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3250,"name":"char","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3211,"src":"18278:4:15","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30783039","id":3251,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18286:4:15","typeDescriptions":{"typeIdentifier":"t_rational_9_by_1","typeString":"int_const 9"},"value":"0x09"},"src":"18278:12:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":3262,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3260,"name":"char","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3211,"src":"18348:4:15","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30783061","id":3261,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18356:4:15","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"0x0a"},"src":"18348:12:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":3272,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3270,"name":"char","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3211,"src":"18418:4:15","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30783063","id":3271,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18426:4:15","typeDescriptions":{"typeIdentifier":"t_rational_12_by_1","typeString":"int_const 12"},"value":"0x0c"},"src":"18418:12:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":3282,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3280,"name":"char","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3211,"src":"18488:4:15","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30783064","id":3281,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18496:4:15","typeDescriptions":{"typeIdentifier":"t_rational_13_by_1","typeString":"int_const 13"},"value":"0x0d"},"src":"18488:12:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":3292,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3290,"name":"char","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3211,"src":"18558:4:15","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30783563","id":3291,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18566:4:15","typeDescriptions":{"typeIdentifier":"t_rational_92_by_1","typeString":"int_const 92"},"value":"0x5c"},"src":"18558:12:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":3302,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3300,"name":"char","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3211,"src":"18629:4:15","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30783232","id":3301,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18637:4:15","typeDescriptions":{"typeIdentifier":"t_rational_34_by_1","typeString":"int_const 34"},"value":"0x22"},"src":"18629:12:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3311,"nodeType":"IfStatement","src":"18625:146:15","trueBody":{"id":3310,"nodeType":"Block","src":"18643:128:15","statements":[{"expression":{"id":3308,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":3303,"name":"output","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3187,"src":"18723:6:15","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3306,"indexExpression":{"id":3305,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"18730:14:15","subExpression":{"id":3304,"name":"outputLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3197,"src":"18730:12:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"18723:22:15","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"22","id":3307,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"18748:3:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_6e9f33448a4153023cdaf3eb759f1afdc24aba433a3e18b683f8c04a6eaa69f0","typeString":"literal_string \"\"\""},"value":"\""},"src":"18723:28:15","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":3309,"nodeType":"ExpressionStatement","src":"18723:28:15"}]}},"id":3312,"nodeType":"IfStatement","src":"18554:217:15","trueBody":{"expression":{"id":3298,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":3293,"name":"output","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3187,"src":"18572:6:15","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3296,"indexExpression":{"id":3295,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"18579:14:15","subExpression":{"id":3294,"name":"outputLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3197,"src":"18579:12:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"18572:22:15","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"5c","id":3297,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"18597:4:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_731553fa98541ade8b78284229adfe09a819380dee9244baac20dd1e0aa24095","typeString":"literal_string \"\\\""},"value":"\\"},"src":"18572:29:15","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":3299,"nodeType":"ExpressionStatement","src":"18572:29:15"}},"id":3313,"nodeType":"IfStatement","src":"18484:287:15","trueBody":{"expression":{"id":3288,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":3283,"name":"output","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3187,"src":"18502:6:15","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3286,"indexExpression":{"id":3285,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"18509:14:15","subExpression":{"id":3284,"name":"outputLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3197,"src":"18509:12:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"18502:22:15","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"72","id":3287,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"18527:3:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_414f72a4d550cad29f17d9d99a4af64b3776ec5538cd440cef0f03fef2e9e010","typeString":"literal_string \"r\""},"value":"r"},"src":"18502:28:15","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":3289,"nodeType":"ExpressionStatement","src":"18502:28:15"}},"id":3314,"nodeType":"IfStatement","src":"18414:357:15","trueBody":{"expression":{"id":3278,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":3273,"name":"output","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3187,"src":"18432:6:15","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3276,"indexExpression":{"id":3275,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"18439:14:15","subExpression":{"id":3274,"name":"outputLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3197,"src":"18439:12:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"18432:22:15","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"66","id":3277,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"18457:3:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_d1e8aeb79500496ef3dc2e57ba746a8315d048b7a664a2bf948db4fa91960483","typeString":"literal_string \"f\""},"value":"f"},"src":"18432:28:15","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":3279,"nodeType":"ExpressionStatement","src":"18432:28:15"}},"id":3315,"nodeType":"IfStatement","src":"18344:427:15","trueBody":{"expression":{"id":3268,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":3263,"name":"output","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3187,"src":"18362:6:15","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3266,"indexExpression":{"id":3265,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"18369:14:15","subExpression":{"id":3264,"name":"outputLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3197,"src":"18369:12:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"18362:22:15","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"6e","id":3267,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"18387:3:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_4b4ecedb4964a40fe416b16c7bd8b46092040ec42ef0aa69e59f09872f105cf3","typeString":"literal_string \"n\""},"value":"n"},"src":"18362:28:15","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":3269,"nodeType":"ExpressionStatement","src":"18362:28:15"}},"id":3316,"nodeType":"IfStatement","src":"18274:497:15","trueBody":{"expression":{"id":3258,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":3253,"name":"output","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3187,"src":"18292:6:15","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3256,"indexExpression":{"id":3255,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"18299:14:15","subExpression":{"id":3254,"name":"outputLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3197,"src":"18299:12:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"18292:22:15","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74","id":3257,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"18317:3:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_cac1bb71f0a97c8ac94ca9546b43178a9ad254c7b757ac07433aa6df35cd8089","typeString":"literal_string \"t\""},"value":"t"},"src":"18292:28:15","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":3259,"nodeType":"ExpressionStatement","src":"18292:28:15"}},"id":3317,"nodeType":"IfStatement","src":"18204:567:15","trueBody":{"expression":{"id":3248,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":3243,"name":"output","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3187,"src":"18222:6:15","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3246,"indexExpression":{"id":3245,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"18229:14:15","subExpression":{"id":3244,"name":"outputLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3197,"src":"18229:12:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"18222:22:15","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"62","id":3247,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"18247:3:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_b5553de315e0edf504d9150af82dafa5c4667fa618ed0a6f19c69b41166c5510","typeString":"literal_string \"b\""},"value":"b"},"src":"18222:28:15","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":3249,"nodeType":"ExpressionStatement","src":"18222:28:15"}}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3206,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3203,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3201,"src":"17972:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":3204,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3180,"src":"17976:6:15","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3205,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"17983:6:15","memberName":"length","nodeType":"MemberAccess","src":"17976:13:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"17972:17:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3329,"initializationExpression":{"assignments":[3201],"declarations":[{"constant":false,"id":3201,"mutability":"mutable","name":"i","nameLocation":"17969:1:15","nodeType":"VariableDeclaration","scope":3329,"src":"17961:9:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3200,"name":"uint256","nodeType":"ElementaryTypeName","src":"17961:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3202,"nodeType":"VariableDeclarationStatement","src":"17961:9:15"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":3208,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":true,"src":"17991:3:15","subExpression":{"id":3207,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3201,"src":"17993:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3209,"nodeType":"ExpressionStatement","src":"17991:3:15"},"nodeType":"ForStatement","src":"17956:911:15"},{"AST":{"nativeSrc":"18967:132:15","nodeType":"YulBlock","src":"18967:132:15","statements":[{"expression":{"arguments":[{"name":"output","nativeSrc":"18989:6:15","nodeType":"YulIdentifier","src":"18989:6:15"},{"name":"outputLength","nativeSrc":"18997:12:15","nodeType":"YulIdentifier","src":"18997:12:15"}],"functionName":{"name":"mstore","nativeSrc":"18982:6:15","nodeType":"YulIdentifier","src":"18982:6:15"},"nativeSrc":"18982:28:15","nodeType":"YulFunctionCall","src":"18982:28:15"},"nativeSrc":"18982:28:15","nodeType":"YulExpressionStatement","src":"18982:28:15"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"19031:4:15","nodeType":"YulLiteral","src":"19031:4:15","type":"","value":"0x40"},{"arguments":[{"name":"output","nativeSrc":"19041:6:15","nodeType":"YulIdentifier","src":"19041:6:15"},{"arguments":[{"kind":"number","nativeSrc":"19053:1:15","nodeType":"YulLiteral","src":"19053:1:15","type":"","value":"5"},{"arguments":[{"kind":"number","nativeSrc":"19060:1:15","nodeType":"YulLiteral","src":"19060:1:15","type":"","value":"5"},{"arguments":[{"name":"outputLength","nativeSrc":"19067:12:15","nodeType":"YulIdentifier","src":"19067:12:15"},{"kind":"number","nativeSrc":"19081:2:15","nodeType":"YulLiteral","src":"19081:2:15","type":"","value":"63"}],"functionName":{"name":"add","nativeSrc":"19063:3:15","nodeType":"YulIdentifier","src":"19063:3:15"},"nativeSrc":"19063:21:15","nodeType":"YulFunctionCall","src":"19063:21:15"}],"functionName":{"name":"shr","nativeSrc":"19056:3:15","nodeType":"YulIdentifier","src":"19056:3:15"},"nativeSrc":"19056:29:15","nodeType":"YulFunctionCall","src":"19056:29:15"}],"functionName":{"name":"shl","nativeSrc":"19049:3:15","nodeType":"YulIdentifier","src":"19049:3:15"},"nativeSrc":"19049:37:15","nodeType":"YulFunctionCall","src":"19049:37:15"}],"functionName":{"name":"add","nativeSrc":"19037:3:15","nodeType":"YulIdentifier","src":"19037:3:15"},"nativeSrc":"19037:50:15","nodeType":"YulFunctionCall","src":"19037:50:15"}],"functionName":{"name":"mstore","nativeSrc":"19024:6:15","nodeType":"YulIdentifier","src":"19024:6:15"},"nativeSrc":"19024:64:15","nodeType":"YulFunctionCall","src":"19024:64:15"},"nativeSrc":"19024:64:15","nodeType":"YulExpressionStatement","src":"19024:64:15"}]},"evmVersion":"paris","externalReferences":[{"declaration":3187,"isOffset":false,"isSlot":false,"src":"18989:6:15","valueSize":1},{"declaration":3187,"isOffset":false,"isSlot":false,"src":"19041:6:15","valueSize":1},{"declaration":3197,"isOffset":false,"isSlot":false,"src":"18997:12:15","valueSize":1},{"declaration":3197,"isOffset":false,"isSlot":false,"src":"19067:12:15","valueSize":1}],"flags":["memory-safe"],"id":3330,"nodeType":"InlineAssembly","src":"18942:157:15"},{"expression":{"arguments":[{"id":3333,"name":"output","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3187,"src":"19125:6:15","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":3332,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"19118:6:15","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":3331,"name":"string","nodeType":"ElementaryTypeName","src":"19118:6:15","typeDescriptions":{}}},"id":3334,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19118:14:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":3178,"id":3335,"nodeType":"Return","src":"19111:21:15"}]},"documentation":{"id":3172,"nodeType":"StructuredDocumentation","src":"17110:584:15","text":" @dev Escape special characters in JSON strings. This can be useful to prevent JSON injection in NFT metadata.\n WARNING: This function should only be used in double quoted JSON strings. Single quotes are not escaped.\n NOTE: This function escapes all unicode characters, and not just the ones in ranges defined in section 2.5 of\n RFC-4627 (U+0000 to U+001F, U+0022 and U+005C). ECMAScript's `JSON.parse` does recover escaped unicode\n characters that are not in this range, but other tooling may provide different results."},"id":3337,"implemented":true,"kind":"function","modifiers":[],"name":"escapeJSON","nameLocation":"17709:10:15","nodeType":"FunctionDefinition","parameters":{"id":3175,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3174,"mutability":"mutable","name":"input","nameLocation":"17734:5:15","nodeType":"VariableDeclaration","scope":3337,"src":"17720:19:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3173,"name":"string","nodeType":"ElementaryTypeName","src":"17720:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"17719:21:15"},"returnParameters":{"id":3178,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3177,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3337,"src":"17764:13:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3176,"name":"string","nodeType":"ElementaryTypeName","src":"17764:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"17763:15:15"},"scope":3350,"src":"17700:1440:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3348,"nodeType":"Block","src":"19533:230:15","statements":[{"AST":{"nativeSrc":"19684:72:15","nodeType":"YulBlock","src":"19684:72:15","statements":[{"nativeSrc":"19699:46:15","nodeType":"YulAssignment","src":"19699:46:15","value":{"arguments":[{"arguments":[{"name":"buffer","nativeSrc":"19718:6:15","nodeType":"YulIdentifier","src":"19718:6:15"},{"arguments":[{"kind":"number","nativeSrc":"19730:4:15","nodeType":"YulLiteral","src":"19730:4:15","type":"","value":"0x20"},{"name":"offset","nativeSrc":"19736:6:15","nodeType":"YulIdentifier","src":"19736:6:15"}],"functionName":{"name":"add","nativeSrc":"19726:3:15","nodeType":"YulIdentifier","src":"19726:3:15"},"nativeSrc":"19726:17:15","nodeType":"YulFunctionCall","src":"19726:17:15"}],"functionName":{"name":"add","nativeSrc":"19714:3:15","nodeType":"YulIdentifier","src":"19714:3:15"},"nativeSrc":"19714:30:15","nodeType":"YulFunctionCall","src":"19714:30:15"}],"functionName":{"name":"mload","nativeSrc":"19708:5:15","nodeType":"YulIdentifier","src":"19708:5:15"},"nativeSrc":"19708:37:15","nodeType":"YulFunctionCall","src":"19708:37:15"},"variableNames":[{"name":"value","nativeSrc":"19699:5:15","nodeType":"YulIdentifier","src":"19699:5:15"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":3340,"isOffset":false,"isSlot":false,"src":"19718:6:15","valueSize":1},{"declaration":3342,"isOffset":false,"isSlot":false,"src":"19736:6:15","valueSize":1},{"declaration":3345,"isOffset":false,"isSlot":false,"src":"19699:5:15","valueSize":1}],"flags":["memory-safe"],"id":3347,"nodeType":"InlineAssembly","src":"19659:97:15"}]},"documentation":{"id":3338,"nodeType":"StructuredDocumentation","src":"19148:273:15","text":" @dev Reads a bytes32 from a bytes array without bounds checking.\n NOTE: making this function internal would mean it could be used with memory unsafe offset, and marking the\n assembly block as such would prevent some optimizations."},"id":3349,"implemented":true,"kind":"function","modifiers":[],"name":"_unsafeReadBytesOffset","nameLocation":"19436:22:15","nodeType":"FunctionDefinition","parameters":{"id":3343,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3340,"mutability":"mutable","name":"buffer","nameLocation":"19472:6:15","nodeType":"VariableDeclaration","scope":3349,"src":"19459:19:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3339,"name":"bytes","nodeType":"ElementaryTypeName","src":"19459:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":3342,"mutability":"mutable","name":"offset","nameLocation":"19488:6:15","nodeType":"VariableDeclaration","scope":3349,"src":"19480:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3341,"name":"uint256","nodeType":"ElementaryTypeName","src":"19480:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"19458:37:15"},"returnParameters":{"id":3346,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3345,"mutability":"mutable","name":"value","nameLocation":"19526:5:15","nodeType":"VariableDeclaration","scope":3349,"src":"19518:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3344,"name":"bytes32","nodeType":"ElementaryTypeName","src":"19518:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"19517:15:15"},"scope":3350,"src":"19427:336:15","stateMutability":"pure","virtual":false,"visibility":"private"}],"scope":3351,"src":"309:19457:15","usedErrors":[2008,2011,2014],"usedEvents":[]}],"src":"104:19664:15"},"id":15},"@openzeppelin/contracts/utils/cryptography/ECDSA.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/cryptography/ECDSA.sol","exportedSymbols":{"ECDSA":[3698]},"id":3699,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":3352,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"115:24:16"},{"abstract":false,"baseContracts":[],"canonicalName":"ECDSA","contractDependencies":[],"contractKind":"library","documentation":{"id":3353,"nodeType":"StructuredDocumentation","src":"143:210:16","text":" @dev Elliptic Curve Digital Signature Algorithm (ECDSA) operations.\n These functions can be used to verify that a message was signed by the holder\n of the private keys of a given address."},"fullyImplemented":true,"id":3698,"linearizedBaseContracts":[3698],"name":"ECDSA","nameLocation":"363:5:16","nodeType":"ContractDefinition","nodes":[{"canonicalName":"ECDSA.RecoverError","id":3358,"members":[{"id":3354,"name":"NoError","nameLocation":"405:7:16","nodeType":"EnumValue","src":"405:7:16"},{"id":3355,"name":"InvalidSignature","nameLocation":"423:16:16","nodeType":"EnumValue","src":"423:16:16"},{"id":3356,"name":"InvalidSignatureLength","nameLocation":"450:22:16","nodeType":"EnumValue","src":"450:22:16"},{"id":3357,"name":"InvalidSignatureS","nameLocation":"483:17:16","nodeType":"EnumValue","src":"483:17:16"}],"name":"RecoverError","nameLocation":"381:12:16","nodeType":"EnumDefinition","src":"376:131:16"},{"documentation":{"id":3359,"nodeType":"StructuredDocumentation","src":"515:65:16","text":" @dev The signature derives the `address(0)`."},"errorSelector":"f645eedf","id":3361,"name":"ECDSAInvalidSignature","nameLocation":"592:21:16","nodeType":"ErrorDefinition","parameters":{"id":3360,"nodeType":"ParameterList","parameters":[],"src":"613:2:16"},"src":"586:30:16"},{"documentation":{"id":3362,"nodeType":"StructuredDocumentation","src":"624:62:16","text":" @dev The signature has an invalid length."},"errorSelector":"fce698f7","id":3366,"name":"ECDSAInvalidSignatureLength","nameLocation":"698:27:16","nodeType":"ErrorDefinition","parameters":{"id":3365,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3364,"mutability":"mutable","name":"length","nameLocation":"734:6:16","nodeType":"VariableDeclaration","scope":3366,"src":"726:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3363,"name":"uint256","nodeType":"ElementaryTypeName","src":"726:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"725:16:16"},"src":"692:50:16"},{"documentation":{"id":3367,"nodeType":"StructuredDocumentation","src":"750:87:16","text":" @dev The signature has an S value that is in the upper half order."},"errorSelector":"d78bce0c","id":3371,"name":"ECDSAInvalidSignatureS","nameLocation":"849:22:16","nodeType":"ErrorDefinition","parameters":{"id":3370,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3369,"mutability":"mutable","name":"s","nameLocation":"880:1:16","nodeType":"VariableDeclaration","scope":3371,"src":"872:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3368,"name":"bytes32","nodeType":"ElementaryTypeName","src":"872:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"871:11:16"},"src":"843:40:16"},{"body":{"id":3423,"nodeType":"Block","src":"2343:638:16","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3389,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":3386,"name":"signature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3376,"src":"2358:9:16","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3387,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2368:6:16","memberName":"length","nodeType":"MemberAccess","src":"2358:16:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"3635","id":3388,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2378:2:16","typeDescriptions":{"typeIdentifier":"t_rational_65_by_1","typeString":"int_const 65"},"value":"65"},"src":"2358:22:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":3421,"nodeType":"Block","src":"2864:110:16","statements":[{"expression":{"components":[{"arguments":[{"hexValue":"30","id":3410,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2895:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3409,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2887:7:16","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3408,"name":"address","nodeType":"ElementaryTypeName","src":"2887:7:16","typeDescriptions":{}}},"id":3411,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2887:10:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":3412,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3358,"src":"2899:12:16","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$3358_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":3413,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2912:22:16","memberName":"InvalidSignatureLength","nodeType":"MemberAccess","referencedDeclaration":3356,"src":"2899:35:16","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3358","typeString":"enum ECDSA.RecoverError"}},{"arguments":[{"expression":{"id":3416,"name":"signature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3376,"src":"2944:9:16","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3417,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2954:6:16","memberName":"length","nodeType":"MemberAccess","src":"2944:16:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3415,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2936:7:16","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":3414,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2936:7:16","typeDescriptions":{}}},"id":3418,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2936:25:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":3419,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2886:76:16","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$3358_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"functionReturnParameters":3385,"id":3420,"nodeType":"Return","src":"2879:83:16"}]},"id":3422,"nodeType":"IfStatement","src":"2354:620:16","trueBody":{"id":3407,"nodeType":"Block","src":"2382:476:16","statements":[{"assignments":[3391],"declarations":[{"constant":false,"id":3391,"mutability":"mutable","name":"r","nameLocation":"2405:1:16","nodeType":"VariableDeclaration","scope":3407,"src":"2397:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3390,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2397:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":3392,"nodeType":"VariableDeclarationStatement","src":"2397:9:16"},{"assignments":[3394],"declarations":[{"constant":false,"id":3394,"mutability":"mutable","name":"s","nameLocation":"2429:1:16","nodeType":"VariableDeclaration","scope":3407,"src":"2421:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3393,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2421:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":3395,"nodeType":"VariableDeclarationStatement","src":"2421:9:16"},{"assignments":[3397],"declarations":[{"constant":false,"id":3397,"mutability":"mutable","name":"v","nameLocation":"2451:1:16","nodeType":"VariableDeclaration","scope":3407,"src":"2445:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":3396,"name":"uint8","nodeType":"ElementaryTypeName","src":"2445:5:16","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"id":3398,"nodeType":"VariableDeclarationStatement","src":"2445:7:16"},{"AST":{"nativeSrc":"2625:175:16","nodeType":"YulBlock","src":"2625:175:16","statements":[{"nativeSrc":"2644:32:16","nodeType":"YulAssignment","src":"2644:32:16","value":{"arguments":[{"arguments":[{"name":"signature","nativeSrc":"2659:9:16","nodeType":"YulIdentifier","src":"2659:9:16"},{"kind":"number","nativeSrc":"2670:4:16","nodeType":"YulLiteral","src":"2670:4:16","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"2655:3:16","nodeType":"YulIdentifier","src":"2655:3:16"},"nativeSrc":"2655:20:16","nodeType":"YulFunctionCall","src":"2655:20:16"}],"functionName":{"name":"mload","nativeSrc":"2649:5:16","nodeType":"YulIdentifier","src":"2649:5:16"},"nativeSrc":"2649:27:16","nodeType":"YulFunctionCall","src":"2649:27:16"},"variableNames":[{"name":"r","nativeSrc":"2644:1:16","nodeType":"YulIdentifier","src":"2644:1:16"}]},{"nativeSrc":"2694:32:16","nodeType":"YulAssignment","src":"2694:32:16","value":{"arguments":[{"arguments":[{"name":"signature","nativeSrc":"2709:9:16","nodeType":"YulIdentifier","src":"2709:9:16"},{"kind":"number","nativeSrc":"2720:4:16","nodeType":"YulLiteral","src":"2720:4:16","type":"","value":"0x40"}],"functionName":{"name":"add","nativeSrc":"2705:3:16","nodeType":"YulIdentifier","src":"2705:3:16"},"nativeSrc":"2705:20:16","nodeType":"YulFunctionCall","src":"2705:20:16"}],"functionName":{"name":"mload","nativeSrc":"2699:5:16","nodeType":"YulIdentifier","src":"2699:5:16"},"nativeSrc":"2699:27:16","nodeType":"YulFunctionCall","src":"2699:27:16"},"variableNames":[{"name":"s","nativeSrc":"2694:1:16","nodeType":"YulIdentifier","src":"2694:1:16"}]},{"nativeSrc":"2744:41:16","nodeType":"YulAssignment","src":"2744:41:16","value":{"arguments":[{"kind":"number","nativeSrc":"2754:1:16","nodeType":"YulLiteral","src":"2754:1:16","type":"","value":"0"},{"arguments":[{"arguments":[{"name":"signature","nativeSrc":"2767:9:16","nodeType":"YulIdentifier","src":"2767:9:16"},{"kind":"number","nativeSrc":"2778:4:16","nodeType":"YulLiteral","src":"2778:4:16","type":"","value":"0x60"}],"functionName":{"name":"add","nativeSrc":"2763:3:16","nodeType":"YulIdentifier","src":"2763:3:16"},"nativeSrc":"2763:20:16","nodeType":"YulFunctionCall","src":"2763:20:16"}],"functionName":{"name":"mload","nativeSrc":"2757:5:16","nodeType":"YulIdentifier","src":"2757:5:16"},"nativeSrc":"2757:27:16","nodeType":"YulFunctionCall","src":"2757:27:16"}],"functionName":{"name":"byte","nativeSrc":"2749:4:16","nodeType":"YulIdentifier","src":"2749:4:16"},"nativeSrc":"2749:36:16","nodeType":"YulFunctionCall","src":"2749:36:16"},"variableNames":[{"name":"v","nativeSrc":"2744:1:16","nodeType":"YulIdentifier","src":"2744:1:16"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":3391,"isOffset":false,"isSlot":false,"src":"2644:1:16","valueSize":1},{"declaration":3394,"isOffset":false,"isSlot":false,"src":"2694:1:16","valueSize":1},{"declaration":3376,"isOffset":false,"isSlot":false,"src":"2659:9:16","valueSize":1},{"declaration":3376,"isOffset":false,"isSlot":false,"src":"2709:9:16","valueSize":1},{"declaration":3376,"isOffset":false,"isSlot":false,"src":"2767:9:16","valueSize":1},{"declaration":3397,"isOffset":false,"isSlot":false,"src":"2744:1:16","valueSize":1}],"flags":["memory-safe"],"id":3399,"nodeType":"InlineAssembly","src":"2600:200:16"},{"expression":{"arguments":[{"id":3401,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3374,"src":"2832:4:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3402,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3397,"src":"2838:1:16","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":3403,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3391,"src":"2841:1:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3404,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3394,"src":"2844:1:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3400,"name":"tryRecover","nodeType":"Identifier","overloadedDeclarations":[3424,3504,3612],"referencedDeclaration":3612,"src":"2821:10:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$_t_enum$_RecoverError_$3358_$_t_bytes32_$","typeString":"function (bytes32,uint8,bytes32,bytes32) pure returns (address,enum ECDSA.RecoverError,bytes32)"}},"id":3405,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2821:25:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$3358_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"functionReturnParameters":3385,"id":3406,"nodeType":"Return","src":"2814:32:16"}]}}]},"documentation":{"id":3372,"nodeType":"StructuredDocumentation","src":"891:1287:16","text":" @dev Returns the address that signed a hashed message (`hash`) with `signature` or an error. This will not\n return address(0) without also returning an error description. Errors are documented using an enum (error type)\n and a bytes32 providing additional information about the error.\n If no error is returned, then the address can be used for verification purposes.\n The `ecrecover` EVM precompile allows for malleable (non-unique) signatures:\n this function rejects them by requiring the `s` value to be in the lower\n half order, and the `v` value to be either 27 or 28.\n IMPORTANT: `hash` _must_ be the result of a hash operation for the\n verification to be secure: it is possible to craft signatures that\n recover to arbitrary addresses for non-hashed data. A safe way to ensure\n this is by receiving a hash of the original message (which may otherwise\n be too long), and then calling {MessageHashUtils-toEthSignedMessageHash} on it.\n Documentation for signature generation:\n - with https://web3js.readthedocs.io/en/v1.3.4/web3-eth-accounts.html#sign[Web3.js]\n - with https://docs.ethers.io/v5/api/signer/#Signer-signMessage[ethers]"},"id":3424,"implemented":true,"kind":"function","modifiers":[],"name":"tryRecover","nameLocation":"2193:10:16","nodeType":"FunctionDefinition","parameters":{"id":3377,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3374,"mutability":"mutable","name":"hash","nameLocation":"2222:4:16","nodeType":"VariableDeclaration","scope":3424,"src":"2214:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3373,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2214:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3376,"mutability":"mutable","name":"signature","nameLocation":"2250:9:16","nodeType":"VariableDeclaration","scope":3424,"src":"2237:22:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3375,"name":"bytes","nodeType":"ElementaryTypeName","src":"2237:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2203:63:16"},"returnParameters":{"id":3385,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3379,"mutability":"mutable","name":"recovered","nameLocation":"2298:9:16","nodeType":"VariableDeclaration","scope":3424,"src":"2290:17:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3378,"name":"address","nodeType":"ElementaryTypeName","src":"2290:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3382,"mutability":"mutable","name":"err","nameLocation":"2322:3:16","nodeType":"VariableDeclaration","scope":3424,"src":"2309:16:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3358","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":3381,"nodeType":"UserDefinedTypeName","pathNode":{"id":3380,"name":"RecoverError","nameLocations":["2309:12:16"],"nodeType":"IdentifierPath","referencedDeclaration":3358,"src":"2309:12:16"},"referencedDeclaration":3358,"src":"2309:12:16","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3358","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"},{"constant":false,"id":3384,"mutability":"mutable","name":"errArg","nameLocation":"2335:6:16","nodeType":"VariableDeclaration","scope":3424,"src":"2327:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3383,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2327:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2289:53:16"},"scope":3698,"src":"2184:797:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3453,"nodeType":"Block","src":"3891:172:16","statements":[{"assignments":[3435,3438,3440],"declarations":[{"constant":false,"id":3435,"mutability":"mutable","name":"recovered","nameLocation":"3911:9:16","nodeType":"VariableDeclaration","scope":3453,"src":"3903:17:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3434,"name":"address","nodeType":"ElementaryTypeName","src":"3903:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3438,"mutability":"mutable","name":"error","nameLocation":"3935:5:16","nodeType":"VariableDeclaration","scope":3453,"src":"3922:18:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3358","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":3437,"nodeType":"UserDefinedTypeName","pathNode":{"id":3436,"name":"RecoverError","nameLocations":["3922:12:16"],"nodeType":"IdentifierPath","referencedDeclaration":3358,"src":"3922:12:16"},"referencedDeclaration":3358,"src":"3922:12:16","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3358","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"},{"constant":false,"id":3440,"mutability":"mutable","name":"errorArg","nameLocation":"3950:8:16","nodeType":"VariableDeclaration","scope":3453,"src":"3942:16:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3439,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3942:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":3445,"initialValue":{"arguments":[{"id":3442,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3427,"src":"3973:4:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3443,"name":"signature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3429,"src":"3979:9:16","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":3441,"name":"tryRecover","nodeType":"Identifier","overloadedDeclarations":[3424,3504,3612],"referencedDeclaration":3424,"src":"3962:10:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes_memory_ptr_$returns$_t_address_$_t_enum$_RecoverError_$3358_$_t_bytes32_$","typeString":"function (bytes32,bytes memory) pure returns (address,enum ECDSA.RecoverError,bytes32)"}},"id":3444,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3962:27:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$3358_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"nodeType":"VariableDeclarationStatement","src":"3902:87:16"},{"expression":{"arguments":[{"id":3447,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3438,"src":"4012:5:16","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3358","typeString":"enum ECDSA.RecoverError"}},{"id":3448,"name":"errorArg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3440,"src":"4019:8:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_RecoverError_$3358","typeString":"enum ECDSA.RecoverError"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3446,"name":"_throwError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3697,"src":"4000:11:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_RecoverError_$3358_$_t_bytes32_$returns$__$","typeString":"function (enum ECDSA.RecoverError,bytes32) pure"}},"id":3449,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4000:28:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3450,"nodeType":"ExpressionStatement","src":"4000:28:16"},{"expression":{"id":3451,"name":"recovered","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3435,"src":"4046:9:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":3433,"id":3452,"nodeType":"Return","src":"4039:16:16"}]},"documentation":{"id":3425,"nodeType":"StructuredDocumentation","src":"2989:809:16","text":" @dev Returns the address that signed a hashed message (`hash`) with\n `signature`. This address can then be used for verification purposes.\n The `ecrecover` EVM precompile allows for malleable (non-unique) signatures:\n this function rejects them by requiring the `s` value to be in the lower\n half order, and the `v` value to be either 27 or 28.\n IMPORTANT: `hash` _must_ be the result of a hash operation for the\n verification to be secure: it is possible to craft signatures that\n recover to arbitrary addresses for non-hashed data. A safe way to ensure\n this is by receiving a hash of the original message (which may otherwise\n be too long), and then calling {MessageHashUtils-toEthSignedMessageHash} on it."},"id":3454,"implemented":true,"kind":"function","modifiers":[],"name":"recover","nameLocation":"3813:7:16","nodeType":"FunctionDefinition","parameters":{"id":3430,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3427,"mutability":"mutable","name":"hash","nameLocation":"3829:4:16","nodeType":"VariableDeclaration","scope":3454,"src":"3821:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3426,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3821:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3429,"mutability":"mutable","name":"signature","nameLocation":"3848:9:16","nodeType":"VariableDeclaration","scope":3454,"src":"3835:22:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3428,"name":"bytes","nodeType":"ElementaryTypeName","src":"3835:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3820:38:16"},"returnParameters":{"id":3433,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3432,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3454,"src":"3882:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3431,"name":"address","nodeType":"ElementaryTypeName","src":"3882:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3881:9:16"},"scope":3698,"src":"3804:259:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3503,"nodeType":"Block","src":"4453:349:16","statements":[{"id":3502,"nodeType":"UncheckedBlock","src":"4464:331:16","statements":[{"assignments":[3472],"declarations":[{"constant":false,"id":3472,"mutability":"mutable","name":"s","nameLocation":"4497:1:16","nodeType":"VariableDeclaration","scope":3502,"src":"4489:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3471,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4489:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":3479,"initialValue":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":3478,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3473,"name":"vs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3461,"src":"4501:2:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"arguments":[{"hexValue":"307837666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666","id":3476,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4514:66:16","typeDescriptions":{"typeIdentifier":"t_rational_57896044618658097711785492504343953926634992332820282019728792003956564819967_by_1","typeString":"int_const 5789...(69 digits omitted)...9967"},"value":"0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_57896044618658097711785492504343953926634992332820282019728792003956564819967_by_1","typeString":"int_const 5789...(69 digits omitted)...9967"}],"id":3475,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4506:7:16","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":3474,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4506:7:16","typeDescriptions":{}}},"id":3477,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4506:75:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"4501:80:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"4489:92:16"},{"assignments":[3481],"declarations":[{"constant":false,"id":3481,"mutability":"mutable","name":"v","nameLocation":"4700:1:16","nodeType":"VariableDeclaration","scope":3502,"src":"4694:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":3480,"name":"uint8","nodeType":"ElementaryTypeName","src":"4694:5:16","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"id":3494,"initialValue":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3492,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3489,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":3486,"name":"vs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3461,"src":"4719:2:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3485,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4711:7:16","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":3484,"name":"uint256","nodeType":"ElementaryTypeName","src":"4711:7:16","typeDescriptions":{}}},"id":3487,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4711:11:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"323535","id":3488,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4726:3:16","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"255"},"src":"4711:18:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3490,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"4710:20:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"3237","id":3491,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4733:2:16","typeDescriptions":{"typeIdentifier":"t_rational_27_by_1","typeString":"int_const 27"},"value":"27"},"src":"4710:25:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3483,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4704:5:16","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":3482,"name":"uint8","nodeType":"ElementaryTypeName","src":"4704:5:16","typeDescriptions":{}}},"id":3493,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4704:32:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"VariableDeclarationStatement","src":"4694:42:16"},{"expression":{"arguments":[{"id":3496,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3457,"src":"4769:4:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3497,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3481,"src":"4775:1:16","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":3498,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3459,"src":"4778:1:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3499,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3472,"src":"4781:1:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3495,"name":"tryRecover","nodeType":"Identifier","overloadedDeclarations":[3424,3504,3612],"referencedDeclaration":3612,"src":"4758:10:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$_t_enum$_RecoverError_$3358_$_t_bytes32_$","typeString":"function (bytes32,uint8,bytes32,bytes32) pure returns (address,enum ECDSA.RecoverError,bytes32)"}},"id":3500,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4758:25:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$3358_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"functionReturnParameters":3470,"id":3501,"nodeType":"Return","src":"4751:32:16"}]}]},"documentation":{"id":3455,"nodeType":"StructuredDocumentation","src":"4071:209:16","text":" @dev Overload of {ECDSA-tryRecover} that receives the `r` and `vs` short-signature fields separately.\n See https://eips.ethereum.org/EIPS/eip-2098[ERC-2098 short signatures]"},"id":3504,"implemented":true,"kind":"function","modifiers":[],"name":"tryRecover","nameLocation":"4295:10:16","nodeType":"FunctionDefinition","parameters":{"id":3462,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3457,"mutability":"mutable","name":"hash","nameLocation":"4324:4:16","nodeType":"VariableDeclaration","scope":3504,"src":"4316:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3456,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4316:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3459,"mutability":"mutable","name":"r","nameLocation":"4347:1:16","nodeType":"VariableDeclaration","scope":3504,"src":"4339:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3458,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4339:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3461,"mutability":"mutable","name":"vs","nameLocation":"4367:2:16","nodeType":"VariableDeclaration","scope":3504,"src":"4359:10:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3460,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4359:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4305:71:16"},"returnParameters":{"id":3470,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3464,"mutability":"mutable","name":"recovered","nameLocation":"4408:9:16","nodeType":"VariableDeclaration","scope":3504,"src":"4400:17:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3463,"name":"address","nodeType":"ElementaryTypeName","src":"4400:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3467,"mutability":"mutable","name":"err","nameLocation":"4432:3:16","nodeType":"VariableDeclaration","scope":3504,"src":"4419:16:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3358","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":3466,"nodeType":"UserDefinedTypeName","pathNode":{"id":3465,"name":"RecoverError","nameLocations":["4419:12:16"],"nodeType":"IdentifierPath","referencedDeclaration":3358,"src":"4419:12:16"},"referencedDeclaration":3358,"src":"4419:12:16","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3358","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"},{"constant":false,"id":3469,"mutability":"mutable","name":"errArg","nameLocation":"4445:6:16","nodeType":"VariableDeclaration","scope":3504,"src":"4437:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3468,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4437:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4399:53:16"},"scope":3698,"src":"4286:516:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3536,"nodeType":"Block","src":"5020:168:16","statements":[{"assignments":[3517,3520,3522],"declarations":[{"constant":false,"id":3517,"mutability":"mutable","name":"recovered","nameLocation":"5040:9:16","nodeType":"VariableDeclaration","scope":3536,"src":"5032:17:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3516,"name":"address","nodeType":"ElementaryTypeName","src":"5032:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3520,"mutability":"mutable","name":"error","nameLocation":"5064:5:16","nodeType":"VariableDeclaration","scope":3536,"src":"5051:18:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3358","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":3519,"nodeType":"UserDefinedTypeName","pathNode":{"id":3518,"name":"RecoverError","nameLocations":["5051:12:16"],"nodeType":"IdentifierPath","referencedDeclaration":3358,"src":"5051:12:16"},"referencedDeclaration":3358,"src":"5051:12:16","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3358","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"},{"constant":false,"id":3522,"mutability":"mutable","name":"errorArg","nameLocation":"5079:8:16","nodeType":"VariableDeclaration","scope":3536,"src":"5071:16:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3521,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5071:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":3528,"initialValue":{"arguments":[{"id":3524,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3507,"src":"5102:4:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3525,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3509,"src":"5108:1:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3526,"name":"vs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3511,"src":"5111:2:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3523,"name":"tryRecover","nodeType":"Identifier","overloadedDeclarations":[3424,3504,3612],"referencedDeclaration":3504,"src":"5091:10:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes32_$_t_bytes32_$returns$_t_address_$_t_enum$_RecoverError_$3358_$_t_bytes32_$","typeString":"function (bytes32,bytes32,bytes32) pure returns (address,enum ECDSA.RecoverError,bytes32)"}},"id":3527,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5091:23:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$3358_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"nodeType":"VariableDeclarationStatement","src":"5031:83:16"},{"expression":{"arguments":[{"id":3530,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3520,"src":"5137:5:16","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3358","typeString":"enum ECDSA.RecoverError"}},{"id":3531,"name":"errorArg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3522,"src":"5144:8:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_RecoverError_$3358","typeString":"enum ECDSA.RecoverError"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3529,"name":"_throwError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3697,"src":"5125:11:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_RecoverError_$3358_$_t_bytes32_$returns$__$","typeString":"function (enum ECDSA.RecoverError,bytes32) pure"}},"id":3532,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5125:28:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3533,"nodeType":"ExpressionStatement","src":"5125:28:16"},{"expression":{"id":3534,"name":"recovered","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3517,"src":"5171:9:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":3515,"id":3535,"nodeType":"Return","src":"5164:16:16"}]},"documentation":{"id":3505,"nodeType":"StructuredDocumentation","src":"4810:118:16","text":" @dev Overload of {ECDSA-recover} that receives the `r and `vs` short-signature fields separately."},"id":3537,"implemented":true,"kind":"function","modifiers":[],"name":"recover","nameLocation":"4943:7:16","nodeType":"FunctionDefinition","parameters":{"id":3512,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3507,"mutability":"mutable","name":"hash","nameLocation":"4959:4:16","nodeType":"VariableDeclaration","scope":3537,"src":"4951:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3506,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4951:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3509,"mutability":"mutable","name":"r","nameLocation":"4973:1:16","nodeType":"VariableDeclaration","scope":3537,"src":"4965:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3508,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4965:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3511,"mutability":"mutable","name":"vs","nameLocation":"4984:2:16","nodeType":"VariableDeclaration","scope":3537,"src":"4976:10:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3510,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4976:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4950:37:16"},"returnParameters":{"id":3515,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3514,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3537,"src":"5011:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3513,"name":"address","nodeType":"ElementaryTypeName","src":"5011:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5010:9:16"},"scope":3698,"src":"4934:254:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3611,"nodeType":"Block","src":"5514:1393:16","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3561,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":3558,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3546,"src":"6420:1:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3557,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6412:7:16","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":3556,"name":"uint256","nodeType":"ElementaryTypeName","src":"6412:7:16","typeDescriptions":{}}},"id":3559,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6412:10:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"307837464646464646464646464646464646464646464646464646464646464646463544353736453733353741343530314444464539324634363638314232304130","id":3560,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6425:66:16","typeDescriptions":{"typeIdentifier":"t_rational_57896044618658097711785492504343953926418782139537452191302581570759080747168_by_1","typeString":"int_const 5789...(69 digits omitted)...7168"},"value":"0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0"},"src":"6412:79:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3572,"nodeType":"IfStatement","src":"6408:166:16","trueBody":{"id":3571,"nodeType":"Block","src":"6493:81:16","statements":[{"expression":{"components":[{"arguments":[{"hexValue":"30","id":3564,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6524:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3563,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6516:7:16","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3562,"name":"address","nodeType":"ElementaryTypeName","src":"6516:7:16","typeDescriptions":{}}},"id":3565,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6516:10:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":3566,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3358,"src":"6528:12:16","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$3358_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":3567,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6541:17:16","memberName":"InvalidSignatureS","nodeType":"MemberAccess","referencedDeclaration":3357,"src":"6528:30:16","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3358","typeString":"enum ECDSA.RecoverError"}},{"id":3568,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3546,"src":"6560:1:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":3569,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"6515:47:16","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$3358_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"functionReturnParameters":3555,"id":3570,"nodeType":"Return","src":"6508:54:16"}]}},{"assignments":[3574],"declarations":[{"constant":false,"id":3574,"mutability":"mutable","name":"signer","nameLocation":"6679:6:16","nodeType":"VariableDeclaration","scope":3611,"src":"6671:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3573,"name":"address","nodeType":"ElementaryTypeName","src":"6671:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":3581,"initialValue":{"arguments":[{"id":3576,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3540,"src":"6698:4:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3577,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3542,"src":"6704:1:16","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":3578,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3544,"src":"6707:1:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3579,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3546,"src":"6710:1:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3575,"name":"ecrecover","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-6,"src":"6688:9:16","typeDescriptions":{"typeIdentifier":"t_function_ecrecover_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$","typeString":"function (bytes32,uint8,bytes32,bytes32) pure returns (address)"}},"id":3580,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6688:24:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"6671:41:16"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":3587,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3582,"name":"signer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3574,"src":"6727:6:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":3585,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6745:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3584,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6737:7:16","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3583,"name":"address","nodeType":"ElementaryTypeName","src":"6737:7:16","typeDescriptions":{}}},"id":3586,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6737:10:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6727:20:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3601,"nodeType":"IfStatement","src":"6723:115:16","trueBody":{"id":3600,"nodeType":"Block","src":"6749:89:16","statements":[{"expression":{"components":[{"arguments":[{"hexValue":"30","id":3590,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6780:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3589,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6772:7:16","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3588,"name":"address","nodeType":"ElementaryTypeName","src":"6772:7:16","typeDescriptions":{}}},"id":3591,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6772:10:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":3592,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3358,"src":"6784:12:16","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$3358_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":3593,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6797:16:16","memberName":"InvalidSignature","nodeType":"MemberAccess","referencedDeclaration":3355,"src":"6784:29:16","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3358","typeString":"enum ECDSA.RecoverError"}},{"arguments":[{"hexValue":"30","id":3596,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6823:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3595,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6815:7:16","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":3594,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6815:7:16","typeDescriptions":{}}},"id":3597,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6815:10:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":3598,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"6771:55:16","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$3358_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"functionReturnParameters":3555,"id":3599,"nodeType":"Return","src":"6764:62:16"}]}},{"expression":{"components":[{"id":3602,"name":"signer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3574,"src":"6858:6:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":3603,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3358,"src":"6866:12:16","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$3358_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":3604,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6879:7:16","memberName":"NoError","nodeType":"MemberAccess","referencedDeclaration":3354,"src":"6866:20:16","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3358","typeString":"enum ECDSA.RecoverError"}},{"arguments":[{"hexValue":"30","id":3607,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6896:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3606,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6888:7:16","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":3605,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6888:7:16","typeDescriptions":{}}},"id":3608,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6888:10:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":3609,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"6857:42:16","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$3358_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"functionReturnParameters":3555,"id":3610,"nodeType":"Return","src":"6850:49:16"}]},"documentation":{"id":3538,"nodeType":"StructuredDocumentation","src":"5196:128:16","text":" @dev Overload of {ECDSA-tryRecover} that receives the `v`,\n `r` and `s` signature fields separately."},"id":3612,"implemented":true,"kind":"function","modifiers":[],"name":"tryRecover","nameLocation":"5339:10:16","nodeType":"FunctionDefinition","parameters":{"id":3547,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3540,"mutability":"mutable","name":"hash","nameLocation":"5368:4:16","nodeType":"VariableDeclaration","scope":3612,"src":"5360:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3539,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5360:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3542,"mutability":"mutable","name":"v","nameLocation":"5389:1:16","nodeType":"VariableDeclaration","scope":3612,"src":"5383:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":3541,"name":"uint8","nodeType":"ElementaryTypeName","src":"5383:5:16","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":3544,"mutability":"mutable","name":"r","nameLocation":"5409:1:16","nodeType":"VariableDeclaration","scope":3612,"src":"5401:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3543,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5401:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3546,"mutability":"mutable","name":"s","nameLocation":"5429:1:16","nodeType":"VariableDeclaration","scope":3612,"src":"5421:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3545,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5421:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"5349:88:16"},"returnParameters":{"id":3555,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3549,"mutability":"mutable","name":"recovered","nameLocation":"5469:9:16","nodeType":"VariableDeclaration","scope":3612,"src":"5461:17:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3548,"name":"address","nodeType":"ElementaryTypeName","src":"5461:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3552,"mutability":"mutable","name":"err","nameLocation":"5493:3:16","nodeType":"VariableDeclaration","scope":3612,"src":"5480:16:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3358","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":3551,"nodeType":"UserDefinedTypeName","pathNode":{"id":3550,"name":"RecoverError","nameLocations":["5480:12:16"],"nodeType":"IdentifierPath","referencedDeclaration":3358,"src":"5480:12:16"},"referencedDeclaration":3358,"src":"5480:12:16","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3358","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"},{"constant":false,"id":3554,"mutability":"mutable","name":"errArg","nameLocation":"5506:6:16","nodeType":"VariableDeclaration","scope":3612,"src":"5498:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3553,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5498:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"5460:53:16"},"scope":3698,"src":"5330:1577:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3647,"nodeType":"Block","src":"7140:170:16","statements":[{"assignments":[3627,3630,3632],"declarations":[{"constant":false,"id":3627,"mutability":"mutable","name":"recovered","nameLocation":"7160:9:16","nodeType":"VariableDeclaration","scope":3647,"src":"7152:17:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3626,"name":"address","nodeType":"ElementaryTypeName","src":"7152:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3630,"mutability":"mutable","name":"error","nameLocation":"7184:5:16","nodeType":"VariableDeclaration","scope":3647,"src":"7171:18:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3358","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":3629,"nodeType":"UserDefinedTypeName","pathNode":{"id":3628,"name":"RecoverError","nameLocations":["7171:12:16"],"nodeType":"IdentifierPath","referencedDeclaration":3358,"src":"7171:12:16"},"referencedDeclaration":3358,"src":"7171:12:16","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3358","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"},{"constant":false,"id":3632,"mutability":"mutable","name":"errorArg","nameLocation":"7199:8:16","nodeType":"VariableDeclaration","scope":3647,"src":"7191:16:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3631,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7191:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":3639,"initialValue":{"arguments":[{"id":3634,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3615,"src":"7222:4:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3635,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3617,"src":"7228:1:16","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":3636,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3619,"src":"7231:1:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3637,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3621,"src":"7234:1:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3633,"name":"tryRecover","nodeType":"Identifier","overloadedDeclarations":[3424,3504,3612],"referencedDeclaration":3612,"src":"7211:10:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$_t_enum$_RecoverError_$3358_$_t_bytes32_$","typeString":"function (bytes32,uint8,bytes32,bytes32) pure returns (address,enum ECDSA.RecoverError,bytes32)"}},"id":3638,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7211:25:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$3358_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"nodeType":"VariableDeclarationStatement","src":"7151:85:16"},{"expression":{"arguments":[{"id":3641,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3630,"src":"7259:5:16","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3358","typeString":"enum ECDSA.RecoverError"}},{"id":3642,"name":"errorArg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3632,"src":"7266:8:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_RecoverError_$3358","typeString":"enum ECDSA.RecoverError"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3640,"name":"_throwError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3697,"src":"7247:11:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_RecoverError_$3358_$_t_bytes32_$returns$__$","typeString":"function (enum ECDSA.RecoverError,bytes32) pure"}},"id":3643,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7247:28:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3644,"nodeType":"ExpressionStatement","src":"7247:28:16"},{"expression":{"id":3645,"name":"recovered","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3627,"src":"7293:9:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":3625,"id":3646,"nodeType":"Return","src":"7286:16:16"}]},"documentation":{"id":3613,"nodeType":"StructuredDocumentation","src":"6915:125:16","text":" @dev Overload of {ECDSA-recover} that receives the `v`,\n `r` and `s` signature fields separately."},"id":3648,"implemented":true,"kind":"function","modifiers":[],"name":"recover","nameLocation":"7055:7:16","nodeType":"FunctionDefinition","parameters":{"id":3622,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3615,"mutability":"mutable","name":"hash","nameLocation":"7071:4:16","nodeType":"VariableDeclaration","scope":3648,"src":"7063:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3614,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7063:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3617,"mutability":"mutable","name":"v","nameLocation":"7083:1:16","nodeType":"VariableDeclaration","scope":3648,"src":"7077:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":3616,"name":"uint8","nodeType":"ElementaryTypeName","src":"7077:5:16","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":3619,"mutability":"mutable","name":"r","nameLocation":"7094:1:16","nodeType":"VariableDeclaration","scope":3648,"src":"7086:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3618,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7086:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3621,"mutability":"mutable","name":"s","nameLocation":"7105:1:16","nodeType":"VariableDeclaration","scope":3648,"src":"7097:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3620,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7097:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"7062:45:16"},"returnParameters":{"id":3625,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3624,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3648,"src":"7131:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3623,"name":"address","nodeType":"ElementaryTypeName","src":"7131:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"7130:9:16"},"scope":3698,"src":"7046:264:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3696,"nodeType":"Block","src":"7520:470:16","statements":[{"condition":{"commonType":{"typeIdentifier":"t_enum$_RecoverError_$3358","typeString":"enum ECDSA.RecoverError"},"id":3660,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3657,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3652,"src":"7535:5:16","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3358","typeString":"enum ECDSA.RecoverError"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":3658,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3358,"src":"7544:12:16","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$3358_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":3659,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7557:7:16","memberName":"NoError","nodeType":"MemberAccess","referencedDeclaration":3354,"src":"7544:20:16","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3358","typeString":"enum ECDSA.RecoverError"}},"src":"7535:29:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_enum$_RecoverError_$3358","typeString":"enum ECDSA.RecoverError"},"id":3666,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3663,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3652,"src":"7633:5:16","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3358","typeString":"enum ECDSA.RecoverError"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":3664,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3358,"src":"7642:12:16","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$3358_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":3665,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7655:16:16","memberName":"InvalidSignature","nodeType":"MemberAccess","referencedDeclaration":3355,"src":"7642:29:16","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3358","typeString":"enum ECDSA.RecoverError"}},"src":"7633:38:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_enum$_RecoverError_$3358","typeString":"enum ECDSA.RecoverError"},"id":3674,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3671,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3652,"src":"7740:5:16","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3358","typeString":"enum ECDSA.RecoverError"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":3672,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3358,"src":"7749:12:16","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$3358_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":3673,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7762:22:16","memberName":"InvalidSignatureLength","nodeType":"MemberAccess","referencedDeclaration":3356,"src":"7749:35:16","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3358","typeString":"enum ECDSA.RecoverError"}},"src":"7740:44:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_enum$_RecoverError_$3358","typeString":"enum ECDSA.RecoverError"},"id":3686,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3683,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3652,"src":"7876:5:16","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3358","typeString":"enum ECDSA.RecoverError"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":3684,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3358,"src":"7885:12:16","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$3358_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":3685,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7898:17:16","memberName":"InvalidSignatureS","nodeType":"MemberAccess","referencedDeclaration":3357,"src":"7885:30:16","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3358","typeString":"enum ECDSA.RecoverError"}},"src":"7876:39:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3692,"nodeType":"IfStatement","src":"7872:111:16","trueBody":{"id":3691,"nodeType":"Block","src":"7917:66:16","statements":[{"errorCall":{"arguments":[{"id":3688,"name":"errorArg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3654,"src":"7962:8:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3687,"name":"ECDSAInvalidSignatureS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3371,"src":"7939:22:16","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_bytes32_$returns$_t_error_$","typeString":"function (bytes32) pure returns (error)"}},"id":3689,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7939:32:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":3690,"nodeType":"RevertStatement","src":"7932:39:16"}]}},"id":3693,"nodeType":"IfStatement","src":"7736:247:16","trueBody":{"id":3682,"nodeType":"Block","src":"7786:80:16","statements":[{"errorCall":{"arguments":[{"arguments":[{"id":3678,"name":"errorArg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3654,"src":"7844:8:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3677,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7836:7:16","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":3676,"name":"uint256","nodeType":"ElementaryTypeName","src":"7836:7:16","typeDescriptions":{}}},"id":3679,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7836:17:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3675,"name":"ECDSAInvalidSignatureLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3366,"src":"7808:27:16","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$returns$_t_error_$","typeString":"function (uint256) pure returns (error)"}},"id":3680,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7808:46:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":3681,"nodeType":"RevertStatement","src":"7801:53:16"}]}},"id":3694,"nodeType":"IfStatement","src":"7629:354:16","trueBody":{"id":3670,"nodeType":"Block","src":"7673:57:16","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":3667,"name":"ECDSAInvalidSignature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3361,"src":"7695:21:16","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$_t_error_$","typeString":"function () pure returns (error)"}},"id":3668,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7695:23:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":3669,"nodeType":"RevertStatement","src":"7688:30:16"}]}},"id":3695,"nodeType":"IfStatement","src":"7531:452:16","trueBody":{"id":3662,"nodeType":"Block","src":"7566:57:16","statements":[{"functionReturnParameters":3656,"id":3661,"nodeType":"Return","src":"7581:7:16"}]}}]},"documentation":{"id":3649,"nodeType":"StructuredDocumentation","src":"7318:124:16","text":" @dev Optionally reverts with the corresponding custom error according to the `error` argument provided."},"id":3697,"implemented":true,"kind":"function","modifiers":[],"name":"_throwError","nameLocation":"7457:11:16","nodeType":"FunctionDefinition","parameters":{"id":3655,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3652,"mutability":"mutable","name":"error","nameLocation":"7482:5:16","nodeType":"VariableDeclaration","scope":3697,"src":"7469:18:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3358","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":3651,"nodeType":"UserDefinedTypeName","pathNode":{"id":3650,"name":"RecoverError","nameLocations":["7469:12:16"],"nodeType":"IdentifierPath","referencedDeclaration":3358,"src":"7469:12:16"},"referencedDeclaration":3358,"src":"7469:12:16","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3358","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"},{"constant":false,"id":3654,"mutability":"mutable","name":"errorArg","nameLocation":"7497:8:16","nodeType":"VariableDeclaration","scope":3697,"src":"7489:16:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3653,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7489:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"7468:38:16"},"returnParameters":{"id":3656,"nodeType":"ParameterList","parameters":[],"src":"7520:0:16"},"scope":3698,"src":"7448:542:16","stateMutability":"pure","virtual":false,"visibility":"private"}],"scope":3699,"src":"355:7638:16","usedErrors":[3361,3366,3371],"usedEvents":[]}],"src":"115:7880:16"},"id":16},"@openzeppelin/contracts/utils/cryptography/EIP712.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/cryptography/EIP712.sol","exportedSymbols":{"EIP712":[3925],"IERC5267":[403],"MessageHashUtils":[4011],"ShortString":[1613],"ShortStrings":[1824]},"id":3926,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":3700,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"116:24:17"},{"absolutePath":"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol","file":"./MessageHashUtils.sol","id":3702,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3926,"sourceUnit":4012,"src":"144:56:17","symbolAliases":[{"foreign":{"id":3701,"name":"MessageHashUtils","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4011,"src":"152:16:17","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/ShortStrings.sol","file":"../ShortStrings.sol","id":3705,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3926,"sourceUnit":1825,"src":"202:62:17","symbolAliases":[{"foreign":{"id":3703,"name":"ShortStrings","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1824,"src":"210:12:17","typeDescriptions":{}},"nameLocation":"-1:-1:-1"},{"foreign":{"id":3704,"name":"ShortString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1613,"src":"224:11:17","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/interfaces/IERC5267.sol","file":"../../interfaces/IERC5267.sol","id":3707,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3926,"sourceUnit":404,"src":"266:55:17","symbolAliases":[{"foreign":{"id":3706,"name":"IERC5267","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":403,"src":"274:8:17","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":3709,"name":"IERC5267","nameLocations":["2021:8:17"],"nodeType":"IdentifierPath","referencedDeclaration":403,"src":"2021:8:17"},"id":3710,"nodeType":"InheritanceSpecifier","src":"2021:8:17"}],"canonicalName":"EIP712","contractDependencies":[],"contractKind":"contract","documentation":{"id":3708,"nodeType":"StructuredDocumentation","src":"325:1666:17","text":" @dev https://eips.ethereum.org/EIPS/eip-712[EIP-712] is a standard for hashing and signing of typed structured data.\n The encoding scheme specified in the EIP requires a domain separator and a hash of the typed structured data, whose\n encoding is very generic and therefore its implementation in Solidity is not feasible, thus this contract\n does not implement the encoding itself. Protocols need to implement the type-specific encoding they need in order to\n produce the hash of their typed data using a combination of `abi.encode` and `keccak256`.\n This contract implements the EIP-712 domain separator ({_domainSeparatorV4}) that is used as part of the encoding\n scheme, and the final step of the encoding to obtain the message digest that is then signed via ECDSA\n ({_hashTypedDataV4}).\n The implementation of the domain separator was designed to be as efficient as possible while still properly updating\n the chain id to protect against replay attacks on an eventual fork of the chain.\n NOTE: This contract implements the version of the encoding known as \"v4\", as implemented by the JSON RPC method\n https://docs.metamask.io/guide/signing-data.html[`eth_signTypedDataV4` in MetaMask].\n NOTE: In the upgradeable version of this contract, the cached values will correspond to the address, and the domain\n separator of the implementation contract. This will cause the {_domainSeparatorV4} function to always rebuild the\n separator from the immutable values, which is cheaper than accessing a cached version in cold storage.\n @custom:oz-upgrades-unsafe-allow state-variable-immutable"},"fullyImplemented":true,"id":3925,"linearizedBaseContracts":[3925,403],"name":"EIP712","nameLocation":"2011:6:17","nodeType":"ContractDefinition","nodes":[{"global":false,"id":3712,"libraryName":{"id":3711,"name":"ShortStrings","nameLocations":["2043:12:17"],"nodeType":"IdentifierPath","referencedDeclaration":1824,"src":"2043:12:17"},"nodeType":"UsingForDirective","src":"2037:25:17"},{"constant":true,"id":3717,"mutability":"constant","name":"TYPE_HASH","nameLocation":"2095:9:17","nodeType":"VariableDeclaration","scope":3925,"src":"2070:141:17","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3713,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2070:7:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"arguments":[{"hexValue":"454950373132446f6d61696e28737472696e67206e616d652c737472696e672076657273696f6e2c75696e7432353620636861696e49642c6164647265737320766572696679696e67436f6e747261637429","id":3715,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2126:84:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f","typeString":"literal_string \"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\""},"value":"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f","typeString":"literal_string \"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\""}],"id":3714,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"2116:9:17","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":3716,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2116:95:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"private"},{"constant":false,"id":3719,"mutability":"immutable","name":"_cachedDomainSeparator","nameLocation":"2440:22:17","nodeType":"VariableDeclaration","scope":3925,"src":"2414:48:17","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3718,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2414:7:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"private"},{"constant":false,"id":3721,"mutability":"immutable","name":"_cachedChainId","nameLocation":"2495:14:17","nodeType":"VariableDeclaration","scope":3925,"src":"2469:40:17","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3720,"name":"uint256","nodeType":"ElementaryTypeName","src":"2469:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"private"},{"constant":false,"id":3723,"mutability":"immutable","name":"_cachedThis","nameLocation":"2542:11:17","nodeType":"VariableDeclaration","scope":3925,"src":"2516:37:17","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3722,"name":"address","nodeType":"ElementaryTypeName","src":"2516:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"private"},{"constant":false,"id":3725,"mutability":"immutable","name":"_hashedName","nameLocation":"2588:11:17","nodeType":"VariableDeclaration","scope":3925,"src":"2562:37:17","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3724,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2562:7:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"private"},{"constant":false,"id":3727,"mutability":"immutable","name":"_hashedVersion","nameLocation":"2632:14:17","nodeType":"VariableDeclaration","scope":3925,"src":"2606:40:17","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3726,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2606:7:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"private"},{"constant":false,"id":3730,"mutability":"immutable","name":"_name","nameLocation":"2685:5:17","nodeType":"VariableDeclaration","scope":3925,"src":"2655:35:17","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1613","typeString":"ShortString"},"typeName":{"id":3729,"nodeType":"UserDefinedTypeName","pathNode":{"id":3728,"name":"ShortString","nameLocations":["2655:11:17"],"nodeType":"IdentifierPath","referencedDeclaration":1613,"src":"2655:11:17"},"referencedDeclaration":1613,"src":"2655:11:17","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1613","typeString":"ShortString"}},"visibility":"private"},{"constant":false,"id":3733,"mutability":"immutable","name":"_version","nameLocation":"2727:8:17","nodeType":"VariableDeclaration","scope":3925,"src":"2697:38:17","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1613","typeString":"ShortString"},"typeName":{"id":3732,"nodeType":"UserDefinedTypeName","pathNode":{"id":3731,"name":"ShortString","nameLocations":["2697:11:17"],"nodeType":"IdentifierPath","referencedDeclaration":1613,"src":"2697:11:17"},"referencedDeclaration":1613,"src":"2697:11:17","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1613","typeString":"ShortString"}},"visibility":"private"},{"constant":false,"id":3735,"mutability":"mutable","name":"_nameFallback","nameLocation":"2808:13:17","nodeType":"VariableDeclaration","scope":3925,"src":"2793:28:17","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":3734,"name":"string","nodeType":"ElementaryTypeName","src":"2793:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"private"},{"constant":false,"id":3737,"mutability":"mutable","name":"_versionFallback","nameLocation":"2894:16:17","nodeType":"VariableDeclaration","scope":3925,"src":"2879:31:17","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":3736,"name":"string","nodeType":"ElementaryTypeName","src":"2879:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"private"},{"body":{"id":3794,"nodeType":"Block","src":"3550:385:17","statements":[{"expression":{"id":3750,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3745,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3730,"src":"3561:5:17","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1613","typeString":"ShortString"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":3748,"name":"_nameFallback","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3735,"src":"3600:13:17","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}],"expression":{"id":3746,"name":"name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3740,"src":"3569:4:17","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"id":3747,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3574:25:17","memberName":"toShortStringWithFallback","nodeType":"MemberAccess","referencedDeclaration":1765,"src":"3569:30:17","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_string_memory_ptr_$_t_string_storage_ptr_$returns$_t_userDefinedValueType$_ShortString_$1613_$attached_to$_t_string_memory_ptr_$","typeString":"function (string memory,string storage pointer) returns (ShortString)"}},"id":3749,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3569:45:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1613","typeString":"ShortString"}},"src":"3561:53:17","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1613","typeString":"ShortString"}},"id":3751,"nodeType":"ExpressionStatement","src":"3561:53:17"},{"expression":{"id":3757,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3752,"name":"_version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3733,"src":"3625:8:17","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1613","typeString":"ShortString"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":3755,"name":"_versionFallback","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3737,"src":"3670:16:17","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}],"expression":{"id":3753,"name":"version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3742,"src":"3636:7:17","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"id":3754,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3644:25:17","memberName":"toShortStringWithFallback","nodeType":"MemberAccess","referencedDeclaration":1765,"src":"3636:33:17","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_string_memory_ptr_$_t_string_storage_ptr_$returns$_t_userDefinedValueType$_ShortString_$1613_$attached_to$_t_string_memory_ptr_$","typeString":"function (string memory,string storage pointer) returns (ShortString)"}},"id":3756,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3636:51:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1613","typeString":"ShortString"}},"src":"3625:62:17","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1613","typeString":"ShortString"}},"id":3758,"nodeType":"ExpressionStatement","src":"3625:62:17"},{"expression":{"id":3766,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3759,"name":"_hashedName","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3725,"src":"3698:11:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"arguments":[{"id":3763,"name":"name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3740,"src":"3728:4:17","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3762,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3722:5:17","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":3761,"name":"bytes","nodeType":"ElementaryTypeName","src":"3722:5:17","typeDescriptions":{}}},"id":3764,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3722:11:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":3760,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"3712:9:17","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":3765,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3712:22:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"3698:36:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":3767,"nodeType":"ExpressionStatement","src":"3698:36:17"},{"expression":{"id":3775,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3768,"name":"_hashedVersion","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3727,"src":"3745:14:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"arguments":[{"id":3772,"name":"version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3742,"src":"3778:7:17","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3771,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3772:5:17","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":3770,"name":"bytes","nodeType":"ElementaryTypeName","src":"3772:5:17","typeDescriptions":{}}},"id":3773,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3772:14:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":3769,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"3762:9:17","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":3774,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3762:25:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"3745:42:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":3776,"nodeType":"ExpressionStatement","src":"3745:42:17"},{"expression":{"id":3780,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3777,"name":"_cachedChainId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3721,"src":"3800:14:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":3778,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"3817:5:17","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":3779,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3823:7:17","memberName":"chainid","nodeType":"MemberAccess","src":"3817:13:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3800:30:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3781,"nodeType":"ExpressionStatement","src":"3800:30:17"},{"expression":{"id":3785,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3782,"name":"_cachedDomainSeparator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3719,"src":"3841:22:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[],"expression":{"argumentTypes":[],"id":3783,"name":"_buildDomainSeparator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3842,"src":"3866:21:17","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_bytes32_$","typeString":"function () view returns (bytes32)"}},"id":3784,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3866:23:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"3841:48:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":3786,"nodeType":"ExpressionStatement","src":"3841:48:17"},{"expression":{"id":3792,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3787,"name":"_cachedThis","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3723,"src":"3900:11:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":3790,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"3922:4:17","typeDescriptions":{"typeIdentifier":"t_contract$_EIP712_$3925","typeString":"contract EIP712"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_EIP712_$3925","typeString":"contract EIP712"}],"id":3789,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3914:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3788,"name":"address","nodeType":"ElementaryTypeName","src":"3914:7:17","typeDescriptions":{}}},"id":3791,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3914:13:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3900:27:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3793,"nodeType":"ExpressionStatement","src":"3900:27:17"}]},"documentation":{"id":3738,"nodeType":"StructuredDocumentation","src":"2919:570:17","text":" @dev Initializes the domain separator and parameter caches.\n The meaning of `name` and `version` is specified in\n https://eips.ethereum.org/EIPS/eip-712#definition-of-domainseparator[EIP-712]:\n - `name`: the user readable name of the signing domain, i.e. the name of the DApp or the protocol.\n - `version`: the current major version of the signing domain.\n NOTE: These parameters cannot be changed except through a xref:learn::upgrading-smart-contracts.adoc[smart\n contract upgrade]."},"id":3795,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":3743,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3740,"mutability":"mutable","name":"name","nameLocation":"3521:4:17","nodeType":"VariableDeclaration","scope":3795,"src":"3507:18:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3739,"name":"string","nodeType":"ElementaryTypeName","src":"3507:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":3742,"mutability":"mutable","name":"version","nameLocation":"3541:7:17","nodeType":"VariableDeclaration","scope":3795,"src":"3527:21:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3741,"name":"string","nodeType":"ElementaryTypeName","src":"3527:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3506:43:17"},"returnParameters":{"id":3744,"nodeType":"ParameterList","parameters":[],"src":"3550:0:17"},"scope":3925,"src":"3495:440:17","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":3820,"nodeType":"Block","src":"4088:206:17","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3811,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":3806,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":3803,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"4111:4:17","typeDescriptions":{"typeIdentifier":"t_contract$_EIP712_$3925","typeString":"contract EIP712"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_EIP712_$3925","typeString":"contract EIP712"}],"id":3802,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4103:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3801,"name":"address","nodeType":"ElementaryTypeName","src":"4103:7:17","typeDescriptions":{}}},"id":3804,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4103:13:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":3805,"name":"_cachedThis","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3723,"src":"4120:11:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"4103:28:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3810,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":3807,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"4135:5:17","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":3808,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4141:7:17","memberName":"chainid","nodeType":"MemberAccess","src":"4135:13:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":3809,"name":"_cachedChainId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3721,"src":"4152:14:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4135:31:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"4103:63:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":3818,"nodeType":"Block","src":"4230:57:17","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":3815,"name":"_buildDomainSeparator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3842,"src":"4252:21:17","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_bytes32_$","typeString":"function () view returns (bytes32)"}},"id":3816,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4252:23:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":3800,"id":3817,"nodeType":"Return","src":"4245:30:17"}]},"id":3819,"nodeType":"IfStatement","src":"4099:188:17","trueBody":{"id":3814,"nodeType":"Block","src":"4168:56:17","statements":[{"expression":{"id":3812,"name":"_cachedDomainSeparator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3719,"src":"4190:22:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":3800,"id":3813,"nodeType":"Return","src":"4183:29:17"}]}}]},"documentation":{"id":3796,"nodeType":"StructuredDocumentation","src":"3943:77:17","text":" @dev Returns the domain separator for the current chain."},"id":3821,"implemented":true,"kind":"function","modifiers":[],"name":"_domainSeparatorV4","nameLocation":"4035:18:17","nodeType":"FunctionDefinition","parameters":{"id":3797,"nodeType":"ParameterList","parameters":[],"src":"4053:2:17"},"returnParameters":{"id":3800,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3799,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3821,"src":"4079:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3798,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4079:7:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4078:9:17"},"scope":3925,"src":"4026:268:17","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":3841,"nodeType":"Block","src":"4366:117:17","statements":[{"expression":{"arguments":[{"arguments":[{"id":3829,"name":"TYPE_HASH","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3717,"src":"4405:9:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3830,"name":"_hashedName","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3725,"src":"4416:11:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3831,"name":"_hashedVersion","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3727,"src":"4429:14:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"expression":{"id":3832,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"4445:5:17","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":3833,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4451:7:17","memberName":"chainid","nodeType":"MemberAccess","src":"4445:13:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"id":3836,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"4468:4:17","typeDescriptions":{"typeIdentifier":"t_contract$_EIP712_$3925","typeString":"contract EIP712"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_EIP712_$3925","typeString":"contract EIP712"}],"id":3835,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4460:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3834,"name":"address","nodeType":"ElementaryTypeName","src":"4460:7:17","typeDescriptions":{}}},"id":3837,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4460:13:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":3827,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"4394:3:17","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":3828,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4398:6:17","memberName":"encode","nodeType":"MemberAccess","src":"4394:10:17","typeDescriptions":{"typeIdentifier":"t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":3838,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4394:80:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":3826,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"4384:9:17","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":3839,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4384:91:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":3825,"id":3840,"nodeType":"Return","src":"4377:98:17"}]},"id":3842,"implemented":true,"kind":"function","modifiers":[],"name":"_buildDomainSeparator","nameLocation":"4311:21:17","nodeType":"FunctionDefinition","parameters":{"id":3822,"nodeType":"ParameterList","parameters":[],"src":"4332:2:17"},"returnParameters":{"id":3825,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3824,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3842,"src":"4357:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3823,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4357:7:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4356:9:17"},"scope":3925,"src":"4302:181:17","stateMutability":"view","virtual":false,"visibility":"private"},{"body":{"id":3857,"nodeType":"Block","src":"5211:92:17","statements":[{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":3852,"name":"_domainSeparatorV4","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3821,"src":"5262:18:17","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_bytes32_$","typeString":"function () view returns (bytes32)"}},"id":3853,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5262:20:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3854,"name":"structHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3845,"src":"5284:10:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":3850,"name":"MessageHashUtils","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4011,"src":"5229:16:17","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_MessageHashUtils_$4011_$","typeString":"type(library MessageHashUtils)"}},"id":3851,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5246:15:17","memberName":"toTypedDataHash","nodeType":"MemberAccess","referencedDeclaration":4010,"src":"5229:32:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32,bytes32) pure returns (bytes32)"}},"id":3855,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5229:66:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":3849,"id":3856,"nodeType":"Return","src":"5222:73:17"}]},"documentation":{"id":3843,"nodeType":"StructuredDocumentation","src":"4491:628:17","text":" @dev Given an already https://eips.ethereum.org/EIPS/eip-712#definition-of-hashstruct[hashed struct], this\n function returns the hash of the fully encoded EIP712 message for this domain.\n This hash can be used together with {ECDSA-recover} to obtain the signer of a message. For example:\n ```solidity\n bytes32 digest = _hashTypedDataV4(keccak256(abi.encode(\n     keccak256(\"Mail(address to,string contents)\"),\n     mailTo,\n     keccak256(bytes(mailContents))\n )));\n address signer = ECDSA.recover(digest, signature);\n ```"},"id":3858,"implemented":true,"kind":"function","modifiers":[],"name":"_hashTypedDataV4","nameLocation":"5134:16:17","nodeType":"FunctionDefinition","parameters":{"id":3846,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3845,"mutability":"mutable","name":"structHash","nameLocation":"5159:10:17","nodeType":"VariableDeclaration","scope":3858,"src":"5151:18:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3844,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5151:7:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"5150:20:17"},"returnParameters":{"id":3849,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3848,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3858,"src":"5202:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3847,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5202:7:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"5201:9:17"},"scope":3925,"src":"5125:178:17","stateMutability":"view","virtual":true,"visibility":"internal"},{"baseFunctions":[402],"body":{"id":3899,"nodeType":"Block","src":"5699:239:17","statements":[{"expression":{"components":[{"hexValue":"0f","id":3877,"isConstant":false,"isLValue":false,"isPure":true,"kind":"hexString","lValueRequested":false,"nodeType":"Literal","src":"5732:7:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_3d725c5ee53025f027da36bea8d3af3b6a3e9d2d1542d47c162631de48e66c1c","typeString":"literal_string hex\"0f\""},"value":"\u000f"},{"arguments":[],"expression":{"argumentTypes":[],"id":3878,"name":"_EIP712Name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3912,"src":"5763:11:17","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_string_memory_ptr_$","typeString":"function () view returns (string memory)"}},"id":3879,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5763:13:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"arguments":[],"expression":{"argumentTypes":[],"id":3880,"name":"_EIP712Version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3924,"src":"5791:14:17","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_string_memory_ptr_$","typeString":"function () view returns (string memory)"}},"id":3881,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5791:16:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"expression":{"id":3882,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"5822:5:17","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":3883,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5828:7:17","memberName":"chainid","nodeType":"MemberAccess","src":"5822:13:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"id":3886,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"5858:4:17","typeDescriptions":{"typeIdentifier":"t_contract$_EIP712_$3925","typeString":"contract EIP712"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_EIP712_$3925","typeString":"contract EIP712"}],"id":3885,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5850:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3884,"name":"address","nodeType":"ElementaryTypeName","src":"5850:7:17","typeDescriptions":{}}},"id":3887,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5850:13:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":3890,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5886:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3889,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5878:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":3888,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5878:7:17","typeDescriptions":{}}},"id":3891,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5878:10:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"arguments":[{"hexValue":"30","id":3895,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5917:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3894,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"5903:13:17","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (uint256[] memory)"},"typeName":{"baseType":{"id":3892,"name":"uint256","nodeType":"ElementaryTypeName","src":"5907:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3893,"nodeType":"ArrayTypeName","src":"5907:9:17","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}}},"id":3896,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5903:16:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}}],"id":3897,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"5717:213:17","typeDescriptions":{"typeIdentifier":"t_tuple$_t_stringliteral_3d725c5ee53025f027da36bea8d3af3b6a3e9d2d1542d47c162631de48e66c1c_$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_uint256_$_t_address_$_t_bytes32_$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"tuple(literal_string hex\"0f\",string memory,string memory,uint256,address,bytes32,uint256[] memory)"}},"functionReturnParameters":3876,"id":3898,"nodeType":"Return","src":"5710:220:17"}]},"documentation":{"id":3859,"nodeType":"StructuredDocumentation","src":"5311:41:17","text":" @inheritdoc IERC5267"},"functionSelector":"84b0196e","id":3900,"implemented":true,"kind":"function","modifiers":[],"name":"eip712Domain","nameLocation":"5367:12:17","nodeType":"FunctionDefinition","parameters":{"id":3860,"nodeType":"ParameterList","parameters":[],"src":"5379:2:17"},"returnParameters":{"id":3876,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3862,"mutability":"mutable","name":"fields","nameLocation":"5468:6:17","nodeType":"VariableDeclaration","scope":3900,"src":"5461:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"typeName":{"id":3861,"name":"bytes1","nodeType":"ElementaryTypeName","src":"5461:6:17","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"visibility":"internal"},{"constant":false,"id":3864,"mutability":"mutable","name":"name","nameLocation":"5503:4:17","nodeType":"VariableDeclaration","scope":3900,"src":"5489:18:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3863,"name":"string","nodeType":"ElementaryTypeName","src":"5489:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":3866,"mutability":"mutable","name":"version","nameLocation":"5536:7:17","nodeType":"VariableDeclaration","scope":3900,"src":"5522:21:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3865,"name":"string","nodeType":"ElementaryTypeName","src":"5522:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":3868,"mutability":"mutable","name":"chainId","nameLocation":"5566:7:17","nodeType":"VariableDeclaration","scope":3900,"src":"5558:15:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3867,"name":"uint256","nodeType":"ElementaryTypeName","src":"5558:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3870,"mutability":"mutable","name":"verifyingContract","nameLocation":"5596:17:17","nodeType":"VariableDeclaration","scope":3900,"src":"5588:25:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3869,"name":"address","nodeType":"ElementaryTypeName","src":"5588:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3872,"mutability":"mutable","name":"salt","nameLocation":"5636:4:17","nodeType":"VariableDeclaration","scope":3900,"src":"5628:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3871,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5628:7:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3875,"mutability":"mutable","name":"extensions","nameLocation":"5672:10:17","nodeType":"VariableDeclaration","scope":3900,"src":"5655:27:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":3873,"name":"uint256","nodeType":"ElementaryTypeName","src":"5655:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3874,"nodeType":"ArrayTypeName","src":"5655:9:17","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"5446:247:17"},"scope":3925,"src":"5358:580:17","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":3911,"nodeType":"Block","src":"6328:67:17","statements":[{"expression":{"arguments":[{"id":3908,"name":"_nameFallback","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3735,"src":"6373:13:17","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}],"expression":{"id":3906,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3730,"src":"6346:5:17","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1613","typeString":"ShortString"}},"id":3907,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6352:20:17","memberName":"toStringWithFallback","nodeType":"MemberAccess","referencedDeclaration":1792,"src":"6346:26:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_userDefinedValueType$_ShortString_$1613_$_t_string_storage_ptr_$returns$_t_string_memory_ptr_$attached_to$_t_userDefinedValueType$_ShortString_$1613_$","typeString":"function (ShortString,string storage pointer) pure returns (string memory)"}},"id":3909,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6346:41:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":3905,"id":3910,"nodeType":"Return","src":"6339:48:17"}]},"documentation":{"id":3901,"nodeType":"StructuredDocumentation","src":"5946:261:17","text":" @dev The name parameter for the EIP712 domain.\n NOTE: By default this function reads _name which is an immutable value.\n It only reads from storage if necessary (in case the value is too large to fit in a ShortString)."},"id":3912,"implemented":true,"kind":"function","modifiers":[],"name":"_EIP712Name","nameLocation":"6276:11:17","nodeType":"FunctionDefinition","parameters":{"id":3902,"nodeType":"ParameterList","parameters":[],"src":"6287:2:17"},"returnParameters":{"id":3905,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3904,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3912,"src":"6313:13:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3903,"name":"string","nodeType":"ElementaryTypeName","src":"6313:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"6312:15:17"},"scope":3925,"src":"6267:128:17","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":3923,"nodeType":"Block","src":"6794:73:17","statements":[{"expression":{"arguments":[{"id":3920,"name":"_versionFallback","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3737,"src":"6842:16:17","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}],"expression":{"id":3918,"name":"_version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3733,"src":"6812:8:17","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1613","typeString":"ShortString"}},"id":3919,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6821:20:17","memberName":"toStringWithFallback","nodeType":"MemberAccess","referencedDeclaration":1792,"src":"6812:29:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_userDefinedValueType$_ShortString_$1613_$_t_string_storage_ptr_$returns$_t_string_memory_ptr_$attached_to$_t_userDefinedValueType$_ShortString_$1613_$","typeString":"function (ShortString,string storage pointer) pure returns (string memory)"}},"id":3921,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6812:47:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":3917,"id":3922,"nodeType":"Return","src":"6805:54:17"}]},"documentation":{"id":3913,"nodeType":"StructuredDocumentation","src":"6403:267:17","text":" @dev The version parameter for the EIP712 domain.\n NOTE: By default this function reads _version which is an immutable value.\n It only reads from storage if necessary (in case the value is too large to fit in a ShortString)."},"id":3924,"implemented":true,"kind":"function","modifiers":[],"name":"_EIP712Version","nameLocation":"6739:14:17","nodeType":"FunctionDefinition","parameters":{"id":3914,"nodeType":"ParameterList","parameters":[],"src":"6753:2:17"},"returnParameters":{"id":3917,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3916,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3924,"src":"6779:13:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3915,"name":"string","nodeType":"ElementaryTypeName","src":"6779:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"6778:15:17"},"scope":3925,"src":"6730:137:17","stateMutability":"view","virtual":false,"visibility":"internal"}],"scope":3926,"src":"1993:4877:17","usedErrors":[1621,1623],"usedEvents":[383]}],"src":"116:6756:17"},"id":17},"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol","exportedSymbols":{"MessageHashUtils":[4011],"Strings":[3350]},"id":4012,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":3927,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"126:24:18"},{"absolutePath":"@openzeppelin/contracts/utils/Strings.sol","file":"../Strings.sol","id":3929,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4012,"sourceUnit":3351,"src":"154:39:18","symbolAliases":[{"foreign":{"id":3928,"name":"Strings","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3350,"src":"162:7:18","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"MessageHashUtils","contractDependencies":[],"contractKind":"library","documentation":{"id":3930,"nodeType":"StructuredDocumentation","src":"197:336:18","text":" @dev Signature message hash utilities for producing digests to be consumed by {ECDSA} recovery or signing.\n The library provides methods for generating a hash of a message that conforms to the\n https://eips.ethereum.org/EIPS/eip-191[ERC-191] and https://eips.ethereum.org/EIPS/eip-712[EIP 712]\n specifications."},"fullyImplemented":true,"id":4011,"linearizedBaseContracts":[4011],"name":"MessageHashUtils","nameLocation":"543:16:18","nodeType":"ContractDefinition","nodes":[{"body":{"id":3939,"nodeType":"Block","src":"1368:347:18","statements":[{"AST":{"nativeSrc":"1404:304:18","nodeType":"YulBlock","src":"1404:304:18","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"1426:4:18","nodeType":"YulLiteral","src":"1426:4:18","type":"","value":"0x00"},{"hexValue":"19457468657265756d205369676e6564204d6573736167653a0a3332","kind":"string","nativeSrc":"1432:34:18","nodeType":"YulLiteral","src":"1432:34:18","type":"","value":"\u0019Ethereum Signed Message:\n32"}],"functionName":{"name":"mstore","nativeSrc":"1419:6:18","nodeType":"YulIdentifier","src":"1419:6:18"},"nativeSrc":"1419:48:18","nodeType":"YulFunctionCall","src":"1419:48:18"},"nativeSrc":"1419:48:18","nodeType":"YulExpressionStatement","src":"1419:48:18"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"1529:4:18","nodeType":"YulLiteral","src":"1529:4:18","type":"","value":"0x1c"},{"name":"messageHash","nativeSrc":"1535:11:18","nodeType":"YulIdentifier","src":"1535:11:18"}],"functionName":{"name":"mstore","nativeSrc":"1522:6:18","nodeType":"YulIdentifier","src":"1522:6:18"},"nativeSrc":"1522:25:18","nodeType":"YulFunctionCall","src":"1522:25:18"},"nativeSrc":"1522:25:18","nodeType":"YulExpressionStatement","src":"1522:25:18"},{"nativeSrc":"1602:31:18","nodeType":"YulAssignment","src":"1602:31:18","value":{"arguments":[{"kind":"number","nativeSrc":"1622:4:18","nodeType":"YulLiteral","src":"1622:4:18","type":"","value":"0x00"},{"kind":"number","nativeSrc":"1628:4:18","nodeType":"YulLiteral","src":"1628:4:18","type":"","value":"0x3c"}],"functionName":{"name":"keccak256","nativeSrc":"1612:9:18","nodeType":"YulIdentifier","src":"1612:9:18"},"nativeSrc":"1612:21:18","nodeType":"YulFunctionCall","src":"1612:21:18"},"variableNames":[{"name":"digest","nativeSrc":"1602:6:18","nodeType":"YulIdentifier","src":"1602:6:18"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":3936,"isOffset":false,"isSlot":false,"src":"1602:6:18","valueSize":1},{"declaration":3933,"isOffset":false,"isSlot":false,"src":"1535:11:18","valueSize":1}],"flags":["memory-safe"],"id":3938,"nodeType":"InlineAssembly","src":"1379:329:18"}]},"documentation":{"id":3931,"nodeType":"StructuredDocumentation","src":"567:703:18","text":" @dev Returns the keccak256 digest of an ERC-191 signed data with version\n `0x45` (`personal_sign` messages).\n The digest is calculated by prefixing a bytes32 `messageHash` with\n `\"\\x19Ethereum Signed Message:\\n32\"` and hashing the result. It corresponds with the\n hash signed when using the https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_sign[`eth_sign`] JSON-RPC method.\n NOTE: The `messageHash` parameter is intended to be the result of hashing a raw message with\n keccak256, although any bytes32 value can be safely used because the final digest will\n be re-hashed.\n See {ECDSA-recover}."},"id":3940,"implemented":true,"kind":"function","modifiers":[],"name":"toEthSignedMessageHash","nameLocation":"1285:22:18","nodeType":"FunctionDefinition","parameters":{"id":3934,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3933,"mutability":"mutable","name":"messageHash","nameLocation":"1316:11:18","nodeType":"VariableDeclaration","scope":3940,"src":"1308:19:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3932,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1308:7:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1307:21:18"},"returnParameters":{"id":3937,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3936,"mutability":"mutable","name":"digest","nameLocation":"1360:6:18","nodeType":"VariableDeclaration","scope":3940,"src":"1352:14:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3935,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1352:7:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1351:16:18"},"scope":4011,"src":"1276:439:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3965,"nodeType":"Block","src":"2304:146:18","statements":[{"expression":{"arguments":[{"arguments":[{"hexValue":"19457468657265756d205369676e6564204d6573736167653a0a","id":3952,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2358:32:18","typeDescriptions":{"typeIdentifier":"t_stringliteral_9af2d9c228f6cfddaa6d1e5b94e0bce4ab16bd9a472a2b7fbfd74ebff4c720b4","typeString":"literal_string hex\"19457468657265756d205369676e6564204d6573736167653a0a\""},"value":"\u0019Ethereum Signed Message:\n"},{"arguments":[{"arguments":[{"expression":{"id":3957,"name":"message","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3943,"src":"2415:7:18","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3958,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2423:6:18","memberName":"length","nodeType":"MemberAccess","src":"2415:14:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":3955,"name":"Strings","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3350,"src":"2398:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Strings_$3350_$","typeString":"type(library Strings)"}},"id":3956,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2406:8:18","memberName":"toString","nodeType":"MemberAccess","referencedDeclaration":2062,"src":"2398:16:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) pure returns (string memory)"}},"id":3959,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2398:32:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3954,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2392:5:18","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":3953,"name":"bytes","nodeType":"ElementaryTypeName","src":"2392:5:18","typeDescriptions":{}}},"id":3960,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2392:39:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":3961,"name":"message","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3943,"src":"2433:7:18","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_9af2d9c228f6cfddaa6d1e5b94e0bce4ab16bd9a472a2b7fbfd74ebff4c720b4","typeString":"literal_string hex\"19457468657265756d205369676e6564204d6573736167653a0a\""},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":3950,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2345:5:18","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":3949,"name":"bytes","nodeType":"ElementaryTypeName","src":"2345:5:18","typeDescriptions":{}}},"id":3951,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2351:6:18","memberName":"concat","nodeType":"MemberAccess","src":"2345:12:18","typeDescriptions":{"typeIdentifier":"t_function_bytesconcat_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":3962,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2345:96:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":3948,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"2335:9:18","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":3963,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2335:107:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":3947,"id":3964,"nodeType":"Return","src":"2315:127:18"}]},"documentation":{"id":3941,"nodeType":"StructuredDocumentation","src":"1723:489:18","text":" @dev Returns the keccak256 digest of an ERC-191 signed data with version\n `0x45` (`personal_sign` messages).\n The digest is calculated by prefixing an arbitrary `message` with\n `\"\\x19Ethereum Signed Message:\\n\" + len(message)` and hashing the result. It corresponds with the\n hash signed when using the https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_sign[`eth_sign`] JSON-RPC method.\n See {ECDSA-recover}."},"id":3966,"implemented":true,"kind":"function","modifiers":[],"name":"toEthSignedMessageHash","nameLocation":"2227:22:18","nodeType":"FunctionDefinition","parameters":{"id":3944,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3943,"mutability":"mutable","name":"message","nameLocation":"2263:7:18","nodeType":"VariableDeclaration","scope":3966,"src":"2250:20:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3942,"name":"bytes","nodeType":"ElementaryTypeName","src":"2250:5:18","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2249:22:18"},"returnParameters":{"id":3947,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3946,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3966,"src":"2295:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3945,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2295:7:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2294:9:18"},"scope":4011,"src":"2218:232:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3985,"nodeType":"Block","src":"2915:82:18","statements":[{"expression":{"arguments":[{"arguments":[{"hexValue":"1900","id":3979,"isConstant":false,"isLValue":false,"isPure":true,"kind":"hexString","lValueRequested":false,"nodeType":"Literal","src":"2960:10:18","typeDescriptions":{"typeIdentifier":"t_stringliteral_73fd5d154550a4a103564cb191928cd38898034de1b952dc21b290898b4b697a","typeString":"literal_string hex\"1900\""},"value":"\u0019\u0000"},{"id":3980,"name":"validator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3969,"src":"2972:9:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3981,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3971,"src":"2983:4:18","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_73fd5d154550a4a103564cb191928cd38898034de1b952dc21b290898b4b697a","typeString":"literal_string hex\"1900\""},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":3977,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"2943:3:18","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":3978,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2947:12:18","memberName":"encodePacked","nodeType":"MemberAccess","src":"2943:16:18","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":3982,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2943:45:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":3976,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"2933:9:18","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":3983,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2933:56:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":3975,"id":3984,"nodeType":"Return","src":"2926:63:18"}]},"documentation":{"id":3967,"nodeType":"StructuredDocumentation","src":"2458:340:18","text":" @dev Returns the keccak256 digest of an ERC-191 signed data with version\n `0x00` (data with intended validator).\n The digest is calculated by prefixing an arbitrary `data` with `\"\\x19\\x00\"` and the intended\n `validator` address. Then hashing the result.\n See {ECDSA-recover}."},"id":3986,"implemented":true,"kind":"function","modifiers":[],"name":"toDataWithIntendedValidatorHash","nameLocation":"2813:31:18","nodeType":"FunctionDefinition","parameters":{"id":3972,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3969,"mutability":"mutable","name":"validator","nameLocation":"2853:9:18","nodeType":"VariableDeclaration","scope":3986,"src":"2845:17:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3968,"name":"address","nodeType":"ElementaryTypeName","src":"2845:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3971,"mutability":"mutable","name":"data","nameLocation":"2877:4:18","nodeType":"VariableDeclaration","scope":3986,"src":"2864:17:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3970,"name":"bytes","nodeType":"ElementaryTypeName","src":"2864:5:18","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2844:38:18"},"returnParameters":{"id":3975,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3974,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3986,"src":"2906:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3973,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2906:7:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2905:9:18"},"scope":4011,"src":"2804:193:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3997,"nodeType":"Block","src":"3287:223:18","statements":[{"AST":{"nativeSrc":"3323:180:18","nodeType":"YulBlock","src":"3323:180:18","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"3345:4:18","nodeType":"YulLiteral","src":"3345:4:18","type":"","value":"0x00"},{"hexValue":"1900","kind":"string","nativeSrc":"3351:10:18","nodeType":"YulLiteral","src":"3351:10:18","type":"","value":"\u0019\u0000"}],"functionName":{"name":"mstore","nativeSrc":"3338:6:18","nodeType":"YulIdentifier","src":"3338:6:18"},"nativeSrc":"3338:24:18","nodeType":"YulFunctionCall","src":"3338:24:18"},"nativeSrc":"3338:24:18","nodeType":"YulExpressionStatement","src":"3338:24:18"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"3383:4:18","nodeType":"YulLiteral","src":"3383:4:18","type":"","value":"0x02"},{"arguments":[{"kind":"number","nativeSrc":"3393:2:18","nodeType":"YulLiteral","src":"3393:2:18","type":"","value":"96"},{"name":"validator","nativeSrc":"3397:9:18","nodeType":"YulIdentifier","src":"3397:9:18"}],"functionName":{"name":"shl","nativeSrc":"3389:3:18","nodeType":"YulIdentifier","src":"3389:3:18"},"nativeSrc":"3389:18:18","nodeType":"YulFunctionCall","src":"3389:18:18"}],"functionName":{"name":"mstore","nativeSrc":"3376:6:18","nodeType":"YulIdentifier","src":"3376:6:18"},"nativeSrc":"3376:32:18","nodeType":"YulFunctionCall","src":"3376:32:18"},"nativeSrc":"3376:32:18","nodeType":"YulExpressionStatement","src":"3376:32:18"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"3429:4:18","nodeType":"YulLiteral","src":"3429:4:18","type":"","value":"0x16"},{"name":"messageHash","nativeSrc":"3435:11:18","nodeType":"YulIdentifier","src":"3435:11:18"}],"functionName":{"name":"mstore","nativeSrc":"3422:6:18","nodeType":"YulIdentifier","src":"3422:6:18"},"nativeSrc":"3422:25:18","nodeType":"YulFunctionCall","src":"3422:25:18"},"nativeSrc":"3422:25:18","nodeType":"YulExpressionStatement","src":"3422:25:18"},{"nativeSrc":"3461:31:18","nodeType":"YulAssignment","src":"3461:31:18","value":{"arguments":[{"kind":"number","nativeSrc":"3481:4:18","nodeType":"YulLiteral","src":"3481:4:18","type":"","value":"0x00"},{"kind":"number","nativeSrc":"3487:4:18","nodeType":"YulLiteral","src":"3487:4:18","type":"","value":"0x36"}],"functionName":{"name":"keccak256","nativeSrc":"3471:9:18","nodeType":"YulIdentifier","src":"3471:9:18"},"nativeSrc":"3471:21:18","nodeType":"YulFunctionCall","src":"3471:21:18"},"variableNames":[{"name":"digest","nativeSrc":"3461:6:18","nodeType":"YulIdentifier","src":"3461:6:18"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":3994,"isOffset":false,"isSlot":false,"src":"3461:6:18","valueSize":1},{"declaration":3991,"isOffset":false,"isSlot":false,"src":"3435:11:18","valueSize":1},{"declaration":3989,"isOffset":false,"isSlot":false,"src":"3397:9:18","valueSize":1}],"flags":["memory-safe"],"id":3996,"nodeType":"InlineAssembly","src":"3298:205:18"}]},"documentation":{"id":3987,"nodeType":"StructuredDocumentation","src":"3005:131:18","text":" @dev Variant of {toDataWithIntendedValidatorHash-address-bytes} optimized for cases where `data` is a bytes32."},"id":3998,"implemented":true,"kind":"function","modifiers":[],"name":"toDataWithIntendedValidatorHash","nameLocation":"3151:31:18","nodeType":"FunctionDefinition","parameters":{"id":3992,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3989,"mutability":"mutable","name":"validator","nameLocation":"3201:9:18","nodeType":"VariableDeclaration","scope":3998,"src":"3193:17:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3988,"name":"address","nodeType":"ElementaryTypeName","src":"3193:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3991,"mutability":"mutable","name":"messageHash","nameLocation":"3229:11:18","nodeType":"VariableDeclaration","scope":3998,"src":"3221:19:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3990,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3221:7:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3182:65:18"},"returnParameters":{"id":3995,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3994,"mutability":"mutable","name":"digest","nameLocation":"3279:6:18","nodeType":"VariableDeclaration","scope":3998,"src":"3271:14:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3993,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3271:7:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3270:16:18"},"scope":4011,"src":"3142:368:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4009,"nodeType":"Block","src":"4072:273:18","statements":[{"AST":{"nativeSrc":"4108:230:18","nodeType":"YulBlock","src":"4108:230:18","statements":[{"nativeSrc":"4123:22:18","nodeType":"YulVariableDeclaration","src":"4123:22:18","value":{"arguments":[{"kind":"number","nativeSrc":"4140:4:18","nodeType":"YulLiteral","src":"4140:4:18","type":"","value":"0x40"}],"functionName":{"name":"mload","nativeSrc":"4134:5:18","nodeType":"YulIdentifier","src":"4134:5:18"},"nativeSrc":"4134:11:18","nodeType":"YulFunctionCall","src":"4134:11:18"},"variables":[{"name":"ptr","nativeSrc":"4127:3:18","nodeType":"YulTypedName","src":"4127:3:18","type":""}]},{"expression":{"arguments":[{"name":"ptr","nativeSrc":"4166:3:18","nodeType":"YulIdentifier","src":"4166:3:18"},{"hexValue":"1901","kind":"string","nativeSrc":"4171:10:18","nodeType":"YulLiteral","src":"4171:10:18","type":"","value":"\u0019\u0001"}],"functionName":{"name":"mstore","nativeSrc":"4159:6:18","nodeType":"YulIdentifier","src":"4159:6:18"},"nativeSrc":"4159:23:18","nodeType":"YulFunctionCall","src":"4159:23:18"},"nativeSrc":"4159:23:18","nodeType":"YulExpressionStatement","src":"4159:23:18"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nativeSrc":"4207:3:18","nodeType":"YulIdentifier","src":"4207:3:18"},{"kind":"number","nativeSrc":"4212:4:18","nodeType":"YulLiteral","src":"4212:4:18","type":"","value":"0x02"}],"functionName":{"name":"add","nativeSrc":"4203:3:18","nodeType":"YulIdentifier","src":"4203:3:18"},"nativeSrc":"4203:14:18","nodeType":"YulFunctionCall","src":"4203:14:18"},{"name":"domainSeparator","nativeSrc":"4219:15:18","nodeType":"YulIdentifier","src":"4219:15:18"}],"functionName":{"name":"mstore","nativeSrc":"4196:6:18","nodeType":"YulIdentifier","src":"4196:6:18"},"nativeSrc":"4196:39:18","nodeType":"YulFunctionCall","src":"4196:39:18"},"nativeSrc":"4196:39:18","nodeType":"YulExpressionStatement","src":"4196:39:18"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nativeSrc":"4260:3:18","nodeType":"YulIdentifier","src":"4260:3:18"},{"kind":"number","nativeSrc":"4265:4:18","nodeType":"YulLiteral","src":"4265:4:18","type":"","value":"0x22"}],"functionName":{"name":"add","nativeSrc":"4256:3:18","nodeType":"YulIdentifier","src":"4256:3:18"},"nativeSrc":"4256:14:18","nodeType":"YulFunctionCall","src":"4256:14:18"},{"name":"structHash","nativeSrc":"4272:10:18","nodeType":"YulIdentifier","src":"4272:10:18"}],"functionName":{"name":"mstore","nativeSrc":"4249:6:18","nodeType":"YulIdentifier","src":"4249:6:18"},"nativeSrc":"4249:34:18","nodeType":"YulFunctionCall","src":"4249:34:18"},"nativeSrc":"4249:34:18","nodeType":"YulExpressionStatement","src":"4249:34:18"},{"nativeSrc":"4297:30:18","nodeType":"YulAssignment","src":"4297:30:18","value":{"arguments":[{"name":"ptr","nativeSrc":"4317:3:18","nodeType":"YulIdentifier","src":"4317:3:18"},{"kind":"number","nativeSrc":"4322:4:18","nodeType":"YulLiteral","src":"4322:4:18","type":"","value":"0x42"}],"functionName":{"name":"keccak256","nativeSrc":"4307:9:18","nodeType":"YulIdentifier","src":"4307:9:18"},"nativeSrc":"4307:20:18","nodeType":"YulFunctionCall","src":"4307:20:18"},"variableNames":[{"name":"digest","nativeSrc":"4297:6:18","nodeType":"YulIdentifier","src":"4297:6:18"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":4006,"isOffset":false,"isSlot":false,"src":"4297:6:18","valueSize":1},{"declaration":4001,"isOffset":false,"isSlot":false,"src":"4219:15:18","valueSize":1},{"declaration":4003,"isOffset":false,"isSlot":false,"src":"4272:10:18","valueSize":1}],"flags":["memory-safe"],"id":4008,"nodeType":"InlineAssembly","src":"4083:255:18"}]},"documentation":{"id":3999,"nodeType":"StructuredDocumentation","src":"3518:439:18","text":" @dev Returns the keccak256 digest of an EIP-712 typed data (ERC-191 version `0x01`).\n The digest is calculated from a `domainSeparator` and a `structHash`, by prefixing them with\n `\\x19\\x01` and hashing the result. It corresponds to the hash signed by the\n https://eips.ethereum.org/EIPS/eip-712[`eth_signTypedData`] JSON-RPC method as part of EIP-712.\n See {ECDSA-recover}."},"id":4010,"implemented":true,"kind":"function","modifiers":[],"name":"toTypedDataHash","nameLocation":"3972:15:18","nodeType":"FunctionDefinition","parameters":{"id":4004,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4001,"mutability":"mutable","name":"domainSeparator","nameLocation":"3996:15:18","nodeType":"VariableDeclaration","scope":4010,"src":"3988:23:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4000,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3988:7:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":4003,"mutability":"mutable","name":"structHash","nameLocation":"4021:10:18","nodeType":"VariableDeclaration","scope":4010,"src":"4013:18:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4002,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4013:7:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3987:45:18"},"returnParameters":{"id":4007,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4006,"mutability":"mutable","name":"digest","nameLocation":"4064:6:18","nodeType":"VariableDeclaration","scope":4010,"src":"4056:14:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4005,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4056:7:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4055:16:18"},"scope":4011,"src":"3963:382:18","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":4012,"src":"535:3813:18","usedErrors":[],"usedEvents":[]}],"src":"126:4224:18"},"id":18},"@openzeppelin/contracts/utils/introspection/ERC165.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/introspection/ERC165.sol","exportedSymbols":{"ERC165":[4035],"IERC165":[4047]},"id":4036,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":4013,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"117:24:19"},{"absolutePath":"@openzeppelin/contracts/utils/introspection/IERC165.sol","file":"./IERC165.sol","id":4015,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4036,"sourceUnit":4048,"src":"145:38:19","symbolAliases":[{"foreign":{"id":4014,"name":"IERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4047,"src":"153:7:19","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":4017,"name":"IERC165","nameLocations":["707:7:19"],"nodeType":"IdentifierPath","referencedDeclaration":4047,"src":"707:7:19"},"id":4018,"nodeType":"InheritanceSpecifier","src":"707:7:19"}],"canonicalName":"ERC165","contractDependencies":[],"contractKind":"contract","documentation":{"id":4016,"nodeType":"StructuredDocumentation","src":"187:490:19","text":" @dev Implementation of the {IERC165} interface.\n Contracts that want to implement ERC-165 should inherit from this contract and override {supportsInterface} to check\n for the additional interface id that will be supported. For example:\n ```solidity\n function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n }\n ```"},"fullyImplemented":true,"id":4035,"linearizedBaseContracts":[4035,4047],"name":"ERC165","nameLocation":"697:6:19","nodeType":"ContractDefinition","nodes":[{"baseFunctions":[4046],"body":{"id":4033,"nodeType":"Block","src":"868:66:19","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":4031,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4026,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4021,"src":"886:11:19","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":4028,"name":"IERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4047,"src":"906:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC165_$4047_$","typeString":"type(contract IERC165)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_contract$_IERC165_$4047_$","typeString":"type(contract IERC165)"}],"id":4027,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"901:4:19","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4029,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"901:13:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_contract$_IERC165_$4047","typeString":"type(contract IERC165)"}},"id":4030,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"915:11:19","memberName":"interfaceId","nodeType":"MemberAccess","src":"901:25:19","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"886:40:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":4025,"id":4032,"nodeType":"Return","src":"879:47:19"}]},"documentation":{"id":4019,"nodeType":"StructuredDocumentation","src":"722:58:19","text":" @dev See {IERC165-supportsInterface}."},"functionSelector":"01ffc9a7","id":4034,"implemented":true,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"795:17:19","nodeType":"FunctionDefinition","parameters":{"id":4022,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4021,"mutability":"mutable","name":"interfaceId","nameLocation":"820:11:19","nodeType":"VariableDeclaration","scope":4034,"src":"813:18:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":4020,"name":"bytes4","nodeType":"ElementaryTypeName","src":"813:6:19","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"812:20:19"},"returnParameters":{"id":4025,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4024,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4034,"src":"862:4:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4023,"name":"bool","nodeType":"ElementaryTypeName","src":"862:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"861:6:19"},"scope":4035,"src":"786:148:19","stateMutability":"view","virtual":true,"visibility":"public"}],"scope":4036,"src":"679:258:19","usedErrors":[],"usedEvents":[]}],"src":"117:822:19"},"id":19},"@openzeppelin/contracts/utils/introspection/IERC165.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/introspection/IERC165.sol","exportedSymbols":{"IERC165":[4047]},"id":4048,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":4037,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"118:24:20"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC165","contractDependencies":[],"contractKind":"interface","documentation":{"id":4038,"nodeType":"StructuredDocumentation","src":"146:288:20","text":" @dev Interface of the ERC-165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[ERC].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."},"fullyImplemented":false,"id":4047,"linearizedBaseContracts":[4047],"name":"IERC165","nameLocation":"446:7:20","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":4039,"nodeType":"StructuredDocumentation","src":"461:347:20","text":" @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."},"functionSelector":"01ffc9a7","id":4046,"implemented":false,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"823:17:20","nodeType":"FunctionDefinition","parameters":{"id":4042,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4041,"mutability":"mutable","name":"interfaceId","nameLocation":"848:11:20","nodeType":"VariableDeclaration","scope":4046,"src":"841:18:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":4040,"name":"bytes4","nodeType":"ElementaryTypeName","src":"841:6:20","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"840:20:20"},"returnParameters":{"id":4045,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4044,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4046,"src":"884:4:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4043,"name":"bool","nodeType":"ElementaryTypeName","src":"884:4:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"883:6:20"},"scope":4047,"src":"814:76:20","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":4048,"src":"436:457:20","usedErrors":[],"usedEvents":[]}],"src":"118:777:20"},"id":20},"@openzeppelin/contracts/utils/math/Math.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/math/Math.sol","exportedSymbols":{"Math":[5668],"Panic":[1499],"SafeCast":[7433]},"id":5669,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":4049,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"106:24:21"},{"absolutePath":"@openzeppelin/contracts/utils/Panic.sol","file":"../Panic.sol","id":4051,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":5669,"sourceUnit":1500,"src":"134:35:21","symbolAliases":[{"foreign":{"id":4050,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1499,"src":"142:5:21","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/math/SafeCast.sol","file":"./SafeCast.sol","id":4053,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":5669,"sourceUnit":7434,"src":"171:40:21","symbolAliases":[{"foreign":{"id":4052,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7433,"src":"179:8:21","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"Math","contractDependencies":[],"contractKind":"library","documentation":{"id":4054,"nodeType":"StructuredDocumentation","src":"215:75:21","text":" @dev Standard math utilities missing in the Solidity language."},"fullyImplemented":true,"id":5668,"linearizedBaseContracts":[5668],"name":"Math","nameLocation":"300:4:21","nodeType":"ContractDefinition","nodes":[{"canonicalName":"Math.Rounding","id":4059,"members":[{"id":4055,"name":"Floor","nameLocation":"337:5:21","nodeType":"EnumValue","src":"337:5:21"},{"id":4056,"name":"Ceil","nameLocation":"381:4:21","nodeType":"EnumValue","src":"381:4:21"},{"id":4057,"name":"Trunc","nameLocation":"424:5:21","nodeType":"EnumValue","src":"424:5:21"},{"id":4058,"name":"Expand","nameLocation":"455:6:21","nodeType":"EnumValue","src":"455:6:21"}],"name":"Rounding","nameLocation":"317:8:21","nodeType":"EnumDefinition","src":"312:174:21"},{"body":{"id":4072,"nodeType":"Block","src":"755:117:21","statements":[{"AST":{"nativeSrc":"791:74:21","nodeType":"YulBlock","src":"791:74:21","statements":[{"nativeSrc":"806:16:21","nodeType":"YulAssignment","src":"806:16:21","value":{"arguments":[{"name":"a","nativeSrc":"817:1:21","nodeType":"YulIdentifier","src":"817:1:21"},{"name":"b","nativeSrc":"820:1:21","nodeType":"YulIdentifier","src":"820:1:21"}],"functionName":{"name":"add","nativeSrc":"813:3:21","nodeType":"YulIdentifier","src":"813:3:21"},"nativeSrc":"813:9:21","nodeType":"YulFunctionCall","src":"813:9:21"},"variableNames":[{"name":"low","nativeSrc":"806:3:21","nodeType":"YulIdentifier","src":"806:3:21"}]},{"nativeSrc":"836:18:21","nodeType":"YulAssignment","src":"836:18:21","value":{"arguments":[{"name":"low","nativeSrc":"847:3:21","nodeType":"YulIdentifier","src":"847:3:21"},{"name":"a","nativeSrc":"852:1:21","nodeType":"YulIdentifier","src":"852:1:21"}],"functionName":{"name":"lt","nativeSrc":"844:2:21","nodeType":"YulIdentifier","src":"844:2:21"},"nativeSrc":"844:10:21","nodeType":"YulFunctionCall","src":"844:10:21"},"variableNames":[{"name":"high","nativeSrc":"836:4:21","nodeType":"YulIdentifier","src":"836:4:21"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":4062,"isOffset":false,"isSlot":false,"src":"817:1:21","valueSize":1},{"declaration":4062,"isOffset":false,"isSlot":false,"src":"852:1:21","valueSize":1},{"declaration":4064,"isOffset":false,"isSlot":false,"src":"820:1:21","valueSize":1},{"declaration":4067,"isOffset":false,"isSlot":false,"src":"836:4:21","valueSize":1},{"declaration":4069,"isOffset":false,"isSlot":false,"src":"806:3:21","valueSize":1},{"declaration":4069,"isOffset":false,"isSlot":false,"src":"847:3:21","valueSize":1}],"flags":["memory-safe"],"id":4071,"nodeType":"InlineAssembly","src":"766:99:21"}]},"documentation":{"id":4060,"nodeType":"StructuredDocumentation","src":"494:167:21","text":" @dev Return the 512-bit addition of two uint256.\n The result is stored in two 256 variables such that sum = high * 2²⁵⁶ + low."},"id":4073,"implemented":true,"kind":"function","modifiers":[],"name":"add512","nameLocation":"676:6:21","nodeType":"FunctionDefinition","parameters":{"id":4065,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4062,"mutability":"mutable","name":"a","nameLocation":"691:1:21","nodeType":"VariableDeclaration","scope":4073,"src":"683:9:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4061,"name":"uint256","nodeType":"ElementaryTypeName","src":"683:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4064,"mutability":"mutable","name":"b","nameLocation":"702:1:21","nodeType":"VariableDeclaration","scope":4073,"src":"694:9:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4063,"name":"uint256","nodeType":"ElementaryTypeName","src":"694:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"682:22:21"},"returnParameters":{"id":4070,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4067,"mutability":"mutable","name":"high","nameLocation":"736:4:21","nodeType":"VariableDeclaration","scope":4073,"src":"728:12:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4066,"name":"uint256","nodeType":"ElementaryTypeName","src":"728:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4069,"mutability":"mutable","name":"low","nameLocation":"750:3:21","nodeType":"VariableDeclaration","scope":4073,"src":"742:11:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4068,"name":"uint256","nodeType":"ElementaryTypeName","src":"742:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"727:27:21"},"scope":5668,"src":"667:205:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4086,"nodeType":"Block","src":"1151:471:21","statements":[{"AST":{"nativeSrc":"1477:138:21","nodeType":"YulBlock","src":"1477:138:21","statements":[{"nativeSrc":"1492:30:21","nodeType":"YulVariableDeclaration","src":"1492:30:21","value":{"arguments":[{"name":"a","nativeSrc":"1509:1:21","nodeType":"YulIdentifier","src":"1509:1:21"},{"name":"b","nativeSrc":"1512:1:21","nodeType":"YulIdentifier","src":"1512:1:21"},{"arguments":[{"kind":"number","nativeSrc":"1519:1:21","nodeType":"YulLiteral","src":"1519:1:21","type":"","value":"0"}],"functionName":{"name":"not","nativeSrc":"1515:3:21","nodeType":"YulIdentifier","src":"1515:3:21"},"nativeSrc":"1515:6:21","nodeType":"YulFunctionCall","src":"1515:6:21"}],"functionName":{"name":"mulmod","nativeSrc":"1502:6:21","nodeType":"YulIdentifier","src":"1502:6:21"},"nativeSrc":"1502:20:21","nodeType":"YulFunctionCall","src":"1502:20:21"},"variables":[{"name":"mm","nativeSrc":"1496:2:21","nodeType":"YulTypedName","src":"1496:2:21","type":""}]},{"nativeSrc":"1536:16:21","nodeType":"YulAssignment","src":"1536:16:21","value":{"arguments":[{"name":"a","nativeSrc":"1547:1:21","nodeType":"YulIdentifier","src":"1547:1:21"},{"name":"b","nativeSrc":"1550:1:21","nodeType":"YulIdentifier","src":"1550:1:21"}],"functionName":{"name":"mul","nativeSrc":"1543:3:21","nodeType":"YulIdentifier","src":"1543:3:21"},"nativeSrc":"1543:9:21","nodeType":"YulFunctionCall","src":"1543:9:21"},"variableNames":[{"name":"low","nativeSrc":"1536:3:21","nodeType":"YulIdentifier","src":"1536:3:21"}]},{"nativeSrc":"1566:38:21","nodeType":"YulAssignment","src":"1566:38:21","value":{"arguments":[{"arguments":[{"name":"mm","nativeSrc":"1582:2:21","nodeType":"YulIdentifier","src":"1582:2:21"},{"name":"low","nativeSrc":"1586:3:21","nodeType":"YulIdentifier","src":"1586:3:21"}],"functionName":{"name":"sub","nativeSrc":"1578:3:21","nodeType":"YulIdentifier","src":"1578:3:21"},"nativeSrc":"1578:12:21","nodeType":"YulFunctionCall","src":"1578:12:21"},{"arguments":[{"name":"mm","nativeSrc":"1595:2:21","nodeType":"YulIdentifier","src":"1595:2:21"},{"name":"low","nativeSrc":"1599:3:21","nodeType":"YulIdentifier","src":"1599:3:21"}],"functionName":{"name":"lt","nativeSrc":"1592:2:21","nodeType":"YulIdentifier","src":"1592:2:21"},"nativeSrc":"1592:11:21","nodeType":"YulFunctionCall","src":"1592:11:21"}],"functionName":{"name":"sub","nativeSrc":"1574:3:21","nodeType":"YulIdentifier","src":"1574:3:21"},"nativeSrc":"1574:30:21","nodeType":"YulFunctionCall","src":"1574:30:21"},"variableNames":[{"name":"high","nativeSrc":"1566:4:21","nodeType":"YulIdentifier","src":"1566:4:21"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":4076,"isOffset":false,"isSlot":false,"src":"1509:1:21","valueSize":1},{"declaration":4076,"isOffset":false,"isSlot":false,"src":"1547:1:21","valueSize":1},{"declaration":4078,"isOffset":false,"isSlot":false,"src":"1512:1:21","valueSize":1},{"declaration":4078,"isOffset":false,"isSlot":false,"src":"1550:1:21","valueSize":1},{"declaration":4081,"isOffset":false,"isSlot":false,"src":"1566:4:21","valueSize":1},{"declaration":4083,"isOffset":false,"isSlot":false,"src":"1536:3:21","valueSize":1},{"declaration":4083,"isOffset":false,"isSlot":false,"src":"1586:3:21","valueSize":1},{"declaration":4083,"isOffset":false,"isSlot":false,"src":"1599:3:21","valueSize":1}],"flags":["memory-safe"],"id":4085,"nodeType":"InlineAssembly","src":"1452:163:21"}]},"documentation":{"id":4074,"nodeType":"StructuredDocumentation","src":"880:177:21","text":" @dev Return the 512-bit multiplication of two uint256.\n The result is stored in two 256 variables such that product = high * 2²⁵⁶ + low."},"id":4087,"implemented":true,"kind":"function","modifiers":[],"name":"mul512","nameLocation":"1072:6:21","nodeType":"FunctionDefinition","parameters":{"id":4079,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4076,"mutability":"mutable","name":"a","nameLocation":"1087:1:21","nodeType":"VariableDeclaration","scope":4087,"src":"1079:9:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4075,"name":"uint256","nodeType":"ElementaryTypeName","src":"1079:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4078,"mutability":"mutable","name":"b","nameLocation":"1098:1:21","nodeType":"VariableDeclaration","scope":4087,"src":"1090:9:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4077,"name":"uint256","nodeType":"ElementaryTypeName","src":"1090:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1078:22:21"},"returnParameters":{"id":4084,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4081,"mutability":"mutable","name":"high","nameLocation":"1132:4:21","nodeType":"VariableDeclaration","scope":4087,"src":"1124:12:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4080,"name":"uint256","nodeType":"ElementaryTypeName","src":"1124:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4083,"mutability":"mutable","name":"low","nameLocation":"1146:3:21","nodeType":"VariableDeclaration","scope":4087,"src":"1138:11:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4082,"name":"uint256","nodeType":"ElementaryTypeName","src":"1138:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1123:27:21"},"scope":5668,"src":"1063:559:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4121,"nodeType":"Block","src":"1834:155:21","statements":[{"id":4120,"nodeType":"UncheckedBlock","src":"1845:137:21","statements":[{"assignments":[4100],"declarations":[{"constant":false,"id":4100,"mutability":"mutable","name":"c","nameLocation":"1878:1:21","nodeType":"VariableDeclaration","scope":4120,"src":"1870:9:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4099,"name":"uint256","nodeType":"ElementaryTypeName","src":"1870:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4104,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4103,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4101,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4090,"src":"1882:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":4102,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4092,"src":"1886:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1882:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1870:17:21"},{"expression":{"id":4109,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4105,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4095,"src":"1902:7:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4108,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4106,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4100,"src":"1912:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":4107,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4090,"src":"1917:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1912:6:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"1902:16:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4110,"nodeType":"ExpressionStatement","src":"1902:16:21"},{"expression":{"id":4118,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4111,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4097,"src":"1933:6:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4117,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4112,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4100,"src":"1942:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"id":4115,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4095,"src":"1962:7:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4113,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7433,"src":"1946:8:21","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7433_$","typeString":"type(library SafeCast)"}},"id":4114,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1955:6:21","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7432,"src":"1946:15:21","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4116,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1946:24:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1942:28:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1933:37:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4119,"nodeType":"ExpressionStatement","src":"1933:37:21"}]}]},"documentation":{"id":4088,"nodeType":"StructuredDocumentation","src":"1630:107:21","text":" @dev Returns the addition of two unsigned integers, with a success flag (no overflow)."},"id":4122,"implemented":true,"kind":"function","modifiers":[],"name":"tryAdd","nameLocation":"1752:6:21","nodeType":"FunctionDefinition","parameters":{"id":4093,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4090,"mutability":"mutable","name":"a","nameLocation":"1767:1:21","nodeType":"VariableDeclaration","scope":4122,"src":"1759:9:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4089,"name":"uint256","nodeType":"ElementaryTypeName","src":"1759:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4092,"mutability":"mutable","name":"b","nameLocation":"1778:1:21","nodeType":"VariableDeclaration","scope":4122,"src":"1770:9:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4091,"name":"uint256","nodeType":"ElementaryTypeName","src":"1770:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1758:22:21"},"returnParameters":{"id":4098,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4095,"mutability":"mutable","name":"success","nameLocation":"1809:7:21","nodeType":"VariableDeclaration","scope":4122,"src":"1804:12:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4094,"name":"bool","nodeType":"ElementaryTypeName","src":"1804:4:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":4097,"mutability":"mutable","name":"result","nameLocation":"1826:6:21","nodeType":"VariableDeclaration","scope":4122,"src":"1818:14:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4096,"name":"uint256","nodeType":"ElementaryTypeName","src":"1818:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1803:30:21"},"scope":5668,"src":"1743:246:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4156,"nodeType":"Block","src":"2204:155:21","statements":[{"id":4155,"nodeType":"UncheckedBlock","src":"2215:137:21","statements":[{"assignments":[4135],"declarations":[{"constant":false,"id":4135,"mutability":"mutable","name":"c","nameLocation":"2248:1:21","nodeType":"VariableDeclaration","scope":4155,"src":"2240:9:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4134,"name":"uint256","nodeType":"ElementaryTypeName","src":"2240:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4139,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4138,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4136,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4125,"src":"2252:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":4137,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4127,"src":"2256:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2252:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2240:17:21"},{"expression":{"id":4144,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4140,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4130,"src":"2272:7:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4143,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4141,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4135,"src":"2282:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"id":4142,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4125,"src":"2287:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2282:6:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"2272:16:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4145,"nodeType":"ExpressionStatement","src":"2272:16:21"},{"expression":{"id":4153,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4146,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4132,"src":"2303:6:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4152,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4147,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4135,"src":"2312:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"id":4150,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4130,"src":"2332:7:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4148,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7433,"src":"2316:8:21","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7433_$","typeString":"type(library SafeCast)"}},"id":4149,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2325:6:21","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7432,"src":"2316:15:21","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4151,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2316:24:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2312:28:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2303:37:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4154,"nodeType":"ExpressionStatement","src":"2303:37:21"}]}]},"documentation":{"id":4123,"nodeType":"StructuredDocumentation","src":"1997:110:21","text":" @dev Returns the subtraction of two unsigned integers, with a success flag (no overflow)."},"id":4157,"implemented":true,"kind":"function","modifiers":[],"name":"trySub","nameLocation":"2122:6:21","nodeType":"FunctionDefinition","parameters":{"id":4128,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4125,"mutability":"mutable","name":"a","nameLocation":"2137:1:21","nodeType":"VariableDeclaration","scope":4157,"src":"2129:9:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4124,"name":"uint256","nodeType":"ElementaryTypeName","src":"2129:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4127,"mutability":"mutable","name":"b","nameLocation":"2148:1:21","nodeType":"VariableDeclaration","scope":4157,"src":"2140:9:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4126,"name":"uint256","nodeType":"ElementaryTypeName","src":"2140:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2128:22:21"},"returnParameters":{"id":4133,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4130,"mutability":"mutable","name":"success","nameLocation":"2179:7:21","nodeType":"VariableDeclaration","scope":4157,"src":"2174:12:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4129,"name":"bool","nodeType":"ElementaryTypeName","src":"2174:4:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":4132,"mutability":"mutable","name":"result","nameLocation":"2196:6:21","nodeType":"VariableDeclaration","scope":4157,"src":"2188:14:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4131,"name":"uint256","nodeType":"ElementaryTypeName","src":"2188:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2173:30:21"},"scope":5668,"src":"2113:246:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4186,"nodeType":"Block","src":"2577:402:21","statements":[{"id":4185,"nodeType":"UncheckedBlock","src":"2588:384:21","statements":[{"assignments":[4170],"declarations":[{"constant":false,"id":4170,"mutability":"mutable","name":"c","nameLocation":"2621:1:21","nodeType":"VariableDeclaration","scope":4185,"src":"2613:9:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4169,"name":"uint256","nodeType":"ElementaryTypeName","src":"2613:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4174,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4173,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4171,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4160,"src":"2625:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4172,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4162,"src":"2629:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2625:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2613:17:21"},{"AST":{"nativeSrc":"2670:192:21","nodeType":"YulBlock","src":"2670:192:21","statements":[{"nativeSrc":"2805:42:21","nodeType":"YulAssignment","src":"2805:42:21","value":{"arguments":[{"arguments":[{"arguments":[{"name":"c","nativeSrc":"2826:1:21","nodeType":"YulIdentifier","src":"2826:1:21"},{"name":"a","nativeSrc":"2829:1:21","nodeType":"YulIdentifier","src":"2829:1:21"}],"functionName":{"name":"div","nativeSrc":"2822:3:21","nodeType":"YulIdentifier","src":"2822:3:21"},"nativeSrc":"2822:9:21","nodeType":"YulFunctionCall","src":"2822:9:21"},{"name":"b","nativeSrc":"2833:1:21","nodeType":"YulIdentifier","src":"2833:1:21"}],"functionName":{"name":"eq","nativeSrc":"2819:2:21","nodeType":"YulIdentifier","src":"2819:2:21"},"nativeSrc":"2819:16:21","nodeType":"YulFunctionCall","src":"2819:16:21"},{"arguments":[{"name":"a","nativeSrc":"2844:1:21","nodeType":"YulIdentifier","src":"2844:1:21"}],"functionName":{"name":"iszero","nativeSrc":"2837:6:21","nodeType":"YulIdentifier","src":"2837:6:21"},"nativeSrc":"2837:9:21","nodeType":"YulFunctionCall","src":"2837:9:21"}],"functionName":{"name":"or","nativeSrc":"2816:2:21","nodeType":"YulIdentifier","src":"2816:2:21"},"nativeSrc":"2816:31:21","nodeType":"YulFunctionCall","src":"2816:31:21"},"variableNames":[{"name":"success","nativeSrc":"2805:7:21","nodeType":"YulIdentifier","src":"2805:7:21"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":4160,"isOffset":false,"isSlot":false,"src":"2829:1:21","valueSize":1},{"declaration":4160,"isOffset":false,"isSlot":false,"src":"2844:1:21","valueSize":1},{"declaration":4162,"isOffset":false,"isSlot":false,"src":"2833:1:21","valueSize":1},{"declaration":4170,"isOffset":false,"isSlot":false,"src":"2826:1:21","valueSize":1},{"declaration":4165,"isOffset":false,"isSlot":false,"src":"2805:7:21","valueSize":1}],"flags":["memory-safe"],"id":4175,"nodeType":"InlineAssembly","src":"2645:217:21"},{"expression":{"id":4183,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4176,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4167,"src":"2923:6:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4182,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4177,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4170,"src":"2932:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"id":4180,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4165,"src":"2952:7:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4178,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7433,"src":"2936:8:21","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7433_$","typeString":"type(library SafeCast)"}},"id":4179,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2945:6:21","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7432,"src":"2936:15:21","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4181,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2936:24:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2932:28:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2923:37:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4184,"nodeType":"ExpressionStatement","src":"2923:37:21"}]}]},"documentation":{"id":4158,"nodeType":"StructuredDocumentation","src":"2367:113:21","text":" @dev Returns the multiplication of two unsigned integers, with a success flag (no overflow)."},"id":4187,"implemented":true,"kind":"function","modifiers":[],"name":"tryMul","nameLocation":"2495:6:21","nodeType":"FunctionDefinition","parameters":{"id":4163,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4160,"mutability":"mutable","name":"a","nameLocation":"2510:1:21","nodeType":"VariableDeclaration","scope":4187,"src":"2502:9:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4159,"name":"uint256","nodeType":"ElementaryTypeName","src":"2502:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4162,"mutability":"mutable","name":"b","nameLocation":"2521:1:21","nodeType":"VariableDeclaration","scope":4187,"src":"2513:9:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4161,"name":"uint256","nodeType":"ElementaryTypeName","src":"2513:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2501:22:21"},"returnParameters":{"id":4168,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4165,"mutability":"mutable","name":"success","nameLocation":"2552:7:21","nodeType":"VariableDeclaration","scope":4187,"src":"2547:12:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4164,"name":"bool","nodeType":"ElementaryTypeName","src":"2547:4:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":4167,"mutability":"mutable","name":"result","nameLocation":"2569:6:21","nodeType":"VariableDeclaration","scope":4187,"src":"2561:14:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4166,"name":"uint256","nodeType":"ElementaryTypeName","src":"2561:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2546:30:21"},"scope":5668,"src":"2486:493:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4207,"nodeType":"Block","src":"3199:239:21","statements":[{"id":4206,"nodeType":"UncheckedBlock","src":"3210:221:21","statements":[{"expression":{"id":4203,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4199,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4195,"src":"3235:7:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4202,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4200,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4192,"src":"3245:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":4201,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3249:1:21","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3245:5:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"3235:15:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4204,"nodeType":"ExpressionStatement","src":"3235:15:21"},{"AST":{"nativeSrc":"3290:130:21","nodeType":"YulBlock","src":"3290:130:21","statements":[{"nativeSrc":"3386:19:21","nodeType":"YulAssignment","src":"3386:19:21","value":{"arguments":[{"name":"a","nativeSrc":"3400:1:21","nodeType":"YulIdentifier","src":"3400:1:21"},{"name":"b","nativeSrc":"3403:1:21","nodeType":"YulIdentifier","src":"3403:1:21"}],"functionName":{"name":"div","nativeSrc":"3396:3:21","nodeType":"YulIdentifier","src":"3396:3:21"},"nativeSrc":"3396:9:21","nodeType":"YulFunctionCall","src":"3396:9:21"},"variableNames":[{"name":"result","nativeSrc":"3386:6:21","nodeType":"YulIdentifier","src":"3386:6:21"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":4190,"isOffset":false,"isSlot":false,"src":"3400:1:21","valueSize":1},{"declaration":4192,"isOffset":false,"isSlot":false,"src":"3403:1:21","valueSize":1},{"declaration":4197,"isOffset":false,"isSlot":false,"src":"3386:6:21","valueSize":1}],"flags":["memory-safe"],"id":4205,"nodeType":"InlineAssembly","src":"3265:155:21"}]}]},"documentation":{"id":4188,"nodeType":"StructuredDocumentation","src":"2987:115:21","text":" @dev Returns the division of two unsigned integers, with a success flag (no division by zero)."},"id":4208,"implemented":true,"kind":"function","modifiers":[],"name":"tryDiv","nameLocation":"3117:6:21","nodeType":"FunctionDefinition","parameters":{"id":4193,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4190,"mutability":"mutable","name":"a","nameLocation":"3132:1:21","nodeType":"VariableDeclaration","scope":4208,"src":"3124:9:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4189,"name":"uint256","nodeType":"ElementaryTypeName","src":"3124:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4192,"mutability":"mutable","name":"b","nameLocation":"3143:1:21","nodeType":"VariableDeclaration","scope":4208,"src":"3135:9:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4191,"name":"uint256","nodeType":"ElementaryTypeName","src":"3135:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3123:22:21"},"returnParameters":{"id":4198,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4195,"mutability":"mutable","name":"success","nameLocation":"3174:7:21","nodeType":"VariableDeclaration","scope":4208,"src":"3169:12:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4194,"name":"bool","nodeType":"ElementaryTypeName","src":"3169:4:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":4197,"mutability":"mutable","name":"result","nameLocation":"3191:6:21","nodeType":"VariableDeclaration","scope":4208,"src":"3183:14:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4196,"name":"uint256","nodeType":"ElementaryTypeName","src":"3183:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3168:30:21"},"scope":5668,"src":"3108:330:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4228,"nodeType":"Block","src":"3668:239:21","statements":[{"id":4227,"nodeType":"UncheckedBlock","src":"3679:221:21","statements":[{"expression":{"id":4224,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4220,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4216,"src":"3704:7:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4223,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4221,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4213,"src":"3714:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":4222,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3718:1:21","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3714:5:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"3704:15:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4225,"nodeType":"ExpressionStatement","src":"3704:15:21"},{"AST":{"nativeSrc":"3759:130:21","nodeType":"YulBlock","src":"3759:130:21","statements":[{"nativeSrc":"3855:19:21","nodeType":"YulAssignment","src":"3855:19:21","value":{"arguments":[{"name":"a","nativeSrc":"3869:1:21","nodeType":"YulIdentifier","src":"3869:1:21"},{"name":"b","nativeSrc":"3872:1:21","nodeType":"YulIdentifier","src":"3872:1:21"}],"functionName":{"name":"mod","nativeSrc":"3865:3:21","nodeType":"YulIdentifier","src":"3865:3:21"},"nativeSrc":"3865:9:21","nodeType":"YulFunctionCall","src":"3865:9:21"},"variableNames":[{"name":"result","nativeSrc":"3855:6:21","nodeType":"YulIdentifier","src":"3855:6:21"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":4211,"isOffset":false,"isSlot":false,"src":"3869:1:21","valueSize":1},{"declaration":4213,"isOffset":false,"isSlot":false,"src":"3872:1:21","valueSize":1},{"declaration":4218,"isOffset":false,"isSlot":false,"src":"3855:6:21","valueSize":1}],"flags":["memory-safe"],"id":4226,"nodeType":"InlineAssembly","src":"3734:155:21"}]}]},"documentation":{"id":4209,"nodeType":"StructuredDocumentation","src":"3446:125:21","text":" @dev Returns the remainder of dividing two unsigned integers, with a success flag (no division by zero)."},"id":4229,"implemented":true,"kind":"function","modifiers":[],"name":"tryMod","nameLocation":"3586:6:21","nodeType":"FunctionDefinition","parameters":{"id":4214,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4211,"mutability":"mutable","name":"a","nameLocation":"3601:1:21","nodeType":"VariableDeclaration","scope":4229,"src":"3593:9:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4210,"name":"uint256","nodeType":"ElementaryTypeName","src":"3593:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4213,"mutability":"mutable","name":"b","nameLocation":"3612:1:21","nodeType":"VariableDeclaration","scope":4229,"src":"3604:9:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4212,"name":"uint256","nodeType":"ElementaryTypeName","src":"3604:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3592:22:21"},"returnParameters":{"id":4219,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4216,"mutability":"mutable","name":"success","nameLocation":"3643:7:21","nodeType":"VariableDeclaration","scope":4229,"src":"3638:12:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4215,"name":"bool","nodeType":"ElementaryTypeName","src":"3638:4:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":4218,"mutability":"mutable","name":"result","nameLocation":"3660:6:21","nodeType":"VariableDeclaration","scope":4229,"src":"3652:14:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4217,"name":"uint256","nodeType":"ElementaryTypeName","src":"3652:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3637:30:21"},"scope":5668,"src":"3577:330:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4258,"nodeType":"Block","src":"4103:125:21","statements":[{"assignments":[4240,4242],"declarations":[{"constant":false,"id":4240,"mutability":"mutable","name":"success","nameLocation":"4120:7:21","nodeType":"VariableDeclaration","scope":4258,"src":"4115:12:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4239,"name":"bool","nodeType":"ElementaryTypeName","src":"4115:4:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":4242,"mutability":"mutable","name":"result","nameLocation":"4137:6:21","nodeType":"VariableDeclaration","scope":4258,"src":"4129:14:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4241,"name":"uint256","nodeType":"ElementaryTypeName","src":"4129:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4247,"initialValue":{"arguments":[{"id":4244,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4232,"src":"4154:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4245,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4234,"src":"4157:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4243,"name":"tryAdd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4122,"src":"4147:6:21","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (bool,uint256)"}},"id":4246,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4147:12:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"4114:45:21"},{"expression":{"arguments":[{"id":4249,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4240,"src":"4185:7:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":4250,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4242,"src":"4194:6:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"arguments":[{"id":4253,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4207:7:21","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":4252,"name":"uint256","nodeType":"ElementaryTypeName","src":"4207:7:21","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"}],"id":4251,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"4202:4:21","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4254,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4202:13:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint256","typeString":"type(uint256)"}},"id":4255,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4216:3:21","memberName":"max","nodeType":"MemberAccess","src":"4202:17:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4248,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4336,"src":"4177:7:21","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (bool,uint256,uint256) pure returns (uint256)"}},"id":4256,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4177:43:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4238,"id":4257,"nodeType":"Return","src":"4170:50:21"}]},"documentation":{"id":4230,"nodeType":"StructuredDocumentation","src":"3915:105:21","text":" @dev Unsigned saturating addition, bounds to `2²⁵⁶ - 1` instead of overflowing."},"id":4259,"implemented":true,"kind":"function","modifiers":[],"name":"saturatingAdd","nameLocation":"4035:13:21","nodeType":"FunctionDefinition","parameters":{"id":4235,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4232,"mutability":"mutable","name":"a","nameLocation":"4057:1:21","nodeType":"VariableDeclaration","scope":4259,"src":"4049:9:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4231,"name":"uint256","nodeType":"ElementaryTypeName","src":"4049:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4234,"mutability":"mutable","name":"b","nameLocation":"4068:1:21","nodeType":"VariableDeclaration","scope":4259,"src":"4060:9:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4233,"name":"uint256","nodeType":"ElementaryTypeName","src":"4060:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4048:22:21"},"returnParameters":{"id":4238,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4237,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4259,"src":"4094:7:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4236,"name":"uint256","nodeType":"ElementaryTypeName","src":"4094:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4093:9:21"},"scope":5668,"src":"4026:202:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4278,"nodeType":"Block","src":"4416:76:21","statements":[{"assignments":[null,4270],"declarations":[null,{"constant":false,"id":4270,"mutability":"mutable","name":"result","nameLocation":"4438:6:21","nodeType":"VariableDeclaration","scope":4278,"src":"4430:14:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4269,"name":"uint256","nodeType":"ElementaryTypeName","src":"4430:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4275,"initialValue":{"arguments":[{"id":4272,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4262,"src":"4455:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4273,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4264,"src":"4458:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4271,"name":"trySub","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4157,"src":"4448:6:21","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (bool,uint256)"}},"id":4274,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4448:12:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"4427:33:21"},{"expression":{"id":4276,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4270,"src":"4478:6:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4268,"id":4277,"nodeType":"Return","src":"4471:13:21"}]},"documentation":{"id":4260,"nodeType":"StructuredDocumentation","src":"4236:97:21","text":" @dev Unsigned saturating subtraction, bounds to zero instead of overflowing."},"id":4279,"implemented":true,"kind":"function","modifiers":[],"name":"saturatingSub","nameLocation":"4348:13:21","nodeType":"FunctionDefinition","parameters":{"id":4265,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4262,"mutability":"mutable","name":"a","nameLocation":"4370:1:21","nodeType":"VariableDeclaration","scope":4279,"src":"4362:9:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4261,"name":"uint256","nodeType":"ElementaryTypeName","src":"4362:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4264,"mutability":"mutable","name":"b","nameLocation":"4381:1:21","nodeType":"VariableDeclaration","scope":4279,"src":"4373:9:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4263,"name":"uint256","nodeType":"ElementaryTypeName","src":"4373:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4361:22:21"},"returnParameters":{"id":4268,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4267,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4279,"src":"4407:7:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4266,"name":"uint256","nodeType":"ElementaryTypeName","src":"4407:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4406:9:21"},"scope":5668,"src":"4339:153:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4308,"nodeType":"Block","src":"4694:125:21","statements":[{"assignments":[4290,4292],"declarations":[{"constant":false,"id":4290,"mutability":"mutable","name":"success","nameLocation":"4711:7:21","nodeType":"VariableDeclaration","scope":4308,"src":"4706:12:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4289,"name":"bool","nodeType":"ElementaryTypeName","src":"4706:4:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":4292,"mutability":"mutable","name":"result","nameLocation":"4728:6:21","nodeType":"VariableDeclaration","scope":4308,"src":"4720:14:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4291,"name":"uint256","nodeType":"ElementaryTypeName","src":"4720:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4297,"initialValue":{"arguments":[{"id":4294,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4282,"src":"4745:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4295,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4284,"src":"4748:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4293,"name":"tryMul","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4187,"src":"4738:6:21","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (bool,uint256)"}},"id":4296,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4738:12:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"4705:45:21"},{"expression":{"arguments":[{"id":4299,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4290,"src":"4776:7:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":4300,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4292,"src":"4785:6:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"arguments":[{"id":4303,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4798:7:21","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":4302,"name":"uint256","nodeType":"ElementaryTypeName","src":"4798:7:21","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"}],"id":4301,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"4793:4:21","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4304,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4793:13:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint256","typeString":"type(uint256)"}},"id":4305,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4807:3:21","memberName":"max","nodeType":"MemberAccess","src":"4793:17:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4298,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4336,"src":"4768:7:21","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (bool,uint256,uint256) pure returns (uint256)"}},"id":4306,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4768:43:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4288,"id":4307,"nodeType":"Return","src":"4761:50:21"}]},"documentation":{"id":4280,"nodeType":"StructuredDocumentation","src":"4500:111:21","text":" @dev Unsigned saturating multiplication, bounds to `2²⁵⁶ - 1` instead of overflowing."},"id":4309,"implemented":true,"kind":"function","modifiers":[],"name":"saturatingMul","nameLocation":"4626:13:21","nodeType":"FunctionDefinition","parameters":{"id":4285,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4282,"mutability":"mutable","name":"a","nameLocation":"4648:1:21","nodeType":"VariableDeclaration","scope":4309,"src":"4640:9:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4281,"name":"uint256","nodeType":"ElementaryTypeName","src":"4640:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4284,"mutability":"mutable","name":"b","nameLocation":"4659:1:21","nodeType":"VariableDeclaration","scope":4309,"src":"4651:9:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4283,"name":"uint256","nodeType":"ElementaryTypeName","src":"4651:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4639:22:21"},"returnParameters":{"id":4288,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4287,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4309,"src":"4685:7:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4286,"name":"uint256","nodeType":"ElementaryTypeName","src":"4685:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4684:9:21"},"scope":5668,"src":"4617:202:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4335,"nodeType":"Block","src":"5300:214:21","statements":[{"id":4334,"nodeType":"UncheckedBlock","src":"5311:196:21","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4332,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4321,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4316,"src":"5453:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4330,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4324,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4322,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4314,"src":"5459:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":4323,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4316,"src":"5463:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5459:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4325,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"5458:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"id":4328,"name":"condition","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4312,"src":"5484:9:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4326,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7433,"src":"5468:8:21","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7433_$","typeString":"type(library SafeCast)"}},"id":4327,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5477:6:21","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7432,"src":"5468:15:21","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4329,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5468:26:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5458:36:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4331,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"5457:38:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5453:42:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4320,"id":4333,"nodeType":"Return","src":"5446:49:21"}]}]},"documentation":{"id":4310,"nodeType":"StructuredDocumentation","src":"4827:380:21","text":" @dev Branchless ternary evaluation for `a ? b : c`. Gas costs are constant.\n IMPORTANT: This function may reduce bytecode size and consume less gas when used standalone.\n However, the compiler may optimize Solidity ternary operations (i.e. `a ? b : c`) to only compute\n one branch when needed, making this function more expensive."},"id":4336,"implemented":true,"kind":"function","modifiers":[],"name":"ternary","nameLocation":"5222:7:21","nodeType":"FunctionDefinition","parameters":{"id":4317,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4312,"mutability":"mutable","name":"condition","nameLocation":"5235:9:21","nodeType":"VariableDeclaration","scope":4336,"src":"5230:14:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4311,"name":"bool","nodeType":"ElementaryTypeName","src":"5230:4:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":4314,"mutability":"mutable","name":"a","nameLocation":"5254:1:21","nodeType":"VariableDeclaration","scope":4336,"src":"5246:9:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4313,"name":"uint256","nodeType":"ElementaryTypeName","src":"5246:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4316,"mutability":"mutable","name":"b","nameLocation":"5265:1:21","nodeType":"VariableDeclaration","scope":4336,"src":"5257:9:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4315,"name":"uint256","nodeType":"ElementaryTypeName","src":"5257:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5229:38:21"},"returnParameters":{"id":4320,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4319,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4336,"src":"5291:7:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4318,"name":"uint256","nodeType":"ElementaryTypeName","src":"5291:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5290:9:21"},"scope":5668,"src":"5213:301:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4354,"nodeType":"Block","src":"5656:46:21","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4349,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4347,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4339,"src":"5682:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":4348,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4341,"src":"5686:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5682:5:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":4350,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4339,"src":"5689:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4351,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4341,"src":"5692:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4346,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4336,"src":"5674:7:21","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (bool,uint256,uint256) pure returns (uint256)"}},"id":4352,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5674:20:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4345,"id":4353,"nodeType":"Return","src":"5667:27:21"}]},"documentation":{"id":4337,"nodeType":"StructuredDocumentation","src":"5522:61:21","text":" @dev Returns the largest of two numbers."},"id":4355,"implemented":true,"kind":"function","modifiers":[],"name":"max","nameLocation":"5598:3:21","nodeType":"FunctionDefinition","parameters":{"id":4342,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4339,"mutability":"mutable","name":"a","nameLocation":"5610:1:21","nodeType":"VariableDeclaration","scope":4355,"src":"5602:9:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4338,"name":"uint256","nodeType":"ElementaryTypeName","src":"5602:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4341,"mutability":"mutable","name":"b","nameLocation":"5621:1:21","nodeType":"VariableDeclaration","scope":4355,"src":"5613:9:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4340,"name":"uint256","nodeType":"ElementaryTypeName","src":"5613:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5601:22:21"},"returnParameters":{"id":4345,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4344,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4355,"src":"5647:7:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4343,"name":"uint256","nodeType":"ElementaryTypeName","src":"5647:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5646:9:21"},"scope":5668,"src":"5589:113:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4373,"nodeType":"Block","src":"5845:46:21","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4368,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4366,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4358,"src":"5871:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":4367,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4360,"src":"5875:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5871:5:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":4369,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4358,"src":"5878:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4370,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4360,"src":"5881:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4365,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4336,"src":"5863:7:21","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (bool,uint256,uint256) pure returns (uint256)"}},"id":4371,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5863:20:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4364,"id":4372,"nodeType":"Return","src":"5856:27:21"}]},"documentation":{"id":4356,"nodeType":"StructuredDocumentation","src":"5710:62:21","text":" @dev Returns the smallest of two numbers."},"id":4374,"implemented":true,"kind":"function","modifiers":[],"name":"min","nameLocation":"5787:3:21","nodeType":"FunctionDefinition","parameters":{"id":4361,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4358,"mutability":"mutable","name":"a","nameLocation":"5799:1:21","nodeType":"VariableDeclaration","scope":4374,"src":"5791:9:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4357,"name":"uint256","nodeType":"ElementaryTypeName","src":"5791:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4360,"mutability":"mutable","name":"b","nameLocation":"5810:1:21","nodeType":"VariableDeclaration","scope":4374,"src":"5802:9:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4359,"name":"uint256","nodeType":"ElementaryTypeName","src":"5802:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5790:22:21"},"returnParameters":{"id":4364,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4363,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4374,"src":"5836:7:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4362,"name":"uint256","nodeType":"ElementaryTypeName","src":"5836:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5835:9:21"},"scope":5668,"src":"5778:113:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4396,"nodeType":"Block","src":"6081:85:21","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4394,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4386,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4384,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4377,"src":"6138:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"id":4385,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4379,"src":"6142:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6138:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4387,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"6137:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4393,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4390,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4388,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4377,"src":"6148:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":4389,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4379,"src":"6152:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6148:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4391,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"6147:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"32","id":4392,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6157:1:21","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"6147:11:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6137:21:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4383,"id":4395,"nodeType":"Return","src":"6130:28:21"}]},"documentation":{"id":4375,"nodeType":"StructuredDocumentation","src":"5899:105:21","text":" @dev Returns the average of two numbers. The result is rounded towards\n zero."},"id":4397,"implemented":true,"kind":"function","modifiers":[],"name":"average","nameLocation":"6019:7:21","nodeType":"FunctionDefinition","parameters":{"id":4380,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4377,"mutability":"mutable","name":"a","nameLocation":"6035:1:21","nodeType":"VariableDeclaration","scope":4397,"src":"6027:9:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4376,"name":"uint256","nodeType":"ElementaryTypeName","src":"6027:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4379,"mutability":"mutable","name":"b","nameLocation":"6046:1:21","nodeType":"VariableDeclaration","scope":4397,"src":"6038:9:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4378,"name":"uint256","nodeType":"ElementaryTypeName","src":"6038:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6026:22:21"},"returnParameters":{"id":4383,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4382,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4397,"src":"6072:7:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4381,"name":"uint256","nodeType":"ElementaryTypeName","src":"6072:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6071:9:21"},"scope":5668,"src":"6010:156:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4437,"nodeType":"Block","src":"6466:647:21","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4409,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4407,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4402,"src":"6481:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":4408,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6486:1:21","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6481:6:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4418,"nodeType":"IfStatement","src":"6477:153:21","trueBody":{"id":4417,"nodeType":"Block","src":"6489:141:21","statements":[{"expression":{"arguments":[{"expression":{"id":4413,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1499,"src":"6595:5:21","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$1499_$","typeString":"type(library Panic)"}},"id":4414,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6601:16:21","memberName":"DIVISION_BY_ZERO","nodeType":"MemberAccess","referencedDeclaration":1466,"src":"6595:22:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":4410,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1499,"src":"6583:5:21","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$1499_$","typeString":"type(library Panic)"}},"id":4412,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6589:5:21","memberName":"panic","nodeType":"MemberAccess","referencedDeclaration":1498,"src":"6583:11:21","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":4415,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6583:35:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4416,"nodeType":"ExpressionStatement","src":"6583:35:21"}]}},{"id":4436,"nodeType":"UncheckedBlock","src":"7020:86:21","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4434,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4423,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4421,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4400,"src":"7068:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":4422,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7072:1:21","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"7068:5:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4419,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7433,"src":"7052:8:21","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7433_$","typeString":"type(library SafeCast)"}},"id":4420,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7061:6:21","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7432,"src":"7052:15:21","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4424,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7052:22:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4432,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4430,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4427,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4425,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4400,"src":"7079:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":4426,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7083:1:21","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"7079:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4428,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7078:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":4429,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4402,"src":"7088:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7078:11:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":4431,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7092:1:21","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"7078:15:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4433,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7077:17:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7052:42:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4406,"id":4435,"nodeType":"Return","src":"7045:49:21"}]}]},"documentation":{"id":4398,"nodeType":"StructuredDocumentation","src":"6174:215:21","text":" @dev Returns the ceiling of the division of two numbers.\n This differs from standard division with `/` in that it rounds towards infinity instead\n of rounding towards zero."},"id":4438,"implemented":true,"kind":"function","modifiers":[],"name":"ceilDiv","nameLocation":"6404:7:21","nodeType":"FunctionDefinition","parameters":{"id":4403,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4400,"mutability":"mutable","name":"a","nameLocation":"6420:1:21","nodeType":"VariableDeclaration","scope":4438,"src":"6412:9:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4399,"name":"uint256","nodeType":"ElementaryTypeName","src":"6412:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4402,"mutability":"mutable","name":"b","nameLocation":"6431:1:21","nodeType":"VariableDeclaration","scope":4438,"src":"6423:9:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4401,"name":"uint256","nodeType":"ElementaryTypeName","src":"6423:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6411:22:21"},"returnParameters":{"id":4406,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4405,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4438,"src":"6457:7:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4404,"name":"uint256","nodeType":"ElementaryTypeName","src":"6457:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6456:9:21"},"scope":5668,"src":"6395:718:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4573,"nodeType":"Block","src":"7543:3656:21","statements":[{"id":4572,"nodeType":"UncheckedBlock","src":"7554:3638:21","statements":[{"assignments":[4451,4453],"declarations":[{"constant":false,"id":4451,"mutability":"mutable","name":"high","nameLocation":"7588:4:21","nodeType":"VariableDeclaration","scope":4572,"src":"7580:12:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4450,"name":"uint256","nodeType":"ElementaryTypeName","src":"7580:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4453,"mutability":"mutable","name":"low","nameLocation":"7602:3:21","nodeType":"VariableDeclaration","scope":4572,"src":"7594:11:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4452,"name":"uint256","nodeType":"ElementaryTypeName","src":"7594:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4458,"initialValue":{"arguments":[{"id":4455,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4441,"src":"7616:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4456,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4443,"src":"7619:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4454,"name":"mul512","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4087,"src":"7609:6:21","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256,uint256)"}},"id":4457,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7609:12:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"7579:42:21"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4461,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4459,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4451,"src":"7706:4:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":4460,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7714:1:21","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"7706:9:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4467,"nodeType":"IfStatement","src":"7702:370:21","trueBody":{"id":4466,"nodeType":"Block","src":"7717:355:21","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4464,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4462,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4453,"src":"8039:3:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":4463,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4445,"src":"8045:11:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8039:17:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4449,"id":4465,"nodeType":"Return","src":"8032:24:21"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4470,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4468,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4445,"src":"8185:11:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"id":4469,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4451,"src":"8200:4:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8185:19:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4486,"nodeType":"IfStatement","src":"8181:144:21","trueBody":{"id":4485,"nodeType":"Block","src":"8206:119:21","statements":[{"expression":{"arguments":[{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4477,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4475,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4445,"src":"8245:11:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":4476,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8260:1:21","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8245:16:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"expression":{"id":4478,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1499,"src":"8263:5:21","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$1499_$","typeString":"type(library Panic)"}},"id":4479,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"8269:16:21","memberName":"DIVISION_BY_ZERO","nodeType":"MemberAccess","referencedDeclaration":1466,"src":"8263:22:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":4480,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1499,"src":"8287:5:21","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$1499_$","typeString":"type(library Panic)"}},"id":4481,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"8293:14:21","memberName":"UNDER_OVERFLOW","nodeType":"MemberAccess","referencedDeclaration":1462,"src":"8287:20:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4474,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4336,"src":"8237:7:21","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (bool,uint256,uint256) pure returns (uint256)"}},"id":4482,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8237:71:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":4471,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1499,"src":"8225:5:21","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$1499_$","typeString":"type(library Panic)"}},"id":4473,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8231:5:21","memberName":"panic","nodeType":"MemberAccess","referencedDeclaration":1498,"src":"8225:11:21","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":4483,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8225:84:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4484,"nodeType":"ExpressionStatement","src":"8225:84:21"}]}},{"assignments":[4488],"declarations":[{"constant":false,"id":4488,"mutability":"mutable","name":"remainder","nameLocation":"8592:9:21","nodeType":"VariableDeclaration","scope":4572,"src":"8584:17:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4487,"name":"uint256","nodeType":"ElementaryTypeName","src":"8584:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4489,"nodeType":"VariableDeclarationStatement","src":"8584:17:21"},{"AST":{"nativeSrc":"8641:290:21","nodeType":"YulBlock","src":"8641:290:21","statements":[{"nativeSrc":"8712:38:21","nodeType":"YulAssignment","src":"8712:38:21","value":{"arguments":[{"name":"x","nativeSrc":"8732:1:21","nodeType":"YulIdentifier","src":"8732:1:21"},{"name":"y","nativeSrc":"8735:1:21","nodeType":"YulIdentifier","src":"8735:1:21"},{"name":"denominator","nativeSrc":"8738:11:21","nodeType":"YulIdentifier","src":"8738:11:21"}],"functionName":{"name":"mulmod","nativeSrc":"8725:6:21","nodeType":"YulIdentifier","src":"8725:6:21"},"nativeSrc":"8725:25:21","nodeType":"YulFunctionCall","src":"8725:25:21"},"variableNames":[{"name":"remainder","nativeSrc":"8712:9:21","nodeType":"YulIdentifier","src":"8712:9:21"}]},{"nativeSrc":"8835:37:21","nodeType":"YulAssignment","src":"8835:37:21","value":{"arguments":[{"name":"high","nativeSrc":"8847:4:21","nodeType":"YulIdentifier","src":"8847:4:21"},{"arguments":[{"name":"remainder","nativeSrc":"8856:9:21","nodeType":"YulIdentifier","src":"8856:9:21"},{"name":"low","nativeSrc":"8867:3:21","nodeType":"YulIdentifier","src":"8867:3:21"}],"functionName":{"name":"gt","nativeSrc":"8853:2:21","nodeType":"YulIdentifier","src":"8853:2:21"},"nativeSrc":"8853:18:21","nodeType":"YulFunctionCall","src":"8853:18:21"}],"functionName":{"name":"sub","nativeSrc":"8843:3:21","nodeType":"YulIdentifier","src":"8843:3:21"},"nativeSrc":"8843:29:21","nodeType":"YulFunctionCall","src":"8843:29:21"},"variableNames":[{"name":"high","nativeSrc":"8835:4:21","nodeType":"YulIdentifier","src":"8835:4:21"}]},{"nativeSrc":"8890:26:21","nodeType":"YulAssignment","src":"8890:26:21","value":{"arguments":[{"name":"low","nativeSrc":"8901:3:21","nodeType":"YulIdentifier","src":"8901:3:21"},{"name":"remainder","nativeSrc":"8906:9:21","nodeType":"YulIdentifier","src":"8906:9:21"}],"functionName":{"name":"sub","nativeSrc":"8897:3:21","nodeType":"YulIdentifier","src":"8897:3:21"},"nativeSrc":"8897:19:21","nodeType":"YulFunctionCall","src":"8897:19:21"},"variableNames":[{"name":"low","nativeSrc":"8890:3:21","nodeType":"YulIdentifier","src":"8890:3:21"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":4445,"isOffset":false,"isSlot":false,"src":"8738:11:21","valueSize":1},{"declaration":4451,"isOffset":false,"isSlot":false,"src":"8835:4:21","valueSize":1},{"declaration":4451,"isOffset":false,"isSlot":false,"src":"8847:4:21","valueSize":1},{"declaration":4453,"isOffset":false,"isSlot":false,"src":"8867:3:21","valueSize":1},{"declaration":4453,"isOffset":false,"isSlot":false,"src":"8890:3:21","valueSize":1},{"declaration":4453,"isOffset":false,"isSlot":false,"src":"8901:3:21","valueSize":1},{"declaration":4488,"isOffset":false,"isSlot":false,"src":"8712:9:21","valueSize":1},{"declaration":4488,"isOffset":false,"isSlot":false,"src":"8856:9:21","valueSize":1},{"declaration":4488,"isOffset":false,"isSlot":false,"src":"8906:9:21","valueSize":1},{"declaration":4441,"isOffset":false,"isSlot":false,"src":"8732:1:21","valueSize":1},{"declaration":4443,"isOffset":false,"isSlot":false,"src":"8735:1:21","valueSize":1}],"flags":["memory-safe"],"id":4490,"nodeType":"InlineAssembly","src":"8616:315:21"},{"assignments":[4492],"declarations":[{"constant":false,"id":4492,"mutability":"mutable","name":"twos","nameLocation":"9148:4:21","nodeType":"VariableDeclaration","scope":4572,"src":"9140:12:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4491,"name":"uint256","nodeType":"ElementaryTypeName","src":"9140:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4499,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4498,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4493,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4445,"src":"9155:11:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4496,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"30","id":4494,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9170:1:21","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":4495,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4445,"src":"9174:11:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9170:15:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4497,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"9169:17:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9155:31:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"9140:46:21"},{"AST":{"nativeSrc":"9226:368:21","nodeType":"YulBlock","src":"9226:368:21","statements":[{"nativeSrc":"9293:37:21","nodeType":"YulAssignment","src":"9293:37:21","value":{"arguments":[{"name":"denominator","nativeSrc":"9312:11:21","nodeType":"YulIdentifier","src":"9312:11:21"},{"name":"twos","nativeSrc":"9325:4:21","nodeType":"YulIdentifier","src":"9325:4:21"}],"functionName":{"name":"div","nativeSrc":"9308:3:21","nodeType":"YulIdentifier","src":"9308:3:21"},"nativeSrc":"9308:22:21","nodeType":"YulFunctionCall","src":"9308:22:21"},"variableNames":[{"name":"denominator","nativeSrc":"9293:11:21","nodeType":"YulIdentifier","src":"9293:11:21"}]},{"nativeSrc":"9397:21:21","nodeType":"YulAssignment","src":"9397:21:21","value":{"arguments":[{"name":"low","nativeSrc":"9408:3:21","nodeType":"YulIdentifier","src":"9408:3:21"},{"name":"twos","nativeSrc":"9413:4:21","nodeType":"YulIdentifier","src":"9413:4:21"}],"functionName":{"name":"div","nativeSrc":"9404:3:21","nodeType":"YulIdentifier","src":"9404:3:21"},"nativeSrc":"9404:14:21","nodeType":"YulFunctionCall","src":"9404:14:21"},"variableNames":[{"name":"low","nativeSrc":"9397:3:21","nodeType":"YulIdentifier","src":"9397:3:21"}]},{"nativeSrc":"9540:39:21","nodeType":"YulAssignment","src":"9540:39:21","value":{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"9560:1:21","nodeType":"YulLiteral","src":"9560:1:21","type":"","value":"0"},{"name":"twos","nativeSrc":"9563:4:21","nodeType":"YulIdentifier","src":"9563:4:21"}],"functionName":{"name":"sub","nativeSrc":"9556:3:21","nodeType":"YulIdentifier","src":"9556:3:21"},"nativeSrc":"9556:12:21","nodeType":"YulFunctionCall","src":"9556:12:21"},{"name":"twos","nativeSrc":"9570:4:21","nodeType":"YulIdentifier","src":"9570:4:21"}],"functionName":{"name":"div","nativeSrc":"9552:3:21","nodeType":"YulIdentifier","src":"9552:3:21"},"nativeSrc":"9552:23:21","nodeType":"YulFunctionCall","src":"9552:23:21"},{"kind":"number","nativeSrc":"9577:1:21","nodeType":"YulLiteral","src":"9577:1:21","type":"","value":"1"}],"functionName":{"name":"add","nativeSrc":"9548:3:21","nodeType":"YulIdentifier","src":"9548:3:21"},"nativeSrc":"9548:31:21","nodeType":"YulFunctionCall","src":"9548:31:21"},"variableNames":[{"name":"twos","nativeSrc":"9540:4:21","nodeType":"YulIdentifier","src":"9540:4:21"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":4445,"isOffset":false,"isSlot":false,"src":"9293:11:21","valueSize":1},{"declaration":4445,"isOffset":false,"isSlot":false,"src":"9312:11:21","valueSize":1},{"declaration":4453,"isOffset":false,"isSlot":false,"src":"9397:3:21","valueSize":1},{"declaration":4453,"isOffset":false,"isSlot":false,"src":"9408:3:21","valueSize":1},{"declaration":4492,"isOffset":false,"isSlot":false,"src":"9325:4:21","valueSize":1},{"declaration":4492,"isOffset":false,"isSlot":false,"src":"9413:4:21","valueSize":1},{"declaration":4492,"isOffset":false,"isSlot":false,"src":"9540:4:21","valueSize":1},{"declaration":4492,"isOffset":false,"isSlot":false,"src":"9563:4:21","valueSize":1},{"declaration":4492,"isOffset":false,"isSlot":false,"src":"9570:4:21","valueSize":1}],"flags":["memory-safe"],"id":4500,"nodeType":"InlineAssembly","src":"9201:393:21"},{"expression":{"id":4505,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4501,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4453,"src":"9660:3:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4504,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4502,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4451,"src":"9667:4:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4503,"name":"twos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4492,"src":"9674:4:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9667:11:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9660:18:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4506,"nodeType":"ExpressionStatement","src":"9660:18:21"},{"assignments":[4508],"declarations":[{"constant":false,"id":4508,"mutability":"mutable","name":"inverse","nameLocation":"10026:7:21","nodeType":"VariableDeclaration","scope":4572,"src":"10018:15:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4507,"name":"uint256","nodeType":"ElementaryTypeName","src":"10018:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4515,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4514,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4511,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"33","id":4509,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10037:1:21","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4510,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4445,"src":"10041:11:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10037:15:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4512,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"10036:17:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"hexValue":"32","id":4513,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10056:1:21","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"10036:21:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"10018:39:21"},{"expression":{"id":4522,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4516,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4508,"src":"10278:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4521,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":4517,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10289:1:21","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4520,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4518,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4445,"src":"10293:11:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4519,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4508,"src":"10307:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10293:21:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10289:25:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10278:36:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4523,"nodeType":"ExpressionStatement","src":"10278:36:21"},{"expression":{"id":4530,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4524,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4508,"src":"10349:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4529,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":4525,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10360:1:21","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4528,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4526,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4445,"src":"10364:11:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4527,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4508,"src":"10378:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10364:21:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10360:25:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10349:36:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4531,"nodeType":"ExpressionStatement","src":"10349:36:21"},{"expression":{"id":4538,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4532,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4508,"src":"10422:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4537,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":4533,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10433:1:21","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4536,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4534,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4445,"src":"10437:11:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4535,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4508,"src":"10451:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10437:21:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10433:25:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10422:36:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4539,"nodeType":"ExpressionStatement","src":"10422:36:21"},{"expression":{"id":4546,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4540,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4508,"src":"10494:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4545,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":4541,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10505:1:21","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4544,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4542,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4445,"src":"10509:11:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4543,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4508,"src":"10523:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10509:21:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10505:25:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10494:36:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4547,"nodeType":"ExpressionStatement","src":"10494:36:21"},{"expression":{"id":4554,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4548,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4508,"src":"10568:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4553,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":4549,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10579:1:21","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4552,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4550,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4445,"src":"10583:11:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4551,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4508,"src":"10597:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10583:21:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10579:25:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10568:36:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4555,"nodeType":"ExpressionStatement","src":"10568:36:21"},{"expression":{"id":4562,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4556,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4508,"src":"10643:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4561,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":4557,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10654:1:21","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4560,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4558,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4445,"src":"10658:11:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4559,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4508,"src":"10672:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10658:21:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10654:25:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10643:36:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4563,"nodeType":"ExpressionStatement","src":"10643:36:21"},{"expression":{"id":4568,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4564,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4448,"src":"11130:6:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4567,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4565,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4453,"src":"11139:3:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4566,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4508,"src":"11145:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11139:13:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11130:22:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4569,"nodeType":"ExpressionStatement","src":"11130:22:21"},{"expression":{"id":4570,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4448,"src":"11174:6:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4449,"id":4571,"nodeType":"Return","src":"11167:13:21"}]}]},"documentation":{"id":4439,"nodeType":"StructuredDocumentation","src":"7121:318:21","text":" @dev Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or\n denominator == 0.\n Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv) with further edits by\n Uniswap Labs also under MIT license."},"id":4574,"implemented":true,"kind":"function","modifiers":[],"name":"mulDiv","nameLocation":"7454:6:21","nodeType":"FunctionDefinition","parameters":{"id":4446,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4441,"mutability":"mutable","name":"x","nameLocation":"7469:1:21","nodeType":"VariableDeclaration","scope":4574,"src":"7461:9:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4440,"name":"uint256","nodeType":"ElementaryTypeName","src":"7461:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4443,"mutability":"mutable","name":"y","nameLocation":"7480:1:21","nodeType":"VariableDeclaration","scope":4574,"src":"7472:9:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4442,"name":"uint256","nodeType":"ElementaryTypeName","src":"7472:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4445,"mutability":"mutable","name":"denominator","nameLocation":"7491:11:21","nodeType":"VariableDeclaration","scope":4574,"src":"7483:19:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4444,"name":"uint256","nodeType":"ElementaryTypeName","src":"7483:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7460:43:21"},"returnParameters":{"id":4449,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4448,"mutability":"mutable","name":"result","nameLocation":"7535:6:21","nodeType":"VariableDeclaration","scope":4574,"src":"7527:14:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4447,"name":"uint256","nodeType":"ElementaryTypeName","src":"7527:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7526:16:21"},"scope":5668,"src":"7445:3754:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4610,"nodeType":"Block","src":"11443:130:21","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4608,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":4590,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4577,"src":"11468:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4591,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4579,"src":"11471:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4592,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4581,"src":"11474:11:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4589,"name":"mulDiv","nodeType":"Identifier","overloadedDeclarations":[4574,4611],"referencedDeclaration":4574,"src":"11461:6:21","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":4593,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11461:25:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":4606,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":4597,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4584,"src":"11522:8:21","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4059","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$4059","typeString":"enum Math.Rounding"}],"id":4596,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5667,"src":"11505:16:21","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$4059_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":4598,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11505:26:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4605,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":4600,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4577,"src":"11542:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4601,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4579,"src":"11545:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4602,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4581,"src":"11548:11:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4599,"name":"mulmod","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-16,"src":"11535:6:21","typeDescriptions":{"typeIdentifier":"t_function_mulmod_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":4603,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11535:25:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":4604,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11563:1:21","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11535:29:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"11505:59:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4594,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7433,"src":"11489:8:21","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7433_$","typeString":"type(library SafeCast)"}},"id":4595,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11498:6:21","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7432,"src":"11489:15:21","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4607,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11489:76:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11461:104:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4588,"id":4609,"nodeType":"Return","src":"11454:111:21"}]},"documentation":{"id":4575,"nodeType":"StructuredDocumentation","src":"11207:120:21","text":" @dev Calculates x * y / denominator with full precision, following the selected rounding direction."},"id":4611,"implemented":true,"kind":"function","modifiers":[],"name":"mulDiv","nameLocation":"11342:6:21","nodeType":"FunctionDefinition","parameters":{"id":4585,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4577,"mutability":"mutable","name":"x","nameLocation":"11357:1:21","nodeType":"VariableDeclaration","scope":4611,"src":"11349:9:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4576,"name":"uint256","nodeType":"ElementaryTypeName","src":"11349:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4579,"mutability":"mutable","name":"y","nameLocation":"11368:1:21","nodeType":"VariableDeclaration","scope":4611,"src":"11360:9:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4578,"name":"uint256","nodeType":"ElementaryTypeName","src":"11360:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4581,"mutability":"mutable","name":"denominator","nameLocation":"11379:11:21","nodeType":"VariableDeclaration","scope":4611,"src":"11371:19:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4580,"name":"uint256","nodeType":"ElementaryTypeName","src":"11371:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4584,"mutability":"mutable","name":"rounding","nameLocation":"11401:8:21","nodeType":"VariableDeclaration","scope":4611,"src":"11392:17:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4059","typeString":"enum Math.Rounding"},"typeName":{"id":4583,"nodeType":"UserDefinedTypeName","pathNode":{"id":4582,"name":"Rounding","nameLocations":["11392:8:21"],"nodeType":"IdentifierPath","referencedDeclaration":4059,"src":"11392:8:21"},"referencedDeclaration":4059,"src":"11392:8:21","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4059","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"11348:62:21"},"returnParameters":{"id":4588,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4587,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4611,"src":"11434:7:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4586,"name":"uint256","nodeType":"ElementaryTypeName","src":"11434:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11433:9:21"},"scope":5668,"src":"11333:240:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4660,"nodeType":"Block","src":"11786:253:21","statements":[{"id":4659,"nodeType":"UncheckedBlock","src":"11797:235:21","statements":[{"assignments":[4624,4626],"declarations":[{"constant":false,"id":4624,"mutability":"mutable","name":"high","nameLocation":"11831:4:21","nodeType":"VariableDeclaration","scope":4659,"src":"11823:12:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4623,"name":"uint256","nodeType":"ElementaryTypeName","src":"11823:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4626,"mutability":"mutable","name":"low","nameLocation":"11845:3:21","nodeType":"VariableDeclaration","scope":4659,"src":"11837:11:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4625,"name":"uint256","nodeType":"ElementaryTypeName","src":"11837:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4631,"initialValue":{"arguments":[{"id":4628,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4614,"src":"11859:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4629,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4616,"src":"11862:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4627,"name":"mul512","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4087,"src":"11852:6:21","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256,uint256)"}},"id":4630,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11852:12:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"11822:42:21"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4636,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4632,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4624,"src":"11883:4:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4635,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":4633,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11891:1:21","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"id":4634,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4618,"src":"11896:1:21","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"11891:6:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11883:14:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4645,"nodeType":"IfStatement","src":"11879:88:21","trueBody":{"id":4644,"nodeType":"Block","src":"11899:68:21","statements":[{"expression":{"arguments":[{"expression":{"id":4640,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1499,"src":"11930:5:21","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$1499_$","typeString":"type(library Panic)"}},"id":4641,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"11936:14:21","memberName":"UNDER_OVERFLOW","nodeType":"MemberAccess","referencedDeclaration":1462,"src":"11930:20:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":4637,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1499,"src":"11918:5:21","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$1499_$","typeString":"type(library Panic)"}},"id":4639,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11924:5:21","memberName":"panic","nodeType":"MemberAccess","referencedDeclaration":1498,"src":"11918:11:21","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":4642,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11918:33:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4643,"nodeType":"ExpressionStatement","src":"11918:33:21"}]}},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4657,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4651,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4646,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4624,"src":"11989:4:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint16","typeString":"uint16"},"id":4649,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"323536","id":4647,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11998:3:21","typeDescriptions":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"},"value":"256"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":4648,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4618,"src":"12004:1:21","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"11998:7:21","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}}],"id":4650,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"11997:9:21","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"src":"11989:17:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4652,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"11988:19:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4655,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4653,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4626,"src":"12011:3:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":4654,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4618,"src":"12018:1:21","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"12011:8:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4656,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"12010:10:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11988:32:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4622,"id":4658,"nodeType":"Return","src":"11981:39:21"}]}]},"documentation":{"id":4612,"nodeType":"StructuredDocumentation","src":"11581:113:21","text":" @dev Calculates floor(x * y >> n) with full precision. Throws if result overflows a uint256."},"id":4661,"implemented":true,"kind":"function","modifiers":[],"name":"mulShr","nameLocation":"11709:6:21","nodeType":"FunctionDefinition","parameters":{"id":4619,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4614,"mutability":"mutable","name":"x","nameLocation":"11724:1:21","nodeType":"VariableDeclaration","scope":4661,"src":"11716:9:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4613,"name":"uint256","nodeType":"ElementaryTypeName","src":"11716:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4616,"mutability":"mutable","name":"y","nameLocation":"11735:1:21","nodeType":"VariableDeclaration","scope":4661,"src":"11727:9:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4615,"name":"uint256","nodeType":"ElementaryTypeName","src":"11727:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4618,"mutability":"mutable","name":"n","nameLocation":"11744:1:21","nodeType":"VariableDeclaration","scope":4661,"src":"11738:7:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":4617,"name":"uint8","nodeType":"ElementaryTypeName","src":"11738:5:21","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"11715:31:21"},"returnParameters":{"id":4622,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4621,"mutability":"mutable","name":"result","nameLocation":"11778:6:21","nodeType":"VariableDeclaration","scope":4661,"src":"11770:14:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4620,"name":"uint256","nodeType":"ElementaryTypeName","src":"11770:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11769:16:21"},"scope":5668,"src":"11700:339:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4699,"nodeType":"Block","src":"12262:115:21","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4697,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":4677,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4664,"src":"12287:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4678,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4666,"src":"12290:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4679,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4668,"src":"12293:1:21","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint8","typeString":"uint8"}],"id":4676,"name":"mulShr","nodeType":"Identifier","overloadedDeclarations":[4661,4700],"referencedDeclaration":4661,"src":"12280:6:21","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint8_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint8) pure returns (uint256)"}},"id":4680,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12280:15:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":4695,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":4684,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4671,"src":"12331:8:21","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4059","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$4059","typeString":"enum Math.Rounding"}],"id":4683,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5667,"src":"12314:16:21","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$4059_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":4685,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12314:26:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4694,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":4687,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4664,"src":"12351:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4688,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4666,"src":"12354:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4691,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":4689,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12357:1:21","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"id":4690,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4668,"src":"12362:1:21","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"12357:6:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4686,"name":"mulmod","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-16,"src":"12344:6:21","typeDescriptions":{"typeIdentifier":"t_function_mulmod_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":4692,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12344:20:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":4693,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12367:1:21","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"12344:24:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"12314:54:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4681,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7433,"src":"12298:8:21","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7433_$","typeString":"type(library SafeCast)"}},"id":4682,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12307:6:21","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7432,"src":"12298:15:21","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4696,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12298:71:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12280:89:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4675,"id":4698,"nodeType":"Return","src":"12273:96:21"}]},"documentation":{"id":4662,"nodeType":"StructuredDocumentation","src":"12047:111:21","text":" @dev Calculates x * y >> n with full precision, following the selected rounding direction."},"id":4700,"implemented":true,"kind":"function","modifiers":[],"name":"mulShr","nameLocation":"12173:6:21","nodeType":"FunctionDefinition","parameters":{"id":4672,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4664,"mutability":"mutable","name":"x","nameLocation":"12188:1:21","nodeType":"VariableDeclaration","scope":4700,"src":"12180:9:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4663,"name":"uint256","nodeType":"ElementaryTypeName","src":"12180:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4666,"mutability":"mutable","name":"y","nameLocation":"12199:1:21","nodeType":"VariableDeclaration","scope":4700,"src":"12191:9:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4665,"name":"uint256","nodeType":"ElementaryTypeName","src":"12191:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4668,"mutability":"mutable","name":"n","nameLocation":"12208:1:21","nodeType":"VariableDeclaration","scope":4700,"src":"12202:7:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":4667,"name":"uint8","nodeType":"ElementaryTypeName","src":"12202:5:21","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":4671,"mutability":"mutable","name":"rounding","nameLocation":"12220:8:21","nodeType":"VariableDeclaration","scope":4700,"src":"12211:17:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4059","typeString":"enum Math.Rounding"},"typeName":{"id":4670,"nodeType":"UserDefinedTypeName","pathNode":{"id":4669,"name":"Rounding","nameLocations":["12211:8:21"],"nodeType":"IdentifierPath","referencedDeclaration":4059,"src":"12211:8:21"},"referencedDeclaration":4059,"src":"12211:8:21","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4059","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"12179:50:21"},"returnParameters":{"id":4675,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4674,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4700,"src":"12253:7:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4673,"name":"uint256","nodeType":"ElementaryTypeName","src":"12253:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12252:9:21"},"scope":5668,"src":"12164:213:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4796,"nodeType":"Block","src":"13024:1895:21","statements":[{"id":4795,"nodeType":"UncheckedBlock","src":"13035:1877:21","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4712,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4710,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4705,"src":"13064:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":4711,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13069:1:21","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"13064:6:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4715,"nodeType":"IfStatement","src":"13060:20:21","trueBody":{"expression":{"hexValue":"30","id":4713,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13079:1:21","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":4709,"id":4714,"nodeType":"Return","src":"13072:8:21"}},{"assignments":[4717],"declarations":[{"constant":false,"id":4717,"mutability":"mutable","name":"remainder","nameLocation":"13569:9:21","nodeType":"VariableDeclaration","scope":4795,"src":"13561:17:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4716,"name":"uint256","nodeType":"ElementaryTypeName","src":"13561:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4721,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4720,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4718,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4703,"src":"13581:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"%","rightExpression":{"id":4719,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4705,"src":"13585:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13581:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"13561:25:21"},{"assignments":[4723],"declarations":[{"constant":false,"id":4723,"mutability":"mutable","name":"gcd","nameLocation":"13609:3:21","nodeType":"VariableDeclaration","scope":4795,"src":"13601:11:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4722,"name":"uint256","nodeType":"ElementaryTypeName","src":"13601:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4725,"initialValue":{"id":4724,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4705,"src":"13615:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"13601:15:21"},{"assignments":[4727],"declarations":[{"constant":false,"id":4727,"mutability":"mutable","name":"x","nameLocation":"13764:1:21","nodeType":"VariableDeclaration","scope":4795,"src":"13757:8:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4726,"name":"int256","nodeType":"ElementaryTypeName","src":"13757:6:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"id":4729,"initialValue":{"hexValue":"30","id":4728,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13768:1:21","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"13757:12:21"},{"assignments":[4731],"declarations":[{"constant":false,"id":4731,"mutability":"mutable","name":"y","nameLocation":"13791:1:21","nodeType":"VariableDeclaration","scope":4795,"src":"13784:8:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4730,"name":"int256","nodeType":"ElementaryTypeName","src":"13784:6:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"id":4733,"initialValue":{"hexValue":"31","id":4732,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13795:1:21","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"VariableDeclarationStatement","src":"13784:12:21"},{"body":{"id":4770,"nodeType":"Block","src":"13836:902:21","statements":[{"assignments":[4738],"declarations":[{"constant":false,"id":4738,"mutability":"mutable","name":"quotient","nameLocation":"13863:8:21","nodeType":"VariableDeclaration","scope":4770,"src":"13855:16:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4737,"name":"uint256","nodeType":"ElementaryTypeName","src":"13855:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4742,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4741,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4739,"name":"gcd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4723,"src":"13874:3:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":4740,"name":"remainder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4717,"src":"13880:9:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13874:15:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"13855:34:21"},{"expression":{"id":4753,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"components":[{"id":4743,"name":"gcd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4723,"src":"13911:3:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4744,"name":"remainder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4717,"src":"13916:9:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4745,"isConstant":false,"isInlineArray":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"TupleExpression","src":"13910:16:21","typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256)"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"components":[{"id":4746,"name":"remainder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4717,"src":"14018:9:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4751,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4747,"name":"gcd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4723,"src":"14267:3:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4750,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4748,"name":"remainder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4717,"src":"14273:9:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4749,"name":"quotient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4738,"src":"14285:8:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"14273:20:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"14267:26:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4752,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"13929:383:21","typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256)"}},"src":"13910:402:21","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4754,"nodeType":"ExpressionStatement","src":"13910:402:21"},{"expression":{"id":4768,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"components":[{"id":4755,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4727,"src":"14334:1:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},{"id":4756,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4731,"src":"14337:1:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":4757,"isConstant":false,"isInlineArray":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"TupleExpression","src":"14333:6:21","typeDescriptions":{"typeIdentifier":"t_tuple$_t_int256_$_t_int256_$","typeString":"tuple(int256,int256)"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"components":[{"id":4758,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4731,"src":"14421:1:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4766,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4759,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4727,"src":"14679:1:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4765,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4760,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4731,"src":"14683:1:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"id":4763,"name":"quotient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4738,"src":"14694:8:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4762,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14687:6:21","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":4761,"name":"int256","nodeType":"ElementaryTypeName","src":"14687:6:21","typeDescriptions":{}}},"id":4764,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14687:16:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"14683:20:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"14679:24:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":4767,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"14342:380:21","typeDescriptions":{"typeIdentifier":"t_tuple$_t_int256_$_t_int256_$","typeString":"tuple(int256,int256)"}},"src":"14333:389:21","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4769,"nodeType":"ExpressionStatement","src":"14333:389:21"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4736,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4734,"name":"remainder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4717,"src":"13820:9:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":4735,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13833:1:21","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"13820:14:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4771,"nodeType":"WhileStatement","src":"13813:925:21"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4774,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4772,"name":"gcd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4723,"src":"14758:3:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"31","id":4773,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14765:1:21","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"14758:8:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4777,"nodeType":"IfStatement","src":"14754:22:21","trueBody":{"expression":{"hexValue":"30","id":4775,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14775:1:21","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":4709,"id":4776,"nodeType":"Return","src":"14768:8:21"}},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4781,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4779,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4727,"src":"14828:1:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"30","id":4780,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14832:1:21","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"14828:5:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4788,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4782,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4705,"src":"14835:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"arguments":[{"id":4786,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"-","prefix":true,"src":"14847:2:21","subExpression":{"id":4785,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4727,"src":"14848:1:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4784,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14839:7:21","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":4783,"name":"uint256","nodeType":"ElementaryTypeName","src":"14839:7:21","typeDescriptions":{}}},"id":4787,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14839:11:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"14835:15:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"id":4791,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4727,"src":"14860:1:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4790,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14852:7:21","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":4789,"name":"uint256","nodeType":"ElementaryTypeName","src":"14852:7:21","typeDescriptions":{}}},"id":4792,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14852:10:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4778,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4336,"src":"14820:7:21","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (bool,uint256,uint256) pure returns (uint256)"}},"id":4793,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14820:43:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4709,"id":4794,"nodeType":"Return","src":"14813:50:21"}]}]},"documentation":{"id":4701,"nodeType":"StructuredDocumentation","src":"12385:563:21","text":" @dev Calculate the modular multiplicative inverse of a number in Z/nZ.\n If n is a prime, then Z/nZ is a field. In that case all elements are inversible, except 0.\n If n is not a prime, then Z/nZ is not a field, and some elements might not be inversible.\n If the input value is not inversible, 0 is returned.\n NOTE: If you know for sure that n is (big) a prime, it may be cheaper to use Fermat's little theorem and get the\n inverse using `Math.modExp(a, n - 2, n)`. See {invModPrime}."},"id":4797,"implemented":true,"kind":"function","modifiers":[],"name":"invMod","nameLocation":"12963:6:21","nodeType":"FunctionDefinition","parameters":{"id":4706,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4703,"mutability":"mutable","name":"a","nameLocation":"12978:1:21","nodeType":"VariableDeclaration","scope":4797,"src":"12970:9:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4702,"name":"uint256","nodeType":"ElementaryTypeName","src":"12970:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4705,"mutability":"mutable","name":"n","nameLocation":"12989:1:21","nodeType":"VariableDeclaration","scope":4797,"src":"12981:9:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4704,"name":"uint256","nodeType":"ElementaryTypeName","src":"12981:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12969:22:21"},"returnParameters":{"id":4709,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4708,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4797,"src":"13015:7:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4707,"name":"uint256","nodeType":"ElementaryTypeName","src":"13015:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13014:9:21"},"scope":5668,"src":"12954:1965:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4817,"nodeType":"Block","src":"15530:86:21","statements":[{"id":4816,"nodeType":"UncheckedBlock","src":"15541:68:21","statements":[{"expression":{"arguments":[{"id":4809,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4800,"src":"15585:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4812,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4810,"name":"p","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4802,"src":"15588:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"32","id":4811,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15592:1:21","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"15588:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4813,"name":"p","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4802,"src":"15595:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":4807,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5668,"src":"15573:4:21","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$5668_$","typeString":"type(library Math)"}},"id":4808,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"15578:6:21","memberName":"modExp","nodeType":"MemberAccess","referencedDeclaration":4854,"src":"15573:11:21","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) view returns (uint256)"}},"id":4814,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15573:24:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4806,"id":4815,"nodeType":"Return","src":"15566:31:21"}]}]},"documentation":{"id":4798,"nodeType":"StructuredDocumentation","src":"14927:522:21","text":" @dev Variant of {invMod}. More efficient, but only works if `p` is known to be a prime greater than `2`.\n From https://en.wikipedia.org/wiki/Fermat%27s_little_theorem[Fermat's little theorem], we know that if p is\n prime, then `a**(p-1) ≡ 1 mod p`. As a consequence, we have `a * a**(p-2) ≡ 1 mod p`, which means that\n `a**(p-2)` is the modular multiplicative inverse of a in Fp.\n NOTE: this function does NOT check that `p` is a prime greater than `2`."},"id":4818,"implemented":true,"kind":"function","modifiers":[],"name":"invModPrime","nameLocation":"15464:11:21","nodeType":"FunctionDefinition","parameters":{"id":4803,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4800,"mutability":"mutable","name":"a","nameLocation":"15484:1:21","nodeType":"VariableDeclaration","scope":4818,"src":"15476:9:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4799,"name":"uint256","nodeType":"ElementaryTypeName","src":"15476:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4802,"mutability":"mutable","name":"p","nameLocation":"15495:1:21","nodeType":"VariableDeclaration","scope":4818,"src":"15487:9:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4801,"name":"uint256","nodeType":"ElementaryTypeName","src":"15487:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15475:22:21"},"returnParameters":{"id":4806,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4805,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4818,"src":"15521:7:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4804,"name":"uint256","nodeType":"ElementaryTypeName","src":"15521:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15520:9:21"},"scope":5668,"src":"15455:161:21","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":4853,"nodeType":"Block","src":"16401:180:21","statements":[{"assignments":[4831,4833],"declarations":[{"constant":false,"id":4831,"mutability":"mutable","name":"success","nameLocation":"16418:7:21","nodeType":"VariableDeclaration","scope":4853,"src":"16413:12:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4830,"name":"bool","nodeType":"ElementaryTypeName","src":"16413:4:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":4833,"mutability":"mutable","name":"result","nameLocation":"16435:6:21","nodeType":"VariableDeclaration","scope":4853,"src":"16427:14:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4832,"name":"uint256","nodeType":"ElementaryTypeName","src":"16427:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4839,"initialValue":{"arguments":[{"id":4835,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4821,"src":"16455:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4836,"name":"e","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4823,"src":"16458:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4837,"name":"m","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4825,"src":"16461:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4834,"name":"tryModExp","nodeType":"Identifier","overloadedDeclarations":[4878,4960],"referencedDeclaration":4878,"src":"16445:9:21","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (uint256,uint256,uint256) view returns (bool,uint256)"}},"id":4838,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16445:18:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"16412:51:21"},{"condition":{"id":4841,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"16478:8:21","subExpression":{"id":4840,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4831,"src":"16479:7:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4850,"nodeType":"IfStatement","src":"16474:76:21","trueBody":{"id":4849,"nodeType":"Block","src":"16488:62:21","statements":[{"expression":{"arguments":[{"expression":{"id":4845,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1499,"src":"16515:5:21","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$1499_$","typeString":"type(library Panic)"}},"id":4846,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"16521:16:21","memberName":"DIVISION_BY_ZERO","nodeType":"MemberAccess","referencedDeclaration":1466,"src":"16515:22:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":4842,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1499,"src":"16503:5:21","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$1499_$","typeString":"type(library Panic)"}},"id":4844,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"16509:5:21","memberName":"panic","nodeType":"MemberAccess","referencedDeclaration":1498,"src":"16503:11:21","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":4847,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16503:35:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4848,"nodeType":"ExpressionStatement","src":"16503:35:21"}]}},{"expression":{"id":4851,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4833,"src":"16567:6:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4829,"id":4852,"nodeType":"Return","src":"16560:13:21"}]},"documentation":{"id":4819,"nodeType":"StructuredDocumentation","src":"15624:690:21","text":" @dev Returns the modular exponentiation of the specified base, exponent and modulus (b ** e % m)\n Requirements:\n - modulus can't be zero\n - underlying staticcall to precompile must succeed\n IMPORTANT: The result is only valid if the underlying call succeeds. When using this function, make\n sure the chain you're using it on supports the precompiled contract for modular exponentiation\n at address 0x05 as specified in https://eips.ethereum.org/EIPS/eip-198[EIP-198]. Otherwise,\n the underlying function will succeed given the lack of a revert, but the result may be incorrectly\n interpreted as 0."},"id":4854,"implemented":true,"kind":"function","modifiers":[],"name":"modExp","nameLocation":"16329:6:21","nodeType":"FunctionDefinition","parameters":{"id":4826,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4821,"mutability":"mutable","name":"b","nameLocation":"16344:1:21","nodeType":"VariableDeclaration","scope":4854,"src":"16336:9:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4820,"name":"uint256","nodeType":"ElementaryTypeName","src":"16336:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4823,"mutability":"mutable","name":"e","nameLocation":"16355:1:21","nodeType":"VariableDeclaration","scope":4854,"src":"16347:9:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4822,"name":"uint256","nodeType":"ElementaryTypeName","src":"16347:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4825,"mutability":"mutable","name":"m","nameLocation":"16366:1:21","nodeType":"VariableDeclaration","scope":4854,"src":"16358:9:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4824,"name":"uint256","nodeType":"ElementaryTypeName","src":"16358:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"16335:33:21"},"returnParameters":{"id":4829,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4828,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4854,"src":"16392:7:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4827,"name":"uint256","nodeType":"ElementaryTypeName","src":"16392:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"16391:9:21"},"scope":5668,"src":"16320:261:21","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":4877,"nodeType":"Block","src":"17447:1517:21","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4870,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4868,"name":"m","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4861,"src":"17462:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":4869,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17467:1:21","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"17462:6:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4875,"nodeType":"IfStatement","src":"17458:29:21","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":4871,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"17478:5:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":4872,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17485:1:21","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":4873,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"17477:10:21","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":4867,"id":4874,"nodeType":"Return","src":"17470:17:21"}},{"AST":{"nativeSrc":"17523:1434:21","nodeType":"YulBlock","src":"17523:1434:21","statements":[{"nativeSrc":"17538:22:21","nodeType":"YulVariableDeclaration","src":"17538:22:21","value":{"arguments":[{"kind":"number","nativeSrc":"17555:4:21","nodeType":"YulLiteral","src":"17555:4:21","type":"","value":"0x40"}],"functionName":{"name":"mload","nativeSrc":"17549:5:21","nodeType":"YulIdentifier","src":"17549:5:21"},"nativeSrc":"17549:11:21","nodeType":"YulFunctionCall","src":"17549:11:21"},"variables":[{"name":"ptr","nativeSrc":"17542:3:21","nodeType":"YulTypedName","src":"17542:3:21","type":""}]},{"expression":{"arguments":[{"name":"ptr","nativeSrc":"18477:3:21","nodeType":"YulIdentifier","src":"18477:3:21"},{"kind":"number","nativeSrc":"18482:4:21","nodeType":"YulLiteral","src":"18482:4:21","type":"","value":"0x20"}],"functionName":{"name":"mstore","nativeSrc":"18470:6:21","nodeType":"YulIdentifier","src":"18470:6:21"},"nativeSrc":"18470:17:21","nodeType":"YulFunctionCall","src":"18470:17:21"},"nativeSrc":"18470:17:21","nodeType":"YulExpressionStatement","src":"18470:17:21"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nativeSrc":"18512:3:21","nodeType":"YulIdentifier","src":"18512:3:21"},{"kind":"number","nativeSrc":"18517:4:21","nodeType":"YulLiteral","src":"18517:4:21","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"18508:3:21","nodeType":"YulIdentifier","src":"18508:3:21"},"nativeSrc":"18508:14:21","nodeType":"YulFunctionCall","src":"18508:14:21"},{"kind":"number","nativeSrc":"18524:4:21","nodeType":"YulLiteral","src":"18524:4:21","type":"","value":"0x20"}],"functionName":{"name":"mstore","nativeSrc":"18501:6:21","nodeType":"YulIdentifier","src":"18501:6:21"},"nativeSrc":"18501:28:21","nodeType":"YulFunctionCall","src":"18501:28:21"},"nativeSrc":"18501:28:21","nodeType":"YulExpressionStatement","src":"18501:28:21"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nativeSrc":"18554:3:21","nodeType":"YulIdentifier","src":"18554:3:21"},{"kind":"number","nativeSrc":"18559:4:21","nodeType":"YulLiteral","src":"18559:4:21","type":"","value":"0x40"}],"functionName":{"name":"add","nativeSrc":"18550:3:21","nodeType":"YulIdentifier","src":"18550:3:21"},"nativeSrc":"18550:14:21","nodeType":"YulFunctionCall","src":"18550:14:21"},{"kind":"number","nativeSrc":"18566:4:21","nodeType":"YulLiteral","src":"18566:4:21","type":"","value":"0x20"}],"functionName":{"name":"mstore","nativeSrc":"18543:6:21","nodeType":"YulIdentifier","src":"18543:6:21"},"nativeSrc":"18543:28:21","nodeType":"YulFunctionCall","src":"18543:28:21"},"nativeSrc":"18543:28:21","nodeType":"YulExpressionStatement","src":"18543:28:21"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nativeSrc":"18596:3:21","nodeType":"YulIdentifier","src":"18596:3:21"},{"kind":"number","nativeSrc":"18601:4:21","nodeType":"YulLiteral","src":"18601:4:21","type":"","value":"0x60"}],"functionName":{"name":"add","nativeSrc":"18592:3:21","nodeType":"YulIdentifier","src":"18592:3:21"},"nativeSrc":"18592:14:21","nodeType":"YulFunctionCall","src":"18592:14:21"},{"name":"b","nativeSrc":"18608:1:21","nodeType":"YulIdentifier","src":"18608:1:21"}],"functionName":{"name":"mstore","nativeSrc":"18585:6:21","nodeType":"YulIdentifier","src":"18585:6:21"},"nativeSrc":"18585:25:21","nodeType":"YulFunctionCall","src":"18585:25:21"},"nativeSrc":"18585:25:21","nodeType":"YulExpressionStatement","src":"18585:25:21"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nativeSrc":"18635:3:21","nodeType":"YulIdentifier","src":"18635:3:21"},{"kind":"number","nativeSrc":"18640:4:21","nodeType":"YulLiteral","src":"18640:4:21","type":"","value":"0x80"}],"functionName":{"name":"add","nativeSrc":"18631:3:21","nodeType":"YulIdentifier","src":"18631:3:21"},"nativeSrc":"18631:14:21","nodeType":"YulFunctionCall","src":"18631:14:21"},{"name":"e","nativeSrc":"18647:1:21","nodeType":"YulIdentifier","src":"18647:1:21"}],"functionName":{"name":"mstore","nativeSrc":"18624:6:21","nodeType":"YulIdentifier","src":"18624:6:21"},"nativeSrc":"18624:25:21","nodeType":"YulFunctionCall","src":"18624:25:21"},"nativeSrc":"18624:25:21","nodeType":"YulExpressionStatement","src":"18624:25:21"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nativeSrc":"18674:3:21","nodeType":"YulIdentifier","src":"18674:3:21"},{"kind":"number","nativeSrc":"18679:4:21","nodeType":"YulLiteral","src":"18679:4:21","type":"","value":"0xa0"}],"functionName":{"name":"add","nativeSrc":"18670:3:21","nodeType":"YulIdentifier","src":"18670:3:21"},"nativeSrc":"18670:14:21","nodeType":"YulFunctionCall","src":"18670:14:21"},{"name":"m","nativeSrc":"18686:1:21","nodeType":"YulIdentifier","src":"18686:1:21"}],"functionName":{"name":"mstore","nativeSrc":"18663:6:21","nodeType":"YulIdentifier","src":"18663:6:21"},"nativeSrc":"18663:25:21","nodeType":"YulFunctionCall","src":"18663:25:21"},"nativeSrc":"18663:25:21","nodeType":"YulExpressionStatement","src":"18663:25:21"},{"nativeSrc":"18854:57:21","nodeType":"YulAssignment","src":"18854:57:21","value":{"arguments":[{"arguments":[],"functionName":{"name":"gas","nativeSrc":"18876:3:21","nodeType":"YulIdentifier","src":"18876:3:21"},"nativeSrc":"18876:5:21","nodeType":"YulFunctionCall","src":"18876:5:21"},{"kind":"number","nativeSrc":"18883:4:21","nodeType":"YulLiteral","src":"18883:4:21","type":"","value":"0x05"},{"name":"ptr","nativeSrc":"18889:3:21","nodeType":"YulIdentifier","src":"18889:3:21"},{"kind":"number","nativeSrc":"18894:4:21","nodeType":"YulLiteral","src":"18894:4:21","type":"","value":"0xc0"},{"kind":"number","nativeSrc":"18900:4:21","nodeType":"YulLiteral","src":"18900:4:21","type":"","value":"0x00"},{"kind":"number","nativeSrc":"18906:4:21","nodeType":"YulLiteral","src":"18906:4:21","type":"","value":"0x20"}],"functionName":{"name":"staticcall","nativeSrc":"18865:10:21","nodeType":"YulIdentifier","src":"18865:10:21"},"nativeSrc":"18865:46:21","nodeType":"YulFunctionCall","src":"18865:46:21"},"variableNames":[{"name":"success","nativeSrc":"18854:7:21","nodeType":"YulIdentifier","src":"18854:7:21"}]},{"nativeSrc":"18925:21:21","nodeType":"YulAssignment","src":"18925:21:21","value":{"arguments":[{"kind":"number","nativeSrc":"18941:4:21","nodeType":"YulLiteral","src":"18941:4:21","type":"","value":"0x00"}],"functionName":{"name":"mload","nativeSrc":"18935:5:21","nodeType":"YulIdentifier","src":"18935:5:21"},"nativeSrc":"18935:11:21","nodeType":"YulFunctionCall","src":"18935:11:21"},"variableNames":[{"name":"result","nativeSrc":"18925:6:21","nodeType":"YulIdentifier","src":"18925:6:21"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":4857,"isOffset":false,"isSlot":false,"src":"18608:1:21","valueSize":1},{"declaration":4859,"isOffset":false,"isSlot":false,"src":"18647:1:21","valueSize":1},{"declaration":4861,"isOffset":false,"isSlot":false,"src":"18686:1:21","valueSize":1},{"declaration":4866,"isOffset":false,"isSlot":false,"src":"18925:6:21","valueSize":1},{"declaration":4864,"isOffset":false,"isSlot":false,"src":"18854:7:21","valueSize":1}],"flags":["memory-safe"],"id":4876,"nodeType":"InlineAssembly","src":"17498:1459:21"}]},"documentation":{"id":4855,"nodeType":"StructuredDocumentation","src":"16589:747:21","text":" @dev Returns the modular exponentiation of the specified base, exponent and modulus (b ** e % m).\n It includes a success flag indicating if the operation succeeded. Operation will be marked as failed if trying\n to operate modulo 0 or if the underlying precompile reverted.\n IMPORTANT: The result is only valid if the success flag is true. When using this function, make sure the chain\n you're using it on supports the precompiled contract for modular exponentiation at address 0x05 as specified in\n https://eips.ethereum.org/EIPS/eip-198[EIP-198]. Otherwise, the underlying function will succeed given the lack\n of a revert, but the result may be incorrectly interpreted as 0."},"id":4878,"implemented":true,"kind":"function","modifiers":[],"name":"tryModExp","nameLocation":"17351:9:21","nodeType":"FunctionDefinition","parameters":{"id":4862,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4857,"mutability":"mutable","name":"b","nameLocation":"17369:1:21","nodeType":"VariableDeclaration","scope":4878,"src":"17361:9:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4856,"name":"uint256","nodeType":"ElementaryTypeName","src":"17361:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4859,"mutability":"mutable","name":"e","nameLocation":"17380:1:21","nodeType":"VariableDeclaration","scope":4878,"src":"17372:9:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4858,"name":"uint256","nodeType":"ElementaryTypeName","src":"17372:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4861,"mutability":"mutable","name":"m","nameLocation":"17391:1:21","nodeType":"VariableDeclaration","scope":4878,"src":"17383:9:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4860,"name":"uint256","nodeType":"ElementaryTypeName","src":"17383:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"17360:33:21"},"returnParameters":{"id":4867,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4864,"mutability":"mutable","name":"success","nameLocation":"17422:7:21","nodeType":"VariableDeclaration","scope":4878,"src":"17417:12:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4863,"name":"bool","nodeType":"ElementaryTypeName","src":"17417:4:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":4866,"mutability":"mutable","name":"result","nameLocation":"17439:6:21","nodeType":"VariableDeclaration","scope":4878,"src":"17431:14:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4865,"name":"uint256","nodeType":"ElementaryTypeName","src":"17431:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"17416:30:21"},"scope":5668,"src":"17342:1622:21","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":4913,"nodeType":"Block","src":"19166:185:21","statements":[{"assignments":[4891,4893],"declarations":[{"constant":false,"id":4891,"mutability":"mutable","name":"success","nameLocation":"19183:7:21","nodeType":"VariableDeclaration","scope":4913,"src":"19178:12:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4890,"name":"bool","nodeType":"ElementaryTypeName","src":"19178:4:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":4893,"mutability":"mutable","name":"result","nameLocation":"19205:6:21","nodeType":"VariableDeclaration","scope":4913,"src":"19192:19:21","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4892,"name":"bytes","nodeType":"ElementaryTypeName","src":"19192:5:21","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":4899,"initialValue":{"arguments":[{"id":4895,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4881,"src":"19225:1:21","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":4896,"name":"e","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4883,"src":"19228:1:21","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":4897,"name":"m","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4885,"src":"19231:1:21","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":4894,"name":"tryModExp","nodeType":"Identifier","overloadedDeclarations":[4878,4960],"referencedDeclaration":4960,"src":"19215:9:21","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory,bytes memory,bytes memory) view returns (bool,bytes memory)"}},"id":4898,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19215:18:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"19177:56:21"},{"condition":{"id":4901,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"19248:8:21","subExpression":{"id":4900,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4891,"src":"19249:7:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4910,"nodeType":"IfStatement","src":"19244:76:21","trueBody":{"id":4909,"nodeType":"Block","src":"19258:62:21","statements":[{"expression":{"arguments":[{"expression":{"id":4905,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1499,"src":"19285:5:21","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$1499_$","typeString":"type(library Panic)"}},"id":4906,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"19291:16:21","memberName":"DIVISION_BY_ZERO","nodeType":"MemberAccess","referencedDeclaration":1466,"src":"19285:22:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":4902,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1499,"src":"19273:5:21","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$1499_$","typeString":"type(library Panic)"}},"id":4904,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"19279:5:21","memberName":"panic","nodeType":"MemberAccess","referencedDeclaration":1498,"src":"19273:11:21","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":4907,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19273:35:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4908,"nodeType":"ExpressionStatement","src":"19273:35:21"}]}},{"expression":{"id":4911,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4893,"src":"19337:6:21","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":4889,"id":4912,"nodeType":"Return","src":"19330:13:21"}]},"documentation":{"id":4879,"nodeType":"StructuredDocumentation","src":"18972:87:21","text":" @dev Variant of {modExp} that supports inputs of arbitrary length."},"id":4914,"implemented":true,"kind":"function","modifiers":[],"name":"modExp","nameLocation":"19074:6:21","nodeType":"FunctionDefinition","parameters":{"id":4886,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4881,"mutability":"mutable","name":"b","nameLocation":"19094:1:21","nodeType":"VariableDeclaration","scope":4914,"src":"19081:14:21","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4880,"name":"bytes","nodeType":"ElementaryTypeName","src":"19081:5:21","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":4883,"mutability":"mutable","name":"e","nameLocation":"19110:1:21","nodeType":"VariableDeclaration","scope":4914,"src":"19097:14:21","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4882,"name":"bytes","nodeType":"ElementaryTypeName","src":"19097:5:21","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":4885,"mutability":"mutable","name":"m","nameLocation":"19126:1:21","nodeType":"VariableDeclaration","scope":4914,"src":"19113:14:21","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4884,"name":"bytes","nodeType":"ElementaryTypeName","src":"19113:5:21","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"19080:48:21"},"returnParameters":{"id":4889,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4888,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4914,"src":"19152:12:21","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4887,"name":"bytes","nodeType":"ElementaryTypeName","src":"19152:5:21","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"19151:14:21"},"scope":5668,"src":"19065:286:21","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":4959,"nodeType":"Block","src":"19614:789:21","statements":[{"condition":{"arguments":[{"id":4929,"name":"m","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4921,"src":"19640:1:21","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":4928,"name":"_zeroBytes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4993,"src":"19629:10:21","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$returns$_t_bool_$","typeString":"function (bytes memory) pure returns (bool)"}},"id":4930,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19629:13:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4938,"nodeType":"IfStatement","src":"19625:47:21","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":4931,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"19652:5:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"arguments":[{"hexValue":"30","id":4934,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19669:1:21","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":4933,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"19659:9:21","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$","typeString":"function (uint256) pure returns (bytes memory)"},"typeName":{"id":4932,"name":"bytes","nodeType":"ElementaryTypeName","src":"19663:5:21","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}}},"id":4935,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19659:12:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"id":4936,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"19651:21:21","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"functionReturnParameters":4927,"id":4937,"nodeType":"Return","src":"19644:28:21"}},{"assignments":[4940],"declarations":[{"constant":false,"id":4940,"mutability":"mutable","name":"mLen","nameLocation":"19693:4:21","nodeType":"VariableDeclaration","scope":4959,"src":"19685:12:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4939,"name":"uint256","nodeType":"ElementaryTypeName","src":"19685:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4943,"initialValue":{"expression":{"id":4941,"name":"m","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4921,"src":"19700:1:21","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":4942,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"19702:6:21","memberName":"length","nodeType":"MemberAccess","src":"19700:8:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"19685:23:21"},{"expression":{"id":4956,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4944,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4926,"src":"19793:6:21","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"expression":{"id":4947,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4917,"src":"19819:1:21","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":4948,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"19821:6:21","memberName":"length","nodeType":"MemberAccess","src":"19819:8:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":4949,"name":"e","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4919,"src":"19829:1:21","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":4950,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"19831:6:21","memberName":"length","nodeType":"MemberAccess","src":"19829:8:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4951,"name":"mLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4940,"src":"19839:4:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4952,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4917,"src":"19845:1:21","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":4953,"name":"e","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4919,"src":"19848:1:21","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":4954,"name":"m","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4921,"src":"19851:1:21","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":4945,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"19802:3:21","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":4946,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"19806:12:21","memberName":"encodePacked","nodeType":"MemberAccess","src":"19802:16:21","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":4955,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19802:51:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"src":"19793:60:21","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":4957,"nodeType":"ExpressionStatement","src":"19793:60:21"},{"AST":{"nativeSrc":"19891:505:21","nodeType":"YulBlock","src":"19891:505:21","statements":[{"nativeSrc":"19906:32:21","nodeType":"YulVariableDeclaration","src":"19906:32:21","value":{"arguments":[{"name":"result","nativeSrc":"19925:6:21","nodeType":"YulIdentifier","src":"19925:6:21"},{"kind":"number","nativeSrc":"19933:4:21","nodeType":"YulLiteral","src":"19933:4:21","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"19921:3:21","nodeType":"YulIdentifier","src":"19921:3:21"},"nativeSrc":"19921:17:21","nodeType":"YulFunctionCall","src":"19921:17:21"},"variables":[{"name":"dataPtr","nativeSrc":"19910:7:21","nodeType":"YulTypedName","src":"19910:7:21","type":""}]},{"nativeSrc":"20030:73:21","nodeType":"YulAssignment","src":"20030:73:21","value":{"arguments":[{"arguments":[],"functionName":{"name":"gas","nativeSrc":"20052:3:21","nodeType":"YulIdentifier","src":"20052:3:21"},"nativeSrc":"20052:5:21","nodeType":"YulFunctionCall","src":"20052:5:21"},{"kind":"number","nativeSrc":"20059:4:21","nodeType":"YulLiteral","src":"20059:4:21","type":"","value":"0x05"},{"name":"dataPtr","nativeSrc":"20065:7:21","nodeType":"YulIdentifier","src":"20065:7:21"},{"arguments":[{"name":"result","nativeSrc":"20080:6:21","nodeType":"YulIdentifier","src":"20080:6:21"}],"functionName":{"name":"mload","nativeSrc":"20074:5:21","nodeType":"YulIdentifier","src":"20074:5:21"},"nativeSrc":"20074:13:21","nodeType":"YulFunctionCall","src":"20074:13:21"},{"name":"dataPtr","nativeSrc":"20089:7:21","nodeType":"YulIdentifier","src":"20089:7:21"},{"name":"mLen","nativeSrc":"20098:4:21","nodeType":"YulIdentifier","src":"20098:4:21"}],"functionName":{"name":"staticcall","nativeSrc":"20041:10:21","nodeType":"YulIdentifier","src":"20041:10:21"},"nativeSrc":"20041:62:21","nodeType":"YulFunctionCall","src":"20041:62:21"},"variableNames":[{"name":"success","nativeSrc":"20030:7:21","nodeType":"YulIdentifier","src":"20030:7:21"}]},{"expression":{"arguments":[{"name":"result","nativeSrc":"20262:6:21","nodeType":"YulIdentifier","src":"20262:6:21"},{"name":"mLen","nativeSrc":"20270:4:21","nodeType":"YulIdentifier","src":"20270:4:21"}],"functionName":{"name":"mstore","nativeSrc":"20255:6:21","nodeType":"YulIdentifier","src":"20255:6:21"},"nativeSrc":"20255:20:21","nodeType":"YulFunctionCall","src":"20255:20:21"},"nativeSrc":"20255:20:21","nodeType":"YulExpressionStatement","src":"20255:20:21"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"20360:4:21","nodeType":"YulLiteral","src":"20360:4:21","type":"","value":"0x40"},{"arguments":[{"name":"dataPtr","nativeSrc":"20370:7:21","nodeType":"YulIdentifier","src":"20370:7:21"},{"name":"mLen","nativeSrc":"20379:4:21","nodeType":"YulIdentifier","src":"20379:4:21"}],"functionName":{"name":"add","nativeSrc":"20366:3:21","nodeType":"YulIdentifier","src":"20366:3:21"},"nativeSrc":"20366:18:21","nodeType":"YulFunctionCall","src":"20366:18:21"}],"functionName":{"name":"mstore","nativeSrc":"20353:6:21","nodeType":"YulIdentifier","src":"20353:6:21"},"nativeSrc":"20353:32:21","nodeType":"YulFunctionCall","src":"20353:32:21"},"nativeSrc":"20353:32:21","nodeType":"YulExpressionStatement","src":"20353:32:21"}]},"evmVersion":"paris","externalReferences":[{"declaration":4940,"isOffset":false,"isSlot":false,"src":"20098:4:21","valueSize":1},{"declaration":4940,"isOffset":false,"isSlot":false,"src":"20270:4:21","valueSize":1},{"declaration":4940,"isOffset":false,"isSlot":false,"src":"20379:4:21","valueSize":1},{"declaration":4926,"isOffset":false,"isSlot":false,"src":"19925:6:21","valueSize":1},{"declaration":4926,"isOffset":false,"isSlot":false,"src":"20080:6:21","valueSize":1},{"declaration":4926,"isOffset":false,"isSlot":false,"src":"20262:6:21","valueSize":1},{"declaration":4924,"isOffset":false,"isSlot":false,"src":"20030:7:21","valueSize":1}],"flags":["memory-safe"],"id":4958,"nodeType":"InlineAssembly","src":"19866:530:21"}]},"documentation":{"id":4915,"nodeType":"StructuredDocumentation","src":"19359:90:21","text":" @dev Variant of {tryModExp} that supports inputs of arbitrary length."},"id":4960,"implemented":true,"kind":"function","modifiers":[],"name":"tryModExp","nameLocation":"19464:9:21","nodeType":"FunctionDefinition","parameters":{"id":4922,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4917,"mutability":"mutable","name":"b","nameLocation":"19497:1:21","nodeType":"VariableDeclaration","scope":4960,"src":"19484:14:21","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4916,"name":"bytes","nodeType":"ElementaryTypeName","src":"19484:5:21","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":4919,"mutability":"mutable","name":"e","nameLocation":"19522:1:21","nodeType":"VariableDeclaration","scope":4960,"src":"19509:14:21","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4918,"name":"bytes","nodeType":"ElementaryTypeName","src":"19509:5:21","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":4921,"mutability":"mutable","name":"m","nameLocation":"19547:1:21","nodeType":"VariableDeclaration","scope":4960,"src":"19534:14:21","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4920,"name":"bytes","nodeType":"ElementaryTypeName","src":"19534:5:21","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"19473:82:21"},"returnParameters":{"id":4927,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4924,"mutability":"mutable","name":"success","nameLocation":"19584:7:21","nodeType":"VariableDeclaration","scope":4960,"src":"19579:12:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4923,"name":"bool","nodeType":"ElementaryTypeName","src":"19579:4:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":4926,"mutability":"mutable","name":"result","nameLocation":"19606:6:21","nodeType":"VariableDeclaration","scope":4960,"src":"19593:19:21","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4925,"name":"bytes","nodeType":"ElementaryTypeName","src":"19593:5:21","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"19578:35:21"},"scope":5668,"src":"19455:948:21","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":4992,"nodeType":"Block","src":"20563:183:21","statements":[{"body":{"id":4988,"nodeType":"Block","src":"20621:96:21","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":4983,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":4979,"name":"byteArray","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4963,"src":"20640:9:21","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":4981,"indexExpression":{"id":4980,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4969,"src":"20650:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"20640:12:21","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":4982,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20656:1:21","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"20640:17:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4987,"nodeType":"IfStatement","src":"20636:70:21","trueBody":{"id":4986,"nodeType":"Block","src":"20659:47:21","statements":[{"expression":{"hexValue":"66616c7365","id":4984,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"20685:5:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"functionReturnParameters":4967,"id":4985,"nodeType":"Return","src":"20678:12:21"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4975,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4972,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4969,"src":"20594:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":4973,"name":"byteArray","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4963,"src":"20598:9:21","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":4974,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"20608:6:21","memberName":"length","nodeType":"MemberAccess","src":"20598:16:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"20594:20:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4989,"initializationExpression":{"assignments":[4969],"declarations":[{"constant":false,"id":4969,"mutability":"mutable","name":"i","nameLocation":"20587:1:21","nodeType":"VariableDeclaration","scope":4989,"src":"20579:9:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4968,"name":"uint256","nodeType":"ElementaryTypeName","src":"20579:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4971,"initialValue":{"hexValue":"30","id":4970,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20591:1:21","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"20579:13:21"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":4977,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":true,"src":"20616:3:21","subExpression":{"id":4976,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4969,"src":"20618:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4978,"nodeType":"ExpressionStatement","src":"20616:3:21"},"nodeType":"ForStatement","src":"20574:143:21"},{"expression":{"hexValue":"74727565","id":4990,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"20734:4:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":4967,"id":4991,"nodeType":"Return","src":"20727:11:21"}]},"documentation":{"id":4961,"nodeType":"StructuredDocumentation","src":"20411:74:21","text":" @dev Returns whether the provided byte array is zero."},"id":4993,"implemented":true,"kind":"function","modifiers":[],"name":"_zeroBytes","nameLocation":"20500:10:21","nodeType":"FunctionDefinition","parameters":{"id":4964,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4963,"mutability":"mutable","name":"byteArray","nameLocation":"20524:9:21","nodeType":"VariableDeclaration","scope":4993,"src":"20511:22:21","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4962,"name":"bytes","nodeType":"ElementaryTypeName","src":"20511:5:21","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"20510:24:21"},"returnParameters":{"id":4967,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4966,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4993,"src":"20557:4:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4965,"name":"bool","nodeType":"ElementaryTypeName","src":"20557:4:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"20556:6:21"},"scope":5668,"src":"20491:255:21","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":5211,"nodeType":"Block","src":"21115:5228:21","statements":[{"id":5210,"nodeType":"UncheckedBlock","src":"21126:5210:21","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5003,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5001,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4996,"src":"21222:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"hexValue":"31","id":5002,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21227:1:21","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"21222:6:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5007,"nodeType":"IfStatement","src":"21218:55:21","trueBody":{"id":5006,"nodeType":"Block","src":"21230:43:21","statements":[{"expression":{"id":5004,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4996,"src":"21256:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5000,"id":5005,"nodeType":"Return","src":"21249:8:21"}]}},{"assignments":[5009],"declarations":[{"constant":false,"id":5009,"mutability":"mutable","name":"aa","nameLocation":"22222:2:21","nodeType":"VariableDeclaration","scope":5210,"src":"22214:10:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5008,"name":"uint256","nodeType":"ElementaryTypeName","src":"22214:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5011,"initialValue":{"id":5010,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4996,"src":"22227:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"22214:14:21"},{"assignments":[5013],"declarations":[{"constant":false,"id":5013,"mutability":"mutable","name":"xn","nameLocation":"22251:2:21","nodeType":"VariableDeclaration","scope":5210,"src":"22243:10:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5012,"name":"uint256","nodeType":"ElementaryTypeName","src":"22243:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5015,"initialValue":{"hexValue":"31","id":5014,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22256:1:21","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"VariableDeclarationStatement","src":"22243:14:21"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5021,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5016,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5009,"src":"22278:2:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_340282366920938463463374607431768211456_by_1","typeString":"int_const 3402...(31 digits omitted)...1456"},"id":5019,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":5017,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22285:1:21","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"313238","id":5018,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22290:3:21","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"22285:8:21","typeDescriptions":{"typeIdentifier":"t_rational_340282366920938463463374607431768211456_by_1","typeString":"int_const 3402...(31 digits omitted)...1456"}}],"id":5020,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"22284:10:21","typeDescriptions":{"typeIdentifier":"t_rational_340282366920938463463374607431768211456_by_1","typeString":"int_const 3402...(31 digits omitted)...1456"}},"src":"22278:16:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5031,"nodeType":"IfStatement","src":"22274:95:21","trueBody":{"id":5030,"nodeType":"Block","src":"22296:73:21","statements":[{"expression":{"id":5024,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5022,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5009,"src":"22315:2:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"313238","id":5023,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22322:3:21","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"22315:10:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5025,"nodeType":"ExpressionStatement","src":"22315:10:21"},{"expression":{"id":5028,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5026,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5013,"src":"22344:2:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"3634","id":5027,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22351:2:21","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"22344:9:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5029,"nodeType":"ExpressionStatement","src":"22344:9:21"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5037,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5032,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5009,"src":"22387:2:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_18446744073709551616_by_1","typeString":"int_const 18446744073709551616"},"id":5035,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":5033,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22394:1:21","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"3634","id":5034,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22399:2:21","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"22394:7:21","typeDescriptions":{"typeIdentifier":"t_rational_18446744073709551616_by_1","typeString":"int_const 18446744073709551616"}}],"id":5036,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"22393:9:21","typeDescriptions":{"typeIdentifier":"t_rational_18446744073709551616_by_1","typeString":"int_const 18446744073709551616"}},"src":"22387:15:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5047,"nodeType":"IfStatement","src":"22383:93:21","trueBody":{"id":5046,"nodeType":"Block","src":"22404:72:21","statements":[{"expression":{"id":5040,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5038,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5009,"src":"22423:2:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3634","id":5039,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22430:2:21","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"22423:9:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5041,"nodeType":"ExpressionStatement","src":"22423:9:21"},{"expression":{"id":5044,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5042,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5013,"src":"22451:2:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"3332","id":5043,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22458:2:21","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"22451:9:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5045,"nodeType":"ExpressionStatement","src":"22451:9:21"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5053,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5048,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5009,"src":"22494:2:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_4294967296_by_1","typeString":"int_const 4294967296"},"id":5051,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":5049,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22501:1:21","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"3332","id":5050,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22506:2:21","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"22501:7:21","typeDescriptions":{"typeIdentifier":"t_rational_4294967296_by_1","typeString":"int_const 4294967296"}}],"id":5052,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"22500:9:21","typeDescriptions":{"typeIdentifier":"t_rational_4294967296_by_1","typeString":"int_const 4294967296"}},"src":"22494:15:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5063,"nodeType":"IfStatement","src":"22490:93:21","trueBody":{"id":5062,"nodeType":"Block","src":"22511:72:21","statements":[{"expression":{"id":5056,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5054,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5009,"src":"22530:2:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3332","id":5055,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22537:2:21","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"22530:9:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5057,"nodeType":"ExpressionStatement","src":"22530:9:21"},{"expression":{"id":5060,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5058,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5013,"src":"22558:2:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"3136","id":5059,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22565:2:21","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"22558:9:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5061,"nodeType":"ExpressionStatement","src":"22558:9:21"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5069,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5064,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5009,"src":"22601:2:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_65536_by_1","typeString":"int_const 65536"},"id":5067,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":5065,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22608:1:21","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"3136","id":5066,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22613:2:21","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"22608:7:21","typeDescriptions":{"typeIdentifier":"t_rational_65536_by_1","typeString":"int_const 65536"}}],"id":5068,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"22607:9:21","typeDescriptions":{"typeIdentifier":"t_rational_65536_by_1","typeString":"int_const 65536"}},"src":"22601:15:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5079,"nodeType":"IfStatement","src":"22597:92:21","trueBody":{"id":5078,"nodeType":"Block","src":"22618:71:21","statements":[{"expression":{"id":5072,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5070,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5009,"src":"22637:2:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3136","id":5071,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22644:2:21","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"22637:9:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5073,"nodeType":"ExpressionStatement","src":"22637:9:21"},{"expression":{"id":5076,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5074,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5013,"src":"22665:2:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"38","id":5075,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22672:1:21","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"22665:8:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5077,"nodeType":"ExpressionStatement","src":"22665:8:21"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5085,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5080,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5009,"src":"22707:2:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"},"id":5083,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":5081,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22714:1:21","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"38","id":5082,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22719:1:21","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"22714:6:21","typeDescriptions":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"}}],"id":5084,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"22713:8:21","typeDescriptions":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"}},"src":"22707:14:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5095,"nodeType":"IfStatement","src":"22703:90:21","trueBody":{"id":5094,"nodeType":"Block","src":"22723:70:21","statements":[{"expression":{"id":5088,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5086,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5009,"src":"22742:2:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"38","id":5087,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22749:1:21","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"22742:8:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5089,"nodeType":"ExpressionStatement","src":"22742:8:21"},{"expression":{"id":5092,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5090,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5013,"src":"22769:2:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"34","id":5091,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22776:1:21","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"22769:8:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5093,"nodeType":"ExpressionStatement","src":"22769:8:21"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5101,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5096,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5009,"src":"22811:2:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"id":5099,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":5097,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22818:1:21","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"34","id":5098,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22823:1:21","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"22818:6:21","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"}}],"id":5100,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"22817:8:21","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"}},"src":"22811:14:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5111,"nodeType":"IfStatement","src":"22807:90:21","trueBody":{"id":5110,"nodeType":"Block","src":"22827:70:21","statements":[{"expression":{"id":5104,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5102,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5009,"src":"22846:2:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"34","id":5103,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22853:1:21","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"22846:8:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5105,"nodeType":"ExpressionStatement","src":"22846:8:21"},{"expression":{"id":5108,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5106,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5013,"src":"22873:2:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"32","id":5107,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22880:1:21","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"22873:8:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5109,"nodeType":"ExpressionStatement","src":"22873:8:21"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5117,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5112,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5009,"src":"22915:2:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"id":5115,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":5113,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22922:1:21","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"32","id":5114,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22927:1:21","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"22922:6:21","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"}}],"id":5116,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"22921:8:21","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"}},"src":"22915:14:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5123,"nodeType":"IfStatement","src":"22911:63:21","trueBody":{"id":5122,"nodeType":"Block","src":"22931:43:21","statements":[{"expression":{"id":5120,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5118,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5013,"src":"22950:2:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"31","id":5119,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22957:1:21","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"22950:8:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5121,"nodeType":"ExpressionStatement","src":"22950:8:21"}]}},{"expression":{"id":5131,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5124,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5013,"src":"23401:2:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5130,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5127,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"33","id":5125,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"23407:1:21","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":5126,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5013,"src":"23411:2:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"23407:6:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5128,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"23406:8:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":5129,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"23418:1:21","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"23406:13:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"23401:18:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5132,"nodeType":"ExpressionStatement","src":"23401:18:21"},{"expression":{"id":5142,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5133,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5013,"src":"25343:2:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5141,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5138,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5134,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5013,"src":"25349:2:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5137,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5135,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4996,"src":"25354:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":5136,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5013,"src":"25358:2:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25354:6:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25349:11:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5139,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"25348:13:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":5140,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25365:1:21","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"25348:18:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25343:23:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5143,"nodeType":"ExpressionStatement","src":"25343:23:21"},{"expression":{"id":5153,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5144,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5013,"src":"25453:2:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5152,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5149,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5145,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5013,"src":"25459:2:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5148,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5146,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4996,"src":"25464:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":5147,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5013,"src":"25468:2:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25464:6:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25459:11:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5150,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"25458:13:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":5151,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25475:1:21","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"25458:18:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25453:23:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5154,"nodeType":"ExpressionStatement","src":"25453:23:21"},{"expression":{"id":5164,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5155,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5013,"src":"25565:2:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5163,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5160,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5156,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5013,"src":"25571:2:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5159,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5157,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4996,"src":"25576:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":5158,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5013,"src":"25580:2:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25576:6:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25571:11:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5161,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"25570:13:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":5162,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25587:1:21","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"25570:18:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25565:23:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5165,"nodeType":"ExpressionStatement","src":"25565:23:21"},{"expression":{"id":5175,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5166,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5013,"src":"25675:2:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5174,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5171,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5167,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5013,"src":"25681:2:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5170,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5168,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4996,"src":"25686:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":5169,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5013,"src":"25690:2:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25686:6:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25681:11:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5172,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"25680:13:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":5173,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25697:1:21","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"25680:18:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25675:23:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5176,"nodeType":"ExpressionStatement","src":"25675:23:21"},{"expression":{"id":5186,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5177,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5013,"src":"25786:2:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5185,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5182,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5178,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5013,"src":"25792:2:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5181,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5179,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4996,"src":"25797:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":5180,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5013,"src":"25801:2:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25797:6:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25792:11:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5183,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"25791:13:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":5184,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25808:1:21","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"25791:18:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25786:23:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5187,"nodeType":"ExpressionStatement","src":"25786:23:21"},{"expression":{"id":5197,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5188,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5013,"src":"25897:2:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5196,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5193,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5189,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5013,"src":"25903:2:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5192,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5190,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4996,"src":"25908:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":5191,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5013,"src":"25912:2:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25908:6:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25903:11:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5194,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"25902:13:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":5195,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25919:1:21","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"25902:18:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25897:23:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5198,"nodeType":"ExpressionStatement","src":"25897:23:21"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5208,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5199,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5013,"src":"26291:2:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5206,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5202,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5013,"src":"26312:2:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5205,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5203,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4996,"src":"26317:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":5204,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5013,"src":"26321:2:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26317:6:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26312:11:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":5200,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7433,"src":"26296:8:21","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7433_$","typeString":"type(library SafeCast)"}},"id":5201,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"26305:6:21","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7432,"src":"26296:15:21","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":5207,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26296:28:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26291:33:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5000,"id":5209,"nodeType":"Return","src":"26284:40:21"}]}]},"documentation":{"id":4994,"nodeType":"StructuredDocumentation","src":"20754:298:21","text":" @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded\n towards zero.\n This method is based on Newton's method for computing square roots; the algorithm is restricted to only\n using integer operations."},"id":5212,"implemented":true,"kind":"function","modifiers":[],"name":"sqrt","nameLocation":"21067:4:21","nodeType":"FunctionDefinition","parameters":{"id":4997,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4996,"mutability":"mutable","name":"a","nameLocation":"21080:1:21","nodeType":"VariableDeclaration","scope":5212,"src":"21072:9:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4995,"name":"uint256","nodeType":"ElementaryTypeName","src":"21072:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"21071:11:21"},"returnParameters":{"id":5000,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4999,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5212,"src":"21106:7:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4998,"name":"uint256","nodeType":"ElementaryTypeName","src":"21106:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"21105:9:21"},"scope":5668,"src":"21058:5285:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5245,"nodeType":"Block","src":"26521:176:21","statements":[{"id":5244,"nodeType":"UncheckedBlock","src":"26532:158:21","statements":[{"assignments":[5224],"declarations":[{"constant":false,"id":5224,"mutability":"mutable","name":"result","nameLocation":"26565:6:21","nodeType":"VariableDeclaration","scope":5244,"src":"26557:14:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5223,"name":"uint256","nodeType":"ElementaryTypeName","src":"26557:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5228,"initialValue":{"arguments":[{"id":5226,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5215,"src":"26579:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5225,"name":"sqrt","nodeType":"Identifier","overloadedDeclarations":[5212,5246],"referencedDeclaration":5212,"src":"26574:4:21","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":5227,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26574:7:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"26557:24:21"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5242,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5229,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5224,"src":"26603:6:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":5240,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":5233,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5218,"src":"26645:8:21","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4059","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$4059","typeString":"enum Math.Rounding"}],"id":5232,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5667,"src":"26628:16:21","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$4059_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":5234,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26628:26:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5239,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5237,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5235,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5224,"src":"26658:6:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":5236,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5224,"src":"26667:6:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26658:15:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":5238,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5215,"src":"26676:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26658:19:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"26628:49:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":5230,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7433,"src":"26612:8:21","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7433_$","typeString":"type(library SafeCast)"}},"id":5231,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"26621:6:21","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7432,"src":"26612:15:21","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":5241,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26612:66:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26603:75:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5222,"id":5243,"nodeType":"Return","src":"26596:82:21"}]}]},"documentation":{"id":5213,"nodeType":"StructuredDocumentation","src":"26351:88:21","text":" @dev Calculates sqrt(a), following the selected rounding direction."},"id":5246,"implemented":true,"kind":"function","modifiers":[],"name":"sqrt","nameLocation":"26454:4:21","nodeType":"FunctionDefinition","parameters":{"id":5219,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5215,"mutability":"mutable","name":"a","nameLocation":"26467:1:21","nodeType":"VariableDeclaration","scope":5246,"src":"26459:9:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5214,"name":"uint256","nodeType":"ElementaryTypeName","src":"26459:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5218,"mutability":"mutable","name":"rounding","nameLocation":"26479:8:21","nodeType":"VariableDeclaration","scope":5246,"src":"26470:17:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4059","typeString":"enum Math.Rounding"},"typeName":{"id":5217,"nodeType":"UserDefinedTypeName","pathNode":{"id":5216,"name":"Rounding","nameLocations":["26470:8:21"],"nodeType":"IdentifierPath","referencedDeclaration":4059,"src":"26470:8:21"},"referencedDeclaration":4059,"src":"26470:8:21","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4059","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"26458:30:21"},"returnParameters":{"id":5222,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5221,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5246,"src":"26512:7:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5220,"name":"uint256","nodeType":"ElementaryTypeName","src":"26512:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"26511:9:21"},"scope":5668,"src":"26445:252:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5336,"nodeType":"Block","src":"26892:2373:21","statements":[{"expression":{"id":5263,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5254,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5252,"src":"26976:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5262,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5259,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5257,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5249,"src":"26996:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30786666666666666666666666666666666666666666666666666666666666666666","id":5258,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27000:34:21","typeDescriptions":{"typeIdentifier":"t_rational_340282366920938463463374607431768211455_by_1","typeString":"int_const 3402...(31 digits omitted)...1455"},"value":"0xffffffffffffffffffffffffffffffff"},"src":"26996:38:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":5255,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7433,"src":"26980:8:21","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7433_$","typeString":"type(library SafeCast)"}},"id":5256,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"26989:6:21","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7432,"src":"26980:15:21","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":5260,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26980:55:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"37","id":5261,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27039:1:21","typeDescriptions":{"typeIdentifier":"t_rational_7_by_1","typeString":"int_const 7"},"value":"7"},"src":"26980:60:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26976:64:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5264,"nodeType":"ExpressionStatement","src":"26976:64:21"},{"expression":{"id":5277,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5265,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5252,"src":"27118:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5276,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5273,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5270,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5268,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5249,"src":"27140:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":5269,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5252,"src":"27145:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27140:6:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5271,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"27139:8:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"307866666666666666666666666666666666","id":5272,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27150:18:21","typeDescriptions":{"typeIdentifier":"t_rational_18446744073709551615_by_1","typeString":"int_const 18446744073709551615"},"value":"0xffffffffffffffff"},"src":"27139:29:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":5266,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7433,"src":"27123:8:21","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7433_$","typeString":"type(library SafeCast)"}},"id":5267,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"27132:6:21","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7432,"src":"27123:15:21","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":5274,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27123:46:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"36","id":5275,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27173:1:21","typeDescriptions":{"typeIdentifier":"t_rational_6_by_1","typeString":"int_const 6"},"value":"6"},"src":"27123:51:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27118:56:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5278,"nodeType":"ExpressionStatement","src":"27118:56:21"},{"expression":{"id":5291,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5279,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5252,"src":"27251:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5290,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5287,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5284,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5282,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5249,"src":"27273:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":5283,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5252,"src":"27278:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27273:6:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5285,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"27272:8:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30786666666666666666","id":5286,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27283:10:21","typeDescriptions":{"typeIdentifier":"t_rational_4294967295_by_1","typeString":"int_const 4294967295"},"value":"0xffffffff"},"src":"27272:21:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":5280,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7433,"src":"27256:8:21","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7433_$","typeString":"type(library SafeCast)"}},"id":5281,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"27265:6:21","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7432,"src":"27256:15:21","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":5288,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27256:38:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"35","id":5289,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27298:1:21","typeDescriptions":{"typeIdentifier":"t_rational_5_by_1","typeString":"int_const 5"},"value":"5"},"src":"27256:43:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27251:48:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5292,"nodeType":"ExpressionStatement","src":"27251:48:21"},{"expression":{"id":5305,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5293,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5252,"src":"27376:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5304,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5301,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5298,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5296,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5249,"src":"27398:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":5297,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5252,"src":"27403:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27398:6:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5299,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"27397:8:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"307866666666","id":5300,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27408:6:21","typeDescriptions":{"typeIdentifier":"t_rational_65535_by_1","typeString":"int_const 65535"},"value":"0xffff"},"src":"27397:17:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":5294,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7433,"src":"27381:8:21","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7433_$","typeString":"type(library SafeCast)"}},"id":5295,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"27390:6:21","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7432,"src":"27381:15:21","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":5302,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27381:34:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"34","id":5303,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27419:1:21","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"27381:39:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27376:44:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5306,"nodeType":"ExpressionStatement","src":"27376:44:21"},{"expression":{"id":5319,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5307,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5252,"src":"27495:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5318,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5315,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5312,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5310,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5249,"src":"27517:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":5311,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5252,"src":"27522:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27517:6:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5313,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"27516:8:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30786666","id":5314,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27527:4:21","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"0xff"},"src":"27516:15:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":5308,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7433,"src":"27500:8:21","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7433_$","typeString":"type(library SafeCast)"}},"id":5309,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"27509:6:21","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7432,"src":"27500:15:21","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":5316,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27500:32:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"33","id":5317,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27536:1:21","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"src":"27500:37:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27495:42:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5320,"nodeType":"ExpressionStatement","src":"27495:42:21"},{"expression":{"id":5333,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5321,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5252,"src":"27611:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5332,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5329,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5326,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5324,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5249,"src":"27633:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":5325,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5252,"src":"27638:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27633:6:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5327,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"27632:8:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"307866","id":5328,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27643:3:21","typeDescriptions":{"typeIdentifier":"t_rational_15_by_1","typeString":"int_const 15"},"value":"0xf"},"src":"27632:14:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":5322,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7433,"src":"27616:8:21","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7433_$","typeString":"type(library SafeCast)"}},"id":5323,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"27625:6:21","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7432,"src":"27616:15:21","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":5330,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27616:31:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"32","id":5331,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27651:1:21","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"27616:36:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27611:41:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5334,"nodeType":"ExpressionStatement","src":"27611:41:21"},{"AST":{"nativeSrc":"29137:121:21","nodeType":"YulBlock","src":"29137:121:21","statements":[{"nativeSrc":"29152:95:21","nodeType":"YulAssignment","src":"29152:95:21","value":{"arguments":[{"name":"r","nativeSrc":"29160:1:21","nodeType":"YulIdentifier","src":"29160:1:21"},{"arguments":[{"arguments":[{"name":"r","nativeSrc":"29172:1:21","nodeType":"YulIdentifier","src":"29172:1:21"},{"name":"x","nativeSrc":"29175:1:21","nodeType":"YulIdentifier","src":"29175:1:21"}],"functionName":{"name":"shr","nativeSrc":"29168:3:21","nodeType":"YulIdentifier","src":"29168:3:21"},"nativeSrc":"29168:9:21","nodeType":"YulFunctionCall","src":"29168:9:21"},{"kind":"number","nativeSrc":"29179:66:21","nodeType":"YulLiteral","src":"29179:66:21","type":"","value":"0x0000010102020202030303030303030300000000000000000000000000000000"}],"functionName":{"name":"byte","nativeSrc":"29163:4:21","nodeType":"YulIdentifier","src":"29163:4:21"},"nativeSrc":"29163:83:21","nodeType":"YulFunctionCall","src":"29163:83:21"}],"functionName":{"name":"or","nativeSrc":"29157:2:21","nodeType":"YulIdentifier","src":"29157:2:21"},"nativeSrc":"29157:90:21","nodeType":"YulFunctionCall","src":"29157:90:21"},"variableNames":[{"name":"r","nativeSrc":"29152:1:21","nodeType":"YulIdentifier","src":"29152:1:21"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":5252,"isOffset":false,"isSlot":false,"src":"29152:1:21","valueSize":1},{"declaration":5252,"isOffset":false,"isSlot":false,"src":"29160:1:21","valueSize":1},{"declaration":5252,"isOffset":false,"isSlot":false,"src":"29172:1:21","valueSize":1},{"declaration":5249,"isOffset":false,"isSlot":false,"src":"29175:1:21","valueSize":1}],"flags":["memory-safe"],"id":5335,"nodeType":"InlineAssembly","src":"29112:146:21"}]},"documentation":{"id":5247,"nodeType":"StructuredDocumentation","src":"26705:122:21","text":" @dev Return the log in base 2 of a positive value rounded towards zero.\n Returns 0 if given 0."},"id":5337,"implemented":true,"kind":"function","modifiers":[],"name":"log2","nameLocation":"26842:4:21","nodeType":"FunctionDefinition","parameters":{"id":5250,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5249,"mutability":"mutable","name":"x","nameLocation":"26855:1:21","nodeType":"VariableDeclaration","scope":5337,"src":"26847:9:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5248,"name":"uint256","nodeType":"ElementaryTypeName","src":"26847:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"26846:11:21"},"returnParameters":{"id":5253,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5252,"mutability":"mutable","name":"r","nameLocation":"26889:1:21","nodeType":"VariableDeclaration","scope":5337,"src":"26881:9:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5251,"name":"uint256","nodeType":"ElementaryTypeName","src":"26881:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"26880:11:21"},"scope":5668,"src":"26833:2432:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5370,"nodeType":"Block","src":"29504:180:21","statements":[{"id":5369,"nodeType":"UncheckedBlock","src":"29515:162:21","statements":[{"assignments":[5349],"declarations":[{"constant":false,"id":5349,"mutability":"mutable","name":"result","nameLocation":"29548:6:21","nodeType":"VariableDeclaration","scope":5369,"src":"29540:14:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5348,"name":"uint256","nodeType":"ElementaryTypeName","src":"29540:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5353,"initialValue":{"arguments":[{"id":5351,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5340,"src":"29562:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5350,"name":"log2","nodeType":"Identifier","overloadedDeclarations":[5337,5371],"referencedDeclaration":5337,"src":"29557:4:21","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":5352,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"29557:11:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"29540:28:21"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5367,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5354,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5349,"src":"29590:6:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":5365,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":5358,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5343,"src":"29632:8:21","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4059","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$4059","typeString":"enum Math.Rounding"}],"id":5357,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5667,"src":"29615:16:21","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$4059_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":5359,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"29615:26:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5364,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5362,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":5360,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29645:1:21","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"id":5361,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5349,"src":"29650:6:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"29645:11:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":5363,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5340,"src":"29659:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"29645:19:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"29615:49:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":5355,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7433,"src":"29599:8:21","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7433_$","typeString":"type(library SafeCast)"}},"id":5356,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"29608:6:21","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7432,"src":"29599:15:21","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":5366,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"29599:66:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"29590:75:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5347,"id":5368,"nodeType":"Return","src":"29583:82:21"}]}]},"documentation":{"id":5338,"nodeType":"StructuredDocumentation","src":"29273:145:21","text":" @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."},"id":5371,"implemented":true,"kind":"function","modifiers":[],"name":"log2","nameLocation":"29433:4:21","nodeType":"FunctionDefinition","parameters":{"id":5344,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5340,"mutability":"mutable","name":"value","nameLocation":"29446:5:21","nodeType":"VariableDeclaration","scope":5371,"src":"29438:13:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5339,"name":"uint256","nodeType":"ElementaryTypeName","src":"29438:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5343,"mutability":"mutable","name":"rounding","nameLocation":"29462:8:21","nodeType":"VariableDeclaration","scope":5371,"src":"29453:17:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4059","typeString":"enum Math.Rounding"},"typeName":{"id":5342,"nodeType":"UserDefinedTypeName","pathNode":{"id":5341,"name":"Rounding","nameLocations":["29453:8:21"],"nodeType":"IdentifierPath","referencedDeclaration":4059,"src":"29453:8:21"},"referencedDeclaration":4059,"src":"29453:8:21","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4059","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"29437:34:21"},"returnParameters":{"id":5347,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5346,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5371,"src":"29495:7:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5345,"name":"uint256","nodeType":"ElementaryTypeName","src":"29495:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"29494:9:21"},"scope":5668,"src":"29424:260:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5499,"nodeType":"Block","src":"29883:886:21","statements":[{"assignments":[5380],"declarations":[{"constant":false,"id":5380,"mutability":"mutable","name":"result","nameLocation":"29902:6:21","nodeType":"VariableDeclaration","scope":5499,"src":"29894:14:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5379,"name":"uint256","nodeType":"ElementaryTypeName","src":"29894:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5382,"initialValue":{"hexValue":"30","id":5381,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29911:1:21","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"29894:18:21"},{"id":5496,"nodeType":"UncheckedBlock","src":"29923:815:21","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5387,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5383,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5374,"src":"29952:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"},"id":5386,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":5384,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29961:2:21","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3634","id":5385,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29967:2:21","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"29961:8:21","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"}},"src":"29952:17:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5399,"nodeType":"IfStatement","src":"29948:106:21","trueBody":{"id":5398,"nodeType":"Block","src":"29971:83:21","statements":[{"expression":{"id":5392,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5388,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5374,"src":"29990:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"},"id":5391,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":5389,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29999:2:21","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3634","id":5390,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"30005:2:21","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"29999:8:21","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"}},"src":"29990:17:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5393,"nodeType":"ExpressionStatement","src":"29990:17:21"},{"expression":{"id":5396,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5394,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5380,"src":"30026:6:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3634","id":5395,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"30036:2:21","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"30026:12:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5397,"nodeType":"ExpressionStatement","src":"30026:12:21"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5404,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5400,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5374,"src":"30072:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"},"id":5403,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":5401,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"30081:2:21","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3332","id":5402,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"30087:2:21","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"30081:8:21","typeDescriptions":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"}},"src":"30072:17:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5416,"nodeType":"IfStatement","src":"30068:106:21","trueBody":{"id":5415,"nodeType":"Block","src":"30091:83:21","statements":[{"expression":{"id":5409,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5405,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5374,"src":"30110:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"},"id":5408,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":5406,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"30119:2:21","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3332","id":5407,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"30125:2:21","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"30119:8:21","typeDescriptions":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"}},"src":"30110:17:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5410,"nodeType":"ExpressionStatement","src":"30110:17:21"},{"expression":{"id":5413,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5411,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5380,"src":"30146:6:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3332","id":5412,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"30156:2:21","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"30146:12:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5414,"nodeType":"ExpressionStatement","src":"30146:12:21"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5421,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5417,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5374,"src":"30192:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"},"id":5420,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":5418,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"30201:2:21","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3136","id":5419,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"30207:2:21","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"30201:8:21","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"}},"src":"30192:17:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5433,"nodeType":"IfStatement","src":"30188:106:21","trueBody":{"id":5432,"nodeType":"Block","src":"30211:83:21","statements":[{"expression":{"id":5426,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5422,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5374,"src":"30230:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"},"id":5425,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":5423,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"30239:2:21","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3136","id":5424,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"30245:2:21","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"30239:8:21","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"}},"src":"30230:17:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5427,"nodeType":"ExpressionStatement","src":"30230:17:21"},{"expression":{"id":5430,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5428,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5380,"src":"30266:6:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3136","id":5429,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"30276:2:21","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"30266:12:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5431,"nodeType":"ExpressionStatement","src":"30266:12:21"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5438,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5434,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5374,"src":"30312:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"},"id":5437,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":5435,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"30321:2:21","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"38","id":5436,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"30327:1:21","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"30321:7:21","typeDescriptions":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"}},"src":"30312:16:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5450,"nodeType":"IfStatement","src":"30308:103:21","trueBody":{"id":5449,"nodeType":"Block","src":"30330:81:21","statements":[{"expression":{"id":5443,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5439,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5374,"src":"30349:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"},"id":5442,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":5440,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"30358:2:21","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"38","id":5441,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"30364:1:21","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"30358:7:21","typeDescriptions":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"}},"src":"30349:16:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5444,"nodeType":"ExpressionStatement","src":"30349:16:21"},{"expression":{"id":5447,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5445,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5380,"src":"30384:6:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"38","id":5446,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"30394:1:21","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"30384:11:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5448,"nodeType":"ExpressionStatement","src":"30384:11:21"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5455,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5451,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5374,"src":"30429:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"},"id":5454,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":5452,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"30438:2:21","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"34","id":5453,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"30444:1:21","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"30438:7:21","typeDescriptions":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"}},"src":"30429:16:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5467,"nodeType":"IfStatement","src":"30425:103:21","trueBody":{"id":5466,"nodeType":"Block","src":"30447:81:21","statements":[{"expression":{"id":5460,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5456,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5374,"src":"30466:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"},"id":5459,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":5457,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"30475:2:21","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"34","id":5458,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"30481:1:21","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"30475:7:21","typeDescriptions":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"}},"src":"30466:16:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5461,"nodeType":"ExpressionStatement","src":"30466:16:21"},{"expression":{"id":5464,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5462,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5380,"src":"30501:6:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"34","id":5463,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"30511:1:21","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"30501:11:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5465,"nodeType":"ExpressionStatement","src":"30501:11:21"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5472,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5468,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5374,"src":"30546:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"id":5471,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":5469,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"30555:2:21","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"32","id":5470,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"30561:1:21","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"30555:7:21","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"}},"src":"30546:16:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5484,"nodeType":"IfStatement","src":"30542:103:21","trueBody":{"id":5483,"nodeType":"Block","src":"30564:81:21","statements":[{"expression":{"id":5477,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5473,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5374,"src":"30583:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"id":5476,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":5474,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"30592:2:21","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"32","id":5475,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"30598:1:21","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"30592:7:21","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"}},"src":"30583:16:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5478,"nodeType":"ExpressionStatement","src":"30583:16:21"},{"expression":{"id":5481,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5479,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5380,"src":"30618:6:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"32","id":5480,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"30628:1:21","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"30618:11:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5482,"nodeType":"ExpressionStatement","src":"30618:11:21"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5489,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5485,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5374,"src":"30663:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"id":5488,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":5486,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"30672:2:21","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"31","id":5487,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"30678:1:21","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"30672:7:21","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"}},"src":"30663:16:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5495,"nodeType":"IfStatement","src":"30659:68:21","trueBody":{"id":5494,"nodeType":"Block","src":"30681:46:21","statements":[{"expression":{"id":5492,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5490,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5380,"src":"30700:6:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":5491,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"30710:1:21","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"30700:11:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5493,"nodeType":"ExpressionStatement","src":"30700:11:21"}]}}]},{"expression":{"id":5497,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5380,"src":"30755:6:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5378,"id":5498,"nodeType":"Return","src":"30748:13:21"}]},"documentation":{"id":5372,"nodeType":"StructuredDocumentation","src":"29692:123:21","text":" @dev Return the log in base 10 of a positive value rounded towards zero.\n Returns 0 if given 0."},"id":5500,"implemented":true,"kind":"function","modifiers":[],"name":"log10","nameLocation":"29830:5:21","nodeType":"FunctionDefinition","parameters":{"id":5375,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5374,"mutability":"mutable","name":"value","nameLocation":"29844:5:21","nodeType":"VariableDeclaration","scope":5500,"src":"29836:13:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5373,"name":"uint256","nodeType":"ElementaryTypeName","src":"29836:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"29835:15:21"},"returnParameters":{"id":5378,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5377,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5500,"src":"29874:7:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5376,"name":"uint256","nodeType":"ElementaryTypeName","src":"29874:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"29873:9:21"},"scope":5668,"src":"29821:948:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5533,"nodeType":"Block","src":"31010:182:21","statements":[{"id":5532,"nodeType":"UncheckedBlock","src":"31021:164:21","statements":[{"assignments":[5512],"declarations":[{"constant":false,"id":5512,"mutability":"mutable","name":"result","nameLocation":"31054:6:21","nodeType":"VariableDeclaration","scope":5532,"src":"31046:14:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5511,"name":"uint256","nodeType":"ElementaryTypeName","src":"31046:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5516,"initialValue":{"arguments":[{"id":5514,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5503,"src":"31069:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5513,"name":"log10","nodeType":"Identifier","overloadedDeclarations":[5500,5534],"referencedDeclaration":5500,"src":"31063:5:21","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":5515,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31063:12:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"31046:29:21"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5530,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5517,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5512,"src":"31097:6:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":5528,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":5521,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5506,"src":"31139:8:21","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4059","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$4059","typeString":"enum Math.Rounding"}],"id":5520,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5667,"src":"31122:16:21","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$4059_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":5522,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31122:26:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5527,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5525,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":5523,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31152:2:21","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"id":5524,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5512,"src":"31158:6:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31152:12:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":5526,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5503,"src":"31167:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31152:20:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"31122:50:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":5518,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7433,"src":"31106:8:21","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7433_$","typeString":"type(library SafeCast)"}},"id":5519,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"31115:6:21","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7432,"src":"31106:15:21","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":5529,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31106:67:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31097:76:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5510,"id":5531,"nodeType":"Return","src":"31090:83:21"}]}]},"documentation":{"id":5501,"nodeType":"StructuredDocumentation","src":"30777:146:21","text":" @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."},"id":5534,"implemented":true,"kind":"function","modifiers":[],"name":"log10","nameLocation":"30938:5:21","nodeType":"FunctionDefinition","parameters":{"id":5507,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5503,"mutability":"mutable","name":"value","nameLocation":"30952:5:21","nodeType":"VariableDeclaration","scope":5534,"src":"30944:13:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5502,"name":"uint256","nodeType":"ElementaryTypeName","src":"30944:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5506,"mutability":"mutable","name":"rounding","nameLocation":"30968:8:21","nodeType":"VariableDeclaration","scope":5534,"src":"30959:17:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4059","typeString":"enum Math.Rounding"},"typeName":{"id":5505,"nodeType":"UserDefinedTypeName","pathNode":{"id":5504,"name":"Rounding","nameLocations":["30959:8:21"],"nodeType":"IdentifierPath","referencedDeclaration":4059,"src":"30959:8:21"},"referencedDeclaration":4059,"src":"30959:8:21","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4059","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"30943:34:21"},"returnParameters":{"id":5510,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5509,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5534,"src":"31001:7:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5508,"name":"uint256","nodeType":"ElementaryTypeName","src":"31001:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"31000:9:21"},"scope":5668,"src":"30929:263:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5610,"nodeType":"Block","src":"31518:686:21","statements":[{"expression":{"id":5551,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5542,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5540,"src":"31602:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5550,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5547,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5545,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5537,"src":"31622:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30786666666666666666666666666666666666666666666666666666666666666666","id":5546,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31626:34:21","typeDescriptions":{"typeIdentifier":"t_rational_340282366920938463463374607431768211455_by_1","typeString":"int_const 3402...(31 digits omitted)...1455"},"value":"0xffffffffffffffffffffffffffffffff"},"src":"31622:38:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":5543,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7433,"src":"31606:8:21","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7433_$","typeString":"type(library SafeCast)"}},"id":5544,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"31615:6:21","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7432,"src":"31606:15:21","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":5548,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31606:55:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"37","id":5549,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31665:1:21","typeDescriptions":{"typeIdentifier":"t_rational_7_by_1","typeString":"int_const 7"},"value":"7"},"src":"31606:60:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31602:64:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5552,"nodeType":"ExpressionStatement","src":"31602:64:21"},{"expression":{"id":5565,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5553,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5540,"src":"31744:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5564,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5561,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5558,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5556,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5537,"src":"31766:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":5557,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5540,"src":"31771:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31766:6:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5559,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"31765:8:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"307866666666666666666666666666666666","id":5560,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31776:18:21","typeDescriptions":{"typeIdentifier":"t_rational_18446744073709551615_by_1","typeString":"int_const 18446744073709551615"},"value":"0xffffffffffffffff"},"src":"31765:29:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":5554,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7433,"src":"31749:8:21","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7433_$","typeString":"type(library SafeCast)"}},"id":5555,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"31758:6:21","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7432,"src":"31749:15:21","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":5562,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31749:46:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"36","id":5563,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31799:1:21","typeDescriptions":{"typeIdentifier":"t_rational_6_by_1","typeString":"int_const 6"},"value":"6"},"src":"31749:51:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31744:56:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5566,"nodeType":"ExpressionStatement","src":"31744:56:21"},{"expression":{"id":5579,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5567,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5540,"src":"31877:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5578,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5575,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5572,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5570,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5537,"src":"31899:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":5571,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5540,"src":"31904:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31899:6:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5573,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"31898:8:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30786666666666666666","id":5574,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31909:10:21","typeDescriptions":{"typeIdentifier":"t_rational_4294967295_by_1","typeString":"int_const 4294967295"},"value":"0xffffffff"},"src":"31898:21:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":5568,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7433,"src":"31882:8:21","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7433_$","typeString":"type(library SafeCast)"}},"id":5569,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"31891:6:21","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7432,"src":"31882:15:21","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":5576,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31882:38:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"35","id":5577,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31924:1:21","typeDescriptions":{"typeIdentifier":"t_rational_5_by_1","typeString":"int_const 5"},"value":"5"},"src":"31882:43:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31877:48:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5580,"nodeType":"ExpressionStatement","src":"31877:48:21"},{"expression":{"id":5593,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5581,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5540,"src":"32002:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5592,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5589,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5586,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5584,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5537,"src":"32024:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":5585,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5540,"src":"32029:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"32024:6:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5587,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"32023:8:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"307866666666","id":5588,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"32034:6:21","typeDescriptions":{"typeIdentifier":"t_rational_65535_by_1","typeString":"int_const 65535"},"value":"0xffff"},"src":"32023:17:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":5582,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7433,"src":"32007:8:21","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7433_$","typeString":"type(library SafeCast)"}},"id":5583,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"32016:6:21","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7432,"src":"32007:15:21","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":5590,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"32007:34:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"34","id":5591,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"32045:1:21","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"32007:39:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"32002:44:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5594,"nodeType":"ExpressionStatement","src":"32002:44:21"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5608,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5597,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5595,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5540,"src":"32154:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"33","id":5596,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"32159:1:21","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"src":"32154:6:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5598,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"32153:8:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5606,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5603,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5601,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5537,"src":"32181:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":5602,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5540,"src":"32186:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"32181:6:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5604,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"32180:8:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30786666","id":5605,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"32191:4:21","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"0xff"},"src":"32180:15:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":5599,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7433,"src":"32164:8:21","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7433_$","typeString":"type(library SafeCast)"}},"id":5600,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"32173:6:21","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7432,"src":"32164:15:21","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":5607,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"32164:32:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"32153:43:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5541,"id":5609,"nodeType":"Return","src":"32146:50:21"}]},"documentation":{"id":5535,"nodeType":"StructuredDocumentation","src":"31200:251:21","text":" @dev Return the log in base 256 of a positive value rounded towards zero.\n Returns 0 if given 0.\n Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string."},"id":5611,"implemented":true,"kind":"function","modifiers":[],"name":"log256","nameLocation":"31466:6:21","nodeType":"FunctionDefinition","parameters":{"id":5538,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5537,"mutability":"mutable","name":"x","nameLocation":"31481:1:21","nodeType":"VariableDeclaration","scope":5611,"src":"31473:9:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5536,"name":"uint256","nodeType":"ElementaryTypeName","src":"31473:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"31472:11:21"},"returnParameters":{"id":5541,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5540,"mutability":"mutable","name":"r","nameLocation":"31515:1:21","nodeType":"VariableDeclaration","scope":5611,"src":"31507:9:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5539,"name":"uint256","nodeType":"ElementaryTypeName","src":"31507:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"31506:11:21"},"scope":5668,"src":"31457:747:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5647,"nodeType":"Block","src":"32447:189:21","statements":[{"id":5646,"nodeType":"UncheckedBlock","src":"32458:171:21","statements":[{"assignments":[5623],"declarations":[{"constant":false,"id":5623,"mutability":"mutable","name":"result","nameLocation":"32491:6:21","nodeType":"VariableDeclaration","scope":5646,"src":"32483:14:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5622,"name":"uint256","nodeType":"ElementaryTypeName","src":"32483:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5627,"initialValue":{"arguments":[{"id":5625,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5614,"src":"32507:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5624,"name":"log256","nodeType":"Identifier","overloadedDeclarations":[5611,5648],"referencedDeclaration":5611,"src":"32500:6:21","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":5626,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"32500:13:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"32483:30:21"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5644,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5628,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5623,"src":"32535:6:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":5642,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":5632,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5617,"src":"32577:8:21","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4059","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$4059","typeString":"enum Math.Rounding"}],"id":5631,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5667,"src":"32560:16:21","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$4059_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":5633,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"32560:26:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5641,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5639,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":5634,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"32590:1:21","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5637,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5635,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5623,"src":"32596:6:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"33","id":5636,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"32606:1:21","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"src":"32596:11:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5638,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"32595:13:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"32590:18:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":5640,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5614,"src":"32611:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"32590:26:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"32560:56:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":5629,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7433,"src":"32544:8:21","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7433_$","typeString":"type(library SafeCast)"}},"id":5630,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"32553:6:21","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7432,"src":"32544:15:21","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":5643,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"32544:73:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"32535:82:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5621,"id":5645,"nodeType":"Return","src":"32528:89:21"}]}]},"documentation":{"id":5612,"nodeType":"StructuredDocumentation","src":"32212:147:21","text":" @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."},"id":5648,"implemented":true,"kind":"function","modifiers":[],"name":"log256","nameLocation":"32374:6:21","nodeType":"FunctionDefinition","parameters":{"id":5618,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5614,"mutability":"mutable","name":"value","nameLocation":"32389:5:21","nodeType":"VariableDeclaration","scope":5648,"src":"32381:13:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5613,"name":"uint256","nodeType":"ElementaryTypeName","src":"32381:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5617,"mutability":"mutable","name":"rounding","nameLocation":"32405:8:21","nodeType":"VariableDeclaration","scope":5648,"src":"32396:17:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4059","typeString":"enum Math.Rounding"},"typeName":{"id":5616,"nodeType":"UserDefinedTypeName","pathNode":{"id":5615,"name":"Rounding","nameLocations":["32396:8:21"],"nodeType":"IdentifierPath","referencedDeclaration":4059,"src":"32396:8:21"},"referencedDeclaration":4059,"src":"32396:8:21","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4059","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"32380:34:21"},"returnParameters":{"id":5621,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5620,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5648,"src":"32438:7:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5619,"name":"uint256","nodeType":"ElementaryTypeName","src":"32438:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"32437:9:21"},"scope":5668,"src":"32365:271:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5666,"nodeType":"Block","src":"32839:50:21","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":5664,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":5662,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":5659,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5652,"src":"32863:8:21","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4059","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$4059","typeString":"enum Math.Rounding"}],"id":5658,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"32857:5:21","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":5657,"name":"uint8","nodeType":"ElementaryTypeName","src":"32857:5:21","typeDescriptions":{}}},"id":5660,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"32857:15:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"%","rightExpression":{"hexValue":"32","id":5661,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"32875:1:21","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"32857:19:21","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"31","id":5663,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"32880:1:21","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"32857:24:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":5656,"id":5665,"nodeType":"Return","src":"32850:31:21"}]},"documentation":{"id":5649,"nodeType":"StructuredDocumentation","src":"32644:115:21","text":" @dev Returns whether a provided rounding mode is considered rounding up for unsigned integers."},"id":5667,"implemented":true,"kind":"function","modifiers":[],"name":"unsignedRoundsUp","nameLocation":"32774:16:21","nodeType":"FunctionDefinition","parameters":{"id":5653,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5652,"mutability":"mutable","name":"rounding","nameLocation":"32800:8:21","nodeType":"VariableDeclaration","scope":5667,"src":"32791:17:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4059","typeString":"enum Math.Rounding"},"typeName":{"id":5651,"nodeType":"UserDefinedTypeName","pathNode":{"id":5650,"name":"Rounding","nameLocations":["32791:8:21"],"nodeType":"IdentifierPath","referencedDeclaration":4059,"src":"32791:8:21"},"referencedDeclaration":4059,"src":"32791:8:21","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4059","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"32790:19:21"},"returnParameters":{"id":5656,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5655,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5667,"src":"32833:4:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5654,"name":"bool","nodeType":"ElementaryTypeName","src":"32833:4:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"32832:6:21"},"scope":5668,"src":"32765:124:21","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":5669,"src":"292:32600:21","usedErrors":[],"usedEvents":[]}],"src":"106:32788:21"},"id":21},"@openzeppelin/contracts/utils/math/SafeCast.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/math/SafeCast.sol","exportedSymbols":{"SafeCast":[7433]},"id":7434,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":5670,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"196:24:22"},{"abstract":false,"baseContracts":[],"canonicalName":"SafeCast","contractDependencies":[],"contractKind":"library","documentation":{"id":5671,"nodeType":"StructuredDocumentation","src":"224:561:22","text":" @dev Wrappers over Solidity's uintXX/intXX/bool casting operators with added overflow\n checks.\n Downcasting from uint256/int256 in Solidity does not revert on overflow. This can\n easily result in undesired exploitation or bugs, since developers usually\n assume that overflows raise errors. `SafeCast` restores this intuition by\n reverting the transaction when such an operation overflows.\n Using this library instead of the unchecked operations eliminates an entire\n class of bugs, so it's recommended to use it always."},"fullyImplemented":true,"id":7433,"linearizedBaseContracts":[7433],"name":"SafeCast","nameLocation":"795:8:22","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":5672,"nodeType":"StructuredDocumentation","src":"811:70:22","text":" @dev Value doesn't fit in an uint of `bits` size."},"errorSelector":"6dfcc650","id":5678,"name":"SafeCastOverflowedUintDowncast","nameLocation":"893:30:22","nodeType":"ErrorDefinition","parameters":{"id":5677,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5674,"mutability":"mutable","name":"bits","nameLocation":"930:4:22","nodeType":"VariableDeclaration","scope":5678,"src":"924:10:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":5673,"name":"uint8","nodeType":"ElementaryTypeName","src":"924:5:22","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":5676,"mutability":"mutable","name":"value","nameLocation":"944:5:22","nodeType":"VariableDeclaration","scope":5678,"src":"936:13:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5675,"name":"uint256","nodeType":"ElementaryTypeName","src":"936:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"923:27:22"},"src":"887:64:22"},{"documentation":{"id":5679,"nodeType":"StructuredDocumentation","src":"959:77:22","text":" @dev An int value doesn't fit in an uint of `bits` size."},"errorSelector":"a8ce4432","id":5683,"name":"SafeCastOverflowedIntToUint","nameLocation":"1048:27:22","nodeType":"ErrorDefinition","parameters":{"id":5682,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5681,"mutability":"mutable","name":"value","nameLocation":"1083:5:22","nodeType":"VariableDeclaration","scope":5683,"src":"1076:12:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5680,"name":"int256","nodeType":"ElementaryTypeName","src":"1076:6:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1075:14:22"},"src":"1042:48:22"},{"documentation":{"id":5684,"nodeType":"StructuredDocumentation","src":"1098:69:22","text":" @dev Value doesn't fit in an int of `bits` size."},"errorSelector":"327269a7","id":5690,"name":"SafeCastOverflowedIntDowncast","nameLocation":"1179:29:22","nodeType":"ErrorDefinition","parameters":{"id":5689,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5686,"mutability":"mutable","name":"bits","nameLocation":"1215:4:22","nodeType":"VariableDeclaration","scope":5690,"src":"1209:10:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":5685,"name":"uint8","nodeType":"ElementaryTypeName","src":"1209:5:22","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":5688,"mutability":"mutable","name":"value","nameLocation":"1228:5:22","nodeType":"VariableDeclaration","scope":5690,"src":"1221:12:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5687,"name":"int256","nodeType":"ElementaryTypeName","src":"1221:6:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1208:26:22"},"src":"1173:62:22"},{"documentation":{"id":5691,"nodeType":"StructuredDocumentation","src":"1243:77:22","text":" @dev An uint value doesn't fit in an int of `bits` size."},"errorSelector":"24775e06","id":5695,"name":"SafeCastOverflowedUintToInt","nameLocation":"1332:27:22","nodeType":"ErrorDefinition","parameters":{"id":5694,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5693,"mutability":"mutable","name":"value","nameLocation":"1368:5:22","nodeType":"VariableDeclaration","scope":5695,"src":"1360:13:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5692,"name":"uint256","nodeType":"ElementaryTypeName","src":"1360:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1359:15:22"},"src":"1326:49:22"},{"body":{"id":5722,"nodeType":"Block","src":"1744:157:22","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5709,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5703,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5698,"src":"1759:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5706,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1772:7:22","typeDescriptions":{"typeIdentifier":"t_type$_t_uint248_$","typeString":"type(uint248)"},"typeName":{"id":5705,"name":"uint248","nodeType":"ElementaryTypeName","src":"1772:7:22","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint248_$","typeString":"type(uint248)"}],"id":5704,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"1767:4:22","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5707,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1767:13:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint248","typeString":"type(uint248)"}},"id":5708,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1781:3:22","memberName":"max","nodeType":"MemberAccess","src":"1767:17:22","typeDescriptions":{"typeIdentifier":"t_uint248","typeString":"uint248"}},"src":"1759:25:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5716,"nodeType":"IfStatement","src":"1755:107:22","trueBody":{"id":5715,"nodeType":"Block","src":"1786:76:22","statements":[{"errorCall":{"arguments":[{"hexValue":"323438","id":5711,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1839:3:22","typeDescriptions":{"typeIdentifier":"t_rational_248_by_1","typeString":"int_const 248"},"value":"248"},{"id":5712,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5698,"src":"1844:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_248_by_1","typeString":"int_const 248"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5710,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5678,"src":"1808:30:22","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":5713,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1808:42:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":5714,"nodeType":"RevertStatement","src":"1801:49:22"}]}},{"expression":{"arguments":[{"id":5719,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5698,"src":"1887:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5718,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1879:7:22","typeDescriptions":{"typeIdentifier":"t_type$_t_uint248_$","typeString":"type(uint248)"},"typeName":{"id":5717,"name":"uint248","nodeType":"ElementaryTypeName","src":"1879:7:22","typeDescriptions":{}}},"id":5720,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1879:14:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint248","typeString":"uint248"}},"functionReturnParameters":5702,"id":5721,"nodeType":"Return","src":"1872:21:22"}]},"documentation":{"id":5696,"nodeType":"StructuredDocumentation","src":"1383:289:22","text":" @dev Returns the downcasted uint248 from uint256, reverting on\n overflow (when the input is greater than largest uint248).\n Counterpart to Solidity's `uint248` operator.\n Requirements:\n - input must fit into 248 bits"},"id":5723,"implemented":true,"kind":"function","modifiers":[],"name":"toUint248","nameLocation":"1687:9:22","nodeType":"FunctionDefinition","parameters":{"id":5699,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5698,"mutability":"mutable","name":"value","nameLocation":"1705:5:22","nodeType":"VariableDeclaration","scope":5723,"src":"1697:13:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5697,"name":"uint256","nodeType":"ElementaryTypeName","src":"1697:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1696:15:22"},"returnParameters":{"id":5702,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5701,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5723,"src":"1735:7:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint248","typeString":"uint248"},"typeName":{"id":5700,"name":"uint248","nodeType":"ElementaryTypeName","src":"1735:7:22","typeDescriptions":{"typeIdentifier":"t_uint248","typeString":"uint248"}},"visibility":"internal"}],"src":"1734:9:22"},"scope":7433,"src":"1678:223:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5750,"nodeType":"Block","src":"2270:157:22","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5737,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5731,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5726,"src":"2285:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5734,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2298:7:22","typeDescriptions":{"typeIdentifier":"t_type$_t_uint240_$","typeString":"type(uint240)"},"typeName":{"id":5733,"name":"uint240","nodeType":"ElementaryTypeName","src":"2298:7:22","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint240_$","typeString":"type(uint240)"}],"id":5732,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"2293:4:22","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5735,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2293:13:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint240","typeString":"type(uint240)"}},"id":5736,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2307:3:22","memberName":"max","nodeType":"MemberAccess","src":"2293:17:22","typeDescriptions":{"typeIdentifier":"t_uint240","typeString":"uint240"}},"src":"2285:25:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5744,"nodeType":"IfStatement","src":"2281:107:22","trueBody":{"id":5743,"nodeType":"Block","src":"2312:76:22","statements":[{"errorCall":{"arguments":[{"hexValue":"323430","id":5739,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2365:3:22","typeDescriptions":{"typeIdentifier":"t_rational_240_by_1","typeString":"int_const 240"},"value":"240"},{"id":5740,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5726,"src":"2370:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_240_by_1","typeString":"int_const 240"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5738,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5678,"src":"2334:30:22","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":5741,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2334:42:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":5742,"nodeType":"RevertStatement","src":"2327:49:22"}]}},{"expression":{"arguments":[{"id":5747,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5726,"src":"2413:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5746,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2405:7:22","typeDescriptions":{"typeIdentifier":"t_type$_t_uint240_$","typeString":"type(uint240)"},"typeName":{"id":5745,"name":"uint240","nodeType":"ElementaryTypeName","src":"2405:7:22","typeDescriptions":{}}},"id":5748,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2405:14:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint240","typeString":"uint240"}},"functionReturnParameters":5730,"id":5749,"nodeType":"Return","src":"2398:21:22"}]},"documentation":{"id":5724,"nodeType":"StructuredDocumentation","src":"1909:289:22","text":" @dev Returns the downcasted uint240 from uint256, reverting on\n overflow (when the input is greater than largest uint240).\n Counterpart to Solidity's `uint240` operator.\n Requirements:\n - input must fit into 240 bits"},"id":5751,"implemented":true,"kind":"function","modifiers":[],"name":"toUint240","nameLocation":"2213:9:22","nodeType":"FunctionDefinition","parameters":{"id":5727,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5726,"mutability":"mutable","name":"value","nameLocation":"2231:5:22","nodeType":"VariableDeclaration","scope":5751,"src":"2223:13:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5725,"name":"uint256","nodeType":"ElementaryTypeName","src":"2223:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2222:15:22"},"returnParameters":{"id":5730,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5729,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5751,"src":"2261:7:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint240","typeString":"uint240"},"typeName":{"id":5728,"name":"uint240","nodeType":"ElementaryTypeName","src":"2261:7:22","typeDescriptions":{"typeIdentifier":"t_uint240","typeString":"uint240"}},"visibility":"internal"}],"src":"2260:9:22"},"scope":7433,"src":"2204:223:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5778,"nodeType":"Block","src":"2796:157:22","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5765,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5759,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5754,"src":"2811:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5762,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2824:7:22","typeDescriptions":{"typeIdentifier":"t_type$_t_uint232_$","typeString":"type(uint232)"},"typeName":{"id":5761,"name":"uint232","nodeType":"ElementaryTypeName","src":"2824:7:22","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint232_$","typeString":"type(uint232)"}],"id":5760,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"2819:4:22","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5763,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2819:13:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint232","typeString":"type(uint232)"}},"id":5764,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2833:3:22","memberName":"max","nodeType":"MemberAccess","src":"2819:17:22","typeDescriptions":{"typeIdentifier":"t_uint232","typeString":"uint232"}},"src":"2811:25:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5772,"nodeType":"IfStatement","src":"2807:107:22","trueBody":{"id":5771,"nodeType":"Block","src":"2838:76:22","statements":[{"errorCall":{"arguments":[{"hexValue":"323332","id":5767,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2891:3:22","typeDescriptions":{"typeIdentifier":"t_rational_232_by_1","typeString":"int_const 232"},"value":"232"},{"id":5768,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5754,"src":"2896:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_232_by_1","typeString":"int_const 232"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5766,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5678,"src":"2860:30:22","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":5769,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2860:42:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":5770,"nodeType":"RevertStatement","src":"2853:49:22"}]}},{"expression":{"arguments":[{"id":5775,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5754,"src":"2939:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5774,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2931:7:22","typeDescriptions":{"typeIdentifier":"t_type$_t_uint232_$","typeString":"type(uint232)"},"typeName":{"id":5773,"name":"uint232","nodeType":"ElementaryTypeName","src":"2931:7:22","typeDescriptions":{}}},"id":5776,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2931:14:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint232","typeString":"uint232"}},"functionReturnParameters":5758,"id":5777,"nodeType":"Return","src":"2924:21:22"}]},"documentation":{"id":5752,"nodeType":"StructuredDocumentation","src":"2435:289:22","text":" @dev Returns the downcasted uint232 from uint256, reverting on\n overflow (when the input is greater than largest uint232).\n Counterpart to Solidity's `uint232` operator.\n Requirements:\n - input must fit into 232 bits"},"id":5779,"implemented":true,"kind":"function","modifiers":[],"name":"toUint232","nameLocation":"2739:9:22","nodeType":"FunctionDefinition","parameters":{"id":5755,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5754,"mutability":"mutable","name":"value","nameLocation":"2757:5:22","nodeType":"VariableDeclaration","scope":5779,"src":"2749:13:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5753,"name":"uint256","nodeType":"ElementaryTypeName","src":"2749:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2748:15:22"},"returnParameters":{"id":5758,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5757,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5779,"src":"2787:7:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint232","typeString":"uint232"},"typeName":{"id":5756,"name":"uint232","nodeType":"ElementaryTypeName","src":"2787:7:22","typeDescriptions":{"typeIdentifier":"t_uint232","typeString":"uint232"}},"visibility":"internal"}],"src":"2786:9:22"},"scope":7433,"src":"2730:223:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5806,"nodeType":"Block","src":"3322:157:22","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5793,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5787,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5782,"src":"3337:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5790,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3350:7:22","typeDescriptions":{"typeIdentifier":"t_type$_t_uint224_$","typeString":"type(uint224)"},"typeName":{"id":5789,"name":"uint224","nodeType":"ElementaryTypeName","src":"3350:7:22","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint224_$","typeString":"type(uint224)"}],"id":5788,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"3345:4:22","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5791,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3345:13:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint224","typeString":"type(uint224)"}},"id":5792,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3359:3:22","memberName":"max","nodeType":"MemberAccess","src":"3345:17:22","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"src":"3337:25:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5800,"nodeType":"IfStatement","src":"3333:107:22","trueBody":{"id":5799,"nodeType":"Block","src":"3364:76:22","statements":[{"errorCall":{"arguments":[{"hexValue":"323234","id":5795,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3417:3:22","typeDescriptions":{"typeIdentifier":"t_rational_224_by_1","typeString":"int_const 224"},"value":"224"},{"id":5796,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5782,"src":"3422:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_224_by_1","typeString":"int_const 224"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5794,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5678,"src":"3386:30:22","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":5797,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3386:42:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":5798,"nodeType":"RevertStatement","src":"3379:49:22"}]}},{"expression":{"arguments":[{"id":5803,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5782,"src":"3465:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5802,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3457:7:22","typeDescriptions":{"typeIdentifier":"t_type$_t_uint224_$","typeString":"type(uint224)"},"typeName":{"id":5801,"name":"uint224","nodeType":"ElementaryTypeName","src":"3457:7:22","typeDescriptions":{}}},"id":5804,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3457:14:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"functionReturnParameters":5786,"id":5805,"nodeType":"Return","src":"3450:21:22"}]},"documentation":{"id":5780,"nodeType":"StructuredDocumentation","src":"2961:289:22","text":" @dev Returns the downcasted uint224 from uint256, reverting on\n overflow (when the input is greater than largest uint224).\n Counterpart to Solidity's `uint224` operator.\n Requirements:\n - input must fit into 224 bits"},"id":5807,"implemented":true,"kind":"function","modifiers":[],"name":"toUint224","nameLocation":"3265:9:22","nodeType":"FunctionDefinition","parameters":{"id":5783,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5782,"mutability":"mutable","name":"value","nameLocation":"3283:5:22","nodeType":"VariableDeclaration","scope":5807,"src":"3275:13:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5781,"name":"uint256","nodeType":"ElementaryTypeName","src":"3275:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3274:15:22"},"returnParameters":{"id":5786,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5785,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5807,"src":"3313:7:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"},"typeName":{"id":5784,"name":"uint224","nodeType":"ElementaryTypeName","src":"3313:7:22","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"visibility":"internal"}],"src":"3312:9:22"},"scope":7433,"src":"3256:223:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5834,"nodeType":"Block","src":"3848:157:22","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5821,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5815,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5810,"src":"3863:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5818,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3876:7:22","typeDescriptions":{"typeIdentifier":"t_type$_t_uint216_$","typeString":"type(uint216)"},"typeName":{"id":5817,"name":"uint216","nodeType":"ElementaryTypeName","src":"3876:7:22","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint216_$","typeString":"type(uint216)"}],"id":5816,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"3871:4:22","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5819,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3871:13:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint216","typeString":"type(uint216)"}},"id":5820,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3885:3:22","memberName":"max","nodeType":"MemberAccess","src":"3871:17:22","typeDescriptions":{"typeIdentifier":"t_uint216","typeString":"uint216"}},"src":"3863:25:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5828,"nodeType":"IfStatement","src":"3859:107:22","trueBody":{"id":5827,"nodeType":"Block","src":"3890:76:22","statements":[{"errorCall":{"arguments":[{"hexValue":"323136","id":5823,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3943:3:22","typeDescriptions":{"typeIdentifier":"t_rational_216_by_1","typeString":"int_const 216"},"value":"216"},{"id":5824,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5810,"src":"3948:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_216_by_1","typeString":"int_const 216"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5822,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5678,"src":"3912:30:22","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":5825,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3912:42:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":5826,"nodeType":"RevertStatement","src":"3905:49:22"}]}},{"expression":{"arguments":[{"id":5831,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5810,"src":"3991:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5830,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3983:7:22","typeDescriptions":{"typeIdentifier":"t_type$_t_uint216_$","typeString":"type(uint216)"},"typeName":{"id":5829,"name":"uint216","nodeType":"ElementaryTypeName","src":"3983:7:22","typeDescriptions":{}}},"id":5832,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3983:14:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint216","typeString":"uint216"}},"functionReturnParameters":5814,"id":5833,"nodeType":"Return","src":"3976:21:22"}]},"documentation":{"id":5808,"nodeType":"StructuredDocumentation","src":"3487:289:22","text":" @dev Returns the downcasted uint216 from uint256, reverting on\n overflow (when the input is greater than largest uint216).\n Counterpart to Solidity's `uint216` operator.\n Requirements:\n - input must fit into 216 bits"},"id":5835,"implemented":true,"kind":"function","modifiers":[],"name":"toUint216","nameLocation":"3791:9:22","nodeType":"FunctionDefinition","parameters":{"id":5811,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5810,"mutability":"mutable","name":"value","nameLocation":"3809:5:22","nodeType":"VariableDeclaration","scope":5835,"src":"3801:13:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5809,"name":"uint256","nodeType":"ElementaryTypeName","src":"3801:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3800:15:22"},"returnParameters":{"id":5814,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5813,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5835,"src":"3839:7:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint216","typeString":"uint216"},"typeName":{"id":5812,"name":"uint216","nodeType":"ElementaryTypeName","src":"3839:7:22","typeDescriptions":{"typeIdentifier":"t_uint216","typeString":"uint216"}},"visibility":"internal"}],"src":"3838:9:22"},"scope":7433,"src":"3782:223:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5862,"nodeType":"Block","src":"4374:157:22","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5849,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5843,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5838,"src":"4389:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5846,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4402:7:22","typeDescriptions":{"typeIdentifier":"t_type$_t_uint208_$","typeString":"type(uint208)"},"typeName":{"id":5845,"name":"uint208","nodeType":"ElementaryTypeName","src":"4402:7:22","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint208_$","typeString":"type(uint208)"}],"id":5844,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"4397:4:22","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5847,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4397:13:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint208","typeString":"type(uint208)"}},"id":5848,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4411:3:22","memberName":"max","nodeType":"MemberAccess","src":"4397:17:22","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"src":"4389:25:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5856,"nodeType":"IfStatement","src":"4385:107:22","trueBody":{"id":5855,"nodeType":"Block","src":"4416:76:22","statements":[{"errorCall":{"arguments":[{"hexValue":"323038","id":5851,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4469:3:22","typeDescriptions":{"typeIdentifier":"t_rational_208_by_1","typeString":"int_const 208"},"value":"208"},{"id":5852,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5838,"src":"4474:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_208_by_1","typeString":"int_const 208"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5850,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5678,"src":"4438:30:22","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":5853,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4438:42:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":5854,"nodeType":"RevertStatement","src":"4431:49:22"}]}},{"expression":{"arguments":[{"id":5859,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5838,"src":"4517:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5858,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4509:7:22","typeDescriptions":{"typeIdentifier":"t_type$_t_uint208_$","typeString":"type(uint208)"},"typeName":{"id":5857,"name":"uint208","nodeType":"ElementaryTypeName","src":"4509:7:22","typeDescriptions":{}}},"id":5860,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4509:14:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"functionReturnParameters":5842,"id":5861,"nodeType":"Return","src":"4502:21:22"}]},"documentation":{"id":5836,"nodeType":"StructuredDocumentation","src":"4013:289:22","text":" @dev Returns the downcasted uint208 from uint256, reverting on\n overflow (when the input is greater than largest uint208).\n Counterpart to Solidity's `uint208` operator.\n Requirements:\n - input must fit into 208 bits"},"id":5863,"implemented":true,"kind":"function","modifiers":[],"name":"toUint208","nameLocation":"4317:9:22","nodeType":"FunctionDefinition","parameters":{"id":5839,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5838,"mutability":"mutable","name":"value","nameLocation":"4335:5:22","nodeType":"VariableDeclaration","scope":5863,"src":"4327:13:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5837,"name":"uint256","nodeType":"ElementaryTypeName","src":"4327:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4326:15:22"},"returnParameters":{"id":5842,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5841,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5863,"src":"4365:7:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"},"typeName":{"id":5840,"name":"uint208","nodeType":"ElementaryTypeName","src":"4365:7:22","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"visibility":"internal"}],"src":"4364:9:22"},"scope":7433,"src":"4308:223:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5890,"nodeType":"Block","src":"4900:157:22","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5877,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5871,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5866,"src":"4915:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5874,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4928:7:22","typeDescriptions":{"typeIdentifier":"t_type$_t_uint200_$","typeString":"type(uint200)"},"typeName":{"id":5873,"name":"uint200","nodeType":"ElementaryTypeName","src":"4928:7:22","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint200_$","typeString":"type(uint200)"}],"id":5872,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"4923:4:22","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5875,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4923:13:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint200","typeString":"type(uint200)"}},"id":5876,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4937:3:22","memberName":"max","nodeType":"MemberAccess","src":"4923:17:22","typeDescriptions":{"typeIdentifier":"t_uint200","typeString":"uint200"}},"src":"4915:25:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5884,"nodeType":"IfStatement","src":"4911:107:22","trueBody":{"id":5883,"nodeType":"Block","src":"4942:76:22","statements":[{"errorCall":{"arguments":[{"hexValue":"323030","id":5879,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4995:3:22","typeDescriptions":{"typeIdentifier":"t_rational_200_by_1","typeString":"int_const 200"},"value":"200"},{"id":5880,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5866,"src":"5000:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_200_by_1","typeString":"int_const 200"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5878,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5678,"src":"4964:30:22","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":5881,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4964:42:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":5882,"nodeType":"RevertStatement","src":"4957:49:22"}]}},{"expression":{"arguments":[{"id":5887,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5866,"src":"5043:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5886,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5035:7:22","typeDescriptions":{"typeIdentifier":"t_type$_t_uint200_$","typeString":"type(uint200)"},"typeName":{"id":5885,"name":"uint200","nodeType":"ElementaryTypeName","src":"5035:7:22","typeDescriptions":{}}},"id":5888,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5035:14:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint200","typeString":"uint200"}},"functionReturnParameters":5870,"id":5889,"nodeType":"Return","src":"5028:21:22"}]},"documentation":{"id":5864,"nodeType":"StructuredDocumentation","src":"4539:289:22","text":" @dev Returns the downcasted uint200 from uint256, reverting on\n overflow (when the input is greater than largest uint200).\n Counterpart to Solidity's `uint200` operator.\n Requirements:\n - input must fit into 200 bits"},"id":5891,"implemented":true,"kind":"function","modifiers":[],"name":"toUint200","nameLocation":"4843:9:22","nodeType":"FunctionDefinition","parameters":{"id":5867,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5866,"mutability":"mutable","name":"value","nameLocation":"4861:5:22","nodeType":"VariableDeclaration","scope":5891,"src":"4853:13:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5865,"name":"uint256","nodeType":"ElementaryTypeName","src":"4853:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4852:15:22"},"returnParameters":{"id":5870,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5869,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5891,"src":"4891:7:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint200","typeString":"uint200"},"typeName":{"id":5868,"name":"uint200","nodeType":"ElementaryTypeName","src":"4891:7:22","typeDescriptions":{"typeIdentifier":"t_uint200","typeString":"uint200"}},"visibility":"internal"}],"src":"4890:9:22"},"scope":7433,"src":"4834:223:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5918,"nodeType":"Block","src":"5426:157:22","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5905,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5899,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5894,"src":"5441:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5902,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5454:7:22","typeDescriptions":{"typeIdentifier":"t_type$_t_uint192_$","typeString":"type(uint192)"},"typeName":{"id":5901,"name":"uint192","nodeType":"ElementaryTypeName","src":"5454:7:22","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint192_$","typeString":"type(uint192)"}],"id":5900,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"5449:4:22","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5903,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5449:13:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint192","typeString":"type(uint192)"}},"id":5904,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"5463:3:22","memberName":"max","nodeType":"MemberAccess","src":"5449:17:22","typeDescriptions":{"typeIdentifier":"t_uint192","typeString":"uint192"}},"src":"5441:25:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5912,"nodeType":"IfStatement","src":"5437:107:22","trueBody":{"id":5911,"nodeType":"Block","src":"5468:76:22","statements":[{"errorCall":{"arguments":[{"hexValue":"313932","id":5907,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5521:3:22","typeDescriptions":{"typeIdentifier":"t_rational_192_by_1","typeString":"int_const 192"},"value":"192"},{"id":5908,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5894,"src":"5526:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_192_by_1","typeString":"int_const 192"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5906,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5678,"src":"5490:30:22","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":5909,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5490:42:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":5910,"nodeType":"RevertStatement","src":"5483:49:22"}]}},{"expression":{"arguments":[{"id":5915,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5894,"src":"5569:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5914,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5561:7:22","typeDescriptions":{"typeIdentifier":"t_type$_t_uint192_$","typeString":"type(uint192)"},"typeName":{"id":5913,"name":"uint192","nodeType":"ElementaryTypeName","src":"5561:7:22","typeDescriptions":{}}},"id":5916,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5561:14:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint192","typeString":"uint192"}},"functionReturnParameters":5898,"id":5917,"nodeType":"Return","src":"5554:21:22"}]},"documentation":{"id":5892,"nodeType":"StructuredDocumentation","src":"5065:289:22","text":" @dev Returns the downcasted uint192 from uint256, reverting on\n overflow (when the input is greater than largest uint192).\n Counterpart to Solidity's `uint192` operator.\n Requirements:\n - input must fit into 192 bits"},"id":5919,"implemented":true,"kind":"function","modifiers":[],"name":"toUint192","nameLocation":"5369:9:22","nodeType":"FunctionDefinition","parameters":{"id":5895,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5894,"mutability":"mutable","name":"value","nameLocation":"5387:5:22","nodeType":"VariableDeclaration","scope":5919,"src":"5379:13:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5893,"name":"uint256","nodeType":"ElementaryTypeName","src":"5379:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5378:15:22"},"returnParameters":{"id":5898,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5897,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5919,"src":"5417:7:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint192","typeString":"uint192"},"typeName":{"id":5896,"name":"uint192","nodeType":"ElementaryTypeName","src":"5417:7:22","typeDescriptions":{"typeIdentifier":"t_uint192","typeString":"uint192"}},"visibility":"internal"}],"src":"5416:9:22"},"scope":7433,"src":"5360:223:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5946,"nodeType":"Block","src":"5952:157:22","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5933,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5927,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5922,"src":"5967:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5930,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5980:7:22","typeDescriptions":{"typeIdentifier":"t_type$_t_uint184_$","typeString":"type(uint184)"},"typeName":{"id":5929,"name":"uint184","nodeType":"ElementaryTypeName","src":"5980:7:22","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint184_$","typeString":"type(uint184)"}],"id":5928,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"5975:4:22","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5931,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5975:13:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint184","typeString":"type(uint184)"}},"id":5932,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"5989:3:22","memberName":"max","nodeType":"MemberAccess","src":"5975:17:22","typeDescriptions":{"typeIdentifier":"t_uint184","typeString":"uint184"}},"src":"5967:25:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5940,"nodeType":"IfStatement","src":"5963:107:22","trueBody":{"id":5939,"nodeType":"Block","src":"5994:76:22","statements":[{"errorCall":{"arguments":[{"hexValue":"313834","id":5935,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6047:3:22","typeDescriptions":{"typeIdentifier":"t_rational_184_by_1","typeString":"int_const 184"},"value":"184"},{"id":5936,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5922,"src":"6052:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_184_by_1","typeString":"int_const 184"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5934,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5678,"src":"6016:30:22","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":5937,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6016:42:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":5938,"nodeType":"RevertStatement","src":"6009:49:22"}]}},{"expression":{"arguments":[{"id":5943,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5922,"src":"6095:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5942,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6087:7:22","typeDescriptions":{"typeIdentifier":"t_type$_t_uint184_$","typeString":"type(uint184)"},"typeName":{"id":5941,"name":"uint184","nodeType":"ElementaryTypeName","src":"6087:7:22","typeDescriptions":{}}},"id":5944,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6087:14:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint184","typeString":"uint184"}},"functionReturnParameters":5926,"id":5945,"nodeType":"Return","src":"6080:21:22"}]},"documentation":{"id":5920,"nodeType":"StructuredDocumentation","src":"5591:289:22","text":" @dev Returns the downcasted uint184 from uint256, reverting on\n overflow (when the input is greater than largest uint184).\n Counterpart to Solidity's `uint184` operator.\n Requirements:\n - input must fit into 184 bits"},"id":5947,"implemented":true,"kind":"function","modifiers":[],"name":"toUint184","nameLocation":"5895:9:22","nodeType":"FunctionDefinition","parameters":{"id":5923,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5922,"mutability":"mutable","name":"value","nameLocation":"5913:5:22","nodeType":"VariableDeclaration","scope":5947,"src":"5905:13:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5921,"name":"uint256","nodeType":"ElementaryTypeName","src":"5905:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5904:15:22"},"returnParameters":{"id":5926,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5925,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5947,"src":"5943:7:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint184","typeString":"uint184"},"typeName":{"id":5924,"name":"uint184","nodeType":"ElementaryTypeName","src":"5943:7:22","typeDescriptions":{"typeIdentifier":"t_uint184","typeString":"uint184"}},"visibility":"internal"}],"src":"5942:9:22"},"scope":7433,"src":"5886:223:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5974,"nodeType":"Block","src":"6478:157:22","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5961,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5955,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5950,"src":"6493:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5958,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6506:7:22","typeDescriptions":{"typeIdentifier":"t_type$_t_uint176_$","typeString":"type(uint176)"},"typeName":{"id":5957,"name":"uint176","nodeType":"ElementaryTypeName","src":"6506:7:22","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint176_$","typeString":"type(uint176)"}],"id":5956,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"6501:4:22","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5959,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6501:13:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint176","typeString":"type(uint176)"}},"id":5960,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6515:3:22","memberName":"max","nodeType":"MemberAccess","src":"6501:17:22","typeDescriptions":{"typeIdentifier":"t_uint176","typeString":"uint176"}},"src":"6493:25:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5968,"nodeType":"IfStatement","src":"6489:107:22","trueBody":{"id":5967,"nodeType":"Block","src":"6520:76:22","statements":[{"errorCall":{"arguments":[{"hexValue":"313736","id":5963,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6573:3:22","typeDescriptions":{"typeIdentifier":"t_rational_176_by_1","typeString":"int_const 176"},"value":"176"},{"id":5964,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5950,"src":"6578:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_176_by_1","typeString":"int_const 176"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5962,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5678,"src":"6542:30:22","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":5965,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6542:42:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":5966,"nodeType":"RevertStatement","src":"6535:49:22"}]}},{"expression":{"arguments":[{"id":5971,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5950,"src":"6621:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5970,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6613:7:22","typeDescriptions":{"typeIdentifier":"t_type$_t_uint176_$","typeString":"type(uint176)"},"typeName":{"id":5969,"name":"uint176","nodeType":"ElementaryTypeName","src":"6613:7:22","typeDescriptions":{}}},"id":5972,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6613:14:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint176","typeString":"uint176"}},"functionReturnParameters":5954,"id":5973,"nodeType":"Return","src":"6606:21:22"}]},"documentation":{"id":5948,"nodeType":"StructuredDocumentation","src":"6117:289:22","text":" @dev Returns the downcasted uint176 from uint256, reverting on\n overflow (when the input is greater than largest uint176).\n Counterpart to Solidity's `uint176` operator.\n Requirements:\n - input must fit into 176 bits"},"id":5975,"implemented":true,"kind":"function","modifiers":[],"name":"toUint176","nameLocation":"6421:9:22","nodeType":"FunctionDefinition","parameters":{"id":5951,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5950,"mutability":"mutable","name":"value","nameLocation":"6439:5:22","nodeType":"VariableDeclaration","scope":5975,"src":"6431:13:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5949,"name":"uint256","nodeType":"ElementaryTypeName","src":"6431:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6430:15:22"},"returnParameters":{"id":5954,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5953,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5975,"src":"6469:7:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint176","typeString":"uint176"},"typeName":{"id":5952,"name":"uint176","nodeType":"ElementaryTypeName","src":"6469:7:22","typeDescriptions":{"typeIdentifier":"t_uint176","typeString":"uint176"}},"visibility":"internal"}],"src":"6468:9:22"},"scope":7433,"src":"6412:223:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6002,"nodeType":"Block","src":"7004:157:22","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5989,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5983,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5978,"src":"7019:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5986,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7032:7:22","typeDescriptions":{"typeIdentifier":"t_type$_t_uint168_$","typeString":"type(uint168)"},"typeName":{"id":5985,"name":"uint168","nodeType":"ElementaryTypeName","src":"7032:7:22","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint168_$","typeString":"type(uint168)"}],"id":5984,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"7027:4:22","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5987,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7027:13:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint168","typeString":"type(uint168)"}},"id":5988,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7041:3:22","memberName":"max","nodeType":"MemberAccess","src":"7027:17:22","typeDescriptions":{"typeIdentifier":"t_uint168","typeString":"uint168"}},"src":"7019:25:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5996,"nodeType":"IfStatement","src":"7015:107:22","trueBody":{"id":5995,"nodeType":"Block","src":"7046:76:22","statements":[{"errorCall":{"arguments":[{"hexValue":"313638","id":5991,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7099:3:22","typeDescriptions":{"typeIdentifier":"t_rational_168_by_1","typeString":"int_const 168"},"value":"168"},{"id":5992,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5978,"src":"7104:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_168_by_1","typeString":"int_const 168"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5990,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5678,"src":"7068:30:22","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":5993,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7068:42:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":5994,"nodeType":"RevertStatement","src":"7061:49:22"}]}},{"expression":{"arguments":[{"id":5999,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5978,"src":"7147:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5998,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7139:7:22","typeDescriptions":{"typeIdentifier":"t_type$_t_uint168_$","typeString":"type(uint168)"},"typeName":{"id":5997,"name":"uint168","nodeType":"ElementaryTypeName","src":"7139:7:22","typeDescriptions":{}}},"id":6000,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7139:14:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint168","typeString":"uint168"}},"functionReturnParameters":5982,"id":6001,"nodeType":"Return","src":"7132:21:22"}]},"documentation":{"id":5976,"nodeType":"StructuredDocumentation","src":"6643:289:22","text":" @dev Returns the downcasted uint168 from uint256, reverting on\n overflow (when the input is greater than largest uint168).\n Counterpart to Solidity's `uint168` operator.\n Requirements:\n - input must fit into 168 bits"},"id":6003,"implemented":true,"kind":"function","modifiers":[],"name":"toUint168","nameLocation":"6947:9:22","nodeType":"FunctionDefinition","parameters":{"id":5979,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5978,"mutability":"mutable","name":"value","nameLocation":"6965:5:22","nodeType":"VariableDeclaration","scope":6003,"src":"6957:13:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5977,"name":"uint256","nodeType":"ElementaryTypeName","src":"6957:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6956:15:22"},"returnParameters":{"id":5982,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5981,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6003,"src":"6995:7:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint168","typeString":"uint168"},"typeName":{"id":5980,"name":"uint168","nodeType":"ElementaryTypeName","src":"6995:7:22","typeDescriptions":{"typeIdentifier":"t_uint168","typeString":"uint168"}},"visibility":"internal"}],"src":"6994:9:22"},"scope":7433,"src":"6938:223:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6030,"nodeType":"Block","src":"7530:157:22","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6017,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6011,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6006,"src":"7545:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6014,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7558:7:22","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":6013,"name":"uint160","nodeType":"ElementaryTypeName","src":"7558:7:22","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"}],"id":6012,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"7553:4:22","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6015,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7553:13:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint160","typeString":"type(uint160)"}},"id":6016,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7567:3:22","memberName":"max","nodeType":"MemberAccess","src":"7553:17:22","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"src":"7545:25:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6024,"nodeType":"IfStatement","src":"7541:107:22","trueBody":{"id":6023,"nodeType":"Block","src":"7572:76:22","statements":[{"errorCall":{"arguments":[{"hexValue":"313630","id":6019,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7625:3:22","typeDescriptions":{"typeIdentifier":"t_rational_160_by_1","typeString":"int_const 160"},"value":"160"},{"id":6020,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6006,"src":"7630:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_160_by_1","typeString":"int_const 160"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6018,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5678,"src":"7594:30:22","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":6021,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7594:42:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6022,"nodeType":"RevertStatement","src":"7587:49:22"}]}},{"expression":{"arguments":[{"id":6027,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6006,"src":"7673:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6026,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7665:7:22","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":6025,"name":"uint160","nodeType":"ElementaryTypeName","src":"7665:7:22","typeDescriptions":{}}},"id":6028,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7665:14:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"functionReturnParameters":6010,"id":6029,"nodeType":"Return","src":"7658:21:22"}]},"documentation":{"id":6004,"nodeType":"StructuredDocumentation","src":"7169:289:22","text":" @dev Returns the downcasted uint160 from uint256, reverting on\n overflow (when the input is greater than largest uint160).\n Counterpart to Solidity's `uint160` operator.\n Requirements:\n - input must fit into 160 bits"},"id":6031,"implemented":true,"kind":"function","modifiers":[],"name":"toUint160","nameLocation":"7473:9:22","nodeType":"FunctionDefinition","parameters":{"id":6007,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6006,"mutability":"mutable","name":"value","nameLocation":"7491:5:22","nodeType":"VariableDeclaration","scope":6031,"src":"7483:13:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6005,"name":"uint256","nodeType":"ElementaryTypeName","src":"7483:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7482:15:22"},"returnParameters":{"id":6010,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6009,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6031,"src":"7521:7:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"},"typeName":{"id":6008,"name":"uint160","nodeType":"ElementaryTypeName","src":"7521:7:22","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"visibility":"internal"}],"src":"7520:9:22"},"scope":7433,"src":"7464:223:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6058,"nodeType":"Block","src":"8056:157:22","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6045,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6039,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6034,"src":"8071:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6042,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8084:7:22","typeDescriptions":{"typeIdentifier":"t_type$_t_uint152_$","typeString":"type(uint152)"},"typeName":{"id":6041,"name":"uint152","nodeType":"ElementaryTypeName","src":"8084:7:22","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint152_$","typeString":"type(uint152)"}],"id":6040,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"8079:4:22","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6043,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8079:13:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint152","typeString":"type(uint152)"}},"id":6044,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"8093:3:22","memberName":"max","nodeType":"MemberAccess","src":"8079:17:22","typeDescriptions":{"typeIdentifier":"t_uint152","typeString":"uint152"}},"src":"8071:25:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6052,"nodeType":"IfStatement","src":"8067:107:22","trueBody":{"id":6051,"nodeType":"Block","src":"8098:76:22","statements":[{"errorCall":{"arguments":[{"hexValue":"313532","id":6047,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8151:3:22","typeDescriptions":{"typeIdentifier":"t_rational_152_by_1","typeString":"int_const 152"},"value":"152"},{"id":6048,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6034,"src":"8156:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_152_by_1","typeString":"int_const 152"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6046,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5678,"src":"8120:30:22","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":6049,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8120:42:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6050,"nodeType":"RevertStatement","src":"8113:49:22"}]}},{"expression":{"arguments":[{"id":6055,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6034,"src":"8199:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6054,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8191:7:22","typeDescriptions":{"typeIdentifier":"t_type$_t_uint152_$","typeString":"type(uint152)"},"typeName":{"id":6053,"name":"uint152","nodeType":"ElementaryTypeName","src":"8191:7:22","typeDescriptions":{}}},"id":6056,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8191:14:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint152","typeString":"uint152"}},"functionReturnParameters":6038,"id":6057,"nodeType":"Return","src":"8184:21:22"}]},"documentation":{"id":6032,"nodeType":"StructuredDocumentation","src":"7695:289:22","text":" @dev Returns the downcasted uint152 from uint256, reverting on\n overflow (when the input is greater than largest uint152).\n Counterpart to Solidity's `uint152` operator.\n Requirements:\n - input must fit into 152 bits"},"id":6059,"implemented":true,"kind":"function","modifiers":[],"name":"toUint152","nameLocation":"7999:9:22","nodeType":"FunctionDefinition","parameters":{"id":6035,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6034,"mutability":"mutable","name":"value","nameLocation":"8017:5:22","nodeType":"VariableDeclaration","scope":6059,"src":"8009:13:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6033,"name":"uint256","nodeType":"ElementaryTypeName","src":"8009:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8008:15:22"},"returnParameters":{"id":6038,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6037,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6059,"src":"8047:7:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint152","typeString":"uint152"},"typeName":{"id":6036,"name":"uint152","nodeType":"ElementaryTypeName","src":"8047:7:22","typeDescriptions":{"typeIdentifier":"t_uint152","typeString":"uint152"}},"visibility":"internal"}],"src":"8046:9:22"},"scope":7433,"src":"7990:223:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6086,"nodeType":"Block","src":"8582:157:22","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6073,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6067,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6062,"src":"8597:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6070,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8610:7:22","typeDescriptions":{"typeIdentifier":"t_type$_t_uint144_$","typeString":"type(uint144)"},"typeName":{"id":6069,"name":"uint144","nodeType":"ElementaryTypeName","src":"8610:7:22","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint144_$","typeString":"type(uint144)"}],"id":6068,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"8605:4:22","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6071,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8605:13:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint144","typeString":"type(uint144)"}},"id":6072,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"8619:3:22","memberName":"max","nodeType":"MemberAccess","src":"8605:17:22","typeDescriptions":{"typeIdentifier":"t_uint144","typeString":"uint144"}},"src":"8597:25:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6080,"nodeType":"IfStatement","src":"8593:107:22","trueBody":{"id":6079,"nodeType":"Block","src":"8624:76:22","statements":[{"errorCall":{"arguments":[{"hexValue":"313434","id":6075,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8677:3:22","typeDescriptions":{"typeIdentifier":"t_rational_144_by_1","typeString":"int_const 144"},"value":"144"},{"id":6076,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6062,"src":"8682:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_144_by_1","typeString":"int_const 144"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6074,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5678,"src":"8646:30:22","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":6077,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8646:42:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6078,"nodeType":"RevertStatement","src":"8639:49:22"}]}},{"expression":{"arguments":[{"id":6083,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6062,"src":"8725:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6082,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8717:7:22","typeDescriptions":{"typeIdentifier":"t_type$_t_uint144_$","typeString":"type(uint144)"},"typeName":{"id":6081,"name":"uint144","nodeType":"ElementaryTypeName","src":"8717:7:22","typeDescriptions":{}}},"id":6084,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8717:14:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint144","typeString":"uint144"}},"functionReturnParameters":6066,"id":6085,"nodeType":"Return","src":"8710:21:22"}]},"documentation":{"id":6060,"nodeType":"StructuredDocumentation","src":"8221:289:22","text":" @dev Returns the downcasted uint144 from uint256, reverting on\n overflow (when the input is greater than largest uint144).\n Counterpart to Solidity's `uint144` operator.\n Requirements:\n - input must fit into 144 bits"},"id":6087,"implemented":true,"kind":"function","modifiers":[],"name":"toUint144","nameLocation":"8525:9:22","nodeType":"FunctionDefinition","parameters":{"id":6063,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6062,"mutability":"mutable","name":"value","nameLocation":"8543:5:22","nodeType":"VariableDeclaration","scope":6087,"src":"8535:13:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6061,"name":"uint256","nodeType":"ElementaryTypeName","src":"8535:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8534:15:22"},"returnParameters":{"id":6066,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6065,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6087,"src":"8573:7:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint144","typeString":"uint144"},"typeName":{"id":6064,"name":"uint144","nodeType":"ElementaryTypeName","src":"8573:7:22","typeDescriptions":{"typeIdentifier":"t_uint144","typeString":"uint144"}},"visibility":"internal"}],"src":"8572:9:22"},"scope":7433,"src":"8516:223:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6114,"nodeType":"Block","src":"9108:157:22","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6101,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6095,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6090,"src":"9123:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6098,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9136:7:22","typeDescriptions":{"typeIdentifier":"t_type$_t_uint136_$","typeString":"type(uint136)"},"typeName":{"id":6097,"name":"uint136","nodeType":"ElementaryTypeName","src":"9136:7:22","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint136_$","typeString":"type(uint136)"}],"id":6096,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"9131:4:22","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6099,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9131:13:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint136","typeString":"type(uint136)"}},"id":6100,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"9145:3:22","memberName":"max","nodeType":"MemberAccess","src":"9131:17:22","typeDescriptions":{"typeIdentifier":"t_uint136","typeString":"uint136"}},"src":"9123:25:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6108,"nodeType":"IfStatement","src":"9119:107:22","trueBody":{"id":6107,"nodeType":"Block","src":"9150:76:22","statements":[{"errorCall":{"arguments":[{"hexValue":"313336","id":6103,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9203:3:22","typeDescriptions":{"typeIdentifier":"t_rational_136_by_1","typeString":"int_const 136"},"value":"136"},{"id":6104,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6090,"src":"9208:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_136_by_1","typeString":"int_const 136"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6102,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5678,"src":"9172:30:22","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":6105,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9172:42:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6106,"nodeType":"RevertStatement","src":"9165:49:22"}]}},{"expression":{"arguments":[{"id":6111,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6090,"src":"9251:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6110,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9243:7:22","typeDescriptions":{"typeIdentifier":"t_type$_t_uint136_$","typeString":"type(uint136)"},"typeName":{"id":6109,"name":"uint136","nodeType":"ElementaryTypeName","src":"9243:7:22","typeDescriptions":{}}},"id":6112,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9243:14:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint136","typeString":"uint136"}},"functionReturnParameters":6094,"id":6113,"nodeType":"Return","src":"9236:21:22"}]},"documentation":{"id":6088,"nodeType":"StructuredDocumentation","src":"8747:289:22","text":" @dev Returns the downcasted uint136 from uint256, reverting on\n overflow (when the input is greater than largest uint136).\n Counterpart to Solidity's `uint136` operator.\n Requirements:\n - input must fit into 136 bits"},"id":6115,"implemented":true,"kind":"function","modifiers":[],"name":"toUint136","nameLocation":"9051:9:22","nodeType":"FunctionDefinition","parameters":{"id":6091,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6090,"mutability":"mutable","name":"value","nameLocation":"9069:5:22","nodeType":"VariableDeclaration","scope":6115,"src":"9061:13:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6089,"name":"uint256","nodeType":"ElementaryTypeName","src":"9061:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9060:15:22"},"returnParameters":{"id":6094,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6093,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6115,"src":"9099:7:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint136","typeString":"uint136"},"typeName":{"id":6092,"name":"uint136","nodeType":"ElementaryTypeName","src":"9099:7:22","typeDescriptions":{"typeIdentifier":"t_uint136","typeString":"uint136"}},"visibility":"internal"}],"src":"9098:9:22"},"scope":7433,"src":"9042:223:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6142,"nodeType":"Block","src":"9634:157:22","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6129,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6123,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6118,"src":"9649:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6126,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9662:7:22","typeDescriptions":{"typeIdentifier":"t_type$_t_uint128_$","typeString":"type(uint128)"},"typeName":{"id":6125,"name":"uint128","nodeType":"ElementaryTypeName","src":"9662:7:22","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint128_$","typeString":"type(uint128)"}],"id":6124,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"9657:4:22","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6127,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9657:13:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint128","typeString":"type(uint128)"}},"id":6128,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"9671:3:22","memberName":"max","nodeType":"MemberAccess","src":"9657:17:22","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"src":"9649:25:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6136,"nodeType":"IfStatement","src":"9645:107:22","trueBody":{"id":6135,"nodeType":"Block","src":"9676:76:22","statements":[{"errorCall":{"arguments":[{"hexValue":"313238","id":6131,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9729:3:22","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},{"id":6132,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6118,"src":"9734:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6130,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5678,"src":"9698:30:22","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":6133,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9698:42:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6134,"nodeType":"RevertStatement","src":"9691:49:22"}]}},{"expression":{"arguments":[{"id":6139,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6118,"src":"9777:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6138,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9769:7:22","typeDescriptions":{"typeIdentifier":"t_type$_t_uint128_$","typeString":"type(uint128)"},"typeName":{"id":6137,"name":"uint128","nodeType":"ElementaryTypeName","src":"9769:7:22","typeDescriptions":{}}},"id":6140,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9769:14:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"functionReturnParameters":6122,"id":6141,"nodeType":"Return","src":"9762:21:22"}]},"documentation":{"id":6116,"nodeType":"StructuredDocumentation","src":"9273:289:22","text":" @dev Returns the downcasted uint128 from uint256, reverting on\n overflow (when the input is greater than largest uint128).\n Counterpart to Solidity's `uint128` operator.\n Requirements:\n - input must fit into 128 bits"},"id":6143,"implemented":true,"kind":"function","modifiers":[],"name":"toUint128","nameLocation":"9577:9:22","nodeType":"FunctionDefinition","parameters":{"id":6119,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6118,"mutability":"mutable","name":"value","nameLocation":"9595:5:22","nodeType":"VariableDeclaration","scope":6143,"src":"9587:13:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6117,"name":"uint256","nodeType":"ElementaryTypeName","src":"9587:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9586:15:22"},"returnParameters":{"id":6122,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6121,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6143,"src":"9625:7:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":6120,"name":"uint128","nodeType":"ElementaryTypeName","src":"9625:7:22","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"visibility":"internal"}],"src":"9624:9:22"},"scope":7433,"src":"9568:223:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6170,"nodeType":"Block","src":"10160:157:22","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6157,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6151,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6146,"src":"10175:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6154,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10188:7:22","typeDescriptions":{"typeIdentifier":"t_type$_t_uint120_$","typeString":"type(uint120)"},"typeName":{"id":6153,"name":"uint120","nodeType":"ElementaryTypeName","src":"10188:7:22","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint120_$","typeString":"type(uint120)"}],"id":6152,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"10183:4:22","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6155,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10183:13:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint120","typeString":"type(uint120)"}},"id":6156,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"10197:3:22","memberName":"max","nodeType":"MemberAccess","src":"10183:17:22","typeDescriptions":{"typeIdentifier":"t_uint120","typeString":"uint120"}},"src":"10175:25:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6164,"nodeType":"IfStatement","src":"10171:107:22","trueBody":{"id":6163,"nodeType":"Block","src":"10202:76:22","statements":[{"errorCall":{"arguments":[{"hexValue":"313230","id":6159,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10255:3:22","typeDescriptions":{"typeIdentifier":"t_rational_120_by_1","typeString":"int_const 120"},"value":"120"},{"id":6160,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6146,"src":"10260:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_120_by_1","typeString":"int_const 120"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6158,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5678,"src":"10224:30:22","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":6161,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10224:42:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6162,"nodeType":"RevertStatement","src":"10217:49:22"}]}},{"expression":{"arguments":[{"id":6167,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6146,"src":"10303:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6166,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10295:7:22","typeDescriptions":{"typeIdentifier":"t_type$_t_uint120_$","typeString":"type(uint120)"},"typeName":{"id":6165,"name":"uint120","nodeType":"ElementaryTypeName","src":"10295:7:22","typeDescriptions":{}}},"id":6168,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10295:14:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint120","typeString":"uint120"}},"functionReturnParameters":6150,"id":6169,"nodeType":"Return","src":"10288:21:22"}]},"documentation":{"id":6144,"nodeType":"StructuredDocumentation","src":"9799:289:22","text":" @dev Returns the downcasted uint120 from uint256, reverting on\n overflow (when the input is greater than largest uint120).\n Counterpart to Solidity's `uint120` operator.\n Requirements:\n - input must fit into 120 bits"},"id":6171,"implemented":true,"kind":"function","modifiers":[],"name":"toUint120","nameLocation":"10103:9:22","nodeType":"FunctionDefinition","parameters":{"id":6147,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6146,"mutability":"mutable","name":"value","nameLocation":"10121:5:22","nodeType":"VariableDeclaration","scope":6171,"src":"10113:13:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6145,"name":"uint256","nodeType":"ElementaryTypeName","src":"10113:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10112:15:22"},"returnParameters":{"id":6150,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6149,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6171,"src":"10151:7:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint120","typeString":"uint120"},"typeName":{"id":6148,"name":"uint120","nodeType":"ElementaryTypeName","src":"10151:7:22","typeDescriptions":{"typeIdentifier":"t_uint120","typeString":"uint120"}},"visibility":"internal"}],"src":"10150:9:22"},"scope":7433,"src":"10094:223:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6198,"nodeType":"Block","src":"10686:157:22","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6185,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6179,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6174,"src":"10701:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6182,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10714:7:22","typeDescriptions":{"typeIdentifier":"t_type$_t_uint112_$","typeString":"type(uint112)"},"typeName":{"id":6181,"name":"uint112","nodeType":"ElementaryTypeName","src":"10714:7:22","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint112_$","typeString":"type(uint112)"}],"id":6180,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"10709:4:22","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6183,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10709:13:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint112","typeString":"type(uint112)"}},"id":6184,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"10723:3:22","memberName":"max","nodeType":"MemberAccess","src":"10709:17:22","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"src":"10701:25:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6192,"nodeType":"IfStatement","src":"10697:107:22","trueBody":{"id":6191,"nodeType":"Block","src":"10728:76:22","statements":[{"errorCall":{"arguments":[{"hexValue":"313132","id":6187,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10781:3:22","typeDescriptions":{"typeIdentifier":"t_rational_112_by_1","typeString":"int_const 112"},"value":"112"},{"id":6188,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6174,"src":"10786:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_112_by_1","typeString":"int_const 112"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6186,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5678,"src":"10750:30:22","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":6189,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10750:42:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6190,"nodeType":"RevertStatement","src":"10743:49:22"}]}},{"expression":{"arguments":[{"id":6195,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6174,"src":"10829:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6194,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10821:7:22","typeDescriptions":{"typeIdentifier":"t_type$_t_uint112_$","typeString":"type(uint112)"},"typeName":{"id":6193,"name":"uint112","nodeType":"ElementaryTypeName","src":"10821:7:22","typeDescriptions":{}}},"id":6196,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10821:14:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"functionReturnParameters":6178,"id":6197,"nodeType":"Return","src":"10814:21:22"}]},"documentation":{"id":6172,"nodeType":"StructuredDocumentation","src":"10325:289:22","text":" @dev Returns the downcasted uint112 from uint256, reverting on\n overflow (when the input is greater than largest uint112).\n Counterpart to Solidity's `uint112` operator.\n Requirements:\n - input must fit into 112 bits"},"id":6199,"implemented":true,"kind":"function","modifiers":[],"name":"toUint112","nameLocation":"10629:9:22","nodeType":"FunctionDefinition","parameters":{"id":6175,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6174,"mutability":"mutable","name":"value","nameLocation":"10647:5:22","nodeType":"VariableDeclaration","scope":6199,"src":"10639:13:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6173,"name":"uint256","nodeType":"ElementaryTypeName","src":"10639:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10638:15:22"},"returnParameters":{"id":6178,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6177,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6199,"src":"10677:7:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"},"typeName":{"id":6176,"name":"uint112","nodeType":"ElementaryTypeName","src":"10677:7:22","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"visibility":"internal"}],"src":"10676:9:22"},"scope":7433,"src":"10620:223:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6226,"nodeType":"Block","src":"11212:157:22","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6213,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6207,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6202,"src":"11227:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6210,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11240:7:22","typeDescriptions":{"typeIdentifier":"t_type$_t_uint104_$","typeString":"type(uint104)"},"typeName":{"id":6209,"name":"uint104","nodeType":"ElementaryTypeName","src":"11240:7:22","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint104_$","typeString":"type(uint104)"}],"id":6208,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"11235:4:22","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6211,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11235:13:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint104","typeString":"type(uint104)"}},"id":6212,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"11249:3:22","memberName":"max","nodeType":"MemberAccess","src":"11235:17:22","typeDescriptions":{"typeIdentifier":"t_uint104","typeString":"uint104"}},"src":"11227:25:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6220,"nodeType":"IfStatement","src":"11223:107:22","trueBody":{"id":6219,"nodeType":"Block","src":"11254:76:22","statements":[{"errorCall":{"arguments":[{"hexValue":"313034","id":6215,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11307:3:22","typeDescriptions":{"typeIdentifier":"t_rational_104_by_1","typeString":"int_const 104"},"value":"104"},{"id":6216,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6202,"src":"11312:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_104_by_1","typeString":"int_const 104"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6214,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5678,"src":"11276:30:22","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":6217,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11276:42:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6218,"nodeType":"RevertStatement","src":"11269:49:22"}]}},{"expression":{"arguments":[{"id":6223,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6202,"src":"11355:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6222,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11347:7:22","typeDescriptions":{"typeIdentifier":"t_type$_t_uint104_$","typeString":"type(uint104)"},"typeName":{"id":6221,"name":"uint104","nodeType":"ElementaryTypeName","src":"11347:7:22","typeDescriptions":{}}},"id":6224,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11347:14:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint104","typeString":"uint104"}},"functionReturnParameters":6206,"id":6225,"nodeType":"Return","src":"11340:21:22"}]},"documentation":{"id":6200,"nodeType":"StructuredDocumentation","src":"10851:289:22","text":" @dev Returns the downcasted uint104 from uint256, reverting on\n overflow (when the input is greater than largest uint104).\n Counterpart to Solidity's `uint104` operator.\n Requirements:\n - input must fit into 104 bits"},"id":6227,"implemented":true,"kind":"function","modifiers":[],"name":"toUint104","nameLocation":"11155:9:22","nodeType":"FunctionDefinition","parameters":{"id":6203,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6202,"mutability":"mutable","name":"value","nameLocation":"11173:5:22","nodeType":"VariableDeclaration","scope":6227,"src":"11165:13:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6201,"name":"uint256","nodeType":"ElementaryTypeName","src":"11165:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11164:15:22"},"returnParameters":{"id":6206,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6205,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6227,"src":"11203:7:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint104","typeString":"uint104"},"typeName":{"id":6204,"name":"uint104","nodeType":"ElementaryTypeName","src":"11203:7:22","typeDescriptions":{"typeIdentifier":"t_uint104","typeString":"uint104"}},"visibility":"internal"}],"src":"11202:9:22"},"scope":7433,"src":"11146:223:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6254,"nodeType":"Block","src":"11732:154:22","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6241,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6235,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6230,"src":"11747:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6238,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11760:6:22","typeDescriptions":{"typeIdentifier":"t_type$_t_uint96_$","typeString":"type(uint96)"},"typeName":{"id":6237,"name":"uint96","nodeType":"ElementaryTypeName","src":"11760:6:22","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint96_$","typeString":"type(uint96)"}],"id":6236,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"11755:4:22","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6239,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11755:12:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint96","typeString":"type(uint96)"}},"id":6240,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"11768:3:22","memberName":"max","nodeType":"MemberAccess","src":"11755:16:22","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"src":"11747:24:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6248,"nodeType":"IfStatement","src":"11743:105:22","trueBody":{"id":6247,"nodeType":"Block","src":"11773:75:22","statements":[{"errorCall":{"arguments":[{"hexValue":"3936","id":6243,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11826:2:22","typeDescriptions":{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},"value":"96"},{"id":6244,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6230,"src":"11830:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6242,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5678,"src":"11795:30:22","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":6245,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11795:41:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6246,"nodeType":"RevertStatement","src":"11788:48:22"}]}},{"expression":{"arguments":[{"id":6251,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6230,"src":"11872:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6250,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11865:6:22","typeDescriptions":{"typeIdentifier":"t_type$_t_uint96_$","typeString":"type(uint96)"},"typeName":{"id":6249,"name":"uint96","nodeType":"ElementaryTypeName","src":"11865:6:22","typeDescriptions":{}}},"id":6252,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11865:13:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"functionReturnParameters":6234,"id":6253,"nodeType":"Return","src":"11858:20:22"}]},"documentation":{"id":6228,"nodeType":"StructuredDocumentation","src":"11377:285:22","text":" @dev Returns the downcasted uint96 from uint256, reverting on\n overflow (when the input is greater than largest uint96).\n Counterpart to Solidity's `uint96` operator.\n Requirements:\n - input must fit into 96 bits"},"id":6255,"implemented":true,"kind":"function","modifiers":[],"name":"toUint96","nameLocation":"11677:8:22","nodeType":"FunctionDefinition","parameters":{"id":6231,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6230,"mutability":"mutable","name":"value","nameLocation":"11694:5:22","nodeType":"VariableDeclaration","scope":6255,"src":"11686:13:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6229,"name":"uint256","nodeType":"ElementaryTypeName","src":"11686:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11685:15:22"},"returnParameters":{"id":6234,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6233,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6255,"src":"11724:6:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"},"typeName":{"id":6232,"name":"uint96","nodeType":"ElementaryTypeName","src":"11724:6:22","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"visibility":"internal"}],"src":"11723:8:22"},"scope":7433,"src":"11668:218:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6282,"nodeType":"Block","src":"12249:154:22","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6269,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6263,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6258,"src":"12264:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6266,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12277:6:22","typeDescriptions":{"typeIdentifier":"t_type$_t_uint88_$","typeString":"type(uint88)"},"typeName":{"id":6265,"name":"uint88","nodeType":"ElementaryTypeName","src":"12277:6:22","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint88_$","typeString":"type(uint88)"}],"id":6264,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"12272:4:22","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6267,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12272:12:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint88","typeString":"type(uint88)"}},"id":6268,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"12285:3:22","memberName":"max","nodeType":"MemberAccess","src":"12272:16:22","typeDescriptions":{"typeIdentifier":"t_uint88","typeString":"uint88"}},"src":"12264:24:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6276,"nodeType":"IfStatement","src":"12260:105:22","trueBody":{"id":6275,"nodeType":"Block","src":"12290:75:22","statements":[{"errorCall":{"arguments":[{"hexValue":"3838","id":6271,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12343:2:22","typeDescriptions":{"typeIdentifier":"t_rational_88_by_1","typeString":"int_const 88"},"value":"88"},{"id":6272,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6258,"src":"12347:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_88_by_1","typeString":"int_const 88"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6270,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5678,"src":"12312:30:22","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":6273,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12312:41:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6274,"nodeType":"RevertStatement","src":"12305:48:22"}]}},{"expression":{"arguments":[{"id":6279,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6258,"src":"12389:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6278,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12382:6:22","typeDescriptions":{"typeIdentifier":"t_type$_t_uint88_$","typeString":"type(uint88)"},"typeName":{"id":6277,"name":"uint88","nodeType":"ElementaryTypeName","src":"12382:6:22","typeDescriptions":{}}},"id":6280,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12382:13:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint88","typeString":"uint88"}},"functionReturnParameters":6262,"id":6281,"nodeType":"Return","src":"12375:20:22"}]},"documentation":{"id":6256,"nodeType":"StructuredDocumentation","src":"11894:285:22","text":" @dev Returns the downcasted uint88 from uint256, reverting on\n overflow (when the input is greater than largest uint88).\n Counterpart to Solidity's `uint88` operator.\n Requirements:\n - input must fit into 88 bits"},"id":6283,"implemented":true,"kind":"function","modifiers":[],"name":"toUint88","nameLocation":"12194:8:22","nodeType":"FunctionDefinition","parameters":{"id":6259,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6258,"mutability":"mutable","name":"value","nameLocation":"12211:5:22","nodeType":"VariableDeclaration","scope":6283,"src":"12203:13:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6257,"name":"uint256","nodeType":"ElementaryTypeName","src":"12203:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12202:15:22"},"returnParameters":{"id":6262,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6261,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6283,"src":"12241:6:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint88","typeString":"uint88"},"typeName":{"id":6260,"name":"uint88","nodeType":"ElementaryTypeName","src":"12241:6:22","typeDescriptions":{"typeIdentifier":"t_uint88","typeString":"uint88"}},"visibility":"internal"}],"src":"12240:8:22"},"scope":7433,"src":"12185:218:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6310,"nodeType":"Block","src":"12766:154:22","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6297,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6291,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6286,"src":"12781:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6294,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12794:6:22","typeDescriptions":{"typeIdentifier":"t_type$_t_uint80_$","typeString":"type(uint80)"},"typeName":{"id":6293,"name":"uint80","nodeType":"ElementaryTypeName","src":"12794:6:22","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint80_$","typeString":"type(uint80)"}],"id":6292,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"12789:4:22","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6295,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12789:12:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint80","typeString":"type(uint80)"}},"id":6296,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"12802:3:22","memberName":"max","nodeType":"MemberAccess","src":"12789:16:22","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"}},"src":"12781:24:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6304,"nodeType":"IfStatement","src":"12777:105:22","trueBody":{"id":6303,"nodeType":"Block","src":"12807:75:22","statements":[{"errorCall":{"arguments":[{"hexValue":"3830","id":6299,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12860:2:22","typeDescriptions":{"typeIdentifier":"t_rational_80_by_1","typeString":"int_const 80"},"value":"80"},{"id":6300,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6286,"src":"12864:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_80_by_1","typeString":"int_const 80"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6298,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5678,"src":"12829:30:22","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":6301,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12829:41:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6302,"nodeType":"RevertStatement","src":"12822:48:22"}]}},{"expression":{"arguments":[{"id":6307,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6286,"src":"12906:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6306,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12899:6:22","typeDescriptions":{"typeIdentifier":"t_type$_t_uint80_$","typeString":"type(uint80)"},"typeName":{"id":6305,"name":"uint80","nodeType":"ElementaryTypeName","src":"12899:6:22","typeDescriptions":{}}},"id":6308,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12899:13:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"}},"functionReturnParameters":6290,"id":6309,"nodeType":"Return","src":"12892:20:22"}]},"documentation":{"id":6284,"nodeType":"StructuredDocumentation","src":"12411:285:22","text":" @dev Returns the downcasted uint80 from uint256, reverting on\n overflow (when the input is greater than largest uint80).\n Counterpart to Solidity's `uint80` operator.\n Requirements:\n - input must fit into 80 bits"},"id":6311,"implemented":true,"kind":"function","modifiers":[],"name":"toUint80","nameLocation":"12711:8:22","nodeType":"FunctionDefinition","parameters":{"id":6287,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6286,"mutability":"mutable","name":"value","nameLocation":"12728:5:22","nodeType":"VariableDeclaration","scope":6311,"src":"12720:13:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6285,"name":"uint256","nodeType":"ElementaryTypeName","src":"12720:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12719:15:22"},"returnParameters":{"id":6290,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6289,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6311,"src":"12758:6:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"},"typeName":{"id":6288,"name":"uint80","nodeType":"ElementaryTypeName","src":"12758:6:22","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"}},"visibility":"internal"}],"src":"12757:8:22"},"scope":7433,"src":"12702:218:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6338,"nodeType":"Block","src":"13283:154:22","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6325,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6319,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6314,"src":"13298:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6322,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13311:6:22","typeDescriptions":{"typeIdentifier":"t_type$_t_uint72_$","typeString":"type(uint72)"},"typeName":{"id":6321,"name":"uint72","nodeType":"ElementaryTypeName","src":"13311:6:22","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint72_$","typeString":"type(uint72)"}],"id":6320,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"13306:4:22","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6323,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13306:12:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint72","typeString":"type(uint72)"}},"id":6324,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"13319:3:22","memberName":"max","nodeType":"MemberAccess","src":"13306:16:22","typeDescriptions":{"typeIdentifier":"t_uint72","typeString":"uint72"}},"src":"13298:24:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6332,"nodeType":"IfStatement","src":"13294:105:22","trueBody":{"id":6331,"nodeType":"Block","src":"13324:75:22","statements":[{"errorCall":{"arguments":[{"hexValue":"3732","id":6327,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13377:2:22","typeDescriptions":{"typeIdentifier":"t_rational_72_by_1","typeString":"int_const 72"},"value":"72"},{"id":6328,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6314,"src":"13381:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_72_by_1","typeString":"int_const 72"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6326,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5678,"src":"13346:30:22","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":6329,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13346:41:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6330,"nodeType":"RevertStatement","src":"13339:48:22"}]}},{"expression":{"arguments":[{"id":6335,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6314,"src":"13423:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6334,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13416:6:22","typeDescriptions":{"typeIdentifier":"t_type$_t_uint72_$","typeString":"type(uint72)"},"typeName":{"id":6333,"name":"uint72","nodeType":"ElementaryTypeName","src":"13416:6:22","typeDescriptions":{}}},"id":6336,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13416:13:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint72","typeString":"uint72"}},"functionReturnParameters":6318,"id":6337,"nodeType":"Return","src":"13409:20:22"}]},"documentation":{"id":6312,"nodeType":"StructuredDocumentation","src":"12928:285:22","text":" @dev Returns the downcasted uint72 from uint256, reverting on\n overflow (when the input is greater than largest uint72).\n Counterpart to Solidity's `uint72` operator.\n Requirements:\n - input must fit into 72 bits"},"id":6339,"implemented":true,"kind":"function","modifiers":[],"name":"toUint72","nameLocation":"13228:8:22","nodeType":"FunctionDefinition","parameters":{"id":6315,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6314,"mutability":"mutable","name":"value","nameLocation":"13245:5:22","nodeType":"VariableDeclaration","scope":6339,"src":"13237:13:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6313,"name":"uint256","nodeType":"ElementaryTypeName","src":"13237:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13236:15:22"},"returnParameters":{"id":6318,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6317,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6339,"src":"13275:6:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint72","typeString":"uint72"},"typeName":{"id":6316,"name":"uint72","nodeType":"ElementaryTypeName","src":"13275:6:22","typeDescriptions":{"typeIdentifier":"t_uint72","typeString":"uint72"}},"visibility":"internal"}],"src":"13274:8:22"},"scope":7433,"src":"13219:218:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6366,"nodeType":"Block","src":"13800:154:22","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6353,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6347,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6342,"src":"13815:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6350,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13828:6:22","typeDescriptions":{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"},"typeName":{"id":6349,"name":"uint64","nodeType":"ElementaryTypeName","src":"13828:6:22","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"}],"id":6348,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"13823:4:22","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6351,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13823:12:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint64","typeString":"type(uint64)"}},"id":6352,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"13836:3:22","memberName":"max","nodeType":"MemberAccess","src":"13823:16:22","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"src":"13815:24:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6360,"nodeType":"IfStatement","src":"13811:105:22","trueBody":{"id":6359,"nodeType":"Block","src":"13841:75:22","statements":[{"errorCall":{"arguments":[{"hexValue":"3634","id":6355,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13894:2:22","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},{"id":6356,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6342,"src":"13898:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6354,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5678,"src":"13863:30:22","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":6357,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13863:41:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6358,"nodeType":"RevertStatement","src":"13856:48:22"}]}},{"expression":{"arguments":[{"id":6363,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6342,"src":"13940:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6362,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13933:6:22","typeDescriptions":{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"},"typeName":{"id":6361,"name":"uint64","nodeType":"ElementaryTypeName","src":"13933:6:22","typeDescriptions":{}}},"id":6364,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13933:13:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"functionReturnParameters":6346,"id":6365,"nodeType":"Return","src":"13926:20:22"}]},"documentation":{"id":6340,"nodeType":"StructuredDocumentation","src":"13445:285:22","text":" @dev Returns the downcasted uint64 from uint256, reverting on\n overflow (when the input is greater than largest uint64).\n Counterpart to Solidity's `uint64` operator.\n Requirements:\n - input must fit into 64 bits"},"id":6367,"implemented":true,"kind":"function","modifiers":[],"name":"toUint64","nameLocation":"13745:8:22","nodeType":"FunctionDefinition","parameters":{"id":6343,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6342,"mutability":"mutable","name":"value","nameLocation":"13762:5:22","nodeType":"VariableDeclaration","scope":6367,"src":"13754:13:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6341,"name":"uint256","nodeType":"ElementaryTypeName","src":"13754:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13753:15:22"},"returnParameters":{"id":6346,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6345,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6367,"src":"13792:6:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":6344,"name":"uint64","nodeType":"ElementaryTypeName","src":"13792:6:22","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"13791:8:22"},"scope":7433,"src":"13736:218:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6394,"nodeType":"Block","src":"14317:154:22","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6381,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6375,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6370,"src":"14332:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6378,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14345:6:22","typeDescriptions":{"typeIdentifier":"t_type$_t_uint56_$","typeString":"type(uint56)"},"typeName":{"id":6377,"name":"uint56","nodeType":"ElementaryTypeName","src":"14345:6:22","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint56_$","typeString":"type(uint56)"}],"id":6376,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"14340:4:22","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6379,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14340:12:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint56","typeString":"type(uint56)"}},"id":6380,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"14353:3:22","memberName":"max","nodeType":"MemberAccess","src":"14340:16:22","typeDescriptions":{"typeIdentifier":"t_uint56","typeString":"uint56"}},"src":"14332:24:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6388,"nodeType":"IfStatement","src":"14328:105:22","trueBody":{"id":6387,"nodeType":"Block","src":"14358:75:22","statements":[{"errorCall":{"arguments":[{"hexValue":"3536","id":6383,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14411:2:22","typeDescriptions":{"typeIdentifier":"t_rational_56_by_1","typeString":"int_const 56"},"value":"56"},{"id":6384,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6370,"src":"14415:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_56_by_1","typeString":"int_const 56"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6382,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5678,"src":"14380:30:22","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":6385,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14380:41:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6386,"nodeType":"RevertStatement","src":"14373:48:22"}]}},{"expression":{"arguments":[{"id":6391,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6370,"src":"14457:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6390,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14450:6:22","typeDescriptions":{"typeIdentifier":"t_type$_t_uint56_$","typeString":"type(uint56)"},"typeName":{"id":6389,"name":"uint56","nodeType":"ElementaryTypeName","src":"14450:6:22","typeDescriptions":{}}},"id":6392,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14450:13:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint56","typeString":"uint56"}},"functionReturnParameters":6374,"id":6393,"nodeType":"Return","src":"14443:20:22"}]},"documentation":{"id":6368,"nodeType":"StructuredDocumentation","src":"13962:285:22","text":" @dev Returns the downcasted uint56 from uint256, reverting on\n overflow (when the input is greater than largest uint56).\n Counterpart to Solidity's `uint56` operator.\n Requirements:\n - input must fit into 56 bits"},"id":6395,"implemented":true,"kind":"function","modifiers":[],"name":"toUint56","nameLocation":"14262:8:22","nodeType":"FunctionDefinition","parameters":{"id":6371,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6370,"mutability":"mutable","name":"value","nameLocation":"14279:5:22","nodeType":"VariableDeclaration","scope":6395,"src":"14271:13:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6369,"name":"uint256","nodeType":"ElementaryTypeName","src":"14271:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14270:15:22"},"returnParameters":{"id":6374,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6373,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6395,"src":"14309:6:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint56","typeString":"uint56"},"typeName":{"id":6372,"name":"uint56","nodeType":"ElementaryTypeName","src":"14309:6:22","typeDescriptions":{"typeIdentifier":"t_uint56","typeString":"uint56"}},"visibility":"internal"}],"src":"14308:8:22"},"scope":7433,"src":"14253:218:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6422,"nodeType":"Block","src":"14834:154:22","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6409,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6403,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6398,"src":"14849:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6406,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14862:6:22","typeDescriptions":{"typeIdentifier":"t_type$_t_uint48_$","typeString":"type(uint48)"},"typeName":{"id":6405,"name":"uint48","nodeType":"ElementaryTypeName","src":"14862:6:22","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint48_$","typeString":"type(uint48)"}],"id":6404,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"14857:4:22","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6407,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14857:12:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint48","typeString":"type(uint48)"}},"id":6408,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"14870:3:22","memberName":"max","nodeType":"MemberAccess","src":"14857:16:22","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"src":"14849:24:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6416,"nodeType":"IfStatement","src":"14845:105:22","trueBody":{"id":6415,"nodeType":"Block","src":"14875:75:22","statements":[{"errorCall":{"arguments":[{"hexValue":"3438","id":6411,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14928:2:22","typeDescriptions":{"typeIdentifier":"t_rational_48_by_1","typeString":"int_const 48"},"value":"48"},{"id":6412,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6398,"src":"14932:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_48_by_1","typeString":"int_const 48"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6410,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5678,"src":"14897:30:22","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":6413,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14897:41:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6414,"nodeType":"RevertStatement","src":"14890:48:22"}]}},{"expression":{"arguments":[{"id":6419,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6398,"src":"14974:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6418,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14967:6:22","typeDescriptions":{"typeIdentifier":"t_type$_t_uint48_$","typeString":"type(uint48)"},"typeName":{"id":6417,"name":"uint48","nodeType":"ElementaryTypeName","src":"14967:6:22","typeDescriptions":{}}},"id":6420,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14967:13:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"functionReturnParameters":6402,"id":6421,"nodeType":"Return","src":"14960:20:22"}]},"documentation":{"id":6396,"nodeType":"StructuredDocumentation","src":"14479:285:22","text":" @dev Returns the downcasted uint48 from uint256, reverting on\n overflow (when the input is greater than largest uint48).\n Counterpart to Solidity's `uint48` operator.\n Requirements:\n - input must fit into 48 bits"},"id":6423,"implemented":true,"kind":"function","modifiers":[],"name":"toUint48","nameLocation":"14779:8:22","nodeType":"FunctionDefinition","parameters":{"id":6399,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6398,"mutability":"mutable","name":"value","nameLocation":"14796:5:22","nodeType":"VariableDeclaration","scope":6423,"src":"14788:13:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6397,"name":"uint256","nodeType":"ElementaryTypeName","src":"14788:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14787:15:22"},"returnParameters":{"id":6402,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6401,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6423,"src":"14826:6:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"},"typeName":{"id":6400,"name":"uint48","nodeType":"ElementaryTypeName","src":"14826:6:22","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"visibility":"internal"}],"src":"14825:8:22"},"scope":7433,"src":"14770:218:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6450,"nodeType":"Block","src":"15351:154:22","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6437,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6431,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6426,"src":"15366:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6434,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15379:6:22","typeDescriptions":{"typeIdentifier":"t_type$_t_uint40_$","typeString":"type(uint40)"},"typeName":{"id":6433,"name":"uint40","nodeType":"ElementaryTypeName","src":"15379:6:22","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint40_$","typeString":"type(uint40)"}],"id":6432,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"15374:4:22","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6435,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15374:12:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint40","typeString":"type(uint40)"}},"id":6436,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"15387:3:22","memberName":"max","nodeType":"MemberAccess","src":"15374:16:22","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"}},"src":"15366:24:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6444,"nodeType":"IfStatement","src":"15362:105:22","trueBody":{"id":6443,"nodeType":"Block","src":"15392:75:22","statements":[{"errorCall":{"arguments":[{"hexValue":"3430","id":6439,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15445:2:22","typeDescriptions":{"typeIdentifier":"t_rational_40_by_1","typeString":"int_const 40"},"value":"40"},{"id":6440,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6426,"src":"15449:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_40_by_1","typeString":"int_const 40"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6438,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5678,"src":"15414:30:22","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":6441,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15414:41:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6442,"nodeType":"RevertStatement","src":"15407:48:22"}]}},{"expression":{"arguments":[{"id":6447,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6426,"src":"15491:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6446,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15484:6:22","typeDescriptions":{"typeIdentifier":"t_type$_t_uint40_$","typeString":"type(uint40)"},"typeName":{"id":6445,"name":"uint40","nodeType":"ElementaryTypeName","src":"15484:6:22","typeDescriptions":{}}},"id":6448,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15484:13:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"}},"functionReturnParameters":6430,"id":6449,"nodeType":"Return","src":"15477:20:22"}]},"documentation":{"id":6424,"nodeType":"StructuredDocumentation","src":"14996:285:22","text":" @dev Returns the downcasted uint40 from uint256, reverting on\n overflow (when the input is greater than largest uint40).\n Counterpart to Solidity's `uint40` operator.\n Requirements:\n - input must fit into 40 bits"},"id":6451,"implemented":true,"kind":"function","modifiers":[],"name":"toUint40","nameLocation":"15296:8:22","nodeType":"FunctionDefinition","parameters":{"id":6427,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6426,"mutability":"mutable","name":"value","nameLocation":"15313:5:22","nodeType":"VariableDeclaration","scope":6451,"src":"15305:13:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6425,"name":"uint256","nodeType":"ElementaryTypeName","src":"15305:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15304:15:22"},"returnParameters":{"id":6430,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6429,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6451,"src":"15343:6:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"},"typeName":{"id":6428,"name":"uint40","nodeType":"ElementaryTypeName","src":"15343:6:22","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"}},"visibility":"internal"}],"src":"15342:8:22"},"scope":7433,"src":"15287:218:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6478,"nodeType":"Block","src":"15868:154:22","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6465,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6459,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6454,"src":"15883:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6462,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15896:6:22","typeDescriptions":{"typeIdentifier":"t_type$_t_uint32_$","typeString":"type(uint32)"},"typeName":{"id":6461,"name":"uint32","nodeType":"ElementaryTypeName","src":"15896:6:22","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint32_$","typeString":"type(uint32)"}],"id":6460,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"15891:4:22","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6463,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15891:12:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint32","typeString":"type(uint32)"}},"id":6464,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"15904:3:22","memberName":"max","nodeType":"MemberAccess","src":"15891:16:22","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"src":"15883:24:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6472,"nodeType":"IfStatement","src":"15879:105:22","trueBody":{"id":6471,"nodeType":"Block","src":"15909:75:22","statements":[{"errorCall":{"arguments":[{"hexValue":"3332","id":6467,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15962:2:22","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},{"id":6468,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6454,"src":"15966:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6466,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5678,"src":"15931:30:22","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":6469,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15931:41:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6470,"nodeType":"RevertStatement","src":"15924:48:22"}]}},{"expression":{"arguments":[{"id":6475,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6454,"src":"16008:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6474,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16001:6:22","typeDescriptions":{"typeIdentifier":"t_type$_t_uint32_$","typeString":"type(uint32)"},"typeName":{"id":6473,"name":"uint32","nodeType":"ElementaryTypeName","src":"16001:6:22","typeDescriptions":{}}},"id":6476,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16001:13:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"functionReturnParameters":6458,"id":6477,"nodeType":"Return","src":"15994:20:22"}]},"documentation":{"id":6452,"nodeType":"StructuredDocumentation","src":"15513:285:22","text":" @dev Returns the downcasted uint32 from uint256, reverting on\n overflow (when the input is greater than largest uint32).\n Counterpart to Solidity's `uint32` operator.\n Requirements:\n - input must fit into 32 bits"},"id":6479,"implemented":true,"kind":"function","modifiers":[],"name":"toUint32","nameLocation":"15813:8:22","nodeType":"FunctionDefinition","parameters":{"id":6455,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6454,"mutability":"mutable","name":"value","nameLocation":"15830:5:22","nodeType":"VariableDeclaration","scope":6479,"src":"15822:13:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6453,"name":"uint256","nodeType":"ElementaryTypeName","src":"15822:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15821:15:22"},"returnParameters":{"id":6458,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6457,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6479,"src":"15860:6:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":6456,"name":"uint32","nodeType":"ElementaryTypeName","src":"15860:6:22","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"src":"15859:8:22"},"scope":7433,"src":"15804:218:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6506,"nodeType":"Block","src":"16385:154:22","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6493,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6487,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6482,"src":"16400:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6490,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16413:6:22","typeDescriptions":{"typeIdentifier":"t_type$_t_uint24_$","typeString":"type(uint24)"},"typeName":{"id":6489,"name":"uint24","nodeType":"ElementaryTypeName","src":"16413:6:22","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint24_$","typeString":"type(uint24)"}],"id":6488,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"16408:4:22","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6491,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16408:12:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint24","typeString":"type(uint24)"}},"id":6492,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"16421:3:22","memberName":"max","nodeType":"MemberAccess","src":"16408:16:22","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"src":"16400:24:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6500,"nodeType":"IfStatement","src":"16396:105:22","trueBody":{"id":6499,"nodeType":"Block","src":"16426:75:22","statements":[{"errorCall":{"arguments":[{"hexValue":"3234","id":6495,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16479:2:22","typeDescriptions":{"typeIdentifier":"t_rational_24_by_1","typeString":"int_const 24"},"value":"24"},{"id":6496,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6482,"src":"16483:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_24_by_1","typeString":"int_const 24"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6494,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5678,"src":"16448:30:22","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":6497,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16448:41:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6498,"nodeType":"RevertStatement","src":"16441:48:22"}]}},{"expression":{"arguments":[{"id":6503,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6482,"src":"16525:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6502,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16518:6:22","typeDescriptions":{"typeIdentifier":"t_type$_t_uint24_$","typeString":"type(uint24)"},"typeName":{"id":6501,"name":"uint24","nodeType":"ElementaryTypeName","src":"16518:6:22","typeDescriptions":{}}},"id":6504,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16518:13:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"functionReturnParameters":6486,"id":6505,"nodeType":"Return","src":"16511:20:22"}]},"documentation":{"id":6480,"nodeType":"StructuredDocumentation","src":"16030:285:22","text":" @dev Returns the downcasted uint24 from uint256, reverting on\n overflow (when the input is greater than largest uint24).\n Counterpart to Solidity's `uint24` operator.\n Requirements:\n - input must fit into 24 bits"},"id":6507,"implemented":true,"kind":"function","modifiers":[],"name":"toUint24","nameLocation":"16330:8:22","nodeType":"FunctionDefinition","parameters":{"id":6483,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6482,"mutability":"mutable","name":"value","nameLocation":"16347:5:22","nodeType":"VariableDeclaration","scope":6507,"src":"16339:13:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6481,"name":"uint256","nodeType":"ElementaryTypeName","src":"16339:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"16338:15:22"},"returnParameters":{"id":6486,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6485,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6507,"src":"16377:6:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"},"typeName":{"id":6484,"name":"uint24","nodeType":"ElementaryTypeName","src":"16377:6:22","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"visibility":"internal"}],"src":"16376:8:22"},"scope":7433,"src":"16321:218:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6534,"nodeType":"Block","src":"16902:154:22","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6521,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6515,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6510,"src":"16917:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6518,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16930:6:22","typeDescriptions":{"typeIdentifier":"t_type$_t_uint16_$","typeString":"type(uint16)"},"typeName":{"id":6517,"name":"uint16","nodeType":"ElementaryTypeName","src":"16930:6:22","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint16_$","typeString":"type(uint16)"}],"id":6516,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"16925:4:22","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6519,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16925:12:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint16","typeString":"type(uint16)"}},"id":6520,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"16938:3:22","memberName":"max","nodeType":"MemberAccess","src":"16925:16:22","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"src":"16917:24:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6528,"nodeType":"IfStatement","src":"16913:105:22","trueBody":{"id":6527,"nodeType":"Block","src":"16943:75:22","statements":[{"errorCall":{"arguments":[{"hexValue":"3136","id":6523,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16996:2:22","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},{"id":6524,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6510,"src":"17000:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6522,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5678,"src":"16965:30:22","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":6525,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16965:41:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6526,"nodeType":"RevertStatement","src":"16958:48:22"}]}},{"expression":{"arguments":[{"id":6531,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6510,"src":"17042:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6530,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"17035:6:22","typeDescriptions":{"typeIdentifier":"t_type$_t_uint16_$","typeString":"type(uint16)"},"typeName":{"id":6529,"name":"uint16","nodeType":"ElementaryTypeName","src":"17035:6:22","typeDescriptions":{}}},"id":6532,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17035:13:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"functionReturnParameters":6514,"id":6533,"nodeType":"Return","src":"17028:20:22"}]},"documentation":{"id":6508,"nodeType":"StructuredDocumentation","src":"16547:285:22","text":" @dev Returns the downcasted uint16 from uint256, reverting on\n overflow (when the input is greater than largest uint16).\n Counterpart to Solidity's `uint16` operator.\n Requirements:\n - input must fit into 16 bits"},"id":6535,"implemented":true,"kind":"function","modifiers":[],"name":"toUint16","nameLocation":"16847:8:22","nodeType":"FunctionDefinition","parameters":{"id":6511,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6510,"mutability":"mutable","name":"value","nameLocation":"16864:5:22","nodeType":"VariableDeclaration","scope":6535,"src":"16856:13:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6509,"name":"uint256","nodeType":"ElementaryTypeName","src":"16856:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"16855:15:22"},"returnParameters":{"id":6514,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6513,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6535,"src":"16894:6:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":6512,"name":"uint16","nodeType":"ElementaryTypeName","src":"16894:6:22","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"}],"src":"16893:8:22"},"scope":7433,"src":"16838:218:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6562,"nodeType":"Block","src":"17413:151:22","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6549,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6543,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6538,"src":"17428:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6546,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"17441:5:22","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":6545,"name":"uint8","nodeType":"ElementaryTypeName","src":"17441:5:22","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"}],"id":6544,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"17436:4:22","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6547,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17436:11:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint8","typeString":"type(uint8)"}},"id":6548,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"17448:3:22","memberName":"max","nodeType":"MemberAccess","src":"17436:15:22","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"17428:23:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6556,"nodeType":"IfStatement","src":"17424:103:22","trueBody":{"id":6555,"nodeType":"Block","src":"17453:74:22","statements":[{"errorCall":{"arguments":[{"hexValue":"38","id":6551,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17506:1:22","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},{"id":6552,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6538,"src":"17509:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6550,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5678,"src":"17475:30:22","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":6553,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17475:40:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6554,"nodeType":"RevertStatement","src":"17468:47:22"}]}},{"expression":{"arguments":[{"id":6559,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6538,"src":"17550:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6558,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"17544:5:22","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":6557,"name":"uint8","nodeType":"ElementaryTypeName","src":"17544:5:22","typeDescriptions":{}}},"id":6560,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17544:12:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"functionReturnParameters":6542,"id":6561,"nodeType":"Return","src":"17537:19:22"}]},"documentation":{"id":6536,"nodeType":"StructuredDocumentation","src":"17064:281:22","text":" @dev Returns the downcasted uint8 from uint256, reverting on\n overflow (when the input is greater than largest uint8).\n Counterpart to Solidity's `uint8` operator.\n Requirements:\n - input must fit into 8 bits"},"id":6563,"implemented":true,"kind":"function","modifiers":[],"name":"toUint8","nameLocation":"17360:7:22","nodeType":"FunctionDefinition","parameters":{"id":6539,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6538,"mutability":"mutable","name":"value","nameLocation":"17376:5:22","nodeType":"VariableDeclaration","scope":6563,"src":"17368:13:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6537,"name":"uint256","nodeType":"ElementaryTypeName","src":"17368:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"17367:15:22"},"returnParameters":{"id":6542,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6541,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6563,"src":"17406:5:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":6540,"name":"uint8","nodeType":"ElementaryTypeName","src":"17406:5:22","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"17405:7:22"},"scope":7433,"src":"17351:213:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6585,"nodeType":"Block","src":"17809:133:22","statements":[{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6573,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6571,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6566,"src":"17824:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"30","id":6572,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17832:1:22","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"17824:9:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6579,"nodeType":"IfStatement","src":"17820:83:22","trueBody":{"id":6578,"nodeType":"Block","src":"17835:68:22","statements":[{"errorCall":{"arguments":[{"id":6575,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6566,"src":"17885:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6574,"name":"SafeCastOverflowedIntToUint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5683,"src":"17857:27:22","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_int256_$returns$_t_error_$","typeString":"function (int256) pure returns (error)"}},"id":6576,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17857:34:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6577,"nodeType":"RevertStatement","src":"17850:41:22"}]}},{"expression":{"arguments":[{"id":6582,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6566,"src":"17928:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6581,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"17920:7:22","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":6580,"name":"uint256","nodeType":"ElementaryTypeName","src":"17920:7:22","typeDescriptions":{}}},"id":6583,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17920:14:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":6570,"id":6584,"nodeType":"Return","src":"17913:21:22"}]},"documentation":{"id":6564,"nodeType":"StructuredDocumentation","src":"17572:166:22","text":" @dev Converts a signed int256 into an unsigned uint256.\n Requirements:\n - input must be greater than or equal to 0."},"id":6586,"implemented":true,"kind":"function","modifiers":[],"name":"toUint256","nameLocation":"17753:9:22","nodeType":"FunctionDefinition","parameters":{"id":6567,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6566,"mutability":"mutable","name":"value","nameLocation":"17770:5:22","nodeType":"VariableDeclaration","scope":6586,"src":"17763:12:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6565,"name":"int256","nodeType":"ElementaryTypeName","src":"17763:6:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"17762:14:22"},"returnParameters":{"id":6570,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6569,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6586,"src":"17800:7:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6568,"name":"uint256","nodeType":"ElementaryTypeName","src":"17800:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"17799:9:22"},"scope":7433,"src":"17744:198:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6611,"nodeType":"Block","src":"18352:155:22","statements":[{"expression":{"id":6599,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6594,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6592,"src":"18363:10:22","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6597,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6589,"src":"18383:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6596,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"18376:6:22","typeDescriptions":{"typeIdentifier":"t_type$_t_int248_$","typeString":"type(int248)"},"typeName":{"id":6595,"name":"int248","nodeType":"ElementaryTypeName","src":"18376:6:22","typeDescriptions":{}}},"id":6598,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18376:13:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"src":"18363:26:22","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"id":6600,"nodeType":"ExpressionStatement","src":"18363:26:22"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6603,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6601,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6592,"src":"18404:10:22","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6602,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6589,"src":"18418:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"18404:19:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6610,"nodeType":"IfStatement","src":"18400:100:22","trueBody":{"id":6609,"nodeType":"Block","src":"18425:75:22","statements":[{"errorCall":{"arguments":[{"hexValue":"323438","id":6605,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18477:3:22","typeDescriptions":{"typeIdentifier":"t_rational_248_by_1","typeString":"int_const 248"},"value":"248"},{"id":6606,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6589,"src":"18482:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_248_by_1","typeString":"int_const 248"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6604,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5690,"src":"18447:29:22","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":6607,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18447:41:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6608,"nodeType":"RevertStatement","src":"18440:48:22"}]}}]},"documentation":{"id":6587,"nodeType":"StructuredDocumentation","src":"17950:322:22","text":" @dev Returns the downcasted int248 from int256, reverting on\n overflow (when the input is less than smallest int248 or\n greater than largest int248).\n Counterpart to Solidity's `int248` operator.\n Requirements:\n - input must fit into 248 bits"},"id":6612,"implemented":true,"kind":"function","modifiers":[],"name":"toInt248","nameLocation":"18287:8:22","nodeType":"FunctionDefinition","parameters":{"id":6590,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6589,"mutability":"mutable","name":"value","nameLocation":"18303:5:22","nodeType":"VariableDeclaration","scope":6612,"src":"18296:12:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6588,"name":"int256","nodeType":"ElementaryTypeName","src":"18296:6:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"18295:14:22"},"returnParameters":{"id":6593,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6592,"mutability":"mutable","name":"downcasted","nameLocation":"18340:10:22","nodeType":"VariableDeclaration","scope":6612,"src":"18333:17:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"},"typeName":{"id":6591,"name":"int248","nodeType":"ElementaryTypeName","src":"18333:6:22","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"visibility":"internal"}],"src":"18332:19:22"},"scope":7433,"src":"18278:229:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6637,"nodeType":"Block","src":"18917:155:22","statements":[{"expression":{"id":6625,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6620,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6618,"src":"18928:10:22","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6623,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6615,"src":"18948:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6622,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"18941:6:22","typeDescriptions":{"typeIdentifier":"t_type$_t_int240_$","typeString":"type(int240)"},"typeName":{"id":6621,"name":"int240","nodeType":"ElementaryTypeName","src":"18941:6:22","typeDescriptions":{}}},"id":6624,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18941:13:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"src":"18928:26:22","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"id":6626,"nodeType":"ExpressionStatement","src":"18928:26:22"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6629,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6627,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6618,"src":"18969:10:22","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6628,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6615,"src":"18983:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"18969:19:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6636,"nodeType":"IfStatement","src":"18965:100:22","trueBody":{"id":6635,"nodeType":"Block","src":"18990:75:22","statements":[{"errorCall":{"arguments":[{"hexValue":"323430","id":6631,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19042:3:22","typeDescriptions":{"typeIdentifier":"t_rational_240_by_1","typeString":"int_const 240"},"value":"240"},{"id":6632,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6615,"src":"19047:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_240_by_1","typeString":"int_const 240"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6630,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5690,"src":"19012:29:22","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":6633,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19012:41:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6634,"nodeType":"RevertStatement","src":"19005:48:22"}]}}]},"documentation":{"id":6613,"nodeType":"StructuredDocumentation","src":"18515:322:22","text":" @dev Returns the downcasted int240 from int256, reverting on\n overflow (when the input is less than smallest int240 or\n greater than largest int240).\n Counterpart to Solidity's `int240` operator.\n Requirements:\n - input must fit into 240 bits"},"id":6638,"implemented":true,"kind":"function","modifiers":[],"name":"toInt240","nameLocation":"18852:8:22","nodeType":"FunctionDefinition","parameters":{"id":6616,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6615,"mutability":"mutable","name":"value","nameLocation":"18868:5:22","nodeType":"VariableDeclaration","scope":6638,"src":"18861:12:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6614,"name":"int256","nodeType":"ElementaryTypeName","src":"18861:6:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"18860:14:22"},"returnParameters":{"id":6619,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6618,"mutability":"mutable","name":"downcasted","nameLocation":"18905:10:22","nodeType":"VariableDeclaration","scope":6638,"src":"18898:17:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"},"typeName":{"id":6617,"name":"int240","nodeType":"ElementaryTypeName","src":"18898:6:22","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"visibility":"internal"}],"src":"18897:19:22"},"scope":7433,"src":"18843:229:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6663,"nodeType":"Block","src":"19482:155:22","statements":[{"expression":{"id":6651,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6646,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6644,"src":"19493:10:22","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6649,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6641,"src":"19513:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6648,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"19506:6:22","typeDescriptions":{"typeIdentifier":"t_type$_t_int232_$","typeString":"type(int232)"},"typeName":{"id":6647,"name":"int232","nodeType":"ElementaryTypeName","src":"19506:6:22","typeDescriptions":{}}},"id":6650,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19506:13:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"src":"19493:26:22","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"id":6652,"nodeType":"ExpressionStatement","src":"19493:26:22"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6655,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6653,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6644,"src":"19534:10:22","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6654,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6641,"src":"19548:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"19534:19:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6662,"nodeType":"IfStatement","src":"19530:100:22","trueBody":{"id":6661,"nodeType":"Block","src":"19555:75:22","statements":[{"errorCall":{"arguments":[{"hexValue":"323332","id":6657,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19607:3:22","typeDescriptions":{"typeIdentifier":"t_rational_232_by_1","typeString":"int_const 232"},"value":"232"},{"id":6658,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6641,"src":"19612:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_232_by_1","typeString":"int_const 232"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6656,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5690,"src":"19577:29:22","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":6659,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19577:41:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6660,"nodeType":"RevertStatement","src":"19570:48:22"}]}}]},"documentation":{"id":6639,"nodeType":"StructuredDocumentation","src":"19080:322:22","text":" @dev Returns the downcasted int232 from int256, reverting on\n overflow (when the input is less than smallest int232 or\n greater than largest int232).\n Counterpart to Solidity's `int232` operator.\n Requirements:\n - input must fit into 232 bits"},"id":6664,"implemented":true,"kind":"function","modifiers":[],"name":"toInt232","nameLocation":"19417:8:22","nodeType":"FunctionDefinition","parameters":{"id":6642,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6641,"mutability":"mutable","name":"value","nameLocation":"19433:5:22","nodeType":"VariableDeclaration","scope":6664,"src":"19426:12:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6640,"name":"int256","nodeType":"ElementaryTypeName","src":"19426:6:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"19425:14:22"},"returnParameters":{"id":6645,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6644,"mutability":"mutable","name":"downcasted","nameLocation":"19470:10:22","nodeType":"VariableDeclaration","scope":6664,"src":"19463:17:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"},"typeName":{"id":6643,"name":"int232","nodeType":"ElementaryTypeName","src":"19463:6:22","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"visibility":"internal"}],"src":"19462:19:22"},"scope":7433,"src":"19408:229:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6689,"nodeType":"Block","src":"20047:155:22","statements":[{"expression":{"id":6677,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6672,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6670,"src":"20058:10:22","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6675,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6667,"src":"20078:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6674,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"20071:6:22","typeDescriptions":{"typeIdentifier":"t_type$_t_int224_$","typeString":"type(int224)"},"typeName":{"id":6673,"name":"int224","nodeType":"ElementaryTypeName","src":"20071:6:22","typeDescriptions":{}}},"id":6676,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20071:13:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"src":"20058:26:22","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"id":6678,"nodeType":"ExpressionStatement","src":"20058:26:22"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6681,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6679,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6670,"src":"20099:10:22","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6680,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6667,"src":"20113:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"20099:19:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6688,"nodeType":"IfStatement","src":"20095:100:22","trueBody":{"id":6687,"nodeType":"Block","src":"20120:75:22","statements":[{"errorCall":{"arguments":[{"hexValue":"323234","id":6683,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20172:3:22","typeDescriptions":{"typeIdentifier":"t_rational_224_by_1","typeString":"int_const 224"},"value":"224"},{"id":6684,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6667,"src":"20177:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_224_by_1","typeString":"int_const 224"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6682,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5690,"src":"20142:29:22","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":6685,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20142:41:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6686,"nodeType":"RevertStatement","src":"20135:48:22"}]}}]},"documentation":{"id":6665,"nodeType":"StructuredDocumentation","src":"19645:322:22","text":" @dev Returns the downcasted int224 from int256, reverting on\n overflow (when the input is less than smallest int224 or\n greater than largest int224).\n Counterpart to Solidity's `int224` operator.\n Requirements:\n - input must fit into 224 bits"},"id":6690,"implemented":true,"kind":"function","modifiers":[],"name":"toInt224","nameLocation":"19982:8:22","nodeType":"FunctionDefinition","parameters":{"id":6668,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6667,"mutability":"mutable","name":"value","nameLocation":"19998:5:22","nodeType":"VariableDeclaration","scope":6690,"src":"19991:12:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6666,"name":"int256","nodeType":"ElementaryTypeName","src":"19991:6:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"19990:14:22"},"returnParameters":{"id":6671,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6670,"mutability":"mutable","name":"downcasted","nameLocation":"20035:10:22","nodeType":"VariableDeclaration","scope":6690,"src":"20028:17:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"},"typeName":{"id":6669,"name":"int224","nodeType":"ElementaryTypeName","src":"20028:6:22","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"visibility":"internal"}],"src":"20027:19:22"},"scope":7433,"src":"19973:229:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6715,"nodeType":"Block","src":"20612:155:22","statements":[{"expression":{"id":6703,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6698,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6696,"src":"20623:10:22","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6701,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6693,"src":"20643:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6700,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"20636:6:22","typeDescriptions":{"typeIdentifier":"t_type$_t_int216_$","typeString":"type(int216)"},"typeName":{"id":6699,"name":"int216","nodeType":"ElementaryTypeName","src":"20636:6:22","typeDescriptions":{}}},"id":6702,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20636:13:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"src":"20623:26:22","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"id":6704,"nodeType":"ExpressionStatement","src":"20623:26:22"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6707,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6705,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6696,"src":"20664:10:22","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6706,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6693,"src":"20678:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"20664:19:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6714,"nodeType":"IfStatement","src":"20660:100:22","trueBody":{"id":6713,"nodeType":"Block","src":"20685:75:22","statements":[{"errorCall":{"arguments":[{"hexValue":"323136","id":6709,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20737:3:22","typeDescriptions":{"typeIdentifier":"t_rational_216_by_1","typeString":"int_const 216"},"value":"216"},{"id":6710,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6693,"src":"20742:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_216_by_1","typeString":"int_const 216"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6708,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5690,"src":"20707:29:22","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":6711,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20707:41:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6712,"nodeType":"RevertStatement","src":"20700:48:22"}]}}]},"documentation":{"id":6691,"nodeType":"StructuredDocumentation","src":"20210:322:22","text":" @dev Returns the downcasted int216 from int256, reverting on\n overflow (when the input is less than smallest int216 or\n greater than largest int216).\n Counterpart to Solidity's `int216` operator.\n Requirements:\n - input must fit into 216 bits"},"id":6716,"implemented":true,"kind":"function","modifiers":[],"name":"toInt216","nameLocation":"20547:8:22","nodeType":"FunctionDefinition","parameters":{"id":6694,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6693,"mutability":"mutable","name":"value","nameLocation":"20563:5:22","nodeType":"VariableDeclaration","scope":6716,"src":"20556:12:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6692,"name":"int256","nodeType":"ElementaryTypeName","src":"20556:6:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"20555:14:22"},"returnParameters":{"id":6697,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6696,"mutability":"mutable","name":"downcasted","nameLocation":"20600:10:22","nodeType":"VariableDeclaration","scope":6716,"src":"20593:17:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"},"typeName":{"id":6695,"name":"int216","nodeType":"ElementaryTypeName","src":"20593:6:22","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"visibility":"internal"}],"src":"20592:19:22"},"scope":7433,"src":"20538:229:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6741,"nodeType":"Block","src":"21177:155:22","statements":[{"expression":{"id":6729,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6724,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6722,"src":"21188:10:22","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6727,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6719,"src":"21208:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6726,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"21201:6:22","typeDescriptions":{"typeIdentifier":"t_type$_t_int208_$","typeString":"type(int208)"},"typeName":{"id":6725,"name":"int208","nodeType":"ElementaryTypeName","src":"21201:6:22","typeDescriptions":{}}},"id":6728,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21201:13:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"src":"21188:26:22","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"id":6730,"nodeType":"ExpressionStatement","src":"21188:26:22"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6733,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6731,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6722,"src":"21229:10:22","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6732,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6719,"src":"21243:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"21229:19:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6740,"nodeType":"IfStatement","src":"21225:100:22","trueBody":{"id":6739,"nodeType":"Block","src":"21250:75:22","statements":[{"errorCall":{"arguments":[{"hexValue":"323038","id":6735,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21302:3:22","typeDescriptions":{"typeIdentifier":"t_rational_208_by_1","typeString":"int_const 208"},"value":"208"},{"id":6736,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6719,"src":"21307:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_208_by_1","typeString":"int_const 208"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6734,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5690,"src":"21272:29:22","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":6737,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21272:41:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6738,"nodeType":"RevertStatement","src":"21265:48:22"}]}}]},"documentation":{"id":6717,"nodeType":"StructuredDocumentation","src":"20775:322:22","text":" @dev Returns the downcasted int208 from int256, reverting on\n overflow (when the input is less than smallest int208 or\n greater than largest int208).\n Counterpart to Solidity's `int208` operator.\n Requirements:\n - input must fit into 208 bits"},"id":6742,"implemented":true,"kind":"function","modifiers":[],"name":"toInt208","nameLocation":"21112:8:22","nodeType":"FunctionDefinition","parameters":{"id":6720,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6719,"mutability":"mutable","name":"value","nameLocation":"21128:5:22","nodeType":"VariableDeclaration","scope":6742,"src":"21121:12:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6718,"name":"int256","nodeType":"ElementaryTypeName","src":"21121:6:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"21120:14:22"},"returnParameters":{"id":6723,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6722,"mutability":"mutable","name":"downcasted","nameLocation":"21165:10:22","nodeType":"VariableDeclaration","scope":6742,"src":"21158:17:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"},"typeName":{"id":6721,"name":"int208","nodeType":"ElementaryTypeName","src":"21158:6:22","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"visibility":"internal"}],"src":"21157:19:22"},"scope":7433,"src":"21103:229:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6767,"nodeType":"Block","src":"21742:155:22","statements":[{"expression":{"id":6755,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6750,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6748,"src":"21753:10:22","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6753,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6745,"src":"21773:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6752,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"21766:6:22","typeDescriptions":{"typeIdentifier":"t_type$_t_int200_$","typeString":"type(int200)"},"typeName":{"id":6751,"name":"int200","nodeType":"ElementaryTypeName","src":"21766:6:22","typeDescriptions":{}}},"id":6754,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21766:13:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"src":"21753:26:22","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"id":6756,"nodeType":"ExpressionStatement","src":"21753:26:22"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6759,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6757,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6748,"src":"21794:10:22","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6758,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6745,"src":"21808:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"21794:19:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6766,"nodeType":"IfStatement","src":"21790:100:22","trueBody":{"id":6765,"nodeType":"Block","src":"21815:75:22","statements":[{"errorCall":{"arguments":[{"hexValue":"323030","id":6761,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21867:3:22","typeDescriptions":{"typeIdentifier":"t_rational_200_by_1","typeString":"int_const 200"},"value":"200"},{"id":6762,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6745,"src":"21872:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_200_by_1","typeString":"int_const 200"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6760,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5690,"src":"21837:29:22","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":6763,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21837:41:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6764,"nodeType":"RevertStatement","src":"21830:48:22"}]}}]},"documentation":{"id":6743,"nodeType":"StructuredDocumentation","src":"21340:322:22","text":" @dev Returns the downcasted int200 from int256, reverting on\n overflow (when the input is less than smallest int200 or\n greater than largest int200).\n Counterpart to Solidity's `int200` operator.\n Requirements:\n - input must fit into 200 bits"},"id":6768,"implemented":true,"kind":"function","modifiers":[],"name":"toInt200","nameLocation":"21677:8:22","nodeType":"FunctionDefinition","parameters":{"id":6746,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6745,"mutability":"mutable","name":"value","nameLocation":"21693:5:22","nodeType":"VariableDeclaration","scope":6768,"src":"21686:12:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6744,"name":"int256","nodeType":"ElementaryTypeName","src":"21686:6:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"21685:14:22"},"returnParameters":{"id":6749,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6748,"mutability":"mutable","name":"downcasted","nameLocation":"21730:10:22","nodeType":"VariableDeclaration","scope":6768,"src":"21723:17:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"},"typeName":{"id":6747,"name":"int200","nodeType":"ElementaryTypeName","src":"21723:6:22","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"visibility":"internal"}],"src":"21722:19:22"},"scope":7433,"src":"21668:229:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6793,"nodeType":"Block","src":"22307:155:22","statements":[{"expression":{"id":6781,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6776,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6774,"src":"22318:10:22","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6779,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6771,"src":"22338:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6778,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"22331:6:22","typeDescriptions":{"typeIdentifier":"t_type$_t_int192_$","typeString":"type(int192)"},"typeName":{"id":6777,"name":"int192","nodeType":"ElementaryTypeName","src":"22331:6:22","typeDescriptions":{}}},"id":6780,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22331:13:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"src":"22318:26:22","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"id":6782,"nodeType":"ExpressionStatement","src":"22318:26:22"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6785,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6783,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6774,"src":"22359:10:22","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6784,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6771,"src":"22373:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"22359:19:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6792,"nodeType":"IfStatement","src":"22355:100:22","trueBody":{"id":6791,"nodeType":"Block","src":"22380:75:22","statements":[{"errorCall":{"arguments":[{"hexValue":"313932","id":6787,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22432:3:22","typeDescriptions":{"typeIdentifier":"t_rational_192_by_1","typeString":"int_const 192"},"value":"192"},{"id":6788,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6771,"src":"22437:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_192_by_1","typeString":"int_const 192"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6786,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5690,"src":"22402:29:22","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":6789,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22402:41:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6790,"nodeType":"RevertStatement","src":"22395:48:22"}]}}]},"documentation":{"id":6769,"nodeType":"StructuredDocumentation","src":"21905:322:22","text":" @dev Returns the downcasted int192 from int256, reverting on\n overflow (when the input is less than smallest int192 or\n greater than largest int192).\n Counterpart to Solidity's `int192` operator.\n Requirements:\n - input must fit into 192 bits"},"id":6794,"implemented":true,"kind":"function","modifiers":[],"name":"toInt192","nameLocation":"22242:8:22","nodeType":"FunctionDefinition","parameters":{"id":6772,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6771,"mutability":"mutable","name":"value","nameLocation":"22258:5:22","nodeType":"VariableDeclaration","scope":6794,"src":"22251:12:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6770,"name":"int256","nodeType":"ElementaryTypeName","src":"22251:6:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"22250:14:22"},"returnParameters":{"id":6775,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6774,"mutability":"mutable","name":"downcasted","nameLocation":"22295:10:22","nodeType":"VariableDeclaration","scope":6794,"src":"22288:17:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"},"typeName":{"id":6773,"name":"int192","nodeType":"ElementaryTypeName","src":"22288:6:22","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"visibility":"internal"}],"src":"22287:19:22"},"scope":7433,"src":"22233:229:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6819,"nodeType":"Block","src":"22872:155:22","statements":[{"expression":{"id":6807,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6802,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6800,"src":"22883:10:22","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6805,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6797,"src":"22903:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6804,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"22896:6:22","typeDescriptions":{"typeIdentifier":"t_type$_t_int184_$","typeString":"type(int184)"},"typeName":{"id":6803,"name":"int184","nodeType":"ElementaryTypeName","src":"22896:6:22","typeDescriptions":{}}},"id":6806,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22896:13:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"src":"22883:26:22","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"id":6808,"nodeType":"ExpressionStatement","src":"22883:26:22"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6811,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6809,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6800,"src":"22924:10:22","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6810,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6797,"src":"22938:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"22924:19:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6818,"nodeType":"IfStatement","src":"22920:100:22","trueBody":{"id":6817,"nodeType":"Block","src":"22945:75:22","statements":[{"errorCall":{"arguments":[{"hexValue":"313834","id":6813,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22997:3:22","typeDescriptions":{"typeIdentifier":"t_rational_184_by_1","typeString":"int_const 184"},"value":"184"},{"id":6814,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6797,"src":"23002:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_184_by_1","typeString":"int_const 184"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6812,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5690,"src":"22967:29:22","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":6815,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22967:41:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6816,"nodeType":"RevertStatement","src":"22960:48:22"}]}}]},"documentation":{"id":6795,"nodeType":"StructuredDocumentation","src":"22470:322:22","text":" @dev Returns the downcasted int184 from int256, reverting on\n overflow (when the input is less than smallest int184 or\n greater than largest int184).\n Counterpart to Solidity's `int184` operator.\n Requirements:\n - input must fit into 184 bits"},"id":6820,"implemented":true,"kind":"function","modifiers":[],"name":"toInt184","nameLocation":"22807:8:22","nodeType":"FunctionDefinition","parameters":{"id":6798,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6797,"mutability":"mutable","name":"value","nameLocation":"22823:5:22","nodeType":"VariableDeclaration","scope":6820,"src":"22816:12:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6796,"name":"int256","nodeType":"ElementaryTypeName","src":"22816:6:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"22815:14:22"},"returnParameters":{"id":6801,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6800,"mutability":"mutable","name":"downcasted","nameLocation":"22860:10:22","nodeType":"VariableDeclaration","scope":6820,"src":"22853:17:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"},"typeName":{"id":6799,"name":"int184","nodeType":"ElementaryTypeName","src":"22853:6:22","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"visibility":"internal"}],"src":"22852:19:22"},"scope":7433,"src":"22798:229:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6845,"nodeType":"Block","src":"23437:155:22","statements":[{"expression":{"id":6833,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6828,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6826,"src":"23448:10:22","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6831,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6823,"src":"23468:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6830,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"23461:6:22","typeDescriptions":{"typeIdentifier":"t_type$_t_int176_$","typeString":"type(int176)"},"typeName":{"id":6829,"name":"int176","nodeType":"ElementaryTypeName","src":"23461:6:22","typeDescriptions":{}}},"id":6832,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23461:13:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"src":"23448:26:22","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"id":6834,"nodeType":"ExpressionStatement","src":"23448:26:22"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6837,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6835,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6826,"src":"23489:10:22","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6836,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6823,"src":"23503:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"23489:19:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6844,"nodeType":"IfStatement","src":"23485:100:22","trueBody":{"id":6843,"nodeType":"Block","src":"23510:75:22","statements":[{"errorCall":{"arguments":[{"hexValue":"313736","id":6839,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"23562:3:22","typeDescriptions":{"typeIdentifier":"t_rational_176_by_1","typeString":"int_const 176"},"value":"176"},{"id":6840,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6823,"src":"23567:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_176_by_1","typeString":"int_const 176"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6838,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5690,"src":"23532:29:22","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":6841,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23532:41:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6842,"nodeType":"RevertStatement","src":"23525:48:22"}]}}]},"documentation":{"id":6821,"nodeType":"StructuredDocumentation","src":"23035:322:22","text":" @dev Returns the downcasted int176 from int256, reverting on\n overflow (when the input is less than smallest int176 or\n greater than largest int176).\n Counterpart to Solidity's `int176` operator.\n Requirements:\n - input must fit into 176 bits"},"id":6846,"implemented":true,"kind":"function","modifiers":[],"name":"toInt176","nameLocation":"23372:8:22","nodeType":"FunctionDefinition","parameters":{"id":6824,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6823,"mutability":"mutable","name":"value","nameLocation":"23388:5:22","nodeType":"VariableDeclaration","scope":6846,"src":"23381:12:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6822,"name":"int256","nodeType":"ElementaryTypeName","src":"23381:6:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"23380:14:22"},"returnParameters":{"id":6827,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6826,"mutability":"mutable","name":"downcasted","nameLocation":"23425:10:22","nodeType":"VariableDeclaration","scope":6846,"src":"23418:17:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"},"typeName":{"id":6825,"name":"int176","nodeType":"ElementaryTypeName","src":"23418:6:22","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"visibility":"internal"}],"src":"23417:19:22"},"scope":7433,"src":"23363:229:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6871,"nodeType":"Block","src":"24002:155:22","statements":[{"expression":{"id":6859,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6854,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6852,"src":"24013:10:22","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6857,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6849,"src":"24033:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6856,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"24026:6:22","typeDescriptions":{"typeIdentifier":"t_type$_t_int168_$","typeString":"type(int168)"},"typeName":{"id":6855,"name":"int168","nodeType":"ElementaryTypeName","src":"24026:6:22","typeDescriptions":{}}},"id":6858,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24026:13:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"src":"24013:26:22","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"id":6860,"nodeType":"ExpressionStatement","src":"24013:26:22"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6863,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6861,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6852,"src":"24054:10:22","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6862,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6849,"src":"24068:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"24054:19:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6870,"nodeType":"IfStatement","src":"24050:100:22","trueBody":{"id":6869,"nodeType":"Block","src":"24075:75:22","statements":[{"errorCall":{"arguments":[{"hexValue":"313638","id":6865,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24127:3:22","typeDescriptions":{"typeIdentifier":"t_rational_168_by_1","typeString":"int_const 168"},"value":"168"},{"id":6866,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6849,"src":"24132:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_168_by_1","typeString":"int_const 168"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6864,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5690,"src":"24097:29:22","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":6867,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24097:41:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6868,"nodeType":"RevertStatement","src":"24090:48:22"}]}}]},"documentation":{"id":6847,"nodeType":"StructuredDocumentation","src":"23600:322:22","text":" @dev Returns the downcasted int168 from int256, reverting on\n overflow (when the input is less than smallest int168 or\n greater than largest int168).\n Counterpart to Solidity's `int168` operator.\n Requirements:\n - input must fit into 168 bits"},"id":6872,"implemented":true,"kind":"function","modifiers":[],"name":"toInt168","nameLocation":"23937:8:22","nodeType":"FunctionDefinition","parameters":{"id":6850,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6849,"mutability":"mutable","name":"value","nameLocation":"23953:5:22","nodeType":"VariableDeclaration","scope":6872,"src":"23946:12:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6848,"name":"int256","nodeType":"ElementaryTypeName","src":"23946:6:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"23945:14:22"},"returnParameters":{"id":6853,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6852,"mutability":"mutable","name":"downcasted","nameLocation":"23990:10:22","nodeType":"VariableDeclaration","scope":6872,"src":"23983:17:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"},"typeName":{"id":6851,"name":"int168","nodeType":"ElementaryTypeName","src":"23983:6:22","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"visibility":"internal"}],"src":"23982:19:22"},"scope":7433,"src":"23928:229:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6897,"nodeType":"Block","src":"24567:155:22","statements":[{"expression":{"id":6885,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6880,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6878,"src":"24578:10:22","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6883,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6875,"src":"24598:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6882,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"24591:6:22","typeDescriptions":{"typeIdentifier":"t_type$_t_int160_$","typeString":"type(int160)"},"typeName":{"id":6881,"name":"int160","nodeType":"ElementaryTypeName","src":"24591:6:22","typeDescriptions":{}}},"id":6884,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24591:13:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"src":"24578:26:22","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"id":6886,"nodeType":"ExpressionStatement","src":"24578:26:22"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6889,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6887,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6878,"src":"24619:10:22","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6888,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6875,"src":"24633:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"24619:19:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6896,"nodeType":"IfStatement","src":"24615:100:22","trueBody":{"id":6895,"nodeType":"Block","src":"24640:75:22","statements":[{"errorCall":{"arguments":[{"hexValue":"313630","id":6891,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24692:3:22","typeDescriptions":{"typeIdentifier":"t_rational_160_by_1","typeString":"int_const 160"},"value":"160"},{"id":6892,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6875,"src":"24697:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_160_by_1","typeString":"int_const 160"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6890,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5690,"src":"24662:29:22","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":6893,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24662:41:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6894,"nodeType":"RevertStatement","src":"24655:48:22"}]}}]},"documentation":{"id":6873,"nodeType":"StructuredDocumentation","src":"24165:322:22","text":" @dev Returns the downcasted int160 from int256, reverting on\n overflow (when the input is less than smallest int160 or\n greater than largest int160).\n Counterpart to Solidity's `int160` operator.\n Requirements:\n - input must fit into 160 bits"},"id":6898,"implemented":true,"kind":"function","modifiers":[],"name":"toInt160","nameLocation":"24502:8:22","nodeType":"FunctionDefinition","parameters":{"id":6876,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6875,"mutability":"mutable","name":"value","nameLocation":"24518:5:22","nodeType":"VariableDeclaration","scope":6898,"src":"24511:12:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6874,"name":"int256","nodeType":"ElementaryTypeName","src":"24511:6:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"24510:14:22"},"returnParameters":{"id":6879,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6878,"mutability":"mutable","name":"downcasted","nameLocation":"24555:10:22","nodeType":"VariableDeclaration","scope":6898,"src":"24548:17:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"},"typeName":{"id":6877,"name":"int160","nodeType":"ElementaryTypeName","src":"24548:6:22","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"visibility":"internal"}],"src":"24547:19:22"},"scope":7433,"src":"24493:229:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6923,"nodeType":"Block","src":"25132:155:22","statements":[{"expression":{"id":6911,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6906,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6904,"src":"25143:10:22","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6909,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6901,"src":"25163:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6908,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"25156:6:22","typeDescriptions":{"typeIdentifier":"t_type$_t_int152_$","typeString":"type(int152)"},"typeName":{"id":6907,"name":"int152","nodeType":"ElementaryTypeName","src":"25156:6:22","typeDescriptions":{}}},"id":6910,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25156:13:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"src":"25143:26:22","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"id":6912,"nodeType":"ExpressionStatement","src":"25143:26:22"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6915,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6913,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6904,"src":"25184:10:22","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6914,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6901,"src":"25198:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"25184:19:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6922,"nodeType":"IfStatement","src":"25180:100:22","trueBody":{"id":6921,"nodeType":"Block","src":"25205:75:22","statements":[{"errorCall":{"arguments":[{"hexValue":"313532","id":6917,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25257:3:22","typeDescriptions":{"typeIdentifier":"t_rational_152_by_1","typeString":"int_const 152"},"value":"152"},{"id":6918,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6901,"src":"25262:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_152_by_1","typeString":"int_const 152"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6916,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5690,"src":"25227:29:22","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":6919,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25227:41:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6920,"nodeType":"RevertStatement","src":"25220:48:22"}]}}]},"documentation":{"id":6899,"nodeType":"StructuredDocumentation","src":"24730:322:22","text":" @dev Returns the downcasted int152 from int256, reverting on\n overflow (when the input is less than smallest int152 or\n greater than largest int152).\n Counterpart to Solidity's `int152` operator.\n Requirements:\n - input must fit into 152 bits"},"id":6924,"implemented":true,"kind":"function","modifiers":[],"name":"toInt152","nameLocation":"25067:8:22","nodeType":"FunctionDefinition","parameters":{"id":6902,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6901,"mutability":"mutable","name":"value","nameLocation":"25083:5:22","nodeType":"VariableDeclaration","scope":6924,"src":"25076:12:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6900,"name":"int256","nodeType":"ElementaryTypeName","src":"25076:6:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"25075:14:22"},"returnParameters":{"id":6905,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6904,"mutability":"mutable","name":"downcasted","nameLocation":"25120:10:22","nodeType":"VariableDeclaration","scope":6924,"src":"25113:17:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"},"typeName":{"id":6903,"name":"int152","nodeType":"ElementaryTypeName","src":"25113:6:22","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"visibility":"internal"}],"src":"25112:19:22"},"scope":7433,"src":"25058:229:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6949,"nodeType":"Block","src":"25697:155:22","statements":[{"expression":{"id":6937,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6932,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6930,"src":"25708:10:22","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6935,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6927,"src":"25728:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6934,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"25721:6:22","typeDescriptions":{"typeIdentifier":"t_type$_t_int144_$","typeString":"type(int144)"},"typeName":{"id":6933,"name":"int144","nodeType":"ElementaryTypeName","src":"25721:6:22","typeDescriptions":{}}},"id":6936,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25721:13:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"src":"25708:26:22","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"id":6938,"nodeType":"ExpressionStatement","src":"25708:26:22"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6941,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6939,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6930,"src":"25749:10:22","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6940,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6927,"src":"25763:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"25749:19:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6948,"nodeType":"IfStatement","src":"25745:100:22","trueBody":{"id":6947,"nodeType":"Block","src":"25770:75:22","statements":[{"errorCall":{"arguments":[{"hexValue":"313434","id":6943,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25822:3:22","typeDescriptions":{"typeIdentifier":"t_rational_144_by_1","typeString":"int_const 144"},"value":"144"},{"id":6944,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6927,"src":"25827:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_144_by_1","typeString":"int_const 144"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6942,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5690,"src":"25792:29:22","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":6945,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25792:41:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6946,"nodeType":"RevertStatement","src":"25785:48:22"}]}}]},"documentation":{"id":6925,"nodeType":"StructuredDocumentation","src":"25295:322:22","text":" @dev Returns the downcasted int144 from int256, reverting on\n overflow (when the input is less than smallest int144 or\n greater than largest int144).\n Counterpart to Solidity's `int144` operator.\n Requirements:\n - input must fit into 144 bits"},"id":6950,"implemented":true,"kind":"function","modifiers":[],"name":"toInt144","nameLocation":"25632:8:22","nodeType":"FunctionDefinition","parameters":{"id":6928,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6927,"mutability":"mutable","name":"value","nameLocation":"25648:5:22","nodeType":"VariableDeclaration","scope":6950,"src":"25641:12:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6926,"name":"int256","nodeType":"ElementaryTypeName","src":"25641:6:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"25640:14:22"},"returnParameters":{"id":6931,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6930,"mutability":"mutable","name":"downcasted","nameLocation":"25685:10:22","nodeType":"VariableDeclaration","scope":6950,"src":"25678:17:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"},"typeName":{"id":6929,"name":"int144","nodeType":"ElementaryTypeName","src":"25678:6:22","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"visibility":"internal"}],"src":"25677:19:22"},"scope":7433,"src":"25623:229:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6975,"nodeType":"Block","src":"26262:155:22","statements":[{"expression":{"id":6963,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6958,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6956,"src":"26273:10:22","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6961,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6953,"src":"26293:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6960,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"26286:6:22","typeDescriptions":{"typeIdentifier":"t_type$_t_int136_$","typeString":"type(int136)"},"typeName":{"id":6959,"name":"int136","nodeType":"ElementaryTypeName","src":"26286:6:22","typeDescriptions":{}}},"id":6962,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26286:13:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"src":"26273:26:22","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"id":6964,"nodeType":"ExpressionStatement","src":"26273:26:22"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6967,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6965,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6956,"src":"26314:10:22","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6966,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6953,"src":"26328:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"26314:19:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6974,"nodeType":"IfStatement","src":"26310:100:22","trueBody":{"id":6973,"nodeType":"Block","src":"26335:75:22","statements":[{"errorCall":{"arguments":[{"hexValue":"313336","id":6969,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26387:3:22","typeDescriptions":{"typeIdentifier":"t_rational_136_by_1","typeString":"int_const 136"},"value":"136"},{"id":6970,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6953,"src":"26392:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_136_by_1","typeString":"int_const 136"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6968,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5690,"src":"26357:29:22","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":6971,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26357:41:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6972,"nodeType":"RevertStatement","src":"26350:48:22"}]}}]},"documentation":{"id":6951,"nodeType":"StructuredDocumentation","src":"25860:322:22","text":" @dev Returns the downcasted int136 from int256, reverting on\n overflow (when the input is less than smallest int136 or\n greater than largest int136).\n Counterpart to Solidity's `int136` operator.\n Requirements:\n - input must fit into 136 bits"},"id":6976,"implemented":true,"kind":"function","modifiers":[],"name":"toInt136","nameLocation":"26197:8:22","nodeType":"FunctionDefinition","parameters":{"id":6954,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6953,"mutability":"mutable","name":"value","nameLocation":"26213:5:22","nodeType":"VariableDeclaration","scope":6976,"src":"26206:12:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6952,"name":"int256","nodeType":"ElementaryTypeName","src":"26206:6:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"26205:14:22"},"returnParameters":{"id":6957,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6956,"mutability":"mutable","name":"downcasted","nameLocation":"26250:10:22","nodeType":"VariableDeclaration","scope":6976,"src":"26243:17:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"},"typeName":{"id":6955,"name":"int136","nodeType":"ElementaryTypeName","src":"26243:6:22","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"visibility":"internal"}],"src":"26242:19:22"},"scope":7433,"src":"26188:229:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7001,"nodeType":"Block","src":"26827:155:22","statements":[{"expression":{"id":6989,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6984,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6982,"src":"26838:10:22","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6987,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6979,"src":"26858:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6986,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"26851:6:22","typeDescriptions":{"typeIdentifier":"t_type$_t_int128_$","typeString":"type(int128)"},"typeName":{"id":6985,"name":"int128","nodeType":"ElementaryTypeName","src":"26851:6:22","typeDescriptions":{}}},"id":6988,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26851:13:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"src":"26838:26:22","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"id":6990,"nodeType":"ExpressionStatement","src":"26838:26:22"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6993,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6991,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6982,"src":"26879:10:22","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6992,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6979,"src":"26893:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"26879:19:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7000,"nodeType":"IfStatement","src":"26875:100:22","trueBody":{"id":6999,"nodeType":"Block","src":"26900:75:22","statements":[{"errorCall":{"arguments":[{"hexValue":"313238","id":6995,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26952:3:22","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},{"id":6996,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6979,"src":"26957:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6994,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5690,"src":"26922:29:22","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":6997,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26922:41:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6998,"nodeType":"RevertStatement","src":"26915:48:22"}]}}]},"documentation":{"id":6977,"nodeType":"StructuredDocumentation","src":"26425:322:22","text":" @dev Returns the downcasted int128 from int256, reverting on\n overflow (when the input is less than smallest int128 or\n greater than largest int128).\n Counterpart to Solidity's `int128` operator.\n Requirements:\n - input must fit into 128 bits"},"id":7002,"implemented":true,"kind":"function","modifiers":[],"name":"toInt128","nameLocation":"26762:8:22","nodeType":"FunctionDefinition","parameters":{"id":6980,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6979,"mutability":"mutable","name":"value","nameLocation":"26778:5:22","nodeType":"VariableDeclaration","scope":7002,"src":"26771:12:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6978,"name":"int256","nodeType":"ElementaryTypeName","src":"26771:6:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"26770:14:22"},"returnParameters":{"id":6983,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6982,"mutability":"mutable","name":"downcasted","nameLocation":"26815:10:22","nodeType":"VariableDeclaration","scope":7002,"src":"26808:17:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"},"typeName":{"id":6981,"name":"int128","nodeType":"ElementaryTypeName","src":"26808:6:22","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"visibility":"internal"}],"src":"26807:19:22"},"scope":7433,"src":"26753:229:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7027,"nodeType":"Block","src":"27392:155:22","statements":[{"expression":{"id":7015,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7010,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7008,"src":"27403:10:22","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7013,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7005,"src":"27423:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7012,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"27416:6:22","typeDescriptions":{"typeIdentifier":"t_type$_t_int120_$","typeString":"type(int120)"},"typeName":{"id":7011,"name":"int120","nodeType":"ElementaryTypeName","src":"27416:6:22","typeDescriptions":{}}},"id":7014,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27416:13:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"src":"27403:26:22","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"id":7016,"nodeType":"ExpressionStatement","src":"27403:26:22"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7019,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7017,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7008,"src":"27444:10:22","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7018,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7005,"src":"27458:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"27444:19:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7026,"nodeType":"IfStatement","src":"27440:100:22","trueBody":{"id":7025,"nodeType":"Block","src":"27465:75:22","statements":[{"errorCall":{"arguments":[{"hexValue":"313230","id":7021,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27517:3:22","typeDescriptions":{"typeIdentifier":"t_rational_120_by_1","typeString":"int_const 120"},"value":"120"},{"id":7022,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7005,"src":"27522:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_120_by_1","typeString":"int_const 120"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7020,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5690,"src":"27487:29:22","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":7023,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27487:41:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":7024,"nodeType":"RevertStatement","src":"27480:48:22"}]}}]},"documentation":{"id":7003,"nodeType":"StructuredDocumentation","src":"26990:322:22","text":" @dev Returns the downcasted int120 from int256, reverting on\n overflow (when the input is less than smallest int120 or\n greater than largest int120).\n Counterpart to Solidity's `int120` operator.\n Requirements:\n - input must fit into 120 bits"},"id":7028,"implemented":true,"kind":"function","modifiers":[],"name":"toInt120","nameLocation":"27327:8:22","nodeType":"FunctionDefinition","parameters":{"id":7006,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7005,"mutability":"mutable","name":"value","nameLocation":"27343:5:22","nodeType":"VariableDeclaration","scope":7028,"src":"27336:12:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7004,"name":"int256","nodeType":"ElementaryTypeName","src":"27336:6:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"27335:14:22"},"returnParameters":{"id":7009,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7008,"mutability":"mutable","name":"downcasted","nameLocation":"27380:10:22","nodeType":"VariableDeclaration","scope":7028,"src":"27373:17:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"},"typeName":{"id":7007,"name":"int120","nodeType":"ElementaryTypeName","src":"27373:6:22","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"visibility":"internal"}],"src":"27372:19:22"},"scope":7433,"src":"27318:229:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7053,"nodeType":"Block","src":"27957:155:22","statements":[{"expression":{"id":7041,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7036,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7034,"src":"27968:10:22","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7039,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7031,"src":"27988:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7038,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"27981:6:22","typeDescriptions":{"typeIdentifier":"t_type$_t_int112_$","typeString":"type(int112)"},"typeName":{"id":7037,"name":"int112","nodeType":"ElementaryTypeName","src":"27981:6:22","typeDescriptions":{}}},"id":7040,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27981:13:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"src":"27968:26:22","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"id":7042,"nodeType":"ExpressionStatement","src":"27968:26:22"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7045,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7043,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7034,"src":"28009:10:22","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7044,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7031,"src":"28023:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"28009:19:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7052,"nodeType":"IfStatement","src":"28005:100:22","trueBody":{"id":7051,"nodeType":"Block","src":"28030:75:22","statements":[{"errorCall":{"arguments":[{"hexValue":"313132","id":7047,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"28082:3:22","typeDescriptions":{"typeIdentifier":"t_rational_112_by_1","typeString":"int_const 112"},"value":"112"},{"id":7048,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7031,"src":"28087:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_112_by_1","typeString":"int_const 112"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7046,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5690,"src":"28052:29:22","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":7049,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28052:41:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":7050,"nodeType":"RevertStatement","src":"28045:48:22"}]}}]},"documentation":{"id":7029,"nodeType":"StructuredDocumentation","src":"27555:322:22","text":" @dev Returns the downcasted int112 from int256, reverting on\n overflow (when the input is less than smallest int112 or\n greater than largest int112).\n Counterpart to Solidity's `int112` operator.\n Requirements:\n - input must fit into 112 bits"},"id":7054,"implemented":true,"kind":"function","modifiers":[],"name":"toInt112","nameLocation":"27892:8:22","nodeType":"FunctionDefinition","parameters":{"id":7032,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7031,"mutability":"mutable","name":"value","nameLocation":"27908:5:22","nodeType":"VariableDeclaration","scope":7054,"src":"27901:12:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7030,"name":"int256","nodeType":"ElementaryTypeName","src":"27901:6:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"27900:14:22"},"returnParameters":{"id":7035,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7034,"mutability":"mutable","name":"downcasted","nameLocation":"27945:10:22","nodeType":"VariableDeclaration","scope":7054,"src":"27938:17:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"},"typeName":{"id":7033,"name":"int112","nodeType":"ElementaryTypeName","src":"27938:6:22","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"visibility":"internal"}],"src":"27937:19:22"},"scope":7433,"src":"27883:229:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7079,"nodeType":"Block","src":"28522:155:22","statements":[{"expression":{"id":7067,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7062,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7060,"src":"28533:10:22","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7065,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7057,"src":"28553:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7064,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"28546:6:22","typeDescriptions":{"typeIdentifier":"t_type$_t_int104_$","typeString":"type(int104)"},"typeName":{"id":7063,"name":"int104","nodeType":"ElementaryTypeName","src":"28546:6:22","typeDescriptions":{}}},"id":7066,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28546:13:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"src":"28533:26:22","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"id":7068,"nodeType":"ExpressionStatement","src":"28533:26:22"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7071,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7069,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7060,"src":"28574:10:22","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7070,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7057,"src":"28588:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"28574:19:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7078,"nodeType":"IfStatement","src":"28570:100:22","trueBody":{"id":7077,"nodeType":"Block","src":"28595:75:22","statements":[{"errorCall":{"arguments":[{"hexValue":"313034","id":7073,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"28647:3:22","typeDescriptions":{"typeIdentifier":"t_rational_104_by_1","typeString":"int_const 104"},"value":"104"},{"id":7074,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7057,"src":"28652:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_104_by_1","typeString":"int_const 104"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7072,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5690,"src":"28617:29:22","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":7075,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28617:41:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":7076,"nodeType":"RevertStatement","src":"28610:48:22"}]}}]},"documentation":{"id":7055,"nodeType":"StructuredDocumentation","src":"28120:322:22","text":" @dev Returns the downcasted int104 from int256, reverting on\n overflow (when the input is less than smallest int104 or\n greater than largest int104).\n Counterpart to Solidity's `int104` operator.\n Requirements:\n - input must fit into 104 bits"},"id":7080,"implemented":true,"kind":"function","modifiers":[],"name":"toInt104","nameLocation":"28457:8:22","nodeType":"FunctionDefinition","parameters":{"id":7058,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7057,"mutability":"mutable","name":"value","nameLocation":"28473:5:22","nodeType":"VariableDeclaration","scope":7080,"src":"28466:12:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7056,"name":"int256","nodeType":"ElementaryTypeName","src":"28466:6:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"28465:14:22"},"returnParameters":{"id":7061,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7060,"mutability":"mutable","name":"downcasted","nameLocation":"28510:10:22","nodeType":"VariableDeclaration","scope":7080,"src":"28503:17:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"},"typeName":{"id":7059,"name":"int104","nodeType":"ElementaryTypeName","src":"28503:6:22","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"visibility":"internal"}],"src":"28502:19:22"},"scope":7433,"src":"28448:229:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7105,"nodeType":"Block","src":"29080:153:22","statements":[{"expression":{"id":7093,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7088,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7086,"src":"29091:10:22","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7091,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7083,"src":"29110:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7090,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"29104:5:22","typeDescriptions":{"typeIdentifier":"t_type$_t_int96_$","typeString":"type(int96)"},"typeName":{"id":7089,"name":"int96","nodeType":"ElementaryTypeName","src":"29104:5:22","typeDescriptions":{}}},"id":7092,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"29104:12:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"src":"29091:25:22","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"id":7094,"nodeType":"ExpressionStatement","src":"29091:25:22"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7097,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7095,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7086,"src":"29131:10:22","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7096,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7083,"src":"29145:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"29131:19:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7104,"nodeType":"IfStatement","src":"29127:99:22","trueBody":{"id":7103,"nodeType":"Block","src":"29152:74:22","statements":[{"errorCall":{"arguments":[{"hexValue":"3936","id":7099,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29204:2:22","typeDescriptions":{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},"value":"96"},{"id":7100,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7083,"src":"29208:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7098,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5690,"src":"29174:29:22","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":7101,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"29174:40:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":7102,"nodeType":"RevertStatement","src":"29167:47:22"}]}}]},"documentation":{"id":7081,"nodeType":"StructuredDocumentation","src":"28685:317:22","text":" @dev Returns the downcasted int96 from int256, reverting on\n overflow (when the input is less than smallest int96 or\n greater than largest int96).\n Counterpart to Solidity's `int96` operator.\n Requirements:\n - input must fit into 96 bits"},"id":7106,"implemented":true,"kind":"function","modifiers":[],"name":"toInt96","nameLocation":"29017:7:22","nodeType":"FunctionDefinition","parameters":{"id":7084,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7083,"mutability":"mutable","name":"value","nameLocation":"29032:5:22","nodeType":"VariableDeclaration","scope":7106,"src":"29025:12:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7082,"name":"int256","nodeType":"ElementaryTypeName","src":"29025:6:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"29024:14:22"},"returnParameters":{"id":7087,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7086,"mutability":"mutable","name":"downcasted","nameLocation":"29068:10:22","nodeType":"VariableDeclaration","scope":7106,"src":"29062:16:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"},"typeName":{"id":7085,"name":"int96","nodeType":"ElementaryTypeName","src":"29062:5:22","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"visibility":"internal"}],"src":"29061:18:22"},"scope":7433,"src":"29008:225:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7131,"nodeType":"Block","src":"29636:153:22","statements":[{"expression":{"id":7119,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7114,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7112,"src":"29647:10:22","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7117,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7109,"src":"29666:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7116,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"29660:5:22","typeDescriptions":{"typeIdentifier":"t_type$_t_int88_$","typeString":"type(int88)"},"typeName":{"id":7115,"name":"int88","nodeType":"ElementaryTypeName","src":"29660:5:22","typeDescriptions":{}}},"id":7118,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"29660:12:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"src":"29647:25:22","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"id":7120,"nodeType":"ExpressionStatement","src":"29647:25:22"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7123,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7121,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7112,"src":"29687:10:22","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7122,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7109,"src":"29701:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"29687:19:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7130,"nodeType":"IfStatement","src":"29683:99:22","trueBody":{"id":7129,"nodeType":"Block","src":"29708:74:22","statements":[{"errorCall":{"arguments":[{"hexValue":"3838","id":7125,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29760:2:22","typeDescriptions":{"typeIdentifier":"t_rational_88_by_1","typeString":"int_const 88"},"value":"88"},{"id":7126,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7109,"src":"29764:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_88_by_1","typeString":"int_const 88"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7124,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5690,"src":"29730:29:22","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":7127,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"29730:40:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":7128,"nodeType":"RevertStatement","src":"29723:47:22"}]}}]},"documentation":{"id":7107,"nodeType":"StructuredDocumentation","src":"29241:317:22","text":" @dev Returns the downcasted int88 from int256, reverting on\n overflow (when the input is less than smallest int88 or\n greater than largest int88).\n Counterpart to Solidity's `int88` operator.\n Requirements:\n - input must fit into 88 bits"},"id":7132,"implemented":true,"kind":"function","modifiers":[],"name":"toInt88","nameLocation":"29573:7:22","nodeType":"FunctionDefinition","parameters":{"id":7110,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7109,"mutability":"mutable","name":"value","nameLocation":"29588:5:22","nodeType":"VariableDeclaration","scope":7132,"src":"29581:12:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7108,"name":"int256","nodeType":"ElementaryTypeName","src":"29581:6:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"29580:14:22"},"returnParameters":{"id":7113,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7112,"mutability":"mutable","name":"downcasted","nameLocation":"29624:10:22","nodeType":"VariableDeclaration","scope":7132,"src":"29618:16:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"},"typeName":{"id":7111,"name":"int88","nodeType":"ElementaryTypeName","src":"29618:5:22","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"visibility":"internal"}],"src":"29617:18:22"},"scope":7433,"src":"29564:225:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7157,"nodeType":"Block","src":"30192:153:22","statements":[{"expression":{"id":7145,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7140,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7138,"src":"30203:10:22","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7143,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7135,"src":"30222:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7142,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"30216:5:22","typeDescriptions":{"typeIdentifier":"t_type$_t_int80_$","typeString":"type(int80)"},"typeName":{"id":7141,"name":"int80","nodeType":"ElementaryTypeName","src":"30216:5:22","typeDescriptions":{}}},"id":7144,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30216:12:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"src":"30203:25:22","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"id":7146,"nodeType":"ExpressionStatement","src":"30203:25:22"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7149,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7147,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7138,"src":"30243:10:22","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7148,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7135,"src":"30257:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"30243:19:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7156,"nodeType":"IfStatement","src":"30239:99:22","trueBody":{"id":7155,"nodeType":"Block","src":"30264:74:22","statements":[{"errorCall":{"arguments":[{"hexValue":"3830","id":7151,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"30316:2:22","typeDescriptions":{"typeIdentifier":"t_rational_80_by_1","typeString":"int_const 80"},"value":"80"},{"id":7152,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7135,"src":"30320:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_80_by_1","typeString":"int_const 80"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7150,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5690,"src":"30286:29:22","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":7153,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30286:40:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":7154,"nodeType":"RevertStatement","src":"30279:47:22"}]}}]},"documentation":{"id":7133,"nodeType":"StructuredDocumentation","src":"29797:317:22","text":" @dev Returns the downcasted int80 from int256, reverting on\n overflow (when the input is less than smallest int80 or\n greater than largest int80).\n Counterpart to Solidity's `int80` operator.\n Requirements:\n - input must fit into 80 bits"},"id":7158,"implemented":true,"kind":"function","modifiers":[],"name":"toInt80","nameLocation":"30129:7:22","nodeType":"FunctionDefinition","parameters":{"id":7136,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7135,"mutability":"mutable","name":"value","nameLocation":"30144:5:22","nodeType":"VariableDeclaration","scope":7158,"src":"30137:12:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7134,"name":"int256","nodeType":"ElementaryTypeName","src":"30137:6:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"30136:14:22"},"returnParameters":{"id":7139,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7138,"mutability":"mutable","name":"downcasted","nameLocation":"30180:10:22","nodeType":"VariableDeclaration","scope":7158,"src":"30174:16:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"},"typeName":{"id":7137,"name":"int80","nodeType":"ElementaryTypeName","src":"30174:5:22","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"visibility":"internal"}],"src":"30173:18:22"},"scope":7433,"src":"30120:225:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7183,"nodeType":"Block","src":"30748:153:22","statements":[{"expression":{"id":7171,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7166,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7164,"src":"30759:10:22","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7169,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7161,"src":"30778:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7168,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"30772:5:22","typeDescriptions":{"typeIdentifier":"t_type$_t_int72_$","typeString":"type(int72)"},"typeName":{"id":7167,"name":"int72","nodeType":"ElementaryTypeName","src":"30772:5:22","typeDescriptions":{}}},"id":7170,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30772:12:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"src":"30759:25:22","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"id":7172,"nodeType":"ExpressionStatement","src":"30759:25:22"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7175,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7173,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7164,"src":"30799:10:22","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7174,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7161,"src":"30813:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"30799:19:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7182,"nodeType":"IfStatement","src":"30795:99:22","trueBody":{"id":7181,"nodeType":"Block","src":"30820:74:22","statements":[{"errorCall":{"arguments":[{"hexValue":"3732","id":7177,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"30872:2:22","typeDescriptions":{"typeIdentifier":"t_rational_72_by_1","typeString":"int_const 72"},"value":"72"},{"id":7178,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7161,"src":"30876:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_72_by_1","typeString":"int_const 72"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7176,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5690,"src":"30842:29:22","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":7179,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30842:40:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":7180,"nodeType":"RevertStatement","src":"30835:47:22"}]}}]},"documentation":{"id":7159,"nodeType":"StructuredDocumentation","src":"30353:317:22","text":" @dev Returns the downcasted int72 from int256, reverting on\n overflow (when the input is less than smallest int72 or\n greater than largest int72).\n Counterpart to Solidity's `int72` operator.\n Requirements:\n - input must fit into 72 bits"},"id":7184,"implemented":true,"kind":"function","modifiers":[],"name":"toInt72","nameLocation":"30685:7:22","nodeType":"FunctionDefinition","parameters":{"id":7162,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7161,"mutability":"mutable","name":"value","nameLocation":"30700:5:22","nodeType":"VariableDeclaration","scope":7184,"src":"30693:12:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7160,"name":"int256","nodeType":"ElementaryTypeName","src":"30693:6:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"30692:14:22"},"returnParameters":{"id":7165,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7164,"mutability":"mutable","name":"downcasted","nameLocation":"30736:10:22","nodeType":"VariableDeclaration","scope":7184,"src":"30730:16:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"},"typeName":{"id":7163,"name":"int72","nodeType":"ElementaryTypeName","src":"30730:5:22","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"visibility":"internal"}],"src":"30729:18:22"},"scope":7433,"src":"30676:225:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7209,"nodeType":"Block","src":"31304:153:22","statements":[{"expression":{"id":7197,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7192,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7190,"src":"31315:10:22","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7195,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7187,"src":"31334:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7194,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"31328:5:22","typeDescriptions":{"typeIdentifier":"t_type$_t_int64_$","typeString":"type(int64)"},"typeName":{"id":7193,"name":"int64","nodeType":"ElementaryTypeName","src":"31328:5:22","typeDescriptions":{}}},"id":7196,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31328:12:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"src":"31315:25:22","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"id":7198,"nodeType":"ExpressionStatement","src":"31315:25:22"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7201,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7199,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7190,"src":"31355:10:22","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7200,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7187,"src":"31369:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"31355:19:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7208,"nodeType":"IfStatement","src":"31351:99:22","trueBody":{"id":7207,"nodeType":"Block","src":"31376:74:22","statements":[{"errorCall":{"arguments":[{"hexValue":"3634","id":7203,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31428:2:22","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},{"id":7204,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7187,"src":"31432:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7202,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5690,"src":"31398:29:22","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":7205,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31398:40:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":7206,"nodeType":"RevertStatement","src":"31391:47:22"}]}}]},"documentation":{"id":7185,"nodeType":"StructuredDocumentation","src":"30909:317:22","text":" @dev Returns the downcasted int64 from int256, reverting on\n overflow (when the input is less than smallest int64 or\n greater than largest int64).\n Counterpart to Solidity's `int64` operator.\n Requirements:\n - input must fit into 64 bits"},"id":7210,"implemented":true,"kind":"function","modifiers":[],"name":"toInt64","nameLocation":"31241:7:22","nodeType":"FunctionDefinition","parameters":{"id":7188,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7187,"mutability":"mutable","name":"value","nameLocation":"31256:5:22","nodeType":"VariableDeclaration","scope":7210,"src":"31249:12:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7186,"name":"int256","nodeType":"ElementaryTypeName","src":"31249:6:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"31248:14:22"},"returnParameters":{"id":7191,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7190,"mutability":"mutable","name":"downcasted","nameLocation":"31292:10:22","nodeType":"VariableDeclaration","scope":7210,"src":"31286:16:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"},"typeName":{"id":7189,"name":"int64","nodeType":"ElementaryTypeName","src":"31286:5:22","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"visibility":"internal"}],"src":"31285:18:22"},"scope":7433,"src":"31232:225:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7235,"nodeType":"Block","src":"31860:153:22","statements":[{"expression":{"id":7223,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7218,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7216,"src":"31871:10:22","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7221,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7213,"src":"31890:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7220,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"31884:5:22","typeDescriptions":{"typeIdentifier":"t_type$_t_int56_$","typeString":"type(int56)"},"typeName":{"id":7219,"name":"int56","nodeType":"ElementaryTypeName","src":"31884:5:22","typeDescriptions":{}}},"id":7222,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31884:12:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"src":"31871:25:22","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"id":7224,"nodeType":"ExpressionStatement","src":"31871:25:22"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7227,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7225,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7216,"src":"31911:10:22","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7226,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7213,"src":"31925:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"31911:19:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7234,"nodeType":"IfStatement","src":"31907:99:22","trueBody":{"id":7233,"nodeType":"Block","src":"31932:74:22","statements":[{"errorCall":{"arguments":[{"hexValue":"3536","id":7229,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31984:2:22","typeDescriptions":{"typeIdentifier":"t_rational_56_by_1","typeString":"int_const 56"},"value":"56"},{"id":7230,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7213,"src":"31988:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_56_by_1","typeString":"int_const 56"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7228,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5690,"src":"31954:29:22","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":7231,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31954:40:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":7232,"nodeType":"RevertStatement","src":"31947:47:22"}]}}]},"documentation":{"id":7211,"nodeType":"StructuredDocumentation","src":"31465:317:22","text":" @dev Returns the downcasted int56 from int256, reverting on\n overflow (when the input is less than smallest int56 or\n greater than largest int56).\n Counterpart to Solidity's `int56` operator.\n Requirements:\n - input must fit into 56 bits"},"id":7236,"implemented":true,"kind":"function","modifiers":[],"name":"toInt56","nameLocation":"31797:7:22","nodeType":"FunctionDefinition","parameters":{"id":7214,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7213,"mutability":"mutable","name":"value","nameLocation":"31812:5:22","nodeType":"VariableDeclaration","scope":7236,"src":"31805:12:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7212,"name":"int256","nodeType":"ElementaryTypeName","src":"31805:6:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"31804:14:22"},"returnParameters":{"id":7217,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7216,"mutability":"mutable","name":"downcasted","nameLocation":"31848:10:22","nodeType":"VariableDeclaration","scope":7236,"src":"31842:16:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"},"typeName":{"id":7215,"name":"int56","nodeType":"ElementaryTypeName","src":"31842:5:22","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"visibility":"internal"}],"src":"31841:18:22"},"scope":7433,"src":"31788:225:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7261,"nodeType":"Block","src":"32416:153:22","statements":[{"expression":{"id":7249,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7244,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7242,"src":"32427:10:22","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7247,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7239,"src":"32446:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7246,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"32440:5:22","typeDescriptions":{"typeIdentifier":"t_type$_t_int48_$","typeString":"type(int48)"},"typeName":{"id":7245,"name":"int48","nodeType":"ElementaryTypeName","src":"32440:5:22","typeDescriptions":{}}},"id":7248,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"32440:12:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"src":"32427:25:22","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"id":7250,"nodeType":"ExpressionStatement","src":"32427:25:22"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7253,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7251,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7242,"src":"32467:10:22","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7252,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7239,"src":"32481:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"32467:19:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7260,"nodeType":"IfStatement","src":"32463:99:22","trueBody":{"id":7259,"nodeType":"Block","src":"32488:74:22","statements":[{"errorCall":{"arguments":[{"hexValue":"3438","id":7255,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"32540:2:22","typeDescriptions":{"typeIdentifier":"t_rational_48_by_1","typeString":"int_const 48"},"value":"48"},{"id":7256,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7239,"src":"32544:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_48_by_1","typeString":"int_const 48"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7254,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5690,"src":"32510:29:22","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":7257,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"32510:40:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":7258,"nodeType":"RevertStatement","src":"32503:47:22"}]}}]},"documentation":{"id":7237,"nodeType":"StructuredDocumentation","src":"32021:317:22","text":" @dev Returns the downcasted int48 from int256, reverting on\n overflow (when the input is less than smallest int48 or\n greater than largest int48).\n Counterpart to Solidity's `int48` operator.\n Requirements:\n - input must fit into 48 bits"},"id":7262,"implemented":true,"kind":"function","modifiers":[],"name":"toInt48","nameLocation":"32353:7:22","nodeType":"FunctionDefinition","parameters":{"id":7240,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7239,"mutability":"mutable","name":"value","nameLocation":"32368:5:22","nodeType":"VariableDeclaration","scope":7262,"src":"32361:12:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7238,"name":"int256","nodeType":"ElementaryTypeName","src":"32361:6:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"32360:14:22"},"returnParameters":{"id":7243,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7242,"mutability":"mutable","name":"downcasted","nameLocation":"32404:10:22","nodeType":"VariableDeclaration","scope":7262,"src":"32398:16:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"},"typeName":{"id":7241,"name":"int48","nodeType":"ElementaryTypeName","src":"32398:5:22","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"visibility":"internal"}],"src":"32397:18:22"},"scope":7433,"src":"32344:225:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7287,"nodeType":"Block","src":"32972:153:22","statements":[{"expression":{"id":7275,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7270,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7268,"src":"32983:10:22","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7273,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7265,"src":"33002:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7272,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"32996:5:22","typeDescriptions":{"typeIdentifier":"t_type$_t_int40_$","typeString":"type(int40)"},"typeName":{"id":7271,"name":"int40","nodeType":"ElementaryTypeName","src":"32996:5:22","typeDescriptions":{}}},"id":7274,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"32996:12:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"src":"32983:25:22","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"id":7276,"nodeType":"ExpressionStatement","src":"32983:25:22"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7279,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7277,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7268,"src":"33023:10:22","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7278,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7265,"src":"33037:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"33023:19:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7286,"nodeType":"IfStatement","src":"33019:99:22","trueBody":{"id":7285,"nodeType":"Block","src":"33044:74:22","statements":[{"errorCall":{"arguments":[{"hexValue":"3430","id":7281,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"33096:2:22","typeDescriptions":{"typeIdentifier":"t_rational_40_by_1","typeString":"int_const 40"},"value":"40"},{"id":7282,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7265,"src":"33100:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_40_by_1","typeString":"int_const 40"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7280,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5690,"src":"33066:29:22","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":7283,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"33066:40:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":7284,"nodeType":"RevertStatement","src":"33059:47:22"}]}}]},"documentation":{"id":7263,"nodeType":"StructuredDocumentation","src":"32577:317:22","text":" @dev Returns the downcasted int40 from int256, reverting on\n overflow (when the input is less than smallest int40 or\n greater than largest int40).\n Counterpart to Solidity's `int40` operator.\n Requirements:\n - input must fit into 40 bits"},"id":7288,"implemented":true,"kind":"function","modifiers":[],"name":"toInt40","nameLocation":"32909:7:22","nodeType":"FunctionDefinition","parameters":{"id":7266,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7265,"mutability":"mutable","name":"value","nameLocation":"32924:5:22","nodeType":"VariableDeclaration","scope":7288,"src":"32917:12:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7264,"name":"int256","nodeType":"ElementaryTypeName","src":"32917:6:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"32916:14:22"},"returnParameters":{"id":7269,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7268,"mutability":"mutable","name":"downcasted","nameLocation":"32960:10:22","nodeType":"VariableDeclaration","scope":7288,"src":"32954:16:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"},"typeName":{"id":7267,"name":"int40","nodeType":"ElementaryTypeName","src":"32954:5:22","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"visibility":"internal"}],"src":"32953:18:22"},"scope":7433,"src":"32900:225:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7313,"nodeType":"Block","src":"33528:153:22","statements":[{"expression":{"id":7301,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7296,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7294,"src":"33539:10:22","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7299,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7291,"src":"33558:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7298,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"33552:5:22","typeDescriptions":{"typeIdentifier":"t_type$_t_int32_$","typeString":"type(int32)"},"typeName":{"id":7297,"name":"int32","nodeType":"ElementaryTypeName","src":"33552:5:22","typeDescriptions":{}}},"id":7300,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"33552:12:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"src":"33539:25:22","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"id":7302,"nodeType":"ExpressionStatement","src":"33539:25:22"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7305,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7303,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7294,"src":"33579:10:22","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7304,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7291,"src":"33593:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"33579:19:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7312,"nodeType":"IfStatement","src":"33575:99:22","trueBody":{"id":7311,"nodeType":"Block","src":"33600:74:22","statements":[{"errorCall":{"arguments":[{"hexValue":"3332","id":7307,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"33652:2:22","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},{"id":7308,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7291,"src":"33656:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7306,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5690,"src":"33622:29:22","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":7309,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"33622:40:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":7310,"nodeType":"RevertStatement","src":"33615:47:22"}]}}]},"documentation":{"id":7289,"nodeType":"StructuredDocumentation","src":"33133:317:22","text":" @dev Returns the downcasted int32 from int256, reverting on\n overflow (when the input is less than smallest int32 or\n greater than largest int32).\n Counterpart to Solidity's `int32` operator.\n Requirements:\n - input must fit into 32 bits"},"id":7314,"implemented":true,"kind":"function","modifiers":[],"name":"toInt32","nameLocation":"33465:7:22","nodeType":"FunctionDefinition","parameters":{"id":7292,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7291,"mutability":"mutable","name":"value","nameLocation":"33480:5:22","nodeType":"VariableDeclaration","scope":7314,"src":"33473:12:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7290,"name":"int256","nodeType":"ElementaryTypeName","src":"33473:6:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"33472:14:22"},"returnParameters":{"id":7295,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7294,"mutability":"mutable","name":"downcasted","nameLocation":"33516:10:22","nodeType":"VariableDeclaration","scope":7314,"src":"33510:16:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"},"typeName":{"id":7293,"name":"int32","nodeType":"ElementaryTypeName","src":"33510:5:22","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"visibility":"internal"}],"src":"33509:18:22"},"scope":7433,"src":"33456:225:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7339,"nodeType":"Block","src":"34084:153:22","statements":[{"expression":{"id":7327,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7322,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7320,"src":"34095:10:22","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7325,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7317,"src":"34114:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7324,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"34108:5:22","typeDescriptions":{"typeIdentifier":"t_type$_t_int24_$","typeString":"type(int24)"},"typeName":{"id":7323,"name":"int24","nodeType":"ElementaryTypeName","src":"34108:5:22","typeDescriptions":{}}},"id":7326,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34108:12:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"src":"34095:25:22","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"id":7328,"nodeType":"ExpressionStatement","src":"34095:25:22"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7331,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7329,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7320,"src":"34135:10:22","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7330,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7317,"src":"34149:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"34135:19:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7338,"nodeType":"IfStatement","src":"34131:99:22","trueBody":{"id":7337,"nodeType":"Block","src":"34156:74:22","statements":[{"errorCall":{"arguments":[{"hexValue":"3234","id":7333,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"34208:2:22","typeDescriptions":{"typeIdentifier":"t_rational_24_by_1","typeString":"int_const 24"},"value":"24"},{"id":7334,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7317,"src":"34212:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_24_by_1","typeString":"int_const 24"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7332,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5690,"src":"34178:29:22","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":7335,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34178:40:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":7336,"nodeType":"RevertStatement","src":"34171:47:22"}]}}]},"documentation":{"id":7315,"nodeType":"StructuredDocumentation","src":"33689:317:22","text":" @dev Returns the downcasted int24 from int256, reverting on\n overflow (when the input is less than smallest int24 or\n greater than largest int24).\n Counterpart to Solidity's `int24` operator.\n Requirements:\n - input must fit into 24 bits"},"id":7340,"implemented":true,"kind":"function","modifiers":[],"name":"toInt24","nameLocation":"34021:7:22","nodeType":"FunctionDefinition","parameters":{"id":7318,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7317,"mutability":"mutable","name":"value","nameLocation":"34036:5:22","nodeType":"VariableDeclaration","scope":7340,"src":"34029:12:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7316,"name":"int256","nodeType":"ElementaryTypeName","src":"34029:6:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"34028:14:22"},"returnParameters":{"id":7321,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7320,"mutability":"mutable","name":"downcasted","nameLocation":"34072:10:22","nodeType":"VariableDeclaration","scope":7340,"src":"34066:16:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"},"typeName":{"id":7319,"name":"int24","nodeType":"ElementaryTypeName","src":"34066:5:22","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"visibility":"internal"}],"src":"34065:18:22"},"scope":7433,"src":"34012:225:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7365,"nodeType":"Block","src":"34640:153:22","statements":[{"expression":{"id":7353,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7348,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7346,"src":"34651:10:22","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7351,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7343,"src":"34670:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7350,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"34664:5:22","typeDescriptions":{"typeIdentifier":"t_type$_t_int16_$","typeString":"type(int16)"},"typeName":{"id":7349,"name":"int16","nodeType":"ElementaryTypeName","src":"34664:5:22","typeDescriptions":{}}},"id":7352,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34664:12:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"src":"34651:25:22","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"id":7354,"nodeType":"ExpressionStatement","src":"34651:25:22"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7357,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7355,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7346,"src":"34691:10:22","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7356,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7343,"src":"34705:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"34691:19:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7364,"nodeType":"IfStatement","src":"34687:99:22","trueBody":{"id":7363,"nodeType":"Block","src":"34712:74:22","statements":[{"errorCall":{"arguments":[{"hexValue":"3136","id":7359,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"34764:2:22","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},{"id":7360,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7343,"src":"34768:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7358,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5690,"src":"34734:29:22","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":7361,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34734:40:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":7362,"nodeType":"RevertStatement","src":"34727:47:22"}]}}]},"documentation":{"id":7341,"nodeType":"StructuredDocumentation","src":"34245:317:22","text":" @dev Returns the downcasted int16 from int256, reverting on\n overflow (when the input is less than smallest int16 or\n greater than largest int16).\n Counterpart to Solidity's `int16` operator.\n Requirements:\n - input must fit into 16 bits"},"id":7366,"implemented":true,"kind":"function","modifiers":[],"name":"toInt16","nameLocation":"34577:7:22","nodeType":"FunctionDefinition","parameters":{"id":7344,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7343,"mutability":"mutable","name":"value","nameLocation":"34592:5:22","nodeType":"VariableDeclaration","scope":7366,"src":"34585:12:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7342,"name":"int256","nodeType":"ElementaryTypeName","src":"34585:6:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"34584:14:22"},"returnParameters":{"id":7347,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7346,"mutability":"mutable","name":"downcasted","nameLocation":"34628:10:22","nodeType":"VariableDeclaration","scope":7366,"src":"34622:16:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"},"typeName":{"id":7345,"name":"int16","nodeType":"ElementaryTypeName","src":"34622:5:22","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"visibility":"internal"}],"src":"34621:18:22"},"scope":7433,"src":"34568:225:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7391,"nodeType":"Block","src":"35189:151:22","statements":[{"expression":{"id":7379,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7374,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7372,"src":"35200:10:22","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7377,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7369,"src":"35218:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7376,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"35213:4:22","typeDescriptions":{"typeIdentifier":"t_type$_t_int8_$","typeString":"type(int8)"},"typeName":{"id":7375,"name":"int8","nodeType":"ElementaryTypeName","src":"35213:4:22","typeDescriptions":{}}},"id":7378,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"35213:11:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"src":"35200:24:22","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"id":7380,"nodeType":"ExpressionStatement","src":"35200:24:22"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7383,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7381,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7372,"src":"35239:10:22","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7382,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7369,"src":"35253:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"35239:19:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7390,"nodeType":"IfStatement","src":"35235:98:22","trueBody":{"id":7389,"nodeType":"Block","src":"35260:73:22","statements":[{"errorCall":{"arguments":[{"hexValue":"38","id":7385,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"35312:1:22","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},{"id":7386,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7369,"src":"35315:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7384,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5690,"src":"35282:29:22","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":7387,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"35282:39:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":7388,"nodeType":"RevertStatement","src":"35275:46:22"}]}}]},"documentation":{"id":7367,"nodeType":"StructuredDocumentation","src":"34801:312:22","text":" @dev Returns the downcasted int8 from int256, reverting on\n overflow (when the input is less than smallest int8 or\n greater than largest int8).\n Counterpart to Solidity's `int8` operator.\n Requirements:\n - input must fit into 8 bits"},"id":7392,"implemented":true,"kind":"function","modifiers":[],"name":"toInt8","nameLocation":"35128:6:22","nodeType":"FunctionDefinition","parameters":{"id":7370,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7369,"mutability":"mutable","name":"value","nameLocation":"35142:5:22","nodeType":"VariableDeclaration","scope":7392,"src":"35135:12:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7368,"name":"int256","nodeType":"ElementaryTypeName","src":"35135:6:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"35134:14:22"},"returnParameters":{"id":7373,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7372,"mutability":"mutable","name":"downcasted","nameLocation":"35177:10:22","nodeType":"VariableDeclaration","scope":7392,"src":"35172:15:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"},"typeName":{"id":7371,"name":"int8","nodeType":"ElementaryTypeName","src":"35172:4:22","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"visibility":"internal"}],"src":"35171:17:22"},"scope":7433,"src":"35119:221:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7421,"nodeType":"Block","src":"35589:256:22","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7409,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7400,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7395,"src":"35704:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"arguments":[{"expression":{"arguments":[{"id":7405,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"35725:6:22","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":7404,"name":"int256","nodeType":"ElementaryTypeName","src":"35725:6:22","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"}],"id":7403,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"35720:4:22","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":7406,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"35720:12:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_int256","typeString":"type(int256)"}},"id":7407,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"35733:3:22","memberName":"max","nodeType":"MemberAccess","src":"35720:16:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7402,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"35712:7:22","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":7401,"name":"uint256","nodeType":"ElementaryTypeName","src":"35712:7:22","typeDescriptions":{}}},"id":7408,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"35712:25:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"35704:33:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7415,"nodeType":"IfStatement","src":"35700:107:22","trueBody":{"id":7414,"nodeType":"Block","src":"35739:68:22","statements":[{"errorCall":{"arguments":[{"id":7411,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7395,"src":"35789:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7410,"name":"SafeCastOverflowedUintToInt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5695,"src":"35761:27:22","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$returns$_t_error_$","typeString":"function (uint256) pure returns (error)"}},"id":7412,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"35761:34:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":7413,"nodeType":"RevertStatement","src":"35754:41:22"}]}},{"expression":{"arguments":[{"id":7418,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7395,"src":"35831:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7417,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"35824:6:22","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":7416,"name":"int256","nodeType":"ElementaryTypeName","src":"35824:6:22","typeDescriptions":{}}},"id":7419,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"35824:13:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":7399,"id":7420,"nodeType":"Return","src":"35817:20:22"}]},"documentation":{"id":7393,"nodeType":"StructuredDocumentation","src":"35348:171:22","text":" @dev Converts an unsigned uint256 into a signed int256.\n Requirements:\n - input must be less than or equal to maxInt256."},"id":7422,"implemented":true,"kind":"function","modifiers":[],"name":"toInt256","nameLocation":"35534:8:22","nodeType":"FunctionDefinition","parameters":{"id":7396,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7395,"mutability":"mutable","name":"value","nameLocation":"35551:5:22","nodeType":"VariableDeclaration","scope":7422,"src":"35543:13:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7394,"name":"uint256","nodeType":"ElementaryTypeName","src":"35543:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"35542:15:22"},"returnParameters":{"id":7399,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7398,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7422,"src":"35581:6:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7397,"name":"int256","nodeType":"ElementaryTypeName","src":"35581:6:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"35580:8:22"},"scope":7433,"src":"35525:320:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7431,"nodeType":"Block","src":"36009:91:22","statements":[{"AST":{"nativeSrc":"36045:48:22","nodeType":"YulBlock","src":"36045:48:22","statements":[{"nativeSrc":"36060:22:22","nodeType":"YulAssignment","src":"36060:22:22","value":{"arguments":[{"arguments":[{"name":"b","nativeSrc":"36079:1:22","nodeType":"YulIdentifier","src":"36079:1:22"}],"functionName":{"name":"iszero","nativeSrc":"36072:6:22","nodeType":"YulIdentifier","src":"36072:6:22"},"nativeSrc":"36072:9:22","nodeType":"YulFunctionCall","src":"36072:9:22"}],"functionName":{"name":"iszero","nativeSrc":"36065:6:22","nodeType":"YulIdentifier","src":"36065:6:22"},"nativeSrc":"36065:17:22","nodeType":"YulFunctionCall","src":"36065:17:22"},"variableNames":[{"name":"u","nativeSrc":"36060:1:22","nodeType":"YulIdentifier","src":"36060:1:22"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":7425,"isOffset":false,"isSlot":false,"src":"36079:1:22","valueSize":1},{"declaration":7428,"isOffset":false,"isSlot":false,"src":"36060:1:22","valueSize":1}],"flags":["memory-safe"],"id":7430,"nodeType":"InlineAssembly","src":"36020:73:22"}]},"documentation":{"id":7423,"nodeType":"StructuredDocumentation","src":"35853:92:22","text":" @dev Cast a boolean (false or true) to a uint256 (0 or 1) with no jump."},"id":7432,"implemented":true,"kind":"function","modifiers":[],"name":"toUint","nameLocation":"35960:6:22","nodeType":"FunctionDefinition","parameters":{"id":7426,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7425,"mutability":"mutable","name":"b","nameLocation":"35972:1:22","nodeType":"VariableDeclaration","scope":7432,"src":"35967:6:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":7424,"name":"bool","nodeType":"ElementaryTypeName","src":"35967:4:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"35966:8:22"},"returnParameters":{"id":7429,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7428,"mutability":"mutable","name":"u","nameLocation":"36006:1:22","nodeType":"VariableDeclaration","scope":7432,"src":"35998:9:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7427,"name":"uint256","nodeType":"ElementaryTypeName","src":"35998:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"35997:11:22"},"scope":7433,"src":"35951:149:22","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":7434,"src":"787:35316:22","usedErrors":[5678,5683,5690,5695],"usedEvents":[]}],"src":"196:35909:22"},"id":22},"@openzeppelin/contracts/utils/math/SignedMath.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/math/SignedMath.sol","exportedSymbols":{"SafeCast":[7433],"SignedMath":[7577]},"id":7578,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":7435,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"112:24:23"},{"absolutePath":"@openzeppelin/contracts/utils/math/SafeCast.sol","file":"./SafeCast.sol","id":7437,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":7578,"sourceUnit":7434,"src":"140:40:23","symbolAliases":[{"foreign":{"id":7436,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7433,"src":"148:8:23","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"SignedMath","contractDependencies":[],"contractKind":"library","documentation":{"id":7438,"nodeType":"StructuredDocumentation","src":"184:82:23","text":" @dev Standard signed math utilities missing in the Solidity language."},"fullyImplemented":true,"id":7577,"linearizedBaseContracts":[7577],"name":"SignedMath","nameLocation":"276:10:23","nodeType":"ContractDefinition","nodes":[{"body":{"id":7467,"nodeType":"Block","src":"764:222:23","statements":[{"id":7466,"nodeType":"UncheckedBlock","src":"775:204:23","statements":[{"expression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7464,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7450,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7445,"src":"917:1:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7462,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7453,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7451,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7443,"src":"923:1:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":7452,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7445,"src":"927:1:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"923:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":7454,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"922:7:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"arguments":[{"id":7459,"name":"condition","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7441,"src":"955:9:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":7457,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7433,"src":"939:8:23","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7433_$","typeString":"type(library SafeCast)"}},"id":7458,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"948:6:23","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7432,"src":"939:15:23","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":7460,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"939:26:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7456,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"932:6:23","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":7455,"name":"int256","nodeType":"ElementaryTypeName","src":"932:6:23","typeDescriptions":{}}},"id":7461,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"932:34:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"922:44:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":7463,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"921:46:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"917:50:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":7449,"id":7465,"nodeType":"Return","src":"910:57:23"}]}]},"documentation":{"id":7439,"nodeType":"StructuredDocumentation","src":"294:380:23","text":" @dev Branchless ternary evaluation for `a ? b : c`. Gas costs are constant.\n IMPORTANT: This function may reduce bytecode size and consume less gas when used standalone.\n However, the compiler may optimize Solidity ternary operations (i.e. `a ? b : c`) to only compute\n one branch when needed, making this function more expensive."},"id":7468,"implemented":true,"kind":"function","modifiers":[],"name":"ternary","nameLocation":"689:7:23","nodeType":"FunctionDefinition","parameters":{"id":7446,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7441,"mutability":"mutable","name":"condition","nameLocation":"702:9:23","nodeType":"VariableDeclaration","scope":7468,"src":"697:14:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":7440,"name":"bool","nodeType":"ElementaryTypeName","src":"697:4:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":7443,"mutability":"mutable","name":"a","nameLocation":"720:1:23","nodeType":"VariableDeclaration","scope":7468,"src":"713:8:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7442,"name":"int256","nodeType":"ElementaryTypeName","src":"713:6:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":7445,"mutability":"mutable","name":"b","nameLocation":"730:1:23","nodeType":"VariableDeclaration","scope":7468,"src":"723:8:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7444,"name":"int256","nodeType":"ElementaryTypeName","src":"723:6:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"696:36:23"},"returnParameters":{"id":7449,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7448,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7468,"src":"756:6:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7447,"name":"int256","nodeType":"ElementaryTypeName","src":"756:6:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"755:8:23"},"scope":7577,"src":"680:306:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7486,"nodeType":"Block","src":"1132:46:23","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7481,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7479,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7471,"src":"1158:1:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":7480,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7473,"src":"1162:1:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1158:5:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":7482,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7471,"src":"1165:1:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},{"id":7483,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7473,"src":"1168:1:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_int256","typeString":"int256"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7478,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7468,"src":"1150:7:23","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_int256_$_t_int256_$returns$_t_int256_$","typeString":"function (bool,int256,int256) pure returns (int256)"}},"id":7484,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1150:20:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":7477,"id":7485,"nodeType":"Return","src":"1143:27:23"}]},"documentation":{"id":7469,"nodeType":"StructuredDocumentation","src":"994:68:23","text":" @dev Returns the largest of two signed numbers."},"id":7487,"implemented":true,"kind":"function","modifiers":[],"name":"max","nameLocation":"1077:3:23","nodeType":"FunctionDefinition","parameters":{"id":7474,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7471,"mutability":"mutable","name":"a","nameLocation":"1088:1:23","nodeType":"VariableDeclaration","scope":7487,"src":"1081:8:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7470,"name":"int256","nodeType":"ElementaryTypeName","src":"1081:6:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":7473,"mutability":"mutable","name":"b","nameLocation":"1098:1:23","nodeType":"VariableDeclaration","scope":7487,"src":"1091:8:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7472,"name":"int256","nodeType":"ElementaryTypeName","src":"1091:6:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1080:20:23"},"returnParameters":{"id":7477,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7476,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7487,"src":"1124:6:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7475,"name":"int256","nodeType":"ElementaryTypeName","src":"1124:6:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1123:8:23"},"scope":7577,"src":"1068:110:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7505,"nodeType":"Block","src":"1325:46:23","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7500,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7498,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7490,"src":"1351:1:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":7499,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7492,"src":"1355:1:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1351:5:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":7501,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7490,"src":"1358:1:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},{"id":7502,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7492,"src":"1361:1:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_int256","typeString":"int256"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7497,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7468,"src":"1343:7:23","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_int256_$_t_int256_$returns$_t_int256_$","typeString":"function (bool,int256,int256) pure returns (int256)"}},"id":7503,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1343:20:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":7496,"id":7504,"nodeType":"Return","src":"1336:27:23"}]},"documentation":{"id":7488,"nodeType":"StructuredDocumentation","src":"1186:69:23","text":" @dev Returns the smallest of two signed numbers."},"id":7506,"implemented":true,"kind":"function","modifiers":[],"name":"min","nameLocation":"1270:3:23","nodeType":"FunctionDefinition","parameters":{"id":7493,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7490,"mutability":"mutable","name":"a","nameLocation":"1281:1:23","nodeType":"VariableDeclaration","scope":7506,"src":"1274:8:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7489,"name":"int256","nodeType":"ElementaryTypeName","src":"1274:6:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":7492,"mutability":"mutable","name":"b","nameLocation":"1291:1:23","nodeType":"VariableDeclaration","scope":7506,"src":"1284:8:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7491,"name":"int256","nodeType":"ElementaryTypeName","src":"1284:6:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1273:20:23"},"returnParameters":{"id":7496,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7495,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7506,"src":"1317:6:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7494,"name":"int256","nodeType":"ElementaryTypeName","src":"1317:6:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1316:8:23"},"scope":7577,"src":"1261:110:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7549,"nodeType":"Block","src":"1582:166:23","statements":[{"assignments":[7517],"declarations":[{"constant":false,"id":7517,"mutability":"mutable","name":"x","nameLocation":"1653:1:23","nodeType":"VariableDeclaration","scope":7549,"src":"1646:8:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7516,"name":"int256","nodeType":"ElementaryTypeName","src":"1646:6:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"id":7530,"initialValue":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7529,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7520,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7518,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7509,"src":"1658:1:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"id":7519,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7511,"src":"1662:1:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1658:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":7521,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1657:7:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7527,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7524,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7522,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7509,"src":"1669:1:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":7523,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7511,"src":"1673:1:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1669:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":7525,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1668:7:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":7526,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1679:1:23","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1668:12:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":7528,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1667:14:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1657:24:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"VariableDeclarationStatement","src":"1646:35:23"},{"expression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7547,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7531,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7517,"src":"1699:1:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7545,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7539,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":7536,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7517,"src":"1719:1:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7535,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1711:7:23","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":7534,"name":"uint256","nodeType":"ElementaryTypeName","src":"1711:7:23","typeDescriptions":{}}},"id":7537,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1711:10:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"323535","id":7538,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1725:3:23","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"255"},"src":"1711:17:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7533,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1704:6:23","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":7532,"name":"int256","nodeType":"ElementaryTypeName","src":"1704:6:23","typeDescriptions":{}}},"id":7540,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1704:25:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7543,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7541,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7509,"src":"1733:1:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":7542,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7511,"src":"1737:1:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1733:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":7544,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1732:7:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1704:35:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":7546,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1703:37:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1699:41:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":7515,"id":7548,"nodeType":"Return","src":"1692:48:23"}]},"documentation":{"id":7507,"nodeType":"StructuredDocumentation","src":"1379:129:23","text":" @dev Returns the average of two signed numbers without overflow.\n The result is rounded towards zero."},"id":7550,"implemented":true,"kind":"function","modifiers":[],"name":"average","nameLocation":"1523:7:23","nodeType":"FunctionDefinition","parameters":{"id":7512,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7509,"mutability":"mutable","name":"a","nameLocation":"1538:1:23","nodeType":"VariableDeclaration","scope":7550,"src":"1531:8:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7508,"name":"int256","nodeType":"ElementaryTypeName","src":"1531:6:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":7511,"mutability":"mutable","name":"b","nameLocation":"1548:1:23","nodeType":"VariableDeclaration","scope":7550,"src":"1541:8:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7510,"name":"int256","nodeType":"ElementaryTypeName","src":"1541:6:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1530:20:23"},"returnParameters":{"id":7515,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7514,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7550,"src":"1574:6:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7513,"name":"int256","nodeType":"ElementaryTypeName","src":"1574:6:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1573:8:23"},"scope":7577,"src":"1514:234:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7575,"nodeType":"Block","src":"1897:779:23","statements":[{"id":7574,"nodeType":"UncheckedBlock","src":"1908:761:23","statements":[{"assignments":[7559],"declarations":[{"constant":false,"id":7559,"mutability":"mutable","name":"mask","nameLocation":"2485:4:23","nodeType":"VariableDeclaration","scope":7574,"src":"2478:11:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7558,"name":"int256","nodeType":"ElementaryTypeName","src":"2478:6:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"id":7563,"initialValue":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7562,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7560,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7553,"src":"2492:1:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"323535","id":7561,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2497:3:23","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"255"},"src":"2492:8:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"VariableDeclarationStatement","src":"2478:22:23"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7571,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7568,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7566,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7553,"src":"2640:1:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":7567,"name":"mask","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7559,"src":"2644:4:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"2640:8:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":7569,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2639:10:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":7570,"name":"mask","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7559,"src":"2652:4:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"2639:17:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7565,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2631:7:23","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":7564,"name":"uint256","nodeType":"ElementaryTypeName","src":"2631:7:23","typeDescriptions":{}}},"id":7572,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2631:26:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":7557,"id":7573,"nodeType":"Return","src":"2624:33:23"}]}]},"documentation":{"id":7551,"nodeType":"StructuredDocumentation","src":"1756:80:23","text":" @dev Returns the absolute unsigned value of a signed value."},"id":7576,"implemented":true,"kind":"function","modifiers":[],"name":"abs","nameLocation":"1851:3:23","nodeType":"FunctionDefinition","parameters":{"id":7554,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7553,"mutability":"mutable","name":"n","nameLocation":"1862:1:23","nodeType":"VariableDeclaration","scope":7576,"src":"1855:8:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7552,"name":"int256","nodeType":"ElementaryTypeName","src":"1855:6:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1854:10:23"},"returnParameters":{"id":7557,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7556,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7576,"src":"1888:7:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7555,"name":"uint256","nodeType":"ElementaryTypeName","src":"1888:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1887:9:23"},"scope":7577,"src":"1842:834:23","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":7578,"src":"268:2411:23","usedErrors":[],"usedEvents":[]}],"src":"112:2569:23"},"id":23},"contracts/PADToken.sol":{"ast":{"absolutePath":"contracts/PADToken.sol","exportedSymbols":{"AccessControl":[295],"Context":[1379],"ECDSA":[3698],"EIP712":[3925],"ERC165":[4035],"ERC20":[1055],"ERC20Permit":[1287],"IAccessControl":[378],"IERC20":[1133],"IERC20Errors":[445],"IERC20Metadata":[1313],"IERC20Permit":[1349],"Nonces":[1447],"PADToken":[7932],"Pausable":[1607]},"id":7933,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":7579,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"33:24:24"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/ERC20.sol","file":"@openzeppelin/contracts/token/ERC20/ERC20.sol","id":7580,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":7933,"sourceUnit":1056,"src":"61:55:24","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol","file":"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol","id":7581,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":7933,"sourceUnit":1288,"src":"118:72:24","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Pausable.sol","file":"@openzeppelin/contracts/utils/Pausable.sol","id":7582,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":7933,"sourceUnit":1608,"src":"192:52:24","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/access/AccessControl.sol","file":"@openzeppelin/contracts/access/AccessControl.sol","id":7583,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":7933,"sourceUnit":296,"src":"246:58:24","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":7585,"name":"ERC20","nameLocations":["492:5:24"],"nodeType":"IdentifierPath","referencedDeclaration":1055,"src":"492:5:24"},"id":7586,"nodeType":"InheritanceSpecifier","src":"492:5:24"},{"baseName":{"id":7587,"name":"ERC20Permit","nameLocations":["499:11:24"],"nodeType":"IdentifierPath","referencedDeclaration":1287,"src":"499:11:24"},"id":7588,"nodeType":"InheritanceSpecifier","src":"499:11:24"},{"baseName":{"id":7589,"name":"Pausable","nameLocations":["512:8:24"],"nodeType":"IdentifierPath","referencedDeclaration":1607,"src":"512:8:24"},"id":7590,"nodeType":"InheritanceSpecifier","src":"512:8:24"},{"baseName":{"id":7591,"name":"AccessControl","nameLocations":["522:13:24"],"nodeType":"IdentifierPath","referencedDeclaration":295,"src":"522:13:24"},"id":7592,"nodeType":"InheritanceSpecifier","src":"522:13:24"}],"canonicalName":"PADToken","contractDependencies":[],"contractKind":"contract","documentation":{"id":7584,"nodeType":"StructuredDocumentation","src":"308:161:24","text":" @title PADToken\n @dev ERC20 + EIP-2612 Permit, batch transfer, pausable (Gnosis Safe + role)\n Anti-flash-loan protection with cooldown periods"},"fullyImplemented":true,"id":7932,"linearizedBaseContracts":[7932,295,4035,4047,378,1607,1287,1447,3925,403,1349,1055,445,1313,1133,1379],"name":"PADToken","nameLocation":"480:8:24","nodeType":"ContractDefinition","nodes":[{"constant":true,"functionSelector":"e63ab1e9","id":7597,"mutability":"constant","name":"PAUSER_ROLE","nameLocation":"567:11:24","nodeType":"VariableDeclaration","scope":7932,"src":"543:62:24","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":7593,"name":"bytes32","nodeType":"ElementaryTypeName","src":"543:7:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"arguments":[{"hexValue":"5041555345525f524f4c45","id":7595,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"591:13:24","typeDescriptions":{"typeIdentifier":"t_stringliteral_65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a","typeString":"literal_string \"PAUSER_ROLE\""},"value":"PAUSER_ROLE"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a","typeString":"literal_string \"PAUSER_ROLE\""}],"id":7594,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"581:9:24","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":7596,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"581:24:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"public"},{"constant":true,"functionSelector":"75b238fc","id":7602,"mutability":"constant","name":"ADMIN_ROLE","nameLocation":"636:10:24","nodeType":"VariableDeclaration","scope":7932,"src":"612:60:24","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":7598,"name":"bytes32","nodeType":"ElementaryTypeName","src":"612:7:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"arguments":[{"hexValue":"41444d494e5f524f4c45","id":7600,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"659:12:24","typeDescriptions":{"typeIdentifier":"t_stringliteral_a49807205ce4d355092ef5a8a18f56e8913cf4a201fbe287825b095693c21775","typeString":"literal_string \"ADMIN_ROLE\""},"value":"ADMIN_ROLE"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_a49807205ce4d355092ef5a8a18f56e8913cf4a201fbe287825b095693c21775","typeString":"literal_string \"ADMIN_ROLE\""}],"id":7599,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"649:9:24","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":7601,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"649:23:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"public"},{"constant":false,"functionSelector":"a84173ae","id":7604,"mutability":"mutable","name":"gnosisSafe","nameLocation":"694:10:24","nodeType":"VariableDeclaration","scope":7932,"src":"679:25:24","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7603,"name":"address","nodeType":"ElementaryTypeName","src":"679:7:24","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"public"},{"constant":false,"functionSelector":"04646a49","id":7606,"mutability":"mutable","name":"cooldownPeriod","nameLocation":"763:14:24","nodeType":"VariableDeclaration","scope":7932,"src":"748:29:24","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7605,"name":"uint256","nodeType":"ElementaryTypeName","src":"748:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"constant":false,"functionSelector":"91fc1f2c","id":7610,"mutability":"mutable","name":"lastTransferTimestamp","nameLocation":"873:21:24","nodeType":"VariableDeclaration","scope":7932,"src":"838:56:24","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"typeName":{"id":7609,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":7607,"name":"address","nodeType":"ElementaryTypeName","src":"846:7:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"838:27:24","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":7608,"name":"uint256","nodeType":"ElementaryTypeName","src":"857:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"public"},{"constant":false,"functionSelector":"2f206068","id":7614,"mutability":"mutable","name":"hasCooldown","nameLocation":"979:11:24","nodeType":"VariableDeclaration","scope":7932,"src":"947:43:24","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"},"typeName":{"id":7613,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":7611,"name":"address","nodeType":"ElementaryTypeName","src":"955:7:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"947:24:24","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":7612,"name":"bool","nodeType":"ElementaryTypeName","src":"966:4:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}},"visibility":"public"},{"anonymous":false,"eventSelector":"eb9531f1025dff97cad08fa04d87d1982f6da47ad87bc18822a3dd4e85996b72","id":7618,"name":"GnosisSafeSet","nameLocation":"1005:13:24","nodeType":"EventDefinition","parameters":{"id":7617,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7616,"indexed":true,"mutability":"mutable","name":"newGnosisSafe","nameLocation":"1035:13:24","nodeType":"VariableDeclaration","scope":7618,"src":"1019:29:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7615,"name":"address","nodeType":"ElementaryTypeName","src":"1019:7:24","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1018:31:24"},"src":"999:51:24"},{"anonymous":false,"eventSelector":"88442d1f3abc99bf4a378fef853870decce17c14f3025385a762518e644012e1","id":7624,"name":"CooldownSet","nameLocation":"1062:11:24","nodeType":"EventDefinition","parameters":{"id":7623,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7620,"indexed":true,"mutability":"mutable","name":"account","nameLocation":"1090:7:24","nodeType":"VariableDeclaration","scope":7624,"src":"1074:23:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7619,"name":"address","nodeType":"ElementaryTypeName","src":"1074:7:24","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":7622,"indexed":false,"mutability":"mutable","name":"status","nameLocation":"1104:6:24","nodeType":"VariableDeclaration","scope":7624,"src":"1099:11:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":7621,"name":"bool","nodeType":"ElementaryTypeName","src":"1099:4:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1073:38:24"},"src":"1056:56:24"},{"anonymous":false,"eventSelector":"9f48766a1862aa51c434884dd5ccdd794719e403e0da740bb075991e6cde9d6e","id":7628,"name":"CooldownPeriodSet","nameLocation":"1124:17:24","nodeType":"EventDefinition","parameters":{"id":7627,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7626,"indexed":false,"mutability":"mutable","name":"newPeriod","nameLocation":"1150:9:24","nodeType":"VariableDeclaration","scope":7628,"src":"1142:17:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7625,"name":"uint256","nodeType":"ElementaryTypeName","src":"1142:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1141:19:24"},"src":"1118:43:24"},{"body":{"id":7671,"nodeType":"Block","src":"1234:276:24","statements":[{"expression":{"arguments":[{"id":7639,"name":"DEFAULT_ADMIN_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":29,"src":"1256:18:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"expression":{"id":7640,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1276:3:24","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":7641,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1280:6:24","memberName":"sender","nodeType":"MemberAccess","src":"1276:10:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":7638,"name":"_grantRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":256,"src":"1245:10:24","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) returns (bool)"}},"id":7642,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1245:42:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7643,"nodeType":"ExpressionStatement","src":"1245:42:24"},{"expression":{"arguments":[{"id":7645,"name":"PAUSER_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7597,"src":"1309:11:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"expression":{"id":7646,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1322:3:24","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":7647,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1326:6:24","memberName":"sender","nodeType":"MemberAccess","src":"1322:10:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":7644,"name":"_grantRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":256,"src":"1298:10:24","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) returns (bool)"}},"id":7648,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1298:35:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7649,"nodeType":"ExpressionStatement","src":"1298:35:24"},{"expression":{"arguments":[{"id":7651,"name":"ADMIN_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7602,"src":"1355:10:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"expression":{"id":7652,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1367:3:24","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":7653,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1371:6:24","memberName":"sender","nodeType":"MemberAccess","src":"1367:10:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":7650,"name":"_grantRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":256,"src":"1344:10:24","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) returns (bool)"}},"id":7654,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1344:34:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7655,"nodeType":"ExpressionStatement","src":"1344:34:24"},{"expression":{"arguments":[{"expression":{"id":7657,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1395:3:24","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":7658,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1399:6:24","memberName":"sender","nodeType":"MemberAccess","src":"1395:10:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7664,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"315f3030305f3030305f303030","id":7659,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1407:13:24","typeDescriptions":{"typeIdentifier":"t_rational_1000000000_by_1","typeString":"int_const 1000000000"},"value":"1_000_000_000"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7663,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":7660,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1423:2:24","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":7661,"name":"decimals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":619,"src":"1429:8:24","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint8_$","typeString":"function () view returns (uint8)"}},"id":7662,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1429:10:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"1423:16:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1407:32:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7656,"name":"_mint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":895,"src":"1389:5:24","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":7665,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1389:51:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7666,"nodeType":"ExpressionStatement","src":"1389:51:24"},{"expression":{"id":7669,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7667,"name":"cooldownPeriod","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7606,"src":"1451:14:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"31","id":7668,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1468:7:24","subdenomination":"hours","typeDescriptions":{"typeIdentifier":"t_rational_3600_by_1","typeString":"int_const 3600"},"value":"1"},"src":"1451:24:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7670,"nodeType":"ExpressionStatement","src":"1451:24:24"}]},"id":7672,"implemented":true,"kind":"constructor","modifiers":[{"arguments":[{"hexValue":"50414420546f6b656e","id":7631,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1189:11:24","typeDescriptions":{"typeIdentifier":"t_stringliteral_90a5fbdb7e9d5822db30567e029f084a5c098fa3c05cec70c90c484e61e1fd3f","typeString":"literal_string \"PAD Token\""},"value":"PAD Token"},{"hexValue":"504144","id":7632,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1202:5:24","typeDescriptions":{"typeIdentifier":"t_stringliteral_1b724658768486330908119ffc8a96b080353348d6319289fffab77915522729","typeString":"literal_string \"PAD\""},"value":"PAD"}],"id":7633,"kind":"baseConstructorSpecifier","modifierName":{"id":7630,"name":"ERC20","nameLocations":["1183:5:24"],"nodeType":"IdentifierPath","referencedDeclaration":1055,"src":"1183:5:24"},"nodeType":"ModifierInvocation","src":"1183:25:24"},{"arguments":[{"hexValue":"50414420546f6b656e","id":7635,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1221:11:24","typeDescriptions":{"typeIdentifier":"t_stringliteral_90a5fbdb7e9d5822db30567e029f084a5c098fa3c05cec70c90c484e61e1fd3f","typeString":"literal_string \"PAD Token\""},"value":"PAD Token"}],"id":7636,"kind":"baseConstructorSpecifier","modifierName":{"id":7634,"name":"ERC20Permit","nameLocations":["1209:11:24"],"nodeType":"IdentifierPath","referencedDeclaration":1287,"src":"1209:11:24"},"nodeType":"ModifierInvocation","src":"1209:24:24"}],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":7629,"nodeType":"ParameterList","parameters":[],"src":"1180:2:24"},"returnParameters":{"id":7637,"nodeType":"ParameterList","parameters":[],"src":"1234:0:24"},"scope":7932,"src":"1169:341:24","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":7681,"nodeType":"Block","src":"1564:27:24","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":7678,"name":"_pause","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1590,"src":"1575:6:24","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":7679,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1575:8:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7680,"nodeType":"ExpressionStatement","src":"1575:8:24"}]},"functionSelector":"8456cb59","id":7682,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"id":7675,"name":"PAUSER_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7597,"src":"1551:11:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":7676,"kind":"modifierInvocation","modifierName":{"id":7674,"name":"onlyRole","nameLocations":["1542:8:24"],"nodeType":"IdentifierPath","referencedDeclaration":40,"src":"1542:8:24"},"nodeType":"ModifierInvocation","src":"1542:21:24"}],"name":"pause","nameLocation":"1527:5:24","nodeType":"FunctionDefinition","parameters":{"id":7673,"nodeType":"ParameterList","parameters":[],"src":"1532:2:24"},"returnParameters":{"id":7677,"nodeType":"ParameterList","parameters":[],"src":"1564:0:24"},"scope":7932,"src":"1518:73:24","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":7691,"nodeType":"Block","src":"1647:29:24","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":7688,"name":"_unpause","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1606,"src":"1658:8:24","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":7689,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1658:10:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7690,"nodeType":"ExpressionStatement","src":"1658:10:24"}]},"functionSelector":"3f4ba83a","id":7692,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"id":7685,"name":"PAUSER_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7597,"src":"1634:11:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":7686,"kind":"modifierInvocation","modifierName":{"id":7684,"name":"onlyRole","nameLocations":["1625:8:24"],"nodeType":"IdentifierPath","referencedDeclaration":40,"src":"1625:8:24"},"nodeType":"ModifierInvocation","src":"1625:21:24"}],"name":"unpause","nameLocation":"1608:7:24","nodeType":"FunctionDefinition","parameters":{"id":7683,"nodeType":"ParameterList","parameters":[],"src":"1615:2:24"},"returnParameters":{"id":7687,"nodeType":"ParameterList","parameters":[],"src":"1647:0:24"},"scope":7932,"src":"1599:77:24","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":7718,"nodeType":"Block","src":"1758:149:24","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":7706,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7701,"name":"_gnosisSafe","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7694,"src":"1777:11:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":7704,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1800:1:24","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":7703,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1792:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":7702,"name":"address","nodeType":"ElementaryTypeName","src":"1792:7:24","typeDescriptions":{}}},"id":7705,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1792:10:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1777:25:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e76616c69642061646472657373","id":7707,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1804:17:24","typeDescriptions":{"typeIdentifier":"t_stringliteral_1462473b7a4b33d32b109b815fd2324d00c9e5839b707ecf16d0ab5744f99226","typeString":"literal_string \"Invalid address\""},"value":"Invalid address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_1462473b7a4b33d32b109b815fd2324d00c9e5839b707ecf16d0ab5744f99226","typeString":"literal_string \"Invalid address\""}],"id":7700,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"1769:7:24","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7708,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1769:53:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7709,"nodeType":"ExpressionStatement","src":"1769:53:24"},{"expression":{"id":7712,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7710,"name":"gnosisSafe","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7604,"src":"1833:10:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":7711,"name":"_gnosisSafe","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7694,"src":"1846:11:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1833:24:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":7713,"nodeType":"ExpressionStatement","src":"1833:24:24"},{"eventCall":{"arguments":[{"id":7715,"name":"_gnosisSafe","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7694,"src":"1887:11:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":7714,"name":"GnosisSafeSet","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7618,"src":"1873:13:24","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":7716,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1873:26:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7717,"nodeType":"EmitStatement","src":"1868:31:24"}]},"functionSelector":"c3085a3e","id":7719,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"id":7697,"name":"ADMIN_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7602,"src":"1746:10:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":7698,"kind":"modifierInvocation","modifierName":{"id":7696,"name":"onlyRole","nameLocations":["1737:8:24"],"nodeType":"IdentifierPath","referencedDeclaration":40,"src":"1737:8:24"},"nodeType":"ModifierInvocation","src":"1737:20:24"}],"name":"setGnosisSafe","nameLocation":"1693:13:24","nodeType":"FunctionDefinition","parameters":{"id":7695,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7694,"mutability":"mutable","name":"_gnosisSafe","nameLocation":"1715:11:24","nodeType":"VariableDeclaration","scope":7719,"src":"1707:19:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7693,"name":"address","nodeType":"ElementaryTypeName","src":"1707:7:24","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1706:21:24"},"returnParameters":{"id":7699,"nodeType":"ParameterList","parameters":[],"src":"1758:0:24"},"scope":7932,"src":"1684:223:24","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":7742,"nodeType":"Block","src":"1997:167:24","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7730,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7728,"name":"_cooldownPeriod","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7721,"src":"2016:15:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":7729,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2034:1:24","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2016:19:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e76616c696420636f6f6c646f776e20706572696f64","id":7731,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2037:25:24","typeDescriptions":{"typeIdentifier":"t_stringliteral_1a35f77d9ec5ff7b7507149194ddd7dff4d9bbb7539ae66ecc8d000378ca66da","typeString":"literal_string \"Invalid cooldown period\""},"value":"Invalid cooldown period"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_1a35f77d9ec5ff7b7507149194ddd7dff4d9bbb7539ae66ecc8d000378ca66da","typeString":"literal_string \"Invalid cooldown period\""}],"id":7727,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"2008:7:24","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7732,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2008:55:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7733,"nodeType":"ExpressionStatement","src":"2008:55:24"},{"expression":{"id":7736,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7734,"name":"cooldownPeriod","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7606,"src":"2074:14:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":7735,"name":"_cooldownPeriod","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7721,"src":"2091:15:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2074:32:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7737,"nodeType":"ExpressionStatement","src":"2074:32:24"},{"eventCall":{"arguments":[{"id":7739,"name":"_cooldownPeriod","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7721,"src":"2140:15:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7738,"name":"CooldownPeriodSet","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7628,"src":"2122:17:24","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$returns$__$","typeString":"function (uint256)"}},"id":7740,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2122:34:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7741,"nodeType":"EmitStatement","src":"2117:39:24"}]},"functionSelector":"80ea3de1","id":7743,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"id":7724,"name":"ADMIN_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7602,"src":"1985:10:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":7725,"kind":"modifierInvocation","modifierName":{"id":7723,"name":"onlyRole","nameLocations":["1976:8:24"],"nodeType":"IdentifierPath","referencedDeclaration":40,"src":"1976:8:24"},"nodeType":"ModifierInvocation","src":"1976:20:24"}],"name":"setCooldownPeriod","nameLocation":"1924:17:24","nodeType":"FunctionDefinition","parameters":{"id":7722,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7721,"mutability":"mutable","name":"_cooldownPeriod","nameLocation":"1950:15:24","nodeType":"VariableDeclaration","scope":7743,"src":"1942:23:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7720,"name":"uint256","nodeType":"ElementaryTypeName","src":"1942:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1941:25:24"},"returnParameters":{"id":7726,"nodeType":"ParameterList","parameters":[],"src":"1997:0:24"},"scope":7932,"src":"1915:249:24","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":7764,"nodeType":"Block","src":"2253:92:24","statements":[{"expression":{"id":7757,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":7753,"name":"hasCooldown","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7614,"src":"2264:11:24","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":7755,"indexExpression":{"id":7754,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7745,"src":"2276:7:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2264:20:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":7756,"name":"status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7747,"src":"2287:6:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"2264:29:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7758,"nodeType":"ExpressionStatement","src":"2264:29:24"},{"eventCall":{"arguments":[{"id":7760,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7745,"src":"2321:7:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":7761,"name":"status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7747,"src":"2330:6:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":7759,"name":"CooldownSet","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7624,"src":"2309:11:24","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_bool_$returns$__$","typeString":"function (address,bool)"}},"id":7762,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2309:28:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7763,"nodeType":"EmitStatement","src":"2304:33:24"}]},"functionSelector":"8fc022a6","id":7765,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"id":7750,"name":"ADMIN_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7602,"src":"2241:10:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":7751,"kind":"modifierInvocation","modifierName":{"id":7749,"name":"onlyRole","nameLocations":["2232:8:24"],"nodeType":"IdentifierPath","referencedDeclaration":40,"src":"2232:8:24"},"nodeType":"ModifierInvocation","src":"2232:20:24"}],"name":"setCooldown","nameLocation":"2181:11:24","nodeType":"FunctionDefinition","parameters":{"id":7748,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7745,"mutability":"mutable","name":"account","nameLocation":"2201:7:24","nodeType":"VariableDeclaration","scope":7765,"src":"2193:15:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7744,"name":"address","nodeType":"ElementaryTypeName","src":"2193:7:24","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":7747,"mutability":"mutable","name":"status","nameLocation":"2215:6:24","nodeType":"VariableDeclaration","scope":7765,"src":"2210:11:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":7746,"name":"bool","nodeType":"ElementaryTypeName","src":"2210:4:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2192:30:24"},"returnParameters":{"id":7752,"nodeType":"ParameterList","parameters":[],"src":"2253:0:24"},"scope":7932,"src":"2172:173:24","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":7869,"nodeType":"Block","src":"2458:775:24","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7781,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":7777,"name":"recipients","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7768,"src":"2477:10:24","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[] calldata"}},"id":7778,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2488:6:24","memberName":"length","nodeType":"MemberAccess","src":"2477:17:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":7779,"name":"amounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7771,"src":"2498:7:24","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[] calldata"}},"id":7780,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2506:6:24","memberName":"length","nodeType":"MemberAccess","src":"2498:14:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2477:35:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"417272617973206c656e677468206d69736d61746368","id":7782,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2514:24:24","typeDescriptions":{"typeIdentifier":"t_stringliteral_582fd48f3876d7686bfeaaaa0db0589073271dedd50d66094f02fee2a3d2e01c","typeString":"literal_string \"Arrays length mismatch\""},"value":"Arrays length mismatch"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_582fd48f3876d7686bfeaaaa0db0589073271dedd50d66094f02fee2a3d2e01c","typeString":"literal_string \"Arrays length mismatch\""}],"id":7776,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"2469:7:24","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7783,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2469:70:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7784,"nodeType":"ExpressionStatement","src":"2469:70:24"},{"assignments":[7786],"declarations":[{"constant":false,"id":7786,"mutability":"mutable","name":"totalAmount","nameLocation":"2558:11:24","nodeType":"VariableDeclaration","scope":7869,"src":"2550:19:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7785,"name":"uint256","nodeType":"ElementaryTypeName","src":"2550:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":7788,"initialValue":{"hexValue":"30","id":7787,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2572:1:24","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"2550:23:24"},{"body":{"id":7806,"nodeType":"Block","src":"2629:52:24","statements":[{"expression":{"id":7804,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7800,"name":"totalAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7786,"src":"2644:11:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"baseExpression":{"id":7801,"name":"amounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7771,"src":"2659:7:24","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[] calldata"}},"id":7803,"indexExpression":{"id":7802,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7790,"src":"2667:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2659:10:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2644:25:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7805,"nodeType":"ExpressionStatement","src":"2644:25:24"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7796,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7793,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7790,"src":"2604:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":7794,"name":"amounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7771,"src":"2608:7:24","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[] calldata"}},"id":7795,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2616:6:24","memberName":"length","nodeType":"MemberAccess","src":"2608:14:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2604:18:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7807,"initializationExpression":{"assignments":[7790],"declarations":[{"constant":false,"id":7790,"mutability":"mutable","name":"i","nameLocation":"2597:1:24","nodeType":"VariableDeclaration","scope":7807,"src":"2589:9:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7789,"name":"uint256","nodeType":"ElementaryTypeName","src":"2589:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":7792,"initialValue":{"hexValue":"30","id":7791,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2601:1:24","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"2589:13:24"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":7798,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"2624:3:24","subExpression":{"id":7797,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7790,"src":"2624:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7799,"nodeType":"ExpressionStatement","src":"2624:3:24"},"nodeType":"ForStatement","src":"2584:97:24"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7814,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"expression":{"id":7810,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2709:3:24","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":7811,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2713:6:24","memberName":"sender","nodeType":"MemberAccess","src":"2709:10:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":7809,"name":"balanceOf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":641,"src":"2699:9:24","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view returns (uint256)"}},"id":7812,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2699:21:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":7813,"name":"totalAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7786,"src":"2724:11:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2699:36:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e73756666696369656e742062616c616e6365","id":7815,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2737:22:24","typeDescriptions":{"typeIdentifier":"t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5","typeString":"literal_string \"Insufficient balance\""},"value":"Insufficient balance"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5","typeString":"literal_string \"Insufficient balance\""}],"id":7808,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"2691:7:24","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7816,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2691:69:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7817,"nodeType":"ExpressionStatement","src":"2691:69:24"},{"condition":{"baseExpression":{"id":7818,"name":"hasCooldown","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7614,"src":"2823:11:24","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":7821,"indexExpression":{"expression":{"id":7819,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2835:3:24","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":7820,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2839:6:24","memberName":"sender","nodeType":"MemberAccess","src":"2835:10:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2823:23:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7836,"nodeType":"IfStatement","src":"2819:165:24","trueBody":{"id":7835,"nodeType":"Block","src":"2848:136:24","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7831,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":7823,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"2871:5:24","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":7824,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2877:9:24","memberName":"timestamp","nodeType":"MemberAccess","src":"2871:15:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7830,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":7825,"name":"lastTransferTimestamp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7610,"src":"2890:21:24","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":7828,"indexExpression":{"expression":{"id":7826,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2912:3:24","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":7827,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2916:6:24","memberName":"sender","nodeType":"MemberAccess","src":"2912:10:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2890:33:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":7829,"name":"cooldownPeriod","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7606,"src":"2926:14:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2890:50:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2871:69:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"436f6f6c646f776e20706572696f64206e6f7420656c6170736564","id":7832,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2942:29:24","typeDescriptions":{"typeIdentifier":"t_stringliteral_48efca4c133d4af809cbdea820ea2f4422813132b6936873e13dbb833f6fc66c","typeString":"literal_string \"Cooldown period not elapsed\""},"value":"Cooldown period not elapsed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_48efca4c133d4af809cbdea820ea2f4422813132b6936873e13dbb833f6fc66c","typeString":"literal_string \"Cooldown period not elapsed\""}],"id":7822,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"2863:7:24","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7833,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2863:109:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7834,"nodeType":"ExpressionStatement","src":"2863:109:24"}]}},{"body":{"id":7859,"nodeType":"Block","src":"3044:75:24","statements":[{"expression":{"arguments":[{"expression":{"id":7849,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"3069:3:24","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":7850,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3073:6:24","memberName":"sender","nodeType":"MemberAccess","src":"3069:10:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"baseExpression":{"id":7851,"name":"recipients","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7768,"src":"3081:10:24","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[] calldata"}},"id":7853,"indexExpression":{"id":7852,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7838,"src":"3092:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3081:13:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"baseExpression":{"id":7854,"name":"amounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7771,"src":"3096:7:24","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[] calldata"}},"id":7856,"indexExpression":{"id":7855,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7838,"src":"3104:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3096:10:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7848,"name":"_transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":785,"src":"3059:9:24","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":7857,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3059:48:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7858,"nodeType":"ExpressionStatement","src":"3059:48:24"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7844,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7841,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7838,"src":"3016:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":7842,"name":"recipients","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7768,"src":"3020:10:24","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[] calldata"}},"id":7843,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3031:6:24","memberName":"length","nodeType":"MemberAccess","src":"3020:17:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3016:21:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7860,"initializationExpression":{"assignments":[7838],"declarations":[{"constant":false,"id":7838,"mutability":"mutable","name":"i","nameLocation":"3009:1:24","nodeType":"VariableDeclaration","scope":7860,"src":"3001:9:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7837,"name":"uint256","nodeType":"ElementaryTypeName","src":"3001:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":7840,"initialValue":{"hexValue":"30","id":7839,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3013:1:24","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"3001:13:24"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":7846,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"3039:3:24","subExpression":{"id":7845,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7838,"src":"3039:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7847,"nodeType":"ExpressionStatement","src":"3039:3:24"},"nodeType":"ForStatement","src":"2996:123:24"},{"expression":{"id":7867,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":7861,"name":"lastTransferTimestamp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7610,"src":"3174:21:24","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":7864,"indexExpression":{"expression":{"id":7862,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"3196:3:24","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":7863,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3200:6:24","memberName":"sender","nodeType":"MemberAccess","src":"3196:10:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"3174:33:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":7865,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"3210:5:24","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":7866,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3216:9:24","memberName":"timestamp","nodeType":"MemberAccess","src":"3210:15:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3174:51:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7868,"nodeType":"ExpressionStatement","src":"3174:51:24"}]},"functionSelector":"88d695b2","id":7870,"implemented":true,"kind":"function","modifiers":[{"id":7774,"kind":"modifierInvocation","modifierName":{"id":7773,"name":"whenNotPaused","nameLocations":["2444:13:24"],"nodeType":"IdentifierPath","referencedDeclaration":1532,"src":"2444:13:24"},"nodeType":"ModifierInvocation","src":"2444:13:24"}],"name":"batchTransfer","nameLocation":"2362:13:24","nodeType":"FunctionDefinition","parameters":{"id":7772,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7768,"mutability":"mutable","name":"recipients","nameLocation":"2395:10:24","nodeType":"VariableDeclaration","scope":7870,"src":"2376:29:24","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":7766,"name":"address","nodeType":"ElementaryTypeName","src":"2376:7:24","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":7767,"nodeType":"ArrayTypeName","src":"2376:9:24","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":7771,"mutability":"mutable","name":"amounts","nameLocation":"2426:7:24","nodeType":"VariableDeclaration","scope":7870,"src":"2407:26:24","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":7769,"name":"uint256","nodeType":"ElementaryTypeName","src":"2407:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7770,"nodeType":"ArrayTypeName","src":"2407:9:24","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"2375:59:24"},"returnParameters":{"id":7775,"nodeType":"ParameterList","parameters":[],"src":"2458:0:24"},"scope":7932,"src":"2353:880:24","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"baseFunctions":[862],"body":{"id":7915,"nodeType":"Block","src":"3338:310:24","statements":[{"condition":{"baseExpression":{"id":7883,"name":"hasCooldown","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7614,"src":"3391:11:24","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":7885,"indexExpression":{"id":7884,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7872,"src":"3403:4:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3391:17:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7906,"nodeType":"IfStatement","src":"3387:213:24","trueBody":{"id":7905,"nodeType":"Block","src":"3410:190:24","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7894,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":7887,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"3433:5:24","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":7888,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3439:9:24","memberName":"timestamp","nodeType":"MemberAccess","src":"3433:15:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7893,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":7889,"name":"lastTransferTimestamp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7610,"src":"3452:21:24","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":7891,"indexExpression":{"id":7890,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7872,"src":"3474:4:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3452:27:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":7892,"name":"cooldownPeriod","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7606,"src":"3482:14:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3452:44:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3433:63:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"436f6f6c646f776e20706572696f64206e6f7420656c6170736564","id":7895,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3498:29:24","typeDescriptions":{"typeIdentifier":"t_stringliteral_48efca4c133d4af809cbdea820ea2f4422813132b6936873e13dbb833f6fc66c","typeString":"literal_string \"Cooldown period not elapsed\""},"value":"Cooldown period not elapsed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_48efca4c133d4af809cbdea820ea2f4422813132b6936873e13dbb833f6fc66c","typeString":"literal_string \"Cooldown period not elapsed\""}],"id":7886,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"3425:7:24","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7896,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3425:103:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7897,"nodeType":"ExpressionStatement","src":"3425:103:24"},{"expression":{"id":7903,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":7898,"name":"lastTransferTimestamp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7610,"src":"3543:21:24","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":7900,"indexExpression":{"id":7899,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7872,"src":"3565:4:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"3543:27:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":7901,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"3573:5:24","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":7902,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3579:9:24","memberName":"timestamp","nodeType":"MemberAccess","src":"3573:15:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3543:45:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7904,"nodeType":"ExpressionStatement","src":"3543:45:24"}]}},{"expression":{"arguments":[{"id":7910,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7872,"src":"3624:4:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":7911,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7874,"src":"3630:2:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":7912,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7876,"src":"3634:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":7907,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"3610:5:24","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_PADToken_$7932_$","typeString":"type(contract super PADToken)"}},"id":7909,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3616:7:24","memberName":"_update","nodeType":"MemberAccess","referencedDeclaration":862,"src":"3610:13:24","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":7913,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3610:30:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7914,"nodeType":"ExpressionStatement","src":"3610:30:24"}]},"id":7916,"implemented":true,"kind":"function","modifiers":[{"id":7881,"kind":"modifierInvocation","modifierName":{"id":7880,"name":"whenNotPaused","nameLocations":["3324:13:24"],"nodeType":"IdentifierPath","referencedDeclaration":1532,"src":"3324:13:24"},"nodeType":"ModifierInvocation","src":"3324:13:24"}],"name":"_update","nameLocation":"3250:7:24","nodeType":"FunctionDefinition","overrides":{"id":7879,"nodeType":"OverrideSpecifier","overrides":[{"id":7878,"name":"ERC20","nameLocations":["3317:5:24"],"nodeType":"IdentifierPath","referencedDeclaration":1055,"src":"3317:5:24"}],"src":"3308:15:24"},"parameters":{"id":7877,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7872,"mutability":"mutable","name":"from","nameLocation":"3266:4:24","nodeType":"VariableDeclaration","scope":7916,"src":"3258:12:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7871,"name":"address","nodeType":"ElementaryTypeName","src":"3258:7:24","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":7874,"mutability":"mutable","name":"to","nameLocation":"3280:2:24","nodeType":"VariableDeclaration","scope":7916,"src":"3272:10:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7873,"name":"address","nodeType":"ElementaryTypeName","src":"3272:7:24","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":7876,"mutability":"mutable","name":"value","nameLocation":"3292:5:24","nodeType":"VariableDeclaration","scope":7916,"src":"3284:13:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7875,"name":"uint256","nodeType":"ElementaryTypeName","src":"3284:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3257:41:24"},"returnParameters":{"id":7882,"nodeType":"ParameterList","parameters":[],"src":"3338:0:24"},"scope":7932,"src":"3241:407:24","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"baseFunctions":[62],"body":{"id":7930,"nodeType":"Block","src":"3793:62:24","statements":[{"expression":{"arguments":[{"id":7927,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7918,"src":"3835:11:24","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"}],"expression":{"id":7925,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"3811:5:24","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_PADToken_$7932_$","typeString":"type(contract super PADToken)"}},"id":7926,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3817:17:24","memberName":"supportsInterface","nodeType":"MemberAccess","referencedDeclaration":62,"src":"3811:23:24","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes4_$returns$_t_bool_$","typeString":"function (bytes4) view returns (bool)"}},"id":7928,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3811:36:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":7924,"id":7929,"nodeType":"Return","src":"3804:43:24"}]},"functionSelector":"01ffc9a7","id":7931,"implemented":true,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"3704:17:24","nodeType":"FunctionDefinition","overrides":{"id":7921,"nodeType":"OverrideSpecifier","overrides":[{"id":7920,"name":"AccessControl","nameLocations":["3763:13:24"],"nodeType":"IdentifierPath","referencedDeclaration":295,"src":"3763:13:24"}],"src":"3754:23:24"},"parameters":{"id":7919,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7918,"mutability":"mutable","name":"interfaceId","nameLocation":"3729:11:24","nodeType":"VariableDeclaration","scope":7931,"src":"3722:18:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":7917,"name":"bytes4","nodeType":"ElementaryTypeName","src":"3722:6:24","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"3721:20:24"},"returnParameters":{"id":7924,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7923,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7931,"src":"3787:4:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":7922,"name":"bool","nodeType":"ElementaryTypeName","src":"3787:4:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3786:6:24"},"scope":7932,"src":"3695:160:24","stateMutability":"view","virtual":false,"visibility":"public"}],"scope":7933,"src":"471:3387:24","usedErrors":[305,308,415,420,425,434,439,444,1164,1171,1389,1521,1524,1621,1623,3361,3366,3371],"usedEvents":[317,326,335,383,1067,1076,1513,1518,7618,7624,7628]}],"src":"33:3826:24"},"id":24}},"contracts":{"@openzeppelin/contracts/access/AccessControl.sol":{"AccessControl":{"abi":[{"inputs":[],"name":"AccessControlBadConfirmation","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"bytes32","name":"neededRole","type":"bytes32"}],"name":"AccessControlUnauthorizedAccount","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"previousAdminRole","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"newAdminRole","type":"bytes32"}],"name":"RoleAdminChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"sender","type":"address"}],"name":"RoleGranted","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"sender","type":"address"}],"name":"RoleRevoked","type":"event"},{"inputs":[],"name":"DEFAULT_ADMIN_ROLE","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"}],"name":"getRoleAdmin","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"grantRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"hasRole","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"callerConfirmation","type":"address"}],"name":"renounceRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"revokeRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"DEFAULT_ADMIN_ROLE()":"a217fddf","getRoleAdmin(bytes32)":"248a9ca3","grantRole(bytes32,address)":"2f2ff15d","hasRole(bytes32,address)":"91d14854","renounceRole(bytes32,address)":"36568abe","revokeRole(bytes32,address)":"d547741f","supportsInterface(bytes4)":"01ffc9a7"}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"AccessControlBadConfirmation\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"neededRole\",\"type\":\"bytes32\"}],\"name\":\"AccessControlUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"callerConfirmation\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module that allows children to implement role-based access control mechanisms. This is a lightweight version that doesn't allow enumerating role members except through off-chain means by accessing the contract event logs. Some applications may benefit from on-chain enumerability, for those cases see {AccessControlEnumerable}. Roles are referred to by their `bytes32` identifier. These should be exposed in the external API and be unique. The best way to achieve this is by using `public constant` hash digests: ```solidity bytes32 public constant MY_ROLE = keccak256(\\\"MY_ROLE\\\"); ``` Roles can be used to represent a set of permissions. To restrict access to a function call, use {hasRole}: ```solidity function foo() public {     require(hasRole(MY_ROLE, msg.sender));     ... } ``` Roles can be granted and revoked dynamically via the {grantRole} and {revokeRole} functions. Each role has an associated admin role, and only accounts that have a role's admin role can call {grantRole} and {revokeRole}. By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means that only accounts with this role will be able to grant or revoke other roles. More complex role relationships can be created by using {_setRoleAdmin}. WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to grant and revoke this role. Extra precautions should be taken to secure accounts that have been granted it. We recommend using {AccessControlDefaultAdminRules} to enforce additional security measures for this role.\",\"errors\":{\"AccessControlBadConfirmation()\":[{\"details\":\"The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}.\"}],\"AccessControlUnauthorizedAccount(address,bytes32)\":[{\"details\":\"The `account` is missing a role.\"}]},\"events\":{\"RoleAdminChanged(bytes32,bytes32,bytes32)\":{\"details\":\"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted to signal this.\"},\"RoleGranted(bytes32,address,address)\":{\"details\":\"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call. This account bears the admin role (for the granted role). Expected in cases where the role was granted using the internal {AccessControl-_grantRole}.\"},\"RoleRevoked(bytes32,address,address)\":{\"details\":\"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)\"}},\"kind\":\"dev\",\"methods\":{\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`. May emit a {RoleRevoked} event.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/AccessControl.sol\":\"AccessControl\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/AccessControl.sol\":{\"keccak256\":\"0x8cb7d9a11d6c9b1a1cce759ae271ce9bdcc07362112bae1757d27a8f4e9fb662\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://24ad9cc3dfa2f31be03aa50af4eb3b64fc0e7d8cb52bf2766b614c810fc59f28\",\"dweb:/ipfs/QmTtkupdGNT4sbYZDatxm8yupjvWAC5knh7ZGtAd26NduS\"]},\"@openzeppelin/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0x3ecafd57f4d8502737e032c7a72086b6dd32bf5b69d70429e483f89cf310c2c7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b9e8a35d9edbaba568e89782eb806e16a5734a69e275f5d0d52e24537fa11653\",\"dweb:/ipfs/QmdBUAJKXXa5he87an93H96cwiv6c5XpzS1vTkiQtxyKND\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x3dcd533a3f709bda89bb8e649eb97aed96578e606f3796609544b1dcff975a0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://83fa9b15077fd2f33f6c175d694e2f7ae9c9a289c7feaca40aa7d6feb8d87c26\",\"dweb:/ipfs/QmQLfKCJ7mjiEeCGN1sHgWT8wjAMbAmBqcBVoQQyUZa5ws\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xb28144ffc2bca9d3e8e3e20b630d1d97b04aa7c9e00683d41211b241a65f5644\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://da447bb66b870656cd1f599cb8a173579d66ddf762c9d172391e409debe33d1d\",\"dweb:/ipfs/QmTyEdMigTpMBw5NTMoVfcpKQQ1pxdXWAbey3XBcUdN95q\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0xdbf01f069eb0b0a7a6ace73b250fdeb7e338d719bb40b5dd1fe7069004a36607\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1fc4a1dfe79b2adc6e22af84838c217946853d28a4291fcd8bbcc6fb226a0470\",\"dweb:/ipfs/QmaJbxCcdE76P1a8rjxkBqTXAfF11XebfwURamUB92G4WN\"]}},\"version\":1}","storageLayout":{"storage":[{"astId":26,"contract":"@openzeppelin/contracts/access/AccessControl.sol:AccessControl","label":"_roles","offset":0,"slot":"0","type":"t_mapping(t_bytes32,t_struct(RoleData)21_storage)"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"},"t_bool":{"encoding":"inplace","label":"bool","numberOfBytes":"1"},"t_bytes32":{"encoding":"inplace","label":"bytes32","numberOfBytes":"32"},"t_mapping(t_address,t_bool)":{"encoding":"mapping","key":"t_address","label":"mapping(address => bool)","numberOfBytes":"32","value":"t_bool"},"t_mapping(t_bytes32,t_struct(RoleData)21_storage)":{"encoding":"mapping","key":"t_bytes32","label":"mapping(bytes32 => struct AccessControl.RoleData)","numberOfBytes":"32","value":"t_struct(RoleData)21_storage"},"t_struct(RoleData)21_storage":{"encoding":"inplace","label":"struct AccessControl.RoleData","members":[{"astId":18,"contract":"@openzeppelin/contracts/access/AccessControl.sol:AccessControl","label":"hasRole","offset":0,"slot":"0","type":"t_mapping(t_address,t_bool)"},{"astId":20,"contract":"@openzeppelin/contracts/access/AccessControl.sol:AccessControl","label":"adminRole","offset":0,"slot":"1","type":"t_bytes32"}],"numberOfBytes":"64"}}}}},"@openzeppelin/contracts/access/IAccessControl.sol":{"IAccessControl":{"abi":[{"inputs":[],"name":"AccessControlBadConfirmation","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"bytes32","name":"neededRole","type":"bytes32"}],"name":"AccessControlUnauthorizedAccount","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"previousAdminRole","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"newAdminRole","type":"bytes32"}],"name":"RoleAdminChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"sender","type":"address"}],"name":"RoleGranted","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"sender","type":"address"}],"name":"RoleRevoked","type":"event"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"}],"name":"getRoleAdmin","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"grantRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"hasRole","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"callerConfirmation","type":"address"}],"name":"renounceRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"revokeRole","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"getRoleAdmin(bytes32)":"248a9ca3","grantRole(bytes32,address)":"2f2ff15d","hasRole(bytes32,address)":"91d14854","renounceRole(bytes32,address)":"36568abe","revokeRole(bytes32,address)":"d547741f"}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"AccessControlBadConfirmation\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"neededRole\",\"type\":\"bytes32\"}],\"name\":\"AccessControlUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"callerConfirmation\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"External interface of AccessControl declared to support ERC-165 detection.\",\"errors\":{\"AccessControlBadConfirmation()\":[{\"details\":\"The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}.\"}],\"AccessControlUnauthorizedAccount(address,bytes32)\":[{\"details\":\"The `account` is missing a role.\"}]},\"events\":{\"RoleAdminChanged(bytes32,bytes32,bytes32)\":{\"details\":\"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted to signal this.\"},\"RoleGranted(bytes32,address,address)\":{\"details\":\"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call. This account bears the admin role (for the granted role). Expected in cases where the role was granted using the internal {AccessControl-_grantRole}.\"},\"RoleRevoked(bytes32,address,address)\":{\"details\":\"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)\"}},\"kind\":\"dev\",\"methods\":{\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {AccessControl-_setRoleAdmin}.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/IAccessControl.sol\":\"IAccessControl\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0x3ecafd57f4d8502737e032c7a72086b6dd32bf5b69d70429e483f89cf310c2c7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b9e8a35d9edbaba568e89782eb806e16a5734a69e275f5d0d52e24537fa11653\",\"dweb:/ipfs/QmdBUAJKXXa5he87an93H96cwiv6c5XpzS1vTkiQtxyKND\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"@openzeppelin/contracts/interfaces/IERC5267.sol":{"IERC5267":{"abi":[{"anonymous":false,"inputs":[],"name":"EIP712DomainChanged","type":"event"},{"inputs":[],"name":"eip712Domain","outputs":[{"internalType":"bytes1","name":"fields","type":"bytes1"},{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"version","type":"string"},{"internalType":"uint256","name":"chainId","type":"uint256"},{"internalType":"address","name":"verifyingContract","type":"address"},{"internalType":"bytes32","name":"salt","type":"bytes32"},{"internalType":"uint256[]","name":"extensions","type":"uint256[]"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"eip712Domain()":"84b0196e"}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[],\"name\":\"EIP712DomainChanged\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"eip712Domain\",\"outputs\":[{\"internalType\":\"bytes1\",\"name\":\"fields\",\"type\":\"bytes1\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"version\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"chainId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"verifyingContract\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"},{\"internalType\":\"uint256[]\",\"name\":\"extensions\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"EIP712DomainChanged()\":{\"details\":\"MAY be emitted to signal that the domain could have changed.\"}},\"kind\":\"dev\",\"methods\":{\"eip712Domain()\":{\"details\":\"returns the fields and values that describe the domain separator used by this contract for EIP-712 signature.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/IERC5267.sol\":\"IERC5267\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC5267.sol\":{\"keccak256\":\"0x28b2a1f629338ad9bfe7bdab27a478f3d04001bbde67aefb48f473e01589a05a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b13fe921b3a4db8194370374451c3243045d4852e6e27c00fe161acc3eff59ee\",\"dweb:/ipfs/QmfNmkXJsDj9x2et6BTibrbonVGhcP8bRDkRTiXuqhevvR\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"@openzeppelin/contracts/interfaces/draft-IERC6093.sol":{"IERC1155Errors":{"abi":[{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC1155InsufficientBalance","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC1155InvalidApprover","type":"error"},{"inputs":[{"internalType":"uint256","name":"idsLength","type":"uint256"},{"internalType":"uint256","name":"valuesLength","type":"uint256"}],"name":"ERC1155InvalidArrayLength","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"}],"name":"ERC1155InvalidOperator","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC1155InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC1155InvalidSender","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"address","name":"owner","type":"address"}],"name":"ERC1155MissingApprovalForAll","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC1155InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valuesLength\",\"type\":\"uint256\"}],\"name\":\"ERC1155InvalidArrayLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC1155MissingApprovalForAll\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.\",\"errors\":{\"ERC1155InsufficientBalance(address,uint256,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC1155InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC1155InvalidArrayLength(uint256,uint256)\":[{\"details\":\"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.\",\"params\":{\"idsLength\":\"Length of the array of token identifiers\",\"valuesLength\":\"Length of the array of token amounts\"}}],\"ERC1155InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC1155InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC1155InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC1155MissingApprovalForAll(address,address)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"owner\":\"Address of the current owner of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC1155Errors\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0xe53865a480e99e5c35c3b1fd673cdccae2b5ddb7e0260e82b19d40d99980e146\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bd6c5d37ed3bbb994f5d63f62bfec105dd9dbd11ae8cecdb93232d64a9677143\",\"dweb:/ipfs/QmefNhF6r94wZBqL2XxZMvkrGr4WgLLoWts5oasPWpMUun\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}},"IERC20Errors":{"abi":[{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"allowance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientAllowance","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientBalance","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC20InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC20InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC20InvalidSender","type":"error"},{"inputs":[{"internalType":"address","name":"spender","type":"address"}],"name":"ERC20InvalidSpender","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC20Errors\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0xe53865a480e99e5c35c3b1fd673cdccae2b5ddb7e0260e82b19d40d99980e146\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bd6c5d37ed3bbb994f5d63f62bfec105dd9dbd11ae8cecdb93232d64a9677143\",\"dweb:/ipfs/QmefNhF6r94wZBqL2XxZMvkrGr4WgLLoWts5oasPWpMUun\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}},"IERC721Errors":{"abi":[{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"address","name":"owner","type":"address"}],"name":"ERC721IncorrectOwner","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC721InsufficientApproval","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC721InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"}],"name":"ERC721InvalidOperator","type":"error"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"ERC721InvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC721InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC721InvalidSender","type":"error"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC721NonexistentToken","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC721Errors\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0xe53865a480e99e5c35c3b1fd673cdccae2b5ddb7e0260e82b19d40d99980e146\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bd6c5d37ed3bbb994f5d63f62bfec105dd9dbd11ae8cecdb93232d64a9677143\",\"dweb:/ipfs/QmefNhF6r94wZBqL2XxZMvkrGr4WgLLoWts5oasPWpMUun\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"@openzeppelin/contracts/token/ERC20/ERC20.sol":{"ERC20":{"abi":[{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"allowance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientAllowance","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientBalance","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC20InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC20InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC20InvalidSender","type":"error"},{"inputs":[{"internalType":"address","name":"spender","type":"address"}],"name":"ERC20InvalidSpender","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","decimals()":"313ce567","name()":"06fdde03","symbol()":"95d89b41","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC-20 applications.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"constructor\":{\"details\":\"Sets the values for {name} and {symbol}. Both values are immutable: they can only be set once during construction.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":\"ERC20\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0xe53865a480e99e5c35c3b1fd673cdccae2b5ddb7e0260e82b19d40d99980e146\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bd6c5d37ed3bbb994f5d63f62bfec105dd9dbd11ae8cecdb93232d64a9677143\",\"dweb:/ipfs/QmefNhF6r94wZBqL2XxZMvkrGr4WgLLoWts5oasPWpMUun\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xa03f78b9c8beb9e37134ff26448c557406454474003f4238ee768e09ed84faa0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://57ee59c2a9c9e71c5b92d639dd88f9ec31bc6c23eabe932eed7d15c84ba7903e\",\"dweb:/ipfs/Qmczf1hzvrZWv8UdmDJ8ize3cFfbEzppjgfk32NQqwj1Ea\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x01e4bd12aef9e3d0956451e6ac9ece01554db0bc484ebc9287e5d57b4fd431d7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cb6de9142941eb74004600d0b23a0753846824648e6ddc23bc93889d03a79441\",\"dweb:/ipfs/QmckMYX9vjZNEx4pLGt6ePpvRcYuvt8s2zWoqSHxX2niHZ\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x5b0e97d38fc94a3e9031e6f6bb948991499dd5fd9fbe74898326e1b5cecc61b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f326d045fa9d7fa02f53b5c0750830127e98c4c3d104ef207ed3bb272d049f89\",\"dweb:/ipfs/QmTGhzTSMdCRZr5JWA48ZoujUPT6LWK3qJnQx2Xq8Z6i3m\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x3dcd533a3f709bda89bb8e649eb97aed96578e606f3796609544b1dcff975a0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://83fa9b15077fd2f33f6c175d694e2f7ae9c9a289c7feaca40aa7d6feb8d87c26\",\"dweb:/ipfs/QmQLfKCJ7mjiEeCGN1sHgWT8wjAMbAmBqcBVoQQyUZa5ws\"]}},\"version\":1}","storageLayout":{"storage":[{"astId":563,"contract":"@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20","label":"_balances","offset":0,"slot":"0","type":"t_mapping(t_address,t_uint256)"},{"astId":569,"contract":"@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20","label":"_allowances","offset":0,"slot":"1","type":"t_mapping(t_address,t_mapping(t_address,t_uint256))"},{"astId":571,"contract":"@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20","label":"_totalSupply","offset":0,"slot":"2","type":"t_uint256"},{"astId":573,"contract":"@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20","label":"_name","offset":0,"slot":"3","type":"t_string_storage"},{"astId":575,"contract":"@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20","label":"_symbol","offset":0,"slot":"4","type":"t_string_storage"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"},"t_mapping(t_address,t_mapping(t_address,t_uint256))":{"encoding":"mapping","key":"t_address","label":"mapping(address => mapping(address => uint256))","numberOfBytes":"32","value":"t_mapping(t_address,t_uint256)"},"t_mapping(t_address,t_uint256)":{"encoding":"mapping","key":"t_address","label":"mapping(address => uint256)","numberOfBytes":"32","value":"t_uint256"},"t_string_storage":{"encoding":"bytes","label":"string","numberOfBytes":"32"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"}}}}},"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"IERC20":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-20 standard as defined in the ERC.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x01e4bd12aef9e3d0956451e6ac9ece01554db0bc484ebc9287e5d57b4fd431d7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cb6de9142941eb74004600d0b23a0753846824648e6ddc23bc93889d03a79441\",\"dweb:/ipfs/QmckMYX9vjZNEx4pLGt6ePpvRcYuvt8s2zWoqSHxX2niHZ\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol":{"ERC20Permit":{"abi":[{"inputs":[],"name":"ECDSAInvalidSignature","type":"error"},{"inputs":[{"internalType":"uint256","name":"length","type":"uint256"}],"name":"ECDSAInvalidSignatureLength","type":"error"},{"inputs":[{"internalType":"bytes32","name":"s","type":"bytes32"}],"name":"ECDSAInvalidSignatureS","type":"error"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"allowance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientAllowance","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientBalance","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC20InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC20InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC20InvalidSender","type":"error"},{"inputs":[{"internalType":"address","name":"spender","type":"address"}],"name":"ERC20InvalidSpender","type":"error"},{"inputs":[{"internalType":"uint256","name":"deadline","type":"uint256"}],"name":"ERC2612ExpiredSignature","type":"error"},{"inputs":[{"internalType":"address","name":"signer","type":"address"},{"internalType":"address","name":"owner","type":"address"}],"name":"ERC2612InvalidSigner","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"currentNonce","type":"uint256"}],"name":"InvalidAccountNonce","type":"error"},{"inputs":[],"name":"InvalidShortString","type":"error"},{"inputs":[{"internalType":"string","name":"str","type":"string"}],"name":"StringTooLong","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[],"name":"EIP712DomainChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[],"name":"DOMAIN_SEPARATOR","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"eip712Domain","outputs":[{"internalType":"bytes1","name":"fields","type":"bytes1"},{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"version","type":"string"},{"internalType":"uint256","name":"chainId","type":"uint256"},{"internalType":"address","name":"verifyingContract","type":"address"},{"internalType":"bytes32","name":"salt","type":"bytes32"},{"internalType":"uint256[]","name":"extensions","type":"uint256[]"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"nonces","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"uint256","name":"deadline","type":"uint256"},{"internalType":"uint8","name":"v","type":"uint8"},{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"s","type":"bytes32"}],"name":"permit","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"DOMAIN_SEPARATOR()":"3644e515","allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","decimals()":"313ce567","eip712Domain()":"84b0196e","name()":"06fdde03","nonces(address)":"7ecebe00","permit(address,address,uint256,uint256,uint8,bytes32,bytes32)":"d505accf","symbol()":"95d89b41","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"ECDSAInvalidSignature\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"length\",\"type\":\"uint256\"}],\"name\":\"ECDSAInvalidSignatureLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"ECDSAInvalidSignatureS\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"ERC2612ExpiredSignature\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"signer\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC2612InvalidSigner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"currentNonce\",\"type\":\"uint256\"}],\"name\":\"InvalidAccountNonce\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidShortString\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"str\",\"type\":\"string\"}],\"name\":\"StringTooLong\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"EIP712DomainChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"eip712Domain\",\"outputs\":[{\"internalType\":\"bytes1\",\"name\":\"fields\",\"type\":\"bytes1\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"version\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"chainId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"verifyingContract\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"},{\"internalType\":\"uint256[]\",\"name\":\"extensions\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"permit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the ERC-20 Permit extension allowing approvals to be made via signatures, as defined in https://eips.ethereum.org/EIPS/eip-2612[ERC-2612]. Adds the {permit} method, which can be used to change an account's ERC-20 allowance (see {IERC20-allowance}) by presenting a message signed by the account. By not relying on `{IERC20-approve}`, the token holder account doesn't need to send a transaction, and thus is not required to hold Ether at all.\",\"errors\":{\"ECDSAInvalidSignature()\":[{\"details\":\"The signature derives the `address(0)`.\"}],\"ECDSAInvalidSignatureLength(uint256)\":[{\"details\":\"The signature has an invalid length.\"}],\"ECDSAInvalidSignatureS(bytes32)\":[{\"details\":\"The signature has an S value that is in the upper half order.\"}],\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC2612ExpiredSignature(uint256)\":[{\"details\":\"Permit deadline has expired.\"}],\"ERC2612InvalidSigner(address,address)\":[{\"details\":\"Mismatched signature.\"}],\"InvalidAccountNonce(address,uint256)\":[{\"details\":\"The nonce used for an `account` is not the expected current nonce.\"}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"EIP712DomainChanged()\":{\"details\":\"MAY be emitted to signal that the domain could have changed.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"DOMAIN_SEPARATOR()\":{\"details\":\"Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\"},\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"constructor\":{\"details\":\"Initializes the {EIP712} domain separator using the `name` parameter, and setting `version` to `\\\"1\\\"`. It's a good idea to use the same `name` that is defined as the ERC-20 token name.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"eip712Domain()\":{\"details\":\"returns the fields and values that describe the domain separator used by this contract for EIP-712 signature.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"nonces(address)\":{\"details\":\"Returns the current nonce for `owner`. This value must be included whenever a signature is generated for {permit}. Every successful call to {permit} increases ``owner``'s nonce by one. This prevents a signature from being used multiple times.\"},\"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)\":{\"details\":\"Sets `value` as the allowance of `spender` over ``owner``'s tokens, given ``owner``'s signed approval. IMPORTANT: The same issues {IERC20-approve} has related to transaction ordering also apply here. Emits an {Approval} event. Requirements: - `spender` cannot be the zero address. - `deadline` must be a timestamp in the future. - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner` over the EIP712-formatted function arguments. - the signature must use ``owner``'s current nonce (see {nonces}). For more information on the signature format, see the https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP section]. CAUTION: See Security Considerations above.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol\":\"ERC20Permit\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC5267.sol\":{\"keccak256\":\"0x28b2a1f629338ad9bfe7bdab27a478f3d04001bbde67aefb48f473e01589a05a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b13fe921b3a4db8194370374451c3243045d4852e6e27c00fe161acc3eff59ee\",\"dweb:/ipfs/QmfNmkXJsDj9x2et6BTibrbonVGhcP8bRDkRTiXuqhevvR\"]},\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0xe53865a480e99e5c35c3b1fd673cdccae2b5ddb7e0260e82b19d40d99980e146\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bd6c5d37ed3bbb994f5d63f62bfec105dd9dbd11ae8cecdb93232d64a9677143\",\"dweb:/ipfs/QmefNhF6r94wZBqL2XxZMvkrGr4WgLLoWts5oasPWpMUun\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xa03f78b9c8beb9e37134ff26448c557406454474003f4238ee768e09ed84faa0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://57ee59c2a9c9e71c5b92d639dd88f9ec31bc6c23eabe932eed7d15c84ba7903e\",\"dweb:/ipfs/Qmczf1hzvrZWv8UdmDJ8ize3cFfbEzppjgfk32NQqwj1Ea\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x01e4bd12aef9e3d0956451e6ac9ece01554db0bc484ebc9287e5d57b4fd431d7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cb6de9142941eb74004600d0b23a0753846824648e6ddc23bc93889d03a79441\",\"dweb:/ipfs/QmckMYX9vjZNEx4pLGt6ePpvRcYuvt8s2zWoqSHxX2niHZ\"]},\"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol\":{\"keccak256\":\"0x75d915918e62946caf04224552ec67cec8761941907c8a144c1ea8167856c430\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://165246da467a540613d7ec3b2758eafdb724d87576088dde94483b02e8136353\",\"dweb:/ipfs/QmQp41YPLHyKAdy7MyMmTzBRaZhA6xxXMt1oUmfEss8bmv\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x5b0e97d38fc94a3e9031e6f6bb948991499dd5fd9fbe74898326e1b5cecc61b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f326d045fa9d7fa02f53b5c0750830127e98c4c3d104ef207ed3bb272d049f89\",\"dweb:/ipfs/QmTGhzTSMdCRZr5JWA48ZoujUPT6LWK3qJnQx2Xq8Z6i3m\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\":{\"keccak256\":\"0x79ee51693b808ffdb306266b04709183c403b04078211b149794bc11d6c3fc39\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c50b360520e990c689b887ed508c6f6acff9309dc207c0f05ad8ebcacf4b98cb\",\"dweb:/ipfs/QmeXjWT5Z5X5UzMbiBd3MoEUnfNAtV8HpoasznLkq34JWZ\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x3dcd533a3f709bda89bb8e649eb97aed96578e606f3796609544b1dcff975a0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://83fa9b15077fd2f33f6c175d694e2f7ae9c9a289c7feaca40aa7d6feb8d87c26\",\"dweb:/ipfs/QmQLfKCJ7mjiEeCGN1sHgWT8wjAMbAmBqcBVoQQyUZa5ws\"]},\"@openzeppelin/contracts/utils/Nonces.sol\":{\"keccak256\":\"0xb2ac469a92e3980b87267eacabd4e470df6cf278858efa230f69c723316c138d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3ce61d28f35bf80f21d884b285b4061c938e400a0d90d7a8176e2cacf29b5eaf\",\"dweb:/ipfs/Qmar9FHYkwMVvQYtDoeJFETryVwBPTPs1dxhvKG1AMah1c\"]},\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0x65fd7c9cac0812d510bbaac59b007da1df6f3820f939fca04fd2b7ed07e341c6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f30f7cf8b553278b1bbad1f6aaf4b227b98b1532b3c16dbca92d815d627779df\",\"dweb:/ipfs/QmTkA1v7mrd2ymdTcPYFuNjguKhQx99npcPYKAdMfgfKvB\"]},\"@openzeppelin/contracts/utils/ShortStrings.sol\":{\"keccak256\":\"0x390e3113af8cf6c95f432b509fff201f4f2868733d43e0972f9ec08f37ce064e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://40e540b200a6dd6d686822ef475a1ef4778e7afdc47826be5b393a4ab5b4d940\",\"dweb:/ipfs/Qme2xivyB4Les1wX2ZYT3571CmQBNuFQpNK1PdWZ8JZveL\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0xb9355bac6de0c0dd42a7f3c4ad3e6e7bdff95109e1bb6ba5be0dce666b314921\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b8449ecfc29ae42905bcfd8fa232bd73eccb14365f1894a3cc1abcce90639379\",\"dweb:/ipfs/QmWwdkEJXZjk57T7T5JRogJzEhcT7JpnmxEVfHAwFSMuZ1\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x831320073a13168dd04b3b7dc0d7c3c4fd1f8d699c3b3709900d1dd7e52ae931\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d37bb18e9824f73bd0cbf259d2326028031e60ed89bf4eba095c73d605f243ed\",\"dweb:/ipfs/QmWxNLK1eZBwA1GdxzwqGkarHhbciAvM8bg6qcRafeS47J\"]},\"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":{\"keccak256\":\"0xbe22c37080f9052e0e18062a527a19f9354703ee48888c71baf0abd747a34a8b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://eb85649fce273c8c19eeba7db292f92b6653263ae39f12e427a066b998c9cec4\",\"dweb:/ipfs/QmRaTEqA15siRJoiPCuvtzK29dgXxQu94n4JBabHUSFXXQ\"]},\"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":{\"keccak256\":\"0xf778df68e781faf042ba75ec07581c0d85242d1ed2eb635f35f1a6223217afc3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://081591b28f424eda7d7ac702ef6dc39524aa3515079ccba4175cd7d181674cde\",\"dweb:/ipfs/QmVJQigws6GRg4UNvMmj2NUh1tBRSHTpQV6vjiaEsmL7eL\"]},\"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol\":{\"keccak256\":\"0xd7999d7b3c3a121215a15e205b381e06cfff55c47f67220d1605cd96cd0848d8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e259964860d8625d6c33d841c870af390834c037c4459c8b14231f1bd440f682\",\"dweb:/ipfs/QmWyFHT1oipmXVN4NLxrdBL9nayTzFfPrkAQbRozeWdhKQ\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xe09e820269ce218384211e4bf344056f0aab77a27b953012a3fb647d7631b7c2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0a8e7a7218203b059b4b4a423a93d6066eb9cec0a8affde80bb4a6c44d6a14a0\",\"dweb:/ipfs/QmSbmEzwGBFD3TntztEE5ZFLBqP1SZYiQhA1dLoDgzrcz4\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0xf1e73884b1e40057009853b1ee55ec66413cfa5eaa9074e5dd85bd070ea8b91c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1d29fd43e41bd73ac0fb65ac77c309c88651a42f8e49989cf1558f64f731697b\",\"dweb:/ipfs/Qmd61ZCYWHj9PJ3uSXaJekif8tkKgmfU6PLunszwhY2QX3\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0x7c35afe4f4b7e64ea6efa5216f51790d8ce80cd764a00790203a59ebf20202ec\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0b264b01df570c48603e16066aea73d3200c78523f9d94dd587a61eafa33705c\",\"dweb:/ipfs/QmayVg47dBKddrgrgsbr4Wu8hQBWZk5oMpiUtXKz1uEo1v\"]}},\"version\":1}","storageLayout":{"storage":[{"astId":563,"contract":"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol:ERC20Permit","label":"_balances","offset":0,"slot":"0","type":"t_mapping(t_address,t_uint256)"},{"astId":569,"contract":"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol:ERC20Permit","label":"_allowances","offset":0,"slot":"1","type":"t_mapping(t_address,t_mapping(t_address,t_uint256))"},{"astId":571,"contract":"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol:ERC20Permit","label":"_totalSupply","offset":0,"slot":"2","type":"t_uint256"},{"astId":573,"contract":"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol:ERC20Permit","label":"_name","offset":0,"slot":"3","type":"t_string_storage"},{"astId":575,"contract":"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol:ERC20Permit","label":"_symbol","offset":0,"slot":"4","type":"t_string_storage"},{"astId":3735,"contract":"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol:ERC20Permit","label":"_nameFallback","offset":0,"slot":"5","type":"t_string_storage"},{"astId":3737,"contract":"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol:ERC20Permit","label":"_versionFallback","offset":0,"slot":"6","type":"t_string_storage"},{"astId":1393,"contract":"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol:ERC20Permit","label":"_nonces","offset":0,"slot":"7","type":"t_mapping(t_address,t_uint256)"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"},"t_mapping(t_address,t_mapping(t_address,t_uint256))":{"encoding":"mapping","key":"t_address","label":"mapping(address => mapping(address => uint256))","numberOfBytes":"32","value":"t_mapping(t_address,t_uint256)"},"t_mapping(t_address,t_uint256)":{"encoding":"mapping","key":"t_address","label":"mapping(address => uint256)","numberOfBytes":"32","value":"t_uint256"},"t_string_storage":{"encoding":"bytes","label":"string","numberOfBytes":"32"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"}}}}},"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol":{"IERC20Metadata":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","decimals()":"313ce567","name()":"06fdde03","symbol()":"95d89b41","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the optional metadata functions from the ERC-20 standard.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":\"IERC20Metadata\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x01e4bd12aef9e3d0956451e6ac9ece01554db0bc484ebc9287e5d57b4fd431d7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cb6de9142941eb74004600d0b23a0753846824648e6ddc23bc93889d03a79441\",\"dweb:/ipfs/QmckMYX9vjZNEx4pLGt6ePpvRcYuvt8s2zWoqSHxX2niHZ\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x5b0e97d38fc94a3e9031e6f6bb948991499dd5fd9fbe74898326e1b5cecc61b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f326d045fa9d7fa02f53b5c0750830127e98c4c3d104ef207ed3bb272d049f89\",\"dweb:/ipfs/QmTGhzTSMdCRZr5JWA48ZoujUPT6LWK3qJnQx2Xq8Z6i3m\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol":{"IERC20Permit":{"abi":[{"inputs":[],"name":"DOMAIN_SEPARATOR","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"nonces","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"uint256","name":"deadline","type":"uint256"},{"internalType":"uint8","name":"v","type":"uint8"},{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"s","type":"bytes32"}],"name":"permit","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"DOMAIN_SEPARATOR()":"3644e515","nonces(address)":"7ecebe00","permit(address,address,uint256,uint256,uint8,bytes32,bytes32)":"d505accf"}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"permit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-20 Permit extension allowing approvals to be made via signatures, as defined in https://eips.ethereum.org/EIPS/eip-2612[ERC-2612]. Adds the {permit} method, which can be used to change an account's ERC-20 allowance (see {IERC20-allowance}) by presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't need to send a transaction, and thus is not required to hold Ether at all. ==== Security Considerations There are two important considerations concerning the use of `permit`. The first is that a valid permit signature expresses an allowance, and it should not be assumed to convey additional meaning. In particular, it should not be considered as an intention to spend the allowance in any specific way. The second is that because permits have built-in replay protection and can be submitted by anyone, they can be frontrun. A protocol that uses permits should take this into consideration and allow a `permit` call to fail. Combining these two aspects, a pattern that may be generally recommended is: ```solidity function doThingWithPermit(..., uint256 value, uint256 deadline, uint8 v, bytes32 r, bytes32 s) public {     try token.permit(msg.sender, address(this), value, deadline, v, r, s) {} catch {}     doThing(..., value); } function doThing(..., uint256 value) public {     token.safeTransferFrom(msg.sender, address(this), value);     ... } ``` Observe that: 1) `msg.sender` is used as the owner, leaving no ambiguity as to the signer intent, and 2) the use of `try/catch` allows the permit to fail and makes the code tolerant to frontrunning. (See also {SafeERC20-safeTransferFrom}). Additionally, note that smart contract wallets (such as Argent or Safe) are not able to produce permit signatures, so contracts should have entry points that don't rely on permit.\",\"kind\":\"dev\",\"methods\":{\"DOMAIN_SEPARATOR()\":{\"details\":\"Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\"},\"nonces(address)\":{\"details\":\"Returns the current nonce for `owner`. This value must be included whenever a signature is generated for {permit}. Every successful call to {permit} increases ``owner``'s nonce by one. This prevents a signature from being used multiple times.\"},\"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)\":{\"details\":\"Sets `value` as the allowance of `spender` over ``owner``'s tokens, given ``owner``'s signed approval. IMPORTANT: The same issues {IERC20-approve} has related to transaction ordering also apply here. Emits an {Approval} event. Requirements: - `spender` cannot be the zero address. - `deadline` must be a timestamp in the future. - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner` over the EIP712-formatted function arguments. - the signature must use ``owner``'s current nonce (see {nonces}). For more information on the signature format, see the https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP section]. CAUTION: See Security Considerations above.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\":\"IERC20Permit\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\":{\"keccak256\":\"0x79ee51693b808ffdb306266b04709183c403b04078211b149794bc11d6c3fc39\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c50b360520e990c689b887ed508c6f6acff9309dc207c0f05ad8ebcacf4b98cb\",\"dweb:/ipfs/QmeXjWT5Z5X5UzMbiBd3MoEUnfNAtV8HpoasznLkq34JWZ\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"@openzeppelin/contracts/utils/Context.sol":{"Context":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x3dcd533a3f709bda89bb8e649eb97aed96578e606f3796609544b1dcff975a0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://83fa9b15077fd2f33f6c175d694e2f7ae9c9a289c7feaca40aa7d6feb8d87c26\",\"dweb:/ipfs/QmQLfKCJ7mjiEeCGN1sHgWT8wjAMbAmBqcBVoQQyUZa5ws\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"@openzeppelin/contracts/utils/Nonces.sol":{"Nonces":{"abi":[{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"currentNonce","type":"uint256"}],"name":"InvalidAccountNonce","type":"error"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"nonces","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"nonces(address)":"7ecebe00"}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"currentNonce\",\"type\":\"uint256\"}],\"name\":\"InvalidAccountNonce\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Provides tracking nonces for addresses. Nonces will only increment.\",\"errors\":{\"InvalidAccountNonce(address,uint256)\":[{\"details\":\"The nonce used for an `account` is not the expected current nonce.\"}]},\"kind\":\"dev\",\"methods\":{\"nonces(address)\":{\"details\":\"Returns the next unused nonce for an address.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Nonces.sol\":\"Nonces\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Nonces.sol\":{\"keccak256\":\"0xb2ac469a92e3980b87267eacabd4e470df6cf278858efa230f69c723316c138d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3ce61d28f35bf80f21d884b285b4061c938e400a0d90d7a8176e2cacf29b5eaf\",\"dweb:/ipfs/Qmar9FHYkwMVvQYtDoeJFETryVwBPTPs1dxhvKG1AMah1c\"]}},\"version\":1}","storageLayout":{"storage":[{"astId":1393,"contract":"@openzeppelin/contracts/utils/Nonces.sol:Nonces","label":"_nonces","offset":0,"slot":"0","type":"t_mapping(t_address,t_uint256)"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"},"t_mapping(t_address,t_uint256)":{"encoding":"mapping","key":"t_address","label":"mapping(address => uint256)","numberOfBytes":"32","value":"t_uint256"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"}}}}},"@openzeppelin/contracts/utils/Panic.sol":{"Panic":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212207cb493c19906682158979ec2d193486378bc92a27e4d873bfadcf406de03b82a64736f6c634300081c0033","opcodes":"PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH29 0xB493C19906682158979EC2D193486378BC92A27E4D873BFADCF406DE03 0xB8 0x2A PUSH5 0x736F6C6343 STOP ADDMOD SHR STOP CALLER ","sourceMap":"682:1346:11:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;682:1346:11;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212207cb493c19906682158979ec2d193486378bc92a27e4d873bfadcf406de03b82a64736f6c634300081c0033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH29 0xB493C19906682158979EC2D193486378BC92A27E4D873BFADCF406DE03 0xB8 0x2A PUSH5 0x736F6C6343 STOP ADDMOD SHR STOP CALLER ","sourceMap":"682:1346:11:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Helper library for emitting standardized panic codes. ```solidity contract Example {      using Panic for uint256;      // Use any of the declared internal constants      function foo() { Panic.GENERIC.panic(); }      // Alternatively      function foo() { Panic.panic(Panic.GENERIC); } } ``` Follows the list from https://github.com/ethereum/solidity/blob/v0.8.24/libsolutil/ErrorCodes.h[libsolutil]. _Available since v5.1._\",\"kind\":\"dev\",\"methods\":{},\"stateVariables\":{\"ARRAY_OUT_OF_BOUNDS\":{\"details\":\"array out of bounds access\"},\"ASSERT\":{\"details\":\"used by the assert() builtin\"},\"DIVISION_BY_ZERO\":{\"details\":\"division or modulo by zero\"},\"EMPTY_ARRAY_POP\":{\"details\":\"empty array pop\"},\"ENUM_CONVERSION_ERROR\":{\"details\":\"enum conversion error\"},\"GENERIC\":{\"details\":\"generic / unspecified error\"},\"INVALID_INTERNAL_FUNCTION\":{\"details\":\"calling invalid internal function\"},\"RESOURCE_ERROR\":{\"details\":\"resource error (too large allocation or too large array)\"},\"STORAGE_ENCODING_ERROR\":{\"details\":\"invalid encoding in storage\"},\"UNDER_OVERFLOW\":{\"details\":\"arithmetic underflow or overflow\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Panic.sol\":\"Panic\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0x65fd7c9cac0812d510bbaac59b007da1df6f3820f939fca04fd2b7ed07e341c6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f30f7cf8b553278b1bbad1f6aaf4b227b98b1532b3c16dbca92d815d627779df\",\"dweb:/ipfs/QmTkA1v7mrd2ymdTcPYFuNjguKhQx99npcPYKAdMfgfKvB\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"@openzeppelin/contracts/utils/Pausable.sol":{"Pausable":{"abi":[{"inputs":[],"name":"EnforcedPause","type":"error"},{"inputs":[],"name":"ExpectedPause","type":"error"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"account","type":"address"}],"name":"Paused","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"account","type":"address"}],"name":"Unpaused","type":"event"},{"inputs":[],"name":"paused","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"paused()":"5c975abb"}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"EnforcedPause\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ExpectedPause\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which allows children to implement an emergency stop mechanism that can be triggered by an authorized account. This module is used through inheritance. It will make available the modifiers `whenNotPaused` and `whenPaused`, which can be applied to the functions of your contract. Note that they will not be pausable by simply including this module, only once the modifiers are put in place.\",\"errors\":{\"EnforcedPause()\":[{\"details\":\"The operation failed because the contract is paused.\"}],\"ExpectedPause()\":[{\"details\":\"The operation failed because the contract is not paused.\"}]},\"events\":{\"Paused(address)\":{\"details\":\"Emitted when the pause is triggered by `account`.\"},\"Unpaused(address)\":{\"details\":\"Emitted when the pause is lifted by `account`.\"}},\"kind\":\"dev\",\"methods\":{\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Pausable.sol\":\"Pausable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x3dcd533a3f709bda89bb8e649eb97aed96578e606f3796609544b1dcff975a0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://83fa9b15077fd2f33f6c175d694e2f7ae9c9a289c7feaca40aa7d6feb8d87c26\",\"dweb:/ipfs/QmQLfKCJ7mjiEeCGN1sHgWT8wjAMbAmBqcBVoQQyUZa5ws\"]},\"@openzeppelin/contracts/utils/Pausable.sol\":{\"keccak256\":\"0xa9be83f7bdcb8cf7a19c67c140495e73a145ec6f5040e6ad6d9502bde287ba2f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9c4d3cc806fc535febe2d6d550946bfa86763fa83c4a9ba4a9ad9c3e961daed0\",\"dweb:/ipfs/QmNoU8w2MUyznikxzLWsz8XcT1QuBQLP89vjB5sowFb5sk\"]}},\"version\":1}","storageLayout":{"storage":[{"astId":1508,"contract":"@openzeppelin/contracts/utils/Pausable.sol:Pausable","label":"_paused","offset":0,"slot":"0","type":"t_bool"}],"types":{"t_bool":{"encoding":"inplace","label":"bool","numberOfBytes":"1"}}}}},"@openzeppelin/contracts/utils/ShortStrings.sol":{"ShortStrings":{"abi":[{"inputs":[],"name":"InvalidShortString","type":"error"},{"inputs":[{"internalType":"string","name":"str","type":"string"}],"name":"StringTooLong","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122021cca9bd7373d5c4e561a9833eccae806c6e702c379c2c19cd28a543a6b3d2d164736f6c634300081c0033","opcodes":"PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x21 0xCC 0xA9 0xBD PUSH20 0x73D5C4E561A9833ECCAE806C6E702C379C2C19CD 0x28 0xA5 NUMBER 0xA6 0xB3 0xD2 0xD1 PUSH5 0x736F6C6343 STOP ADDMOD SHR STOP CALLER ","sourceMap":"1294:3128:13:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;1294:3128:13;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122021cca9bd7373d5c4e561a9833eccae806c6e702c379c2c19cd28a543a6b3d2d164736f6c634300081c0033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x21 0xCC 0xA9 0xBD PUSH20 0x73D5C4E561A9833ECCAE806C6E702C379C2C19CD 0x28 0xA5 NUMBER 0xA6 0xB3 0xD2 0xD1 PUSH5 0x736F6C6343 STOP ADDMOD SHR STOP CALLER ","sourceMap":"1294:3128:13:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"InvalidShortString\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"str\",\"type\":\"string\"}],\"name\":\"StringTooLong\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"This library provides functions to convert short memory strings into a `ShortString` type that can be used as an immutable variable. Strings of arbitrary length can be optimized using this library if they are short enough (up to 31 bytes) by packing them with their length (1 byte) in a single EVM word (32 bytes). Additionally, a fallback mechanism can be used for every other case. Usage example: ```solidity contract Named {     using ShortStrings for *;     ShortString private immutable _name;     string private _nameFallback;     constructor(string memory contractName) {         _name = contractName.toShortStringWithFallback(_nameFallback);     }     function name() external view returns (string memory) {         return _name.toStringWithFallback(_nameFallback);     } } ```\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/ShortStrings.sol\":\"ShortStrings\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/ShortStrings.sol\":{\"keccak256\":\"0x390e3113af8cf6c95f432b509fff201f4f2868733d43e0972f9ec08f37ce064e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://40e540b200a6dd6d686822ef475a1ef4778e7afdc47826be5b393a4ab5b4d940\",\"dweb:/ipfs/Qme2xivyB4Les1wX2ZYT3571CmQBNuFQpNK1PdWZ8JZveL\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0xb9355bac6de0c0dd42a7f3c4ad3e6e7bdff95109e1bb6ba5be0dce666b314921\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b8449ecfc29ae42905bcfd8fa232bd73eccb14365f1894a3cc1abcce90639379\",\"dweb:/ipfs/QmWwdkEJXZjk57T7T5JRogJzEhcT7JpnmxEVfHAwFSMuZ1\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"@openzeppelin/contracts/utils/StorageSlot.sol":{"StorageSlot":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122018fa8564b260fbc0ec5424a9a69020f21ae4b3e7c04404b18d8ae3839f87091f64736f6c634300081c0033","opcodes":"PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 XOR STATICCALL DUP6 PUSH5 0xB260FBC0EC SLOAD 0x24 0xA9 0xA6 SWAP1 KECCAK256 CALLCODE BYTE 0xE4 0xB3 0xE7 0xC0 PREVRANDAO DIV 0xB1 DUP14 DUP11 0xE3 DUP4 SWAP16 DUP8 MULMOD 0x1F PUSH5 0x736F6C6343 STOP ADDMOD SHR STOP CALLER ","sourceMap":"1440:2883:14:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;1440:2883:14;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122018fa8564b260fbc0ec5424a9a69020f21ae4b3e7c04404b18d8ae3839f87091f64736f6c634300081c0033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 XOR STATICCALL DUP6 PUSH5 0xB260FBC0EC SLOAD 0x24 0xA9 0xA6 SWAP1 KECCAK256 CALLCODE BYTE 0xE4 0xB3 0xE7 0xC0 PREVRANDAO DIV 0xB1 DUP14 DUP11 0xE3 DUP4 SWAP16 DUP8 MULMOD 0x1F PUSH5 0x736F6C6343 STOP ADDMOD SHR STOP CALLER ","sourceMap":"1440:2883:14:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Library for reading and writing primitive types to specific storage slots. Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts. This library helps with reading and writing to such slots without the need for inline assembly. The functions in this library return Slot structs that contain a `value` member that can be used to read or write. Example usage to set ERC-1967 implementation slot: ```solidity contract ERC1967 {     // Define the slot. Alternatively, use the SlotDerivation library to derive the slot.     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;     function _getImplementation() internal view returns (address) {         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;     }     function _setImplementation(address newImplementation) internal {         require(newImplementation.code.length > 0);         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;     } } ``` TIP: Consider using this library along with {SlotDerivation}.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/StorageSlot.sol\":\"StorageSlot\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0xb9355bac6de0c0dd42a7f3c4ad3e6e7bdff95109e1bb6ba5be0dce666b314921\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b8449ecfc29ae42905bcfd8fa232bd73eccb14365f1894a3cc1abcce90639379\",\"dweb:/ipfs/QmWwdkEJXZjk57T7T5JRogJzEhcT7JpnmxEVfHAwFSMuZ1\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"@openzeppelin/contracts/utils/Strings.sol":{"Strings":{"abi":[{"inputs":[{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"uint256","name":"length","type":"uint256"}],"name":"StringsInsufficientHexLength","type":"error"},{"inputs":[],"name":"StringsInvalidAddressFormat","type":"error"},{"inputs":[],"name":"StringsInvalidChar","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212207ce9660e3174ebcc34b0d50bfb7a1f24954855b0d76ae6c288f0af486ea2d41864736f6c634300081c0033","opcodes":"PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH29 0xE9660E3174EBCC34B0D50BFB7A1F24954855B0D76AE6C288F0AF486EA2 0xD4 XOR PUSH5 0x736F6C6343 STOP ADDMOD SHR STOP CALLER ","sourceMap":"309:19457:15:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;309:19457:15;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212207ce9660e3174ebcc34b0d50bfb7a1f24954855b0d76ae6c288f0af486ea2d41864736f6c634300081c0033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH29 0xE9660E3174EBCC34B0D50BFB7A1F24954855B0D76AE6C288F0AF486EA2 0xD4 XOR PUSH5 0x736F6C6343 STOP ADDMOD SHR STOP CALLER ","sourceMap":"309:19457:15:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"length\",\"type\":\"uint256\"}],\"name\":\"StringsInsufficientHexLength\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"StringsInvalidAddressFormat\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"StringsInvalidChar\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"String operations.\",\"errors\":{\"StringsInsufficientHexLength(uint256,uint256)\":[{\"details\":\"The `value` string doesn't fit in the specified `length`.\"}],\"StringsInvalidAddressFormat()\":[{\"details\":\"The string being parsed is not a properly formatted address.\"}],\"StringsInvalidChar()\":[{\"details\":\"The string being parsed contains characters that are not in scope of the given base.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Strings.sol\":\"Strings\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0x65fd7c9cac0812d510bbaac59b007da1df6f3820f939fca04fd2b7ed07e341c6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f30f7cf8b553278b1bbad1f6aaf4b227b98b1532b3c16dbca92d815d627779df\",\"dweb:/ipfs/QmTkA1v7mrd2ymdTcPYFuNjguKhQx99npcPYKAdMfgfKvB\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x831320073a13168dd04b3b7dc0d7c3c4fd1f8d699c3b3709900d1dd7e52ae931\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d37bb18e9824f73bd0cbf259d2326028031e60ed89bf4eba095c73d605f243ed\",\"dweb:/ipfs/QmWxNLK1eZBwA1GdxzwqGkarHhbciAvM8bg6qcRafeS47J\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xe09e820269ce218384211e4bf344056f0aab77a27b953012a3fb647d7631b7c2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0a8e7a7218203b059b4b4a423a93d6066eb9cec0a8affde80bb4a6c44d6a14a0\",\"dweb:/ipfs/QmSbmEzwGBFD3TntztEE5ZFLBqP1SZYiQhA1dLoDgzrcz4\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0xf1e73884b1e40057009853b1ee55ec66413cfa5eaa9074e5dd85bd070ea8b91c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1d29fd43e41bd73ac0fb65ac77c309c88651a42f8e49989cf1558f64f731697b\",\"dweb:/ipfs/Qmd61ZCYWHj9PJ3uSXaJekif8tkKgmfU6PLunszwhY2QX3\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0x7c35afe4f4b7e64ea6efa5216f51790d8ce80cd764a00790203a59ebf20202ec\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0b264b01df570c48603e16066aea73d3200c78523f9d94dd587a61eafa33705c\",\"dweb:/ipfs/QmayVg47dBKddrgrgsbr4Wu8hQBWZk5oMpiUtXKz1uEo1v\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"@openzeppelin/contracts/utils/cryptography/ECDSA.sol":{"ECDSA":{"abi":[{"inputs":[],"name":"ECDSAInvalidSignature","type":"error"},{"inputs":[{"internalType":"uint256","name":"length","type":"uint256"}],"name":"ECDSAInvalidSignatureLength","type":"error"},{"inputs":[{"internalType":"bytes32","name":"s","type":"bytes32"}],"name":"ECDSAInvalidSignatureS","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220a3e95c07be1904986e3a697926f54cf3c589cce13dcafc15c0ef59d92e97e59664736f6c634300081c0033","opcodes":"PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 LOG3 0xE9 TLOAD SMOD 0xBE NOT DIV SWAP9 PUSH15 0x3A697926F54CF3C589CCE13DCAFC15 0xC0 0xEF MSIZE 0xD9 0x2E SWAP8 0xE5 SWAP7 PUSH5 0x736F6C6343 STOP ADDMOD SHR STOP CALLER ","sourceMap":"355:7638:16:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;355:7638:16;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220a3e95c07be1904986e3a697926f54cf3c589cce13dcafc15c0ef59d92e97e59664736f6c634300081c0033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 LOG3 0xE9 TLOAD SMOD 0xBE NOT DIV SWAP9 PUSH15 0x3A697926F54CF3C589CCE13DCAFC15 0xC0 0xEF MSIZE 0xD9 0x2E SWAP8 0xE5 SWAP7 PUSH5 0x736F6C6343 STOP ADDMOD SHR STOP CALLER ","sourceMap":"355:7638:16:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"ECDSAInvalidSignature\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"length\",\"type\":\"uint256\"}],\"name\":\"ECDSAInvalidSignatureLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"ECDSAInvalidSignatureS\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Elliptic Curve Digital Signature Algorithm (ECDSA) operations. These functions can be used to verify that a message was signed by the holder of the private keys of a given address.\",\"errors\":{\"ECDSAInvalidSignature()\":[{\"details\":\"The signature derives the `address(0)`.\"}],\"ECDSAInvalidSignatureLength(uint256)\":[{\"details\":\"The signature has an invalid length.\"}],\"ECDSAInvalidSignatureS(bytes32)\":[{\"details\":\"The signature has an S value that is in the upper half order.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":\"ECDSA\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":{\"keccak256\":\"0xbe22c37080f9052e0e18062a527a19f9354703ee48888c71baf0abd747a34a8b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://eb85649fce273c8c19eeba7db292f92b6653263ae39f12e427a066b998c9cec4\",\"dweb:/ipfs/QmRaTEqA15siRJoiPCuvtzK29dgXxQu94n4JBabHUSFXXQ\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"@openzeppelin/contracts/utils/cryptography/EIP712.sol":{"EIP712":{"abi":[{"inputs":[],"name":"InvalidShortString","type":"error"},{"inputs":[{"internalType":"string","name":"str","type":"string"}],"name":"StringTooLong","type":"error"},{"anonymous":false,"inputs":[],"name":"EIP712DomainChanged","type":"event"},{"inputs":[],"name":"eip712Domain","outputs":[{"internalType":"bytes1","name":"fields","type":"bytes1"},{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"version","type":"string"},{"internalType":"uint256","name":"chainId","type":"uint256"},{"internalType":"address","name":"verifyingContract","type":"address"},{"internalType":"bytes32","name":"salt","type":"bytes32"},{"internalType":"uint256[]","name":"extensions","type":"uint256[]"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"eip712Domain()":"84b0196e"}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"InvalidShortString\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"str\",\"type\":\"string\"}],\"name\":\"StringTooLong\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"EIP712DomainChanged\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"eip712Domain\",\"outputs\":[{\"internalType\":\"bytes1\",\"name\":\"fields\",\"type\":\"bytes1\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"version\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"chainId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"verifyingContract\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"},{\"internalType\":\"uint256[]\",\"name\":\"extensions\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"custom:oz-upgrades-unsafe-allow\":\"state-variable-immutable\",\"details\":\"https://eips.ethereum.org/EIPS/eip-712[EIP-712] is a standard for hashing and signing of typed structured data. The encoding scheme specified in the EIP requires a domain separator and a hash of the typed structured data, whose encoding is very generic and therefore its implementation in Solidity is not feasible, thus this contract does not implement the encoding itself. Protocols need to implement the type-specific encoding they need in order to produce the hash of their typed data using a combination of `abi.encode` and `keccak256`. This contract implements the EIP-712 domain separator ({_domainSeparatorV4}) that is used as part of the encoding scheme, and the final step of the encoding to obtain the message digest that is then signed via ECDSA ({_hashTypedDataV4}). The implementation of the domain separator was designed to be as efficient as possible while still properly updating the chain id to protect against replay attacks on an eventual fork of the chain. NOTE: This contract implements the version of the encoding known as \\\"v4\\\", as implemented by the JSON RPC method https://docs.metamask.io/guide/signing-data.html[`eth_signTypedDataV4` in MetaMask]. NOTE: In the upgradeable version of this contract, the cached values will correspond to the address, and the domain separator of the implementation contract. This will cause the {_domainSeparatorV4} function to always rebuild the separator from the immutable values, which is cheaper than accessing a cached version in cold storage.\",\"events\":{\"EIP712DomainChanged()\":{\"details\":\"MAY be emitted to signal that the domain could have changed.\"}},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the domain separator and parameter caches. The meaning of `name` and `version` is specified in https://eips.ethereum.org/EIPS/eip-712#definition-of-domainseparator[EIP-712]: - `name`: the user readable name of the signing domain, i.e. the name of the DApp or the protocol. - `version`: the current major version of the signing domain. NOTE: These parameters cannot be changed except through a xref:learn::upgrading-smart-contracts.adoc[smart contract upgrade].\"},\"eip712Domain()\":{\"details\":\"returns the fields and values that describe the domain separator used by this contract for EIP-712 signature.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":\"EIP712\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC5267.sol\":{\"keccak256\":\"0x28b2a1f629338ad9bfe7bdab27a478f3d04001bbde67aefb48f473e01589a05a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b13fe921b3a4db8194370374451c3243045d4852e6e27c00fe161acc3eff59ee\",\"dweb:/ipfs/QmfNmkXJsDj9x2et6BTibrbonVGhcP8bRDkRTiXuqhevvR\"]},\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0x65fd7c9cac0812d510bbaac59b007da1df6f3820f939fca04fd2b7ed07e341c6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f30f7cf8b553278b1bbad1f6aaf4b227b98b1532b3c16dbca92d815d627779df\",\"dweb:/ipfs/QmTkA1v7mrd2ymdTcPYFuNjguKhQx99npcPYKAdMfgfKvB\"]},\"@openzeppelin/contracts/utils/ShortStrings.sol\":{\"keccak256\":\"0x390e3113af8cf6c95f432b509fff201f4f2868733d43e0972f9ec08f37ce064e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://40e540b200a6dd6d686822ef475a1ef4778e7afdc47826be5b393a4ab5b4d940\",\"dweb:/ipfs/Qme2xivyB4Les1wX2ZYT3571CmQBNuFQpNK1PdWZ8JZveL\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0xb9355bac6de0c0dd42a7f3c4ad3e6e7bdff95109e1bb6ba5be0dce666b314921\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b8449ecfc29ae42905bcfd8fa232bd73eccb14365f1894a3cc1abcce90639379\",\"dweb:/ipfs/QmWwdkEJXZjk57T7T5JRogJzEhcT7JpnmxEVfHAwFSMuZ1\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x831320073a13168dd04b3b7dc0d7c3c4fd1f8d699c3b3709900d1dd7e52ae931\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d37bb18e9824f73bd0cbf259d2326028031e60ed89bf4eba095c73d605f243ed\",\"dweb:/ipfs/QmWxNLK1eZBwA1GdxzwqGkarHhbciAvM8bg6qcRafeS47J\"]},\"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":{\"keccak256\":\"0xf778df68e781faf042ba75ec07581c0d85242d1ed2eb635f35f1a6223217afc3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://081591b28f424eda7d7ac702ef6dc39524aa3515079ccba4175cd7d181674cde\",\"dweb:/ipfs/QmVJQigws6GRg4UNvMmj2NUh1tBRSHTpQV6vjiaEsmL7eL\"]},\"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol\":{\"keccak256\":\"0xd7999d7b3c3a121215a15e205b381e06cfff55c47f67220d1605cd96cd0848d8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e259964860d8625d6c33d841c870af390834c037c4459c8b14231f1bd440f682\",\"dweb:/ipfs/QmWyFHT1oipmXVN4NLxrdBL9nayTzFfPrkAQbRozeWdhKQ\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xe09e820269ce218384211e4bf344056f0aab77a27b953012a3fb647d7631b7c2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0a8e7a7218203b059b4b4a423a93d6066eb9cec0a8affde80bb4a6c44d6a14a0\",\"dweb:/ipfs/QmSbmEzwGBFD3TntztEE5ZFLBqP1SZYiQhA1dLoDgzrcz4\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0xf1e73884b1e40057009853b1ee55ec66413cfa5eaa9074e5dd85bd070ea8b91c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1d29fd43e41bd73ac0fb65ac77c309c88651a42f8e49989cf1558f64f731697b\",\"dweb:/ipfs/Qmd61ZCYWHj9PJ3uSXaJekif8tkKgmfU6PLunszwhY2QX3\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0x7c35afe4f4b7e64ea6efa5216f51790d8ce80cd764a00790203a59ebf20202ec\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0b264b01df570c48603e16066aea73d3200c78523f9d94dd587a61eafa33705c\",\"dweb:/ipfs/QmayVg47dBKddrgrgsbr4Wu8hQBWZk5oMpiUtXKz1uEo1v\"]}},\"version\":1}","storageLayout":{"storage":[{"astId":3735,"contract":"@openzeppelin/contracts/utils/cryptography/EIP712.sol:EIP712","label":"_nameFallback","offset":0,"slot":"0","type":"t_string_storage"},{"astId":3737,"contract":"@openzeppelin/contracts/utils/cryptography/EIP712.sol:EIP712","label":"_versionFallback","offset":0,"slot":"1","type":"t_string_storage"}],"types":{"t_string_storage":{"encoding":"bytes","label":"string","numberOfBytes":"32"}}}}},"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol":{"MessageHashUtils":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220c9f8b153a2723e9aedf5b731c720da381f3213cfc665562986c247554040593864736f6c634300081c0033","opcodes":"PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC9 0xF8 0xB1 MSTORE8 LOG2 PUSH19 0x3E9AEDF5B731C720DA381F3213CFC665562986 0xC2 SELFBALANCE SSTORE BLOCKHASH BLOCKHASH MSIZE CODESIZE PUSH5 0x736F6C6343 STOP ADDMOD SHR STOP CALLER ","sourceMap":"535:3813:18:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;535:3813:18;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220c9f8b153a2723e9aedf5b731c720da381f3213cfc665562986c247554040593864736f6c634300081c0033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC9 0xF8 0xB1 MSTORE8 LOG2 PUSH19 0x3E9AEDF5B731C720DA381F3213CFC665562986 0xC2 SELFBALANCE SSTORE BLOCKHASH BLOCKHASH MSIZE CODESIZE PUSH5 0x736F6C6343 STOP ADDMOD SHR STOP CALLER ","sourceMap":"535:3813:18:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Signature message hash utilities for producing digests to be consumed by {ECDSA} recovery or signing. The library provides methods for generating a hash of a message that conforms to the https://eips.ethereum.org/EIPS/eip-191[ERC-191] and https://eips.ethereum.org/EIPS/eip-712[EIP 712] specifications.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol\":\"MessageHashUtils\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0x65fd7c9cac0812d510bbaac59b007da1df6f3820f939fca04fd2b7ed07e341c6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f30f7cf8b553278b1bbad1f6aaf4b227b98b1532b3c16dbca92d815d627779df\",\"dweb:/ipfs/QmTkA1v7mrd2ymdTcPYFuNjguKhQx99npcPYKAdMfgfKvB\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x831320073a13168dd04b3b7dc0d7c3c4fd1f8d699c3b3709900d1dd7e52ae931\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d37bb18e9824f73bd0cbf259d2326028031e60ed89bf4eba095c73d605f243ed\",\"dweb:/ipfs/QmWxNLK1eZBwA1GdxzwqGkarHhbciAvM8bg6qcRafeS47J\"]},\"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol\":{\"keccak256\":\"0xd7999d7b3c3a121215a15e205b381e06cfff55c47f67220d1605cd96cd0848d8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e259964860d8625d6c33d841c870af390834c037c4459c8b14231f1bd440f682\",\"dweb:/ipfs/QmWyFHT1oipmXVN4NLxrdBL9nayTzFfPrkAQbRozeWdhKQ\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xe09e820269ce218384211e4bf344056f0aab77a27b953012a3fb647d7631b7c2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0a8e7a7218203b059b4b4a423a93d6066eb9cec0a8affde80bb4a6c44d6a14a0\",\"dweb:/ipfs/QmSbmEzwGBFD3TntztEE5ZFLBqP1SZYiQhA1dLoDgzrcz4\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0xf1e73884b1e40057009853b1ee55ec66413cfa5eaa9074e5dd85bd070ea8b91c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1d29fd43e41bd73ac0fb65ac77c309c88651a42f8e49989cf1558f64f731697b\",\"dweb:/ipfs/Qmd61ZCYWHj9PJ3uSXaJekif8tkKgmfU6PLunszwhY2QX3\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0x7c35afe4f4b7e64ea6efa5216f51790d8ce80cd764a00790203a59ebf20202ec\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0b264b01df570c48603e16066aea73d3200c78523f9d94dd587a61eafa33705c\",\"dweb:/ipfs/QmayVg47dBKddrgrgsbr4Wu8hQBWZk5oMpiUtXKz1uEo1v\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"@openzeppelin/contracts/utils/introspection/ERC165.sol":{"ERC165":{"abi":[{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"supportsInterface(bytes4)":"01ffc9a7"}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC165} interface. Contracts that want to implement ERC-165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ```\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":\"ERC165\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xb28144ffc2bca9d3e8e3e20b630d1d97b04aa7c9e00683d41211b241a65f5644\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://da447bb66b870656cd1f599cb8a173579d66ddf762c9d172391e409debe33d1d\",\"dweb:/ipfs/QmTyEdMigTpMBw5NTMoVfcpKQQ1pxdXWAbey3XBcUdN95q\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0xdbf01f069eb0b0a7a6ace73b250fdeb7e338d719bb40b5dd1fe7069004a36607\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1fc4a1dfe79b2adc6e22af84838c217946853d28a4291fcd8bbcc6fb226a0470\",\"dweb:/ipfs/QmaJbxCcdE76P1a8rjxkBqTXAfF11XebfwURamUB92G4WN\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"@openzeppelin/contracts/utils/introspection/IERC165.sol":{"IERC165":{"abi":[{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"supportsInterface(bytes4)":"01ffc9a7"}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[ERC]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":\"IERC165\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0xdbf01f069eb0b0a7a6ace73b250fdeb7e338d719bb40b5dd1fe7069004a36607\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1fc4a1dfe79b2adc6e22af84838c217946853d28a4291fcd8bbcc6fb226a0470\",\"dweb:/ipfs/QmaJbxCcdE76P1a8rjxkBqTXAfF11XebfwURamUB92G4WN\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"@openzeppelin/contracts/utils/math/Math.sol":{"Math":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212205253ac451b30fd8e8bc4ea5a9f33b7b9862bb952882642ce25e83078f857eb8a64736f6c634300081c0033","opcodes":"PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 MSTORE MSTORE8 0xAC GASLIMIT SHL ADDRESS REVERT DUP15 DUP12 0xC4 0xEA GAS SWAP16 CALLER 0xB7 0xB9 DUP7 0x2B 0xB9 MSTORE DUP9 0x26 TIMESTAMP 0xCE 0x25 0xE8 ADDRESS PUSH25 0xF857EB8A64736F6C634300081C003300000000000000000000 ","sourceMap":"292:32600:21:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;292:32600:21;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212205253ac451b30fd8e8bc4ea5a9f33b7b9862bb952882642ce25e83078f857eb8a64736f6c634300081c0033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 MSTORE MSTORE8 0xAC GASLIMIT SHL ADDRESS REVERT DUP15 DUP12 0xC4 0xEA GAS SWAP16 CALLER 0xB7 0xB9 DUP7 0x2B 0xB9 MSTORE DUP9 0x26 TIMESTAMP 0xCE 0x25 0xE8 ADDRESS PUSH25 0xF857EB8A64736F6C634300081C003300000000000000000000 ","sourceMap":"292:32600:21:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Standard math utilities missing in the Solidity language.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/Math.sol\":\"Math\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0x65fd7c9cac0812d510bbaac59b007da1df6f3820f939fca04fd2b7ed07e341c6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f30f7cf8b553278b1bbad1f6aaf4b227b98b1532b3c16dbca92d815d627779df\",\"dweb:/ipfs/QmTkA1v7mrd2ymdTcPYFuNjguKhQx99npcPYKAdMfgfKvB\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xe09e820269ce218384211e4bf344056f0aab77a27b953012a3fb647d7631b7c2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0a8e7a7218203b059b4b4a423a93d6066eb9cec0a8affde80bb4a6c44d6a14a0\",\"dweb:/ipfs/QmSbmEzwGBFD3TntztEE5ZFLBqP1SZYiQhA1dLoDgzrcz4\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0xf1e73884b1e40057009853b1ee55ec66413cfa5eaa9074e5dd85bd070ea8b91c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1d29fd43e41bd73ac0fb65ac77c309c88651a42f8e49989cf1558f64f731697b\",\"dweb:/ipfs/Qmd61ZCYWHj9PJ3uSXaJekif8tkKgmfU6PLunszwhY2QX3\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"@openzeppelin/contracts/utils/math/SafeCast.sol":{"SafeCast":{"abi":[{"inputs":[{"internalType":"uint8","name":"bits","type":"uint8"},{"internalType":"int256","name":"value","type":"int256"}],"name":"SafeCastOverflowedIntDowncast","type":"error"},{"inputs":[{"internalType":"int256","name":"value","type":"int256"}],"name":"SafeCastOverflowedIntToUint","type":"error"},{"inputs":[{"internalType":"uint8","name":"bits","type":"uint8"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"SafeCastOverflowedUintDowncast","type":"error"},{"inputs":[{"internalType":"uint256","name":"value","type":"uint256"}],"name":"SafeCastOverflowedUintToInt","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220163b60994003ec12787eeca41504899bf8a394f3d9a1d106eeeca7e73718e1e064736f6c634300081c0033","opcodes":"PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 AND EXTCODESIZE PUSH1 0x99 BLOCKHASH SUB 0xEC SLT PUSH25 0x7EECA41504899BF8A394F3D9A1D106EEECA7E73718E1E06473 PUSH16 0x6C634300081C00330000000000000000 ","sourceMap":"787:35316:22:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;787:35316:22;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220163b60994003ec12787eeca41504899bf8a394f3d9a1d106eeeca7e73718e1e064736f6c634300081c0033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 AND EXTCODESIZE PUSH1 0x99 BLOCKHASH SUB 0xEC SLT PUSH25 0x7EECA41504899BF8A394F3D9A1D106EEECA7E73718E1E06473 PUSH16 0x6C634300081C00330000000000000000 ","sourceMap":"787:35316:22:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"bits\",\"type\":\"uint8\"},{\"internalType\":\"int256\",\"name\":\"value\",\"type\":\"int256\"}],\"name\":\"SafeCastOverflowedIntDowncast\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"value\",\"type\":\"int256\"}],\"name\":\"SafeCastOverflowedIntToUint\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"bits\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"SafeCastOverflowedUintDowncast\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"SafeCastOverflowedUintToInt\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Wrappers over Solidity's uintXX/intXX/bool casting operators with added overflow checks. Downcasting from uint256/int256 in Solidity does not revert on overflow. This can easily result in undesired exploitation or bugs, since developers usually assume that overflows raise errors. `SafeCast` restores this intuition by reverting the transaction when such an operation overflows. Using this library instead of the unchecked operations eliminates an entire class of bugs, so it's recommended to use it always.\",\"errors\":{\"SafeCastOverflowedIntDowncast(uint8,int256)\":[{\"details\":\"Value doesn't fit in an int of `bits` size.\"}],\"SafeCastOverflowedIntToUint(int256)\":[{\"details\":\"An int value doesn't fit in an uint of `bits` size.\"}],\"SafeCastOverflowedUintDowncast(uint8,uint256)\":[{\"details\":\"Value doesn't fit in an uint of `bits` size.\"}],\"SafeCastOverflowedUintToInt(uint256)\":[{\"details\":\"An uint value doesn't fit in an int of `bits` size.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/SafeCast.sol\":\"SafeCast\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0xf1e73884b1e40057009853b1ee55ec66413cfa5eaa9074e5dd85bd070ea8b91c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1d29fd43e41bd73ac0fb65ac77c309c88651a42f8e49989cf1558f64f731697b\",\"dweb:/ipfs/Qmd61ZCYWHj9PJ3uSXaJekif8tkKgmfU6PLunszwhY2QX3\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"@openzeppelin/contracts/utils/math/SignedMath.sol":{"SignedMath":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220ad69c87aa2827af186aee2687bb408c6ad025644acd9deca142ba2e694fc98c064736f6c634300081c0033","opcodes":"PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xAD PUSH10 0xC87AA2827AF186AEE268 PUSH28 0xB408C6AD025644ACD9DECA142BA2E694FC98C064736F6C634300081C STOP CALLER ","sourceMap":"268:2411:23:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;268:2411:23;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220ad69c87aa2827af186aee2687bb408c6ad025644acd9deca142ba2e694fc98c064736f6c634300081c0033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xAD PUSH10 0xC87AA2827AF186AEE268 PUSH28 0xB408C6AD025644ACD9DECA142BA2E694FC98C064736F6C634300081C STOP CALLER ","sourceMap":"268:2411:23:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Standard signed math utilities missing in the Solidity language.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/SignedMath.sol\":\"SignedMath\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0xf1e73884b1e40057009853b1ee55ec66413cfa5eaa9074e5dd85bd070ea8b91c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1d29fd43e41bd73ac0fb65ac77c309c88651a42f8e49989cf1558f64f731697b\",\"dweb:/ipfs/Qmd61ZCYWHj9PJ3uSXaJekif8tkKgmfU6PLunszwhY2QX3\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0x7c35afe4f4b7e64ea6efa5216f51790d8ce80cd764a00790203a59ebf20202ec\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0b264b01df570c48603e16066aea73d3200c78523f9d94dd587a61eafa33705c\",\"dweb:/ipfs/QmayVg47dBKddrgrgsbr4Wu8hQBWZk5oMpiUtXKz1uEo1v\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"contracts/PADToken.sol":{"PADToken":{"abi":[{"inputs":[],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[],"name":"AccessControlBadConfirmation","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"bytes32","name":"neededRole","type":"bytes32"}],"name":"AccessControlUnauthorizedAccount","type":"error"},{"inputs":[],"name":"ECDSAInvalidSignature","type":"error"},{"inputs":[{"internalType":"uint256","name":"length","type":"uint256"}],"name":"ECDSAInvalidSignatureLength","type":"error"},{"inputs":[{"internalType":"bytes32","name":"s","type":"bytes32"}],"name":"ECDSAInvalidSignatureS","type":"error"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"allowance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientAllowance","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientBalance","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC20InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC20InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC20InvalidSender","type":"error"},{"inputs":[{"internalType":"address","name":"spender","type":"address"}],"name":"ERC20InvalidSpender","type":"error"},{"inputs":[{"internalType":"uint256","name":"deadline","type":"uint256"}],"name":"ERC2612ExpiredSignature","type":"error"},{"inputs":[{"internalType":"address","name":"signer","type":"address"},{"internalType":"address","name":"owner","type":"address"}],"name":"ERC2612InvalidSigner","type":"error"},{"inputs":[],"name":"EnforcedPause","type":"error"},{"inputs":[],"name":"ExpectedPause","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"currentNonce","type":"uint256"}],"name":"InvalidAccountNonce","type":"error"},{"inputs":[],"name":"InvalidShortString","type":"error"},{"inputs":[{"internalType":"string","name":"str","type":"string"}],"name":"StringTooLong","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"newPeriod","type":"uint256"}],"name":"CooldownPeriodSet","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":false,"internalType":"bool","name":"status","type":"bool"}],"name":"CooldownSet","type":"event"},{"anonymous":false,"inputs":[],"name":"EIP712DomainChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"newGnosisSafe","type":"address"}],"name":"GnosisSafeSet","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"account","type":"address"}],"name":"Paused","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"previousAdminRole","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"newAdminRole","type":"bytes32"}],"name":"RoleAdminChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"sender","type":"address"}],"name":"RoleGranted","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"sender","type":"address"}],"name":"RoleRevoked","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"account","type":"address"}],"name":"Unpaused","type":"event"},{"inputs":[],"name":"ADMIN_ROLE","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"DEFAULT_ADMIN_ROLE","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"DOMAIN_SEPARATOR","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"PAUSER_ROLE","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address[]","name":"recipients","type":"address[]"},{"internalType":"uint256[]","name":"amounts","type":"uint256[]"}],"name":"batchTransfer","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"cooldownPeriod","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"eip712Domain","outputs":[{"internalType":"bytes1","name":"fields","type":"bytes1"},{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"version","type":"string"},{"internalType":"uint256","name":"chainId","type":"uint256"},{"internalType":"address","name":"verifyingContract","type":"address"},{"internalType":"bytes32","name":"salt","type":"bytes32"},{"internalType":"uint256[]","name":"extensions","type":"uint256[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"}],"name":"getRoleAdmin","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"gnosisSafe","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"grantRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"hasCooldown","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"hasRole","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"lastTransferTimestamp","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"nonces","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"pause","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"paused","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"uint256","name":"deadline","type":"uint256"},{"internalType":"uint8","name":"v","type":"uint8"},{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"s","type":"bytes32"}],"name":"permit","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"callerConfirmation","type":"address"}],"name":"renounceRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"revokeRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"bool","name":"status","type":"bool"}],"name":"setCooldown","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_cooldownPeriod","type":"uint256"}],"name":"setCooldownPeriod","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_gnosisSafe","type":"address"}],"name":"setGnosisSafe","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"unpause","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{"@_1182":{"entryPoint":null,"id":1182,"parameterSlots":1,"returnSlots":0},"@_3795":{"entryPoint":null,"id":3795,"parameterSlots":2,"returnSlots":0},"@_592":{"entryPoint":null,"id":592,"parameterSlots":2,"returnSlots":0},"@_7672":{"entryPoint":null,"id":7672,"parameterSlots":0,"returnSlots":0},"@_buildDomainSeparator_3842":{"entryPoint":null,"id":3842,"parameterSlots":0,"returnSlots":1},"@_grantRole_256":{"entryPoint":546,"id":256,"parameterSlots":2,"returnSlots":1},"@_mint_895":{"entryPoint":720,"id":895,"parameterSlots":2,"returnSlots":0},"@_msgSender_1361":{"entryPoint":null,"id":1361,"parameterSlots":0,"returnSlots":1},"@_requireNotPaused_1561":{"entryPoint":1047,"id":1561,"parameterSlots":0,"returnSlots":0},"@_update_7916":{"entryPoint":845,"id":7916,"parameterSlots":3,"returnSlots":0},"@_update_862":{"entryPoint":1085,"id":862,"parameterSlots":3,"returnSlots":0},"@decimals_619":{"entryPoint":null,"id":619,"parameterSlots":0,"returnSlots":1},"@getStringSlot_1925":{"entryPoint":null,"id":1925,"parameterSlots":1,"returnSlots":1},"@hasRole_80":{"entryPoint":null,"id":80,"parameterSlots":2,"returnSlots":1},"@paused_1549":{"entryPoint":null,"id":1549,"parameterSlots":0,"returnSlots":1},"@toShortStringWithFallback_1765":{"entryPoint":495,"id":1765,"parameterSlots":2,"returnSlots":1},"@toShortString_1667":{"entryPoint":783,"id":1667,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":4,"returnSlots":1},"abi_encode_tuple_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__to_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":6,"returnSlots":1},"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":2029,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_stringliteral_48efca4c133d4af809cbdea820ea2f4422813132b6936873e13dbb833f6fc66c__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"array_dataslot_string_storage":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"checked_add_t_uint256":{"entryPoint":2143,"id":null,"parameterSlots":2,"returnSlots":1},"checked_exp_helper":{"entryPoint":1753,"id":null,"parameterSlots":3,"returnSlots":2},"checked_exp_t_uint256_t_uint8":{"entryPoint":1984,"id":null,"parameterSlots":2,"returnSlots":1},"checked_exp_unsigned":{"entryPoint":1820,"id":null,"parameterSlots":2,"returnSlots":1},"checked_mul_t_uint256":{"entryPoint":2006,"id":null,"parameterSlots":2,"returnSlots":1},"clean_up_bytearray_end_slots_string_storage":{"entryPoint":1463,"id":null,"parameterSlots":3,"returnSlots":0},"convert_bytes_to_fixedbytes_from_t_bytes_memory_ptr_to_t_bytes32":{"entryPoint":2107,"id":null,"parameterSlots":1,"returnSlots":1},"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage":{"entryPoint":1541,"id":null,"parameterSlots":2,"returnSlots":0},"extract_byte_array_length":{"entryPoint":1405,"id":null,"parameterSlots":1,"returnSlots":1},"extract_used_part_and_set_length_of_short_byte_array":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"panic_error_0x11":{"entryPoint":1731,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x41":{"entryPoint":1383,"id":null,"parameterSlots":0,"returnSlots":0}},"generatedSources":[{"ast":{"nativeSrc":"0:6943:25","nodeType":"YulBlock","src":"0:6943:25","statements":[{"nativeSrc":"6:3:25","nodeType":"YulBlock","src":"6:3:25","statements":[]},{"body":{"nativeSrc":"46:95:25","nodeType":"YulBlock","src":"46:95:25","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"63:1:25","nodeType":"YulLiteral","src":"63:1:25","type":"","value":"0"},{"arguments":[{"kind":"number","nativeSrc":"70:3:25","nodeType":"YulLiteral","src":"70:3:25","type":"","value":"224"},{"kind":"number","nativeSrc":"75:10:25","nodeType":"YulLiteral","src":"75:10:25","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nativeSrc":"66:3:25","nodeType":"YulIdentifier","src":"66:3:25"},"nativeSrc":"66:20:25","nodeType":"YulFunctionCall","src":"66:20:25"}],"functionName":{"name":"mstore","nativeSrc":"56:6:25","nodeType":"YulIdentifier","src":"56:6:25"},"nativeSrc":"56:31:25","nodeType":"YulFunctionCall","src":"56:31:25"},"nativeSrc":"56:31:25","nodeType":"YulExpressionStatement","src":"56:31:25"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"103:1:25","nodeType":"YulLiteral","src":"103:1:25","type":"","value":"4"},{"kind":"number","nativeSrc":"106:4:25","nodeType":"YulLiteral","src":"106:4:25","type":"","value":"0x41"}],"functionName":{"name":"mstore","nativeSrc":"96:6:25","nodeType":"YulIdentifier","src":"96:6:25"},"nativeSrc":"96:15:25","nodeType":"YulFunctionCall","src":"96:15:25"},"nativeSrc":"96:15:25","nodeType":"YulExpressionStatement","src":"96:15:25"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"127:1:25","nodeType":"YulLiteral","src":"127:1:25","type":"","value":"0"},{"kind":"number","nativeSrc":"130:4:25","nodeType":"YulLiteral","src":"130:4:25","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"120:6:25","nodeType":"YulIdentifier","src":"120:6:25"},"nativeSrc":"120:15:25","nodeType":"YulFunctionCall","src":"120:15:25"},"nativeSrc":"120:15:25","nodeType":"YulExpressionStatement","src":"120:15:25"}]},"name":"panic_error_0x41","nativeSrc":"14:127:25","nodeType":"YulFunctionDefinition","src":"14:127:25"},{"body":{"nativeSrc":"201:325:25","nodeType":"YulBlock","src":"201:325:25","statements":[{"nativeSrc":"211:22:25","nodeType":"YulAssignment","src":"211:22:25","value":{"arguments":[{"kind":"number","nativeSrc":"225:1:25","nodeType":"YulLiteral","src":"225:1:25","type":"","value":"1"},{"name":"data","nativeSrc":"228:4:25","nodeType":"YulIdentifier","src":"228:4:25"}],"functionName":{"name":"shr","nativeSrc":"221:3:25","nodeType":"YulIdentifier","src":"221:3:25"},"nativeSrc":"221:12:25","nodeType":"YulFunctionCall","src":"221:12:25"},"variableNames":[{"name":"length","nativeSrc":"211:6:25","nodeType":"YulIdentifier","src":"211:6:25"}]},{"nativeSrc":"242:38:25","nodeType":"YulVariableDeclaration","src":"242:38:25","value":{"arguments":[{"name":"data","nativeSrc":"272:4:25","nodeType":"YulIdentifier","src":"272:4:25"},{"kind":"number","nativeSrc":"278:1:25","nodeType":"YulLiteral","src":"278:1:25","type":"","value":"1"}],"functionName":{"name":"and","nativeSrc":"268:3:25","nodeType":"YulIdentifier","src":"268:3:25"},"nativeSrc":"268:12:25","nodeType":"YulFunctionCall","src":"268:12:25"},"variables":[{"name":"outOfPlaceEncoding","nativeSrc":"246:18:25","nodeType":"YulTypedName","src":"246:18:25","type":""}]},{"body":{"nativeSrc":"319:31:25","nodeType":"YulBlock","src":"319:31:25","statements":[{"nativeSrc":"321:27:25","nodeType":"YulAssignment","src":"321:27:25","value":{"arguments":[{"name":"length","nativeSrc":"335:6:25","nodeType":"YulIdentifier","src":"335:6:25"},{"kind":"number","nativeSrc":"343:4:25","nodeType":"YulLiteral","src":"343:4:25","type":"","value":"0x7f"}],"functionName":{"name":"and","nativeSrc":"331:3:25","nodeType":"YulIdentifier","src":"331:3:25"},"nativeSrc":"331:17:25","nodeType":"YulFunctionCall","src":"331:17:25"},"variableNames":[{"name":"length","nativeSrc":"321:6:25","nodeType":"YulIdentifier","src":"321:6:25"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nativeSrc":"299:18:25","nodeType":"YulIdentifier","src":"299:18:25"}],"functionName":{"name":"iszero","nativeSrc":"292:6:25","nodeType":"YulIdentifier","src":"292:6:25"},"nativeSrc":"292:26:25","nodeType":"YulFunctionCall","src":"292:26:25"},"nativeSrc":"289:61:25","nodeType":"YulIf","src":"289:61:25"},{"body":{"nativeSrc":"409:111:25","nodeType":"YulBlock","src":"409:111:25","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"430:1:25","nodeType":"YulLiteral","src":"430:1:25","type":"","value":"0"},{"arguments":[{"kind":"number","nativeSrc":"437:3:25","nodeType":"YulLiteral","src":"437:3:25","type":"","value":"224"},{"kind":"number","nativeSrc":"442:10:25","nodeType":"YulLiteral","src":"442:10:25","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nativeSrc":"433:3:25","nodeType":"YulIdentifier","src":"433:3:25"},"nativeSrc":"433:20:25","nodeType":"YulFunctionCall","src":"433:20:25"}],"functionName":{"name":"mstore","nativeSrc":"423:6:25","nodeType":"YulIdentifier","src":"423:6:25"},"nativeSrc":"423:31:25","nodeType":"YulFunctionCall","src":"423:31:25"},"nativeSrc":"423:31:25","nodeType":"YulExpressionStatement","src":"423:31:25"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"474:1:25","nodeType":"YulLiteral","src":"474:1:25","type":"","value":"4"},{"kind":"number","nativeSrc":"477:4:25","nodeType":"YulLiteral","src":"477:4:25","type":"","value":"0x22"}],"functionName":{"name":"mstore","nativeSrc":"467:6:25","nodeType":"YulIdentifier","src":"467:6:25"},"nativeSrc":"467:15:25","nodeType":"YulFunctionCall","src":"467:15:25"},"nativeSrc":"467:15:25","nodeType":"YulExpressionStatement","src":"467:15:25"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"502:1:25","nodeType":"YulLiteral","src":"502:1:25","type":"","value":"0"},{"kind":"number","nativeSrc":"505:4:25","nodeType":"YulLiteral","src":"505:4:25","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"495:6:25","nodeType":"YulIdentifier","src":"495:6:25"},"nativeSrc":"495:15:25","nodeType":"YulFunctionCall","src":"495:15:25"},"nativeSrc":"495:15:25","nodeType":"YulExpressionStatement","src":"495:15:25"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nativeSrc":"365:18:25","nodeType":"YulIdentifier","src":"365:18:25"},{"arguments":[{"name":"length","nativeSrc":"388:6:25","nodeType":"YulIdentifier","src":"388:6:25"},{"kind":"number","nativeSrc":"396:2:25","nodeType":"YulLiteral","src":"396:2:25","type":"","value":"32"}],"functionName":{"name":"lt","nativeSrc":"385:2:25","nodeType":"YulIdentifier","src":"385:2:25"},"nativeSrc":"385:14:25","nodeType":"YulFunctionCall","src":"385:14:25"}],"functionName":{"name":"eq","nativeSrc":"362:2:25","nodeType":"YulIdentifier","src":"362:2:25"},"nativeSrc":"362:38:25","nodeType":"YulFunctionCall","src":"362:38:25"},"nativeSrc":"359:161:25","nodeType":"YulIf","src":"359:161:25"}]},"name":"extract_byte_array_length","nativeSrc":"146:380:25","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nativeSrc":"181:4:25","nodeType":"YulTypedName","src":"181:4:25","type":""}],"returnVariables":[{"name":"length","nativeSrc":"190:6:25","nodeType":"YulTypedName","src":"190:6:25","type":""}],"src":"146:380:25"},{"body":{"nativeSrc":"587:65:25","nodeType":"YulBlock","src":"587:65:25","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"604:1:25","nodeType":"YulLiteral","src":"604:1:25","type":"","value":"0"},{"name":"ptr","nativeSrc":"607:3:25","nodeType":"YulIdentifier","src":"607:3:25"}],"functionName":{"name":"mstore","nativeSrc":"597:6:25","nodeType":"YulIdentifier","src":"597:6:25"},"nativeSrc":"597:14:25","nodeType":"YulFunctionCall","src":"597:14:25"},"nativeSrc":"597:14:25","nodeType":"YulExpressionStatement","src":"597:14:25"},{"nativeSrc":"620:26:25","nodeType":"YulAssignment","src":"620:26:25","value":{"arguments":[{"kind":"number","nativeSrc":"638:1:25","nodeType":"YulLiteral","src":"638:1:25","type":"","value":"0"},{"kind":"number","nativeSrc":"641:4:25","nodeType":"YulLiteral","src":"641:4:25","type":"","value":"0x20"}],"functionName":{"name":"keccak256","nativeSrc":"628:9:25","nodeType":"YulIdentifier","src":"628:9:25"},"nativeSrc":"628:18:25","nodeType":"YulFunctionCall","src":"628:18:25"},"variableNames":[{"name":"data","nativeSrc":"620:4:25","nodeType":"YulIdentifier","src":"620:4:25"}]}]},"name":"array_dataslot_string_storage","nativeSrc":"531:121:25","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nativeSrc":"570:3:25","nodeType":"YulTypedName","src":"570:3:25","type":""}],"returnVariables":[{"name":"data","nativeSrc":"578:4:25","nodeType":"YulTypedName","src":"578:4:25","type":""}],"src":"531:121:25"},{"body":{"nativeSrc":"738:437:25","nodeType":"YulBlock","src":"738:437:25","statements":[{"body":{"nativeSrc":"771:398:25","nodeType":"YulBlock","src":"771:398:25","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"792:1:25","nodeType":"YulLiteral","src":"792:1:25","type":"","value":"0"},{"name":"array","nativeSrc":"795:5:25","nodeType":"YulIdentifier","src":"795:5:25"}],"functionName":{"name":"mstore","nativeSrc":"785:6:25","nodeType":"YulIdentifier","src":"785:6:25"},"nativeSrc":"785:16:25","nodeType":"YulFunctionCall","src":"785:16:25"},"nativeSrc":"785:16:25","nodeType":"YulExpressionStatement","src":"785:16:25"},{"nativeSrc":"814:30:25","nodeType":"YulVariableDeclaration","src":"814:30:25","value":{"arguments":[{"kind":"number","nativeSrc":"836:1:25","nodeType":"YulLiteral","src":"836:1:25","type":"","value":"0"},{"kind":"number","nativeSrc":"839:4:25","nodeType":"YulLiteral","src":"839:4:25","type":"","value":"0x20"}],"functionName":{"name":"keccak256","nativeSrc":"826:9:25","nodeType":"YulIdentifier","src":"826:9:25"},"nativeSrc":"826:18:25","nodeType":"YulFunctionCall","src":"826:18:25"},"variables":[{"name":"data","nativeSrc":"818:4:25","nodeType":"YulTypedName","src":"818:4:25","type":""}]},{"nativeSrc":"857:57:25","nodeType":"YulVariableDeclaration","src":"857:57:25","value":{"arguments":[{"name":"data","nativeSrc":"880:4:25","nodeType":"YulIdentifier","src":"880:4:25"},{"arguments":[{"kind":"number","nativeSrc":"890:1:25","nodeType":"YulLiteral","src":"890:1:25","type":"","value":"5"},{"arguments":[{"name":"startIndex","nativeSrc":"897:10:25","nodeType":"YulIdentifier","src":"897:10:25"},{"kind":"number","nativeSrc":"909:2:25","nodeType":"YulLiteral","src":"909:2:25","type":"","value":"31"}],"functionName":{"name":"add","nativeSrc":"893:3:25","nodeType":"YulIdentifier","src":"893:3:25"},"nativeSrc":"893:19:25","nodeType":"YulFunctionCall","src":"893:19:25"}],"functionName":{"name":"shr","nativeSrc":"886:3:25","nodeType":"YulIdentifier","src":"886:3:25"},"nativeSrc":"886:27:25","nodeType":"YulFunctionCall","src":"886:27:25"}],"functionName":{"name":"add","nativeSrc":"876:3:25","nodeType":"YulIdentifier","src":"876:3:25"},"nativeSrc":"876:38:25","nodeType":"YulFunctionCall","src":"876:38:25"},"variables":[{"name":"deleteStart","nativeSrc":"861:11:25","nodeType":"YulTypedName","src":"861:11:25","type":""}]},{"body":{"nativeSrc":"951:23:25","nodeType":"YulBlock","src":"951:23:25","statements":[{"nativeSrc":"953:19:25","nodeType":"YulAssignment","src":"953:19:25","value":{"name":"data","nativeSrc":"968:4:25","nodeType":"YulIdentifier","src":"968:4:25"},"variableNames":[{"name":"deleteStart","nativeSrc":"953:11:25","nodeType":"YulIdentifier","src":"953:11:25"}]}]},"condition":{"arguments":[{"name":"startIndex","nativeSrc":"933:10:25","nodeType":"YulIdentifier","src":"933:10:25"},{"kind":"number","nativeSrc":"945:4:25","nodeType":"YulLiteral","src":"945:4:25","type":"","value":"0x20"}],"functionName":{"name":"lt","nativeSrc":"930:2:25","nodeType":"YulIdentifier","src":"930:2:25"},"nativeSrc":"930:20:25","nodeType":"YulFunctionCall","src":"930:20:25"},"nativeSrc":"927:47:25","nodeType":"YulIf","src":"927:47:25"},{"nativeSrc":"987:41:25","nodeType":"YulVariableDeclaration","src":"987:41:25","value":{"arguments":[{"name":"data","nativeSrc":"1001:4:25","nodeType":"YulIdentifier","src":"1001:4:25"},{"arguments":[{"kind":"number","nativeSrc":"1011:1:25","nodeType":"YulLiteral","src":"1011:1:25","type":"","value":"5"},{"arguments":[{"name":"len","nativeSrc":"1018:3:25","nodeType":"YulIdentifier","src":"1018:3:25"},{"kind":"number","nativeSrc":"1023:2:25","nodeType":"YulLiteral","src":"1023:2:25","type":"","value":"31"}],"functionName":{"name":"add","nativeSrc":"1014:3:25","nodeType":"YulIdentifier","src":"1014:3:25"},"nativeSrc":"1014:12:25","nodeType":"YulFunctionCall","src":"1014:12:25"}],"functionName":{"name":"shr","nativeSrc":"1007:3:25","nodeType":"YulIdentifier","src":"1007:3:25"},"nativeSrc":"1007:20:25","nodeType":"YulFunctionCall","src":"1007:20:25"}],"functionName":{"name":"add","nativeSrc":"997:3:25","nodeType":"YulIdentifier","src":"997:3:25"},"nativeSrc":"997:31:25","nodeType":"YulFunctionCall","src":"997:31:25"},"variables":[{"name":"_1","nativeSrc":"991:2:25","nodeType":"YulTypedName","src":"991:2:25","type":""}]},{"nativeSrc":"1041:24:25","nodeType":"YulVariableDeclaration","src":"1041:24:25","value":{"name":"deleteStart","nativeSrc":"1054:11:25","nodeType":"YulIdentifier","src":"1054:11:25"},"variables":[{"name":"start","nativeSrc":"1045:5:25","nodeType":"YulTypedName","src":"1045:5:25","type":""}]},{"body":{"nativeSrc":"1139:20:25","nodeType":"YulBlock","src":"1139:20:25","statements":[{"expression":{"arguments":[{"name":"start","nativeSrc":"1148:5:25","nodeType":"YulIdentifier","src":"1148:5:25"},{"kind":"number","nativeSrc":"1155:1:25","nodeType":"YulLiteral","src":"1155:1:25","type":"","value":"0"}],"functionName":{"name":"sstore","nativeSrc":"1141:6:25","nodeType":"YulIdentifier","src":"1141:6:25"},"nativeSrc":"1141:16:25","nodeType":"YulFunctionCall","src":"1141:16:25"},"nativeSrc":"1141:16:25","nodeType":"YulExpressionStatement","src":"1141:16:25"}]},"condition":{"arguments":[{"name":"start","nativeSrc":"1089:5:25","nodeType":"YulIdentifier","src":"1089:5:25"},{"name":"_1","nativeSrc":"1096:2:25","nodeType":"YulIdentifier","src":"1096:2:25"}],"functionName":{"name":"lt","nativeSrc":"1086:2:25","nodeType":"YulIdentifier","src":"1086:2:25"},"nativeSrc":"1086:13:25","nodeType":"YulFunctionCall","src":"1086:13:25"},"nativeSrc":"1078:81:25","nodeType":"YulForLoop","post":{"nativeSrc":"1100:26:25","nodeType":"YulBlock","src":"1100:26:25","statements":[{"nativeSrc":"1102:22:25","nodeType":"YulAssignment","src":"1102:22:25","value":{"arguments":[{"name":"start","nativeSrc":"1115:5:25","nodeType":"YulIdentifier","src":"1115:5:25"},{"kind":"number","nativeSrc":"1122:1:25","nodeType":"YulLiteral","src":"1122:1:25","type":"","value":"1"}],"functionName":{"name":"add","nativeSrc":"1111:3:25","nodeType":"YulIdentifier","src":"1111:3:25"},"nativeSrc":"1111:13:25","nodeType":"YulFunctionCall","src":"1111:13:25"},"variableNames":[{"name":"start","nativeSrc":"1102:5:25","nodeType":"YulIdentifier","src":"1102:5:25"}]}]},"pre":{"nativeSrc":"1082:3:25","nodeType":"YulBlock","src":"1082:3:25","statements":[]},"src":"1078:81:25"}]},"condition":{"arguments":[{"name":"len","nativeSrc":"754:3:25","nodeType":"YulIdentifier","src":"754:3:25"},{"kind":"number","nativeSrc":"759:2:25","nodeType":"YulLiteral","src":"759:2:25","type":"","value":"31"}],"functionName":{"name":"gt","nativeSrc":"751:2:25","nodeType":"YulIdentifier","src":"751:2:25"},"nativeSrc":"751:11:25","nodeType":"YulFunctionCall","src":"751:11:25"},"nativeSrc":"748:421:25","nodeType":"YulIf","src":"748:421:25"}]},"name":"clean_up_bytearray_end_slots_string_storage","nativeSrc":"657:518:25","nodeType":"YulFunctionDefinition","parameters":[{"name":"array","nativeSrc":"710:5:25","nodeType":"YulTypedName","src":"710:5:25","type":""},{"name":"len","nativeSrc":"717:3:25","nodeType":"YulTypedName","src":"717:3:25","type":""},{"name":"startIndex","nativeSrc":"722:10:25","nodeType":"YulTypedName","src":"722:10:25","type":""}],"src":"657:518:25"},{"body":{"nativeSrc":"1265:81:25","nodeType":"YulBlock","src":"1265:81:25","statements":[{"nativeSrc":"1275:65:25","nodeType":"YulAssignment","src":"1275:65:25","value":{"arguments":[{"arguments":[{"name":"data","nativeSrc":"1290:4:25","nodeType":"YulIdentifier","src":"1290:4:25"},{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"1308:1:25","nodeType":"YulLiteral","src":"1308:1:25","type":"","value":"3"},{"name":"len","nativeSrc":"1311:3:25","nodeType":"YulIdentifier","src":"1311:3:25"}],"functionName":{"name":"shl","nativeSrc":"1304:3:25","nodeType":"YulIdentifier","src":"1304:3:25"},"nativeSrc":"1304:11:25","nodeType":"YulFunctionCall","src":"1304:11:25"},{"arguments":[{"kind":"number","nativeSrc":"1321:1:25","nodeType":"YulLiteral","src":"1321:1:25","type":"","value":"0"}],"functionName":{"name":"not","nativeSrc":"1317:3:25","nodeType":"YulIdentifier","src":"1317:3:25"},"nativeSrc":"1317:6:25","nodeType":"YulFunctionCall","src":"1317:6:25"}],"functionName":{"name":"shr","nativeSrc":"1300:3:25","nodeType":"YulIdentifier","src":"1300:3:25"},"nativeSrc":"1300:24:25","nodeType":"YulFunctionCall","src":"1300:24:25"}],"functionName":{"name":"not","nativeSrc":"1296:3:25","nodeType":"YulIdentifier","src":"1296:3:25"},"nativeSrc":"1296:29:25","nodeType":"YulFunctionCall","src":"1296:29:25"}],"functionName":{"name":"and","nativeSrc":"1286:3:25","nodeType":"YulIdentifier","src":"1286:3:25"},"nativeSrc":"1286:40:25","nodeType":"YulFunctionCall","src":"1286:40:25"},{"arguments":[{"kind":"number","nativeSrc":"1332:1:25","nodeType":"YulLiteral","src":"1332:1:25","type":"","value":"1"},{"name":"len","nativeSrc":"1335:3:25","nodeType":"YulIdentifier","src":"1335:3:25"}],"functionName":{"name":"shl","nativeSrc":"1328:3:25","nodeType":"YulIdentifier","src":"1328:3:25"},"nativeSrc":"1328:11:25","nodeType":"YulFunctionCall","src":"1328:11:25"}],"functionName":{"name":"or","nativeSrc":"1283:2:25","nodeType":"YulIdentifier","src":"1283:2:25"},"nativeSrc":"1283:57:25","nodeType":"YulFunctionCall","src":"1283:57:25"},"variableNames":[{"name":"used","nativeSrc":"1275:4:25","nodeType":"YulIdentifier","src":"1275:4:25"}]}]},"name":"extract_used_part_and_set_length_of_short_byte_array","nativeSrc":"1180:166:25","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nativeSrc":"1242:4:25","nodeType":"YulTypedName","src":"1242:4:25","type":""},{"name":"len","nativeSrc":"1248:3:25","nodeType":"YulTypedName","src":"1248:3:25","type":""}],"returnVariables":[{"name":"used","nativeSrc":"1256:4:25","nodeType":"YulTypedName","src":"1256:4:25","type":""}],"src":"1180:166:25"},{"body":{"nativeSrc":"1447:1203:25","nodeType":"YulBlock","src":"1447:1203:25","statements":[{"nativeSrc":"1457:24:25","nodeType":"YulVariableDeclaration","src":"1457:24:25","value":{"arguments":[{"name":"src","nativeSrc":"1477:3:25","nodeType":"YulIdentifier","src":"1477:3:25"}],"functionName":{"name":"mload","nativeSrc":"1471:5:25","nodeType":"YulIdentifier","src":"1471:5:25"},"nativeSrc":"1471:10:25","nodeType":"YulFunctionCall","src":"1471:10:25"},"variables":[{"name":"newLen","nativeSrc":"1461:6:25","nodeType":"YulTypedName","src":"1461:6:25","type":""}]},{"body":{"nativeSrc":"1524:22:25","nodeType":"YulBlock","src":"1524:22:25","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nativeSrc":"1526:16:25","nodeType":"YulIdentifier","src":"1526:16:25"},"nativeSrc":"1526:18:25","nodeType":"YulFunctionCall","src":"1526:18:25"},"nativeSrc":"1526:18:25","nodeType":"YulExpressionStatement","src":"1526:18:25"}]},"condition":{"arguments":[{"name":"newLen","nativeSrc":"1496:6:25","nodeType":"YulIdentifier","src":"1496:6:25"},{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"1512:2:25","nodeType":"YulLiteral","src":"1512:2:25","type":"","value":"64"},{"kind":"number","nativeSrc":"1516:1:25","nodeType":"YulLiteral","src":"1516:1:25","type":"","value":"1"}],"functionName":{"name":"shl","nativeSrc":"1508:3:25","nodeType":"YulIdentifier","src":"1508:3:25"},"nativeSrc":"1508:10:25","nodeType":"YulFunctionCall","src":"1508:10:25"},{"kind":"number","nativeSrc":"1520:1:25","nodeType":"YulLiteral","src":"1520:1:25","type":"","value":"1"}],"functionName":{"name":"sub","nativeSrc":"1504:3:25","nodeType":"YulIdentifier","src":"1504:3:25"},"nativeSrc":"1504:18:25","nodeType":"YulFunctionCall","src":"1504:18:25"}],"functionName":{"name":"gt","nativeSrc":"1493:2:25","nodeType":"YulIdentifier","src":"1493:2:25"},"nativeSrc":"1493:30:25","nodeType":"YulFunctionCall","src":"1493:30:25"},"nativeSrc":"1490:56:25","nodeType":"YulIf","src":"1490:56:25"},{"expression":{"arguments":[{"name":"slot","nativeSrc":"1599:4:25","nodeType":"YulIdentifier","src":"1599:4:25"},{"arguments":[{"arguments":[{"name":"slot","nativeSrc":"1637:4:25","nodeType":"YulIdentifier","src":"1637:4:25"}],"functionName":{"name":"sload","nativeSrc":"1631:5:25","nodeType":"YulIdentifier","src":"1631:5:25"},"nativeSrc":"1631:11:25","nodeType":"YulFunctionCall","src":"1631:11:25"}],"functionName":{"name":"extract_byte_array_length","nativeSrc":"1605:25:25","nodeType":"YulIdentifier","src":"1605:25:25"},"nativeSrc":"1605:38:25","nodeType":"YulFunctionCall","src":"1605:38:25"},{"name":"newLen","nativeSrc":"1645:6:25","nodeType":"YulIdentifier","src":"1645:6:25"}],"functionName":{"name":"clean_up_bytearray_end_slots_string_storage","nativeSrc":"1555:43:25","nodeType":"YulIdentifier","src":"1555:43:25"},"nativeSrc":"1555:97:25","nodeType":"YulFunctionCall","src":"1555:97:25"},"nativeSrc":"1555:97:25","nodeType":"YulExpressionStatement","src":"1555:97:25"},{"nativeSrc":"1661:18:25","nodeType":"YulVariableDeclaration","src":"1661:18:25","value":{"kind":"number","nativeSrc":"1678:1:25","nodeType":"YulLiteral","src":"1678:1:25","type":"","value":"0"},"variables":[{"name":"srcOffset","nativeSrc":"1665:9:25","nodeType":"YulTypedName","src":"1665:9:25","type":""}]},{"nativeSrc":"1688:17:25","nodeType":"YulAssignment","src":"1688:17:25","value":{"kind":"number","nativeSrc":"1701:4:25","nodeType":"YulLiteral","src":"1701:4:25","type":"","value":"0x20"},"variableNames":[{"name":"srcOffset","nativeSrc":"1688:9:25","nodeType":"YulIdentifier","src":"1688:9:25"}]},{"cases":[{"body":{"nativeSrc":"1751:642:25","nodeType":"YulBlock","src":"1751:642:25","statements":[{"nativeSrc":"1765:35:25","nodeType":"YulVariableDeclaration","src":"1765:35:25","value":{"arguments":[{"name":"newLen","nativeSrc":"1784:6:25","nodeType":"YulIdentifier","src":"1784:6:25"},{"arguments":[{"kind":"number","nativeSrc":"1796:2:25","nodeType":"YulLiteral","src":"1796:2:25","type":"","value":"31"}],"functionName":{"name":"not","nativeSrc":"1792:3:25","nodeType":"YulIdentifier","src":"1792:3:25"},"nativeSrc":"1792:7:25","nodeType":"YulFunctionCall","src":"1792:7:25"}],"functionName":{"name":"and","nativeSrc":"1780:3:25","nodeType":"YulIdentifier","src":"1780:3:25"},"nativeSrc":"1780:20:25","nodeType":"YulFunctionCall","src":"1780:20:25"},"variables":[{"name":"loopEnd","nativeSrc":"1769:7:25","nodeType":"YulTypedName","src":"1769:7:25","type":""}]},{"nativeSrc":"1813:49:25","nodeType":"YulVariableDeclaration","src":"1813:49:25","value":{"arguments":[{"name":"slot","nativeSrc":"1857:4:25","nodeType":"YulIdentifier","src":"1857:4:25"}],"functionName":{"name":"array_dataslot_string_storage","nativeSrc":"1827:29:25","nodeType":"YulIdentifier","src":"1827:29:25"},"nativeSrc":"1827:35:25","nodeType":"YulFunctionCall","src":"1827:35:25"},"variables":[{"name":"dstPtr","nativeSrc":"1817:6:25","nodeType":"YulTypedName","src":"1817:6:25","type":""}]},{"nativeSrc":"1875:10:25","nodeType":"YulVariableDeclaration","src":"1875:10:25","value":{"kind":"number","nativeSrc":"1884:1:25","nodeType":"YulLiteral","src":"1884:1:25","type":"","value":"0"},"variables":[{"name":"i","nativeSrc":"1879:1:25","nodeType":"YulTypedName","src":"1879:1:25","type":""}]},{"body":{"nativeSrc":"1955:165:25","nodeType":"YulBlock","src":"1955:165:25","statements":[{"expression":{"arguments":[{"name":"dstPtr","nativeSrc":"1980:6:25","nodeType":"YulIdentifier","src":"1980:6:25"},{"arguments":[{"arguments":[{"name":"src","nativeSrc":"1998:3:25","nodeType":"YulIdentifier","src":"1998:3:25"},{"name":"srcOffset","nativeSrc":"2003:9:25","nodeType":"YulIdentifier","src":"2003:9:25"}],"functionName":{"name":"add","nativeSrc":"1994:3:25","nodeType":"YulIdentifier","src":"1994:3:25"},"nativeSrc":"1994:19:25","nodeType":"YulFunctionCall","src":"1994:19:25"}],"functionName":{"name":"mload","nativeSrc":"1988:5:25","nodeType":"YulIdentifier","src":"1988:5:25"},"nativeSrc":"1988:26:25","nodeType":"YulFunctionCall","src":"1988:26:25"}],"functionName":{"name":"sstore","nativeSrc":"1973:6:25","nodeType":"YulIdentifier","src":"1973:6:25"},"nativeSrc":"1973:42:25","nodeType":"YulFunctionCall","src":"1973:42:25"},"nativeSrc":"1973:42:25","nodeType":"YulExpressionStatement","src":"1973:42:25"},{"nativeSrc":"2032:24:25","nodeType":"YulAssignment","src":"2032:24:25","value":{"arguments":[{"name":"dstPtr","nativeSrc":"2046:6:25","nodeType":"YulIdentifier","src":"2046:6:25"},{"kind":"number","nativeSrc":"2054:1:25","nodeType":"YulLiteral","src":"2054:1:25","type":"","value":"1"}],"functionName":{"name":"add","nativeSrc":"2042:3:25","nodeType":"YulIdentifier","src":"2042:3:25"},"nativeSrc":"2042:14:25","nodeType":"YulFunctionCall","src":"2042:14:25"},"variableNames":[{"name":"dstPtr","nativeSrc":"2032:6:25","nodeType":"YulIdentifier","src":"2032:6:25"}]},{"nativeSrc":"2073:33:25","nodeType":"YulAssignment","src":"2073:33:25","value":{"arguments":[{"name":"srcOffset","nativeSrc":"2090:9:25","nodeType":"YulIdentifier","src":"2090:9:25"},{"kind":"number","nativeSrc":"2101:4:25","nodeType":"YulLiteral","src":"2101:4:25","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"2086:3:25","nodeType":"YulIdentifier","src":"2086:3:25"},"nativeSrc":"2086:20:25","nodeType":"YulFunctionCall","src":"2086:20:25"},"variableNames":[{"name":"srcOffset","nativeSrc":"2073:9:25","nodeType":"YulIdentifier","src":"2073:9:25"}]}]},"condition":{"arguments":[{"name":"i","nativeSrc":"1909:1:25","nodeType":"YulIdentifier","src":"1909:1:25"},{"name":"loopEnd","nativeSrc":"1912:7:25","nodeType":"YulIdentifier","src":"1912:7:25"}],"functionName":{"name":"lt","nativeSrc":"1906:2:25","nodeType":"YulIdentifier","src":"1906:2:25"},"nativeSrc":"1906:14:25","nodeType":"YulFunctionCall","src":"1906:14:25"},"nativeSrc":"1898:222:25","nodeType":"YulForLoop","post":{"nativeSrc":"1921:21:25","nodeType":"YulBlock","src":"1921:21:25","statements":[{"nativeSrc":"1923:17:25","nodeType":"YulAssignment","src":"1923:17:25","value":{"arguments":[{"name":"i","nativeSrc":"1932:1:25","nodeType":"YulIdentifier","src":"1932:1:25"},{"kind":"number","nativeSrc":"1935:4:25","nodeType":"YulLiteral","src":"1935:4:25","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"1928:3:25","nodeType":"YulIdentifier","src":"1928:3:25"},"nativeSrc":"1928:12:25","nodeType":"YulFunctionCall","src":"1928:12:25"},"variableNames":[{"name":"i","nativeSrc":"1923:1:25","nodeType":"YulIdentifier","src":"1923:1:25"}]}]},"pre":{"nativeSrc":"1902:3:25","nodeType":"YulBlock","src":"1902:3:25","statements":[]},"src":"1898:222:25"},{"body":{"nativeSrc":"2168:166:25","nodeType":"YulBlock","src":"2168:166:25","statements":[{"nativeSrc":"2186:43:25","nodeType":"YulVariableDeclaration","src":"2186:43:25","value":{"arguments":[{"arguments":[{"name":"src","nativeSrc":"2213:3:25","nodeType":"YulIdentifier","src":"2213:3:25"},{"name":"srcOffset","nativeSrc":"2218:9:25","nodeType":"YulIdentifier","src":"2218:9:25"}],"functionName":{"name":"add","nativeSrc":"2209:3:25","nodeType":"YulIdentifier","src":"2209:3:25"},"nativeSrc":"2209:19:25","nodeType":"YulFunctionCall","src":"2209:19:25"}],"functionName":{"name":"mload","nativeSrc":"2203:5:25","nodeType":"YulIdentifier","src":"2203:5:25"},"nativeSrc":"2203:26:25","nodeType":"YulFunctionCall","src":"2203:26:25"},"variables":[{"name":"lastValue","nativeSrc":"2190:9:25","nodeType":"YulTypedName","src":"2190:9:25","type":""}]},{"expression":{"arguments":[{"name":"dstPtr","nativeSrc":"2253:6:25","nodeType":"YulIdentifier","src":"2253:6:25"},{"arguments":[{"name":"lastValue","nativeSrc":"2265:9:25","nodeType":"YulIdentifier","src":"2265:9:25"},{"arguments":[{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"2292:1:25","nodeType":"YulLiteral","src":"2292:1:25","type":"","value":"3"},{"name":"newLen","nativeSrc":"2295:6:25","nodeType":"YulIdentifier","src":"2295:6:25"}],"functionName":{"name":"shl","nativeSrc":"2288:3:25","nodeType":"YulIdentifier","src":"2288:3:25"},"nativeSrc":"2288:14:25","nodeType":"YulFunctionCall","src":"2288:14:25"},{"kind":"number","nativeSrc":"2304:3:25","nodeType":"YulLiteral","src":"2304:3:25","type":"","value":"248"}],"functionName":{"name":"and","nativeSrc":"2284:3:25","nodeType":"YulIdentifier","src":"2284:3:25"},"nativeSrc":"2284:24:25","nodeType":"YulFunctionCall","src":"2284:24:25"},{"arguments":[{"kind":"number","nativeSrc":"2314:1:25","nodeType":"YulLiteral","src":"2314:1:25","type":"","value":"0"}],"functionName":{"name":"not","nativeSrc":"2310:3:25","nodeType":"YulIdentifier","src":"2310:3:25"},"nativeSrc":"2310:6:25","nodeType":"YulFunctionCall","src":"2310:6:25"}],"functionName":{"name":"shr","nativeSrc":"2280:3:25","nodeType":"YulIdentifier","src":"2280:3:25"},"nativeSrc":"2280:37:25","nodeType":"YulFunctionCall","src":"2280:37:25"}],"functionName":{"name":"not","nativeSrc":"2276:3:25","nodeType":"YulIdentifier","src":"2276:3:25"},"nativeSrc":"2276:42:25","nodeType":"YulFunctionCall","src":"2276:42:25"}],"functionName":{"name":"and","nativeSrc":"2261:3:25","nodeType":"YulIdentifier","src":"2261:3:25"},"nativeSrc":"2261:58:25","nodeType":"YulFunctionCall","src":"2261:58:25"}],"functionName":{"name":"sstore","nativeSrc":"2246:6:25","nodeType":"YulIdentifier","src":"2246:6:25"},"nativeSrc":"2246:74:25","nodeType":"YulFunctionCall","src":"2246:74:25"},"nativeSrc":"2246:74:25","nodeType":"YulExpressionStatement","src":"2246:74:25"}]},"condition":{"arguments":[{"name":"loopEnd","nativeSrc":"2139:7:25","nodeType":"YulIdentifier","src":"2139:7:25"},{"name":"newLen","nativeSrc":"2148:6:25","nodeType":"YulIdentifier","src":"2148:6:25"}],"functionName":{"name":"lt","nativeSrc":"2136:2:25","nodeType":"YulIdentifier","src":"2136:2:25"},"nativeSrc":"2136:19:25","nodeType":"YulFunctionCall","src":"2136:19:25"},"nativeSrc":"2133:201:25","nodeType":"YulIf","src":"2133:201:25"},{"expression":{"arguments":[{"name":"slot","nativeSrc":"2354:4:25","nodeType":"YulIdentifier","src":"2354:4:25"},{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"2368:1:25","nodeType":"YulLiteral","src":"2368:1:25","type":"","value":"1"},{"name":"newLen","nativeSrc":"2371:6:25","nodeType":"YulIdentifier","src":"2371:6:25"}],"functionName":{"name":"shl","nativeSrc":"2364:3:25","nodeType":"YulIdentifier","src":"2364:3:25"},"nativeSrc":"2364:14:25","nodeType":"YulFunctionCall","src":"2364:14:25"},{"kind":"number","nativeSrc":"2380:1:25","nodeType":"YulLiteral","src":"2380:1:25","type":"","value":"1"}],"functionName":{"name":"add","nativeSrc":"2360:3:25","nodeType":"YulIdentifier","src":"2360:3:25"},"nativeSrc":"2360:22:25","nodeType":"YulFunctionCall","src":"2360:22:25"}],"functionName":{"name":"sstore","nativeSrc":"2347:6:25","nodeType":"YulIdentifier","src":"2347:6:25"},"nativeSrc":"2347:36:25","nodeType":"YulFunctionCall","src":"2347:36:25"},"nativeSrc":"2347:36:25","nodeType":"YulExpressionStatement","src":"2347:36:25"}]},"nativeSrc":"1744:649:25","nodeType":"YulCase","src":"1744:649:25","value":{"kind":"number","nativeSrc":"1749:1:25","nodeType":"YulLiteral","src":"1749:1:25","type":"","value":"1"}},{"body":{"nativeSrc":"2410:234:25","nodeType":"YulBlock","src":"2410:234:25","statements":[{"nativeSrc":"2424:14:25","nodeType":"YulVariableDeclaration","src":"2424:14:25","value":{"kind":"number","nativeSrc":"2437:1:25","nodeType":"YulLiteral","src":"2437:1:25","type":"","value":"0"},"variables":[{"name":"value","nativeSrc":"2428:5:25","nodeType":"YulTypedName","src":"2428:5:25","type":""}]},{"body":{"nativeSrc":"2473:67:25","nodeType":"YulBlock","src":"2473:67:25","statements":[{"nativeSrc":"2491:35:25","nodeType":"YulAssignment","src":"2491:35:25","value":{"arguments":[{"arguments":[{"name":"src","nativeSrc":"2510:3:25","nodeType":"YulIdentifier","src":"2510:3:25"},{"name":"srcOffset","nativeSrc":"2515:9:25","nodeType":"YulIdentifier","src":"2515:9:25"}],"functionName":{"name":"add","nativeSrc":"2506:3:25","nodeType":"YulIdentifier","src":"2506:3:25"},"nativeSrc":"2506:19:25","nodeType":"YulFunctionCall","src":"2506:19:25"}],"functionName":{"name":"mload","nativeSrc":"2500:5:25","nodeType":"YulIdentifier","src":"2500:5:25"},"nativeSrc":"2500:26:25","nodeType":"YulFunctionCall","src":"2500:26:25"},"variableNames":[{"name":"value","nativeSrc":"2491:5:25","nodeType":"YulIdentifier","src":"2491:5:25"}]}]},"condition":{"name":"newLen","nativeSrc":"2454:6:25","nodeType":"YulIdentifier","src":"2454:6:25"},"nativeSrc":"2451:89:25","nodeType":"YulIf","src":"2451:89:25"},{"expression":{"arguments":[{"name":"slot","nativeSrc":"2560:4:25","nodeType":"YulIdentifier","src":"2560:4:25"},{"arguments":[{"name":"value","nativeSrc":"2619:5:25","nodeType":"YulIdentifier","src":"2619:5:25"},{"name":"newLen","nativeSrc":"2626:6:25","nodeType":"YulIdentifier","src":"2626:6:25"}],"functionName":{"name":"extract_used_part_and_set_length_of_short_byte_array","nativeSrc":"2566:52:25","nodeType":"YulIdentifier","src":"2566:52:25"},"nativeSrc":"2566:67:25","nodeType":"YulFunctionCall","src":"2566:67:25"}],"functionName":{"name":"sstore","nativeSrc":"2553:6:25","nodeType":"YulIdentifier","src":"2553:6:25"},"nativeSrc":"2553:81:25","nodeType":"YulFunctionCall","src":"2553:81:25"},"nativeSrc":"2553:81:25","nodeType":"YulExpressionStatement","src":"2553:81:25"}]},"nativeSrc":"2402:242:25","nodeType":"YulCase","src":"2402:242:25","value":"default"}],"expression":{"arguments":[{"name":"newLen","nativeSrc":"1724:6:25","nodeType":"YulIdentifier","src":"1724:6:25"},{"kind":"number","nativeSrc":"1732:2:25","nodeType":"YulLiteral","src":"1732:2:25","type":"","value":"31"}],"functionName":{"name":"gt","nativeSrc":"1721:2:25","nodeType":"YulIdentifier","src":"1721:2:25"},"nativeSrc":"1721:14:25","nodeType":"YulFunctionCall","src":"1721:14:25"},"nativeSrc":"1714:930:25","nodeType":"YulSwitch","src":"1714:930:25"}]},"name":"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage","nativeSrc":"1351:1299:25","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nativeSrc":"1432:4:25","nodeType":"YulTypedName","src":"1432:4:25","type":""},{"name":"src","nativeSrc":"1438:3:25","nodeType":"YulTypedName","src":"1438:3:25","type":""}],"src":"1351:1299:25"},{"body":{"nativeSrc":"2687:95:25","nodeType":"YulBlock","src":"2687:95:25","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"2704:1:25","nodeType":"YulLiteral","src":"2704:1:25","type":"","value":"0"},{"arguments":[{"kind":"number","nativeSrc":"2711:3:25","nodeType":"YulLiteral","src":"2711:3:25","type":"","value":"224"},{"kind":"number","nativeSrc":"2716:10:25","nodeType":"YulLiteral","src":"2716:10:25","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nativeSrc":"2707:3:25","nodeType":"YulIdentifier","src":"2707:3:25"},"nativeSrc":"2707:20:25","nodeType":"YulFunctionCall","src":"2707:20:25"}],"functionName":{"name":"mstore","nativeSrc":"2697:6:25","nodeType":"YulIdentifier","src":"2697:6:25"},"nativeSrc":"2697:31:25","nodeType":"YulFunctionCall","src":"2697:31:25"},"nativeSrc":"2697:31:25","nodeType":"YulExpressionStatement","src":"2697:31:25"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"2744:1:25","nodeType":"YulLiteral","src":"2744:1:25","type":"","value":"4"},{"kind":"number","nativeSrc":"2747:4:25","nodeType":"YulLiteral","src":"2747:4:25","type":"","value":"0x11"}],"functionName":{"name":"mstore","nativeSrc":"2737:6:25","nodeType":"YulIdentifier","src":"2737:6:25"},"nativeSrc":"2737:15:25","nodeType":"YulFunctionCall","src":"2737:15:25"},"nativeSrc":"2737:15:25","nodeType":"YulExpressionStatement","src":"2737:15:25"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"2768:1:25","nodeType":"YulLiteral","src":"2768:1:25","type":"","value":"0"},{"kind":"number","nativeSrc":"2771:4:25","nodeType":"YulLiteral","src":"2771:4:25","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"2761:6:25","nodeType":"YulIdentifier","src":"2761:6:25"},"nativeSrc":"2761:15:25","nodeType":"YulFunctionCall","src":"2761:15:25"},"nativeSrc":"2761:15:25","nodeType":"YulExpressionStatement","src":"2761:15:25"}]},"name":"panic_error_0x11","nativeSrc":"2655:127:25","nodeType":"YulFunctionDefinition","src":"2655:127:25"},{"body":{"nativeSrc":"2856:306:25","nodeType":"YulBlock","src":"2856:306:25","statements":[{"nativeSrc":"2866:10:25","nodeType":"YulAssignment","src":"2866:10:25","value":{"kind":"number","nativeSrc":"2875:1:25","nodeType":"YulLiteral","src":"2875:1:25","type":"","value":"1"},"variableNames":[{"name":"power","nativeSrc":"2866:5:25","nodeType":"YulIdentifier","src":"2866:5:25"}]},{"nativeSrc":"2885:13:25","nodeType":"YulAssignment","src":"2885:13:25","value":{"name":"_base","nativeSrc":"2893:5:25","nodeType":"YulIdentifier","src":"2893:5:25"},"variableNames":[{"name":"base","nativeSrc":"2885:4:25","nodeType":"YulIdentifier","src":"2885:4:25"}]},{"body":{"nativeSrc":"2943:213:25","nodeType":"YulBlock","src":"2943:213:25","statements":[{"body":{"nativeSrc":"2985:22:25","nodeType":"YulBlock","src":"2985:22:25","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nativeSrc":"2987:16:25","nodeType":"YulIdentifier","src":"2987:16:25"},"nativeSrc":"2987:18:25","nodeType":"YulFunctionCall","src":"2987:18:25"},"nativeSrc":"2987:18:25","nodeType":"YulExpressionStatement","src":"2987:18:25"}]},"condition":{"arguments":[{"name":"base","nativeSrc":"2963:4:25","nodeType":"YulIdentifier","src":"2963:4:25"},{"arguments":[{"name":"max","nativeSrc":"2973:3:25","nodeType":"YulIdentifier","src":"2973:3:25"},{"name":"base","nativeSrc":"2978:4:25","nodeType":"YulIdentifier","src":"2978:4:25"}],"functionName":{"name":"div","nativeSrc":"2969:3:25","nodeType":"YulIdentifier","src":"2969:3:25"},"nativeSrc":"2969:14:25","nodeType":"YulFunctionCall","src":"2969:14:25"}],"functionName":{"name":"gt","nativeSrc":"2960:2:25","nodeType":"YulIdentifier","src":"2960:2:25"},"nativeSrc":"2960:24:25","nodeType":"YulFunctionCall","src":"2960:24:25"},"nativeSrc":"2957:50:25","nodeType":"YulIf","src":"2957:50:25"},{"body":{"nativeSrc":"3040:29:25","nodeType":"YulBlock","src":"3040:29:25","statements":[{"nativeSrc":"3042:25:25","nodeType":"YulAssignment","src":"3042:25:25","value":{"arguments":[{"name":"power","nativeSrc":"3055:5:25","nodeType":"YulIdentifier","src":"3055:5:25"},{"name":"base","nativeSrc":"3062:4:25","nodeType":"YulIdentifier","src":"3062:4:25"}],"functionName":{"name":"mul","nativeSrc":"3051:3:25","nodeType":"YulIdentifier","src":"3051:3:25"},"nativeSrc":"3051:16:25","nodeType":"YulFunctionCall","src":"3051:16:25"},"variableNames":[{"name":"power","nativeSrc":"3042:5:25","nodeType":"YulIdentifier","src":"3042:5:25"}]}]},"condition":{"arguments":[{"name":"exponent","nativeSrc":"3027:8:25","nodeType":"YulIdentifier","src":"3027:8:25"},{"kind":"number","nativeSrc":"3037:1:25","nodeType":"YulLiteral","src":"3037:1:25","type":"","value":"1"}],"functionName":{"name":"and","nativeSrc":"3023:3:25","nodeType":"YulIdentifier","src":"3023:3:25"},"nativeSrc":"3023:16:25","nodeType":"YulFunctionCall","src":"3023:16:25"},"nativeSrc":"3020:49:25","nodeType":"YulIf","src":"3020:49:25"},{"nativeSrc":"3082:23:25","nodeType":"YulAssignment","src":"3082:23:25","value":{"arguments":[{"name":"base","nativeSrc":"3094:4:25","nodeType":"YulIdentifier","src":"3094:4:25"},{"name":"base","nativeSrc":"3100:4:25","nodeType":"YulIdentifier","src":"3100:4:25"}],"functionName":{"name":"mul","nativeSrc":"3090:3:25","nodeType":"YulIdentifier","src":"3090:3:25"},"nativeSrc":"3090:15:25","nodeType":"YulFunctionCall","src":"3090:15:25"},"variableNames":[{"name":"base","nativeSrc":"3082:4:25","nodeType":"YulIdentifier","src":"3082:4:25"}]},{"nativeSrc":"3118:28:25","nodeType":"YulAssignment","src":"3118:28:25","value":{"arguments":[{"kind":"number","nativeSrc":"3134:1:25","nodeType":"YulLiteral","src":"3134:1:25","type":"","value":"1"},{"name":"exponent","nativeSrc":"3137:8:25","nodeType":"YulIdentifier","src":"3137:8:25"}],"functionName":{"name":"shr","nativeSrc":"3130:3:25","nodeType":"YulIdentifier","src":"3130:3:25"},"nativeSrc":"3130:16:25","nodeType":"YulFunctionCall","src":"3130:16:25"},"variableNames":[{"name":"exponent","nativeSrc":"3118:8:25","nodeType":"YulIdentifier","src":"3118:8:25"}]}]},"condition":{"arguments":[{"name":"exponent","nativeSrc":"2918:8:25","nodeType":"YulIdentifier","src":"2918:8:25"},{"kind":"number","nativeSrc":"2928:1:25","nodeType":"YulLiteral","src":"2928:1:25","type":"","value":"1"}],"functionName":{"name":"gt","nativeSrc":"2915:2:25","nodeType":"YulIdentifier","src":"2915:2:25"},"nativeSrc":"2915:15:25","nodeType":"YulFunctionCall","src":"2915:15:25"},"nativeSrc":"2907:249:25","nodeType":"YulForLoop","post":{"nativeSrc":"2931:3:25","nodeType":"YulBlock","src":"2931:3:25","statements":[]},"pre":{"nativeSrc":"2911:3:25","nodeType":"YulBlock","src":"2911:3:25","statements":[]},"src":"2907:249:25"}]},"name":"checked_exp_helper","nativeSrc":"2787:375:25","nodeType":"YulFunctionDefinition","parameters":[{"name":"_base","nativeSrc":"2815:5:25","nodeType":"YulTypedName","src":"2815:5:25","type":""},{"name":"exponent","nativeSrc":"2822:8:25","nodeType":"YulTypedName","src":"2822:8:25","type":""},{"name":"max","nativeSrc":"2832:3:25","nodeType":"YulTypedName","src":"2832:3:25","type":""}],"returnVariables":[{"name":"power","nativeSrc":"2840:5:25","nodeType":"YulTypedName","src":"2840:5:25","type":""},{"name":"base","nativeSrc":"2847:4:25","nodeType":"YulTypedName","src":"2847:4:25","type":""}],"src":"2787:375:25"},{"body":{"nativeSrc":"3226:843:25","nodeType":"YulBlock","src":"3226:843:25","statements":[{"body":{"nativeSrc":"3264:52:25","nodeType":"YulBlock","src":"3264:52:25","statements":[{"nativeSrc":"3278:10:25","nodeType":"YulAssignment","src":"3278:10:25","value":{"kind":"number","nativeSrc":"3287:1:25","nodeType":"YulLiteral","src":"3287:1:25","type":"","value":"1"},"variableNames":[{"name":"power","nativeSrc":"3278:5:25","nodeType":"YulIdentifier","src":"3278:5:25"}]},{"nativeSrc":"3301:5:25","nodeType":"YulLeave","src":"3301:5:25"}]},"condition":{"arguments":[{"name":"exponent","nativeSrc":"3246:8:25","nodeType":"YulIdentifier","src":"3246:8:25"}],"functionName":{"name":"iszero","nativeSrc":"3239:6:25","nodeType":"YulIdentifier","src":"3239:6:25"},"nativeSrc":"3239:16:25","nodeType":"YulFunctionCall","src":"3239:16:25"},"nativeSrc":"3236:80:25","nodeType":"YulIf","src":"3236:80:25"},{"body":{"nativeSrc":"3349:52:25","nodeType":"YulBlock","src":"3349:52:25","statements":[{"nativeSrc":"3363:10:25","nodeType":"YulAssignment","src":"3363:10:25","value":{"kind":"number","nativeSrc":"3372:1:25","nodeType":"YulLiteral","src":"3372:1:25","type":"","value":"0"},"variableNames":[{"name":"power","nativeSrc":"3363:5:25","nodeType":"YulIdentifier","src":"3363:5:25"}]},{"nativeSrc":"3386:5:25","nodeType":"YulLeave","src":"3386:5:25"}]},"condition":{"arguments":[{"name":"base","nativeSrc":"3335:4:25","nodeType":"YulIdentifier","src":"3335:4:25"}],"functionName":{"name":"iszero","nativeSrc":"3328:6:25","nodeType":"YulIdentifier","src":"3328:6:25"},"nativeSrc":"3328:12:25","nodeType":"YulFunctionCall","src":"3328:12:25"},"nativeSrc":"3325:76:25","nodeType":"YulIf","src":"3325:76:25"},{"cases":[{"body":{"nativeSrc":"3437:52:25","nodeType":"YulBlock","src":"3437:52:25","statements":[{"nativeSrc":"3451:10:25","nodeType":"YulAssignment","src":"3451:10:25","value":{"kind":"number","nativeSrc":"3460:1:25","nodeType":"YulLiteral","src":"3460:1:25","type":"","value":"1"},"variableNames":[{"name":"power","nativeSrc":"3451:5:25","nodeType":"YulIdentifier","src":"3451:5:25"}]},{"nativeSrc":"3474:5:25","nodeType":"YulLeave","src":"3474:5:25"}]},"nativeSrc":"3430:59:25","nodeType":"YulCase","src":"3430:59:25","value":{"kind":"number","nativeSrc":"3435:1:25","nodeType":"YulLiteral","src":"3435:1:25","type":"","value":"1"}},{"body":{"nativeSrc":"3505:167:25","nodeType":"YulBlock","src":"3505:167:25","statements":[{"body":{"nativeSrc":"3540:22:25","nodeType":"YulBlock","src":"3540:22:25","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nativeSrc":"3542:16:25","nodeType":"YulIdentifier","src":"3542:16:25"},"nativeSrc":"3542:18:25","nodeType":"YulFunctionCall","src":"3542:18:25"},"nativeSrc":"3542:18:25","nodeType":"YulExpressionStatement","src":"3542:18:25"}]},"condition":{"arguments":[{"name":"exponent","nativeSrc":"3525:8:25","nodeType":"YulIdentifier","src":"3525:8:25"},{"kind":"number","nativeSrc":"3535:3:25","nodeType":"YulLiteral","src":"3535:3:25","type":"","value":"255"}],"functionName":{"name":"gt","nativeSrc":"3522:2:25","nodeType":"YulIdentifier","src":"3522:2:25"},"nativeSrc":"3522:17:25","nodeType":"YulFunctionCall","src":"3522:17:25"},"nativeSrc":"3519:43:25","nodeType":"YulIf","src":"3519:43:25"},{"nativeSrc":"3575:25:25","nodeType":"YulAssignment","src":"3575:25:25","value":{"arguments":[{"name":"exponent","nativeSrc":"3588:8:25","nodeType":"YulIdentifier","src":"3588:8:25"},{"kind":"number","nativeSrc":"3598:1:25","nodeType":"YulLiteral","src":"3598:1:25","type":"","value":"1"}],"functionName":{"name":"shl","nativeSrc":"3584:3:25","nodeType":"YulIdentifier","src":"3584:3:25"},"nativeSrc":"3584:16:25","nodeType":"YulFunctionCall","src":"3584:16:25"},"variableNames":[{"name":"power","nativeSrc":"3575:5:25","nodeType":"YulIdentifier","src":"3575:5:25"}]},{"nativeSrc":"3613:11:25","nodeType":"YulVariableDeclaration","src":"3613:11:25","value":{"kind":"number","nativeSrc":"3623:1:25","nodeType":"YulLiteral","src":"3623:1:25","type":"","value":"0"},"variables":[{"name":"_1","nativeSrc":"3617:2:25","nodeType":"YulTypedName","src":"3617:2:25","type":""}]},{"nativeSrc":"3637:7:25","nodeType":"YulAssignment","src":"3637:7:25","value":{"kind":"number","nativeSrc":"3643:1:25","nodeType":"YulLiteral","src":"3643:1:25","type":"","value":"0"},"variableNames":[{"name":"_1","nativeSrc":"3637:2:25","nodeType":"YulIdentifier","src":"3637:2:25"}]},{"nativeSrc":"3657:5:25","nodeType":"YulLeave","src":"3657:5:25"}]},"nativeSrc":"3498:174:25","nodeType":"YulCase","src":"3498:174:25","value":{"kind":"number","nativeSrc":"3503:1:25","nodeType":"YulLiteral","src":"3503:1:25","type":"","value":"2"}}],"expression":{"name":"base","nativeSrc":"3417:4:25","nodeType":"YulIdentifier","src":"3417:4:25"},"nativeSrc":"3410:262:25","nodeType":"YulSwitch","src":"3410:262:25"},{"body":{"nativeSrc":"3770:114:25","nodeType":"YulBlock","src":"3770:114:25","statements":[{"nativeSrc":"3784:28:25","nodeType":"YulAssignment","src":"3784:28:25","value":{"arguments":[{"name":"base","nativeSrc":"3797:4:25","nodeType":"YulIdentifier","src":"3797:4:25"},{"name":"exponent","nativeSrc":"3803:8:25","nodeType":"YulIdentifier","src":"3803:8:25"}],"functionName":{"name":"exp","nativeSrc":"3793:3:25","nodeType":"YulIdentifier","src":"3793:3:25"},"nativeSrc":"3793:19:25","nodeType":"YulFunctionCall","src":"3793:19:25"},"variableNames":[{"name":"power","nativeSrc":"3784:5:25","nodeType":"YulIdentifier","src":"3784:5:25"}]},{"nativeSrc":"3825:11:25","nodeType":"YulVariableDeclaration","src":"3825:11:25","value":{"kind":"number","nativeSrc":"3835:1:25","nodeType":"YulLiteral","src":"3835:1:25","type":"","value":"0"},"variables":[{"name":"_2","nativeSrc":"3829:2:25","nodeType":"YulTypedName","src":"3829:2:25","type":""}]},{"nativeSrc":"3849:7:25","nodeType":"YulAssignment","src":"3849:7:25","value":{"kind":"number","nativeSrc":"3855:1:25","nodeType":"YulLiteral","src":"3855:1:25","type":"","value":"0"},"variableNames":[{"name":"_2","nativeSrc":"3849:2:25","nodeType":"YulIdentifier","src":"3849:2:25"}]},{"nativeSrc":"3869:5:25","nodeType":"YulLeave","src":"3869:5:25"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"base","nativeSrc":"3694:4:25","nodeType":"YulIdentifier","src":"3694:4:25"},{"kind":"number","nativeSrc":"3700:2:25","nodeType":"YulLiteral","src":"3700:2:25","type":"","value":"11"}],"functionName":{"name":"lt","nativeSrc":"3691:2:25","nodeType":"YulIdentifier","src":"3691:2:25"},"nativeSrc":"3691:12:25","nodeType":"YulFunctionCall","src":"3691:12:25"},{"arguments":[{"name":"exponent","nativeSrc":"3708:8:25","nodeType":"YulIdentifier","src":"3708:8:25"},{"kind":"number","nativeSrc":"3718:2:25","nodeType":"YulLiteral","src":"3718:2:25","type":"","value":"78"}],"functionName":{"name":"lt","nativeSrc":"3705:2:25","nodeType":"YulIdentifier","src":"3705:2:25"},"nativeSrc":"3705:16:25","nodeType":"YulFunctionCall","src":"3705:16:25"}],"functionName":{"name":"and","nativeSrc":"3687:3:25","nodeType":"YulIdentifier","src":"3687:3:25"},"nativeSrc":"3687:35:25","nodeType":"YulFunctionCall","src":"3687:35:25"},{"arguments":[{"arguments":[{"name":"base","nativeSrc":"3731:4:25","nodeType":"YulIdentifier","src":"3731:4:25"},{"kind":"number","nativeSrc":"3737:3:25","nodeType":"YulLiteral","src":"3737:3:25","type":"","value":"307"}],"functionName":{"name":"lt","nativeSrc":"3728:2:25","nodeType":"YulIdentifier","src":"3728:2:25"},"nativeSrc":"3728:13:25","nodeType":"YulFunctionCall","src":"3728:13:25"},{"arguments":[{"name":"exponent","nativeSrc":"3746:8:25","nodeType":"YulIdentifier","src":"3746:8:25"},{"kind":"number","nativeSrc":"3756:2:25","nodeType":"YulLiteral","src":"3756:2:25","type":"","value":"32"}],"functionName":{"name":"lt","nativeSrc":"3743:2:25","nodeType":"YulIdentifier","src":"3743:2:25"},"nativeSrc":"3743:16:25","nodeType":"YulFunctionCall","src":"3743:16:25"}],"functionName":{"name":"and","nativeSrc":"3724:3:25","nodeType":"YulIdentifier","src":"3724:3:25"},"nativeSrc":"3724:36:25","nodeType":"YulFunctionCall","src":"3724:36:25"}],"functionName":{"name":"or","nativeSrc":"3684:2:25","nodeType":"YulIdentifier","src":"3684:2:25"},"nativeSrc":"3684:77:25","nodeType":"YulFunctionCall","src":"3684:77:25"},"nativeSrc":"3681:203:25","nodeType":"YulIf","src":"3681:203:25"},{"nativeSrc":"3893:65:25","nodeType":"YulVariableDeclaration","src":"3893:65:25","value":{"arguments":[{"name":"base","nativeSrc":"3935:4:25","nodeType":"YulIdentifier","src":"3935:4:25"},{"name":"exponent","nativeSrc":"3941:8:25","nodeType":"YulIdentifier","src":"3941:8:25"},{"arguments":[{"kind":"number","nativeSrc":"3955:1:25","nodeType":"YulLiteral","src":"3955:1:25","type":"","value":"0"}],"functionName":{"name":"not","nativeSrc":"3951:3:25","nodeType":"YulIdentifier","src":"3951:3:25"},"nativeSrc":"3951:6:25","nodeType":"YulFunctionCall","src":"3951:6:25"}],"functionName":{"name":"checked_exp_helper","nativeSrc":"3916:18:25","nodeType":"YulIdentifier","src":"3916:18:25"},"nativeSrc":"3916:42:25","nodeType":"YulFunctionCall","src":"3916:42:25"},"variables":[{"name":"power_1","nativeSrc":"3897:7:25","nodeType":"YulTypedName","src":"3897:7:25","type":""},{"name":"base_1","nativeSrc":"3906:6:25","nodeType":"YulTypedName","src":"3906:6:25","type":""}]},{"body":{"nativeSrc":"4003:22:25","nodeType":"YulBlock","src":"4003:22:25","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nativeSrc":"4005:16:25","nodeType":"YulIdentifier","src":"4005:16:25"},"nativeSrc":"4005:18:25","nodeType":"YulFunctionCall","src":"4005:18:25"},"nativeSrc":"4005:18:25","nodeType":"YulExpressionStatement","src":"4005:18:25"}]},"condition":{"arguments":[{"name":"power_1","nativeSrc":"3973:7:25","nodeType":"YulIdentifier","src":"3973:7:25"},{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"3990:1:25","nodeType":"YulLiteral","src":"3990:1:25","type":"","value":"0"}],"functionName":{"name":"not","nativeSrc":"3986:3:25","nodeType":"YulIdentifier","src":"3986:3:25"},"nativeSrc":"3986:6:25","nodeType":"YulFunctionCall","src":"3986:6:25"},{"name":"base_1","nativeSrc":"3994:6:25","nodeType":"YulIdentifier","src":"3994:6:25"}],"functionName":{"name":"div","nativeSrc":"3982:3:25","nodeType":"YulIdentifier","src":"3982:3:25"},"nativeSrc":"3982:19:25","nodeType":"YulFunctionCall","src":"3982:19:25"}],"functionName":{"name":"gt","nativeSrc":"3970:2:25","nodeType":"YulIdentifier","src":"3970:2:25"},"nativeSrc":"3970:32:25","nodeType":"YulFunctionCall","src":"3970:32:25"},"nativeSrc":"3967:58:25","nodeType":"YulIf","src":"3967:58:25"},{"nativeSrc":"4034:29:25","nodeType":"YulAssignment","src":"4034:29:25","value":{"arguments":[{"name":"power_1","nativeSrc":"4047:7:25","nodeType":"YulIdentifier","src":"4047:7:25"},{"name":"base_1","nativeSrc":"4056:6:25","nodeType":"YulIdentifier","src":"4056:6:25"}],"functionName":{"name":"mul","nativeSrc":"4043:3:25","nodeType":"YulIdentifier","src":"4043:3:25"},"nativeSrc":"4043:20:25","nodeType":"YulFunctionCall","src":"4043:20:25"},"variableNames":[{"name":"power","nativeSrc":"4034:5:25","nodeType":"YulIdentifier","src":"4034:5:25"}]}]},"name":"checked_exp_unsigned","nativeSrc":"3167:902:25","nodeType":"YulFunctionDefinition","parameters":[{"name":"base","nativeSrc":"3197:4:25","nodeType":"YulTypedName","src":"3197:4:25","type":""},{"name":"exponent","nativeSrc":"3203:8:25","nodeType":"YulTypedName","src":"3203:8:25","type":""}],"returnVariables":[{"name":"power","nativeSrc":"3216:5:25","nodeType":"YulTypedName","src":"3216:5:25","type":""}],"src":"3167:902:25"},{"body":{"nativeSrc":"4142:72:25","nodeType":"YulBlock","src":"4142:72:25","statements":[{"nativeSrc":"4152:56:25","nodeType":"YulAssignment","src":"4152:56:25","value":{"arguments":[{"name":"base","nativeSrc":"4182:4:25","nodeType":"YulIdentifier","src":"4182:4:25"},{"arguments":[{"name":"exponent","nativeSrc":"4192:8:25","nodeType":"YulIdentifier","src":"4192:8:25"},{"kind":"number","nativeSrc":"4202:4:25","nodeType":"YulLiteral","src":"4202:4:25","type":"","value":"0xff"}],"functionName":{"name":"and","nativeSrc":"4188:3:25","nodeType":"YulIdentifier","src":"4188:3:25"},"nativeSrc":"4188:19:25","nodeType":"YulFunctionCall","src":"4188:19:25"}],"functionName":{"name":"checked_exp_unsigned","nativeSrc":"4161:20:25","nodeType":"YulIdentifier","src":"4161:20:25"},"nativeSrc":"4161:47:25","nodeType":"YulFunctionCall","src":"4161:47:25"},"variableNames":[{"name":"power","nativeSrc":"4152:5:25","nodeType":"YulIdentifier","src":"4152:5:25"}]}]},"name":"checked_exp_t_uint256_t_uint8","nativeSrc":"4074:140:25","nodeType":"YulFunctionDefinition","parameters":[{"name":"base","nativeSrc":"4113:4:25","nodeType":"YulTypedName","src":"4113:4:25","type":""},{"name":"exponent","nativeSrc":"4119:8:25","nodeType":"YulTypedName","src":"4119:8:25","type":""}],"returnVariables":[{"name":"power","nativeSrc":"4132:5:25","nodeType":"YulTypedName","src":"4132:5:25","type":""}],"src":"4074:140:25"},{"body":{"nativeSrc":"4271:116:25","nodeType":"YulBlock","src":"4271:116:25","statements":[{"nativeSrc":"4281:20:25","nodeType":"YulAssignment","src":"4281:20:25","value":{"arguments":[{"name":"x","nativeSrc":"4296:1:25","nodeType":"YulIdentifier","src":"4296:1:25"},{"name":"y","nativeSrc":"4299:1:25","nodeType":"YulIdentifier","src":"4299:1:25"}],"functionName":{"name":"mul","nativeSrc":"4292:3:25","nodeType":"YulIdentifier","src":"4292:3:25"},"nativeSrc":"4292:9:25","nodeType":"YulFunctionCall","src":"4292:9:25"},"variableNames":[{"name":"product","nativeSrc":"4281:7:25","nodeType":"YulIdentifier","src":"4281:7:25"}]},{"body":{"nativeSrc":"4359:22:25","nodeType":"YulBlock","src":"4359:22:25","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nativeSrc":"4361:16:25","nodeType":"YulIdentifier","src":"4361:16:25"},"nativeSrc":"4361:18:25","nodeType":"YulFunctionCall","src":"4361:18:25"},"nativeSrc":"4361:18:25","nodeType":"YulExpressionStatement","src":"4361:18:25"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"x","nativeSrc":"4330:1:25","nodeType":"YulIdentifier","src":"4330:1:25"}],"functionName":{"name":"iszero","nativeSrc":"4323:6:25","nodeType":"YulIdentifier","src":"4323:6:25"},"nativeSrc":"4323:9:25","nodeType":"YulFunctionCall","src":"4323:9:25"},{"arguments":[{"name":"y","nativeSrc":"4337:1:25","nodeType":"YulIdentifier","src":"4337:1:25"},{"arguments":[{"name":"product","nativeSrc":"4344:7:25","nodeType":"YulIdentifier","src":"4344:7:25"},{"name":"x","nativeSrc":"4353:1:25","nodeType":"YulIdentifier","src":"4353:1:25"}],"functionName":{"name":"div","nativeSrc":"4340:3:25","nodeType":"YulIdentifier","src":"4340:3:25"},"nativeSrc":"4340:15:25","nodeType":"YulFunctionCall","src":"4340:15:25"}],"functionName":{"name":"eq","nativeSrc":"4334:2:25","nodeType":"YulIdentifier","src":"4334:2:25"},"nativeSrc":"4334:22:25","nodeType":"YulFunctionCall","src":"4334:22:25"}],"functionName":{"name":"or","nativeSrc":"4320:2:25","nodeType":"YulIdentifier","src":"4320:2:25"},"nativeSrc":"4320:37:25","nodeType":"YulFunctionCall","src":"4320:37:25"}],"functionName":{"name":"iszero","nativeSrc":"4313:6:25","nodeType":"YulIdentifier","src":"4313:6:25"},"nativeSrc":"4313:45:25","nodeType":"YulFunctionCall","src":"4313:45:25"},"nativeSrc":"4310:71:25","nodeType":"YulIf","src":"4310:71:25"}]},"name":"checked_mul_t_uint256","nativeSrc":"4219:168:25","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nativeSrc":"4250:1:25","nodeType":"YulTypedName","src":"4250:1:25","type":""},{"name":"y","nativeSrc":"4253:1:25","nodeType":"YulTypedName","src":"4253:1:25","type":""}],"returnVariables":[{"name":"product","nativeSrc":"4259:7:25","nodeType":"YulTypedName","src":"4259:7:25","type":""}],"src":"4219:168:25"},{"body":{"nativeSrc":"4605:276:25","nodeType":"YulBlock","src":"4605:276:25","statements":[{"nativeSrc":"4615:27:25","nodeType":"YulAssignment","src":"4615:27:25","value":{"arguments":[{"name":"headStart","nativeSrc":"4627:9:25","nodeType":"YulIdentifier","src":"4627:9:25"},{"kind":"number","nativeSrc":"4638:3:25","nodeType":"YulLiteral","src":"4638:3:25","type":"","value":"160"}],"functionName":{"name":"add","nativeSrc":"4623:3:25","nodeType":"YulIdentifier","src":"4623:3:25"},"nativeSrc":"4623:19:25","nodeType":"YulFunctionCall","src":"4623:19:25"},"variableNames":[{"name":"tail","nativeSrc":"4615:4:25","nodeType":"YulIdentifier","src":"4615:4:25"}]},{"expression":{"arguments":[{"name":"headStart","nativeSrc":"4658:9:25","nodeType":"YulIdentifier","src":"4658:9:25"},{"name":"value0","nativeSrc":"4669:6:25","nodeType":"YulIdentifier","src":"4669:6:25"}],"functionName":{"name":"mstore","nativeSrc":"4651:6:25","nodeType":"YulIdentifier","src":"4651:6:25"},"nativeSrc":"4651:25:25","nodeType":"YulFunctionCall","src":"4651:25:25"},"nativeSrc":"4651:25:25","nodeType":"YulExpressionStatement","src":"4651:25:25"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"4696:9:25","nodeType":"YulIdentifier","src":"4696:9:25"},{"kind":"number","nativeSrc":"4707:2:25","nodeType":"YulLiteral","src":"4707:2:25","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"4692:3:25","nodeType":"YulIdentifier","src":"4692:3:25"},"nativeSrc":"4692:18:25","nodeType":"YulFunctionCall","src":"4692:18:25"},{"name":"value1","nativeSrc":"4712:6:25","nodeType":"YulIdentifier","src":"4712:6:25"}],"functionName":{"name":"mstore","nativeSrc":"4685:6:25","nodeType":"YulIdentifier","src":"4685:6:25"},"nativeSrc":"4685:34:25","nodeType":"YulFunctionCall","src":"4685:34:25"},"nativeSrc":"4685:34:25","nodeType":"YulExpressionStatement","src":"4685:34:25"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"4739:9:25","nodeType":"YulIdentifier","src":"4739:9:25"},{"kind":"number","nativeSrc":"4750:2:25","nodeType":"YulLiteral","src":"4750:2:25","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"4735:3:25","nodeType":"YulIdentifier","src":"4735:3:25"},"nativeSrc":"4735:18:25","nodeType":"YulFunctionCall","src":"4735:18:25"},{"name":"value2","nativeSrc":"4755:6:25","nodeType":"YulIdentifier","src":"4755:6:25"}],"functionName":{"name":"mstore","nativeSrc":"4728:6:25","nodeType":"YulIdentifier","src":"4728:6:25"},"nativeSrc":"4728:34:25","nodeType":"YulFunctionCall","src":"4728:34:25"},"nativeSrc":"4728:34:25","nodeType":"YulExpressionStatement","src":"4728:34:25"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"4782:9:25","nodeType":"YulIdentifier","src":"4782:9:25"},{"kind":"number","nativeSrc":"4793:2:25","nodeType":"YulLiteral","src":"4793:2:25","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"4778:3:25","nodeType":"YulIdentifier","src":"4778:3:25"},"nativeSrc":"4778:18:25","nodeType":"YulFunctionCall","src":"4778:18:25"},{"name":"value3","nativeSrc":"4798:6:25","nodeType":"YulIdentifier","src":"4798:6:25"}],"functionName":{"name":"mstore","nativeSrc":"4771:6:25","nodeType":"YulIdentifier","src":"4771:6:25"},"nativeSrc":"4771:34:25","nodeType":"YulFunctionCall","src":"4771:34:25"},"nativeSrc":"4771:34:25","nodeType":"YulExpressionStatement","src":"4771:34:25"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"4825:9:25","nodeType":"YulIdentifier","src":"4825:9:25"},{"kind":"number","nativeSrc":"4836:3:25","nodeType":"YulLiteral","src":"4836:3:25","type":"","value":"128"}],"functionName":{"name":"add","nativeSrc":"4821:3:25","nodeType":"YulIdentifier","src":"4821:3:25"},"nativeSrc":"4821:19:25","nodeType":"YulFunctionCall","src":"4821:19:25"},{"arguments":[{"name":"value4","nativeSrc":"4846:6:25","nodeType":"YulIdentifier","src":"4846:6:25"},{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"4862:3:25","nodeType":"YulLiteral","src":"4862:3:25","type":"","value":"160"},{"kind":"number","nativeSrc":"4867:1:25","nodeType":"YulLiteral","src":"4867:1:25","type":"","value":"1"}],"functionName":{"name":"shl","nativeSrc":"4858:3:25","nodeType":"YulIdentifier","src":"4858:3:25"},"nativeSrc":"4858:11:25","nodeType":"YulFunctionCall","src":"4858:11:25"},{"kind":"number","nativeSrc":"4871:1:25","nodeType":"YulLiteral","src":"4871:1:25","type":"","value":"1"}],"functionName":{"name":"sub","nativeSrc":"4854:3:25","nodeType":"YulIdentifier","src":"4854:3:25"},"nativeSrc":"4854:19:25","nodeType":"YulFunctionCall","src":"4854:19:25"}],"functionName":{"name":"and","nativeSrc":"4842:3:25","nodeType":"YulIdentifier","src":"4842:3:25"},"nativeSrc":"4842:32:25","nodeType":"YulFunctionCall","src":"4842:32:25"}],"functionName":{"name":"mstore","nativeSrc":"4814:6:25","nodeType":"YulIdentifier","src":"4814:6:25"},"nativeSrc":"4814:61:25","nodeType":"YulFunctionCall","src":"4814:61:25"},"nativeSrc":"4814:61:25","nodeType":"YulExpressionStatement","src":"4814:61:25"}]},"name":"abi_encode_tuple_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__to_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__fromStack_reversed","nativeSrc":"4392:489:25","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"4542:9:25","nodeType":"YulTypedName","src":"4542:9:25","type":""},{"name":"value4","nativeSrc":"4553:6:25","nodeType":"YulTypedName","src":"4553:6:25","type":""},{"name":"value3","nativeSrc":"4561:6:25","nodeType":"YulTypedName","src":"4561:6:25","type":""},{"name":"value2","nativeSrc":"4569:6:25","nodeType":"YulTypedName","src":"4569:6:25","type":""},{"name":"value1","nativeSrc":"4577:6:25","nodeType":"YulTypedName","src":"4577:6:25","type":""},{"name":"value0","nativeSrc":"4585:6:25","nodeType":"YulTypedName","src":"4585:6:25","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"4596:4:25","nodeType":"YulTypedName","src":"4596:4:25","type":""}],"src":"4392:489:25"},{"body":{"nativeSrc":"4987:102:25","nodeType":"YulBlock","src":"4987:102:25","statements":[{"nativeSrc":"4997:26:25","nodeType":"YulAssignment","src":"4997:26:25","value":{"arguments":[{"name":"headStart","nativeSrc":"5009:9:25","nodeType":"YulIdentifier","src":"5009:9:25"},{"kind":"number","nativeSrc":"5020:2:25","nodeType":"YulLiteral","src":"5020:2:25","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"5005:3:25","nodeType":"YulIdentifier","src":"5005:3:25"},"nativeSrc":"5005:18:25","nodeType":"YulFunctionCall","src":"5005:18:25"},"variableNames":[{"name":"tail","nativeSrc":"4997:4:25","nodeType":"YulIdentifier","src":"4997:4:25"}]},{"expression":{"arguments":[{"name":"headStart","nativeSrc":"5039:9:25","nodeType":"YulIdentifier","src":"5039:9:25"},{"arguments":[{"name":"value0","nativeSrc":"5054:6:25","nodeType":"YulIdentifier","src":"5054:6:25"},{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"5070:3:25","nodeType":"YulLiteral","src":"5070:3:25","type":"","value":"160"},{"kind":"number","nativeSrc":"5075:1:25","nodeType":"YulLiteral","src":"5075:1:25","type":"","value":"1"}],"functionName":{"name":"shl","nativeSrc":"5066:3:25","nodeType":"YulIdentifier","src":"5066:3:25"},"nativeSrc":"5066:11:25","nodeType":"YulFunctionCall","src":"5066:11:25"},{"kind":"number","nativeSrc":"5079:1:25","nodeType":"YulLiteral","src":"5079:1:25","type":"","value":"1"}],"functionName":{"name":"sub","nativeSrc":"5062:3:25","nodeType":"YulIdentifier","src":"5062:3:25"},"nativeSrc":"5062:19:25","nodeType":"YulFunctionCall","src":"5062:19:25"}],"functionName":{"name":"and","nativeSrc":"5050:3:25","nodeType":"YulIdentifier","src":"5050:3:25"},"nativeSrc":"5050:32:25","nodeType":"YulFunctionCall","src":"5050:32:25"}],"functionName":{"name":"mstore","nativeSrc":"5032:6:25","nodeType":"YulIdentifier","src":"5032:6:25"},"nativeSrc":"5032:51:25","nodeType":"YulFunctionCall","src":"5032:51:25"},"nativeSrc":"5032:51:25","nodeType":"YulExpressionStatement","src":"5032:51:25"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nativeSrc":"4886:203:25","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"4956:9:25","nodeType":"YulTypedName","src":"4956:9:25","type":""},{"name":"value0","nativeSrc":"4967:6:25","nodeType":"YulTypedName","src":"4967:6:25","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"4978:4:25","nodeType":"YulTypedName","src":"4978:4:25","type":""}],"src":"4886:203:25"},{"body":{"nativeSrc":"5215:406:25","nodeType":"YulBlock","src":"5215:406:25","statements":[{"expression":{"arguments":[{"name":"headStart","nativeSrc":"5232:9:25","nodeType":"YulIdentifier","src":"5232:9:25"},{"kind":"number","nativeSrc":"5243:2:25","nodeType":"YulLiteral","src":"5243:2:25","type":"","value":"32"}],"functionName":{"name":"mstore","nativeSrc":"5225:6:25","nodeType":"YulIdentifier","src":"5225:6:25"},"nativeSrc":"5225:21:25","nodeType":"YulFunctionCall","src":"5225:21:25"},"nativeSrc":"5225:21:25","nodeType":"YulExpressionStatement","src":"5225:21:25"},{"nativeSrc":"5255:27:25","nodeType":"YulVariableDeclaration","src":"5255:27:25","value":{"arguments":[{"name":"value0","nativeSrc":"5275:6:25","nodeType":"YulIdentifier","src":"5275:6:25"}],"functionName":{"name":"mload","nativeSrc":"5269:5:25","nodeType":"YulIdentifier","src":"5269:5:25"},"nativeSrc":"5269:13:25","nodeType":"YulFunctionCall","src":"5269:13:25"},"variables":[{"name":"length","nativeSrc":"5259:6:25","nodeType":"YulTypedName","src":"5259:6:25","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"5302:9:25","nodeType":"YulIdentifier","src":"5302:9:25"},{"kind":"number","nativeSrc":"5313:2:25","nodeType":"YulLiteral","src":"5313:2:25","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"5298:3:25","nodeType":"YulIdentifier","src":"5298:3:25"},"nativeSrc":"5298:18:25","nodeType":"YulFunctionCall","src":"5298:18:25"},{"name":"length","nativeSrc":"5318:6:25","nodeType":"YulIdentifier","src":"5318:6:25"}],"functionName":{"name":"mstore","nativeSrc":"5291:6:25","nodeType":"YulIdentifier","src":"5291:6:25"},"nativeSrc":"5291:34:25","nodeType":"YulFunctionCall","src":"5291:34:25"},"nativeSrc":"5291:34:25","nodeType":"YulExpressionStatement","src":"5291:34:25"},{"nativeSrc":"5334:10:25","nodeType":"YulVariableDeclaration","src":"5334:10:25","value":{"kind":"number","nativeSrc":"5343:1:25","nodeType":"YulLiteral","src":"5343:1:25","type":"","value":"0"},"variables":[{"name":"i","nativeSrc":"5338:1:25","nodeType":"YulTypedName","src":"5338:1:25","type":""}]},{"body":{"nativeSrc":"5403:90:25","nodeType":"YulBlock","src":"5403:90:25","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"5432:9:25","nodeType":"YulIdentifier","src":"5432:9:25"},{"name":"i","nativeSrc":"5443:1:25","nodeType":"YulIdentifier","src":"5443:1:25"}],"functionName":{"name":"add","nativeSrc":"5428:3:25","nodeType":"YulIdentifier","src":"5428:3:25"},"nativeSrc":"5428:17:25","nodeType":"YulFunctionCall","src":"5428:17:25"},{"kind":"number","nativeSrc":"5447:2:25","nodeType":"YulLiteral","src":"5447:2:25","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"5424:3:25","nodeType":"YulIdentifier","src":"5424:3:25"},"nativeSrc":"5424:26:25","nodeType":"YulFunctionCall","src":"5424:26:25"},{"arguments":[{"arguments":[{"arguments":[{"name":"value0","nativeSrc":"5466:6:25","nodeType":"YulIdentifier","src":"5466:6:25"},{"name":"i","nativeSrc":"5474:1:25","nodeType":"YulIdentifier","src":"5474:1:25"}],"functionName":{"name":"add","nativeSrc":"5462:3:25","nodeType":"YulIdentifier","src":"5462:3:25"},"nativeSrc":"5462:14:25","nodeType":"YulFunctionCall","src":"5462:14:25"},{"kind":"number","nativeSrc":"5478:2:25","nodeType":"YulLiteral","src":"5478:2:25","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"5458:3:25","nodeType":"YulIdentifier","src":"5458:3:25"},"nativeSrc":"5458:23:25","nodeType":"YulFunctionCall","src":"5458:23:25"}],"functionName":{"name":"mload","nativeSrc":"5452:5:25","nodeType":"YulIdentifier","src":"5452:5:25"},"nativeSrc":"5452:30:25","nodeType":"YulFunctionCall","src":"5452:30:25"}],"functionName":{"name":"mstore","nativeSrc":"5417:6:25","nodeType":"YulIdentifier","src":"5417:6:25"},"nativeSrc":"5417:66:25","nodeType":"YulFunctionCall","src":"5417:66:25"},"nativeSrc":"5417:66:25","nodeType":"YulExpressionStatement","src":"5417:66:25"}]},"condition":{"arguments":[{"name":"i","nativeSrc":"5364:1:25","nodeType":"YulIdentifier","src":"5364:1:25"},{"name":"length","nativeSrc":"5367:6:25","nodeType":"YulIdentifier","src":"5367:6:25"}],"functionName":{"name":"lt","nativeSrc":"5361:2:25","nodeType":"YulIdentifier","src":"5361:2:25"},"nativeSrc":"5361:13:25","nodeType":"YulFunctionCall","src":"5361:13:25"},"nativeSrc":"5353:140:25","nodeType":"YulForLoop","post":{"nativeSrc":"5375:19:25","nodeType":"YulBlock","src":"5375:19:25","statements":[{"nativeSrc":"5377:15:25","nodeType":"YulAssignment","src":"5377:15:25","value":{"arguments":[{"name":"i","nativeSrc":"5386:1:25","nodeType":"YulIdentifier","src":"5386:1:25"},{"kind":"number","nativeSrc":"5389:2:25","nodeType":"YulLiteral","src":"5389:2:25","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"5382:3:25","nodeType":"YulIdentifier","src":"5382:3:25"},"nativeSrc":"5382:10:25","nodeType":"YulFunctionCall","src":"5382:10:25"},"variableNames":[{"name":"i","nativeSrc":"5377:1:25","nodeType":"YulIdentifier","src":"5377:1:25"}]}]},"pre":{"nativeSrc":"5357:3:25","nodeType":"YulBlock","src":"5357:3:25","statements":[]},"src":"5353:140:25"},{"expression":{"arguments":[{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"5517:9:25","nodeType":"YulIdentifier","src":"5517:9:25"},{"name":"length","nativeSrc":"5528:6:25","nodeType":"YulIdentifier","src":"5528:6:25"}],"functionName":{"name":"add","nativeSrc":"5513:3:25","nodeType":"YulIdentifier","src":"5513:3:25"},"nativeSrc":"5513:22:25","nodeType":"YulFunctionCall","src":"5513:22:25"},{"kind":"number","nativeSrc":"5537:2:25","nodeType":"YulLiteral","src":"5537:2:25","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"5509:3:25","nodeType":"YulIdentifier","src":"5509:3:25"},"nativeSrc":"5509:31:25","nodeType":"YulFunctionCall","src":"5509:31:25"},{"kind":"number","nativeSrc":"5542:1:25","nodeType":"YulLiteral","src":"5542:1:25","type":"","value":"0"}],"functionName":{"name":"mstore","nativeSrc":"5502:6:25","nodeType":"YulIdentifier","src":"5502:6:25"},"nativeSrc":"5502:42:25","nodeType":"YulFunctionCall","src":"5502:42:25"},"nativeSrc":"5502:42:25","nodeType":"YulExpressionStatement","src":"5502:42:25"},{"nativeSrc":"5553:62:25","nodeType":"YulAssignment","src":"5553:62:25","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"5569:9:25","nodeType":"YulIdentifier","src":"5569:9:25"},{"arguments":[{"arguments":[{"name":"length","nativeSrc":"5588:6:25","nodeType":"YulIdentifier","src":"5588:6:25"},{"kind":"number","nativeSrc":"5596:2:25","nodeType":"YulLiteral","src":"5596:2:25","type":"","value":"31"}],"functionName":{"name":"add","nativeSrc":"5584:3:25","nodeType":"YulIdentifier","src":"5584:3:25"},"nativeSrc":"5584:15:25","nodeType":"YulFunctionCall","src":"5584:15:25"},{"arguments":[{"kind":"number","nativeSrc":"5605:2:25","nodeType":"YulLiteral","src":"5605:2:25","type":"","value":"31"}],"functionName":{"name":"not","nativeSrc":"5601:3:25","nodeType":"YulIdentifier","src":"5601:3:25"},"nativeSrc":"5601:7:25","nodeType":"YulFunctionCall","src":"5601:7:25"}],"functionName":{"name":"and","nativeSrc":"5580:3:25","nodeType":"YulIdentifier","src":"5580:3:25"},"nativeSrc":"5580:29:25","nodeType":"YulFunctionCall","src":"5580:29:25"}],"functionName":{"name":"add","nativeSrc":"5565:3:25","nodeType":"YulIdentifier","src":"5565:3:25"},"nativeSrc":"5565:45:25","nodeType":"YulFunctionCall","src":"5565:45:25"},{"kind":"number","nativeSrc":"5612:2:25","nodeType":"YulLiteral","src":"5612:2:25","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"5561:3:25","nodeType":"YulIdentifier","src":"5561:3:25"},"nativeSrc":"5561:54:25","nodeType":"YulFunctionCall","src":"5561:54:25"},"variableNames":[{"name":"tail","nativeSrc":"5553:4:25","nodeType":"YulIdentifier","src":"5553:4:25"}]}]},"name":"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"5094:527:25","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"5184:9:25","nodeType":"YulTypedName","src":"5184:9:25","type":""},{"name":"value0","nativeSrc":"5195:6:25","nodeType":"YulTypedName","src":"5195:6:25","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"5206:4:25","nodeType":"YulTypedName","src":"5206:4:25","type":""}],"src":"5094:527:25"},{"body":{"nativeSrc":"5720:203:25","nodeType":"YulBlock","src":"5720:203:25","statements":[{"nativeSrc":"5730:26:25","nodeType":"YulVariableDeclaration","src":"5730:26:25","value":{"arguments":[{"name":"array","nativeSrc":"5750:5:25","nodeType":"YulIdentifier","src":"5750:5:25"}],"functionName":{"name":"mload","nativeSrc":"5744:5:25","nodeType":"YulIdentifier","src":"5744:5:25"},"nativeSrc":"5744:12:25","nodeType":"YulFunctionCall","src":"5744:12:25"},"variables":[{"name":"length","nativeSrc":"5734:6:25","nodeType":"YulTypedName","src":"5734:6:25","type":""}]},{"nativeSrc":"5765:32:25","nodeType":"YulAssignment","src":"5765:32:25","value":{"arguments":[{"arguments":[{"name":"array","nativeSrc":"5784:5:25","nodeType":"YulIdentifier","src":"5784:5:25"},{"kind":"number","nativeSrc":"5791:4:25","nodeType":"YulLiteral","src":"5791:4:25","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"5780:3:25","nodeType":"YulIdentifier","src":"5780:3:25"},"nativeSrc":"5780:16:25","nodeType":"YulFunctionCall","src":"5780:16:25"}],"functionName":{"name":"mload","nativeSrc":"5774:5:25","nodeType":"YulIdentifier","src":"5774:5:25"},"nativeSrc":"5774:23:25","nodeType":"YulFunctionCall","src":"5774:23:25"},"variableNames":[{"name":"value","nativeSrc":"5765:5:25","nodeType":"YulIdentifier","src":"5765:5:25"}]},{"body":{"nativeSrc":"5834:83:25","nodeType":"YulBlock","src":"5834:83:25","statements":[{"nativeSrc":"5848:59:25","nodeType":"YulAssignment","src":"5848:59:25","value":{"arguments":[{"name":"value","nativeSrc":"5861:5:25","nodeType":"YulIdentifier","src":"5861:5:25"},{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"5876:1:25","nodeType":"YulLiteral","src":"5876:1:25","type":"","value":"3"},{"arguments":[{"kind":"number","nativeSrc":"5883:4:25","nodeType":"YulLiteral","src":"5883:4:25","type":"","value":"0x20"},{"name":"length","nativeSrc":"5889:6:25","nodeType":"YulIdentifier","src":"5889:6:25"}],"functionName":{"name":"sub","nativeSrc":"5879:3:25","nodeType":"YulIdentifier","src":"5879:3:25"},"nativeSrc":"5879:17:25","nodeType":"YulFunctionCall","src":"5879:17:25"}],"functionName":{"name":"shl","nativeSrc":"5872:3:25","nodeType":"YulIdentifier","src":"5872:3:25"},"nativeSrc":"5872:25:25","nodeType":"YulFunctionCall","src":"5872:25:25"},{"arguments":[{"kind":"number","nativeSrc":"5903:1:25","nodeType":"YulLiteral","src":"5903:1:25","type":"","value":"0"}],"functionName":{"name":"not","nativeSrc":"5899:3:25","nodeType":"YulIdentifier","src":"5899:3:25"},"nativeSrc":"5899:6:25","nodeType":"YulFunctionCall","src":"5899:6:25"}],"functionName":{"name":"shl","nativeSrc":"5868:3:25","nodeType":"YulIdentifier","src":"5868:3:25"},"nativeSrc":"5868:38:25","nodeType":"YulFunctionCall","src":"5868:38:25"}],"functionName":{"name":"and","nativeSrc":"5857:3:25","nodeType":"YulIdentifier","src":"5857:3:25"},"nativeSrc":"5857:50:25","nodeType":"YulFunctionCall","src":"5857:50:25"},"variableNames":[{"name":"value","nativeSrc":"5848:5:25","nodeType":"YulIdentifier","src":"5848:5:25"}]}]},"condition":{"arguments":[{"name":"length","nativeSrc":"5812:6:25","nodeType":"YulIdentifier","src":"5812:6:25"},{"kind":"number","nativeSrc":"5820:4:25","nodeType":"YulLiteral","src":"5820:4:25","type":"","value":"0x20"}],"functionName":{"name":"lt","nativeSrc":"5809:2:25","nodeType":"YulIdentifier","src":"5809:2:25"},"nativeSrc":"5809:16:25","nodeType":"YulFunctionCall","src":"5809:16:25"},"nativeSrc":"5806:111:25","nodeType":"YulIf","src":"5806:111:25"}]},"name":"convert_bytes_to_fixedbytes_from_t_bytes_memory_ptr_to_t_bytes32","nativeSrc":"5626:297:25","nodeType":"YulFunctionDefinition","parameters":[{"name":"array","nativeSrc":"5700:5:25","nodeType":"YulTypedName","src":"5700:5:25","type":""}],"returnVariables":[{"name":"value","nativeSrc":"5710:5:25","nodeType":"YulTypedName","src":"5710:5:25","type":""}],"src":"5626:297:25"},{"body":{"nativeSrc":"5976:77:25","nodeType":"YulBlock","src":"5976:77:25","statements":[{"nativeSrc":"5986:16:25","nodeType":"YulAssignment","src":"5986:16:25","value":{"arguments":[{"name":"x","nativeSrc":"5997:1:25","nodeType":"YulIdentifier","src":"5997:1:25"},{"name":"y","nativeSrc":"6000:1:25","nodeType":"YulIdentifier","src":"6000:1:25"}],"functionName":{"name":"add","nativeSrc":"5993:3:25","nodeType":"YulIdentifier","src":"5993:3:25"},"nativeSrc":"5993:9:25","nodeType":"YulFunctionCall","src":"5993:9:25"},"variableNames":[{"name":"sum","nativeSrc":"5986:3:25","nodeType":"YulIdentifier","src":"5986:3:25"}]},{"body":{"nativeSrc":"6025:22:25","nodeType":"YulBlock","src":"6025:22:25","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nativeSrc":"6027:16:25","nodeType":"YulIdentifier","src":"6027:16:25"},"nativeSrc":"6027:18:25","nodeType":"YulFunctionCall","src":"6027:18:25"},"nativeSrc":"6027:18:25","nodeType":"YulExpressionStatement","src":"6027:18:25"}]},"condition":{"arguments":[{"name":"x","nativeSrc":"6017:1:25","nodeType":"YulIdentifier","src":"6017:1:25"},{"name":"sum","nativeSrc":"6020:3:25","nodeType":"YulIdentifier","src":"6020:3:25"}],"functionName":{"name":"gt","nativeSrc":"6014:2:25","nodeType":"YulIdentifier","src":"6014:2:25"},"nativeSrc":"6014:10:25","nodeType":"YulFunctionCall","src":"6014:10:25"},"nativeSrc":"6011:36:25","nodeType":"YulIf","src":"6011:36:25"}]},"name":"checked_add_t_uint256","nativeSrc":"5928:125:25","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nativeSrc":"5959:1:25","nodeType":"YulTypedName","src":"5959:1:25","type":""},{"name":"y","nativeSrc":"5962:1:25","nodeType":"YulTypedName","src":"5962:1:25","type":""}],"returnVariables":[{"name":"sum","nativeSrc":"5968:3:25","nodeType":"YulTypedName","src":"5968:3:25","type":""}],"src":"5928:125:25"},{"body":{"nativeSrc":"6232:177:25","nodeType":"YulBlock","src":"6232:177:25","statements":[{"expression":{"arguments":[{"name":"headStart","nativeSrc":"6249:9:25","nodeType":"YulIdentifier","src":"6249:9:25"},{"kind":"number","nativeSrc":"6260:2:25","nodeType":"YulLiteral","src":"6260:2:25","type":"","value":"32"}],"functionName":{"name":"mstore","nativeSrc":"6242:6:25","nodeType":"YulIdentifier","src":"6242:6:25"},"nativeSrc":"6242:21:25","nodeType":"YulFunctionCall","src":"6242:21:25"},"nativeSrc":"6242:21:25","nodeType":"YulExpressionStatement","src":"6242:21:25"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"6283:9:25","nodeType":"YulIdentifier","src":"6283:9:25"},{"kind":"number","nativeSrc":"6294:2:25","nodeType":"YulLiteral","src":"6294:2:25","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"6279:3:25","nodeType":"YulIdentifier","src":"6279:3:25"},"nativeSrc":"6279:18:25","nodeType":"YulFunctionCall","src":"6279:18:25"},{"kind":"number","nativeSrc":"6299:2:25","nodeType":"YulLiteral","src":"6299:2:25","type":"","value":"27"}],"functionName":{"name":"mstore","nativeSrc":"6272:6:25","nodeType":"YulIdentifier","src":"6272:6:25"},"nativeSrc":"6272:30:25","nodeType":"YulFunctionCall","src":"6272:30:25"},"nativeSrc":"6272:30:25","nodeType":"YulExpressionStatement","src":"6272:30:25"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"6322:9:25","nodeType":"YulIdentifier","src":"6322:9:25"},{"kind":"number","nativeSrc":"6333:2:25","nodeType":"YulLiteral","src":"6333:2:25","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"6318:3:25","nodeType":"YulIdentifier","src":"6318:3:25"},"nativeSrc":"6318:18:25","nodeType":"YulFunctionCall","src":"6318:18:25"},{"hexValue":"436f6f6c646f776e20706572696f64206e6f7420656c6170736564","kind":"string","nativeSrc":"6338:29:25","nodeType":"YulLiteral","src":"6338:29:25","type":"","value":"Cooldown period not elapsed"}],"functionName":{"name":"mstore","nativeSrc":"6311:6:25","nodeType":"YulIdentifier","src":"6311:6:25"},"nativeSrc":"6311:57:25","nodeType":"YulFunctionCall","src":"6311:57:25"},"nativeSrc":"6311:57:25","nodeType":"YulExpressionStatement","src":"6311:57:25"},{"nativeSrc":"6377:26:25","nodeType":"YulAssignment","src":"6377:26:25","value":{"arguments":[{"name":"headStart","nativeSrc":"6389:9:25","nodeType":"YulIdentifier","src":"6389:9:25"},{"kind":"number","nativeSrc":"6400:2:25","nodeType":"YulLiteral","src":"6400:2:25","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"6385:3:25","nodeType":"YulIdentifier","src":"6385:3:25"},"nativeSrc":"6385:18:25","nodeType":"YulFunctionCall","src":"6385:18:25"},"variableNames":[{"name":"tail","nativeSrc":"6377:4:25","nodeType":"YulIdentifier","src":"6377:4:25"}]}]},"name":"abi_encode_tuple_t_stringliteral_48efca4c133d4af809cbdea820ea2f4422813132b6936873e13dbb833f6fc66c__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"6058:351:25","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"6209:9:25","nodeType":"YulTypedName","src":"6209:9:25","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"6223:4:25","nodeType":"YulTypedName","src":"6223:4:25","type":""}],"src":"6058:351:25"},{"body":{"nativeSrc":"6571:188:25","nodeType":"YulBlock","src":"6571:188:25","statements":[{"nativeSrc":"6581:26:25","nodeType":"YulAssignment","src":"6581:26:25","value":{"arguments":[{"name":"headStart","nativeSrc":"6593:9:25","nodeType":"YulIdentifier","src":"6593:9:25"},{"kind":"number","nativeSrc":"6604:2:25","nodeType":"YulLiteral","src":"6604:2:25","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"6589:3:25","nodeType":"YulIdentifier","src":"6589:3:25"},"nativeSrc":"6589:18:25","nodeType":"YulFunctionCall","src":"6589:18:25"},"variableNames":[{"name":"tail","nativeSrc":"6581:4:25","nodeType":"YulIdentifier","src":"6581:4:25"}]},{"expression":{"arguments":[{"name":"headStart","nativeSrc":"6623:9:25","nodeType":"YulIdentifier","src":"6623:9:25"},{"arguments":[{"name":"value0","nativeSrc":"6638:6:25","nodeType":"YulIdentifier","src":"6638:6:25"},{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"6654:3:25","nodeType":"YulLiteral","src":"6654:3:25","type":"","value":"160"},{"kind":"number","nativeSrc":"6659:1:25","nodeType":"YulLiteral","src":"6659:1:25","type":"","value":"1"}],"functionName":{"name":"shl","nativeSrc":"6650:3:25","nodeType":"YulIdentifier","src":"6650:3:25"},"nativeSrc":"6650:11:25","nodeType":"YulFunctionCall","src":"6650:11:25"},{"kind":"number","nativeSrc":"6663:1:25","nodeType":"YulLiteral","src":"6663:1:25","type":"","value":"1"}],"functionName":{"name":"sub","nativeSrc":"6646:3:25","nodeType":"YulIdentifier","src":"6646:3:25"},"nativeSrc":"6646:19:25","nodeType":"YulFunctionCall","src":"6646:19:25"}],"functionName":{"name":"and","nativeSrc":"6634:3:25","nodeType":"YulIdentifier","src":"6634:3:25"},"nativeSrc":"6634:32:25","nodeType":"YulFunctionCall","src":"6634:32:25"}],"functionName":{"name":"mstore","nativeSrc":"6616:6:25","nodeType":"YulIdentifier","src":"6616:6:25"},"nativeSrc":"6616:51:25","nodeType":"YulFunctionCall","src":"6616:51:25"},"nativeSrc":"6616:51:25","nodeType":"YulExpressionStatement","src":"6616:51:25"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"6687:9:25","nodeType":"YulIdentifier","src":"6687:9:25"},{"kind":"number","nativeSrc":"6698:2:25","nodeType":"YulLiteral","src":"6698:2:25","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"6683:3:25","nodeType":"YulIdentifier","src":"6683:3:25"},"nativeSrc":"6683:18:25","nodeType":"YulFunctionCall","src":"6683:18:25"},{"name":"value1","nativeSrc":"6703:6:25","nodeType":"YulIdentifier","src":"6703:6:25"}],"functionName":{"name":"mstore","nativeSrc":"6676:6:25","nodeType":"YulIdentifier","src":"6676:6:25"},"nativeSrc":"6676:34:25","nodeType":"YulFunctionCall","src":"6676:34:25"},"nativeSrc":"6676:34:25","nodeType":"YulExpressionStatement","src":"6676:34:25"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"6730:9:25","nodeType":"YulIdentifier","src":"6730:9:25"},{"kind":"number","nativeSrc":"6741:2:25","nodeType":"YulLiteral","src":"6741:2:25","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"6726:3:25","nodeType":"YulIdentifier","src":"6726:3:25"},"nativeSrc":"6726:18:25","nodeType":"YulFunctionCall","src":"6726:18:25"},{"name":"value2","nativeSrc":"6746:6:25","nodeType":"YulIdentifier","src":"6746:6:25"}],"functionName":{"name":"mstore","nativeSrc":"6719:6:25","nodeType":"YulIdentifier","src":"6719:6:25"},"nativeSrc":"6719:34:25","nodeType":"YulFunctionCall","src":"6719:34:25"},"nativeSrc":"6719:34:25","nodeType":"YulExpressionStatement","src":"6719:34:25"}]},"name":"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed","nativeSrc":"6414:345:25","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"6524:9:25","nodeType":"YulTypedName","src":"6524:9:25","type":""},{"name":"value2","nativeSrc":"6535:6:25","nodeType":"YulTypedName","src":"6535:6:25","type":""},{"name":"value1","nativeSrc":"6543:6:25","nodeType":"YulTypedName","src":"6543:6:25","type":""},{"name":"value0","nativeSrc":"6551:6:25","nodeType":"YulTypedName","src":"6551:6:25","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"6562:4:25","nodeType":"YulTypedName","src":"6562:4:25","type":""}],"src":"6414:345:25"},{"body":{"nativeSrc":"6865:76:25","nodeType":"YulBlock","src":"6865:76:25","statements":[{"nativeSrc":"6875:26:25","nodeType":"YulAssignment","src":"6875:26:25","value":{"arguments":[{"name":"headStart","nativeSrc":"6887:9:25","nodeType":"YulIdentifier","src":"6887:9:25"},{"kind":"number","nativeSrc":"6898:2:25","nodeType":"YulLiteral","src":"6898:2:25","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"6883:3:25","nodeType":"YulIdentifier","src":"6883:3:25"},"nativeSrc":"6883:18:25","nodeType":"YulFunctionCall","src":"6883:18:25"},"variableNames":[{"name":"tail","nativeSrc":"6875:4:25","nodeType":"YulIdentifier","src":"6875:4:25"}]},{"expression":{"arguments":[{"name":"headStart","nativeSrc":"6917:9:25","nodeType":"YulIdentifier","src":"6917:9:25"},{"name":"value0","nativeSrc":"6928:6:25","nodeType":"YulIdentifier","src":"6928:6:25"}],"functionName":{"name":"mstore","nativeSrc":"6910:6:25","nodeType":"YulIdentifier","src":"6910:6:25"},"nativeSrc":"6910:25:25","nodeType":"YulFunctionCall","src":"6910:25:25"},"nativeSrc":"6910:25:25","nodeType":"YulExpressionStatement","src":"6910:25:25"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nativeSrc":"6764:177:25","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"6834:9:25","nodeType":"YulTypedName","src":"6834:9:25","type":""},{"name":"value0","nativeSrc":"6845:6:25","nodeType":"YulTypedName","src":"6845:6:25","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"6856:4:25","nodeType":"YulTypedName","src":"6856:4:25","type":""}],"src":"6764:177:25"}]},"contents":"{\n    { }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function array_dataslot_string_storage(ptr) -> data\n    {\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n    }\n    function clean_up_bytearray_end_slots_string_storage(array, len, startIndex)\n    {\n        if gt(len, 31)\n        {\n            mstore(0, array)\n            let data := keccak256(0, 0x20)\n            let deleteStart := add(data, shr(5, add(startIndex, 31)))\n            if lt(startIndex, 0x20) { deleteStart := data }\n            let _1 := add(data, shr(5, add(len, 31)))\n            let start := deleteStart\n            for { } lt(start, _1) { start := add(start, 1) }\n            { sstore(start, 0) }\n        }\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used\n    {\n        used := or(and(data, not(shr(shl(3, len), not(0)))), shl(1, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src)\n    {\n        let newLen := mload(src)\n        if gt(newLen, sub(shl(64, 1), 1)) { panic_error_0x41() }\n        clean_up_bytearray_end_slots_string_storage(slot, extract_byte_array_length(sload(slot)), newLen)\n        let srcOffset := 0\n        srcOffset := 0x20\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(31))\n            let dstPtr := array_dataslot_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) }\n            {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 0x20)\n            }\n            if lt(loopEnd, newLen)\n            {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, and(lastValue, not(shr(and(shl(3, newLen), 248), not(0)))))\n            }\n            sstore(slot, add(shl(1, newLen), 1))\n        }\n        default {\n            let value := 0\n            if newLen\n            {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function checked_exp_helper(_base, exponent, max) -> power, base\n    {\n        power := 1\n        base := _base\n        for { } gt(exponent, 1) { }\n        {\n            if gt(base, div(max, base)) { panic_error_0x11() }\n            if and(exponent, 1) { power := mul(power, base) }\n            base := mul(base, base)\n            exponent := shr(1, exponent)\n        }\n    }\n    function checked_exp_unsigned(base, exponent) -> power\n    {\n        if iszero(exponent)\n        {\n            power := 1\n            leave\n        }\n        if iszero(base)\n        {\n            power := 0\n            leave\n        }\n        switch base\n        case 1 {\n            power := 1\n            leave\n        }\n        case 2 {\n            if gt(exponent, 255) { panic_error_0x11() }\n            power := shl(exponent, 1)\n            let _1 := 0\n            _1 := 0\n            leave\n        }\n        if or(and(lt(base, 11), lt(exponent, 78)), and(lt(base, 307), lt(exponent, 32)))\n        {\n            power := exp(base, exponent)\n            let _2 := 0\n            _2 := 0\n            leave\n        }\n        let power_1, base_1 := checked_exp_helper(base, exponent, not(0))\n        if gt(power_1, div(not(0), base_1)) { panic_error_0x11() }\n        power := mul(power_1, base_1)\n    }\n    function checked_exp_t_uint256_t_uint8(base, exponent) -> power\n    {\n        power := checked_exp_unsigned(base, and(exponent, 0xff))\n    }\n    function checked_mul_t_uint256(x, y) -> product\n    {\n        product := mul(x, y)\n        if iszero(or(iszero(x), eq(y, div(product, x)))) { panic_error_0x11() }\n    }\n    function abi_encode_tuple_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__to_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__fromStack_reversed(headStart, value4, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 160)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), value3)\n        mstore(add(headStart, 128), and(value4, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        let length := mload(value0)\n        mstore(add(headStart, 32), length)\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(add(headStart, i), 64), mload(add(add(value0, i), 32)))\n        }\n        mstore(add(add(headStart, length), 64), 0)\n        tail := add(add(headStart, and(add(length, 31), not(31))), 64)\n    }\n    function convert_bytes_to_fixedbytes_from_t_bytes_memory_ptr_to_t_bytes32(array) -> value\n    {\n        let length := mload(array)\n        value := mload(add(array, 0x20))\n        if lt(length, 0x20)\n        {\n            value := and(value, shl(shl(3, sub(0x20, length)), not(0)))\n        }\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        sum := add(x, y)\n        if gt(x, sum) { panic_error_0x11() }\n    }\n    function abi_encode_tuple_t_stringliteral_48efca4c133d4af809cbdea820ea2f4422813132b6936873e13dbb833f6fc66c__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 27)\n        mstore(add(headStart, 64), \"Cooldown period not elapsed\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), value2)\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n}","id":25,"language":"Yul","name":"#utility.yul"}],"linkReferences":{},"object":"61016060405234801561001157600080fd5b50604051806040016040528060098152602001682820a2102a37b5b2b760b91b81525080604051806040016040528060018152602001603160f81b815250604051806040016040528060098152602001682820a2102a37b5b2b760b91b8152506040518060400160405280600381526020016214105160ea1b815250816003908161009c9190610605565b5060046100a98282610605565b506100b9915083905060056101ef565b610120526100c88160066101ef565b61014052815160208084019190912060e052815190820120610100524660a05261015560e05161010051604080517f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f60208201529081019290925260608201524660808201523060a082015260009060c00160405160208183030381529060405280519060200120905090565b60805250503060c0525061016a600033610222565b506101957f65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a33610222565b506101c07fa49807205ce4d355092ef5a8a18f56e8913cf4a201fbe287825b095693c2177533610222565b506101e4336101d16012600a6107c0565b6101df90633b9aca006107d6565b6102d0565b610e10600b55610872565b600060208351101561020b576102048361030f565b905061021c565b816102168482610605565b5060ff90505b92915050565b60008281526009602090815260408083206001600160a01b038516845290915281205460ff166102c85760008381526009602090815260408083206001600160a01b03861684529091529020805460ff191660011790556102803390565b6001600160a01b0316826001600160a01b0316847f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a450600161021c565b50600061021c565b6001600160a01b0382166102ff5760405163ec442f0560e01b8152600060048201526024015b60405180910390fd5b61030b6000838361034d565b5050565b600080829050601f8151111561033a578260405163305a27a960e01b81526004016102f691906107ed565b80516103458261083b565b179392505050565b610355610417565b6001600160a01b0383166000908152600d602052604090205460ff161561040757600b546001600160a01b0384166000908152600c602052604090205461039c919061085f565b4210156103eb5760405162461bcd60e51b815260206004820152601b60248201527f436f6f6c646f776e20706572696f64206e6f7420656c6170736564000000000060448201526064016102f6565b6001600160a01b0383166000908152600c602052604090204290555b61041283838361043d565b505050565b60085460ff161561043b5760405163d93c066560e01b815260040160405180910390fd5b565b6001600160a01b03831661046857806002600082825461045d919061085f565b909155506104da9050565b6001600160a01b038316600090815260208190526040902054818110156104bb5760405163391434e360e21b81526001600160a01b038516600482015260248101829052604481018390526064016102f6565b6001600160a01b03841660009081526020819052604090209082900390555b6001600160a01b0382166104f657600280548290039055610515565b6001600160a01b03821660009081526020819052604090208054820190555b816001600160a01b0316836001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8360405161055a91815260200190565b60405180910390a3505050565b634e487b7160e01b600052604160045260246000fd5b600181811c9082168061059157607f821691505b6020821081036105b157634e487b7160e01b600052602260045260246000fd5b50919050565b601f82111561041257806000526020600020601f840160051c810160208510156105de5750805b601f840160051c820191505b818110156105fe57600081556001016105ea565b5050505050565b81516001600160401b0381111561061e5761061e610567565b6106328161062c845461057d565b846105b7565b6020601f821160018114610666576000831561064e5750848201515b600019600385901b1c1916600184901b1784556105fe565b600084815260208120601f198516915b828110156106965787850151825560209485019460019092019101610676565b50848210156106b45786840151600019600387901b60f8161c191681555b50505050600190811b01905550565b634e487b7160e01b600052601160045260246000fd5b6001815b6001841115610714578085048111156106f8576106f86106c3565b600184161561070657908102905b60019390931c9280026106dd565b935093915050565b60008261072b5750600161021c565b816107385750600061021c565b816001811461074e576002811461075857610774565b600191505061021c565b60ff841115610769576107696106c3565b50506001821b61021c565b5060208310610133831016604e8410600b8410161715610797575081810a61021c565b6107a460001984846106d9565b80600019048211156107b8576107b86106c3565b029392505050565b60006107cf60ff84168361071c565b9392505050565b808202811582820484141761021c5761021c6106c3565b602081526000825180602084015260005b8181101561081b57602081860181015160408684010152016107fe565b506000604082850101526040601f19601f83011684010191505092915050565b805160208083015191908110156105b15760001960209190910360031b1b16919050565b8082018082111561021c5761021c6106c3565b60805160a05160c05160e051610100516101205161014051611b3b6108cc600039600061105e0152600061103101526000610edd01526000610eb501526000610e1001526000610e3a01526000610e640152611b3b6000f3fe608060405234801561001057600080fd5b50600436106101fb5760003560e01c80637ecebe001161011a57806395d89b41116100ad578063c3085a3e1161007c578063c3085a3e14610448578063d505accf1461045b578063d547741f1461046e578063dd62ed3e14610481578063e63ab1e9146104ba57600080fd5b806395d89b41146103fa578063a217fddf14610402578063a84173ae1461040a578063a9059cbb1461043557600080fd5b806388d695b2116100e957806388d695b2146103a15780638fc022a6146103b457806391d14854146103c757806391fc1f2c146103da57600080fd5b80637ecebe001461035857806380ea3de11461036b5780638456cb591461037e57806384b0196e1461038657600080fd5b80632f2ff15d116101925780633f4ba83a116101615780633f4ba83a146103075780635c975abb1461030f57806370a082311461031a57806375b238fc1461034357600080fd5b80632f2ff15d146102c8578063313ce567146102dd5780633644e515146102ec57806336568abe146102f457600080fd5b806318160ddd116101ce57806318160ddd1461026757806323b872dd1461026f578063248a9ca3146102825780632f206068146102a557600080fd5b806301ffc9a71461020057806304646a491461022857806306fdde031461023f578063095ea7b314610254575b600080fd5b61021361020e3660046116c3565b6104e1565b60405190151581526020015b60405180910390f35b610231600b5481565b60405190815260200161021f565b6102476104f2565b60405161021f919061173a565b610213610262366004611769565b610584565b600254610231565b61021361027d366004611793565b61059c565b6102316102903660046117d0565b60009081526009602052604090206001015490565b6102136102b33660046117e9565b600d6020526000908152604090205460ff1681565b6102db6102d6366004611804565b6105c0565b005b6040516012815260200161021f565b6102316105eb565b6102db610302366004611804565b6105fa565b6102db610632565b60085460ff16610213565b6102316103283660046117e9565b6001600160a01b031660009081526020819052604090205490565b610231600080516020611ae683398151915281565b6102316103663660046117e9565b610667565b6102db6103793660046117d0565b610685565b6102db61072e565b61038e610760565b60405161021f9796959493929190611830565b6102db6103af366004611914565b6107a6565b6102db6103c2366004611985565b610981565b6102136103d5366004611804565b6109f9565b6102316103e83660046117e9565b600c6020526000908152604090205481565b610247610a24565b610231600081565b600a5461041d906001600160a01b031681565b6040516001600160a01b03909116815260200161021f565b610213610443366004611769565b610a33565b6102db6104563660046117e9565b610a41565b6102db6104693660046119c1565b610aec565b6102db61047c366004611804565b610c26565b61023161048f366004611a34565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6102317f65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a81565b60006104ec82610c4b565b92915050565b60606003805461050190611a5e565b80601f016020809104026020016040519081016040528092919081815260200182805461052d90611a5e565b801561057a5780601f1061054f5761010080835404028352916020019161057a565b820191906000526020600020905b81548152906001019060200180831161055d57829003601f168201915b5050505050905090565b600033610592818585610c80565b5060019392505050565b6000336105aa858285610c8d565b6105b5858585610d06565b506001949350505050565b6000828152600960205260409020600101546105db81610d65565b6105e58383610d6f565b50505050565b60006105f5610e03565b905090565b6001600160a01b03811633146106235760405163334bd91960e11b815260040160405180910390fd5b61062d8282610f2e565b505050565b7f65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a61065c81610d65565b610664610f9b565b50565b6001600160a01b0381166000908152600760205260408120546104ec565b600080516020611ae683398151915261069d81610d65565b600082116106f25760405162461bcd60e51b815260206004820152601760248201527f496e76616c696420636f6f6c646f776e20706572696f6400000000000000000060448201526064015b60405180910390fd5b600b8290556040518281527f9f48766a1862aa51c434884dd5ccdd794719e403e0da740bb075991e6cde9d6e9060200160405180910390a15050565b7f65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a61075881610d65565b610664610fed565b60006060806000806000606061077461102a565b61077c611057565b60408051600080825260208201909252600f60f81b9b939a50919850469750309650945092509050565b6107ae611084565b8281146107f65760405162461bcd60e51b8152602060048201526016602482015275082e4e4c2f2e640d8cadccee8d040dad2e6dac2e8c6d60531b60448201526064016106e9565b6000805b828110156108305783838281811061081457610814611a98565b90506020020135826108269190611aae565b91506001016107fa565b50336000908152602081905260409020548111156108875760405162461bcd60e51b8152602060048201526014602482015273496e73756666696369656e742062616c616e636560601b60448201526064016106e9565b336000908152600d602052604090205460ff161561090b57600b54336000908152600c60205260409020546108bc9190611aae565b42101561090b5760405162461bcd60e51b815260206004820152601b60248201527f436f6f6c646f776e20706572696f64206e6f7420656c6170736564000000000060448201526064016106e9565b60005b848110156109675761095f3387878481811061092c5761092c611a98565b905060200201602081019061094191906117e9565b86868581811061095357610953611a98565b90506020020135610d06565b60010161090e565b5050336000908152600c6020526040902042905550505050565b600080516020611ae683398151915261099981610d65565b6001600160a01b0383166000818152600d6020908152604091829020805460ff191686151590811790915591519182527f88442d1f3abc99bf4a378fef853870decce17c14f3025385a762518e644012e1910160405180910390a2505050565b60009182526009602090815260408084206001600160a01b0393909316845291905290205460ff1690565b60606004805461050190611a5e565b600033610592818585610d06565b600080516020611ae6833981519152610a5981610d65565b6001600160a01b038216610aa15760405162461bcd60e51b815260206004820152600f60248201526e496e76616c6964206164647265737360881b60448201526064016106e9565b600a80546001600160a01b0319166001600160a01b0384169081179091556040517feb9531f1025dff97cad08fa04d87d1982f6da47ad87bc18822a3dd4e85996b7290600090a25050565b83421115610b105760405163313c898160e11b8152600481018590526024016106e9565b60007f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9888888610b5d8c6001600160a01b0316600090815260076020526040902080546001810190915590565b6040805160208101969096526001600160a01b0394851690860152929091166060840152608083015260a082015260c0810186905260e0016040516020818303038152906040528051906020012090506000610bb8826110aa565b90506000610bc8828787876110d7565b9050896001600160a01b0316816001600160a01b031614610c0f576040516325c0072360e11b81526001600160a01b0380831660048301528b1660248201526044016106e9565b610c1a8a8a8a610c80565b50505050505050505050565b600082815260096020526040902060010154610c4181610d65565b6105e58383610f2e565b60006001600160e01b03198216637965db0b60e01b14806104ec57506301ffc9a760e01b6001600160e01b03198316146104ec565b61062d8383836001611105565b6001600160a01b038381166000908152600160209081526040808320938616835292905220546000198110156105e55781811015610cf757604051637dc7a0d960e11b81526001600160a01b038416600482015260248101829052604481018390526064016106e9565b6105e584848484036000611105565b6001600160a01b038316610d3057604051634b637e8f60e11b8152600060048201526024016106e9565b6001600160a01b038216610d5a5760405163ec442f0560e01b8152600060048201526024016106e9565b61062d8383836111da565b610664813361129f565b6000610d7b83836109f9565b610dfb5760008381526009602090815260408083206001600160a01b03861684529091529020805460ff19166001179055610db33390565b6001600160a01b0316826001600160a01b0316847f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45060016104ec565b5060006104ec565b6000306001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016148015610e5c57507f000000000000000000000000000000000000000000000000000000000000000046145b15610e8657507f000000000000000000000000000000000000000000000000000000000000000090565b6105f5604080517f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f60208201527f0000000000000000000000000000000000000000000000000000000000000000918101919091527f000000000000000000000000000000000000000000000000000000000000000060608201524660808201523060a082015260009060c00160405160208183030381529060405280519060200120905090565b6000610f3a83836109f9565b15610dfb5760008381526009602090815260408083206001600160a01b0386168085529252808320805460ff1916905551339286917ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b9190a45060016104ec565b610fa36112dc565b6008805460ff191690557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa335b6040516001600160a01b03909116815260200160405180910390a1565b610ff5611084565b6008805460ff191660011790557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258610fd03390565b60606105f57f000000000000000000000000000000000000000000000000000000000000000060056112ff565b60606105f57f000000000000000000000000000000000000000000000000000000000000000060066112ff565b60085460ff16156110a85760405163d93c066560e01b815260040160405180910390fd5b565b60006104ec6110b7610e03565b8360405161190160f01b8152600281019290925260228201526042902090565b6000806000806110e9888888886113aa565b9250925092506110f98282611479565b50909695505050505050565b6001600160a01b03841661112f5760405163e602df0560e01b8152600060048201526024016106e9565b6001600160a01b03831661115957604051634a1406b160e11b8152600060048201526024016106e9565b6001600160a01b03808516600090815260016020908152604080832093871683529290522082905580156105e557826001600160a01b0316846001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925846040516111cc91815260200190565b60405180910390a350505050565b6111e2611084565b6001600160a01b0383166000908152600d602052604090205460ff161561129457600b546001600160a01b0384166000908152600c60205260409020546112299190611aae565b4210156112785760405162461bcd60e51b815260206004820152601b60248201527f436f6f6c646f776e20706572696f64206e6f7420656c6170736564000000000060448201526064016106e9565b6001600160a01b0383166000908152600c602052604090204290555b61062d838383611532565b6112a982826109f9565b6112d85760405163e2517d3f60e01b81526001600160a01b0382166004820152602481018390526044016106e9565b5050565b60085460ff166110a857604051638dfc202b60e01b815260040160405180910390fd5b606060ff8314611319576113128361165c565b90506104ec565b81805461132590611a5e565b80601f016020809104026020016040519081016040528092919081815260200182805461135190611a5e565b801561139e5780601f106113735761010080835404028352916020019161139e565b820191906000526020600020905b81548152906001019060200180831161138157829003601f168201915b505050505090506104ec565b600080807f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a08411156113e5575060009150600390508261146f565b604080516000808252602082018084528a905260ff891692820192909252606081018790526080810186905260019060a0016020604051602081039080840390855afa158015611439573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b0381166114655750600092506001915082905061146f565b9250600091508190505b9450945094915050565b600082600381111561148d5761148d611acf565b03611496575050565b60018260038111156114aa576114aa611acf565b036114c85760405163f645eedf60e01b815260040160405180910390fd5b60028260038111156114dc576114dc611acf565b036114fd5760405163fce698f760e01b8152600481018290526024016106e9565b600382600381111561151157611511611acf565b036112d8576040516335e2f38360e21b8152600481018290526024016106e9565b6001600160a01b03831661155d5780600260008282546115529190611aae565b909155506115cf9050565b6001600160a01b038316600090815260208190526040902054818110156115b05760405163391434e360e21b81526001600160a01b038516600482015260248101829052604481018390526064016106e9565b6001600160a01b03841660009081526020819052604090209082900390555b6001600160a01b0382166115eb5760028054829003905561160a565b6001600160a01b03821660009081526020819052604090208054820190555b816001600160a01b0316836001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8360405161164f91815260200190565b60405180910390a3505050565b606060006116698361169b565b604080516020808252818301909252919250600091906020820181803683375050509182525060208101929092525090565b600060ff8216601f8111156104ec57604051632cd44ac360e21b815260040160405180910390fd5b6000602082840312156116d557600080fd5b81356001600160e01b0319811681146116ed57600080fd5b9392505050565b6000815180845260005b8181101561171a576020818501810151868301820152016116fe565b506000602082860101526020601f19601f83011685010191505092915050565b6020815260006116ed60208301846116f4565b80356001600160a01b038116811461176457600080fd5b919050565b6000806040838503121561177c57600080fd5b6117858361174d565b946020939093013593505050565b6000806000606084860312156117a857600080fd5b6117b18461174d565b92506117bf6020850161174d565b929592945050506040919091013590565b6000602082840312156117e257600080fd5b5035919050565b6000602082840312156117fb57600080fd5b6116ed8261174d565b6000806040838503121561181757600080fd5b823591506118276020840161174d565b90509250929050565b60ff60f81b8816815260e06020820152600061184f60e08301896116f4565b828103604084015261186181896116f4565b606084018890526001600160a01b038716608085015260a0840186905283810360c08501528451808252602080870193509091019060005b818110156118b7578351835260209384019390920191600101611899565b50909b9a5050505050505050505050565b60008083601f8401126118da57600080fd5b50813567ffffffffffffffff8111156118f257600080fd5b6020830191508360208260051b850101111561190d57600080fd5b9250929050565b6000806000806040858703121561192a57600080fd5b843567ffffffffffffffff81111561194157600080fd5b61194d878288016118c8565b909550935050602085013567ffffffffffffffff81111561196d57600080fd5b611979878288016118c8565b95989497509550505050565b6000806040838503121561199857600080fd5b6119a18361174d565b9150602083013580151581146119b657600080fd5b809150509250929050565b600080600080600080600060e0888a0312156119dc57600080fd5b6119e58861174d565b96506119f36020890161174d565b95506040880135945060608801359350608088013560ff81168114611a1757600080fd5b9699959850939692959460a0840135945060c09093013592915050565b60008060408385031215611a4757600080fd5b611a508361174d565b91506118276020840161174d565b600181811c90821680611a7257607f821691505b602082108103611a9257634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052603260045260246000fd5b808201808211156104ec57634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052602160045260246000fdfea49807205ce4d355092ef5a8a18f56e8913cf4a201fbe287825b095693c21775a2646970667358221220cd4722eb10b78a18a7747fa4f08d88d3e48db4881f48248bd9c3e3dcaa2f088664736f6c634300081c0033","opcodes":"PUSH2 0x160 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x9 DUP2 MSTORE PUSH1 0x20 ADD PUSH9 0x2820A2102A37B5B2B7 PUSH1 0xB9 SHL DUP2 MSTORE POP DUP1 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x31 PUSH1 0xF8 SHL DUP2 MSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x9 DUP2 MSTORE PUSH1 0x20 ADD PUSH9 0x2820A2102A37B5B2B7 PUSH1 0xB9 SHL DUP2 MSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x3 DUP2 MSTORE PUSH1 0x20 ADD PUSH3 0x141051 PUSH1 0xEA SHL DUP2 MSTORE POP DUP2 PUSH1 0x3 SWAP1 DUP2 PUSH2 0x9C SWAP2 SWAP1 PUSH2 0x605 JUMP JUMPDEST POP PUSH1 0x4 PUSH2 0xA9 DUP3 DUP3 PUSH2 0x605 JUMP JUMPDEST POP PUSH2 0xB9 SWAP2 POP DUP4 SWAP1 POP PUSH1 0x5 PUSH2 0x1EF JUMP JUMPDEST PUSH2 0x120 MSTORE PUSH2 0xC8 DUP2 PUSH1 0x6 PUSH2 0x1EF JUMP JUMPDEST PUSH2 0x140 MSTORE DUP2 MLOAD PUSH1 0x20 DUP1 DUP5 ADD SWAP2 SWAP1 SWAP2 KECCAK256 PUSH1 0xE0 MSTORE DUP2 MLOAD SWAP1 DUP3 ADD KECCAK256 PUSH2 0x100 MSTORE CHAINID PUSH1 0xA0 MSTORE PUSH2 0x155 PUSH1 0xE0 MLOAD PUSH2 0x100 MLOAD PUSH1 0x40 DUP1 MLOAD PUSH32 0x8B73C3C69BB8FE3D512ECC4CF759CC79239F7B179B0FFACAA9A75D522B39400F PUSH1 0x20 DUP3 ADD MSTORE SWAP1 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x60 DUP3 ADD MSTORE CHAINID PUSH1 0x80 DUP3 ADD MSTORE ADDRESS PUSH1 0xA0 DUP3 ADD MSTORE PUSH1 0x0 SWAP1 PUSH1 0xC0 ADD PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x80 MSTORE POP POP ADDRESS PUSH1 0xC0 MSTORE POP PUSH2 0x16A PUSH1 0x0 CALLER PUSH2 0x222 JUMP JUMPDEST POP PUSH2 0x195 PUSH32 0x65D7A28E3265B37A6474929F336521B332C1681B933F6CB9F3376673440D862A CALLER PUSH2 0x222 JUMP JUMPDEST POP PUSH2 0x1C0 PUSH32 0xA49807205CE4D355092EF5A8A18F56E8913CF4A201FBE287825B095693C21775 CALLER PUSH2 0x222 JUMP JUMPDEST POP PUSH2 0x1E4 CALLER PUSH2 0x1D1 PUSH1 0x12 PUSH1 0xA PUSH2 0x7C0 JUMP JUMPDEST PUSH2 0x1DF SWAP1 PUSH4 0x3B9ACA00 PUSH2 0x7D6 JUMP JUMPDEST PUSH2 0x2D0 JUMP JUMPDEST PUSH2 0xE10 PUSH1 0xB SSTORE PUSH2 0x872 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP4 MLOAD LT ISZERO PUSH2 0x20B JUMPI PUSH2 0x204 DUP4 PUSH2 0x30F JUMP JUMPDEST SWAP1 POP PUSH2 0x21C JUMP JUMPDEST DUP2 PUSH2 0x216 DUP5 DUP3 PUSH2 0x605 JUMP JUMPDEST POP PUSH1 0xFF SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0x2C8 JUMPI PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH2 0x280 CALLER SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP PUSH1 0x1 PUSH2 0x21C JUMP JUMPDEST POP PUSH1 0x0 PUSH2 0x21C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x2FF JUMPI PUSH1 0x40 MLOAD PUSH4 0xEC442F05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x30B PUSH1 0x0 DUP4 DUP4 PUSH2 0x34D JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 SWAP1 POP PUSH1 0x1F DUP2 MLOAD GT ISZERO PUSH2 0x33A JUMPI DUP3 PUSH1 0x40 MLOAD PUSH4 0x305A27A9 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2F6 SWAP2 SWAP1 PUSH2 0x7ED JUMP JUMPDEST DUP1 MLOAD PUSH2 0x345 DUP3 PUSH2 0x83B JUMP JUMPDEST OR SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x355 PUSH2 0x417 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xD PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x407 JUMPI PUSH1 0xB SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xC PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x39C SWAP2 SWAP1 PUSH2 0x85F JUMP JUMPDEST TIMESTAMP LT ISZERO PUSH2 0x3EB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x436F6F6C646F776E20706572696F64206E6F7420656C61707365640000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x2F6 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xC PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 TIMESTAMP SWAP1 SSTORE JUMPDEST PUSH2 0x412 DUP4 DUP4 DUP4 PUSH2 0x43D JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x8 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x43B JUMPI PUSH1 0x40 MLOAD PUSH4 0xD93C0665 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x468 JUMPI DUP1 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x45D SWAP2 SWAP1 PUSH2 0x85F JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH2 0x4DA SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0x4BB JUMPI PUSH1 0x40 MLOAD PUSH4 0x391434E3 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x44 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x64 ADD PUSH2 0x2F6 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SWAP1 DUP3 SWAP1 SUB SWAP1 SSTORE JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x4F6 JUMPI PUSH1 0x2 DUP1 SLOAD DUP3 SWAP1 SUB SWAP1 SSTORE PUSH2 0x515 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD DUP3 ADD SWAP1 SSTORE JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x55A SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x591 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x5B1 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x412 JUMPI DUP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x5DE JUMPI POP DUP1 JUMPDEST PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP3 ADD SWAP2 POP JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x5FE JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x5EA JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x61E JUMPI PUSH2 0x61E PUSH2 0x567 JUMP JUMPDEST PUSH2 0x632 DUP2 PUSH2 0x62C DUP5 SLOAD PUSH2 0x57D JUMP JUMPDEST DUP5 PUSH2 0x5B7 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x1F DUP3 GT PUSH1 0x1 DUP2 EQ PUSH2 0x666 JUMPI PUSH1 0x0 DUP4 ISZERO PUSH2 0x64E JUMPI POP DUP5 DUP3 ADD MLOAD JUMPDEST PUSH1 0x0 NOT PUSH1 0x3 DUP6 SWAP1 SHL SHR NOT AND PUSH1 0x1 DUP5 SWAP1 SHL OR DUP5 SSTORE PUSH2 0x5FE JUMP JUMPDEST PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F NOT DUP6 AND SWAP2 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x696 JUMPI DUP8 DUP6 ADD MLOAD DUP3 SSTORE PUSH1 0x20 SWAP5 DUP6 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP3 ADD SWAP2 ADD PUSH2 0x676 JUMP JUMPDEST POP DUP5 DUP3 LT ISZERO PUSH2 0x6B4 JUMPI DUP7 DUP5 ADD MLOAD PUSH1 0x0 NOT PUSH1 0x3 DUP8 SWAP1 SHL PUSH1 0xF8 AND SHR NOT AND DUP2 SSTORE JUMPDEST POP POP POP POP PUSH1 0x1 SWAP1 DUP2 SHL ADD SWAP1 SSTORE POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1 DUP2 JUMPDEST PUSH1 0x1 DUP5 GT ISZERO PUSH2 0x714 JUMPI DUP1 DUP6 DIV DUP2 GT ISZERO PUSH2 0x6F8 JUMPI PUSH2 0x6F8 PUSH2 0x6C3 JUMP JUMPDEST PUSH1 0x1 DUP5 AND ISZERO PUSH2 0x706 JUMPI SWAP1 DUP2 MUL SWAP1 JUMPDEST PUSH1 0x1 SWAP4 SWAP1 SWAP4 SHR SWAP3 DUP1 MUL PUSH2 0x6DD JUMP JUMPDEST SWAP4 POP SWAP4 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x72B JUMPI POP PUSH1 0x1 PUSH2 0x21C JUMP JUMPDEST DUP2 PUSH2 0x738 JUMPI POP PUSH1 0x0 PUSH2 0x21C JUMP JUMPDEST DUP2 PUSH1 0x1 DUP2 EQ PUSH2 0x74E JUMPI PUSH1 0x2 DUP2 EQ PUSH2 0x758 JUMPI PUSH2 0x774 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP PUSH2 0x21C JUMP JUMPDEST PUSH1 0xFF DUP5 GT ISZERO PUSH2 0x769 JUMPI PUSH2 0x769 PUSH2 0x6C3 JUMP JUMPDEST POP POP PUSH1 0x1 DUP3 SHL PUSH2 0x21C JUMP JUMPDEST POP PUSH1 0x20 DUP4 LT PUSH2 0x133 DUP4 LT AND PUSH1 0x4E DUP5 LT PUSH1 0xB DUP5 LT AND OR ISZERO PUSH2 0x797 JUMPI POP DUP2 DUP2 EXP PUSH2 0x21C JUMP JUMPDEST PUSH2 0x7A4 PUSH1 0x0 NOT DUP5 DUP5 PUSH2 0x6D9 JUMP JUMPDEST DUP1 PUSH1 0x0 NOT DIV DUP3 GT ISZERO PUSH2 0x7B8 JUMPI PUSH2 0x7B8 PUSH2 0x6C3 JUMP JUMPDEST MUL SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x7CF PUSH1 0xFF DUP5 AND DUP4 PUSH2 0x71C JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST DUP1 DUP3 MUL DUP2 ISZERO DUP3 DUP3 DIV DUP5 EQ OR PUSH2 0x21C JUMPI PUSH2 0x21C PUSH2 0x6C3 JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 DUP3 MLOAD DUP1 PUSH1 0x20 DUP5 ADD MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x81B JUMPI PUSH1 0x20 DUP2 DUP7 ADD DUP2 ADD MLOAD PUSH1 0x40 DUP7 DUP5 ADD ADD MSTORE ADD PUSH2 0x7FE JUMP JUMPDEST POP PUSH1 0x0 PUSH1 0x40 DUP3 DUP6 ADD ADD MSTORE PUSH1 0x40 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND DUP5 ADD ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 MLOAD PUSH1 0x20 DUP1 DUP4 ADD MLOAD SWAP2 SWAP1 DUP2 LT ISZERO PUSH2 0x5B1 JUMPI PUSH1 0x0 NOT PUSH1 0x20 SWAP2 SWAP1 SWAP2 SUB PUSH1 0x3 SHL SHL AND SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x21C JUMPI PUSH2 0x21C PUSH2 0x6C3 JUMP JUMPDEST PUSH1 0x80 MLOAD PUSH1 0xA0 MLOAD PUSH1 0xC0 MLOAD PUSH1 0xE0 MLOAD PUSH2 0x100 MLOAD PUSH2 0x120 MLOAD PUSH2 0x140 MLOAD PUSH2 0x1B3B PUSH2 0x8CC PUSH1 0x0 CODECOPY PUSH1 0x0 PUSH2 0x105E ADD MSTORE PUSH1 0x0 PUSH2 0x1031 ADD MSTORE PUSH1 0x0 PUSH2 0xEDD ADD MSTORE PUSH1 0x0 PUSH2 0xEB5 ADD MSTORE PUSH1 0x0 PUSH2 0xE10 ADD MSTORE PUSH1 0x0 PUSH2 0xE3A ADD MSTORE PUSH1 0x0 PUSH2 0xE64 ADD MSTORE PUSH2 0x1B3B PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x1FB JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x7ECEBE00 GT PUSH2 0x11A JUMPI DUP1 PUSH4 0x95D89B41 GT PUSH2 0xAD JUMPI DUP1 PUSH4 0xC3085A3E GT PUSH2 0x7C JUMPI DUP1 PUSH4 0xC3085A3E EQ PUSH2 0x448 JUMPI DUP1 PUSH4 0xD505ACCF EQ PUSH2 0x45B JUMPI DUP1 PUSH4 0xD547741F EQ PUSH2 0x46E JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x481 JUMPI DUP1 PUSH4 0xE63AB1E9 EQ PUSH2 0x4BA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x3FA JUMPI DUP1 PUSH4 0xA217FDDF EQ PUSH2 0x402 JUMPI DUP1 PUSH4 0xA84173AE EQ PUSH2 0x40A JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x435 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x88D695B2 GT PUSH2 0xE9 JUMPI DUP1 PUSH4 0x88D695B2 EQ PUSH2 0x3A1 JUMPI DUP1 PUSH4 0x8FC022A6 EQ PUSH2 0x3B4 JUMPI DUP1 PUSH4 0x91D14854 EQ PUSH2 0x3C7 JUMPI DUP1 PUSH4 0x91FC1F2C EQ PUSH2 0x3DA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x7ECEBE00 EQ PUSH2 0x358 JUMPI DUP1 PUSH4 0x80EA3DE1 EQ PUSH2 0x36B JUMPI DUP1 PUSH4 0x8456CB59 EQ PUSH2 0x37E JUMPI DUP1 PUSH4 0x84B0196E EQ PUSH2 0x386 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x2F2FF15D GT PUSH2 0x192 JUMPI DUP1 PUSH4 0x3F4BA83A GT PUSH2 0x161 JUMPI DUP1 PUSH4 0x3F4BA83A EQ PUSH2 0x307 JUMPI DUP1 PUSH4 0x5C975ABB EQ PUSH2 0x30F JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x31A JUMPI DUP1 PUSH4 0x75B238FC EQ PUSH2 0x343 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x2F2FF15D EQ PUSH2 0x2C8 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x2DD JUMPI DUP1 PUSH4 0x3644E515 EQ PUSH2 0x2EC JUMPI DUP1 PUSH4 0x36568ABE EQ PUSH2 0x2F4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x18160DDD GT PUSH2 0x1CE JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x267 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x26F JUMPI DUP1 PUSH4 0x248A9CA3 EQ PUSH2 0x282 JUMPI DUP1 PUSH4 0x2F206068 EQ PUSH2 0x2A5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x200 JUMPI DUP1 PUSH4 0x4646A49 EQ PUSH2 0x228 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x23F JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x254 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x213 PUSH2 0x20E CALLDATASIZE PUSH1 0x4 PUSH2 0x16C3 JUMP JUMPDEST PUSH2 0x4E1 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x231 PUSH1 0xB SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x21F JUMP JUMPDEST PUSH2 0x247 PUSH2 0x4F2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x21F SWAP2 SWAP1 PUSH2 0x173A JUMP JUMPDEST PUSH2 0x213 PUSH2 0x262 CALLDATASIZE PUSH1 0x4 PUSH2 0x1769 JUMP JUMPDEST PUSH2 0x584 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH2 0x231 JUMP JUMPDEST PUSH2 0x213 PUSH2 0x27D CALLDATASIZE PUSH1 0x4 PUSH2 0x1793 JUMP JUMPDEST PUSH2 0x59C JUMP JUMPDEST PUSH2 0x231 PUSH2 0x290 CALLDATASIZE PUSH1 0x4 PUSH2 0x17D0 JUMP JUMPDEST PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x213 PUSH2 0x2B3 CALLDATASIZE PUSH1 0x4 PUSH2 0x17E9 JUMP JUMPDEST PUSH1 0xD PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH2 0x2DB PUSH2 0x2D6 CALLDATASIZE PUSH1 0x4 PUSH2 0x1804 JUMP JUMPDEST PUSH2 0x5C0 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x21F JUMP JUMPDEST PUSH2 0x231 PUSH2 0x5EB JUMP JUMPDEST PUSH2 0x2DB PUSH2 0x302 CALLDATASIZE PUSH1 0x4 PUSH2 0x1804 JUMP JUMPDEST PUSH2 0x5FA JUMP JUMPDEST PUSH2 0x2DB PUSH2 0x632 JUMP JUMPDEST PUSH1 0x8 SLOAD PUSH1 0xFF AND PUSH2 0x213 JUMP JUMPDEST PUSH2 0x231 PUSH2 0x328 CALLDATASIZE PUSH1 0x4 PUSH2 0x17E9 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x231 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1AE6 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP2 JUMP JUMPDEST PUSH2 0x231 PUSH2 0x366 CALLDATASIZE PUSH1 0x4 PUSH2 0x17E9 JUMP JUMPDEST PUSH2 0x667 JUMP JUMPDEST PUSH2 0x2DB PUSH2 0x379 CALLDATASIZE PUSH1 0x4 PUSH2 0x17D0 JUMP JUMPDEST PUSH2 0x685 JUMP JUMPDEST PUSH2 0x2DB PUSH2 0x72E JUMP JUMPDEST PUSH2 0x38E PUSH2 0x760 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x21F SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1830 JUMP JUMPDEST PUSH2 0x2DB PUSH2 0x3AF CALLDATASIZE PUSH1 0x4 PUSH2 0x1914 JUMP JUMPDEST PUSH2 0x7A6 JUMP JUMPDEST PUSH2 0x2DB PUSH2 0x3C2 CALLDATASIZE PUSH1 0x4 PUSH2 0x1985 JUMP JUMPDEST PUSH2 0x981 JUMP JUMPDEST PUSH2 0x213 PUSH2 0x3D5 CALLDATASIZE PUSH1 0x4 PUSH2 0x1804 JUMP JUMPDEST PUSH2 0x9F9 JUMP JUMPDEST PUSH2 0x231 PUSH2 0x3E8 CALLDATASIZE PUSH1 0x4 PUSH2 0x17E9 JUMP JUMPDEST PUSH1 0xC PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x247 PUSH2 0xA24 JUMP JUMPDEST PUSH2 0x231 PUSH1 0x0 DUP2 JUMP JUMPDEST PUSH1 0xA SLOAD PUSH2 0x41D SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x21F JUMP JUMPDEST PUSH2 0x213 PUSH2 0x443 CALLDATASIZE PUSH1 0x4 PUSH2 0x1769 JUMP JUMPDEST PUSH2 0xA33 JUMP JUMPDEST PUSH2 0x2DB PUSH2 0x456 CALLDATASIZE PUSH1 0x4 PUSH2 0x17E9 JUMP JUMPDEST PUSH2 0xA41 JUMP JUMPDEST PUSH2 0x2DB PUSH2 0x469 CALLDATASIZE PUSH1 0x4 PUSH2 0x19C1 JUMP JUMPDEST PUSH2 0xAEC JUMP JUMPDEST PUSH2 0x2DB PUSH2 0x47C CALLDATASIZE PUSH1 0x4 PUSH2 0x1804 JUMP JUMPDEST PUSH2 0xC26 JUMP JUMPDEST PUSH2 0x231 PUSH2 0x48F CALLDATASIZE PUSH1 0x4 PUSH2 0x1A34 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x231 PUSH32 0x65D7A28E3265B37A6474929F336521B332C1681B933F6CB9F3376673440D862A DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4EC DUP3 PUSH2 0xC4B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x501 SWAP1 PUSH2 0x1A5E JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x52D SWAP1 PUSH2 0x1A5E JUMP JUMPDEST DUP1 ISZERO PUSH2 0x57A JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x54F JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x57A JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x55D JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x592 DUP2 DUP6 DUP6 PUSH2 0xC80 JUMP JUMPDEST POP PUSH1 0x1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x5AA DUP6 DUP3 DUP6 PUSH2 0xC8D JUMP JUMPDEST PUSH2 0x5B5 DUP6 DUP6 DUP6 PUSH2 0xD06 JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH2 0x5DB DUP2 PUSH2 0xD65 JUMP JUMPDEST PUSH2 0x5E5 DUP4 DUP4 PUSH2 0xD6F JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5F5 PUSH2 0xE03 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND CALLER EQ PUSH2 0x623 JUMPI PUSH1 0x40 MLOAD PUSH4 0x334BD919 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x62D DUP3 DUP3 PUSH2 0xF2E JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH32 0x65D7A28E3265B37A6474929F336521B332C1681B933F6CB9F3376673440D862A PUSH2 0x65C DUP2 PUSH2 0xD65 JUMP JUMPDEST PUSH2 0x664 PUSH2 0xF9B JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH2 0x4EC JUMP JUMPDEST PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1AE6 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH2 0x69D DUP2 PUSH2 0xD65 JUMP JUMPDEST PUSH1 0x0 DUP3 GT PUSH2 0x6F2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E76616C696420636F6F6C646F776E20706572696F64000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0xB DUP3 SWAP1 SSTORE PUSH1 0x40 MLOAD DUP3 DUP2 MSTORE PUSH32 0x9F48766A1862AA51C434884DD5CCDD794719E403E0DA740BB075991E6CDE9D6E SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH32 0x65D7A28E3265B37A6474929F336521B332C1681B933F6CB9F3376673440D862A PUSH2 0x758 DUP2 PUSH2 0xD65 JUMP JUMPDEST PUSH2 0x664 PUSH2 0xFED JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 PUSH2 0x774 PUSH2 0x102A JUMP JUMPDEST PUSH2 0x77C PUSH2 0x1057 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x0 DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 SWAP3 MSTORE PUSH1 0xF PUSH1 0xF8 SHL SWAP12 SWAP4 SWAP11 POP SWAP2 SWAP9 POP CHAINID SWAP8 POP ADDRESS SWAP7 POP SWAP5 POP SWAP3 POP SWAP1 POP JUMP JUMPDEST PUSH2 0x7AE PUSH2 0x1084 JUMP JUMPDEST DUP3 DUP2 EQ PUSH2 0x7F6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x82E4E4C2F2E640D8CADCCEE8D040DAD2E6DAC2E8C6D PUSH1 0x53 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x6E9 JUMP JUMPDEST PUSH1 0x0 DUP1 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x830 JUMPI DUP4 DUP4 DUP3 DUP2 DUP2 LT PUSH2 0x814 JUMPI PUSH2 0x814 PUSH2 0x1A98 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD CALLDATALOAD DUP3 PUSH2 0x826 SWAP2 SWAP1 PUSH2 0x1AAE JUMP JUMPDEST SWAP2 POP PUSH1 0x1 ADD PUSH2 0x7FA JUMP JUMPDEST POP CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 GT ISZERO PUSH2 0x887 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x496E73756666696369656E742062616C616E6365 PUSH1 0x60 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x6E9 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xD PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x90B JUMPI PUSH1 0xB SLOAD CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xC PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x8BC SWAP2 SWAP1 PUSH2 0x1AAE JUMP JUMPDEST TIMESTAMP LT ISZERO PUSH2 0x90B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x436F6F6C646F776E20706572696F64206E6F7420656C61707365640000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x6E9 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP5 DUP2 LT ISZERO PUSH2 0x967 JUMPI PUSH2 0x95F CALLER DUP8 DUP8 DUP5 DUP2 DUP2 LT PUSH2 0x92C JUMPI PUSH2 0x92C PUSH2 0x1A98 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x941 SWAP2 SWAP1 PUSH2 0x17E9 JUMP JUMPDEST DUP7 DUP7 DUP6 DUP2 DUP2 LT PUSH2 0x953 JUMPI PUSH2 0x953 PUSH2 0x1A98 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD CALLDATALOAD PUSH2 0xD06 JUMP JUMPDEST PUSH1 0x1 ADD PUSH2 0x90E JUMP JUMPDEST POP POP CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xC PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 TIMESTAMP SWAP1 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1AE6 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH2 0x999 DUP2 PUSH2 0xD65 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0xD PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND DUP7 ISZERO ISZERO SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE SWAP2 MLOAD SWAP2 DUP3 MSTORE PUSH32 0x88442D1F3ABC99BF4A378FEF853870DECCE17C14F3025385A762518E644012E1 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x9 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 SWAP1 SWAP4 AND DUP5 MSTORE SWAP2 SWAP1 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x501 SWAP1 PUSH2 0x1A5E JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x592 DUP2 DUP6 DUP6 PUSH2 0xD06 JUMP JUMPDEST PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1AE6 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH2 0xA59 DUP2 PUSH2 0xD65 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xAA1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH15 0x496E76616C69642061646472657373 PUSH1 0x88 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x6E9 JUMP JUMPDEST PUSH1 0xA DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x40 MLOAD PUSH32 0xEB9531F1025DFF97CAD08FA04D87D1982F6DA47AD87BC18822A3DD4E85996B72 SWAP1 PUSH1 0x0 SWAP1 LOG2 POP POP JUMP JUMPDEST DUP4 TIMESTAMP GT ISZERO PUSH2 0xB10 JUMPI PUSH1 0x40 MLOAD PUSH4 0x313C8981 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP6 SWAP1 MSTORE PUSH1 0x24 ADD PUSH2 0x6E9 JUMP JUMPDEST PUSH1 0x0 PUSH32 0x6E71EDAE12B1B97F4D1F60370FEF10105FA2FAAE0126114A169C64845D6126C9 DUP9 DUP9 DUP9 PUSH2 0xB5D DUP13 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP2 ADD SWAP1 SWAP2 SSTORE SWAP1 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP2 ADD SWAP7 SWAP1 SWAP7 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP5 DUP6 AND SWAP1 DUP7 ADD MSTORE SWAP3 SWAP1 SWAP2 AND PUSH1 0x60 DUP5 ADD MSTORE PUSH1 0x80 DUP4 ADD MSTORE PUSH1 0xA0 DUP3 ADD MSTORE PUSH1 0xC0 DUP2 ADD DUP7 SWAP1 MSTORE PUSH1 0xE0 ADD PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP PUSH1 0x0 PUSH2 0xBB8 DUP3 PUSH2 0x10AA JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0xBC8 DUP3 DUP8 DUP8 DUP8 PUSH2 0x10D7 JUMP JUMPDEST SWAP1 POP DUP10 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0xC0F JUMPI PUSH1 0x40 MLOAD PUSH4 0x25C00723 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP4 AND PUSH1 0x4 DUP4 ADD MSTORE DUP12 AND PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 ADD PUSH2 0x6E9 JUMP JUMPDEST PUSH2 0xC1A DUP11 DUP11 DUP11 PUSH2 0xC80 JUMP JUMPDEST POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH2 0xC41 DUP2 PUSH2 0xD65 JUMP JUMPDEST PUSH2 0x5E5 DUP4 DUP4 PUSH2 0xF2E JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x7965DB0B PUSH1 0xE0 SHL EQ DUP1 PUSH2 0x4EC JUMPI POP PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP4 AND EQ PUSH2 0x4EC JUMP JUMPDEST PUSH2 0x62D DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x1105 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP7 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 SLOAD PUSH1 0x0 NOT DUP2 LT ISZERO PUSH2 0x5E5 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0xCF7 JUMPI PUSH1 0x40 MLOAD PUSH4 0x7DC7A0D9 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x44 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x64 ADD PUSH2 0x6E9 JUMP JUMPDEST PUSH2 0x5E5 DUP5 DUP5 DUP5 DUP5 SUB PUSH1 0x0 PUSH2 0x1105 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0xD30 JUMPI PUSH1 0x40 MLOAD PUSH4 0x4B637E8F PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x6E9 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xD5A JUMPI PUSH1 0x40 MLOAD PUSH4 0xEC442F05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x6E9 JUMP JUMPDEST PUSH2 0x62D DUP4 DUP4 DUP4 PUSH2 0x11DA JUMP JUMPDEST PUSH2 0x664 DUP2 CALLER PUSH2 0x129F JUMP JUMPDEST PUSH1 0x0 PUSH2 0xD7B DUP4 DUP4 PUSH2 0x9F9 JUMP JUMPDEST PUSH2 0xDFB JUMPI PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH2 0xDB3 CALLER SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP PUSH1 0x1 PUSH2 0x4EC JUMP JUMPDEST POP PUSH1 0x0 PUSH2 0x4EC JUMP JUMPDEST PUSH1 0x0 ADDRESS PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND EQ DUP1 ISZERO PUSH2 0xE5C JUMPI POP PUSH32 0x0 CHAINID EQ JUMPDEST ISZERO PUSH2 0xE86 JUMPI POP PUSH32 0x0 SWAP1 JUMP JUMPDEST PUSH2 0x5F5 PUSH1 0x40 DUP1 MLOAD PUSH32 0x8B73C3C69BB8FE3D512ECC4CF759CC79239F7B179B0FFACAA9A75D522B39400F PUSH1 0x20 DUP3 ADD MSTORE PUSH32 0x0 SWAP2 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH32 0x0 PUSH1 0x60 DUP3 ADD MSTORE CHAINID PUSH1 0x80 DUP3 ADD MSTORE ADDRESS PUSH1 0xA0 DUP3 ADD MSTORE PUSH1 0x0 SWAP1 PUSH1 0xC0 ADD PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xF3A DUP4 DUP4 PUSH2 0x9F9 JUMP JUMPDEST ISZERO PUSH2 0xDFB JUMPI PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND DUP1 DUP6 MSTORE SWAP3 MSTORE DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE MLOAD CALLER SWAP3 DUP7 SWAP2 PUSH32 0xF6391F5C32D9C69D2A47EA670B442974B53935D1EDC7FD64EB21E047A839171B SWAP2 SWAP1 LOG4 POP PUSH1 0x1 PUSH2 0x4EC JUMP JUMPDEST PUSH2 0xFA3 PUSH2 0x12DC JUMP JUMPDEST PUSH1 0x8 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE PUSH32 0x5DB9EE0A495BF2E6FF9C91A7834C1BA4FDD244A5E8AA4E537BD38AEAE4B073AA CALLER JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST PUSH2 0xFF5 PUSH2 0x1084 JUMP JUMPDEST PUSH1 0x8 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH32 0x62E78CEA01BEE320CD4E420270B5EA74000D11B0C9F74754EBDBFC544B05A258 PUSH2 0xFD0 CALLER SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH2 0x5F5 PUSH32 0x0 PUSH1 0x5 PUSH2 0x12FF JUMP JUMPDEST PUSH1 0x60 PUSH2 0x5F5 PUSH32 0x0 PUSH1 0x6 PUSH2 0x12FF JUMP JUMPDEST PUSH1 0x8 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x10A8 JUMPI PUSH1 0x40 MLOAD PUSH4 0xD93C0665 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4EC PUSH2 0x10B7 PUSH2 0xE03 JUMP JUMPDEST DUP4 PUSH1 0x40 MLOAD PUSH2 0x1901 PUSH1 0xF0 SHL DUP2 MSTORE PUSH1 0x2 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x22 DUP3 ADD MSTORE PUSH1 0x42 SWAP1 KECCAK256 SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH2 0x10E9 DUP9 DUP9 DUP9 DUP9 PUSH2 0x13AA JUMP JUMPDEST SWAP3 POP SWAP3 POP SWAP3 POP PUSH2 0x10F9 DUP3 DUP3 PUSH2 0x1479 JUMP JUMPDEST POP SWAP1 SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x112F JUMPI PUSH1 0x40 MLOAD PUSH4 0xE602DF05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x6E9 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x1159 JUMPI PUSH1 0x40 MLOAD PUSH4 0x4A1406B1 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x6E9 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP8 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 DUP3 SWAP1 SSTORE DUP1 ISZERO PUSH2 0x5E5 JUMPI DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0x11CC SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP JUMP JUMPDEST PUSH2 0x11E2 PUSH2 0x1084 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xD PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x1294 JUMPI PUSH1 0xB SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xC PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x1229 SWAP2 SWAP1 PUSH2 0x1AAE JUMP JUMPDEST TIMESTAMP LT ISZERO PUSH2 0x1278 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x436F6F6C646F776E20706572696F64206E6F7420656C61707365640000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x6E9 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xC PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 TIMESTAMP SWAP1 SSTORE JUMPDEST PUSH2 0x62D DUP4 DUP4 DUP4 PUSH2 0x1532 JUMP JUMPDEST PUSH2 0x12A9 DUP3 DUP3 PUSH2 0x9F9 JUMP JUMPDEST PUSH2 0x12D8 JUMPI PUSH1 0x40 MLOAD PUSH4 0xE2517D3F PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x44 ADD PUSH2 0x6E9 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x8 SLOAD PUSH1 0xFF AND PUSH2 0x10A8 JUMPI PUSH1 0x40 MLOAD PUSH4 0x8DFC202B PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x60 PUSH1 0xFF DUP4 EQ PUSH2 0x1319 JUMPI PUSH2 0x1312 DUP4 PUSH2 0x165C JUMP JUMPDEST SWAP1 POP PUSH2 0x4EC JUMP JUMPDEST DUP2 DUP1 SLOAD PUSH2 0x1325 SWAP1 PUSH2 0x1A5E JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x1351 SWAP1 PUSH2 0x1A5E JUMP JUMPDEST DUP1 ISZERO PUSH2 0x139E JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1373 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x139E JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x1381 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP PUSH2 0x4EC JUMP JUMPDEST PUSH1 0x0 DUP1 DUP1 PUSH32 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0 DUP5 GT ISZERO PUSH2 0x13E5 JUMPI POP PUSH1 0x0 SWAP2 POP PUSH1 0x3 SWAP1 POP DUP3 PUSH2 0x146F JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x0 DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD DUP1 DUP5 MSTORE DUP11 SWAP1 MSTORE PUSH1 0xFF DUP10 AND SWAP3 DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x60 DUP2 ADD DUP8 SWAP1 MSTORE PUSH1 0x80 DUP2 ADD DUP7 SWAP1 MSTORE PUSH1 0x1 SWAP1 PUSH1 0xA0 ADD PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 SUB SWAP1 DUP1 DUP5 SUB SWAP1 DUP6 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1439 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x40 MLOAD PUSH1 0x1F NOT ADD MLOAD SWAP2 POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x1465 JUMPI POP PUSH1 0x0 SWAP3 POP PUSH1 0x1 SWAP2 POP DUP3 SWAP1 POP PUSH2 0x146F JUMP JUMPDEST SWAP3 POP PUSH1 0x0 SWAP2 POP DUP2 SWAP1 POP JUMPDEST SWAP5 POP SWAP5 POP SWAP5 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x148D JUMPI PUSH2 0x148D PUSH2 0x1ACF JUMP JUMPDEST SUB PUSH2 0x1496 JUMPI POP POP JUMP JUMPDEST PUSH1 0x1 DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x14AA JUMPI PUSH2 0x14AA PUSH2 0x1ACF JUMP JUMPDEST SUB PUSH2 0x14C8 JUMPI PUSH1 0x40 MLOAD PUSH4 0xF645EEDF PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x14DC JUMPI PUSH2 0x14DC PUSH2 0x1ACF JUMP JUMPDEST SUB PUSH2 0x14FD JUMPI PUSH1 0x40 MLOAD PUSH4 0xFCE698F7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x24 ADD PUSH2 0x6E9 JUMP JUMPDEST PUSH1 0x3 DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x1511 JUMPI PUSH2 0x1511 PUSH2 0x1ACF JUMP JUMPDEST SUB PUSH2 0x12D8 JUMPI PUSH1 0x40 MLOAD PUSH4 0x35E2F383 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x24 ADD PUSH2 0x6E9 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x155D JUMPI DUP1 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x1552 SWAP2 SWAP1 PUSH2 0x1AAE JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH2 0x15CF SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0x15B0 JUMPI PUSH1 0x40 MLOAD PUSH4 0x391434E3 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x44 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x64 ADD PUSH2 0x6E9 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SWAP1 DUP3 SWAP1 SUB SWAP1 SSTORE JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x15EB JUMPI PUSH1 0x2 DUP1 SLOAD DUP3 SWAP1 SUB SWAP1 SSTORE PUSH2 0x160A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD DUP3 ADD SWAP1 SSTORE JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x164F SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH2 0x1669 DUP4 PUSH2 0x169B JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 DUP4 ADD SWAP1 SWAP3 MSTORE SWAP2 SWAP3 POP PUSH1 0x0 SWAP2 SWAP1 PUSH1 0x20 DUP3 ADD DUP2 DUP1 CALLDATASIZE DUP4 CALLDATACOPY POP POP POP SWAP2 DUP3 MSTORE POP PUSH1 0x20 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND PUSH1 0x1F DUP2 GT ISZERO PUSH2 0x4EC JUMPI PUSH1 0x40 MLOAD PUSH4 0x2CD44AC3 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x16D5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND DUP2 EQ PUSH2 0x16ED JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x171A JUMPI PUSH1 0x20 DUP2 DUP6 ADD DUP2 ADD MLOAD DUP7 DUP4 ADD DUP3 ADD MSTORE ADD PUSH2 0x16FE JUMP JUMPDEST POP PUSH1 0x0 PUSH1 0x20 DUP3 DUP7 ADD ADD MSTORE PUSH1 0x20 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND DUP6 ADD ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0x16ED PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x16F4 JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x1764 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x177C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1785 DUP4 PUSH2 0x174D JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x17A8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x17B1 DUP5 PUSH2 0x174D JUMP JUMPDEST SWAP3 POP PUSH2 0x17BF PUSH1 0x20 DUP6 ADD PUSH2 0x174D JUMP JUMPDEST SWAP3 SWAP6 SWAP3 SWAP5 POP POP POP PUSH1 0x40 SWAP2 SWAP1 SWAP2 ADD CALLDATALOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x17E2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x17FB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x16ED DUP3 PUSH2 0x174D JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1817 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD SWAP2 POP PUSH2 0x1827 PUSH1 0x20 DUP5 ADD PUSH2 0x174D JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0xFF PUSH1 0xF8 SHL DUP9 AND DUP2 MSTORE PUSH1 0xE0 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x0 PUSH2 0x184F PUSH1 0xE0 DUP4 ADD DUP10 PUSH2 0x16F4 JUMP JUMPDEST DUP3 DUP2 SUB PUSH1 0x40 DUP5 ADD MSTORE PUSH2 0x1861 DUP2 DUP10 PUSH2 0x16F4 JUMP JUMPDEST PUSH1 0x60 DUP5 ADD DUP9 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND PUSH1 0x80 DUP6 ADD MSTORE PUSH1 0xA0 DUP5 ADD DUP7 SWAP1 MSTORE DUP4 DUP2 SUB PUSH1 0xC0 DUP6 ADD MSTORE DUP5 MLOAD DUP1 DUP3 MSTORE PUSH1 0x20 DUP1 DUP8 ADD SWAP4 POP SWAP1 SWAP2 ADD SWAP1 PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x18B7 JUMPI DUP4 MLOAD DUP4 MSTORE PUSH1 0x20 SWAP4 DUP5 ADD SWAP4 SWAP1 SWAP3 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0x1899 JUMP JUMPDEST POP SWAP1 SWAP12 SWAP11 POP POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0x18DA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x18F2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x20 DUP3 PUSH1 0x5 SHL DUP6 ADD ADD GT ISZERO PUSH2 0x190D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x40 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x192A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP5 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1941 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x194D DUP8 DUP3 DUP9 ADD PUSH2 0x18C8 JUMP JUMPDEST SWAP1 SWAP6 POP SWAP4 POP POP PUSH1 0x20 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x196D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1979 DUP8 DUP3 DUP9 ADD PUSH2 0x18C8 JUMP JUMPDEST SWAP6 SWAP9 SWAP5 SWAP8 POP SWAP6 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1998 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x19A1 DUP4 PUSH2 0x174D JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x19B6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xE0 DUP9 DUP11 SUB SLT ISZERO PUSH2 0x19DC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x19E5 DUP9 PUSH2 0x174D JUMP JUMPDEST SWAP7 POP PUSH2 0x19F3 PUSH1 0x20 DUP10 ADD PUSH2 0x174D JUMP JUMPDEST SWAP6 POP PUSH1 0x40 DUP9 ADD CALLDATALOAD SWAP5 POP PUSH1 0x60 DUP9 ADD CALLDATALOAD SWAP4 POP PUSH1 0x80 DUP9 ADD CALLDATALOAD PUSH1 0xFF DUP2 AND DUP2 EQ PUSH2 0x1A17 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP7 SWAP10 SWAP6 SWAP9 POP SWAP4 SWAP7 SWAP3 SWAP6 SWAP5 PUSH1 0xA0 DUP5 ADD CALLDATALOAD SWAP5 POP PUSH1 0xC0 SWAP1 SWAP4 ADD CALLDATALOAD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1A47 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1A50 DUP4 PUSH2 0x174D JUMP JUMPDEST SWAP2 POP PUSH2 0x1827 PUSH1 0x20 DUP5 ADD PUSH2 0x174D JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x1A72 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x1A92 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x4EC JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG4 SWAP9 SMOD KECCAK256 TLOAD 0xE4 0xD3 SSTORE MULMOD 0x2E CREATE2 0xA8 LOG1 DUP16 JUMP 0xE8 SWAP2 EXTCODECOPY DELEGATECALL LOG2 ADD 0xFB 0xE2 DUP8 DUP3 JUMPDEST MULMOD JUMP SWAP4 0xC2 OR PUSH22 0xA2646970667358221220CD4722EB10B78A18A7747FA4 CREATE DUP14 DUP9 0xD3 0xE4 DUP14 0xB4 DUP9 0x1F BASEFEE 0x24 DUP12 0xD9 0xC3 0xE3 0xDC 0xAA 0x2F ADDMOD DUP7 PUSH5 0x736F6C6343 STOP ADDMOD SHR STOP CALLER ","sourceMap":"471:3387:24:-:0;;;1169:341;;;;;;;;;;1615:52:6;;;;;;;;;;;;;-1:-1:-1;;;1615:52:6;;;1654:4;3495:440:17;;;;;;;;;;;;;-1:-1:-1;;;3495:440:17;;;1625:116:4;;;;;;;;;;;;;-1:-1:-1;;;1625:116:4;;;;;;;;;;;;;;;;-1:-1:-1;;;1625:116:4;;;1700:5;1692;:13;;;;;;:::i;:::-;-1:-1:-1;1716:7:4;:17;1726:7;1716;:17;:::i;:::-;-1:-1:-1;3569:45:17;;-1:-1:-1;3569:4:17;;-1:-1:-1;3600:13:17;3569:30;:45::i;:::-;3561:53;;3636:51;:7;3670:16;3636:33;:51::i;:::-;3625:62;;3712:22;;;;;;;;;;3698:36;;3762:25;;;;;;3745:42;;3817:13;3800:30;;3866:23;4416:11;;4429:14;;4394:80;;;2116:95;4394:80;;;4651:25:25;4692:18;;;4685:34;;;;4735:18;;;4728:34;4445:13:17;4778:18:25;;;4771:34;4468:4:17;4821:19:25;;;4814:61;4357:7:17;;4623:19:25;;4394:80:17;;;;;;;;;;;;4384:91;;;;;;4377:98;;4302:181;;3866:23;3841:48;;-1:-1:-1;;3922:4:17;3900:27;;-1:-1:-1;1245:42:24::2;2288:4:0;1276:10:24;1245;:42::i;:::-;-1:-1:-1::0;1298:35:24::2;581:24;1322:10;1298;:35::i;:::-;-1:-1:-1::0;1344:34:24::2;649:23;1367:10;1344;:34::i;:::-;-1:-1:-1::0;1389:51:24::2;1395:10;1423:16;2838:2:4::0;1423::24::2;:16;:::i;:::-;1407:32;::::0;:13:::2;:32;:::i;:::-;1389:5;:51::i;:::-;1468:7;1451:14;:24:::0;471:3387;;2974:347:13;3070:11;3120:2;3104:5;3098:19;:24;3094:220;;;3146:20;3160:5;3146:13;:20::i;:::-;3139:27;;;;3094:220;3225:5;3199:46;3240:5;3225;3199:46;:::i;:::-;-1:-1:-1;1431:66:13;;-1:-1:-1;3094:220:13;2974:347;;;;:::o;6361:324:0:-;6438:4;3032:12;;;:6;:12;;;;;;;;-1:-1:-1;;;;;3032:29:0;;;;;;;;;;;;6455:223;;6499:12;;;;:6;:12;;;;;;;;-1:-1:-1;;;;;6499:29:0;;;;;;;;;:36;;-1:-1:-1;;6499:36:0;6531:4;6499:36;;;6582:12;752:10:9;;672:98;6582:12:0;-1:-1:-1;;;;;6555:40:0;6573:7;-1:-1:-1;;;;;6555:40:0;6567:4;6555:40;;;;;;;;;;-1:-1:-1;6617:4:0;6610:11;;6455:223;-1:-1:-1;6661:5:0;6654:12;;7658:213:4;-1:-1:-1;;;;;7729:21:4;;7725:93;;7774:32;;-1:-1:-1;;;7774:32:4;;7803:1;7774:32;;;5032:51:25;5005:18;;7774:32:4;;;;;;;;7725:93;7828:35;7844:1;7848:7;7857:5;7828:7;:35::i;:::-;7658:213;;:::o;1759:292:13:-;1824:11;1848:17;1874:3;1848:30;;1907:2;1893:4;:11;:16;1889:74;;;1947:3;1933:18;;-1:-1:-1;;;1933:18:13;;;;;;;;:::i;1889:74::-;2030:11;;2013:13;2030:4;2013:13;:::i;:::-;2005:36;;1759:292;-1:-1:-1;;;1759:292:13:o;3241:407:24:-;1397:19:12;:17;:19::i;:::-;-1:-1:-1;;;;;3391:17:24;::::1;;::::0;;;:11:::1;:17;::::0;;;;;::::1;;3387:213;;;3482:14;::::0;-1:-1:-1;;;;;3452:27:24;::::1;;::::0;;;:21:::1;:27;::::0;;;;;:44:::1;::::0;3482:14;3452:44:::1;:::i;:::-;3433:15;:63;;3425:103;;;::::0;-1:-1:-1;;;3425:103:24;;6260:2:25;3425:103:24::1;::::0;::::1;6242:21:25::0;6299:2;6279:18;;;6272:30;6338:29;6318:18;;;6311:57;6385:18;;3425:103:24::1;6058:351:25::0;3425:103:24::1;-1:-1:-1::0;;;;;3543:27:24;::::1;;::::0;;;:21:::1;:27;::::0;;;;3573:15:::1;3543:45:::0;;3387:213:::1;3610:30;3624:4:::0;3630:2;3634:5;3610:13:::1;:30::i;:::-;3241:407:::0;;;:::o;1951:132:12:-;1863:7;;;;2013:63;;;2049:15;;-1:-1:-1;;;2049:15:12;;;;;;;;;;;2013:63;1951:132::o;6170:1135:4:-;-1:-1:-1;;;;;6260:18:4;;6256:552;;6414:5;6398:12;;:21;;;;;;;:::i;:::-;;;;-1:-1:-1;6256:552:4;;-1:-1:-1;6256:552:4;;-1:-1:-1;;;;;6474:15:4;;6452:19;6474:15;;;;;;;;;;;6508:19;;;6504:117;;;6555:50;;-1:-1:-1;;;6555:50:4;;-1:-1:-1;;;;;6634:32:25;;6555:50:4;;;6616:51:25;6683:18;;;6676:34;;;6726:18;;;6719:34;;;6589:18;;6555:50:4;6414:345:25;6504:117:4;-1:-1:-1;;;;;6744:15:4;;:9;:15;;;;;;;;;;6762:19;;;;6744:37;;6256:552;-1:-1:-1;;;;;6824:16:4;;6820:435;;6990:12;:21;;;;;;;6820:435;;;-1:-1:-1;;;;;7206:13:4;;:9;:13;;;;;;;;;;:22;;;;;;6820:435;7287:2;-1:-1:-1;;;;;7272:25:4;7281:4;-1:-1:-1;;;;;7272:25:4;;7291:5;7272:25;;;;6910::25;;6898:2;6883:18;;6764:177;7272:25:4;;;;;;;;6170:1135;;;:::o;14:127:25:-;75:10;70:3;66:20;63:1;56:31;106:4;103:1;96:15;130:4;127:1;120:15;146:380;225:1;221:12;;;;268;;;289:61;;343:4;335:6;331:17;321:27;;289:61;396:2;388:6;385:14;365:18;362:38;359:161;;442:10;437:3;433:20;430:1;423:31;477:4;474:1;467:15;505:4;502:1;495:15;359:161;;146:380;;;:::o;657:518::-;759:2;754:3;751:11;748:421;;;795:5;792:1;785:16;839:4;836:1;826:18;909:2;897:10;893:19;890:1;886:27;880:4;876:38;945:4;933:10;930:20;927:47;;;-1:-1:-1;968:4:25;927:47;1023:2;1018:3;1014:12;1011:1;1007:20;1001:4;997:31;987:41;;1078:81;1096:2;1089:5;1086:13;1078:81;;;1155:1;1141:16;;1122:1;1111:13;1078:81;;;1082:3;;657:518;;;:::o;1351:1299::-;1471:10;;-1:-1:-1;;;;;1493:30:25;;1490:56;;;1526:18;;:::i;:::-;1555:97;1645:6;1605:38;1637:4;1631:11;1605:38;:::i;:::-;1599:4;1555:97;:::i;:::-;1701:4;1732:2;1721:14;;1749:1;1744:649;;;;2437:1;2454:6;2451:89;;;-1:-1:-1;2506:19:25;;;2500:26;2451:89;-1:-1:-1;;1308:1:25;1304:11;;;1300:24;1296:29;1286:40;1332:1;1328:11;;;1283:57;2553:81;;1714:930;;1744:649;604:1;597:14;;;641:4;628:18;;-1:-1:-1;;1780:20:25;;;1898:222;1912:7;1909:1;1906:14;1898:222;;;1994:19;;;1988:26;1973:42;;2101:4;2086:20;;;;2054:1;2042:14;;;;1928:12;1898:222;;;1902:3;2148:6;2139:7;2136:19;2133:201;;;2209:19;;;2203:26;-1:-1:-1;;2292:1:25;2288:14;;;2304:3;2284:24;2280:37;2276:42;2261:58;2246:74;;2133:201;-1:-1:-1;;;;2380:1:25;2364:14;;;2360:22;2347:36;;-1:-1:-1;1351:1299:25:o;2655:127::-;2716:10;2711:3;2707:20;2704:1;2697:31;2747:4;2744:1;2737:15;2771:4;2768:1;2761:15;2787:375;2875:1;2893:5;2907:249;2928:1;2918:8;2915:15;2907:249;;;2978:4;2973:3;2969:14;2963:4;2960:24;2957:50;;;2987:18;;:::i;:::-;3037:1;3027:8;3023:16;3020:49;;;3051:16;;;;3020:49;3134:1;3130:16;;;;;3090:15;;2907:249;;;2787:375;;;;;;:::o;3167:902::-;3216:5;3246:8;3236:80;;-1:-1:-1;3287:1:25;3301:5;;3236:80;3335:4;3325:76;;-1:-1:-1;3372:1:25;3386:5;;3325:76;3417:4;3435:1;3430:59;;;;3503:1;3498:174;;;;3410:262;;3430:59;3460:1;3451:10;;3474:5;;;3498:174;3535:3;3525:8;3522:17;3519:43;;;3542:18;;:::i;:::-;-1:-1:-1;;3598:1:25;3584:16;;3657:5;;3410:262;;3756:2;3746:8;3743:16;3737:3;3731:4;3728:13;3724:36;3718:2;3708:8;3705:16;3700:2;3694:4;3691:12;3687:35;3684:77;3681:203;;;-1:-1:-1;3793:19:25;;;3869:5;;3681:203;3916:42;-1:-1:-1;;3941:8:25;3935:4;3916:42;:::i;:::-;3994:6;3990:1;3986:6;3982:19;3973:7;3970:32;3967:58;;;4005:18;;:::i;:::-;4043:20;;3167:902;-1:-1:-1;;;3167:902:25:o;4074:140::-;4132:5;4161:47;4202:4;4192:8;4188:19;4182:4;4161:47;:::i;:::-;4152:56;4074:140;-1:-1:-1;;;4074:140:25:o;4219:168::-;4292:9;;;4323;;4340:15;;;4334:22;;4320:37;4310:71;;4361:18;;:::i;5094:527::-;5243:2;5232:9;5225:21;5206:4;5275:6;5269:13;5318:6;5313:2;5302:9;5298:18;5291:34;5343:1;5353:140;5367:6;5364:1;5361:13;5353:140;;;5478:2;5462:14;;;5458:23;;5452:30;5447:2;5428:17;;;5424:26;5417:66;5382:10;5353:140;;;5357:3;5542:1;5537:2;5528:6;5517:9;5513:22;5509:31;5502:42;5612:2;5605;5601:7;5596:2;5588:6;5584:15;5580:29;5569:9;5565:45;5561:54;5553:62;;;5094:527;;;;:::o;5626:297::-;5744:12;;5791:4;5780:16;;;5774:23;;5744:12;5809:16;;5806:111;;;-1:-1:-1;;5883:4:25;5879:17;;;;5876:1;5872:25;5868:38;5857:50;;5626:297;-1:-1:-1;5626:297:25:o;5928:125::-;5993:9;;;6014:10;;;6011:36;;;6027:18;;:::i;6764:177::-;471:3387:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{"@ADMIN_ROLE_7602":{"entryPoint":null,"id":7602,"parameterSlots":0,"returnSlots":0},"@DEFAULT_ADMIN_ROLE_29":{"entryPoint":null,"id":29,"parameterSlots":0,"returnSlots":0},"@DOMAIN_SEPARATOR_1286":{"entryPoint":1515,"id":1286,"parameterSlots":0,"returnSlots":1},"@PAUSER_ROLE_7597":{"entryPoint":null,"id":7597,"parameterSlots":0,"returnSlots":0},"@_EIP712Name_3912":{"entryPoint":4138,"id":3912,"parameterSlots":0,"returnSlots":1},"@_EIP712Version_3924":{"entryPoint":4183,"id":3924,"parameterSlots":0,"returnSlots":1},"@_approve_1006":{"entryPoint":4357,"id":1006,"parameterSlots":4,"returnSlots":0},"@_approve_946":{"entryPoint":3200,"id":946,"parameterSlots":3,"returnSlots":0},"@_buildDomainSeparator_3842":{"entryPoint":null,"id":3842,"parameterSlots":0,"returnSlots":1},"@_checkRole_114":{"entryPoint":4767,"id":114,"parameterSlots":2,"returnSlots":0},"@_checkRole_93":{"entryPoint":3429,"id":93,"parameterSlots":1,"returnSlots":0},"@_domainSeparatorV4_3821":{"entryPoint":3587,"id":3821,"parameterSlots":0,"returnSlots":1},"@_grantRole_256":{"entryPoint":3439,"id":256,"parameterSlots":2,"returnSlots":1},"@_hashTypedDataV4_3858":{"entryPoint":4266,"id":3858,"parameterSlots":1,"returnSlots":1},"@_msgSender_1361":{"entryPoint":null,"id":1361,"parameterSlots":0,"returnSlots":1},"@_pause_1590":{"entryPoint":4077,"id":1590,"parameterSlots":0,"returnSlots":0},"@_requireNotPaused_1561":{"entryPoint":4228,"id":1561,"parameterSlots":0,"returnSlots":0},"@_requirePaused_1574":{"entryPoint":4828,"id":1574,"parameterSlots":0,"returnSlots":0},"@_revokeRole_294":{"entryPoint":3886,"id":294,"parameterSlots":2,"returnSlots":1},"@_spendAllowance_1054":{"entryPoint":3213,"id":1054,"parameterSlots":3,"returnSlots":0},"@_throwError_3697":{"entryPoint":5241,"id":3697,"parameterSlots":2,"returnSlots":0},"@_transfer_785":{"entryPoint":3334,"id":785,"parameterSlots":3,"returnSlots":0},"@_unpause_1606":{"entryPoint":3995,"id":1606,"parameterSlots":0,"returnSlots":0},"@_update_7916":{"entryPoint":4570,"id":7916,"parameterSlots":3,"returnSlots":0},"@_update_862":{"entryPoint":5426,"id":862,"parameterSlots":3,"returnSlots":0},"@_useNonce_1421":{"entryPoint":null,"id":1421,"parameterSlots":1,"returnSlots":1},"@allowance_682":{"entryPoint":null,"id":682,"parameterSlots":2,"returnSlots":1},"@approve_706":{"entryPoint":1412,"id":706,"parameterSlots":2,"returnSlots":1},"@balanceOf_641":{"entryPoint":null,"id":641,"parameterSlots":1,"returnSlots":1},"@batchTransfer_7870":{"entryPoint":1958,"id":7870,"parameterSlots":4,"returnSlots":0},"@byteLength_1725":{"entryPoint":5787,"id":1725,"parameterSlots":1,"returnSlots":1},"@cooldownPeriod_7606":{"entryPoint":null,"id":7606,"parameterSlots":0,"returnSlots":0},"@decimals_619":{"entryPoint":null,"id":619,"parameterSlots":0,"returnSlots":1},"@eip712Domain_3900":{"entryPoint":1888,"id":3900,"parameterSlots":0,"returnSlots":7},"@getRoleAdmin_128":{"entryPoint":null,"id":128,"parameterSlots":1,"returnSlots":1},"@gnosisSafe_7604":{"entryPoint":null,"id":7604,"parameterSlots":0,"returnSlots":0},"@grantRole_147":{"entryPoint":1472,"id":147,"parameterSlots":2,"returnSlots":0},"@hasCooldown_7614":{"entryPoint":null,"id":7614,"parameterSlots":0,"returnSlots":0},"@hasRole_80":{"entryPoint":2553,"id":80,"parameterSlots":2,"returnSlots":1},"@lastTransferTimestamp_7610":{"entryPoint":null,"id":7610,"parameterSlots":0,"returnSlots":0},"@name_601":{"entryPoint":1266,"id":601,"parameterSlots":0,"returnSlots":1},"@nonces_1276":{"entryPoint":1639,"id":1276,"parameterSlots":1,"returnSlots":1},"@nonces_1406":{"entryPoint":null,"id":1406,"parameterSlots":1,"returnSlots":1},"@pause_7682":{"entryPoint":1838,"id":7682,"parameterSlots":0,"returnSlots":0},"@paused_1549":{"entryPoint":null,"id":1549,"parameterSlots":0,"returnSlots":1},"@permit_1259":{"entryPoint":2796,"id":1259,"parameterSlots":7,"returnSlots":0},"@recover_3648":{"entryPoint":4311,"id":3648,"parameterSlots":4,"returnSlots":1},"@renounceRole_189":{"entryPoint":1530,"id":189,"parameterSlots":2,"returnSlots":0},"@revokeRole_166":{"entryPoint":3110,"id":166,"parameterSlots":2,"returnSlots":0},"@setCooldownPeriod_7743":{"entryPoint":1669,"id":7743,"parameterSlots":1,"returnSlots":0},"@setCooldown_7765":{"entryPoint":2433,"id":7765,"parameterSlots":2,"returnSlots":0},"@setGnosisSafe_7719":{"entryPoint":2625,"id":7719,"parameterSlots":1,"returnSlots":0},"@supportsInterface_4034":{"entryPoint":null,"id":4034,"parameterSlots":1,"returnSlots":1},"@supportsInterface_62":{"entryPoint":3147,"id":62,"parameterSlots":1,"returnSlots":1},"@supportsInterface_7931":{"entryPoint":1249,"id":7931,"parameterSlots":1,"returnSlots":1},"@symbol_610":{"entryPoint":2596,"id":610,"parameterSlots":0,"returnSlots":1},"@toStringWithFallback_1792":{"entryPoint":4863,"id":1792,"parameterSlots":2,"returnSlots":1},"@toString_1693":{"entryPoint":5724,"id":1693,"parameterSlots":1,"returnSlots":1},"@toTypedDataHash_4010":{"entryPoint":null,"id":4010,"parameterSlots":2,"returnSlots":1},"@totalSupply_628":{"entryPoint":null,"id":628,"parameterSlots":0,"returnSlots":1},"@transferFrom_738":{"entryPoint":1436,"id":738,"parameterSlots":3,"returnSlots":1},"@transfer_665":{"entryPoint":2611,"id":665,"parameterSlots":2,"returnSlots":1},"@tryRecover_3612":{"entryPoint":5034,"id":3612,"parameterSlots":4,"returnSlots":3},"@unpause_7692":{"entryPoint":1586,"id":7692,"parameterSlots":0,"returnSlots":0},"abi_decode_address":{"entryPoint":5965,"id":null,"parameterSlots":1,"returnSlots":1},"abi_decode_array_address_dyn_calldata":{"entryPoint":6344,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_address":{"entryPoint":6121,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_addresst_address":{"entryPoint":6708,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_addresst_addresst_uint256":{"entryPoint":6035,"id":null,"parameterSlots":2,"returnSlots":3},"abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_uint8t_bytes32t_bytes32":{"entryPoint":6593,"id":null,"parameterSlots":2,"returnSlots":7},"abi_decode_tuple_t_addresst_bool":{"entryPoint":6533,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_addresst_uint256":{"entryPoint":5993,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_array$_t_address_$dyn_calldata_ptrt_array$_t_uint256_$dyn_calldata_ptr":{"entryPoint":6420,"id":null,"parameterSlots":2,"returnSlots":4},"abi_decode_tuple_t_bytes32":{"entryPoint":6096,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_bytes32t_address":{"entryPoint":6148,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_bytes4":{"entryPoint":5827,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint256":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_string":{"entryPoint":5876,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_address_t_bytes32__to_t_address_t_bytes32__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":4,"returnSlots":1},"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_bytes1_t_string_memory_ptr_t_string_memory_ptr_t_uint256_t_address_t_bytes32_t_array$_t_uint256_$dyn_memory_ptr__to_t_bytes1_t_string_memory_ptr_t_string_memory_ptr_t_uint256_t_address_t_bytes32_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed":{"entryPoint":6192,"id":null,"parameterSlots":8,"returnSlots":1},"abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_bytes32_t_address_t_address_t_uint256_t_uint256_t_uint256__to_t_bytes32_t_address_t_address_t_uint256_t_uint256_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":7,"returnSlots":1},"abi_encode_tuple_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__to_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":6,"returnSlots":1},"abi_encode_tuple_t_bytes32_t_uint8_t_bytes32_t_bytes32__to_t_bytes32_t_uint8_t_bytes32_t_bytes32__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":5,"returnSlots":1},"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":5946,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_stringliteral_1462473b7a4b33d32b109b815fd2324d00c9e5839b707ecf16d0ab5744f99226__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_1a35f77d9ec5ff7b7507149194ddd7dff4d9bbb7539ae66ecc8d000378ca66da__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_48efca4c133d4af809cbdea820ea2f4422813132b6936873e13dbb833f6fc66c__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_582fd48f3876d7686bfeaaaa0db0589073271dedd50d66094f02fee2a3d2e01c__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"checked_add_t_uint256":{"entryPoint":6830,"id":null,"parameterSlots":2,"returnSlots":1},"extract_byte_array_length":{"entryPoint":6750,"id":null,"parameterSlots":1,"returnSlots":1},"panic_error_0x21":{"entryPoint":6863,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x32":{"entryPoint":6808,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x41":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":0}},"generatedSources":[{"ast":{"nativeSrc":"0:12801:25","nodeType":"YulBlock","src":"0:12801:25","statements":[{"nativeSrc":"6:3:25","nodeType":"YulBlock","src":"6:3:25","statements":[]},{"body":{"nativeSrc":"83:217:25","nodeType":"YulBlock","src":"83:217:25","statements":[{"body":{"nativeSrc":"129:16:25","nodeType":"YulBlock","src":"129:16:25","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"138:1:25","nodeType":"YulLiteral","src":"138:1:25","type":"","value":"0"},{"kind":"number","nativeSrc":"141:1:25","nodeType":"YulLiteral","src":"141:1:25","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"131:6:25","nodeType":"YulIdentifier","src":"131:6:25"},"nativeSrc":"131:12:25","nodeType":"YulFunctionCall","src":"131:12:25"},"nativeSrc":"131:12:25","nodeType":"YulExpressionStatement","src":"131:12:25"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"104:7:25","nodeType":"YulIdentifier","src":"104:7:25"},{"name":"headStart","nativeSrc":"113:9:25","nodeType":"YulIdentifier","src":"113:9:25"}],"functionName":{"name":"sub","nativeSrc":"100:3:25","nodeType":"YulIdentifier","src":"100:3:25"},"nativeSrc":"100:23:25","nodeType":"YulFunctionCall","src":"100:23:25"},{"kind":"number","nativeSrc":"125:2:25","nodeType":"YulLiteral","src":"125:2:25","type":"","value":"32"}],"functionName":{"name":"slt","nativeSrc":"96:3:25","nodeType":"YulIdentifier","src":"96:3:25"},"nativeSrc":"96:32:25","nodeType":"YulFunctionCall","src":"96:32:25"},"nativeSrc":"93:52:25","nodeType":"YulIf","src":"93:52:25"},{"nativeSrc":"154:36:25","nodeType":"YulVariableDeclaration","src":"154:36:25","value":{"arguments":[{"name":"headStart","nativeSrc":"180:9:25","nodeType":"YulIdentifier","src":"180:9:25"}],"functionName":{"name":"calldataload","nativeSrc":"167:12:25","nodeType":"YulIdentifier","src":"167:12:25"},"nativeSrc":"167:23:25","nodeType":"YulFunctionCall","src":"167:23:25"},"variables":[{"name":"value","nativeSrc":"158:5:25","nodeType":"YulTypedName","src":"158:5:25","type":""}]},{"body":{"nativeSrc":"254:16:25","nodeType":"YulBlock","src":"254:16:25","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"263:1:25","nodeType":"YulLiteral","src":"263:1:25","type":"","value":"0"},{"kind":"number","nativeSrc":"266:1:25","nodeType":"YulLiteral","src":"266:1:25","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"256:6:25","nodeType":"YulIdentifier","src":"256:6:25"},"nativeSrc":"256:12:25","nodeType":"YulFunctionCall","src":"256:12:25"},"nativeSrc":"256:12:25","nodeType":"YulExpressionStatement","src":"256:12:25"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"212:5:25","nodeType":"YulIdentifier","src":"212:5:25"},{"arguments":[{"name":"value","nativeSrc":"223:5:25","nodeType":"YulIdentifier","src":"223:5:25"},{"arguments":[{"kind":"number","nativeSrc":"234:3:25","nodeType":"YulLiteral","src":"234:3:25","type":"","value":"224"},{"kind":"number","nativeSrc":"239:10:25","nodeType":"YulLiteral","src":"239:10:25","type":"","value":"0xffffffff"}],"functionName":{"name":"shl","nativeSrc":"230:3:25","nodeType":"YulIdentifier","src":"230:3:25"},"nativeSrc":"230:20:25","nodeType":"YulFunctionCall","src":"230:20:25"}],"functionName":{"name":"and","nativeSrc":"219:3:25","nodeType":"YulIdentifier","src":"219:3:25"},"nativeSrc":"219:32:25","nodeType":"YulFunctionCall","src":"219:32:25"}],"functionName":{"name":"eq","nativeSrc":"209:2:25","nodeType":"YulIdentifier","src":"209:2:25"},"nativeSrc":"209:43:25","nodeType":"YulFunctionCall","src":"209:43:25"}],"functionName":{"name":"iszero","nativeSrc":"202:6:25","nodeType":"YulIdentifier","src":"202:6:25"},"nativeSrc":"202:51:25","nodeType":"YulFunctionCall","src":"202:51:25"},"nativeSrc":"199:71:25","nodeType":"YulIf","src":"199:71:25"},{"nativeSrc":"279:15:25","nodeType":"YulAssignment","src":"279:15:25","value":{"name":"value","nativeSrc":"289:5:25","nodeType":"YulIdentifier","src":"289:5:25"},"variableNames":[{"name":"value0","nativeSrc":"279:6:25","nodeType":"YulIdentifier","src":"279:6:25"}]}]},"name":"abi_decode_tuple_t_bytes4","nativeSrc":"14:286:25","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"49:9:25","nodeType":"YulTypedName","src":"49:9:25","type":""},{"name":"dataEnd","nativeSrc":"60:7:25","nodeType":"YulTypedName","src":"60:7:25","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"72:6:25","nodeType":"YulTypedName","src":"72:6:25","type":""}],"src":"14:286:25"},{"body":{"nativeSrc":"400:92:25","nodeType":"YulBlock","src":"400:92:25","statements":[{"nativeSrc":"410:26:25","nodeType":"YulAssignment","src":"410:26:25","value":{"arguments":[{"name":"headStart","nativeSrc":"422:9:25","nodeType":"YulIdentifier","src":"422:9:25"},{"kind":"number","nativeSrc":"433:2:25","nodeType":"YulLiteral","src":"433:2:25","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"418:3:25","nodeType":"YulIdentifier","src":"418:3:25"},"nativeSrc":"418:18:25","nodeType":"YulFunctionCall","src":"418:18:25"},"variableNames":[{"name":"tail","nativeSrc":"410:4:25","nodeType":"YulIdentifier","src":"410:4:25"}]},{"expression":{"arguments":[{"name":"headStart","nativeSrc":"452:9:25","nodeType":"YulIdentifier","src":"452:9:25"},{"arguments":[{"arguments":[{"name":"value0","nativeSrc":"477:6:25","nodeType":"YulIdentifier","src":"477:6:25"}],"functionName":{"name":"iszero","nativeSrc":"470:6:25","nodeType":"YulIdentifier","src":"470:6:25"},"nativeSrc":"470:14:25","nodeType":"YulFunctionCall","src":"470:14:25"}],"functionName":{"name":"iszero","nativeSrc":"463:6:25","nodeType":"YulIdentifier","src":"463:6:25"},"nativeSrc":"463:22:25","nodeType":"YulFunctionCall","src":"463:22:25"}],"functionName":{"name":"mstore","nativeSrc":"445:6:25","nodeType":"YulIdentifier","src":"445:6:25"},"nativeSrc":"445:41:25","nodeType":"YulFunctionCall","src":"445:41:25"},"nativeSrc":"445:41:25","nodeType":"YulExpressionStatement","src":"445:41:25"}]},"name":"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed","nativeSrc":"305:187:25","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"369:9:25","nodeType":"YulTypedName","src":"369:9:25","type":""},{"name":"value0","nativeSrc":"380:6:25","nodeType":"YulTypedName","src":"380:6:25","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"391:4:25","nodeType":"YulTypedName","src":"391:4:25","type":""}],"src":"305:187:25"},{"body":{"nativeSrc":"598:76:25","nodeType":"YulBlock","src":"598:76:25","statements":[{"nativeSrc":"608:26:25","nodeType":"YulAssignment","src":"608:26:25","value":{"arguments":[{"name":"headStart","nativeSrc":"620:9:25","nodeType":"YulIdentifier","src":"620:9:25"},{"kind":"number","nativeSrc":"631:2:25","nodeType":"YulLiteral","src":"631:2:25","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"616:3:25","nodeType":"YulIdentifier","src":"616:3:25"},"nativeSrc":"616:18:25","nodeType":"YulFunctionCall","src":"616:18:25"},"variableNames":[{"name":"tail","nativeSrc":"608:4:25","nodeType":"YulIdentifier","src":"608:4:25"}]},{"expression":{"arguments":[{"name":"headStart","nativeSrc":"650:9:25","nodeType":"YulIdentifier","src":"650:9:25"},{"name":"value0","nativeSrc":"661:6:25","nodeType":"YulIdentifier","src":"661:6:25"}],"functionName":{"name":"mstore","nativeSrc":"643:6:25","nodeType":"YulIdentifier","src":"643:6:25"},"nativeSrc":"643:25:25","nodeType":"YulFunctionCall","src":"643:25:25"},"nativeSrc":"643:25:25","nodeType":"YulExpressionStatement","src":"643:25:25"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nativeSrc":"497:177:25","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"567:9:25","nodeType":"YulTypedName","src":"567:9:25","type":""},{"name":"value0","nativeSrc":"578:6:25","nodeType":"YulTypedName","src":"578:6:25","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"589:4:25","nodeType":"YulTypedName","src":"589:4:25","type":""}],"src":"497:177:25"},{"body":{"nativeSrc":"729:350:25","nodeType":"YulBlock","src":"729:350:25","statements":[{"nativeSrc":"739:26:25","nodeType":"YulVariableDeclaration","src":"739:26:25","value":{"arguments":[{"name":"value","nativeSrc":"759:5:25","nodeType":"YulIdentifier","src":"759:5:25"}],"functionName":{"name":"mload","nativeSrc":"753:5:25","nodeType":"YulIdentifier","src":"753:5:25"},"nativeSrc":"753:12:25","nodeType":"YulFunctionCall","src":"753:12:25"},"variables":[{"name":"length","nativeSrc":"743:6:25","nodeType":"YulTypedName","src":"743:6:25","type":""}]},{"expression":{"arguments":[{"name":"pos","nativeSrc":"781:3:25","nodeType":"YulIdentifier","src":"781:3:25"},{"name":"length","nativeSrc":"786:6:25","nodeType":"YulIdentifier","src":"786:6:25"}],"functionName":{"name":"mstore","nativeSrc":"774:6:25","nodeType":"YulIdentifier","src":"774:6:25"},"nativeSrc":"774:19:25","nodeType":"YulFunctionCall","src":"774:19:25"},"nativeSrc":"774:19:25","nodeType":"YulExpressionStatement","src":"774:19:25"},{"nativeSrc":"802:10:25","nodeType":"YulVariableDeclaration","src":"802:10:25","value":{"kind":"number","nativeSrc":"811:1:25","nodeType":"YulLiteral","src":"811:1:25","type":"","value":"0"},"variables":[{"name":"i","nativeSrc":"806:1:25","nodeType":"YulTypedName","src":"806:1:25","type":""}]},{"body":{"nativeSrc":"873:87:25","nodeType":"YulBlock","src":"873:87:25","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[{"name":"pos","nativeSrc":"902:3:25","nodeType":"YulIdentifier","src":"902:3:25"},{"name":"i","nativeSrc":"907:1:25","nodeType":"YulIdentifier","src":"907:1:25"}],"functionName":{"name":"add","nativeSrc":"898:3:25","nodeType":"YulIdentifier","src":"898:3:25"},"nativeSrc":"898:11:25","nodeType":"YulFunctionCall","src":"898:11:25"},{"kind":"number","nativeSrc":"911:4:25","nodeType":"YulLiteral","src":"911:4:25","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"894:3:25","nodeType":"YulIdentifier","src":"894:3:25"},"nativeSrc":"894:22:25","nodeType":"YulFunctionCall","src":"894:22:25"},{"arguments":[{"arguments":[{"arguments":[{"name":"value","nativeSrc":"932:5:25","nodeType":"YulIdentifier","src":"932:5:25"},{"name":"i","nativeSrc":"939:1:25","nodeType":"YulIdentifier","src":"939:1:25"}],"functionName":{"name":"add","nativeSrc":"928:3:25","nodeType":"YulIdentifier","src":"928:3:25"},"nativeSrc":"928:13:25","nodeType":"YulFunctionCall","src":"928:13:25"},{"kind":"number","nativeSrc":"943:4:25","nodeType":"YulLiteral","src":"943:4:25","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"924:3:25","nodeType":"YulIdentifier","src":"924:3:25"},"nativeSrc":"924:24:25","nodeType":"YulFunctionCall","src":"924:24:25"}],"functionName":{"name":"mload","nativeSrc":"918:5:25","nodeType":"YulIdentifier","src":"918:5:25"},"nativeSrc":"918:31:25","nodeType":"YulFunctionCall","src":"918:31:25"}],"functionName":{"name":"mstore","nativeSrc":"887:6:25","nodeType":"YulIdentifier","src":"887:6:25"},"nativeSrc":"887:63:25","nodeType":"YulFunctionCall","src":"887:63:25"},"nativeSrc":"887:63:25","nodeType":"YulExpressionStatement","src":"887:63:25"}]},"condition":{"arguments":[{"name":"i","nativeSrc":"832:1:25","nodeType":"YulIdentifier","src":"832:1:25"},{"name":"length","nativeSrc":"835:6:25","nodeType":"YulIdentifier","src":"835:6:25"}],"functionName":{"name":"lt","nativeSrc":"829:2:25","nodeType":"YulIdentifier","src":"829:2:25"},"nativeSrc":"829:13:25","nodeType":"YulFunctionCall","src":"829:13:25"},"nativeSrc":"821:139:25","nodeType":"YulForLoop","post":{"nativeSrc":"843:21:25","nodeType":"YulBlock","src":"843:21:25","statements":[{"nativeSrc":"845:17:25","nodeType":"YulAssignment","src":"845:17:25","value":{"arguments":[{"name":"i","nativeSrc":"854:1:25","nodeType":"YulIdentifier","src":"854:1:25"},{"kind":"number","nativeSrc":"857:4:25","nodeType":"YulLiteral","src":"857:4:25","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"850:3:25","nodeType":"YulIdentifier","src":"850:3:25"},"nativeSrc":"850:12:25","nodeType":"YulFunctionCall","src":"850:12:25"},"variableNames":[{"name":"i","nativeSrc":"845:1:25","nodeType":"YulIdentifier","src":"845:1:25"}]}]},"pre":{"nativeSrc":"825:3:25","nodeType":"YulBlock","src":"825:3:25","statements":[]},"src":"821:139:25"},{"expression":{"arguments":[{"arguments":[{"arguments":[{"name":"pos","nativeSrc":"984:3:25","nodeType":"YulIdentifier","src":"984:3:25"},{"name":"length","nativeSrc":"989:6:25","nodeType":"YulIdentifier","src":"989:6:25"}],"functionName":{"name":"add","nativeSrc":"980:3:25","nodeType":"YulIdentifier","src":"980:3:25"},"nativeSrc":"980:16:25","nodeType":"YulFunctionCall","src":"980:16:25"},{"kind":"number","nativeSrc":"998:4:25","nodeType":"YulLiteral","src":"998:4:25","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"976:3:25","nodeType":"YulIdentifier","src":"976:3:25"},"nativeSrc":"976:27:25","nodeType":"YulFunctionCall","src":"976:27:25"},{"kind":"number","nativeSrc":"1005:1:25","nodeType":"YulLiteral","src":"1005:1:25","type":"","value":"0"}],"functionName":{"name":"mstore","nativeSrc":"969:6:25","nodeType":"YulIdentifier","src":"969:6:25"},"nativeSrc":"969:38:25","nodeType":"YulFunctionCall","src":"969:38:25"},"nativeSrc":"969:38:25","nodeType":"YulExpressionStatement","src":"969:38:25"},{"nativeSrc":"1016:57:25","nodeType":"YulAssignment","src":"1016:57:25","value":{"arguments":[{"arguments":[{"name":"pos","nativeSrc":"1031:3:25","nodeType":"YulIdentifier","src":"1031:3:25"},{"arguments":[{"arguments":[{"name":"length","nativeSrc":"1044:6:25","nodeType":"YulIdentifier","src":"1044:6:25"},{"kind":"number","nativeSrc":"1052:2:25","nodeType":"YulLiteral","src":"1052:2:25","type":"","value":"31"}],"functionName":{"name":"add","nativeSrc":"1040:3:25","nodeType":"YulIdentifier","src":"1040:3:25"},"nativeSrc":"1040:15:25","nodeType":"YulFunctionCall","src":"1040:15:25"},{"arguments":[{"kind":"number","nativeSrc":"1061:2:25","nodeType":"YulLiteral","src":"1061:2:25","type":"","value":"31"}],"functionName":{"name":"not","nativeSrc":"1057:3:25","nodeType":"YulIdentifier","src":"1057:3:25"},"nativeSrc":"1057:7:25","nodeType":"YulFunctionCall","src":"1057:7:25"}],"functionName":{"name":"and","nativeSrc":"1036:3:25","nodeType":"YulIdentifier","src":"1036:3:25"},"nativeSrc":"1036:29:25","nodeType":"YulFunctionCall","src":"1036:29:25"}],"functionName":{"name":"add","nativeSrc":"1027:3:25","nodeType":"YulIdentifier","src":"1027:3:25"},"nativeSrc":"1027:39:25","nodeType":"YulFunctionCall","src":"1027:39:25"},{"kind":"number","nativeSrc":"1068:4:25","nodeType":"YulLiteral","src":"1068:4:25","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"1023:3:25","nodeType":"YulIdentifier","src":"1023:3:25"},"nativeSrc":"1023:50:25","nodeType":"YulFunctionCall","src":"1023:50:25"},"variableNames":[{"name":"end","nativeSrc":"1016:3:25","nodeType":"YulIdentifier","src":"1016:3:25"}]}]},"name":"abi_encode_string","nativeSrc":"679:400:25","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"706:5:25","nodeType":"YulTypedName","src":"706:5:25","type":""},{"name":"pos","nativeSrc":"713:3:25","nodeType":"YulTypedName","src":"713:3:25","type":""}],"returnVariables":[{"name":"end","nativeSrc":"721:3:25","nodeType":"YulTypedName","src":"721:3:25","type":""}],"src":"679:400:25"},{"body":{"nativeSrc":"1205:99:25","nodeType":"YulBlock","src":"1205:99:25","statements":[{"expression":{"arguments":[{"name":"headStart","nativeSrc":"1222:9:25","nodeType":"YulIdentifier","src":"1222:9:25"},{"kind":"number","nativeSrc":"1233:2:25","nodeType":"YulLiteral","src":"1233:2:25","type":"","value":"32"}],"functionName":{"name":"mstore","nativeSrc":"1215:6:25","nodeType":"YulIdentifier","src":"1215:6:25"},"nativeSrc":"1215:21:25","nodeType":"YulFunctionCall","src":"1215:21:25"},"nativeSrc":"1215:21:25","nodeType":"YulExpressionStatement","src":"1215:21:25"},{"nativeSrc":"1245:53:25","nodeType":"YulAssignment","src":"1245:53:25","value":{"arguments":[{"name":"value0","nativeSrc":"1271:6:25","nodeType":"YulIdentifier","src":"1271:6:25"},{"arguments":[{"name":"headStart","nativeSrc":"1283:9:25","nodeType":"YulIdentifier","src":"1283:9:25"},{"kind":"number","nativeSrc":"1294:2:25","nodeType":"YulLiteral","src":"1294:2:25","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"1279:3:25","nodeType":"YulIdentifier","src":"1279:3:25"},"nativeSrc":"1279:18:25","nodeType":"YulFunctionCall","src":"1279:18:25"}],"functionName":{"name":"abi_encode_string","nativeSrc":"1253:17:25","nodeType":"YulIdentifier","src":"1253:17:25"},"nativeSrc":"1253:45:25","nodeType":"YulFunctionCall","src":"1253:45:25"},"variableNames":[{"name":"tail","nativeSrc":"1245:4:25","nodeType":"YulIdentifier","src":"1245:4:25"}]}]},"name":"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"1084:220:25","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"1174:9:25","nodeType":"YulTypedName","src":"1174:9:25","type":""},{"name":"value0","nativeSrc":"1185:6:25","nodeType":"YulTypedName","src":"1185:6:25","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"1196:4:25","nodeType":"YulTypedName","src":"1196:4:25","type":""}],"src":"1084:220:25"},{"body":{"nativeSrc":"1358:124:25","nodeType":"YulBlock","src":"1358:124:25","statements":[{"nativeSrc":"1368:29:25","nodeType":"YulAssignment","src":"1368:29:25","value":{"arguments":[{"name":"offset","nativeSrc":"1390:6:25","nodeType":"YulIdentifier","src":"1390:6:25"}],"functionName":{"name":"calldataload","nativeSrc":"1377:12:25","nodeType":"YulIdentifier","src":"1377:12:25"},"nativeSrc":"1377:20:25","nodeType":"YulFunctionCall","src":"1377:20:25"},"variableNames":[{"name":"value","nativeSrc":"1368:5:25","nodeType":"YulIdentifier","src":"1368:5:25"}]},{"body":{"nativeSrc":"1460:16:25","nodeType":"YulBlock","src":"1460:16:25","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"1469:1:25","nodeType":"YulLiteral","src":"1469:1:25","type":"","value":"0"},{"kind":"number","nativeSrc":"1472:1:25","nodeType":"YulLiteral","src":"1472:1:25","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"1462:6:25","nodeType":"YulIdentifier","src":"1462:6:25"},"nativeSrc":"1462:12:25","nodeType":"YulFunctionCall","src":"1462:12:25"},"nativeSrc":"1462:12:25","nodeType":"YulExpressionStatement","src":"1462:12:25"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"1419:5:25","nodeType":"YulIdentifier","src":"1419:5:25"},{"arguments":[{"name":"value","nativeSrc":"1430:5:25","nodeType":"YulIdentifier","src":"1430:5:25"},{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"1445:3:25","nodeType":"YulLiteral","src":"1445:3:25","type":"","value":"160"},{"kind":"number","nativeSrc":"1450:1:25","nodeType":"YulLiteral","src":"1450:1:25","type":"","value":"1"}],"functionName":{"name":"shl","nativeSrc":"1441:3:25","nodeType":"YulIdentifier","src":"1441:3:25"},"nativeSrc":"1441:11:25","nodeType":"YulFunctionCall","src":"1441:11:25"},{"kind":"number","nativeSrc":"1454:1:25","nodeType":"YulLiteral","src":"1454:1:25","type":"","value":"1"}],"functionName":{"name":"sub","nativeSrc":"1437:3:25","nodeType":"YulIdentifier","src":"1437:3:25"},"nativeSrc":"1437:19:25","nodeType":"YulFunctionCall","src":"1437:19:25"}],"functionName":{"name":"and","nativeSrc":"1426:3:25","nodeType":"YulIdentifier","src":"1426:3:25"},"nativeSrc":"1426:31:25","nodeType":"YulFunctionCall","src":"1426:31:25"}],"functionName":{"name":"eq","nativeSrc":"1416:2:25","nodeType":"YulIdentifier","src":"1416:2:25"},"nativeSrc":"1416:42:25","nodeType":"YulFunctionCall","src":"1416:42:25"}],"functionName":{"name":"iszero","nativeSrc":"1409:6:25","nodeType":"YulIdentifier","src":"1409:6:25"},"nativeSrc":"1409:50:25","nodeType":"YulFunctionCall","src":"1409:50:25"},"nativeSrc":"1406:70:25","nodeType":"YulIf","src":"1406:70:25"}]},"name":"abi_decode_address","nativeSrc":"1309:173:25","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"1337:6:25","nodeType":"YulTypedName","src":"1337:6:25","type":""}],"returnVariables":[{"name":"value","nativeSrc":"1348:5:25","nodeType":"YulTypedName","src":"1348:5:25","type":""}],"src":"1309:173:25"},{"body":{"nativeSrc":"1574:213:25","nodeType":"YulBlock","src":"1574:213:25","statements":[{"body":{"nativeSrc":"1620:16:25","nodeType":"YulBlock","src":"1620:16:25","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"1629:1:25","nodeType":"YulLiteral","src":"1629:1:25","type":"","value":"0"},{"kind":"number","nativeSrc":"1632:1:25","nodeType":"YulLiteral","src":"1632:1:25","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"1622:6:25","nodeType":"YulIdentifier","src":"1622:6:25"},"nativeSrc":"1622:12:25","nodeType":"YulFunctionCall","src":"1622:12:25"},"nativeSrc":"1622:12:25","nodeType":"YulExpressionStatement","src":"1622:12:25"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"1595:7:25","nodeType":"YulIdentifier","src":"1595:7:25"},{"name":"headStart","nativeSrc":"1604:9:25","nodeType":"YulIdentifier","src":"1604:9:25"}],"functionName":{"name":"sub","nativeSrc":"1591:3:25","nodeType":"YulIdentifier","src":"1591:3:25"},"nativeSrc":"1591:23:25","nodeType":"YulFunctionCall","src":"1591:23:25"},{"kind":"number","nativeSrc":"1616:2:25","nodeType":"YulLiteral","src":"1616:2:25","type":"","value":"64"}],"functionName":{"name":"slt","nativeSrc":"1587:3:25","nodeType":"YulIdentifier","src":"1587:3:25"},"nativeSrc":"1587:32:25","nodeType":"YulFunctionCall","src":"1587:32:25"},"nativeSrc":"1584:52:25","nodeType":"YulIf","src":"1584:52:25"},{"nativeSrc":"1645:39:25","nodeType":"YulAssignment","src":"1645:39:25","value":{"arguments":[{"name":"headStart","nativeSrc":"1674:9:25","nodeType":"YulIdentifier","src":"1674:9:25"}],"functionName":{"name":"abi_decode_address","nativeSrc":"1655:18:25","nodeType":"YulIdentifier","src":"1655:18:25"},"nativeSrc":"1655:29:25","nodeType":"YulFunctionCall","src":"1655:29:25"},"variableNames":[{"name":"value0","nativeSrc":"1645:6:25","nodeType":"YulIdentifier","src":"1645:6:25"}]},{"nativeSrc":"1693:14:25","nodeType":"YulVariableDeclaration","src":"1693:14:25","value":{"kind":"number","nativeSrc":"1706:1:25","nodeType":"YulLiteral","src":"1706:1:25","type":"","value":"0"},"variables":[{"name":"value","nativeSrc":"1697:5:25","nodeType":"YulTypedName","src":"1697:5:25","type":""}]},{"nativeSrc":"1716:41:25","nodeType":"YulAssignment","src":"1716:41:25","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"1742:9:25","nodeType":"YulIdentifier","src":"1742:9:25"},{"kind":"number","nativeSrc":"1753:2:25","nodeType":"YulLiteral","src":"1753:2:25","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"1738:3:25","nodeType":"YulIdentifier","src":"1738:3:25"},"nativeSrc":"1738:18:25","nodeType":"YulFunctionCall","src":"1738:18:25"}],"functionName":{"name":"calldataload","nativeSrc":"1725:12:25","nodeType":"YulIdentifier","src":"1725:12:25"},"nativeSrc":"1725:32:25","nodeType":"YulFunctionCall","src":"1725:32:25"},"variableNames":[{"name":"value","nativeSrc":"1716:5:25","nodeType":"YulIdentifier","src":"1716:5:25"}]},{"nativeSrc":"1766:15:25","nodeType":"YulAssignment","src":"1766:15:25","value":{"name":"value","nativeSrc":"1776:5:25","nodeType":"YulIdentifier","src":"1776:5:25"},"variableNames":[{"name":"value1","nativeSrc":"1766:6:25","nodeType":"YulIdentifier","src":"1766:6:25"}]}]},"name":"abi_decode_tuple_t_addresst_uint256","nativeSrc":"1487:300:25","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"1532:9:25","nodeType":"YulTypedName","src":"1532:9:25","type":""},{"name":"dataEnd","nativeSrc":"1543:7:25","nodeType":"YulTypedName","src":"1543:7:25","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"1555:6:25","nodeType":"YulTypedName","src":"1555:6:25","type":""},{"name":"value1","nativeSrc":"1563:6:25","nodeType":"YulTypedName","src":"1563:6:25","type":""}],"src":"1487:300:25"},{"body":{"nativeSrc":"1896:270:25","nodeType":"YulBlock","src":"1896:270:25","statements":[{"body":{"nativeSrc":"1942:16:25","nodeType":"YulBlock","src":"1942:16:25","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"1951:1:25","nodeType":"YulLiteral","src":"1951:1:25","type":"","value":"0"},{"kind":"number","nativeSrc":"1954:1:25","nodeType":"YulLiteral","src":"1954:1:25","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"1944:6:25","nodeType":"YulIdentifier","src":"1944:6:25"},"nativeSrc":"1944:12:25","nodeType":"YulFunctionCall","src":"1944:12:25"},"nativeSrc":"1944:12:25","nodeType":"YulExpressionStatement","src":"1944:12:25"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"1917:7:25","nodeType":"YulIdentifier","src":"1917:7:25"},{"name":"headStart","nativeSrc":"1926:9:25","nodeType":"YulIdentifier","src":"1926:9:25"}],"functionName":{"name":"sub","nativeSrc":"1913:3:25","nodeType":"YulIdentifier","src":"1913:3:25"},"nativeSrc":"1913:23:25","nodeType":"YulFunctionCall","src":"1913:23:25"},{"kind":"number","nativeSrc":"1938:2:25","nodeType":"YulLiteral","src":"1938:2:25","type":"","value":"96"}],"functionName":{"name":"slt","nativeSrc":"1909:3:25","nodeType":"YulIdentifier","src":"1909:3:25"},"nativeSrc":"1909:32:25","nodeType":"YulFunctionCall","src":"1909:32:25"},"nativeSrc":"1906:52:25","nodeType":"YulIf","src":"1906:52:25"},{"nativeSrc":"1967:39:25","nodeType":"YulAssignment","src":"1967:39:25","value":{"arguments":[{"name":"headStart","nativeSrc":"1996:9:25","nodeType":"YulIdentifier","src":"1996:9:25"}],"functionName":{"name":"abi_decode_address","nativeSrc":"1977:18:25","nodeType":"YulIdentifier","src":"1977:18:25"},"nativeSrc":"1977:29:25","nodeType":"YulFunctionCall","src":"1977:29:25"},"variableNames":[{"name":"value0","nativeSrc":"1967:6:25","nodeType":"YulIdentifier","src":"1967:6:25"}]},{"nativeSrc":"2015:48:25","nodeType":"YulAssignment","src":"2015:48:25","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"2048:9:25","nodeType":"YulIdentifier","src":"2048:9:25"},{"kind":"number","nativeSrc":"2059:2:25","nodeType":"YulLiteral","src":"2059:2:25","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"2044:3:25","nodeType":"YulIdentifier","src":"2044:3:25"},"nativeSrc":"2044:18:25","nodeType":"YulFunctionCall","src":"2044:18:25"}],"functionName":{"name":"abi_decode_address","nativeSrc":"2025:18:25","nodeType":"YulIdentifier","src":"2025:18:25"},"nativeSrc":"2025:38:25","nodeType":"YulFunctionCall","src":"2025:38:25"},"variableNames":[{"name":"value1","nativeSrc":"2015:6:25","nodeType":"YulIdentifier","src":"2015:6:25"}]},{"nativeSrc":"2072:14:25","nodeType":"YulVariableDeclaration","src":"2072:14:25","value":{"kind":"number","nativeSrc":"2085:1:25","nodeType":"YulLiteral","src":"2085:1:25","type":"","value":"0"},"variables":[{"name":"value","nativeSrc":"2076:5:25","nodeType":"YulTypedName","src":"2076:5:25","type":""}]},{"nativeSrc":"2095:41:25","nodeType":"YulAssignment","src":"2095:41:25","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"2121:9:25","nodeType":"YulIdentifier","src":"2121:9:25"},{"kind":"number","nativeSrc":"2132:2:25","nodeType":"YulLiteral","src":"2132:2:25","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"2117:3:25","nodeType":"YulIdentifier","src":"2117:3:25"},"nativeSrc":"2117:18:25","nodeType":"YulFunctionCall","src":"2117:18:25"}],"functionName":{"name":"calldataload","nativeSrc":"2104:12:25","nodeType":"YulIdentifier","src":"2104:12:25"},"nativeSrc":"2104:32:25","nodeType":"YulFunctionCall","src":"2104:32:25"},"variableNames":[{"name":"value","nativeSrc":"2095:5:25","nodeType":"YulIdentifier","src":"2095:5:25"}]},{"nativeSrc":"2145:15:25","nodeType":"YulAssignment","src":"2145:15:25","value":{"name":"value","nativeSrc":"2155:5:25","nodeType":"YulIdentifier","src":"2155:5:25"},"variableNames":[{"name":"value2","nativeSrc":"2145:6:25","nodeType":"YulIdentifier","src":"2145:6:25"}]}]},"name":"abi_decode_tuple_t_addresst_addresst_uint256","nativeSrc":"1792:374:25","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"1846:9:25","nodeType":"YulTypedName","src":"1846:9:25","type":""},{"name":"dataEnd","nativeSrc":"1857:7:25","nodeType":"YulTypedName","src":"1857:7:25","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"1869:6:25","nodeType":"YulTypedName","src":"1869:6:25","type":""},{"name":"value1","nativeSrc":"1877:6:25","nodeType":"YulTypedName","src":"1877:6:25","type":""},{"name":"value2","nativeSrc":"1885:6:25","nodeType":"YulTypedName","src":"1885:6:25","type":""}],"src":"1792:374:25"},{"body":{"nativeSrc":"2241:156:25","nodeType":"YulBlock","src":"2241:156:25","statements":[{"body":{"nativeSrc":"2287:16:25","nodeType":"YulBlock","src":"2287:16:25","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"2296:1:25","nodeType":"YulLiteral","src":"2296:1:25","type":"","value":"0"},{"kind":"number","nativeSrc":"2299:1:25","nodeType":"YulLiteral","src":"2299:1:25","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"2289:6:25","nodeType":"YulIdentifier","src":"2289:6:25"},"nativeSrc":"2289:12:25","nodeType":"YulFunctionCall","src":"2289:12:25"},"nativeSrc":"2289:12:25","nodeType":"YulExpressionStatement","src":"2289:12:25"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"2262:7:25","nodeType":"YulIdentifier","src":"2262:7:25"},{"name":"headStart","nativeSrc":"2271:9:25","nodeType":"YulIdentifier","src":"2271:9:25"}],"functionName":{"name":"sub","nativeSrc":"2258:3:25","nodeType":"YulIdentifier","src":"2258:3:25"},"nativeSrc":"2258:23:25","nodeType":"YulFunctionCall","src":"2258:23:25"},{"kind":"number","nativeSrc":"2283:2:25","nodeType":"YulLiteral","src":"2283:2:25","type":"","value":"32"}],"functionName":{"name":"slt","nativeSrc":"2254:3:25","nodeType":"YulIdentifier","src":"2254:3:25"},"nativeSrc":"2254:32:25","nodeType":"YulFunctionCall","src":"2254:32:25"},"nativeSrc":"2251:52:25","nodeType":"YulIf","src":"2251:52:25"},{"nativeSrc":"2312:14:25","nodeType":"YulVariableDeclaration","src":"2312:14:25","value":{"kind":"number","nativeSrc":"2325:1:25","nodeType":"YulLiteral","src":"2325:1:25","type":"","value":"0"},"variables":[{"name":"value","nativeSrc":"2316:5:25","nodeType":"YulTypedName","src":"2316:5:25","type":""}]},{"nativeSrc":"2335:32:25","nodeType":"YulAssignment","src":"2335:32:25","value":{"arguments":[{"name":"headStart","nativeSrc":"2357:9:25","nodeType":"YulIdentifier","src":"2357:9:25"}],"functionName":{"name":"calldataload","nativeSrc":"2344:12:25","nodeType":"YulIdentifier","src":"2344:12:25"},"nativeSrc":"2344:23:25","nodeType":"YulFunctionCall","src":"2344:23:25"},"variableNames":[{"name":"value","nativeSrc":"2335:5:25","nodeType":"YulIdentifier","src":"2335:5:25"}]},{"nativeSrc":"2376:15:25","nodeType":"YulAssignment","src":"2376:15:25","value":{"name":"value","nativeSrc":"2386:5:25","nodeType":"YulIdentifier","src":"2386:5:25"},"variableNames":[{"name":"value0","nativeSrc":"2376:6:25","nodeType":"YulIdentifier","src":"2376:6:25"}]}]},"name":"abi_decode_tuple_t_bytes32","nativeSrc":"2171:226:25","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"2207:9:25","nodeType":"YulTypedName","src":"2207:9:25","type":""},{"name":"dataEnd","nativeSrc":"2218:7:25","nodeType":"YulTypedName","src":"2218:7:25","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"2230:6:25","nodeType":"YulTypedName","src":"2230:6:25","type":""}],"src":"2171:226:25"},{"body":{"nativeSrc":"2503:76:25","nodeType":"YulBlock","src":"2503:76:25","statements":[{"nativeSrc":"2513:26:25","nodeType":"YulAssignment","src":"2513:26:25","value":{"arguments":[{"name":"headStart","nativeSrc":"2525:9:25","nodeType":"YulIdentifier","src":"2525:9:25"},{"kind":"number","nativeSrc":"2536:2:25","nodeType":"YulLiteral","src":"2536:2:25","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"2521:3:25","nodeType":"YulIdentifier","src":"2521:3:25"},"nativeSrc":"2521:18:25","nodeType":"YulFunctionCall","src":"2521:18:25"},"variableNames":[{"name":"tail","nativeSrc":"2513:4:25","nodeType":"YulIdentifier","src":"2513:4:25"}]},{"expression":{"arguments":[{"name":"headStart","nativeSrc":"2555:9:25","nodeType":"YulIdentifier","src":"2555:9:25"},{"name":"value0","nativeSrc":"2566:6:25","nodeType":"YulIdentifier","src":"2566:6:25"}],"functionName":{"name":"mstore","nativeSrc":"2548:6:25","nodeType":"YulIdentifier","src":"2548:6:25"},"nativeSrc":"2548:25:25","nodeType":"YulFunctionCall","src":"2548:25:25"},"nativeSrc":"2548:25:25","nodeType":"YulExpressionStatement","src":"2548:25:25"}]},"name":"abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed","nativeSrc":"2402:177:25","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"2472:9:25","nodeType":"YulTypedName","src":"2472:9:25","type":""},{"name":"value0","nativeSrc":"2483:6:25","nodeType":"YulTypedName","src":"2483:6:25","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"2494:4:25","nodeType":"YulTypedName","src":"2494:4:25","type":""}],"src":"2402:177:25"},{"body":{"nativeSrc":"2654:116:25","nodeType":"YulBlock","src":"2654:116:25","statements":[{"body":{"nativeSrc":"2700:16:25","nodeType":"YulBlock","src":"2700:16:25","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"2709:1:25","nodeType":"YulLiteral","src":"2709:1:25","type":"","value":"0"},{"kind":"number","nativeSrc":"2712:1:25","nodeType":"YulLiteral","src":"2712:1:25","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"2702:6:25","nodeType":"YulIdentifier","src":"2702:6:25"},"nativeSrc":"2702:12:25","nodeType":"YulFunctionCall","src":"2702:12:25"},"nativeSrc":"2702:12:25","nodeType":"YulExpressionStatement","src":"2702:12:25"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"2675:7:25","nodeType":"YulIdentifier","src":"2675:7:25"},{"name":"headStart","nativeSrc":"2684:9:25","nodeType":"YulIdentifier","src":"2684:9:25"}],"functionName":{"name":"sub","nativeSrc":"2671:3:25","nodeType":"YulIdentifier","src":"2671:3:25"},"nativeSrc":"2671:23:25","nodeType":"YulFunctionCall","src":"2671:23:25"},{"kind":"number","nativeSrc":"2696:2:25","nodeType":"YulLiteral","src":"2696:2:25","type":"","value":"32"}],"functionName":{"name":"slt","nativeSrc":"2667:3:25","nodeType":"YulIdentifier","src":"2667:3:25"},"nativeSrc":"2667:32:25","nodeType":"YulFunctionCall","src":"2667:32:25"},"nativeSrc":"2664:52:25","nodeType":"YulIf","src":"2664:52:25"},{"nativeSrc":"2725:39:25","nodeType":"YulAssignment","src":"2725:39:25","value":{"arguments":[{"name":"headStart","nativeSrc":"2754:9:25","nodeType":"YulIdentifier","src":"2754:9:25"}],"functionName":{"name":"abi_decode_address","nativeSrc":"2735:18:25","nodeType":"YulIdentifier","src":"2735:18:25"},"nativeSrc":"2735:29:25","nodeType":"YulFunctionCall","src":"2735:29:25"},"variableNames":[{"name":"value0","nativeSrc":"2725:6:25","nodeType":"YulIdentifier","src":"2725:6:25"}]}]},"name":"abi_decode_tuple_t_address","nativeSrc":"2584:186:25","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"2620:9:25","nodeType":"YulTypedName","src":"2620:9:25","type":""},{"name":"dataEnd","nativeSrc":"2631:7:25","nodeType":"YulTypedName","src":"2631:7:25","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"2643:6:25","nodeType":"YulTypedName","src":"2643:6:25","type":""}],"src":"2584:186:25"},{"body":{"nativeSrc":"2862:213:25","nodeType":"YulBlock","src":"2862:213:25","statements":[{"body":{"nativeSrc":"2908:16:25","nodeType":"YulBlock","src":"2908:16:25","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"2917:1:25","nodeType":"YulLiteral","src":"2917:1:25","type":"","value":"0"},{"kind":"number","nativeSrc":"2920:1:25","nodeType":"YulLiteral","src":"2920:1:25","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"2910:6:25","nodeType":"YulIdentifier","src":"2910:6:25"},"nativeSrc":"2910:12:25","nodeType":"YulFunctionCall","src":"2910:12:25"},"nativeSrc":"2910:12:25","nodeType":"YulExpressionStatement","src":"2910:12:25"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"2883:7:25","nodeType":"YulIdentifier","src":"2883:7:25"},{"name":"headStart","nativeSrc":"2892:9:25","nodeType":"YulIdentifier","src":"2892:9:25"}],"functionName":{"name":"sub","nativeSrc":"2879:3:25","nodeType":"YulIdentifier","src":"2879:3:25"},"nativeSrc":"2879:23:25","nodeType":"YulFunctionCall","src":"2879:23:25"},{"kind":"number","nativeSrc":"2904:2:25","nodeType":"YulLiteral","src":"2904:2:25","type":"","value":"64"}],"functionName":{"name":"slt","nativeSrc":"2875:3:25","nodeType":"YulIdentifier","src":"2875:3:25"},"nativeSrc":"2875:32:25","nodeType":"YulFunctionCall","src":"2875:32:25"},"nativeSrc":"2872:52:25","nodeType":"YulIf","src":"2872:52:25"},{"nativeSrc":"2933:14:25","nodeType":"YulVariableDeclaration","src":"2933:14:25","value":{"kind":"number","nativeSrc":"2946:1:25","nodeType":"YulLiteral","src":"2946:1:25","type":"","value":"0"},"variables":[{"name":"value","nativeSrc":"2937:5:25","nodeType":"YulTypedName","src":"2937:5:25","type":""}]},{"nativeSrc":"2956:32:25","nodeType":"YulAssignment","src":"2956:32:25","value":{"arguments":[{"name":"headStart","nativeSrc":"2978:9:25","nodeType":"YulIdentifier","src":"2978:9:25"}],"functionName":{"name":"calldataload","nativeSrc":"2965:12:25","nodeType":"YulIdentifier","src":"2965:12:25"},"nativeSrc":"2965:23:25","nodeType":"YulFunctionCall","src":"2965:23:25"},"variableNames":[{"name":"value","nativeSrc":"2956:5:25","nodeType":"YulIdentifier","src":"2956:5:25"}]},{"nativeSrc":"2997:15:25","nodeType":"YulAssignment","src":"2997:15:25","value":{"name":"value","nativeSrc":"3007:5:25","nodeType":"YulIdentifier","src":"3007:5:25"},"variableNames":[{"name":"value0","nativeSrc":"2997:6:25","nodeType":"YulIdentifier","src":"2997:6:25"}]},{"nativeSrc":"3021:48:25","nodeType":"YulAssignment","src":"3021:48:25","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"3054:9:25","nodeType":"YulIdentifier","src":"3054:9:25"},{"kind":"number","nativeSrc":"3065:2:25","nodeType":"YulLiteral","src":"3065:2:25","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"3050:3:25","nodeType":"YulIdentifier","src":"3050:3:25"},"nativeSrc":"3050:18:25","nodeType":"YulFunctionCall","src":"3050:18:25"}],"functionName":{"name":"abi_decode_address","nativeSrc":"3031:18:25","nodeType":"YulIdentifier","src":"3031:18:25"},"nativeSrc":"3031:38:25","nodeType":"YulFunctionCall","src":"3031:38:25"},"variableNames":[{"name":"value1","nativeSrc":"3021:6:25","nodeType":"YulIdentifier","src":"3021:6:25"}]}]},"name":"abi_decode_tuple_t_bytes32t_address","nativeSrc":"2775:300:25","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"2820:9:25","nodeType":"YulTypedName","src":"2820:9:25","type":""},{"name":"dataEnd","nativeSrc":"2831:7:25","nodeType":"YulTypedName","src":"2831:7:25","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"2843:6:25","nodeType":"YulTypedName","src":"2843:6:25","type":""},{"name":"value1","nativeSrc":"2851:6:25","nodeType":"YulTypedName","src":"2851:6:25","type":""}],"src":"2775:300:25"},{"body":{"nativeSrc":"3177:87:25","nodeType":"YulBlock","src":"3177:87:25","statements":[{"nativeSrc":"3187:26:25","nodeType":"YulAssignment","src":"3187:26:25","value":{"arguments":[{"name":"headStart","nativeSrc":"3199:9:25","nodeType":"YulIdentifier","src":"3199:9:25"},{"kind":"number","nativeSrc":"3210:2:25","nodeType":"YulLiteral","src":"3210:2:25","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"3195:3:25","nodeType":"YulIdentifier","src":"3195:3:25"},"nativeSrc":"3195:18:25","nodeType":"YulFunctionCall","src":"3195:18:25"},"variableNames":[{"name":"tail","nativeSrc":"3187:4:25","nodeType":"YulIdentifier","src":"3187:4:25"}]},{"expression":{"arguments":[{"name":"headStart","nativeSrc":"3229:9:25","nodeType":"YulIdentifier","src":"3229:9:25"},{"arguments":[{"name":"value0","nativeSrc":"3244:6:25","nodeType":"YulIdentifier","src":"3244:6:25"},{"kind":"number","nativeSrc":"3252:4:25","nodeType":"YulLiteral","src":"3252:4:25","type":"","value":"0xff"}],"functionName":{"name":"and","nativeSrc":"3240:3:25","nodeType":"YulIdentifier","src":"3240:3:25"},"nativeSrc":"3240:17:25","nodeType":"YulFunctionCall","src":"3240:17:25"}],"functionName":{"name":"mstore","nativeSrc":"3222:6:25","nodeType":"YulIdentifier","src":"3222:6:25"},"nativeSrc":"3222:36:25","nodeType":"YulFunctionCall","src":"3222:36:25"},"nativeSrc":"3222:36:25","nodeType":"YulExpressionStatement","src":"3222:36:25"}]},"name":"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed","nativeSrc":"3080:184:25","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"3146:9:25","nodeType":"YulTypedName","src":"3146:9:25","type":""},{"name":"value0","nativeSrc":"3157:6:25","nodeType":"YulTypedName","src":"3157:6:25","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"3168:4:25","nodeType":"YulTypedName","src":"3168:4:25","type":""}],"src":"3080:184:25"},{"body":{"nativeSrc":"3339:156:25","nodeType":"YulBlock","src":"3339:156:25","statements":[{"body":{"nativeSrc":"3385:16:25","nodeType":"YulBlock","src":"3385:16:25","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"3394:1:25","nodeType":"YulLiteral","src":"3394:1:25","type":"","value":"0"},{"kind":"number","nativeSrc":"3397:1:25","nodeType":"YulLiteral","src":"3397:1:25","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"3387:6:25","nodeType":"YulIdentifier","src":"3387:6:25"},"nativeSrc":"3387:12:25","nodeType":"YulFunctionCall","src":"3387:12:25"},"nativeSrc":"3387:12:25","nodeType":"YulExpressionStatement","src":"3387:12:25"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"3360:7:25","nodeType":"YulIdentifier","src":"3360:7:25"},{"name":"headStart","nativeSrc":"3369:9:25","nodeType":"YulIdentifier","src":"3369:9:25"}],"functionName":{"name":"sub","nativeSrc":"3356:3:25","nodeType":"YulIdentifier","src":"3356:3:25"},"nativeSrc":"3356:23:25","nodeType":"YulFunctionCall","src":"3356:23:25"},{"kind":"number","nativeSrc":"3381:2:25","nodeType":"YulLiteral","src":"3381:2:25","type":"","value":"32"}],"functionName":{"name":"slt","nativeSrc":"3352:3:25","nodeType":"YulIdentifier","src":"3352:3:25"},"nativeSrc":"3352:32:25","nodeType":"YulFunctionCall","src":"3352:32:25"},"nativeSrc":"3349:52:25","nodeType":"YulIf","src":"3349:52:25"},{"nativeSrc":"3410:14:25","nodeType":"YulVariableDeclaration","src":"3410:14:25","value":{"kind":"number","nativeSrc":"3423:1:25","nodeType":"YulLiteral","src":"3423:1:25","type":"","value":"0"},"variables":[{"name":"value","nativeSrc":"3414:5:25","nodeType":"YulTypedName","src":"3414:5:25","type":""}]},{"nativeSrc":"3433:32:25","nodeType":"YulAssignment","src":"3433:32:25","value":{"arguments":[{"name":"headStart","nativeSrc":"3455:9:25","nodeType":"YulIdentifier","src":"3455:9:25"}],"functionName":{"name":"calldataload","nativeSrc":"3442:12:25","nodeType":"YulIdentifier","src":"3442:12:25"},"nativeSrc":"3442:23:25","nodeType":"YulFunctionCall","src":"3442:23:25"},"variableNames":[{"name":"value","nativeSrc":"3433:5:25","nodeType":"YulIdentifier","src":"3433:5:25"}]},{"nativeSrc":"3474:15:25","nodeType":"YulAssignment","src":"3474:15:25","value":{"name":"value","nativeSrc":"3484:5:25","nodeType":"YulIdentifier","src":"3484:5:25"},"variableNames":[{"name":"value0","nativeSrc":"3474:6:25","nodeType":"YulIdentifier","src":"3474:6:25"}]}]},"name":"abi_decode_tuple_t_uint256","nativeSrc":"3269:226:25","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"3305:9:25","nodeType":"YulTypedName","src":"3305:9:25","type":""},{"name":"dataEnd","nativeSrc":"3316:7:25","nodeType":"YulTypedName","src":"3316:7:25","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"3328:6:25","nodeType":"YulTypedName","src":"3328:6:25","type":""}],"src":"3269:226:25"},{"body":{"nativeSrc":"3857:881:25","nodeType":"YulBlock","src":"3857:881:25","statements":[{"expression":{"arguments":[{"name":"headStart","nativeSrc":"3874:9:25","nodeType":"YulIdentifier","src":"3874:9:25"},{"arguments":[{"name":"value0","nativeSrc":"3889:6:25","nodeType":"YulIdentifier","src":"3889:6:25"},{"arguments":[{"kind":"number","nativeSrc":"3901:3:25","nodeType":"YulLiteral","src":"3901:3:25","type":"","value":"248"},{"kind":"number","nativeSrc":"3906:3:25","nodeType":"YulLiteral","src":"3906:3:25","type":"","value":"255"}],"functionName":{"name":"shl","nativeSrc":"3897:3:25","nodeType":"YulIdentifier","src":"3897:3:25"},"nativeSrc":"3897:13:25","nodeType":"YulFunctionCall","src":"3897:13:25"}],"functionName":{"name":"and","nativeSrc":"3885:3:25","nodeType":"YulIdentifier","src":"3885:3:25"},"nativeSrc":"3885:26:25","nodeType":"YulFunctionCall","src":"3885:26:25"}],"functionName":{"name":"mstore","nativeSrc":"3867:6:25","nodeType":"YulIdentifier","src":"3867:6:25"},"nativeSrc":"3867:45:25","nodeType":"YulFunctionCall","src":"3867:45:25"},"nativeSrc":"3867:45:25","nodeType":"YulExpressionStatement","src":"3867:45:25"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"3932:9:25","nodeType":"YulIdentifier","src":"3932:9:25"},{"kind":"number","nativeSrc":"3943:2:25","nodeType":"YulLiteral","src":"3943:2:25","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"3928:3:25","nodeType":"YulIdentifier","src":"3928:3:25"},"nativeSrc":"3928:18:25","nodeType":"YulFunctionCall","src":"3928:18:25"},{"kind":"number","nativeSrc":"3948:3:25","nodeType":"YulLiteral","src":"3948:3:25","type":"","value":"224"}],"functionName":{"name":"mstore","nativeSrc":"3921:6:25","nodeType":"YulIdentifier","src":"3921:6:25"},"nativeSrc":"3921:31:25","nodeType":"YulFunctionCall","src":"3921:31:25"},"nativeSrc":"3921:31:25","nodeType":"YulExpressionStatement","src":"3921:31:25"},{"nativeSrc":"3961:60:25","nodeType":"YulVariableDeclaration","src":"3961:60:25","value":{"arguments":[{"name":"value1","nativeSrc":"3993:6:25","nodeType":"YulIdentifier","src":"3993:6:25"},{"arguments":[{"name":"headStart","nativeSrc":"4005:9:25","nodeType":"YulIdentifier","src":"4005:9:25"},{"kind":"number","nativeSrc":"4016:3:25","nodeType":"YulLiteral","src":"4016:3:25","type":"","value":"224"}],"functionName":{"name":"add","nativeSrc":"4001:3:25","nodeType":"YulIdentifier","src":"4001:3:25"},"nativeSrc":"4001:19:25","nodeType":"YulFunctionCall","src":"4001:19:25"}],"functionName":{"name":"abi_encode_string","nativeSrc":"3975:17:25","nodeType":"YulIdentifier","src":"3975:17:25"},"nativeSrc":"3975:46:25","nodeType":"YulFunctionCall","src":"3975:46:25"},"variables":[{"name":"tail_1","nativeSrc":"3965:6:25","nodeType":"YulTypedName","src":"3965:6:25","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"4041:9:25","nodeType":"YulIdentifier","src":"4041:9:25"},{"kind":"number","nativeSrc":"4052:2:25","nodeType":"YulLiteral","src":"4052:2:25","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"4037:3:25","nodeType":"YulIdentifier","src":"4037:3:25"},"nativeSrc":"4037:18:25","nodeType":"YulFunctionCall","src":"4037:18:25"},{"arguments":[{"name":"tail_1","nativeSrc":"4061:6:25","nodeType":"YulIdentifier","src":"4061:6:25"},{"name":"headStart","nativeSrc":"4069:9:25","nodeType":"YulIdentifier","src":"4069:9:25"}],"functionName":{"name":"sub","nativeSrc":"4057:3:25","nodeType":"YulIdentifier","src":"4057:3:25"},"nativeSrc":"4057:22:25","nodeType":"YulFunctionCall","src":"4057:22:25"}],"functionName":{"name":"mstore","nativeSrc":"4030:6:25","nodeType":"YulIdentifier","src":"4030:6:25"},"nativeSrc":"4030:50:25","nodeType":"YulFunctionCall","src":"4030:50:25"},"nativeSrc":"4030:50:25","nodeType":"YulExpressionStatement","src":"4030:50:25"},{"nativeSrc":"4089:47:25","nodeType":"YulVariableDeclaration","src":"4089:47:25","value":{"arguments":[{"name":"value2","nativeSrc":"4121:6:25","nodeType":"YulIdentifier","src":"4121:6:25"},{"name":"tail_1","nativeSrc":"4129:6:25","nodeType":"YulIdentifier","src":"4129:6:25"}],"functionName":{"name":"abi_encode_string","nativeSrc":"4103:17:25","nodeType":"YulIdentifier","src":"4103:17:25"},"nativeSrc":"4103:33:25","nodeType":"YulFunctionCall","src":"4103:33:25"},"variables":[{"name":"tail_2","nativeSrc":"4093:6:25","nodeType":"YulTypedName","src":"4093:6:25","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"4156:9:25","nodeType":"YulIdentifier","src":"4156:9:25"},{"kind":"number","nativeSrc":"4167:2:25","nodeType":"YulLiteral","src":"4167:2:25","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"4152:3:25","nodeType":"YulIdentifier","src":"4152:3:25"},"nativeSrc":"4152:18:25","nodeType":"YulFunctionCall","src":"4152:18:25"},{"name":"value3","nativeSrc":"4172:6:25","nodeType":"YulIdentifier","src":"4172:6:25"}],"functionName":{"name":"mstore","nativeSrc":"4145:6:25","nodeType":"YulIdentifier","src":"4145:6:25"},"nativeSrc":"4145:34:25","nodeType":"YulFunctionCall","src":"4145:34:25"},"nativeSrc":"4145:34:25","nodeType":"YulExpressionStatement","src":"4145:34:25"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"4199:9:25","nodeType":"YulIdentifier","src":"4199:9:25"},{"kind":"number","nativeSrc":"4210:3:25","nodeType":"YulLiteral","src":"4210:3:25","type":"","value":"128"}],"functionName":{"name":"add","nativeSrc":"4195:3:25","nodeType":"YulIdentifier","src":"4195:3:25"},"nativeSrc":"4195:19:25","nodeType":"YulFunctionCall","src":"4195:19:25"},{"arguments":[{"name":"value4","nativeSrc":"4220:6:25","nodeType":"YulIdentifier","src":"4220:6:25"},{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"4236:3:25","nodeType":"YulLiteral","src":"4236:3:25","type":"","value":"160"},{"kind":"number","nativeSrc":"4241:1:25","nodeType":"YulLiteral","src":"4241:1:25","type":"","value":"1"}],"functionName":{"name":"shl","nativeSrc":"4232:3:25","nodeType":"YulIdentifier","src":"4232:3:25"},"nativeSrc":"4232:11:25","nodeType":"YulFunctionCall","src":"4232:11:25"},{"kind":"number","nativeSrc":"4245:1:25","nodeType":"YulLiteral","src":"4245:1:25","type":"","value":"1"}],"functionName":{"name":"sub","nativeSrc":"4228:3:25","nodeType":"YulIdentifier","src":"4228:3:25"},"nativeSrc":"4228:19:25","nodeType":"YulFunctionCall","src":"4228:19:25"}],"functionName":{"name":"and","nativeSrc":"4216:3:25","nodeType":"YulIdentifier","src":"4216:3:25"},"nativeSrc":"4216:32:25","nodeType":"YulFunctionCall","src":"4216:32:25"}],"functionName":{"name":"mstore","nativeSrc":"4188:6:25","nodeType":"YulIdentifier","src":"4188:6:25"},"nativeSrc":"4188:61:25","nodeType":"YulFunctionCall","src":"4188:61:25"},"nativeSrc":"4188:61:25","nodeType":"YulExpressionStatement","src":"4188:61:25"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"4269:9:25","nodeType":"YulIdentifier","src":"4269:9:25"},{"kind":"number","nativeSrc":"4280:3:25","nodeType":"YulLiteral","src":"4280:3:25","type":"","value":"160"}],"functionName":{"name":"add","nativeSrc":"4265:3:25","nodeType":"YulIdentifier","src":"4265:3:25"},"nativeSrc":"4265:19:25","nodeType":"YulFunctionCall","src":"4265:19:25"},{"name":"value5","nativeSrc":"4286:6:25","nodeType":"YulIdentifier","src":"4286:6:25"}],"functionName":{"name":"mstore","nativeSrc":"4258:6:25","nodeType":"YulIdentifier","src":"4258:6:25"},"nativeSrc":"4258:35:25","nodeType":"YulFunctionCall","src":"4258:35:25"},"nativeSrc":"4258:35:25","nodeType":"YulExpressionStatement","src":"4258:35:25"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"4313:9:25","nodeType":"YulIdentifier","src":"4313:9:25"},{"kind":"number","nativeSrc":"4324:3:25","nodeType":"YulLiteral","src":"4324:3:25","type":"","value":"192"}],"functionName":{"name":"add","nativeSrc":"4309:3:25","nodeType":"YulIdentifier","src":"4309:3:25"},"nativeSrc":"4309:19:25","nodeType":"YulFunctionCall","src":"4309:19:25"},{"arguments":[{"name":"tail_2","nativeSrc":"4334:6:25","nodeType":"YulIdentifier","src":"4334:6:25"},{"name":"headStart","nativeSrc":"4342:9:25","nodeType":"YulIdentifier","src":"4342:9:25"}],"functionName":{"name":"sub","nativeSrc":"4330:3:25","nodeType":"YulIdentifier","src":"4330:3:25"},"nativeSrc":"4330:22:25","nodeType":"YulFunctionCall","src":"4330:22:25"}],"functionName":{"name":"mstore","nativeSrc":"4302:6:25","nodeType":"YulIdentifier","src":"4302:6:25"},"nativeSrc":"4302:51:25","nodeType":"YulFunctionCall","src":"4302:51:25"},"nativeSrc":"4302:51:25","nodeType":"YulExpressionStatement","src":"4302:51:25"},{"nativeSrc":"4362:17:25","nodeType":"YulVariableDeclaration","src":"4362:17:25","value":{"name":"tail_2","nativeSrc":"4373:6:25","nodeType":"YulIdentifier","src":"4373:6:25"},"variables":[{"name":"pos","nativeSrc":"4366:3:25","nodeType":"YulTypedName","src":"4366:3:25","type":""}]},{"nativeSrc":"4388:27:25","nodeType":"YulVariableDeclaration","src":"4388:27:25","value":{"arguments":[{"name":"value6","nativeSrc":"4408:6:25","nodeType":"YulIdentifier","src":"4408:6:25"}],"functionName":{"name":"mload","nativeSrc":"4402:5:25","nodeType":"YulIdentifier","src":"4402:5:25"},"nativeSrc":"4402:13:25","nodeType":"YulFunctionCall","src":"4402:13:25"},"variables":[{"name":"length","nativeSrc":"4392:6:25","nodeType":"YulTypedName","src":"4392:6:25","type":""}]},{"expression":{"arguments":[{"name":"tail_2","nativeSrc":"4431:6:25","nodeType":"YulIdentifier","src":"4431:6:25"},{"name":"length","nativeSrc":"4439:6:25","nodeType":"YulIdentifier","src":"4439:6:25"}],"functionName":{"name":"mstore","nativeSrc":"4424:6:25","nodeType":"YulIdentifier","src":"4424:6:25"},"nativeSrc":"4424:22:25","nodeType":"YulFunctionCall","src":"4424:22:25"},"nativeSrc":"4424:22:25","nodeType":"YulExpressionStatement","src":"4424:22:25"},{"nativeSrc":"4455:22:25","nodeType":"YulAssignment","src":"4455:22:25","value":{"arguments":[{"name":"tail_2","nativeSrc":"4466:6:25","nodeType":"YulIdentifier","src":"4466:6:25"},{"kind":"number","nativeSrc":"4474:2:25","nodeType":"YulLiteral","src":"4474:2:25","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"4462:3:25","nodeType":"YulIdentifier","src":"4462:3:25"},"nativeSrc":"4462:15:25","nodeType":"YulFunctionCall","src":"4462:15:25"},"variableNames":[{"name":"pos","nativeSrc":"4455:3:25","nodeType":"YulIdentifier","src":"4455:3:25"}]},{"nativeSrc":"4486:29:25","nodeType":"YulVariableDeclaration","src":"4486:29:25","value":{"arguments":[{"name":"value6","nativeSrc":"4504:6:25","nodeType":"YulIdentifier","src":"4504:6:25"},{"kind":"number","nativeSrc":"4512:2:25","nodeType":"YulLiteral","src":"4512:2:25","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"4500:3:25","nodeType":"YulIdentifier","src":"4500:3:25"},"nativeSrc":"4500:15:25","nodeType":"YulFunctionCall","src":"4500:15:25"},"variables":[{"name":"srcPtr","nativeSrc":"4490:6:25","nodeType":"YulTypedName","src":"4490:6:25","type":""}]},{"nativeSrc":"4524:10:25","nodeType":"YulVariableDeclaration","src":"4524:10:25","value":{"kind":"number","nativeSrc":"4533:1:25","nodeType":"YulLiteral","src":"4533:1:25","type":"","value":"0"},"variables":[{"name":"i","nativeSrc":"4528:1:25","nodeType":"YulTypedName","src":"4528:1:25","type":""}]},{"body":{"nativeSrc":"4592:120:25","nodeType":"YulBlock","src":"4592:120:25","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"4613:3:25","nodeType":"YulIdentifier","src":"4613:3:25"},{"arguments":[{"name":"srcPtr","nativeSrc":"4624:6:25","nodeType":"YulIdentifier","src":"4624:6:25"}],"functionName":{"name":"mload","nativeSrc":"4618:5:25","nodeType":"YulIdentifier","src":"4618:5:25"},"nativeSrc":"4618:13:25","nodeType":"YulFunctionCall","src":"4618:13:25"}],"functionName":{"name":"mstore","nativeSrc":"4606:6:25","nodeType":"YulIdentifier","src":"4606:6:25"},"nativeSrc":"4606:26:25","nodeType":"YulFunctionCall","src":"4606:26:25"},"nativeSrc":"4606:26:25","nodeType":"YulExpressionStatement","src":"4606:26:25"},{"nativeSrc":"4645:19:25","nodeType":"YulAssignment","src":"4645:19:25","value":{"arguments":[{"name":"pos","nativeSrc":"4656:3:25","nodeType":"YulIdentifier","src":"4656:3:25"},{"kind":"number","nativeSrc":"4661:2:25","nodeType":"YulLiteral","src":"4661:2:25","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"4652:3:25","nodeType":"YulIdentifier","src":"4652:3:25"},"nativeSrc":"4652:12:25","nodeType":"YulFunctionCall","src":"4652:12:25"},"variableNames":[{"name":"pos","nativeSrc":"4645:3:25","nodeType":"YulIdentifier","src":"4645:3:25"}]},{"nativeSrc":"4677:25:25","nodeType":"YulAssignment","src":"4677:25:25","value":{"arguments":[{"name":"srcPtr","nativeSrc":"4691:6:25","nodeType":"YulIdentifier","src":"4691:6:25"},{"kind":"number","nativeSrc":"4699:2:25","nodeType":"YulLiteral","src":"4699:2:25","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"4687:3:25","nodeType":"YulIdentifier","src":"4687:3:25"},"nativeSrc":"4687:15:25","nodeType":"YulFunctionCall","src":"4687:15:25"},"variableNames":[{"name":"srcPtr","nativeSrc":"4677:6:25","nodeType":"YulIdentifier","src":"4677:6:25"}]}]},"condition":{"arguments":[{"name":"i","nativeSrc":"4554:1:25","nodeType":"YulIdentifier","src":"4554:1:25"},{"name":"length","nativeSrc":"4557:6:25","nodeType":"YulIdentifier","src":"4557:6:25"}],"functionName":{"name":"lt","nativeSrc":"4551:2:25","nodeType":"YulIdentifier","src":"4551:2:25"},"nativeSrc":"4551:13:25","nodeType":"YulFunctionCall","src":"4551:13:25"},"nativeSrc":"4543:169:25","nodeType":"YulForLoop","post":{"nativeSrc":"4565:18:25","nodeType":"YulBlock","src":"4565:18:25","statements":[{"nativeSrc":"4567:14:25","nodeType":"YulAssignment","src":"4567:14:25","value":{"arguments":[{"name":"i","nativeSrc":"4576:1:25","nodeType":"YulIdentifier","src":"4576:1:25"},{"kind":"number","nativeSrc":"4579:1:25","nodeType":"YulLiteral","src":"4579:1:25","type":"","value":"1"}],"functionName":{"name":"add","nativeSrc":"4572:3:25","nodeType":"YulIdentifier","src":"4572:3:25"},"nativeSrc":"4572:9:25","nodeType":"YulFunctionCall","src":"4572:9:25"},"variableNames":[{"name":"i","nativeSrc":"4567:1:25","nodeType":"YulIdentifier","src":"4567:1:25"}]}]},"pre":{"nativeSrc":"4547:3:25","nodeType":"YulBlock","src":"4547:3:25","statements":[]},"src":"4543:169:25"},{"nativeSrc":"4721:11:25","nodeType":"YulAssignment","src":"4721:11:25","value":{"name":"pos","nativeSrc":"4729:3:25","nodeType":"YulIdentifier","src":"4729:3:25"},"variableNames":[{"name":"tail","nativeSrc":"4721:4:25","nodeType":"YulIdentifier","src":"4721:4:25"}]}]},"name":"abi_encode_tuple_t_bytes1_t_string_memory_ptr_t_string_memory_ptr_t_uint256_t_address_t_bytes32_t_array$_t_uint256_$dyn_memory_ptr__to_t_bytes1_t_string_memory_ptr_t_string_memory_ptr_t_uint256_t_address_t_bytes32_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed","nativeSrc":"3500:1238:25","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"3778:9:25","nodeType":"YulTypedName","src":"3778:9:25","type":""},{"name":"value6","nativeSrc":"3789:6:25","nodeType":"YulTypedName","src":"3789:6:25","type":""},{"name":"value5","nativeSrc":"3797:6:25","nodeType":"YulTypedName","src":"3797:6:25","type":""},{"name":"value4","nativeSrc":"3805:6:25","nodeType":"YulTypedName","src":"3805:6:25","type":""},{"name":"value3","nativeSrc":"3813:6:25","nodeType":"YulTypedName","src":"3813:6:25","type":""},{"name":"value2","nativeSrc":"3821:6:25","nodeType":"YulTypedName","src":"3821:6:25","type":""},{"name":"value1","nativeSrc":"3829:6:25","nodeType":"YulTypedName","src":"3829:6:25","type":""},{"name":"value0","nativeSrc":"3837:6:25","nodeType":"YulTypedName","src":"3837:6:25","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"3848:4:25","nodeType":"YulTypedName","src":"3848:4:25","type":""}],"src":"3500:1238:25"},{"body":{"nativeSrc":"4827:283:25","nodeType":"YulBlock","src":"4827:283:25","statements":[{"body":{"nativeSrc":"4876:16:25","nodeType":"YulBlock","src":"4876:16:25","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"4885:1:25","nodeType":"YulLiteral","src":"4885:1:25","type":"","value":"0"},{"kind":"number","nativeSrc":"4888:1:25","nodeType":"YulLiteral","src":"4888:1:25","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"4878:6:25","nodeType":"YulIdentifier","src":"4878:6:25"},"nativeSrc":"4878:12:25","nodeType":"YulFunctionCall","src":"4878:12:25"},"nativeSrc":"4878:12:25","nodeType":"YulExpressionStatement","src":"4878:12:25"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nativeSrc":"4855:6:25","nodeType":"YulIdentifier","src":"4855:6:25"},{"kind":"number","nativeSrc":"4863:4:25","nodeType":"YulLiteral","src":"4863:4:25","type":"","value":"0x1f"}],"functionName":{"name":"add","nativeSrc":"4851:3:25","nodeType":"YulIdentifier","src":"4851:3:25"},"nativeSrc":"4851:17:25","nodeType":"YulFunctionCall","src":"4851:17:25"},{"name":"end","nativeSrc":"4870:3:25","nodeType":"YulIdentifier","src":"4870:3:25"}],"functionName":{"name":"slt","nativeSrc":"4847:3:25","nodeType":"YulIdentifier","src":"4847:3:25"},"nativeSrc":"4847:27:25","nodeType":"YulFunctionCall","src":"4847:27:25"}],"functionName":{"name":"iszero","nativeSrc":"4840:6:25","nodeType":"YulIdentifier","src":"4840:6:25"},"nativeSrc":"4840:35:25","nodeType":"YulFunctionCall","src":"4840:35:25"},"nativeSrc":"4837:55:25","nodeType":"YulIf","src":"4837:55:25"},{"nativeSrc":"4901:30:25","nodeType":"YulAssignment","src":"4901:30:25","value":{"arguments":[{"name":"offset","nativeSrc":"4924:6:25","nodeType":"YulIdentifier","src":"4924:6:25"}],"functionName":{"name":"calldataload","nativeSrc":"4911:12:25","nodeType":"YulIdentifier","src":"4911:12:25"},"nativeSrc":"4911:20:25","nodeType":"YulFunctionCall","src":"4911:20:25"},"variableNames":[{"name":"length","nativeSrc":"4901:6:25","nodeType":"YulIdentifier","src":"4901:6:25"}]},{"body":{"nativeSrc":"4974:16:25","nodeType":"YulBlock","src":"4974:16:25","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"4983:1:25","nodeType":"YulLiteral","src":"4983:1:25","type":"","value":"0"},{"kind":"number","nativeSrc":"4986:1:25","nodeType":"YulLiteral","src":"4986:1:25","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"4976:6:25","nodeType":"YulIdentifier","src":"4976:6:25"},"nativeSrc":"4976:12:25","nodeType":"YulFunctionCall","src":"4976:12:25"},"nativeSrc":"4976:12:25","nodeType":"YulExpressionStatement","src":"4976:12:25"}]},"condition":{"arguments":[{"name":"length","nativeSrc":"4946:6:25","nodeType":"YulIdentifier","src":"4946:6:25"},{"kind":"number","nativeSrc":"4954:18:25","nodeType":"YulLiteral","src":"4954:18:25","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nativeSrc":"4943:2:25","nodeType":"YulIdentifier","src":"4943:2:25"},"nativeSrc":"4943:30:25","nodeType":"YulFunctionCall","src":"4943:30:25"},"nativeSrc":"4940:50:25","nodeType":"YulIf","src":"4940:50:25"},{"nativeSrc":"4999:29:25","nodeType":"YulAssignment","src":"4999:29:25","value":{"arguments":[{"name":"offset","nativeSrc":"5015:6:25","nodeType":"YulIdentifier","src":"5015:6:25"},{"kind":"number","nativeSrc":"5023:4:25","nodeType":"YulLiteral","src":"5023:4:25","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"5011:3:25","nodeType":"YulIdentifier","src":"5011:3:25"},"nativeSrc":"5011:17:25","nodeType":"YulFunctionCall","src":"5011:17:25"},"variableNames":[{"name":"arrayPos","nativeSrc":"4999:8:25","nodeType":"YulIdentifier","src":"4999:8:25"}]},{"body":{"nativeSrc":"5088:16:25","nodeType":"YulBlock","src":"5088:16:25","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"5097:1:25","nodeType":"YulLiteral","src":"5097:1:25","type":"","value":"0"},{"kind":"number","nativeSrc":"5100:1:25","nodeType":"YulLiteral","src":"5100:1:25","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"5090:6:25","nodeType":"YulIdentifier","src":"5090:6:25"},"nativeSrc":"5090:12:25","nodeType":"YulFunctionCall","src":"5090:12:25"},"nativeSrc":"5090:12:25","nodeType":"YulExpressionStatement","src":"5090:12:25"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nativeSrc":"5051:6:25","nodeType":"YulIdentifier","src":"5051:6:25"},{"arguments":[{"kind":"number","nativeSrc":"5063:1:25","nodeType":"YulLiteral","src":"5063:1:25","type":"","value":"5"},{"name":"length","nativeSrc":"5066:6:25","nodeType":"YulIdentifier","src":"5066:6:25"}],"functionName":{"name":"shl","nativeSrc":"5059:3:25","nodeType":"YulIdentifier","src":"5059:3:25"},"nativeSrc":"5059:14:25","nodeType":"YulFunctionCall","src":"5059:14:25"}],"functionName":{"name":"add","nativeSrc":"5047:3:25","nodeType":"YulIdentifier","src":"5047:3:25"},"nativeSrc":"5047:27:25","nodeType":"YulFunctionCall","src":"5047:27:25"},{"kind":"number","nativeSrc":"5076:4:25","nodeType":"YulLiteral","src":"5076:4:25","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"5043:3:25","nodeType":"YulIdentifier","src":"5043:3:25"},"nativeSrc":"5043:38:25","nodeType":"YulFunctionCall","src":"5043:38:25"},{"name":"end","nativeSrc":"5083:3:25","nodeType":"YulIdentifier","src":"5083:3:25"}],"functionName":{"name":"gt","nativeSrc":"5040:2:25","nodeType":"YulIdentifier","src":"5040:2:25"},"nativeSrc":"5040:47:25","nodeType":"YulFunctionCall","src":"5040:47:25"},"nativeSrc":"5037:67:25","nodeType":"YulIf","src":"5037:67:25"}]},"name":"abi_decode_array_address_dyn_calldata","nativeSrc":"4743:367:25","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"4790:6:25","nodeType":"YulTypedName","src":"4790:6:25","type":""},{"name":"end","nativeSrc":"4798:3:25","nodeType":"YulTypedName","src":"4798:3:25","type":""}],"returnVariables":[{"name":"arrayPos","nativeSrc":"4806:8:25","nodeType":"YulTypedName","src":"4806:8:25","type":""},{"name":"length","nativeSrc":"4816:6:25","nodeType":"YulTypedName","src":"4816:6:25","type":""}],"src":"4743:367:25"},{"body":{"nativeSrc":"5272:611:25","nodeType":"YulBlock","src":"5272:611:25","statements":[{"body":{"nativeSrc":"5318:16:25","nodeType":"YulBlock","src":"5318:16:25","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"5327:1:25","nodeType":"YulLiteral","src":"5327:1:25","type":"","value":"0"},{"kind":"number","nativeSrc":"5330:1:25","nodeType":"YulLiteral","src":"5330:1:25","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"5320:6:25","nodeType":"YulIdentifier","src":"5320:6:25"},"nativeSrc":"5320:12:25","nodeType":"YulFunctionCall","src":"5320:12:25"},"nativeSrc":"5320:12:25","nodeType":"YulExpressionStatement","src":"5320:12:25"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"5293:7:25","nodeType":"YulIdentifier","src":"5293:7:25"},{"name":"headStart","nativeSrc":"5302:9:25","nodeType":"YulIdentifier","src":"5302:9:25"}],"functionName":{"name":"sub","nativeSrc":"5289:3:25","nodeType":"YulIdentifier","src":"5289:3:25"},"nativeSrc":"5289:23:25","nodeType":"YulFunctionCall","src":"5289:23:25"},{"kind":"number","nativeSrc":"5314:2:25","nodeType":"YulLiteral","src":"5314:2:25","type":"","value":"64"}],"functionName":{"name":"slt","nativeSrc":"5285:3:25","nodeType":"YulIdentifier","src":"5285:3:25"},"nativeSrc":"5285:32:25","nodeType":"YulFunctionCall","src":"5285:32:25"},"nativeSrc":"5282:52:25","nodeType":"YulIf","src":"5282:52:25"},{"nativeSrc":"5343:37:25","nodeType":"YulVariableDeclaration","src":"5343:37:25","value":{"arguments":[{"name":"headStart","nativeSrc":"5370:9:25","nodeType":"YulIdentifier","src":"5370:9:25"}],"functionName":{"name":"calldataload","nativeSrc":"5357:12:25","nodeType":"YulIdentifier","src":"5357:12:25"},"nativeSrc":"5357:23:25","nodeType":"YulFunctionCall","src":"5357:23:25"},"variables":[{"name":"offset","nativeSrc":"5347:6:25","nodeType":"YulTypedName","src":"5347:6:25","type":""}]},{"body":{"nativeSrc":"5423:16:25","nodeType":"YulBlock","src":"5423:16:25","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"5432:1:25","nodeType":"YulLiteral","src":"5432:1:25","type":"","value":"0"},{"kind":"number","nativeSrc":"5435:1:25","nodeType":"YulLiteral","src":"5435:1:25","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"5425:6:25","nodeType":"YulIdentifier","src":"5425:6:25"},"nativeSrc":"5425:12:25","nodeType":"YulFunctionCall","src":"5425:12:25"},"nativeSrc":"5425:12:25","nodeType":"YulExpressionStatement","src":"5425:12:25"}]},"condition":{"arguments":[{"name":"offset","nativeSrc":"5395:6:25","nodeType":"YulIdentifier","src":"5395:6:25"},{"kind":"number","nativeSrc":"5403:18:25","nodeType":"YulLiteral","src":"5403:18:25","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nativeSrc":"5392:2:25","nodeType":"YulIdentifier","src":"5392:2:25"},"nativeSrc":"5392:30:25","nodeType":"YulFunctionCall","src":"5392:30:25"},"nativeSrc":"5389:50:25","nodeType":"YulIf","src":"5389:50:25"},{"nativeSrc":"5448:96:25","nodeType":"YulVariableDeclaration","src":"5448:96:25","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"5516:9:25","nodeType":"YulIdentifier","src":"5516:9:25"},{"name":"offset","nativeSrc":"5527:6:25","nodeType":"YulIdentifier","src":"5527:6:25"}],"functionName":{"name":"add","nativeSrc":"5512:3:25","nodeType":"YulIdentifier","src":"5512:3:25"},"nativeSrc":"5512:22:25","nodeType":"YulFunctionCall","src":"5512:22:25"},{"name":"dataEnd","nativeSrc":"5536:7:25","nodeType":"YulIdentifier","src":"5536:7:25"}],"functionName":{"name":"abi_decode_array_address_dyn_calldata","nativeSrc":"5474:37:25","nodeType":"YulIdentifier","src":"5474:37:25"},"nativeSrc":"5474:70:25","nodeType":"YulFunctionCall","src":"5474:70:25"},"variables":[{"name":"value0_1","nativeSrc":"5452:8:25","nodeType":"YulTypedName","src":"5452:8:25","type":""},{"name":"value1_1","nativeSrc":"5462:8:25","nodeType":"YulTypedName","src":"5462:8:25","type":""}]},{"nativeSrc":"5553:18:25","nodeType":"YulAssignment","src":"5553:18:25","value":{"name":"value0_1","nativeSrc":"5563:8:25","nodeType":"YulIdentifier","src":"5563:8:25"},"variableNames":[{"name":"value0","nativeSrc":"5553:6:25","nodeType":"YulIdentifier","src":"5553:6:25"}]},{"nativeSrc":"5580:18:25","nodeType":"YulAssignment","src":"5580:18:25","value":{"name":"value1_1","nativeSrc":"5590:8:25","nodeType":"YulIdentifier","src":"5590:8:25"},"variableNames":[{"name":"value1","nativeSrc":"5580:6:25","nodeType":"YulIdentifier","src":"5580:6:25"}]},{"nativeSrc":"5607:48:25","nodeType":"YulVariableDeclaration","src":"5607:48:25","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"5640:9:25","nodeType":"YulIdentifier","src":"5640:9:25"},{"kind":"number","nativeSrc":"5651:2:25","nodeType":"YulLiteral","src":"5651:2:25","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"5636:3:25","nodeType":"YulIdentifier","src":"5636:3:25"},"nativeSrc":"5636:18:25","nodeType":"YulFunctionCall","src":"5636:18:25"}],"functionName":{"name":"calldataload","nativeSrc":"5623:12:25","nodeType":"YulIdentifier","src":"5623:12:25"},"nativeSrc":"5623:32:25","nodeType":"YulFunctionCall","src":"5623:32:25"},"variables":[{"name":"offset_1","nativeSrc":"5611:8:25","nodeType":"YulTypedName","src":"5611:8:25","type":""}]},{"body":{"nativeSrc":"5700:16:25","nodeType":"YulBlock","src":"5700:16:25","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"5709:1:25","nodeType":"YulLiteral","src":"5709:1:25","type":"","value":"0"},{"kind":"number","nativeSrc":"5712:1:25","nodeType":"YulLiteral","src":"5712:1:25","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"5702:6:25","nodeType":"YulIdentifier","src":"5702:6:25"},"nativeSrc":"5702:12:25","nodeType":"YulFunctionCall","src":"5702:12:25"},"nativeSrc":"5702:12:25","nodeType":"YulExpressionStatement","src":"5702:12:25"}]},"condition":{"arguments":[{"name":"offset_1","nativeSrc":"5670:8:25","nodeType":"YulIdentifier","src":"5670:8:25"},{"kind":"number","nativeSrc":"5680:18:25","nodeType":"YulLiteral","src":"5680:18:25","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nativeSrc":"5667:2:25","nodeType":"YulIdentifier","src":"5667:2:25"},"nativeSrc":"5667:32:25","nodeType":"YulFunctionCall","src":"5667:32:25"},"nativeSrc":"5664:52:25","nodeType":"YulIf","src":"5664:52:25"},{"nativeSrc":"5725:98:25","nodeType":"YulVariableDeclaration","src":"5725:98:25","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"5793:9:25","nodeType":"YulIdentifier","src":"5793:9:25"},{"name":"offset_1","nativeSrc":"5804:8:25","nodeType":"YulIdentifier","src":"5804:8:25"}],"functionName":{"name":"add","nativeSrc":"5789:3:25","nodeType":"YulIdentifier","src":"5789:3:25"},"nativeSrc":"5789:24:25","nodeType":"YulFunctionCall","src":"5789:24:25"},{"name":"dataEnd","nativeSrc":"5815:7:25","nodeType":"YulIdentifier","src":"5815:7:25"}],"functionName":{"name":"abi_decode_array_address_dyn_calldata","nativeSrc":"5751:37:25","nodeType":"YulIdentifier","src":"5751:37:25"},"nativeSrc":"5751:72:25","nodeType":"YulFunctionCall","src":"5751:72:25"},"variables":[{"name":"value2_1","nativeSrc":"5729:8:25","nodeType":"YulTypedName","src":"5729:8:25","type":""},{"name":"value3_1","nativeSrc":"5739:8:25","nodeType":"YulTypedName","src":"5739:8:25","type":""}]},{"nativeSrc":"5832:18:25","nodeType":"YulAssignment","src":"5832:18:25","value":{"name":"value2_1","nativeSrc":"5842:8:25","nodeType":"YulIdentifier","src":"5842:8:25"},"variableNames":[{"name":"value2","nativeSrc":"5832:6:25","nodeType":"YulIdentifier","src":"5832:6:25"}]},{"nativeSrc":"5859:18:25","nodeType":"YulAssignment","src":"5859:18:25","value":{"name":"value3_1","nativeSrc":"5869:8:25","nodeType":"YulIdentifier","src":"5869:8:25"},"variableNames":[{"name":"value3","nativeSrc":"5859:6:25","nodeType":"YulIdentifier","src":"5859:6:25"}]}]},"name":"abi_decode_tuple_t_array$_t_address_$dyn_calldata_ptrt_array$_t_uint256_$dyn_calldata_ptr","nativeSrc":"5115:768:25","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"5214:9:25","nodeType":"YulTypedName","src":"5214:9:25","type":""},{"name":"dataEnd","nativeSrc":"5225:7:25","nodeType":"YulTypedName","src":"5225:7:25","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"5237:6:25","nodeType":"YulTypedName","src":"5237:6:25","type":""},{"name":"value1","nativeSrc":"5245:6:25","nodeType":"YulTypedName","src":"5245:6:25","type":""},{"name":"value2","nativeSrc":"5253:6:25","nodeType":"YulTypedName","src":"5253:6:25","type":""},{"name":"value3","nativeSrc":"5261:6:25","nodeType":"YulTypedName","src":"5261:6:25","type":""}],"src":"5115:768:25"},{"body":{"nativeSrc":"5972:263:25","nodeType":"YulBlock","src":"5972:263:25","statements":[{"body":{"nativeSrc":"6018:16:25","nodeType":"YulBlock","src":"6018:16:25","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"6027:1:25","nodeType":"YulLiteral","src":"6027:1:25","type":"","value":"0"},{"kind":"number","nativeSrc":"6030:1:25","nodeType":"YulLiteral","src":"6030:1:25","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"6020:6:25","nodeType":"YulIdentifier","src":"6020:6:25"},"nativeSrc":"6020:12:25","nodeType":"YulFunctionCall","src":"6020:12:25"},"nativeSrc":"6020:12:25","nodeType":"YulExpressionStatement","src":"6020:12:25"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"5993:7:25","nodeType":"YulIdentifier","src":"5993:7:25"},{"name":"headStart","nativeSrc":"6002:9:25","nodeType":"YulIdentifier","src":"6002:9:25"}],"functionName":{"name":"sub","nativeSrc":"5989:3:25","nodeType":"YulIdentifier","src":"5989:3:25"},"nativeSrc":"5989:23:25","nodeType":"YulFunctionCall","src":"5989:23:25"},{"kind":"number","nativeSrc":"6014:2:25","nodeType":"YulLiteral","src":"6014:2:25","type":"","value":"64"}],"functionName":{"name":"slt","nativeSrc":"5985:3:25","nodeType":"YulIdentifier","src":"5985:3:25"},"nativeSrc":"5985:32:25","nodeType":"YulFunctionCall","src":"5985:32:25"},"nativeSrc":"5982:52:25","nodeType":"YulIf","src":"5982:52:25"},{"nativeSrc":"6043:39:25","nodeType":"YulAssignment","src":"6043:39:25","value":{"arguments":[{"name":"headStart","nativeSrc":"6072:9:25","nodeType":"YulIdentifier","src":"6072:9:25"}],"functionName":{"name":"abi_decode_address","nativeSrc":"6053:18:25","nodeType":"YulIdentifier","src":"6053:18:25"},"nativeSrc":"6053:29:25","nodeType":"YulFunctionCall","src":"6053:29:25"},"variableNames":[{"name":"value0","nativeSrc":"6043:6:25","nodeType":"YulIdentifier","src":"6043:6:25"}]},{"nativeSrc":"6091:45:25","nodeType":"YulVariableDeclaration","src":"6091:45:25","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"6121:9:25","nodeType":"YulIdentifier","src":"6121:9:25"},{"kind":"number","nativeSrc":"6132:2:25","nodeType":"YulLiteral","src":"6132:2:25","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"6117:3:25","nodeType":"YulIdentifier","src":"6117:3:25"},"nativeSrc":"6117:18:25","nodeType":"YulFunctionCall","src":"6117:18:25"}],"functionName":{"name":"calldataload","nativeSrc":"6104:12:25","nodeType":"YulIdentifier","src":"6104:12:25"},"nativeSrc":"6104:32:25","nodeType":"YulFunctionCall","src":"6104:32:25"},"variables":[{"name":"value","nativeSrc":"6095:5:25","nodeType":"YulTypedName","src":"6095:5:25","type":""}]},{"body":{"nativeSrc":"6189:16:25","nodeType":"YulBlock","src":"6189:16:25","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"6198:1:25","nodeType":"YulLiteral","src":"6198:1:25","type":"","value":"0"},{"kind":"number","nativeSrc":"6201:1:25","nodeType":"YulLiteral","src":"6201:1:25","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"6191:6:25","nodeType":"YulIdentifier","src":"6191:6:25"},"nativeSrc":"6191:12:25","nodeType":"YulFunctionCall","src":"6191:12:25"},"nativeSrc":"6191:12:25","nodeType":"YulExpressionStatement","src":"6191:12:25"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"6158:5:25","nodeType":"YulIdentifier","src":"6158:5:25"},{"arguments":[{"arguments":[{"name":"value","nativeSrc":"6179:5:25","nodeType":"YulIdentifier","src":"6179:5:25"}],"functionName":{"name":"iszero","nativeSrc":"6172:6:25","nodeType":"YulIdentifier","src":"6172:6:25"},"nativeSrc":"6172:13:25","nodeType":"YulFunctionCall","src":"6172:13:25"}],"functionName":{"name":"iszero","nativeSrc":"6165:6:25","nodeType":"YulIdentifier","src":"6165:6:25"},"nativeSrc":"6165:21:25","nodeType":"YulFunctionCall","src":"6165:21:25"}],"functionName":{"name":"eq","nativeSrc":"6155:2:25","nodeType":"YulIdentifier","src":"6155:2:25"},"nativeSrc":"6155:32:25","nodeType":"YulFunctionCall","src":"6155:32:25"}],"functionName":{"name":"iszero","nativeSrc":"6148:6:25","nodeType":"YulIdentifier","src":"6148:6:25"},"nativeSrc":"6148:40:25","nodeType":"YulFunctionCall","src":"6148:40:25"},"nativeSrc":"6145:60:25","nodeType":"YulIf","src":"6145:60:25"},{"nativeSrc":"6214:15:25","nodeType":"YulAssignment","src":"6214:15:25","value":{"name":"value","nativeSrc":"6224:5:25","nodeType":"YulIdentifier","src":"6224:5:25"},"variableNames":[{"name":"value1","nativeSrc":"6214:6:25","nodeType":"YulIdentifier","src":"6214:6:25"}]}]},"name":"abi_decode_tuple_t_addresst_bool","nativeSrc":"5888:347:25","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"5930:9:25","nodeType":"YulTypedName","src":"5930:9:25","type":""},{"name":"dataEnd","nativeSrc":"5941:7:25","nodeType":"YulTypedName","src":"5941:7:25","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"5953:6:25","nodeType":"YulTypedName","src":"5953:6:25","type":""},{"name":"value1","nativeSrc":"5961:6:25","nodeType":"YulTypedName","src":"5961:6:25","type":""}],"src":"5888:347:25"},{"body":{"nativeSrc":"6341:102:25","nodeType":"YulBlock","src":"6341:102:25","statements":[{"nativeSrc":"6351:26:25","nodeType":"YulAssignment","src":"6351:26:25","value":{"arguments":[{"name":"headStart","nativeSrc":"6363:9:25","nodeType":"YulIdentifier","src":"6363:9:25"},{"kind":"number","nativeSrc":"6374:2:25","nodeType":"YulLiteral","src":"6374:2:25","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"6359:3:25","nodeType":"YulIdentifier","src":"6359:3:25"},"nativeSrc":"6359:18:25","nodeType":"YulFunctionCall","src":"6359:18:25"},"variableNames":[{"name":"tail","nativeSrc":"6351:4:25","nodeType":"YulIdentifier","src":"6351:4:25"}]},{"expression":{"arguments":[{"name":"headStart","nativeSrc":"6393:9:25","nodeType":"YulIdentifier","src":"6393:9:25"},{"arguments":[{"name":"value0","nativeSrc":"6408:6:25","nodeType":"YulIdentifier","src":"6408:6:25"},{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"6424:3:25","nodeType":"YulLiteral","src":"6424:3:25","type":"","value":"160"},{"kind":"number","nativeSrc":"6429:1:25","nodeType":"YulLiteral","src":"6429:1:25","type":"","value":"1"}],"functionName":{"name":"shl","nativeSrc":"6420:3:25","nodeType":"YulIdentifier","src":"6420:3:25"},"nativeSrc":"6420:11:25","nodeType":"YulFunctionCall","src":"6420:11:25"},{"kind":"number","nativeSrc":"6433:1:25","nodeType":"YulLiteral","src":"6433:1:25","type":"","value":"1"}],"functionName":{"name":"sub","nativeSrc":"6416:3:25","nodeType":"YulIdentifier","src":"6416:3:25"},"nativeSrc":"6416:19:25","nodeType":"YulFunctionCall","src":"6416:19:25"}],"functionName":{"name":"and","nativeSrc":"6404:3:25","nodeType":"YulIdentifier","src":"6404:3:25"},"nativeSrc":"6404:32:25","nodeType":"YulFunctionCall","src":"6404:32:25"}],"functionName":{"name":"mstore","nativeSrc":"6386:6:25","nodeType":"YulIdentifier","src":"6386:6:25"},"nativeSrc":"6386:51:25","nodeType":"YulFunctionCall","src":"6386:51:25"},"nativeSrc":"6386:51:25","nodeType":"YulExpressionStatement","src":"6386:51:25"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nativeSrc":"6240:203:25","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"6310:9:25","nodeType":"YulTypedName","src":"6310:9:25","type":""},{"name":"value0","nativeSrc":"6321:6:25","nodeType":"YulTypedName","src":"6321:6:25","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"6332:4:25","nodeType":"YulTypedName","src":"6332:4:25","type":""}],"src":"6240:203:25"},{"body":{"nativeSrc":"6618:733:25","nodeType":"YulBlock","src":"6618:733:25","statements":[{"body":{"nativeSrc":"6665:16:25","nodeType":"YulBlock","src":"6665:16:25","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"6674:1:25","nodeType":"YulLiteral","src":"6674:1:25","type":"","value":"0"},{"kind":"number","nativeSrc":"6677:1:25","nodeType":"YulLiteral","src":"6677:1:25","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"6667:6:25","nodeType":"YulIdentifier","src":"6667:6:25"},"nativeSrc":"6667:12:25","nodeType":"YulFunctionCall","src":"6667:12:25"},"nativeSrc":"6667:12:25","nodeType":"YulExpressionStatement","src":"6667:12:25"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"6639:7:25","nodeType":"YulIdentifier","src":"6639:7:25"},{"name":"headStart","nativeSrc":"6648:9:25","nodeType":"YulIdentifier","src":"6648:9:25"}],"functionName":{"name":"sub","nativeSrc":"6635:3:25","nodeType":"YulIdentifier","src":"6635:3:25"},"nativeSrc":"6635:23:25","nodeType":"YulFunctionCall","src":"6635:23:25"},{"kind":"number","nativeSrc":"6660:3:25","nodeType":"YulLiteral","src":"6660:3:25","type":"","value":"224"}],"functionName":{"name":"slt","nativeSrc":"6631:3:25","nodeType":"YulIdentifier","src":"6631:3:25"},"nativeSrc":"6631:33:25","nodeType":"YulFunctionCall","src":"6631:33:25"},"nativeSrc":"6628:53:25","nodeType":"YulIf","src":"6628:53:25"},{"nativeSrc":"6690:39:25","nodeType":"YulAssignment","src":"6690:39:25","value":{"arguments":[{"name":"headStart","nativeSrc":"6719:9:25","nodeType":"YulIdentifier","src":"6719:9:25"}],"functionName":{"name":"abi_decode_address","nativeSrc":"6700:18:25","nodeType":"YulIdentifier","src":"6700:18:25"},"nativeSrc":"6700:29:25","nodeType":"YulFunctionCall","src":"6700:29:25"},"variableNames":[{"name":"value0","nativeSrc":"6690:6:25","nodeType":"YulIdentifier","src":"6690:6:25"}]},{"nativeSrc":"6738:48:25","nodeType":"YulAssignment","src":"6738:48:25","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"6771:9:25","nodeType":"YulIdentifier","src":"6771:9:25"},{"kind":"number","nativeSrc":"6782:2:25","nodeType":"YulLiteral","src":"6782:2:25","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"6767:3:25","nodeType":"YulIdentifier","src":"6767:3:25"},"nativeSrc":"6767:18:25","nodeType":"YulFunctionCall","src":"6767:18:25"}],"functionName":{"name":"abi_decode_address","nativeSrc":"6748:18:25","nodeType":"YulIdentifier","src":"6748:18:25"},"nativeSrc":"6748:38:25","nodeType":"YulFunctionCall","src":"6748:38:25"},"variableNames":[{"name":"value1","nativeSrc":"6738:6:25","nodeType":"YulIdentifier","src":"6738:6:25"}]},{"nativeSrc":"6795:14:25","nodeType":"YulVariableDeclaration","src":"6795:14:25","value":{"kind":"number","nativeSrc":"6808:1:25","nodeType":"YulLiteral","src":"6808:1:25","type":"","value":"0"},"variables":[{"name":"value","nativeSrc":"6799:5:25","nodeType":"YulTypedName","src":"6799:5:25","type":""}]},{"nativeSrc":"6818:41:25","nodeType":"YulAssignment","src":"6818:41:25","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"6844:9:25","nodeType":"YulIdentifier","src":"6844:9:25"},{"kind":"number","nativeSrc":"6855:2:25","nodeType":"YulLiteral","src":"6855:2:25","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"6840:3:25","nodeType":"YulIdentifier","src":"6840:3:25"},"nativeSrc":"6840:18:25","nodeType":"YulFunctionCall","src":"6840:18:25"}],"functionName":{"name":"calldataload","nativeSrc":"6827:12:25","nodeType":"YulIdentifier","src":"6827:12:25"},"nativeSrc":"6827:32:25","nodeType":"YulFunctionCall","src":"6827:32:25"},"variableNames":[{"name":"value","nativeSrc":"6818:5:25","nodeType":"YulIdentifier","src":"6818:5:25"}]},{"nativeSrc":"6868:15:25","nodeType":"YulAssignment","src":"6868:15:25","value":{"name":"value","nativeSrc":"6878:5:25","nodeType":"YulIdentifier","src":"6878:5:25"},"variableNames":[{"name":"value2","nativeSrc":"6868:6:25","nodeType":"YulIdentifier","src":"6868:6:25"}]},{"nativeSrc":"6892:16:25","nodeType":"YulVariableDeclaration","src":"6892:16:25","value":{"kind":"number","nativeSrc":"6907:1:25","nodeType":"YulLiteral","src":"6907:1:25","type":"","value":"0"},"variables":[{"name":"value_1","nativeSrc":"6896:7:25","nodeType":"YulTypedName","src":"6896:7:25","type":""}]},{"nativeSrc":"6917:43:25","nodeType":"YulAssignment","src":"6917:43:25","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"6945:9:25","nodeType":"YulIdentifier","src":"6945:9:25"},{"kind":"number","nativeSrc":"6956:2:25","nodeType":"YulLiteral","src":"6956:2:25","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"6941:3:25","nodeType":"YulIdentifier","src":"6941:3:25"},"nativeSrc":"6941:18:25","nodeType":"YulFunctionCall","src":"6941:18:25"}],"functionName":{"name":"calldataload","nativeSrc":"6928:12:25","nodeType":"YulIdentifier","src":"6928:12:25"},"nativeSrc":"6928:32:25","nodeType":"YulFunctionCall","src":"6928:32:25"},"variableNames":[{"name":"value_1","nativeSrc":"6917:7:25","nodeType":"YulIdentifier","src":"6917:7:25"}]},{"nativeSrc":"6969:17:25","nodeType":"YulAssignment","src":"6969:17:25","value":{"name":"value_1","nativeSrc":"6979:7:25","nodeType":"YulIdentifier","src":"6979:7:25"},"variableNames":[{"name":"value3","nativeSrc":"6969:6:25","nodeType":"YulIdentifier","src":"6969:6:25"}]},{"nativeSrc":"6995:48:25","nodeType":"YulVariableDeclaration","src":"6995:48:25","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"7027:9:25","nodeType":"YulIdentifier","src":"7027:9:25"},{"kind":"number","nativeSrc":"7038:3:25","nodeType":"YulLiteral","src":"7038:3:25","type":"","value":"128"}],"functionName":{"name":"add","nativeSrc":"7023:3:25","nodeType":"YulIdentifier","src":"7023:3:25"},"nativeSrc":"7023:19:25","nodeType":"YulFunctionCall","src":"7023:19:25"}],"functionName":{"name":"calldataload","nativeSrc":"7010:12:25","nodeType":"YulIdentifier","src":"7010:12:25"},"nativeSrc":"7010:33:25","nodeType":"YulFunctionCall","src":"7010:33:25"},"variables":[{"name":"value_2","nativeSrc":"6999:7:25","nodeType":"YulTypedName","src":"6999:7:25","type":""}]},{"body":{"nativeSrc":"7095:16:25","nodeType":"YulBlock","src":"7095:16:25","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"7104:1:25","nodeType":"YulLiteral","src":"7104:1:25","type":"","value":"0"},{"kind":"number","nativeSrc":"7107:1:25","nodeType":"YulLiteral","src":"7107:1:25","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"7097:6:25","nodeType":"YulIdentifier","src":"7097:6:25"},"nativeSrc":"7097:12:25","nodeType":"YulFunctionCall","src":"7097:12:25"},"nativeSrc":"7097:12:25","nodeType":"YulExpressionStatement","src":"7097:12:25"}]},"condition":{"arguments":[{"arguments":[{"name":"value_2","nativeSrc":"7065:7:25","nodeType":"YulIdentifier","src":"7065:7:25"},{"arguments":[{"name":"value_2","nativeSrc":"7078:7:25","nodeType":"YulIdentifier","src":"7078:7:25"},{"kind":"number","nativeSrc":"7087:4:25","nodeType":"YulLiteral","src":"7087:4:25","type":"","value":"0xff"}],"functionName":{"name":"and","nativeSrc":"7074:3:25","nodeType":"YulIdentifier","src":"7074:3:25"},"nativeSrc":"7074:18:25","nodeType":"YulFunctionCall","src":"7074:18:25"}],"functionName":{"name":"eq","nativeSrc":"7062:2:25","nodeType":"YulIdentifier","src":"7062:2:25"},"nativeSrc":"7062:31:25","nodeType":"YulFunctionCall","src":"7062:31:25"}],"functionName":{"name":"iszero","nativeSrc":"7055:6:25","nodeType":"YulIdentifier","src":"7055:6:25"},"nativeSrc":"7055:39:25","nodeType":"YulFunctionCall","src":"7055:39:25"},"nativeSrc":"7052:59:25","nodeType":"YulIf","src":"7052:59:25"},{"nativeSrc":"7120:17:25","nodeType":"YulAssignment","src":"7120:17:25","value":{"name":"value_2","nativeSrc":"7130:7:25","nodeType":"YulIdentifier","src":"7130:7:25"},"variableNames":[{"name":"value4","nativeSrc":"7120:6:25","nodeType":"YulIdentifier","src":"7120:6:25"}]},{"nativeSrc":"7146:16:25","nodeType":"YulVariableDeclaration","src":"7146:16:25","value":{"kind":"number","nativeSrc":"7161:1:25","nodeType":"YulLiteral","src":"7161:1:25","type":"","value":"0"},"variables":[{"name":"value_3","nativeSrc":"7150:7:25","nodeType":"YulTypedName","src":"7150:7:25","type":""}]},{"nativeSrc":"7171:44:25","nodeType":"YulAssignment","src":"7171:44:25","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"7199:9:25","nodeType":"YulIdentifier","src":"7199:9:25"},{"kind":"number","nativeSrc":"7210:3:25","nodeType":"YulLiteral","src":"7210:3:25","type":"","value":"160"}],"functionName":{"name":"add","nativeSrc":"7195:3:25","nodeType":"YulIdentifier","src":"7195:3:25"},"nativeSrc":"7195:19:25","nodeType":"YulFunctionCall","src":"7195:19:25"}],"functionName":{"name":"calldataload","nativeSrc":"7182:12:25","nodeType":"YulIdentifier","src":"7182:12:25"},"nativeSrc":"7182:33:25","nodeType":"YulFunctionCall","src":"7182:33:25"},"variableNames":[{"name":"value_3","nativeSrc":"7171:7:25","nodeType":"YulIdentifier","src":"7171:7:25"}]},{"nativeSrc":"7224:17:25","nodeType":"YulAssignment","src":"7224:17:25","value":{"name":"value_3","nativeSrc":"7234:7:25","nodeType":"YulIdentifier","src":"7234:7:25"},"variableNames":[{"name":"value5","nativeSrc":"7224:6:25","nodeType":"YulIdentifier","src":"7224:6:25"}]},{"nativeSrc":"7250:16:25","nodeType":"YulVariableDeclaration","src":"7250:16:25","value":{"kind":"number","nativeSrc":"7265:1:25","nodeType":"YulLiteral","src":"7265:1:25","type":"","value":"0"},"variables":[{"name":"value_4","nativeSrc":"7254:7:25","nodeType":"YulTypedName","src":"7254:7:25","type":""}]},{"nativeSrc":"7275:44:25","nodeType":"YulAssignment","src":"7275:44:25","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"7303:9:25","nodeType":"YulIdentifier","src":"7303:9:25"},{"kind":"number","nativeSrc":"7314:3:25","nodeType":"YulLiteral","src":"7314:3:25","type":"","value":"192"}],"functionName":{"name":"add","nativeSrc":"7299:3:25","nodeType":"YulIdentifier","src":"7299:3:25"},"nativeSrc":"7299:19:25","nodeType":"YulFunctionCall","src":"7299:19:25"}],"functionName":{"name":"calldataload","nativeSrc":"7286:12:25","nodeType":"YulIdentifier","src":"7286:12:25"},"nativeSrc":"7286:33:25","nodeType":"YulFunctionCall","src":"7286:33:25"},"variableNames":[{"name":"value_4","nativeSrc":"7275:7:25","nodeType":"YulIdentifier","src":"7275:7:25"}]},{"nativeSrc":"7328:17:25","nodeType":"YulAssignment","src":"7328:17:25","value":{"name":"value_4","nativeSrc":"7338:7:25","nodeType":"YulIdentifier","src":"7338:7:25"},"variableNames":[{"name":"value6","nativeSrc":"7328:6:25","nodeType":"YulIdentifier","src":"7328:6:25"}]}]},"name":"abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_uint8t_bytes32t_bytes32","nativeSrc":"6448:903:25","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"6536:9:25","nodeType":"YulTypedName","src":"6536:9:25","type":""},{"name":"dataEnd","nativeSrc":"6547:7:25","nodeType":"YulTypedName","src":"6547:7:25","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"6559:6:25","nodeType":"YulTypedName","src":"6559:6:25","type":""},{"name":"value1","nativeSrc":"6567:6:25","nodeType":"YulTypedName","src":"6567:6:25","type":""},{"name":"value2","nativeSrc":"6575:6:25","nodeType":"YulTypedName","src":"6575:6:25","type":""},{"name":"value3","nativeSrc":"6583:6:25","nodeType":"YulTypedName","src":"6583:6:25","type":""},{"name":"value4","nativeSrc":"6591:6:25","nodeType":"YulTypedName","src":"6591:6:25","type":""},{"name":"value5","nativeSrc":"6599:6:25","nodeType":"YulTypedName","src":"6599:6:25","type":""},{"name":"value6","nativeSrc":"6607:6:25","nodeType":"YulTypedName","src":"6607:6:25","type":""}],"src":"6448:903:25"},{"body":{"nativeSrc":"7443:173:25","nodeType":"YulBlock","src":"7443:173:25","statements":[{"body":{"nativeSrc":"7489:16:25","nodeType":"YulBlock","src":"7489:16:25","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"7498:1:25","nodeType":"YulLiteral","src":"7498:1:25","type":"","value":"0"},{"kind":"number","nativeSrc":"7501:1:25","nodeType":"YulLiteral","src":"7501:1:25","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"7491:6:25","nodeType":"YulIdentifier","src":"7491:6:25"},"nativeSrc":"7491:12:25","nodeType":"YulFunctionCall","src":"7491:12:25"},"nativeSrc":"7491:12:25","nodeType":"YulExpressionStatement","src":"7491:12:25"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"7464:7:25","nodeType":"YulIdentifier","src":"7464:7:25"},{"name":"headStart","nativeSrc":"7473:9:25","nodeType":"YulIdentifier","src":"7473:9:25"}],"functionName":{"name":"sub","nativeSrc":"7460:3:25","nodeType":"YulIdentifier","src":"7460:3:25"},"nativeSrc":"7460:23:25","nodeType":"YulFunctionCall","src":"7460:23:25"},{"kind":"number","nativeSrc":"7485:2:25","nodeType":"YulLiteral","src":"7485:2:25","type":"","value":"64"}],"functionName":{"name":"slt","nativeSrc":"7456:3:25","nodeType":"YulIdentifier","src":"7456:3:25"},"nativeSrc":"7456:32:25","nodeType":"YulFunctionCall","src":"7456:32:25"},"nativeSrc":"7453:52:25","nodeType":"YulIf","src":"7453:52:25"},{"nativeSrc":"7514:39:25","nodeType":"YulAssignment","src":"7514:39:25","value":{"arguments":[{"name":"headStart","nativeSrc":"7543:9:25","nodeType":"YulIdentifier","src":"7543:9:25"}],"functionName":{"name":"abi_decode_address","nativeSrc":"7524:18:25","nodeType":"YulIdentifier","src":"7524:18:25"},"nativeSrc":"7524:29:25","nodeType":"YulFunctionCall","src":"7524:29:25"},"variableNames":[{"name":"value0","nativeSrc":"7514:6:25","nodeType":"YulIdentifier","src":"7514:6:25"}]},{"nativeSrc":"7562:48:25","nodeType":"YulAssignment","src":"7562:48:25","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"7595:9:25","nodeType":"YulIdentifier","src":"7595:9:25"},{"kind":"number","nativeSrc":"7606:2:25","nodeType":"YulLiteral","src":"7606:2:25","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"7591:3:25","nodeType":"YulIdentifier","src":"7591:3:25"},"nativeSrc":"7591:18:25","nodeType":"YulFunctionCall","src":"7591:18:25"}],"functionName":{"name":"abi_decode_address","nativeSrc":"7572:18:25","nodeType":"YulIdentifier","src":"7572:18:25"},"nativeSrc":"7572:38:25","nodeType":"YulFunctionCall","src":"7572:38:25"},"variableNames":[{"name":"value1","nativeSrc":"7562:6:25","nodeType":"YulIdentifier","src":"7562:6:25"}]}]},"name":"abi_decode_tuple_t_addresst_address","nativeSrc":"7356:260:25","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"7401:9:25","nodeType":"YulTypedName","src":"7401:9:25","type":""},{"name":"dataEnd","nativeSrc":"7412:7:25","nodeType":"YulTypedName","src":"7412:7:25","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"7424:6:25","nodeType":"YulTypedName","src":"7424:6:25","type":""},{"name":"value1","nativeSrc":"7432:6:25","nodeType":"YulTypedName","src":"7432:6:25","type":""}],"src":"7356:260:25"},{"body":{"nativeSrc":"7676:325:25","nodeType":"YulBlock","src":"7676:325:25","statements":[{"nativeSrc":"7686:22:25","nodeType":"YulAssignment","src":"7686:22:25","value":{"arguments":[{"kind":"number","nativeSrc":"7700:1:25","nodeType":"YulLiteral","src":"7700:1:25","type":"","value":"1"},{"name":"data","nativeSrc":"7703:4:25","nodeType":"YulIdentifier","src":"7703:4:25"}],"functionName":{"name":"shr","nativeSrc":"7696:3:25","nodeType":"YulIdentifier","src":"7696:3:25"},"nativeSrc":"7696:12:25","nodeType":"YulFunctionCall","src":"7696:12:25"},"variableNames":[{"name":"length","nativeSrc":"7686:6:25","nodeType":"YulIdentifier","src":"7686:6:25"}]},{"nativeSrc":"7717:38:25","nodeType":"YulVariableDeclaration","src":"7717:38:25","value":{"arguments":[{"name":"data","nativeSrc":"7747:4:25","nodeType":"YulIdentifier","src":"7747:4:25"},{"kind":"number","nativeSrc":"7753:1:25","nodeType":"YulLiteral","src":"7753:1:25","type":"","value":"1"}],"functionName":{"name":"and","nativeSrc":"7743:3:25","nodeType":"YulIdentifier","src":"7743:3:25"},"nativeSrc":"7743:12:25","nodeType":"YulFunctionCall","src":"7743:12:25"},"variables":[{"name":"outOfPlaceEncoding","nativeSrc":"7721:18:25","nodeType":"YulTypedName","src":"7721:18:25","type":""}]},{"body":{"nativeSrc":"7794:31:25","nodeType":"YulBlock","src":"7794:31:25","statements":[{"nativeSrc":"7796:27:25","nodeType":"YulAssignment","src":"7796:27:25","value":{"arguments":[{"name":"length","nativeSrc":"7810:6:25","nodeType":"YulIdentifier","src":"7810:6:25"},{"kind":"number","nativeSrc":"7818:4:25","nodeType":"YulLiteral","src":"7818:4:25","type":"","value":"0x7f"}],"functionName":{"name":"and","nativeSrc":"7806:3:25","nodeType":"YulIdentifier","src":"7806:3:25"},"nativeSrc":"7806:17:25","nodeType":"YulFunctionCall","src":"7806:17:25"},"variableNames":[{"name":"length","nativeSrc":"7796:6:25","nodeType":"YulIdentifier","src":"7796:6:25"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nativeSrc":"7774:18:25","nodeType":"YulIdentifier","src":"7774:18:25"}],"functionName":{"name":"iszero","nativeSrc":"7767:6:25","nodeType":"YulIdentifier","src":"7767:6:25"},"nativeSrc":"7767:26:25","nodeType":"YulFunctionCall","src":"7767:26:25"},"nativeSrc":"7764:61:25","nodeType":"YulIf","src":"7764:61:25"},{"body":{"nativeSrc":"7884:111:25","nodeType":"YulBlock","src":"7884:111:25","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"7905:1:25","nodeType":"YulLiteral","src":"7905:1:25","type":"","value":"0"},{"arguments":[{"kind":"number","nativeSrc":"7912:3:25","nodeType":"YulLiteral","src":"7912:3:25","type":"","value":"224"},{"kind":"number","nativeSrc":"7917:10:25","nodeType":"YulLiteral","src":"7917:10:25","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nativeSrc":"7908:3:25","nodeType":"YulIdentifier","src":"7908:3:25"},"nativeSrc":"7908:20:25","nodeType":"YulFunctionCall","src":"7908:20:25"}],"functionName":{"name":"mstore","nativeSrc":"7898:6:25","nodeType":"YulIdentifier","src":"7898:6:25"},"nativeSrc":"7898:31:25","nodeType":"YulFunctionCall","src":"7898:31:25"},"nativeSrc":"7898:31:25","nodeType":"YulExpressionStatement","src":"7898:31:25"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"7949:1:25","nodeType":"YulLiteral","src":"7949:1:25","type":"","value":"4"},{"kind":"number","nativeSrc":"7952:4:25","nodeType":"YulLiteral","src":"7952:4:25","type":"","value":"0x22"}],"functionName":{"name":"mstore","nativeSrc":"7942:6:25","nodeType":"YulIdentifier","src":"7942:6:25"},"nativeSrc":"7942:15:25","nodeType":"YulFunctionCall","src":"7942:15:25"},"nativeSrc":"7942:15:25","nodeType":"YulExpressionStatement","src":"7942:15:25"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"7977:1:25","nodeType":"YulLiteral","src":"7977:1:25","type":"","value":"0"},{"kind":"number","nativeSrc":"7980:4:25","nodeType":"YulLiteral","src":"7980:4:25","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"7970:6:25","nodeType":"YulIdentifier","src":"7970:6:25"},"nativeSrc":"7970:15:25","nodeType":"YulFunctionCall","src":"7970:15:25"},"nativeSrc":"7970:15:25","nodeType":"YulExpressionStatement","src":"7970:15:25"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nativeSrc":"7840:18:25","nodeType":"YulIdentifier","src":"7840:18:25"},{"arguments":[{"name":"length","nativeSrc":"7863:6:25","nodeType":"YulIdentifier","src":"7863:6:25"},{"kind":"number","nativeSrc":"7871:2:25","nodeType":"YulLiteral","src":"7871:2:25","type":"","value":"32"}],"functionName":{"name":"lt","nativeSrc":"7860:2:25","nodeType":"YulIdentifier","src":"7860:2:25"},"nativeSrc":"7860:14:25","nodeType":"YulFunctionCall","src":"7860:14:25"}],"functionName":{"name":"eq","nativeSrc":"7837:2:25","nodeType":"YulIdentifier","src":"7837:2:25"},"nativeSrc":"7837:38:25","nodeType":"YulFunctionCall","src":"7837:38:25"},"nativeSrc":"7834:161:25","nodeType":"YulIf","src":"7834:161:25"}]},"name":"extract_byte_array_length","nativeSrc":"7621:380:25","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nativeSrc":"7656:4:25","nodeType":"YulTypedName","src":"7656:4:25","type":""}],"returnVariables":[{"name":"length","nativeSrc":"7665:6:25","nodeType":"YulTypedName","src":"7665:6:25","type":""}],"src":"7621:380:25"},{"body":{"nativeSrc":"8180:173:25","nodeType":"YulBlock","src":"8180:173:25","statements":[{"expression":{"arguments":[{"name":"headStart","nativeSrc":"8197:9:25","nodeType":"YulIdentifier","src":"8197:9:25"},{"kind":"number","nativeSrc":"8208:2:25","nodeType":"YulLiteral","src":"8208:2:25","type":"","value":"32"}],"functionName":{"name":"mstore","nativeSrc":"8190:6:25","nodeType":"YulIdentifier","src":"8190:6:25"},"nativeSrc":"8190:21:25","nodeType":"YulFunctionCall","src":"8190:21:25"},"nativeSrc":"8190:21:25","nodeType":"YulExpressionStatement","src":"8190:21:25"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"8231:9:25","nodeType":"YulIdentifier","src":"8231:9:25"},{"kind":"number","nativeSrc":"8242:2:25","nodeType":"YulLiteral","src":"8242:2:25","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"8227:3:25","nodeType":"YulIdentifier","src":"8227:3:25"},"nativeSrc":"8227:18:25","nodeType":"YulFunctionCall","src":"8227:18:25"},{"kind":"number","nativeSrc":"8247:2:25","nodeType":"YulLiteral","src":"8247:2:25","type":"","value":"23"}],"functionName":{"name":"mstore","nativeSrc":"8220:6:25","nodeType":"YulIdentifier","src":"8220:6:25"},"nativeSrc":"8220:30:25","nodeType":"YulFunctionCall","src":"8220:30:25"},"nativeSrc":"8220:30:25","nodeType":"YulExpressionStatement","src":"8220:30:25"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"8270:9:25","nodeType":"YulIdentifier","src":"8270:9:25"},{"kind":"number","nativeSrc":"8281:2:25","nodeType":"YulLiteral","src":"8281:2:25","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"8266:3:25","nodeType":"YulIdentifier","src":"8266:3:25"},"nativeSrc":"8266:18:25","nodeType":"YulFunctionCall","src":"8266:18:25"},{"hexValue":"496e76616c696420636f6f6c646f776e20706572696f64","kind":"string","nativeSrc":"8286:25:25","nodeType":"YulLiteral","src":"8286:25:25","type":"","value":"Invalid cooldown period"}],"functionName":{"name":"mstore","nativeSrc":"8259:6:25","nodeType":"YulIdentifier","src":"8259:6:25"},"nativeSrc":"8259:53:25","nodeType":"YulFunctionCall","src":"8259:53:25"},"nativeSrc":"8259:53:25","nodeType":"YulExpressionStatement","src":"8259:53:25"},{"nativeSrc":"8321:26:25","nodeType":"YulAssignment","src":"8321:26:25","value":{"arguments":[{"name":"headStart","nativeSrc":"8333:9:25","nodeType":"YulIdentifier","src":"8333:9:25"},{"kind":"number","nativeSrc":"8344:2:25","nodeType":"YulLiteral","src":"8344:2:25","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"8329:3:25","nodeType":"YulIdentifier","src":"8329:3:25"},"nativeSrc":"8329:18:25","nodeType":"YulFunctionCall","src":"8329:18:25"},"variableNames":[{"name":"tail","nativeSrc":"8321:4:25","nodeType":"YulIdentifier","src":"8321:4:25"}]}]},"name":"abi_encode_tuple_t_stringliteral_1a35f77d9ec5ff7b7507149194ddd7dff4d9bbb7539ae66ecc8d000378ca66da__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"8006:347:25","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"8157:9:25","nodeType":"YulTypedName","src":"8157:9:25","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"8171:4:25","nodeType":"YulTypedName","src":"8171:4:25","type":""}],"src":"8006:347:25"},{"body":{"nativeSrc":"8390:95:25","nodeType":"YulBlock","src":"8390:95:25","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"8407:1:25","nodeType":"YulLiteral","src":"8407:1:25","type":"","value":"0"},{"arguments":[{"kind":"number","nativeSrc":"8414:3:25","nodeType":"YulLiteral","src":"8414:3:25","type":"","value":"224"},{"kind":"number","nativeSrc":"8419:10:25","nodeType":"YulLiteral","src":"8419:10:25","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nativeSrc":"8410:3:25","nodeType":"YulIdentifier","src":"8410:3:25"},"nativeSrc":"8410:20:25","nodeType":"YulFunctionCall","src":"8410:20:25"}],"functionName":{"name":"mstore","nativeSrc":"8400:6:25","nodeType":"YulIdentifier","src":"8400:6:25"},"nativeSrc":"8400:31:25","nodeType":"YulFunctionCall","src":"8400:31:25"},"nativeSrc":"8400:31:25","nodeType":"YulExpressionStatement","src":"8400:31:25"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"8447:1:25","nodeType":"YulLiteral","src":"8447:1:25","type":"","value":"4"},{"kind":"number","nativeSrc":"8450:4:25","nodeType":"YulLiteral","src":"8450:4:25","type":"","value":"0x41"}],"functionName":{"name":"mstore","nativeSrc":"8440:6:25","nodeType":"YulIdentifier","src":"8440:6:25"},"nativeSrc":"8440:15:25","nodeType":"YulFunctionCall","src":"8440:15:25"},"nativeSrc":"8440:15:25","nodeType":"YulExpressionStatement","src":"8440:15:25"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"8471:1:25","nodeType":"YulLiteral","src":"8471:1:25","type":"","value":"0"},{"kind":"number","nativeSrc":"8474:4:25","nodeType":"YulLiteral","src":"8474:4:25","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"8464:6:25","nodeType":"YulIdentifier","src":"8464:6:25"},"nativeSrc":"8464:15:25","nodeType":"YulFunctionCall","src":"8464:15:25"},"nativeSrc":"8464:15:25","nodeType":"YulExpressionStatement","src":"8464:15:25"}]},"name":"panic_error_0x41","nativeSrc":"8358:127:25","nodeType":"YulFunctionDefinition","src":"8358:127:25"},{"body":{"nativeSrc":"8664:172:25","nodeType":"YulBlock","src":"8664:172:25","statements":[{"expression":{"arguments":[{"name":"headStart","nativeSrc":"8681:9:25","nodeType":"YulIdentifier","src":"8681:9:25"},{"kind":"number","nativeSrc":"8692:2:25","nodeType":"YulLiteral","src":"8692:2:25","type":"","value":"32"}],"functionName":{"name":"mstore","nativeSrc":"8674:6:25","nodeType":"YulIdentifier","src":"8674:6:25"},"nativeSrc":"8674:21:25","nodeType":"YulFunctionCall","src":"8674:21:25"},"nativeSrc":"8674:21:25","nodeType":"YulExpressionStatement","src":"8674:21:25"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"8715:9:25","nodeType":"YulIdentifier","src":"8715:9:25"},{"kind":"number","nativeSrc":"8726:2:25","nodeType":"YulLiteral","src":"8726:2:25","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"8711:3:25","nodeType":"YulIdentifier","src":"8711:3:25"},"nativeSrc":"8711:18:25","nodeType":"YulFunctionCall","src":"8711:18:25"},{"kind":"number","nativeSrc":"8731:2:25","nodeType":"YulLiteral","src":"8731:2:25","type":"","value":"22"}],"functionName":{"name":"mstore","nativeSrc":"8704:6:25","nodeType":"YulIdentifier","src":"8704:6:25"},"nativeSrc":"8704:30:25","nodeType":"YulFunctionCall","src":"8704:30:25"},"nativeSrc":"8704:30:25","nodeType":"YulExpressionStatement","src":"8704:30:25"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"8754:9:25","nodeType":"YulIdentifier","src":"8754:9:25"},{"kind":"number","nativeSrc":"8765:2:25","nodeType":"YulLiteral","src":"8765:2:25","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"8750:3:25","nodeType":"YulIdentifier","src":"8750:3:25"},"nativeSrc":"8750:18:25","nodeType":"YulFunctionCall","src":"8750:18:25"},{"hexValue":"417272617973206c656e677468206d69736d61746368","kind":"string","nativeSrc":"8770:24:25","nodeType":"YulLiteral","src":"8770:24:25","type":"","value":"Arrays length mismatch"}],"functionName":{"name":"mstore","nativeSrc":"8743:6:25","nodeType":"YulIdentifier","src":"8743:6:25"},"nativeSrc":"8743:52:25","nodeType":"YulFunctionCall","src":"8743:52:25"},"nativeSrc":"8743:52:25","nodeType":"YulExpressionStatement","src":"8743:52:25"},{"nativeSrc":"8804:26:25","nodeType":"YulAssignment","src":"8804:26:25","value":{"arguments":[{"name":"headStart","nativeSrc":"8816:9:25","nodeType":"YulIdentifier","src":"8816:9:25"},{"kind":"number","nativeSrc":"8827:2:25","nodeType":"YulLiteral","src":"8827:2:25","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"8812:3:25","nodeType":"YulIdentifier","src":"8812:3:25"},"nativeSrc":"8812:18:25","nodeType":"YulFunctionCall","src":"8812:18:25"},"variableNames":[{"name":"tail","nativeSrc":"8804:4:25","nodeType":"YulIdentifier","src":"8804:4:25"}]}]},"name":"abi_encode_tuple_t_stringliteral_582fd48f3876d7686bfeaaaa0db0589073271dedd50d66094f02fee2a3d2e01c__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"8490:346:25","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"8641:9:25","nodeType":"YulTypedName","src":"8641:9:25","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"8655:4:25","nodeType":"YulTypedName","src":"8655:4:25","type":""}],"src":"8490:346:25"},{"body":{"nativeSrc":"8873:95:25","nodeType":"YulBlock","src":"8873:95:25","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"8890:1:25","nodeType":"YulLiteral","src":"8890:1:25","type":"","value":"0"},{"arguments":[{"kind":"number","nativeSrc":"8897:3:25","nodeType":"YulLiteral","src":"8897:3:25","type":"","value":"224"},{"kind":"number","nativeSrc":"8902:10:25","nodeType":"YulLiteral","src":"8902:10:25","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nativeSrc":"8893:3:25","nodeType":"YulIdentifier","src":"8893:3:25"},"nativeSrc":"8893:20:25","nodeType":"YulFunctionCall","src":"8893:20:25"}],"functionName":{"name":"mstore","nativeSrc":"8883:6:25","nodeType":"YulIdentifier","src":"8883:6:25"},"nativeSrc":"8883:31:25","nodeType":"YulFunctionCall","src":"8883:31:25"},"nativeSrc":"8883:31:25","nodeType":"YulExpressionStatement","src":"8883:31:25"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"8930:1:25","nodeType":"YulLiteral","src":"8930:1:25","type":"","value":"4"},{"kind":"number","nativeSrc":"8933:4:25","nodeType":"YulLiteral","src":"8933:4:25","type":"","value":"0x32"}],"functionName":{"name":"mstore","nativeSrc":"8923:6:25","nodeType":"YulIdentifier","src":"8923:6:25"},"nativeSrc":"8923:15:25","nodeType":"YulFunctionCall","src":"8923:15:25"},"nativeSrc":"8923:15:25","nodeType":"YulExpressionStatement","src":"8923:15:25"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"8954:1:25","nodeType":"YulLiteral","src":"8954:1:25","type":"","value":"0"},{"kind":"number","nativeSrc":"8957:4:25","nodeType":"YulLiteral","src":"8957:4:25","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"8947:6:25","nodeType":"YulIdentifier","src":"8947:6:25"},"nativeSrc":"8947:15:25","nodeType":"YulFunctionCall","src":"8947:15:25"},"nativeSrc":"8947:15:25","nodeType":"YulExpressionStatement","src":"8947:15:25"}]},"name":"panic_error_0x32","nativeSrc":"8841:127:25","nodeType":"YulFunctionDefinition","src":"8841:127:25"},{"body":{"nativeSrc":"9021:174:25","nodeType":"YulBlock","src":"9021:174:25","statements":[{"nativeSrc":"9031:16:25","nodeType":"YulAssignment","src":"9031:16:25","value":{"arguments":[{"name":"x","nativeSrc":"9042:1:25","nodeType":"YulIdentifier","src":"9042:1:25"},{"name":"y","nativeSrc":"9045:1:25","nodeType":"YulIdentifier","src":"9045:1:25"}],"functionName":{"name":"add","nativeSrc":"9038:3:25","nodeType":"YulIdentifier","src":"9038:3:25"},"nativeSrc":"9038:9:25","nodeType":"YulFunctionCall","src":"9038:9:25"},"variableNames":[{"name":"sum","nativeSrc":"9031:3:25","nodeType":"YulIdentifier","src":"9031:3:25"}]},{"body":{"nativeSrc":"9078:111:25","nodeType":"YulBlock","src":"9078:111:25","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"9099:1:25","nodeType":"YulLiteral","src":"9099:1:25","type":"","value":"0"},{"arguments":[{"kind":"number","nativeSrc":"9106:3:25","nodeType":"YulLiteral","src":"9106:3:25","type":"","value":"224"},{"kind":"number","nativeSrc":"9111:10:25","nodeType":"YulLiteral","src":"9111:10:25","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nativeSrc":"9102:3:25","nodeType":"YulIdentifier","src":"9102:3:25"},"nativeSrc":"9102:20:25","nodeType":"YulFunctionCall","src":"9102:20:25"}],"functionName":{"name":"mstore","nativeSrc":"9092:6:25","nodeType":"YulIdentifier","src":"9092:6:25"},"nativeSrc":"9092:31:25","nodeType":"YulFunctionCall","src":"9092:31:25"},"nativeSrc":"9092:31:25","nodeType":"YulExpressionStatement","src":"9092:31:25"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"9143:1:25","nodeType":"YulLiteral","src":"9143:1:25","type":"","value":"4"},{"kind":"number","nativeSrc":"9146:4:25","nodeType":"YulLiteral","src":"9146:4:25","type":"","value":"0x11"}],"functionName":{"name":"mstore","nativeSrc":"9136:6:25","nodeType":"YulIdentifier","src":"9136:6:25"},"nativeSrc":"9136:15:25","nodeType":"YulFunctionCall","src":"9136:15:25"},"nativeSrc":"9136:15:25","nodeType":"YulExpressionStatement","src":"9136:15:25"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"9171:1:25","nodeType":"YulLiteral","src":"9171:1:25","type":"","value":"0"},{"kind":"number","nativeSrc":"9174:4:25","nodeType":"YulLiteral","src":"9174:4:25","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"9164:6:25","nodeType":"YulIdentifier","src":"9164:6:25"},"nativeSrc":"9164:15:25","nodeType":"YulFunctionCall","src":"9164:15:25"},"nativeSrc":"9164:15:25","nodeType":"YulExpressionStatement","src":"9164:15:25"}]},"condition":{"arguments":[{"name":"x","nativeSrc":"9062:1:25","nodeType":"YulIdentifier","src":"9062:1:25"},{"name":"sum","nativeSrc":"9065:3:25","nodeType":"YulIdentifier","src":"9065:3:25"}],"functionName":{"name":"gt","nativeSrc":"9059:2:25","nodeType":"YulIdentifier","src":"9059:2:25"},"nativeSrc":"9059:10:25","nodeType":"YulFunctionCall","src":"9059:10:25"},"nativeSrc":"9056:133:25","nodeType":"YulIf","src":"9056:133:25"}]},"name":"checked_add_t_uint256","nativeSrc":"8973:222:25","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nativeSrc":"9004:1:25","nodeType":"YulTypedName","src":"9004:1:25","type":""},{"name":"y","nativeSrc":"9007:1:25","nodeType":"YulTypedName","src":"9007:1:25","type":""}],"returnVariables":[{"name":"sum","nativeSrc":"9013:3:25","nodeType":"YulTypedName","src":"9013:3:25","type":""}],"src":"8973:222:25"},{"body":{"nativeSrc":"9374:170:25","nodeType":"YulBlock","src":"9374:170:25","statements":[{"expression":{"arguments":[{"name":"headStart","nativeSrc":"9391:9:25","nodeType":"YulIdentifier","src":"9391:9:25"},{"kind":"number","nativeSrc":"9402:2:25","nodeType":"YulLiteral","src":"9402:2:25","type":"","value":"32"}],"functionName":{"name":"mstore","nativeSrc":"9384:6:25","nodeType":"YulIdentifier","src":"9384:6:25"},"nativeSrc":"9384:21:25","nodeType":"YulFunctionCall","src":"9384:21:25"},"nativeSrc":"9384:21:25","nodeType":"YulExpressionStatement","src":"9384:21:25"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"9425:9:25","nodeType":"YulIdentifier","src":"9425:9:25"},{"kind":"number","nativeSrc":"9436:2:25","nodeType":"YulLiteral","src":"9436:2:25","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"9421:3:25","nodeType":"YulIdentifier","src":"9421:3:25"},"nativeSrc":"9421:18:25","nodeType":"YulFunctionCall","src":"9421:18:25"},{"kind":"number","nativeSrc":"9441:2:25","nodeType":"YulLiteral","src":"9441:2:25","type":"","value":"20"}],"functionName":{"name":"mstore","nativeSrc":"9414:6:25","nodeType":"YulIdentifier","src":"9414:6:25"},"nativeSrc":"9414:30:25","nodeType":"YulFunctionCall","src":"9414:30:25"},"nativeSrc":"9414:30:25","nodeType":"YulExpressionStatement","src":"9414:30:25"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"9464:9:25","nodeType":"YulIdentifier","src":"9464:9:25"},{"kind":"number","nativeSrc":"9475:2:25","nodeType":"YulLiteral","src":"9475:2:25","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"9460:3:25","nodeType":"YulIdentifier","src":"9460:3:25"},"nativeSrc":"9460:18:25","nodeType":"YulFunctionCall","src":"9460:18:25"},{"hexValue":"496e73756666696369656e742062616c616e6365","kind":"string","nativeSrc":"9480:22:25","nodeType":"YulLiteral","src":"9480:22:25","type":"","value":"Insufficient balance"}],"functionName":{"name":"mstore","nativeSrc":"9453:6:25","nodeType":"YulIdentifier","src":"9453:6:25"},"nativeSrc":"9453:50:25","nodeType":"YulFunctionCall","src":"9453:50:25"},"nativeSrc":"9453:50:25","nodeType":"YulExpressionStatement","src":"9453:50:25"},{"nativeSrc":"9512:26:25","nodeType":"YulAssignment","src":"9512:26:25","value":{"arguments":[{"name":"headStart","nativeSrc":"9524:9:25","nodeType":"YulIdentifier","src":"9524:9:25"},{"kind":"number","nativeSrc":"9535:2:25","nodeType":"YulLiteral","src":"9535:2:25","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"9520:3:25","nodeType":"YulIdentifier","src":"9520:3:25"},"nativeSrc":"9520:18:25","nodeType":"YulFunctionCall","src":"9520:18:25"},"variableNames":[{"name":"tail","nativeSrc":"9512:4:25","nodeType":"YulIdentifier","src":"9512:4:25"}]}]},"name":"abi_encode_tuple_t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"9200:344:25","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"9351:9:25","nodeType":"YulTypedName","src":"9351:9:25","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"9365:4:25","nodeType":"YulTypedName","src":"9365:4:25","type":""}],"src":"9200:344:25"},{"body":{"nativeSrc":"9723:177:25","nodeType":"YulBlock","src":"9723:177:25","statements":[{"expression":{"arguments":[{"name":"headStart","nativeSrc":"9740:9:25","nodeType":"YulIdentifier","src":"9740:9:25"},{"kind":"number","nativeSrc":"9751:2:25","nodeType":"YulLiteral","src":"9751:2:25","type":"","value":"32"}],"functionName":{"name":"mstore","nativeSrc":"9733:6:25","nodeType":"YulIdentifier","src":"9733:6:25"},"nativeSrc":"9733:21:25","nodeType":"YulFunctionCall","src":"9733:21:25"},"nativeSrc":"9733:21:25","nodeType":"YulExpressionStatement","src":"9733:21:25"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"9774:9:25","nodeType":"YulIdentifier","src":"9774:9:25"},{"kind":"number","nativeSrc":"9785:2:25","nodeType":"YulLiteral","src":"9785:2:25","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"9770:3:25","nodeType":"YulIdentifier","src":"9770:3:25"},"nativeSrc":"9770:18:25","nodeType":"YulFunctionCall","src":"9770:18:25"},{"kind":"number","nativeSrc":"9790:2:25","nodeType":"YulLiteral","src":"9790:2:25","type":"","value":"27"}],"functionName":{"name":"mstore","nativeSrc":"9763:6:25","nodeType":"YulIdentifier","src":"9763:6:25"},"nativeSrc":"9763:30:25","nodeType":"YulFunctionCall","src":"9763:30:25"},"nativeSrc":"9763:30:25","nodeType":"YulExpressionStatement","src":"9763:30:25"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"9813:9:25","nodeType":"YulIdentifier","src":"9813:9:25"},{"kind":"number","nativeSrc":"9824:2:25","nodeType":"YulLiteral","src":"9824:2:25","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"9809:3:25","nodeType":"YulIdentifier","src":"9809:3:25"},"nativeSrc":"9809:18:25","nodeType":"YulFunctionCall","src":"9809:18:25"},{"hexValue":"436f6f6c646f776e20706572696f64206e6f7420656c6170736564","kind":"string","nativeSrc":"9829:29:25","nodeType":"YulLiteral","src":"9829:29:25","type":"","value":"Cooldown period not elapsed"}],"functionName":{"name":"mstore","nativeSrc":"9802:6:25","nodeType":"YulIdentifier","src":"9802:6:25"},"nativeSrc":"9802:57:25","nodeType":"YulFunctionCall","src":"9802:57:25"},"nativeSrc":"9802:57:25","nodeType":"YulExpressionStatement","src":"9802:57:25"},{"nativeSrc":"9868:26:25","nodeType":"YulAssignment","src":"9868:26:25","value":{"arguments":[{"name":"headStart","nativeSrc":"9880:9:25","nodeType":"YulIdentifier","src":"9880:9:25"},{"kind":"number","nativeSrc":"9891:2:25","nodeType":"YulLiteral","src":"9891:2:25","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"9876:3:25","nodeType":"YulIdentifier","src":"9876:3:25"},"nativeSrc":"9876:18:25","nodeType":"YulFunctionCall","src":"9876:18:25"},"variableNames":[{"name":"tail","nativeSrc":"9868:4:25","nodeType":"YulIdentifier","src":"9868:4:25"}]}]},"name":"abi_encode_tuple_t_stringliteral_48efca4c133d4af809cbdea820ea2f4422813132b6936873e13dbb833f6fc66c__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"9549:351:25","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"9700:9:25","nodeType":"YulTypedName","src":"9700:9:25","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"9714:4:25","nodeType":"YulTypedName","src":"9714:4:25","type":""}],"src":"9549:351:25"},{"body":{"nativeSrc":"10079:165:25","nodeType":"YulBlock","src":"10079:165:25","statements":[{"expression":{"arguments":[{"name":"headStart","nativeSrc":"10096:9:25","nodeType":"YulIdentifier","src":"10096:9:25"},{"kind":"number","nativeSrc":"10107:2:25","nodeType":"YulLiteral","src":"10107:2:25","type":"","value":"32"}],"functionName":{"name":"mstore","nativeSrc":"10089:6:25","nodeType":"YulIdentifier","src":"10089:6:25"},"nativeSrc":"10089:21:25","nodeType":"YulFunctionCall","src":"10089:21:25"},"nativeSrc":"10089:21:25","nodeType":"YulExpressionStatement","src":"10089:21:25"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"10130:9:25","nodeType":"YulIdentifier","src":"10130:9:25"},{"kind":"number","nativeSrc":"10141:2:25","nodeType":"YulLiteral","src":"10141:2:25","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"10126:3:25","nodeType":"YulIdentifier","src":"10126:3:25"},"nativeSrc":"10126:18:25","nodeType":"YulFunctionCall","src":"10126:18:25"},{"kind":"number","nativeSrc":"10146:2:25","nodeType":"YulLiteral","src":"10146:2:25","type":"","value":"15"}],"functionName":{"name":"mstore","nativeSrc":"10119:6:25","nodeType":"YulIdentifier","src":"10119:6:25"},"nativeSrc":"10119:30:25","nodeType":"YulFunctionCall","src":"10119:30:25"},"nativeSrc":"10119:30:25","nodeType":"YulExpressionStatement","src":"10119:30:25"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"10169:9:25","nodeType":"YulIdentifier","src":"10169:9:25"},{"kind":"number","nativeSrc":"10180:2:25","nodeType":"YulLiteral","src":"10180:2:25","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"10165:3:25","nodeType":"YulIdentifier","src":"10165:3:25"},"nativeSrc":"10165:18:25","nodeType":"YulFunctionCall","src":"10165:18:25"},{"hexValue":"496e76616c69642061646472657373","kind":"string","nativeSrc":"10185:17:25","nodeType":"YulLiteral","src":"10185:17:25","type":"","value":"Invalid address"}],"functionName":{"name":"mstore","nativeSrc":"10158:6:25","nodeType":"YulIdentifier","src":"10158:6:25"},"nativeSrc":"10158:45:25","nodeType":"YulFunctionCall","src":"10158:45:25"},"nativeSrc":"10158:45:25","nodeType":"YulExpressionStatement","src":"10158:45:25"},{"nativeSrc":"10212:26:25","nodeType":"YulAssignment","src":"10212:26:25","value":{"arguments":[{"name":"headStart","nativeSrc":"10224:9:25","nodeType":"YulIdentifier","src":"10224:9:25"},{"kind":"number","nativeSrc":"10235:2:25","nodeType":"YulLiteral","src":"10235:2:25","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"10220:3:25","nodeType":"YulIdentifier","src":"10220:3:25"},"nativeSrc":"10220:18:25","nodeType":"YulFunctionCall","src":"10220:18:25"},"variableNames":[{"name":"tail","nativeSrc":"10212:4:25","nodeType":"YulIdentifier","src":"10212:4:25"}]}]},"name":"abi_encode_tuple_t_stringliteral_1462473b7a4b33d32b109b815fd2324d00c9e5839b707ecf16d0ab5744f99226__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"9905:339:25","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"10056:9:25","nodeType":"YulTypedName","src":"10056:9:25","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"10070:4:25","nodeType":"YulTypedName","src":"10070:4:25","type":""}],"src":"9905:339:25"},{"body":{"nativeSrc":"10490:346:25","nodeType":"YulBlock","src":"10490:346:25","statements":[{"nativeSrc":"10500:27:25","nodeType":"YulAssignment","src":"10500:27:25","value":{"arguments":[{"name":"headStart","nativeSrc":"10512:9:25","nodeType":"YulIdentifier","src":"10512:9:25"},{"kind":"number","nativeSrc":"10523:3:25","nodeType":"YulLiteral","src":"10523:3:25","type":"","value":"192"}],"functionName":{"name":"add","nativeSrc":"10508:3:25","nodeType":"YulIdentifier","src":"10508:3:25"},"nativeSrc":"10508:19:25","nodeType":"YulFunctionCall","src":"10508:19:25"},"variableNames":[{"name":"tail","nativeSrc":"10500:4:25","nodeType":"YulIdentifier","src":"10500:4:25"}]},{"expression":{"arguments":[{"name":"headStart","nativeSrc":"10543:9:25","nodeType":"YulIdentifier","src":"10543:9:25"},{"name":"value0","nativeSrc":"10554:6:25","nodeType":"YulIdentifier","src":"10554:6:25"}],"functionName":{"name":"mstore","nativeSrc":"10536:6:25","nodeType":"YulIdentifier","src":"10536:6:25"},"nativeSrc":"10536:25:25","nodeType":"YulFunctionCall","src":"10536:25:25"},"nativeSrc":"10536:25:25","nodeType":"YulExpressionStatement","src":"10536:25:25"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"10581:9:25","nodeType":"YulIdentifier","src":"10581:9:25"},{"kind":"number","nativeSrc":"10592:2:25","nodeType":"YulLiteral","src":"10592:2:25","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"10577:3:25","nodeType":"YulIdentifier","src":"10577:3:25"},"nativeSrc":"10577:18:25","nodeType":"YulFunctionCall","src":"10577:18:25"},{"arguments":[{"name":"value1","nativeSrc":"10601:6:25","nodeType":"YulIdentifier","src":"10601:6:25"},{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"10617:3:25","nodeType":"YulLiteral","src":"10617:3:25","type":"","value":"160"},{"kind":"number","nativeSrc":"10622:1:25","nodeType":"YulLiteral","src":"10622:1:25","type":"","value":"1"}],"functionName":{"name":"shl","nativeSrc":"10613:3:25","nodeType":"YulIdentifier","src":"10613:3:25"},"nativeSrc":"10613:11:25","nodeType":"YulFunctionCall","src":"10613:11:25"},{"kind":"number","nativeSrc":"10626:1:25","nodeType":"YulLiteral","src":"10626:1:25","type":"","value":"1"}],"functionName":{"name":"sub","nativeSrc":"10609:3:25","nodeType":"YulIdentifier","src":"10609:3:25"},"nativeSrc":"10609:19:25","nodeType":"YulFunctionCall","src":"10609:19:25"}],"functionName":{"name":"and","nativeSrc":"10597:3:25","nodeType":"YulIdentifier","src":"10597:3:25"},"nativeSrc":"10597:32:25","nodeType":"YulFunctionCall","src":"10597:32:25"}],"functionName":{"name":"mstore","nativeSrc":"10570:6:25","nodeType":"YulIdentifier","src":"10570:6:25"},"nativeSrc":"10570:60:25","nodeType":"YulFunctionCall","src":"10570:60:25"},"nativeSrc":"10570:60:25","nodeType":"YulExpressionStatement","src":"10570:60:25"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"10650:9:25","nodeType":"YulIdentifier","src":"10650:9:25"},{"kind":"number","nativeSrc":"10661:2:25","nodeType":"YulLiteral","src":"10661:2:25","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"10646:3:25","nodeType":"YulIdentifier","src":"10646:3:25"},"nativeSrc":"10646:18:25","nodeType":"YulFunctionCall","src":"10646:18:25"},{"arguments":[{"name":"value2","nativeSrc":"10670:6:25","nodeType":"YulIdentifier","src":"10670:6:25"},{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"10686:3:25","nodeType":"YulLiteral","src":"10686:3:25","type":"","value":"160"},{"kind":"number","nativeSrc":"10691:1:25","nodeType":"YulLiteral","src":"10691:1:25","type":"","value":"1"}],"functionName":{"name":"shl","nativeSrc":"10682:3:25","nodeType":"YulIdentifier","src":"10682:3:25"},"nativeSrc":"10682:11:25","nodeType":"YulFunctionCall","src":"10682:11:25"},{"kind":"number","nativeSrc":"10695:1:25","nodeType":"YulLiteral","src":"10695:1:25","type":"","value":"1"}],"functionName":{"name":"sub","nativeSrc":"10678:3:25","nodeType":"YulIdentifier","src":"10678:3:25"},"nativeSrc":"10678:19:25","nodeType":"YulFunctionCall","src":"10678:19:25"}],"functionName":{"name":"and","nativeSrc":"10666:3:25","nodeType":"YulIdentifier","src":"10666:3:25"},"nativeSrc":"10666:32:25","nodeType":"YulFunctionCall","src":"10666:32:25"}],"functionName":{"name":"mstore","nativeSrc":"10639:6:25","nodeType":"YulIdentifier","src":"10639:6:25"},"nativeSrc":"10639:60:25","nodeType":"YulFunctionCall","src":"10639:60:25"},"nativeSrc":"10639:60:25","nodeType":"YulExpressionStatement","src":"10639:60:25"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"10719:9:25","nodeType":"YulIdentifier","src":"10719:9:25"},{"kind":"number","nativeSrc":"10730:2:25","nodeType":"YulLiteral","src":"10730:2:25","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"10715:3:25","nodeType":"YulIdentifier","src":"10715:3:25"},"nativeSrc":"10715:18:25","nodeType":"YulFunctionCall","src":"10715:18:25"},{"name":"value3","nativeSrc":"10735:6:25","nodeType":"YulIdentifier","src":"10735:6:25"}],"functionName":{"name":"mstore","nativeSrc":"10708:6:25","nodeType":"YulIdentifier","src":"10708:6:25"},"nativeSrc":"10708:34:25","nodeType":"YulFunctionCall","src":"10708:34:25"},"nativeSrc":"10708:34:25","nodeType":"YulExpressionStatement","src":"10708:34:25"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"10762:9:25","nodeType":"YulIdentifier","src":"10762:9:25"},{"kind":"number","nativeSrc":"10773:3:25","nodeType":"YulLiteral","src":"10773:3:25","type":"","value":"128"}],"functionName":{"name":"add","nativeSrc":"10758:3:25","nodeType":"YulIdentifier","src":"10758:3:25"},"nativeSrc":"10758:19:25","nodeType":"YulFunctionCall","src":"10758:19:25"},{"name":"value4","nativeSrc":"10779:6:25","nodeType":"YulIdentifier","src":"10779:6:25"}],"functionName":{"name":"mstore","nativeSrc":"10751:6:25","nodeType":"YulIdentifier","src":"10751:6:25"},"nativeSrc":"10751:35:25","nodeType":"YulFunctionCall","src":"10751:35:25"},"nativeSrc":"10751:35:25","nodeType":"YulExpressionStatement","src":"10751:35:25"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"10806:9:25","nodeType":"YulIdentifier","src":"10806:9:25"},{"kind":"number","nativeSrc":"10817:3:25","nodeType":"YulLiteral","src":"10817:3:25","type":"","value":"160"}],"functionName":{"name":"add","nativeSrc":"10802:3:25","nodeType":"YulIdentifier","src":"10802:3:25"},"nativeSrc":"10802:19:25","nodeType":"YulFunctionCall","src":"10802:19:25"},{"name":"value5","nativeSrc":"10823:6:25","nodeType":"YulIdentifier","src":"10823:6:25"}],"functionName":{"name":"mstore","nativeSrc":"10795:6:25","nodeType":"YulIdentifier","src":"10795:6:25"},"nativeSrc":"10795:35:25","nodeType":"YulFunctionCall","src":"10795:35:25"},"nativeSrc":"10795:35:25","nodeType":"YulExpressionStatement","src":"10795:35:25"}]},"name":"abi_encode_tuple_t_bytes32_t_address_t_address_t_uint256_t_uint256_t_uint256__to_t_bytes32_t_address_t_address_t_uint256_t_uint256_t_uint256__fromStack_reversed","nativeSrc":"10249:587:25","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"10419:9:25","nodeType":"YulTypedName","src":"10419:9:25","type":""},{"name":"value5","nativeSrc":"10430:6:25","nodeType":"YulTypedName","src":"10430:6:25","type":""},{"name":"value4","nativeSrc":"10438:6:25","nodeType":"YulTypedName","src":"10438:6:25","type":""},{"name":"value3","nativeSrc":"10446:6:25","nodeType":"YulTypedName","src":"10446:6:25","type":""},{"name":"value2","nativeSrc":"10454:6:25","nodeType":"YulTypedName","src":"10454:6:25","type":""},{"name":"value1","nativeSrc":"10462:6:25","nodeType":"YulTypedName","src":"10462:6:25","type":""},{"name":"value0","nativeSrc":"10470:6:25","nodeType":"YulTypedName","src":"10470:6:25","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"10481:4:25","nodeType":"YulTypedName","src":"10481:4:25","type":""}],"src":"10249:587:25"},{"body":{"nativeSrc":"10970:171:25","nodeType":"YulBlock","src":"10970:171:25","statements":[{"nativeSrc":"10980:26:25","nodeType":"YulAssignment","src":"10980:26:25","value":{"arguments":[{"name":"headStart","nativeSrc":"10992:9:25","nodeType":"YulIdentifier","src":"10992:9:25"},{"kind":"number","nativeSrc":"11003:2:25","nodeType":"YulLiteral","src":"11003:2:25","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"10988:3:25","nodeType":"YulIdentifier","src":"10988:3:25"},"nativeSrc":"10988:18:25","nodeType":"YulFunctionCall","src":"10988:18:25"},"variableNames":[{"name":"tail","nativeSrc":"10980:4:25","nodeType":"YulIdentifier","src":"10980:4:25"}]},{"expression":{"arguments":[{"name":"headStart","nativeSrc":"11022:9:25","nodeType":"YulIdentifier","src":"11022:9:25"},{"arguments":[{"name":"value0","nativeSrc":"11037:6:25","nodeType":"YulIdentifier","src":"11037:6:25"},{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"11053:3:25","nodeType":"YulLiteral","src":"11053:3:25","type":"","value":"160"},{"kind":"number","nativeSrc":"11058:1:25","nodeType":"YulLiteral","src":"11058:1:25","type":"","value":"1"}],"functionName":{"name":"shl","nativeSrc":"11049:3:25","nodeType":"YulIdentifier","src":"11049:3:25"},"nativeSrc":"11049:11:25","nodeType":"YulFunctionCall","src":"11049:11:25"},{"kind":"number","nativeSrc":"11062:1:25","nodeType":"YulLiteral","src":"11062:1:25","type":"","value":"1"}],"functionName":{"name":"sub","nativeSrc":"11045:3:25","nodeType":"YulIdentifier","src":"11045:3:25"},"nativeSrc":"11045:19:25","nodeType":"YulFunctionCall","src":"11045:19:25"}],"functionName":{"name":"and","nativeSrc":"11033:3:25","nodeType":"YulIdentifier","src":"11033:3:25"},"nativeSrc":"11033:32:25","nodeType":"YulFunctionCall","src":"11033:32:25"}],"functionName":{"name":"mstore","nativeSrc":"11015:6:25","nodeType":"YulIdentifier","src":"11015:6:25"},"nativeSrc":"11015:51:25","nodeType":"YulFunctionCall","src":"11015:51:25"},"nativeSrc":"11015:51:25","nodeType":"YulExpressionStatement","src":"11015:51:25"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"11086:9:25","nodeType":"YulIdentifier","src":"11086:9:25"},{"kind":"number","nativeSrc":"11097:2:25","nodeType":"YulLiteral","src":"11097:2:25","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"11082:3:25","nodeType":"YulIdentifier","src":"11082:3:25"},"nativeSrc":"11082:18:25","nodeType":"YulFunctionCall","src":"11082:18:25"},{"arguments":[{"name":"value1","nativeSrc":"11106:6:25","nodeType":"YulIdentifier","src":"11106:6:25"},{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"11122:3:25","nodeType":"YulLiteral","src":"11122:3:25","type":"","value":"160"},{"kind":"number","nativeSrc":"11127:1:25","nodeType":"YulLiteral","src":"11127:1:25","type":"","value":"1"}],"functionName":{"name":"shl","nativeSrc":"11118:3:25","nodeType":"YulIdentifier","src":"11118:3:25"},"nativeSrc":"11118:11:25","nodeType":"YulFunctionCall","src":"11118:11:25"},{"kind":"number","nativeSrc":"11131:1:25","nodeType":"YulLiteral","src":"11131:1:25","type":"","value":"1"}],"functionName":{"name":"sub","nativeSrc":"11114:3:25","nodeType":"YulIdentifier","src":"11114:3:25"},"nativeSrc":"11114:19:25","nodeType":"YulFunctionCall","src":"11114:19:25"}],"functionName":{"name":"and","nativeSrc":"11102:3:25","nodeType":"YulIdentifier","src":"11102:3:25"},"nativeSrc":"11102:32:25","nodeType":"YulFunctionCall","src":"11102:32:25"}],"functionName":{"name":"mstore","nativeSrc":"11075:6:25","nodeType":"YulIdentifier","src":"11075:6:25"},"nativeSrc":"11075:60:25","nodeType":"YulFunctionCall","src":"11075:60:25"},"nativeSrc":"11075:60:25","nodeType":"YulExpressionStatement","src":"11075:60:25"}]},"name":"abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed","nativeSrc":"10841:300:25","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"10931:9:25","nodeType":"YulTypedName","src":"10931:9:25","type":""},{"name":"value1","nativeSrc":"10942:6:25","nodeType":"YulTypedName","src":"10942:6:25","type":""},{"name":"value0","nativeSrc":"10950:6:25","nodeType":"YulTypedName","src":"10950:6:25","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"10961:4:25","nodeType":"YulTypedName","src":"10961:4:25","type":""}],"src":"10841:300:25"},{"body":{"nativeSrc":"11303:188:25","nodeType":"YulBlock","src":"11303:188:25","statements":[{"nativeSrc":"11313:26:25","nodeType":"YulAssignment","src":"11313:26:25","value":{"arguments":[{"name":"headStart","nativeSrc":"11325:9:25","nodeType":"YulIdentifier","src":"11325:9:25"},{"kind":"number","nativeSrc":"11336:2:25","nodeType":"YulLiteral","src":"11336:2:25","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"11321:3:25","nodeType":"YulIdentifier","src":"11321:3:25"},"nativeSrc":"11321:18:25","nodeType":"YulFunctionCall","src":"11321:18:25"},"variableNames":[{"name":"tail","nativeSrc":"11313:4:25","nodeType":"YulIdentifier","src":"11313:4:25"}]},{"expression":{"arguments":[{"name":"headStart","nativeSrc":"11355:9:25","nodeType":"YulIdentifier","src":"11355:9:25"},{"arguments":[{"name":"value0","nativeSrc":"11370:6:25","nodeType":"YulIdentifier","src":"11370:6:25"},{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"11386:3:25","nodeType":"YulLiteral","src":"11386:3:25","type":"","value":"160"},{"kind":"number","nativeSrc":"11391:1:25","nodeType":"YulLiteral","src":"11391:1:25","type":"","value":"1"}],"functionName":{"name":"shl","nativeSrc":"11382:3:25","nodeType":"YulIdentifier","src":"11382:3:25"},"nativeSrc":"11382:11:25","nodeType":"YulFunctionCall","src":"11382:11:25"},{"kind":"number","nativeSrc":"11395:1:25","nodeType":"YulLiteral","src":"11395:1:25","type":"","value":"1"}],"functionName":{"name":"sub","nativeSrc":"11378:3:25","nodeType":"YulIdentifier","src":"11378:3:25"},"nativeSrc":"11378:19:25","nodeType":"YulFunctionCall","src":"11378:19:25"}],"functionName":{"name":"and","nativeSrc":"11366:3:25","nodeType":"YulIdentifier","src":"11366:3:25"},"nativeSrc":"11366:32:25","nodeType":"YulFunctionCall","src":"11366:32:25"}],"functionName":{"name":"mstore","nativeSrc":"11348:6:25","nodeType":"YulIdentifier","src":"11348:6:25"},"nativeSrc":"11348:51:25","nodeType":"YulFunctionCall","src":"11348:51:25"},"nativeSrc":"11348:51:25","nodeType":"YulExpressionStatement","src":"11348:51:25"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"11419:9:25","nodeType":"YulIdentifier","src":"11419:9:25"},{"kind":"number","nativeSrc":"11430:2:25","nodeType":"YulLiteral","src":"11430:2:25","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"11415:3:25","nodeType":"YulIdentifier","src":"11415:3:25"},"nativeSrc":"11415:18:25","nodeType":"YulFunctionCall","src":"11415:18:25"},{"name":"value1","nativeSrc":"11435:6:25","nodeType":"YulIdentifier","src":"11435:6:25"}],"functionName":{"name":"mstore","nativeSrc":"11408:6:25","nodeType":"YulIdentifier","src":"11408:6:25"},"nativeSrc":"11408:34:25","nodeType":"YulFunctionCall","src":"11408:34:25"},"nativeSrc":"11408:34:25","nodeType":"YulExpressionStatement","src":"11408:34:25"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"11462:9:25","nodeType":"YulIdentifier","src":"11462:9:25"},{"kind":"number","nativeSrc":"11473:2:25","nodeType":"YulLiteral","src":"11473:2:25","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"11458:3:25","nodeType":"YulIdentifier","src":"11458:3:25"},"nativeSrc":"11458:18:25","nodeType":"YulFunctionCall","src":"11458:18:25"},{"name":"value2","nativeSrc":"11478:6:25","nodeType":"YulIdentifier","src":"11478:6:25"}],"functionName":{"name":"mstore","nativeSrc":"11451:6:25","nodeType":"YulIdentifier","src":"11451:6:25"},"nativeSrc":"11451:34:25","nodeType":"YulFunctionCall","src":"11451:34:25"},"nativeSrc":"11451:34:25","nodeType":"YulExpressionStatement","src":"11451:34:25"}]},"name":"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed","nativeSrc":"11146:345:25","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"11256:9:25","nodeType":"YulTypedName","src":"11256:9:25","type":""},{"name":"value2","nativeSrc":"11267:6:25","nodeType":"YulTypedName","src":"11267:6:25","type":""},{"name":"value1","nativeSrc":"11275:6:25","nodeType":"YulTypedName","src":"11275:6:25","type":""},{"name":"value0","nativeSrc":"11283:6:25","nodeType":"YulTypedName","src":"11283:6:25","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"11294:4:25","nodeType":"YulTypedName","src":"11294:4:25","type":""}],"src":"11146:345:25"},{"body":{"nativeSrc":"11625:145:25","nodeType":"YulBlock","src":"11625:145:25","statements":[{"nativeSrc":"11635:26:25","nodeType":"YulAssignment","src":"11635:26:25","value":{"arguments":[{"name":"headStart","nativeSrc":"11647:9:25","nodeType":"YulIdentifier","src":"11647:9:25"},{"kind":"number","nativeSrc":"11658:2:25","nodeType":"YulLiteral","src":"11658:2:25","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"11643:3:25","nodeType":"YulIdentifier","src":"11643:3:25"},"nativeSrc":"11643:18:25","nodeType":"YulFunctionCall","src":"11643:18:25"},"variableNames":[{"name":"tail","nativeSrc":"11635:4:25","nodeType":"YulIdentifier","src":"11635:4:25"}]},{"expression":{"arguments":[{"name":"headStart","nativeSrc":"11677:9:25","nodeType":"YulIdentifier","src":"11677:9:25"},{"arguments":[{"name":"value0","nativeSrc":"11692:6:25","nodeType":"YulIdentifier","src":"11692:6:25"},{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"11708:3:25","nodeType":"YulLiteral","src":"11708:3:25","type":"","value":"160"},{"kind":"number","nativeSrc":"11713:1:25","nodeType":"YulLiteral","src":"11713:1:25","type":"","value":"1"}],"functionName":{"name":"shl","nativeSrc":"11704:3:25","nodeType":"YulIdentifier","src":"11704:3:25"},"nativeSrc":"11704:11:25","nodeType":"YulFunctionCall","src":"11704:11:25"},{"kind":"number","nativeSrc":"11717:1:25","nodeType":"YulLiteral","src":"11717:1:25","type":"","value":"1"}],"functionName":{"name":"sub","nativeSrc":"11700:3:25","nodeType":"YulIdentifier","src":"11700:3:25"},"nativeSrc":"11700:19:25","nodeType":"YulFunctionCall","src":"11700:19:25"}],"functionName":{"name":"and","nativeSrc":"11688:3:25","nodeType":"YulIdentifier","src":"11688:3:25"},"nativeSrc":"11688:32:25","nodeType":"YulFunctionCall","src":"11688:32:25"}],"functionName":{"name":"mstore","nativeSrc":"11670:6:25","nodeType":"YulIdentifier","src":"11670:6:25"},"nativeSrc":"11670:51:25","nodeType":"YulFunctionCall","src":"11670:51:25"},"nativeSrc":"11670:51:25","nodeType":"YulExpressionStatement","src":"11670:51:25"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"11741:9:25","nodeType":"YulIdentifier","src":"11741:9:25"},{"kind":"number","nativeSrc":"11752:2:25","nodeType":"YulLiteral","src":"11752:2:25","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"11737:3:25","nodeType":"YulIdentifier","src":"11737:3:25"},"nativeSrc":"11737:18:25","nodeType":"YulFunctionCall","src":"11737:18:25"},{"name":"value1","nativeSrc":"11757:6:25","nodeType":"YulIdentifier","src":"11757:6:25"}],"functionName":{"name":"mstore","nativeSrc":"11730:6:25","nodeType":"YulIdentifier","src":"11730:6:25"},"nativeSrc":"11730:34:25","nodeType":"YulFunctionCall","src":"11730:34:25"},"nativeSrc":"11730:34:25","nodeType":"YulExpressionStatement","src":"11730:34:25"}]},"name":"abi_encode_tuple_t_address_t_bytes32__to_t_address_t_bytes32__fromStack_reversed","nativeSrc":"11496:274:25","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"11586:9:25","nodeType":"YulTypedName","src":"11586:9:25","type":""},{"name":"value1","nativeSrc":"11597:6:25","nodeType":"YulTypedName","src":"11597:6:25","type":""},{"name":"value0","nativeSrc":"11605:6:25","nodeType":"YulTypedName","src":"11605:6:25","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"11616:4:25","nodeType":"YulTypedName","src":"11616:4:25","type":""}],"src":"11496:274:25"},{"body":{"nativeSrc":"11988:276:25","nodeType":"YulBlock","src":"11988:276:25","statements":[{"nativeSrc":"11998:27:25","nodeType":"YulAssignment","src":"11998:27:25","value":{"arguments":[{"name":"headStart","nativeSrc":"12010:9:25","nodeType":"YulIdentifier","src":"12010:9:25"},{"kind":"number","nativeSrc":"12021:3:25","nodeType":"YulLiteral","src":"12021:3:25","type":"","value":"160"}],"functionName":{"name":"add","nativeSrc":"12006:3:25","nodeType":"YulIdentifier","src":"12006:3:25"},"nativeSrc":"12006:19:25","nodeType":"YulFunctionCall","src":"12006:19:25"},"variableNames":[{"name":"tail","nativeSrc":"11998:4:25","nodeType":"YulIdentifier","src":"11998:4:25"}]},{"expression":{"arguments":[{"name":"headStart","nativeSrc":"12041:9:25","nodeType":"YulIdentifier","src":"12041:9:25"},{"name":"value0","nativeSrc":"12052:6:25","nodeType":"YulIdentifier","src":"12052:6:25"}],"functionName":{"name":"mstore","nativeSrc":"12034:6:25","nodeType":"YulIdentifier","src":"12034:6:25"},"nativeSrc":"12034:25:25","nodeType":"YulFunctionCall","src":"12034:25:25"},"nativeSrc":"12034:25:25","nodeType":"YulExpressionStatement","src":"12034:25:25"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"12079:9:25","nodeType":"YulIdentifier","src":"12079:9:25"},{"kind":"number","nativeSrc":"12090:2:25","nodeType":"YulLiteral","src":"12090:2:25","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"12075:3:25","nodeType":"YulIdentifier","src":"12075:3:25"},"nativeSrc":"12075:18:25","nodeType":"YulFunctionCall","src":"12075:18:25"},{"name":"value1","nativeSrc":"12095:6:25","nodeType":"YulIdentifier","src":"12095:6:25"}],"functionName":{"name":"mstore","nativeSrc":"12068:6:25","nodeType":"YulIdentifier","src":"12068:6:25"},"nativeSrc":"12068:34:25","nodeType":"YulFunctionCall","src":"12068:34:25"},"nativeSrc":"12068:34:25","nodeType":"YulExpressionStatement","src":"12068:34:25"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"12122:9:25","nodeType":"YulIdentifier","src":"12122:9:25"},{"kind":"number","nativeSrc":"12133:2:25","nodeType":"YulLiteral","src":"12133:2:25","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"12118:3:25","nodeType":"YulIdentifier","src":"12118:3:25"},"nativeSrc":"12118:18:25","nodeType":"YulFunctionCall","src":"12118:18:25"},{"name":"value2","nativeSrc":"12138:6:25","nodeType":"YulIdentifier","src":"12138:6:25"}],"functionName":{"name":"mstore","nativeSrc":"12111:6:25","nodeType":"YulIdentifier","src":"12111:6:25"},"nativeSrc":"12111:34:25","nodeType":"YulFunctionCall","src":"12111:34:25"},"nativeSrc":"12111:34:25","nodeType":"YulExpressionStatement","src":"12111:34:25"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"12165:9:25","nodeType":"YulIdentifier","src":"12165:9:25"},{"kind":"number","nativeSrc":"12176:2:25","nodeType":"YulLiteral","src":"12176:2:25","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"12161:3:25","nodeType":"YulIdentifier","src":"12161:3:25"},"nativeSrc":"12161:18:25","nodeType":"YulFunctionCall","src":"12161:18:25"},{"name":"value3","nativeSrc":"12181:6:25","nodeType":"YulIdentifier","src":"12181:6:25"}],"functionName":{"name":"mstore","nativeSrc":"12154:6:25","nodeType":"YulIdentifier","src":"12154:6:25"},"nativeSrc":"12154:34:25","nodeType":"YulFunctionCall","src":"12154:34:25"},"nativeSrc":"12154:34:25","nodeType":"YulExpressionStatement","src":"12154:34:25"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"12208:9:25","nodeType":"YulIdentifier","src":"12208:9:25"},{"kind":"number","nativeSrc":"12219:3:25","nodeType":"YulLiteral","src":"12219:3:25","type":"","value":"128"}],"functionName":{"name":"add","nativeSrc":"12204:3:25","nodeType":"YulIdentifier","src":"12204:3:25"},"nativeSrc":"12204:19:25","nodeType":"YulFunctionCall","src":"12204:19:25"},{"arguments":[{"name":"value4","nativeSrc":"12229:6:25","nodeType":"YulIdentifier","src":"12229:6:25"},{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"12245:3:25","nodeType":"YulLiteral","src":"12245:3:25","type":"","value":"160"},{"kind":"number","nativeSrc":"12250:1:25","nodeType":"YulLiteral","src":"12250:1:25","type":"","value":"1"}],"functionName":{"name":"shl","nativeSrc":"12241:3:25","nodeType":"YulIdentifier","src":"12241:3:25"},"nativeSrc":"12241:11:25","nodeType":"YulFunctionCall","src":"12241:11:25"},{"kind":"number","nativeSrc":"12254:1:25","nodeType":"YulLiteral","src":"12254:1:25","type":"","value":"1"}],"functionName":{"name":"sub","nativeSrc":"12237:3:25","nodeType":"YulIdentifier","src":"12237:3:25"},"nativeSrc":"12237:19:25","nodeType":"YulFunctionCall","src":"12237:19:25"}],"functionName":{"name":"and","nativeSrc":"12225:3:25","nodeType":"YulIdentifier","src":"12225:3:25"},"nativeSrc":"12225:32:25","nodeType":"YulFunctionCall","src":"12225:32:25"}],"functionName":{"name":"mstore","nativeSrc":"12197:6:25","nodeType":"YulIdentifier","src":"12197:6:25"},"nativeSrc":"12197:61:25","nodeType":"YulFunctionCall","src":"12197:61:25"},"nativeSrc":"12197:61:25","nodeType":"YulExpressionStatement","src":"12197:61:25"}]},"name":"abi_encode_tuple_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__to_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__fromStack_reversed","nativeSrc":"11775:489:25","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"11925:9:25","nodeType":"YulTypedName","src":"11925:9:25","type":""},{"name":"value4","nativeSrc":"11936:6:25","nodeType":"YulTypedName","src":"11936:6:25","type":""},{"name":"value3","nativeSrc":"11944:6:25","nodeType":"YulTypedName","src":"11944:6:25","type":""},{"name":"value2","nativeSrc":"11952:6:25","nodeType":"YulTypedName","src":"11952:6:25","type":""},{"name":"value1","nativeSrc":"11960:6:25","nodeType":"YulTypedName","src":"11960:6:25","type":""},{"name":"value0","nativeSrc":"11968:6:25","nodeType":"YulTypedName","src":"11968:6:25","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"11979:4:25","nodeType":"YulTypedName","src":"11979:4:25","type":""}],"src":"11775:489:25"},{"body":{"nativeSrc":"12450:217:25","nodeType":"YulBlock","src":"12450:217:25","statements":[{"nativeSrc":"12460:27:25","nodeType":"YulAssignment","src":"12460:27:25","value":{"arguments":[{"name":"headStart","nativeSrc":"12472:9:25","nodeType":"YulIdentifier","src":"12472:9:25"},{"kind":"number","nativeSrc":"12483:3:25","nodeType":"YulLiteral","src":"12483:3:25","type":"","value":"128"}],"functionName":{"name":"add","nativeSrc":"12468:3:25","nodeType":"YulIdentifier","src":"12468:3:25"},"nativeSrc":"12468:19:25","nodeType":"YulFunctionCall","src":"12468:19:25"},"variableNames":[{"name":"tail","nativeSrc":"12460:4:25","nodeType":"YulIdentifier","src":"12460:4:25"}]},{"expression":{"arguments":[{"name":"headStart","nativeSrc":"12503:9:25","nodeType":"YulIdentifier","src":"12503:9:25"},{"name":"value0","nativeSrc":"12514:6:25","nodeType":"YulIdentifier","src":"12514:6:25"}],"functionName":{"name":"mstore","nativeSrc":"12496:6:25","nodeType":"YulIdentifier","src":"12496:6:25"},"nativeSrc":"12496:25:25","nodeType":"YulFunctionCall","src":"12496:25:25"},"nativeSrc":"12496:25:25","nodeType":"YulExpressionStatement","src":"12496:25:25"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"12541:9:25","nodeType":"YulIdentifier","src":"12541:9:25"},{"kind":"number","nativeSrc":"12552:2:25","nodeType":"YulLiteral","src":"12552:2:25","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"12537:3:25","nodeType":"YulIdentifier","src":"12537:3:25"},"nativeSrc":"12537:18:25","nodeType":"YulFunctionCall","src":"12537:18:25"},{"arguments":[{"name":"value1","nativeSrc":"12561:6:25","nodeType":"YulIdentifier","src":"12561:6:25"},{"kind":"number","nativeSrc":"12569:4:25","nodeType":"YulLiteral","src":"12569:4:25","type":"","value":"0xff"}],"functionName":{"name":"and","nativeSrc":"12557:3:25","nodeType":"YulIdentifier","src":"12557:3:25"},"nativeSrc":"12557:17:25","nodeType":"YulFunctionCall","src":"12557:17:25"}],"functionName":{"name":"mstore","nativeSrc":"12530:6:25","nodeType":"YulIdentifier","src":"12530:6:25"},"nativeSrc":"12530:45:25","nodeType":"YulFunctionCall","src":"12530:45:25"},"nativeSrc":"12530:45:25","nodeType":"YulExpressionStatement","src":"12530:45:25"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"12595:9:25","nodeType":"YulIdentifier","src":"12595:9:25"},{"kind":"number","nativeSrc":"12606:2:25","nodeType":"YulLiteral","src":"12606:2:25","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"12591:3:25","nodeType":"YulIdentifier","src":"12591:3:25"},"nativeSrc":"12591:18:25","nodeType":"YulFunctionCall","src":"12591:18:25"},{"name":"value2","nativeSrc":"12611:6:25","nodeType":"YulIdentifier","src":"12611:6:25"}],"functionName":{"name":"mstore","nativeSrc":"12584:6:25","nodeType":"YulIdentifier","src":"12584:6:25"},"nativeSrc":"12584:34:25","nodeType":"YulFunctionCall","src":"12584:34:25"},"nativeSrc":"12584:34:25","nodeType":"YulExpressionStatement","src":"12584:34:25"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"12638:9:25","nodeType":"YulIdentifier","src":"12638:9:25"},{"kind":"number","nativeSrc":"12649:2:25","nodeType":"YulLiteral","src":"12649:2:25","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"12634:3:25","nodeType":"YulIdentifier","src":"12634:3:25"},"nativeSrc":"12634:18:25","nodeType":"YulFunctionCall","src":"12634:18:25"},{"name":"value3","nativeSrc":"12654:6:25","nodeType":"YulIdentifier","src":"12654:6:25"}],"functionName":{"name":"mstore","nativeSrc":"12627:6:25","nodeType":"YulIdentifier","src":"12627:6:25"},"nativeSrc":"12627:34:25","nodeType":"YulFunctionCall","src":"12627:34:25"},"nativeSrc":"12627:34:25","nodeType":"YulExpressionStatement","src":"12627:34:25"}]},"name":"abi_encode_tuple_t_bytes32_t_uint8_t_bytes32_t_bytes32__to_t_bytes32_t_uint8_t_bytes32_t_bytes32__fromStack_reversed","nativeSrc":"12269:398:25","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"12395:9:25","nodeType":"YulTypedName","src":"12395:9:25","type":""},{"name":"value3","nativeSrc":"12406:6:25","nodeType":"YulTypedName","src":"12406:6:25","type":""},{"name":"value2","nativeSrc":"12414:6:25","nodeType":"YulTypedName","src":"12414:6:25","type":""},{"name":"value1","nativeSrc":"12422:6:25","nodeType":"YulTypedName","src":"12422:6:25","type":""},{"name":"value0","nativeSrc":"12430:6:25","nodeType":"YulTypedName","src":"12430:6:25","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"12441:4:25","nodeType":"YulTypedName","src":"12441:4:25","type":""}],"src":"12269:398:25"},{"body":{"nativeSrc":"12704:95:25","nodeType":"YulBlock","src":"12704:95:25","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"12721:1:25","nodeType":"YulLiteral","src":"12721:1:25","type":"","value":"0"},{"arguments":[{"kind":"number","nativeSrc":"12728:3:25","nodeType":"YulLiteral","src":"12728:3:25","type":"","value":"224"},{"kind":"number","nativeSrc":"12733:10:25","nodeType":"YulLiteral","src":"12733:10:25","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nativeSrc":"12724:3:25","nodeType":"YulIdentifier","src":"12724:3:25"},"nativeSrc":"12724:20:25","nodeType":"YulFunctionCall","src":"12724:20:25"}],"functionName":{"name":"mstore","nativeSrc":"12714:6:25","nodeType":"YulIdentifier","src":"12714:6:25"},"nativeSrc":"12714:31:25","nodeType":"YulFunctionCall","src":"12714:31:25"},"nativeSrc":"12714:31:25","nodeType":"YulExpressionStatement","src":"12714:31:25"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"12761:1:25","nodeType":"YulLiteral","src":"12761:1:25","type":"","value":"4"},{"kind":"number","nativeSrc":"12764:4:25","nodeType":"YulLiteral","src":"12764:4:25","type":"","value":"0x21"}],"functionName":{"name":"mstore","nativeSrc":"12754:6:25","nodeType":"YulIdentifier","src":"12754:6:25"},"nativeSrc":"12754:15:25","nodeType":"YulFunctionCall","src":"12754:15:25"},"nativeSrc":"12754:15:25","nodeType":"YulExpressionStatement","src":"12754:15:25"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"12785:1:25","nodeType":"YulLiteral","src":"12785:1:25","type":"","value":"0"},{"kind":"number","nativeSrc":"12788:4:25","nodeType":"YulLiteral","src":"12788:4:25","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"12778:6:25","nodeType":"YulIdentifier","src":"12778:6:25"},"nativeSrc":"12778:15:25","nodeType":"YulFunctionCall","src":"12778:15:25"},"nativeSrc":"12778:15:25","nodeType":"YulExpressionStatement","src":"12778:15:25"}]},"name":"panic_error_0x21","nativeSrc":"12672:127:25","nodeType":"YulFunctionDefinition","src":"12672:127:25"}]},"contents":"{\n    { }\n    function abi_decode_tuple_t_bytes4(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        if iszero(eq(value, and(value, shl(224, 0xffffffff)))) { revert(0, 0) }\n        value0 := value\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_encode_string(value, pos) -> end\n    {\n        let length := mload(value)\n        mstore(pos, length)\n        let i := 0\n        for { } lt(i, length) { i := add(i, 0x20) }\n        {\n            mstore(add(add(pos, i), 0x20), mload(add(add(value, i), 0x20)))\n        }\n        mstore(add(add(pos, length), 0x20), 0)\n        end := add(add(pos, and(add(length, 31), not(31))), 0x20)\n    }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        tail := abi_encode_string(value0, add(headStart, 32))\n    }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        let value := 0\n        value := calldataload(add(headStart, 32))\n        value1 := value\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        let value := 0\n        value := calldataload(add(headStart, 64))\n        value2 := value\n    }\n    function abi_decode_tuple_t_bytes32(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := 0\n        value := calldataload(headStart)\n        value0 := value\n    }\n    function abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function abi_decode_tuple_t_bytes32t_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let value := 0\n        value := calldataload(headStart)\n        value0 := value\n        value1 := abi_decode_address(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xff))\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := 0\n        value := calldataload(headStart)\n        value0 := value\n    }\n    function abi_encode_tuple_t_bytes1_t_string_memory_ptr_t_string_memory_ptr_t_uint256_t_address_t_bytes32_t_array$_t_uint256_$dyn_memory_ptr__to_t_bytes1_t_string_memory_ptr_t_string_memory_ptr_t_uint256_t_address_t_bytes32_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed(headStart, value6, value5, value4, value3, value2, value1, value0) -> tail\n    {\n        mstore(headStart, and(value0, shl(248, 255)))\n        mstore(add(headStart, 32), 224)\n        let tail_1 := abi_encode_string(value1, add(headStart, 224))\n        mstore(add(headStart, 64), sub(tail_1, headStart))\n        let tail_2 := abi_encode_string(value2, tail_1)\n        mstore(add(headStart, 96), value3)\n        mstore(add(headStart, 128), and(value4, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 160), value5)\n        mstore(add(headStart, 192), sub(tail_2, headStart))\n        let pos := tail_2\n        let length := mload(value6)\n        mstore(tail_2, length)\n        pos := add(tail_2, 32)\n        let srcPtr := add(value6, 32)\n        let i := 0\n        for { } lt(i, length) { i := add(i, 1) }\n        {\n            mstore(pos, mload(srcPtr))\n            pos := add(pos, 32)\n            srcPtr := add(srcPtr, 32)\n        }\n        tail := pos\n    }\n    function abi_decode_array_address_dyn_calldata(offset, end) -> arrayPos, length\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        length := calldataload(offset)\n        if gt(length, 0xffffffffffffffff) { revert(0, 0) }\n        arrayPos := add(offset, 0x20)\n        if gt(add(add(offset, shl(5, length)), 0x20), end) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_array$_t_address_$dyn_calldata_ptrt_array$_t_uint256_$dyn_calldata_ptr(headStart, dataEnd) -> value0, value1, value2, value3\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let offset := calldataload(headStart)\n        if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n        let value0_1, value1_1 := abi_decode_array_address_dyn_calldata(add(headStart, offset), dataEnd)\n        value0 := value0_1\n        value1 := value1_1\n        let offset_1 := calldataload(add(headStart, 32))\n        if gt(offset_1, 0xffffffffffffffff) { revert(0, 0) }\n        let value2_1, value3_1 := abi_decode_array_address_dyn_calldata(add(headStart, offset_1), dataEnd)\n        value2 := value2_1\n        value3 := value3_1\n    }\n    function abi_decode_tuple_t_addresst_bool(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        let value := calldataload(add(headStart, 32))\n        if iszero(eq(value, iszero(iszero(value)))) { revert(0, 0) }\n        value1 := value\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_uint8t_bytes32t_bytes32(headStart, dataEnd) -> value0, value1, value2, value3, value4, value5, value6\n    {\n        if slt(sub(dataEnd, headStart), 224) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        let value := 0\n        value := calldataload(add(headStart, 64))\n        value2 := value\n        let value_1 := 0\n        value_1 := calldataload(add(headStart, 96))\n        value3 := value_1\n        let value_2 := calldataload(add(headStart, 128))\n        if iszero(eq(value_2, and(value_2, 0xff))) { revert(0, 0) }\n        value4 := value_2\n        let value_3 := 0\n        value_3 := calldataload(add(headStart, 160))\n        value5 := value_3\n        let value_4 := 0\n        value_4 := calldataload(add(headStart, 192))\n        value6 := value_4\n    }\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function abi_encode_tuple_t_stringliteral_1a35f77d9ec5ff7b7507149194ddd7dff4d9bbb7539ae66ecc8d000378ca66da__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 23)\n        mstore(add(headStart, 64), \"Invalid cooldown period\")\n        tail := add(headStart, 96)\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function abi_encode_tuple_t_stringliteral_582fd48f3876d7686bfeaaaa0db0589073271dedd50d66094f02fee2a3d2e01c__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 22)\n        mstore(add(headStart, 64), \"Arrays length mismatch\")\n        tail := add(headStart, 96)\n    }\n    function panic_error_0x32()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        sum := add(x, y)\n        if gt(x, sum)\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x11)\n            revert(0, 0x24)\n        }\n    }\n    function abi_encode_tuple_t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 20)\n        mstore(add(headStart, 64), \"Insufficient balance\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_48efca4c133d4af809cbdea820ea2f4422813132b6936873e13dbb833f6fc66c__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 27)\n        mstore(add(headStart, 64), \"Cooldown period not elapsed\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_1462473b7a4b33d32b109b815fd2324d00c9e5839b707ecf16d0ab5744f99226__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 15)\n        mstore(add(headStart, 64), \"Invalid address\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_bytes32_t_address_t_address_t_uint256_t_uint256_t_uint256__to_t_bytes32_t_address_t_address_t_uint256_t_uint256_t_uint256__fromStack_reversed(headStart, value5, value4, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 192)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), and(value1, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 64), and(value2, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 96), value3)\n        mstore(add(headStart, 128), value4)\n        mstore(add(headStart, 160), value5)\n    }\n    function abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), and(value1, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), value2)\n    }\n    function abi_encode_tuple_t_address_t_bytes32__to_t_address_t_bytes32__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_encode_tuple_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__to_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__fromStack_reversed(headStart, value4, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 160)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), value3)\n        mstore(add(headStart, 128), and(value4, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_bytes32_t_uint8_t_bytes32_t_bytes32__to_t_bytes32_t_uint8_t_bytes32_t_bytes32__fromStack_reversed(headStart, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 128)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), and(value1, 0xff))\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), value3)\n    }\n    function panic_error_0x21()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x21)\n        revert(0, 0x24)\n    }\n}","id":25,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{"3719":[{"length":32,"start":3684}],"3721":[{"length":32,"start":3642}],"3723":[{"length":32,"start":3600}],"3725":[{"length":32,"start":3765}],"3727":[{"length":32,"start":3805}],"3730":[{"length":32,"start":4145}],"3733":[{"length":32,"start":4190}]},"linkReferences":{},"object":"608060405234801561001057600080fd5b50600436106101fb5760003560e01c80637ecebe001161011a57806395d89b41116100ad578063c3085a3e1161007c578063c3085a3e14610448578063d505accf1461045b578063d547741f1461046e578063dd62ed3e14610481578063e63ab1e9146104ba57600080fd5b806395d89b41146103fa578063a217fddf14610402578063a84173ae1461040a578063a9059cbb1461043557600080fd5b806388d695b2116100e957806388d695b2146103a15780638fc022a6146103b457806391d14854146103c757806391fc1f2c146103da57600080fd5b80637ecebe001461035857806380ea3de11461036b5780638456cb591461037e57806384b0196e1461038657600080fd5b80632f2ff15d116101925780633f4ba83a116101615780633f4ba83a146103075780635c975abb1461030f57806370a082311461031a57806375b238fc1461034357600080fd5b80632f2ff15d146102c8578063313ce567146102dd5780633644e515146102ec57806336568abe146102f457600080fd5b806318160ddd116101ce57806318160ddd1461026757806323b872dd1461026f578063248a9ca3146102825780632f206068146102a557600080fd5b806301ffc9a71461020057806304646a491461022857806306fdde031461023f578063095ea7b314610254575b600080fd5b61021361020e3660046116c3565b6104e1565b60405190151581526020015b60405180910390f35b610231600b5481565b60405190815260200161021f565b6102476104f2565b60405161021f919061173a565b610213610262366004611769565b610584565b600254610231565b61021361027d366004611793565b61059c565b6102316102903660046117d0565b60009081526009602052604090206001015490565b6102136102b33660046117e9565b600d6020526000908152604090205460ff1681565b6102db6102d6366004611804565b6105c0565b005b6040516012815260200161021f565b6102316105eb565b6102db610302366004611804565b6105fa565b6102db610632565b60085460ff16610213565b6102316103283660046117e9565b6001600160a01b031660009081526020819052604090205490565b610231600080516020611ae683398151915281565b6102316103663660046117e9565b610667565b6102db6103793660046117d0565b610685565b6102db61072e565b61038e610760565b60405161021f9796959493929190611830565b6102db6103af366004611914565b6107a6565b6102db6103c2366004611985565b610981565b6102136103d5366004611804565b6109f9565b6102316103e83660046117e9565b600c6020526000908152604090205481565b610247610a24565b610231600081565b600a5461041d906001600160a01b031681565b6040516001600160a01b03909116815260200161021f565b610213610443366004611769565b610a33565b6102db6104563660046117e9565b610a41565b6102db6104693660046119c1565b610aec565b6102db61047c366004611804565b610c26565b61023161048f366004611a34565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6102317f65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a81565b60006104ec82610c4b565b92915050565b60606003805461050190611a5e565b80601f016020809104026020016040519081016040528092919081815260200182805461052d90611a5e565b801561057a5780601f1061054f5761010080835404028352916020019161057a565b820191906000526020600020905b81548152906001019060200180831161055d57829003601f168201915b5050505050905090565b600033610592818585610c80565b5060019392505050565b6000336105aa858285610c8d565b6105b5858585610d06565b506001949350505050565b6000828152600960205260409020600101546105db81610d65565b6105e58383610d6f565b50505050565b60006105f5610e03565b905090565b6001600160a01b03811633146106235760405163334bd91960e11b815260040160405180910390fd5b61062d8282610f2e565b505050565b7f65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a61065c81610d65565b610664610f9b565b50565b6001600160a01b0381166000908152600760205260408120546104ec565b600080516020611ae683398151915261069d81610d65565b600082116106f25760405162461bcd60e51b815260206004820152601760248201527f496e76616c696420636f6f6c646f776e20706572696f6400000000000000000060448201526064015b60405180910390fd5b600b8290556040518281527f9f48766a1862aa51c434884dd5ccdd794719e403e0da740bb075991e6cde9d6e9060200160405180910390a15050565b7f65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a61075881610d65565b610664610fed565b60006060806000806000606061077461102a565b61077c611057565b60408051600080825260208201909252600f60f81b9b939a50919850469750309650945092509050565b6107ae611084565b8281146107f65760405162461bcd60e51b8152602060048201526016602482015275082e4e4c2f2e640d8cadccee8d040dad2e6dac2e8c6d60531b60448201526064016106e9565b6000805b828110156108305783838281811061081457610814611a98565b90506020020135826108269190611aae565b91506001016107fa565b50336000908152602081905260409020548111156108875760405162461bcd60e51b8152602060048201526014602482015273496e73756666696369656e742062616c616e636560601b60448201526064016106e9565b336000908152600d602052604090205460ff161561090b57600b54336000908152600c60205260409020546108bc9190611aae565b42101561090b5760405162461bcd60e51b815260206004820152601b60248201527f436f6f6c646f776e20706572696f64206e6f7420656c6170736564000000000060448201526064016106e9565b60005b848110156109675761095f3387878481811061092c5761092c611a98565b905060200201602081019061094191906117e9565b86868581811061095357610953611a98565b90506020020135610d06565b60010161090e565b5050336000908152600c6020526040902042905550505050565b600080516020611ae683398151915261099981610d65565b6001600160a01b0383166000818152600d6020908152604091829020805460ff191686151590811790915591519182527f88442d1f3abc99bf4a378fef853870decce17c14f3025385a762518e644012e1910160405180910390a2505050565b60009182526009602090815260408084206001600160a01b0393909316845291905290205460ff1690565b60606004805461050190611a5e565b600033610592818585610d06565b600080516020611ae6833981519152610a5981610d65565b6001600160a01b038216610aa15760405162461bcd60e51b815260206004820152600f60248201526e496e76616c6964206164647265737360881b60448201526064016106e9565b600a80546001600160a01b0319166001600160a01b0384169081179091556040517feb9531f1025dff97cad08fa04d87d1982f6da47ad87bc18822a3dd4e85996b7290600090a25050565b83421115610b105760405163313c898160e11b8152600481018590526024016106e9565b60007f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9888888610b5d8c6001600160a01b0316600090815260076020526040902080546001810190915590565b6040805160208101969096526001600160a01b0394851690860152929091166060840152608083015260a082015260c0810186905260e0016040516020818303038152906040528051906020012090506000610bb8826110aa565b90506000610bc8828787876110d7565b9050896001600160a01b0316816001600160a01b031614610c0f576040516325c0072360e11b81526001600160a01b0380831660048301528b1660248201526044016106e9565b610c1a8a8a8a610c80565b50505050505050505050565b600082815260096020526040902060010154610c4181610d65565b6105e58383610f2e565b60006001600160e01b03198216637965db0b60e01b14806104ec57506301ffc9a760e01b6001600160e01b03198316146104ec565b61062d8383836001611105565b6001600160a01b038381166000908152600160209081526040808320938616835292905220546000198110156105e55781811015610cf757604051637dc7a0d960e11b81526001600160a01b038416600482015260248101829052604481018390526064016106e9565b6105e584848484036000611105565b6001600160a01b038316610d3057604051634b637e8f60e11b8152600060048201526024016106e9565b6001600160a01b038216610d5a5760405163ec442f0560e01b8152600060048201526024016106e9565b61062d8383836111da565b610664813361129f565b6000610d7b83836109f9565b610dfb5760008381526009602090815260408083206001600160a01b03861684529091529020805460ff19166001179055610db33390565b6001600160a01b0316826001600160a01b0316847f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45060016104ec565b5060006104ec565b6000306001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016148015610e5c57507f000000000000000000000000000000000000000000000000000000000000000046145b15610e8657507f000000000000000000000000000000000000000000000000000000000000000090565b6105f5604080517f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f60208201527f0000000000000000000000000000000000000000000000000000000000000000918101919091527f000000000000000000000000000000000000000000000000000000000000000060608201524660808201523060a082015260009060c00160405160208183030381529060405280519060200120905090565b6000610f3a83836109f9565b15610dfb5760008381526009602090815260408083206001600160a01b0386168085529252808320805460ff1916905551339286917ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b9190a45060016104ec565b610fa36112dc565b6008805460ff191690557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa335b6040516001600160a01b03909116815260200160405180910390a1565b610ff5611084565b6008805460ff191660011790557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258610fd03390565b60606105f57f000000000000000000000000000000000000000000000000000000000000000060056112ff565b60606105f57f000000000000000000000000000000000000000000000000000000000000000060066112ff565b60085460ff16156110a85760405163d93c066560e01b815260040160405180910390fd5b565b60006104ec6110b7610e03565b8360405161190160f01b8152600281019290925260228201526042902090565b6000806000806110e9888888886113aa565b9250925092506110f98282611479565b50909695505050505050565b6001600160a01b03841661112f5760405163e602df0560e01b8152600060048201526024016106e9565b6001600160a01b03831661115957604051634a1406b160e11b8152600060048201526024016106e9565b6001600160a01b03808516600090815260016020908152604080832093871683529290522082905580156105e557826001600160a01b0316846001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925846040516111cc91815260200190565b60405180910390a350505050565b6111e2611084565b6001600160a01b0383166000908152600d602052604090205460ff161561129457600b546001600160a01b0384166000908152600c60205260409020546112299190611aae565b4210156112785760405162461bcd60e51b815260206004820152601b60248201527f436f6f6c646f776e20706572696f64206e6f7420656c6170736564000000000060448201526064016106e9565b6001600160a01b0383166000908152600c602052604090204290555b61062d838383611532565b6112a982826109f9565b6112d85760405163e2517d3f60e01b81526001600160a01b0382166004820152602481018390526044016106e9565b5050565b60085460ff166110a857604051638dfc202b60e01b815260040160405180910390fd5b606060ff8314611319576113128361165c565b90506104ec565b81805461132590611a5e565b80601f016020809104026020016040519081016040528092919081815260200182805461135190611a5e565b801561139e5780601f106113735761010080835404028352916020019161139e565b820191906000526020600020905b81548152906001019060200180831161138157829003601f168201915b505050505090506104ec565b600080807f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a08411156113e5575060009150600390508261146f565b604080516000808252602082018084528a905260ff891692820192909252606081018790526080810186905260019060a0016020604051602081039080840390855afa158015611439573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b0381166114655750600092506001915082905061146f565b9250600091508190505b9450945094915050565b600082600381111561148d5761148d611acf565b03611496575050565b60018260038111156114aa576114aa611acf565b036114c85760405163f645eedf60e01b815260040160405180910390fd5b60028260038111156114dc576114dc611acf565b036114fd5760405163fce698f760e01b8152600481018290526024016106e9565b600382600381111561151157611511611acf565b036112d8576040516335e2f38360e21b8152600481018290526024016106e9565b6001600160a01b03831661155d5780600260008282546115529190611aae565b909155506115cf9050565b6001600160a01b038316600090815260208190526040902054818110156115b05760405163391434e360e21b81526001600160a01b038516600482015260248101829052604481018390526064016106e9565b6001600160a01b03841660009081526020819052604090209082900390555b6001600160a01b0382166115eb5760028054829003905561160a565b6001600160a01b03821660009081526020819052604090208054820190555b816001600160a01b0316836001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8360405161164f91815260200190565b60405180910390a3505050565b606060006116698361169b565b604080516020808252818301909252919250600091906020820181803683375050509182525060208101929092525090565b600060ff8216601f8111156104ec57604051632cd44ac360e21b815260040160405180910390fd5b6000602082840312156116d557600080fd5b81356001600160e01b0319811681146116ed57600080fd5b9392505050565b6000815180845260005b8181101561171a576020818501810151868301820152016116fe565b506000602082860101526020601f19601f83011685010191505092915050565b6020815260006116ed60208301846116f4565b80356001600160a01b038116811461176457600080fd5b919050565b6000806040838503121561177c57600080fd5b6117858361174d565b946020939093013593505050565b6000806000606084860312156117a857600080fd5b6117b18461174d565b92506117bf6020850161174d565b929592945050506040919091013590565b6000602082840312156117e257600080fd5b5035919050565b6000602082840312156117fb57600080fd5b6116ed8261174d565b6000806040838503121561181757600080fd5b823591506118276020840161174d565b90509250929050565b60ff60f81b8816815260e06020820152600061184f60e08301896116f4565b828103604084015261186181896116f4565b606084018890526001600160a01b038716608085015260a0840186905283810360c08501528451808252602080870193509091019060005b818110156118b7578351835260209384019390920191600101611899565b50909b9a5050505050505050505050565b60008083601f8401126118da57600080fd5b50813567ffffffffffffffff8111156118f257600080fd5b6020830191508360208260051b850101111561190d57600080fd5b9250929050565b6000806000806040858703121561192a57600080fd5b843567ffffffffffffffff81111561194157600080fd5b61194d878288016118c8565b909550935050602085013567ffffffffffffffff81111561196d57600080fd5b611979878288016118c8565b95989497509550505050565b6000806040838503121561199857600080fd5b6119a18361174d565b9150602083013580151581146119b657600080fd5b809150509250929050565b600080600080600080600060e0888a0312156119dc57600080fd5b6119e58861174d565b96506119f36020890161174d565b95506040880135945060608801359350608088013560ff81168114611a1757600080fd5b9699959850939692959460a0840135945060c09093013592915050565b60008060408385031215611a4757600080fd5b611a508361174d565b91506118276020840161174d565b600181811c90821680611a7257607f821691505b602082108103611a9257634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052603260045260246000fd5b808201808211156104ec57634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052602160045260246000fdfea49807205ce4d355092ef5a8a18f56e8913cf4a201fbe287825b095693c21775a2646970667358221220cd4722eb10b78a18a7747fa4f08d88d3e48db4881f48248bd9c3e3dcaa2f088664736f6c634300081c0033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x1FB JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x7ECEBE00 GT PUSH2 0x11A JUMPI DUP1 PUSH4 0x95D89B41 GT PUSH2 0xAD JUMPI DUP1 PUSH4 0xC3085A3E GT PUSH2 0x7C JUMPI DUP1 PUSH4 0xC3085A3E EQ PUSH2 0x448 JUMPI DUP1 PUSH4 0xD505ACCF EQ PUSH2 0x45B JUMPI DUP1 PUSH4 0xD547741F EQ PUSH2 0x46E JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x481 JUMPI DUP1 PUSH4 0xE63AB1E9 EQ PUSH2 0x4BA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x3FA JUMPI DUP1 PUSH4 0xA217FDDF EQ PUSH2 0x402 JUMPI DUP1 PUSH4 0xA84173AE EQ PUSH2 0x40A JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x435 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x88D695B2 GT PUSH2 0xE9 JUMPI DUP1 PUSH4 0x88D695B2 EQ PUSH2 0x3A1 JUMPI DUP1 PUSH4 0x8FC022A6 EQ PUSH2 0x3B4 JUMPI DUP1 PUSH4 0x91D14854 EQ PUSH2 0x3C7 JUMPI DUP1 PUSH4 0x91FC1F2C EQ PUSH2 0x3DA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x7ECEBE00 EQ PUSH2 0x358 JUMPI DUP1 PUSH4 0x80EA3DE1 EQ PUSH2 0x36B JUMPI DUP1 PUSH4 0x8456CB59 EQ PUSH2 0x37E JUMPI DUP1 PUSH4 0x84B0196E EQ PUSH2 0x386 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x2F2FF15D GT PUSH2 0x192 JUMPI DUP1 PUSH4 0x3F4BA83A GT PUSH2 0x161 JUMPI DUP1 PUSH4 0x3F4BA83A EQ PUSH2 0x307 JUMPI DUP1 PUSH4 0x5C975ABB EQ PUSH2 0x30F JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x31A JUMPI DUP1 PUSH4 0x75B238FC EQ PUSH2 0x343 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x2F2FF15D EQ PUSH2 0x2C8 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x2DD JUMPI DUP1 PUSH4 0x3644E515 EQ PUSH2 0x2EC JUMPI DUP1 PUSH4 0x36568ABE EQ PUSH2 0x2F4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x18160DDD GT PUSH2 0x1CE JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x267 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x26F JUMPI DUP1 PUSH4 0x248A9CA3 EQ PUSH2 0x282 JUMPI DUP1 PUSH4 0x2F206068 EQ PUSH2 0x2A5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x200 JUMPI DUP1 PUSH4 0x4646A49 EQ PUSH2 0x228 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x23F JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x254 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x213 PUSH2 0x20E CALLDATASIZE PUSH1 0x4 PUSH2 0x16C3 JUMP JUMPDEST PUSH2 0x4E1 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x231 PUSH1 0xB SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x21F JUMP JUMPDEST PUSH2 0x247 PUSH2 0x4F2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x21F SWAP2 SWAP1 PUSH2 0x173A JUMP JUMPDEST PUSH2 0x213 PUSH2 0x262 CALLDATASIZE PUSH1 0x4 PUSH2 0x1769 JUMP JUMPDEST PUSH2 0x584 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH2 0x231 JUMP JUMPDEST PUSH2 0x213 PUSH2 0x27D CALLDATASIZE PUSH1 0x4 PUSH2 0x1793 JUMP JUMPDEST PUSH2 0x59C JUMP JUMPDEST PUSH2 0x231 PUSH2 0x290 CALLDATASIZE PUSH1 0x4 PUSH2 0x17D0 JUMP JUMPDEST PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x213 PUSH2 0x2B3 CALLDATASIZE PUSH1 0x4 PUSH2 0x17E9 JUMP JUMPDEST PUSH1 0xD PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH2 0x2DB PUSH2 0x2D6 CALLDATASIZE PUSH1 0x4 PUSH2 0x1804 JUMP JUMPDEST PUSH2 0x5C0 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x21F JUMP JUMPDEST PUSH2 0x231 PUSH2 0x5EB JUMP JUMPDEST PUSH2 0x2DB PUSH2 0x302 CALLDATASIZE PUSH1 0x4 PUSH2 0x1804 JUMP JUMPDEST PUSH2 0x5FA JUMP JUMPDEST PUSH2 0x2DB PUSH2 0x632 JUMP JUMPDEST PUSH1 0x8 SLOAD PUSH1 0xFF AND PUSH2 0x213 JUMP JUMPDEST PUSH2 0x231 PUSH2 0x328 CALLDATASIZE PUSH1 0x4 PUSH2 0x17E9 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x231 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1AE6 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP2 JUMP JUMPDEST PUSH2 0x231 PUSH2 0x366 CALLDATASIZE PUSH1 0x4 PUSH2 0x17E9 JUMP JUMPDEST PUSH2 0x667 JUMP JUMPDEST PUSH2 0x2DB PUSH2 0x379 CALLDATASIZE PUSH1 0x4 PUSH2 0x17D0 JUMP JUMPDEST PUSH2 0x685 JUMP JUMPDEST PUSH2 0x2DB PUSH2 0x72E JUMP JUMPDEST PUSH2 0x38E PUSH2 0x760 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x21F SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1830 JUMP JUMPDEST PUSH2 0x2DB PUSH2 0x3AF CALLDATASIZE PUSH1 0x4 PUSH2 0x1914 JUMP JUMPDEST PUSH2 0x7A6 JUMP JUMPDEST PUSH2 0x2DB PUSH2 0x3C2 CALLDATASIZE PUSH1 0x4 PUSH2 0x1985 JUMP JUMPDEST PUSH2 0x981 JUMP JUMPDEST PUSH2 0x213 PUSH2 0x3D5 CALLDATASIZE PUSH1 0x4 PUSH2 0x1804 JUMP JUMPDEST PUSH2 0x9F9 JUMP JUMPDEST PUSH2 0x231 PUSH2 0x3E8 CALLDATASIZE PUSH1 0x4 PUSH2 0x17E9 JUMP JUMPDEST PUSH1 0xC PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x247 PUSH2 0xA24 JUMP JUMPDEST PUSH2 0x231 PUSH1 0x0 DUP2 JUMP JUMPDEST PUSH1 0xA SLOAD PUSH2 0x41D SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x21F JUMP JUMPDEST PUSH2 0x213 PUSH2 0x443 CALLDATASIZE PUSH1 0x4 PUSH2 0x1769 JUMP JUMPDEST PUSH2 0xA33 JUMP JUMPDEST PUSH2 0x2DB PUSH2 0x456 CALLDATASIZE PUSH1 0x4 PUSH2 0x17E9 JUMP JUMPDEST PUSH2 0xA41 JUMP JUMPDEST PUSH2 0x2DB PUSH2 0x469 CALLDATASIZE PUSH1 0x4 PUSH2 0x19C1 JUMP JUMPDEST PUSH2 0xAEC JUMP JUMPDEST PUSH2 0x2DB PUSH2 0x47C CALLDATASIZE PUSH1 0x4 PUSH2 0x1804 JUMP JUMPDEST PUSH2 0xC26 JUMP JUMPDEST PUSH2 0x231 PUSH2 0x48F CALLDATASIZE PUSH1 0x4 PUSH2 0x1A34 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x231 PUSH32 0x65D7A28E3265B37A6474929F336521B332C1681B933F6CB9F3376673440D862A DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4EC DUP3 PUSH2 0xC4B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x501 SWAP1 PUSH2 0x1A5E JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x52D SWAP1 PUSH2 0x1A5E JUMP JUMPDEST DUP1 ISZERO PUSH2 0x57A JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x54F JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x57A JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x55D JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x592 DUP2 DUP6 DUP6 PUSH2 0xC80 JUMP JUMPDEST POP PUSH1 0x1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x5AA DUP6 DUP3 DUP6 PUSH2 0xC8D JUMP JUMPDEST PUSH2 0x5B5 DUP6 DUP6 DUP6 PUSH2 0xD06 JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH2 0x5DB DUP2 PUSH2 0xD65 JUMP JUMPDEST PUSH2 0x5E5 DUP4 DUP4 PUSH2 0xD6F JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5F5 PUSH2 0xE03 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND CALLER EQ PUSH2 0x623 JUMPI PUSH1 0x40 MLOAD PUSH4 0x334BD919 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x62D DUP3 DUP3 PUSH2 0xF2E JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH32 0x65D7A28E3265B37A6474929F336521B332C1681B933F6CB9F3376673440D862A PUSH2 0x65C DUP2 PUSH2 0xD65 JUMP JUMPDEST PUSH2 0x664 PUSH2 0xF9B JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH2 0x4EC JUMP JUMPDEST PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1AE6 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH2 0x69D DUP2 PUSH2 0xD65 JUMP JUMPDEST PUSH1 0x0 DUP3 GT PUSH2 0x6F2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E76616C696420636F6F6C646F776E20706572696F64000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0xB DUP3 SWAP1 SSTORE PUSH1 0x40 MLOAD DUP3 DUP2 MSTORE PUSH32 0x9F48766A1862AA51C434884DD5CCDD794719E403E0DA740BB075991E6CDE9D6E SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH32 0x65D7A28E3265B37A6474929F336521B332C1681B933F6CB9F3376673440D862A PUSH2 0x758 DUP2 PUSH2 0xD65 JUMP JUMPDEST PUSH2 0x664 PUSH2 0xFED JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 PUSH2 0x774 PUSH2 0x102A JUMP JUMPDEST PUSH2 0x77C PUSH2 0x1057 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x0 DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 SWAP3 MSTORE PUSH1 0xF PUSH1 0xF8 SHL SWAP12 SWAP4 SWAP11 POP SWAP2 SWAP9 POP CHAINID SWAP8 POP ADDRESS SWAP7 POP SWAP5 POP SWAP3 POP SWAP1 POP JUMP JUMPDEST PUSH2 0x7AE PUSH2 0x1084 JUMP JUMPDEST DUP3 DUP2 EQ PUSH2 0x7F6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x82E4E4C2F2E640D8CADCCEE8D040DAD2E6DAC2E8C6D PUSH1 0x53 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x6E9 JUMP JUMPDEST PUSH1 0x0 DUP1 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x830 JUMPI DUP4 DUP4 DUP3 DUP2 DUP2 LT PUSH2 0x814 JUMPI PUSH2 0x814 PUSH2 0x1A98 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD CALLDATALOAD DUP3 PUSH2 0x826 SWAP2 SWAP1 PUSH2 0x1AAE JUMP JUMPDEST SWAP2 POP PUSH1 0x1 ADD PUSH2 0x7FA JUMP JUMPDEST POP CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 GT ISZERO PUSH2 0x887 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x496E73756666696369656E742062616C616E6365 PUSH1 0x60 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x6E9 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xD PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x90B JUMPI PUSH1 0xB SLOAD CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xC PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x8BC SWAP2 SWAP1 PUSH2 0x1AAE JUMP JUMPDEST TIMESTAMP LT ISZERO PUSH2 0x90B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x436F6F6C646F776E20706572696F64206E6F7420656C61707365640000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x6E9 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP5 DUP2 LT ISZERO PUSH2 0x967 JUMPI PUSH2 0x95F CALLER DUP8 DUP8 DUP5 DUP2 DUP2 LT PUSH2 0x92C JUMPI PUSH2 0x92C PUSH2 0x1A98 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x941 SWAP2 SWAP1 PUSH2 0x17E9 JUMP JUMPDEST DUP7 DUP7 DUP6 DUP2 DUP2 LT PUSH2 0x953 JUMPI PUSH2 0x953 PUSH2 0x1A98 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD CALLDATALOAD PUSH2 0xD06 JUMP JUMPDEST PUSH1 0x1 ADD PUSH2 0x90E JUMP JUMPDEST POP POP CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xC PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 TIMESTAMP SWAP1 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1AE6 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH2 0x999 DUP2 PUSH2 0xD65 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0xD PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND DUP7 ISZERO ISZERO SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE SWAP2 MLOAD SWAP2 DUP3 MSTORE PUSH32 0x88442D1F3ABC99BF4A378FEF853870DECCE17C14F3025385A762518E644012E1 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x9 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 SWAP1 SWAP4 AND DUP5 MSTORE SWAP2 SWAP1 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x501 SWAP1 PUSH2 0x1A5E JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x592 DUP2 DUP6 DUP6 PUSH2 0xD06 JUMP JUMPDEST PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1AE6 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH2 0xA59 DUP2 PUSH2 0xD65 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xAA1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH15 0x496E76616C69642061646472657373 PUSH1 0x88 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x6E9 JUMP JUMPDEST PUSH1 0xA DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x40 MLOAD PUSH32 0xEB9531F1025DFF97CAD08FA04D87D1982F6DA47AD87BC18822A3DD4E85996B72 SWAP1 PUSH1 0x0 SWAP1 LOG2 POP POP JUMP JUMPDEST DUP4 TIMESTAMP GT ISZERO PUSH2 0xB10 JUMPI PUSH1 0x40 MLOAD PUSH4 0x313C8981 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP6 SWAP1 MSTORE PUSH1 0x24 ADD PUSH2 0x6E9 JUMP JUMPDEST PUSH1 0x0 PUSH32 0x6E71EDAE12B1B97F4D1F60370FEF10105FA2FAAE0126114A169C64845D6126C9 DUP9 DUP9 DUP9 PUSH2 0xB5D DUP13 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP2 ADD SWAP1 SWAP2 SSTORE SWAP1 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP2 ADD SWAP7 SWAP1 SWAP7 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP5 DUP6 AND SWAP1 DUP7 ADD MSTORE SWAP3 SWAP1 SWAP2 AND PUSH1 0x60 DUP5 ADD MSTORE PUSH1 0x80 DUP4 ADD MSTORE PUSH1 0xA0 DUP3 ADD MSTORE PUSH1 0xC0 DUP2 ADD DUP7 SWAP1 MSTORE PUSH1 0xE0 ADD PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP PUSH1 0x0 PUSH2 0xBB8 DUP3 PUSH2 0x10AA JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0xBC8 DUP3 DUP8 DUP8 DUP8 PUSH2 0x10D7 JUMP JUMPDEST SWAP1 POP DUP10 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0xC0F JUMPI PUSH1 0x40 MLOAD PUSH4 0x25C00723 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP4 AND PUSH1 0x4 DUP4 ADD MSTORE DUP12 AND PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 ADD PUSH2 0x6E9 JUMP JUMPDEST PUSH2 0xC1A DUP11 DUP11 DUP11 PUSH2 0xC80 JUMP JUMPDEST POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH2 0xC41 DUP2 PUSH2 0xD65 JUMP JUMPDEST PUSH2 0x5E5 DUP4 DUP4 PUSH2 0xF2E JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x7965DB0B PUSH1 0xE0 SHL EQ DUP1 PUSH2 0x4EC JUMPI POP PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP4 AND EQ PUSH2 0x4EC JUMP JUMPDEST PUSH2 0x62D DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x1105 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP7 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 SLOAD PUSH1 0x0 NOT DUP2 LT ISZERO PUSH2 0x5E5 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0xCF7 JUMPI PUSH1 0x40 MLOAD PUSH4 0x7DC7A0D9 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x44 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x64 ADD PUSH2 0x6E9 JUMP JUMPDEST PUSH2 0x5E5 DUP5 DUP5 DUP5 DUP5 SUB PUSH1 0x0 PUSH2 0x1105 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0xD30 JUMPI PUSH1 0x40 MLOAD PUSH4 0x4B637E8F PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x6E9 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xD5A JUMPI PUSH1 0x40 MLOAD PUSH4 0xEC442F05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x6E9 JUMP JUMPDEST PUSH2 0x62D DUP4 DUP4 DUP4 PUSH2 0x11DA JUMP JUMPDEST PUSH2 0x664 DUP2 CALLER PUSH2 0x129F JUMP JUMPDEST PUSH1 0x0 PUSH2 0xD7B DUP4 DUP4 PUSH2 0x9F9 JUMP JUMPDEST PUSH2 0xDFB JUMPI PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH2 0xDB3 CALLER SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP PUSH1 0x1 PUSH2 0x4EC JUMP JUMPDEST POP PUSH1 0x0 PUSH2 0x4EC JUMP JUMPDEST PUSH1 0x0 ADDRESS PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND EQ DUP1 ISZERO PUSH2 0xE5C JUMPI POP PUSH32 0x0 CHAINID EQ JUMPDEST ISZERO PUSH2 0xE86 JUMPI POP PUSH32 0x0 SWAP1 JUMP JUMPDEST PUSH2 0x5F5 PUSH1 0x40 DUP1 MLOAD PUSH32 0x8B73C3C69BB8FE3D512ECC4CF759CC79239F7B179B0FFACAA9A75D522B39400F PUSH1 0x20 DUP3 ADD MSTORE PUSH32 0x0 SWAP2 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH32 0x0 PUSH1 0x60 DUP3 ADD MSTORE CHAINID PUSH1 0x80 DUP3 ADD MSTORE ADDRESS PUSH1 0xA0 DUP3 ADD MSTORE PUSH1 0x0 SWAP1 PUSH1 0xC0 ADD PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xF3A DUP4 DUP4 PUSH2 0x9F9 JUMP JUMPDEST ISZERO PUSH2 0xDFB JUMPI PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND DUP1 DUP6 MSTORE SWAP3 MSTORE DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE MLOAD CALLER SWAP3 DUP7 SWAP2 PUSH32 0xF6391F5C32D9C69D2A47EA670B442974B53935D1EDC7FD64EB21E047A839171B SWAP2 SWAP1 LOG4 POP PUSH1 0x1 PUSH2 0x4EC JUMP JUMPDEST PUSH2 0xFA3 PUSH2 0x12DC JUMP JUMPDEST PUSH1 0x8 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE PUSH32 0x5DB9EE0A495BF2E6FF9C91A7834C1BA4FDD244A5E8AA4E537BD38AEAE4B073AA CALLER JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST PUSH2 0xFF5 PUSH2 0x1084 JUMP JUMPDEST PUSH1 0x8 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH32 0x62E78CEA01BEE320CD4E420270B5EA74000D11B0C9F74754EBDBFC544B05A258 PUSH2 0xFD0 CALLER SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH2 0x5F5 PUSH32 0x0 PUSH1 0x5 PUSH2 0x12FF JUMP JUMPDEST PUSH1 0x60 PUSH2 0x5F5 PUSH32 0x0 PUSH1 0x6 PUSH2 0x12FF JUMP JUMPDEST PUSH1 0x8 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x10A8 JUMPI PUSH1 0x40 MLOAD PUSH4 0xD93C0665 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4EC PUSH2 0x10B7 PUSH2 0xE03 JUMP JUMPDEST DUP4 PUSH1 0x40 MLOAD PUSH2 0x1901 PUSH1 0xF0 SHL DUP2 MSTORE PUSH1 0x2 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x22 DUP3 ADD MSTORE PUSH1 0x42 SWAP1 KECCAK256 SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH2 0x10E9 DUP9 DUP9 DUP9 DUP9 PUSH2 0x13AA JUMP JUMPDEST SWAP3 POP SWAP3 POP SWAP3 POP PUSH2 0x10F9 DUP3 DUP3 PUSH2 0x1479 JUMP JUMPDEST POP SWAP1 SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x112F JUMPI PUSH1 0x40 MLOAD PUSH4 0xE602DF05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x6E9 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x1159 JUMPI PUSH1 0x40 MLOAD PUSH4 0x4A1406B1 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x6E9 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP8 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 DUP3 SWAP1 SSTORE DUP1 ISZERO PUSH2 0x5E5 JUMPI DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0x11CC SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP JUMP JUMPDEST PUSH2 0x11E2 PUSH2 0x1084 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xD PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x1294 JUMPI PUSH1 0xB SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xC PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x1229 SWAP2 SWAP1 PUSH2 0x1AAE JUMP JUMPDEST TIMESTAMP LT ISZERO PUSH2 0x1278 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x436F6F6C646F776E20706572696F64206E6F7420656C61707365640000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x6E9 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xC PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 TIMESTAMP SWAP1 SSTORE JUMPDEST PUSH2 0x62D DUP4 DUP4 DUP4 PUSH2 0x1532 JUMP JUMPDEST PUSH2 0x12A9 DUP3 DUP3 PUSH2 0x9F9 JUMP JUMPDEST PUSH2 0x12D8 JUMPI PUSH1 0x40 MLOAD PUSH4 0xE2517D3F PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x44 ADD PUSH2 0x6E9 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x8 SLOAD PUSH1 0xFF AND PUSH2 0x10A8 JUMPI PUSH1 0x40 MLOAD PUSH4 0x8DFC202B PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x60 PUSH1 0xFF DUP4 EQ PUSH2 0x1319 JUMPI PUSH2 0x1312 DUP4 PUSH2 0x165C JUMP JUMPDEST SWAP1 POP PUSH2 0x4EC JUMP JUMPDEST DUP2 DUP1 SLOAD PUSH2 0x1325 SWAP1 PUSH2 0x1A5E JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x1351 SWAP1 PUSH2 0x1A5E JUMP JUMPDEST DUP1 ISZERO PUSH2 0x139E JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1373 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x139E JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x1381 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP PUSH2 0x4EC JUMP JUMPDEST PUSH1 0x0 DUP1 DUP1 PUSH32 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0 DUP5 GT ISZERO PUSH2 0x13E5 JUMPI POP PUSH1 0x0 SWAP2 POP PUSH1 0x3 SWAP1 POP DUP3 PUSH2 0x146F JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x0 DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD DUP1 DUP5 MSTORE DUP11 SWAP1 MSTORE PUSH1 0xFF DUP10 AND SWAP3 DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x60 DUP2 ADD DUP8 SWAP1 MSTORE PUSH1 0x80 DUP2 ADD DUP7 SWAP1 MSTORE PUSH1 0x1 SWAP1 PUSH1 0xA0 ADD PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 SUB SWAP1 DUP1 DUP5 SUB SWAP1 DUP6 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1439 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x40 MLOAD PUSH1 0x1F NOT ADD MLOAD SWAP2 POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x1465 JUMPI POP PUSH1 0x0 SWAP3 POP PUSH1 0x1 SWAP2 POP DUP3 SWAP1 POP PUSH2 0x146F JUMP JUMPDEST SWAP3 POP PUSH1 0x0 SWAP2 POP DUP2 SWAP1 POP JUMPDEST SWAP5 POP SWAP5 POP SWAP5 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x148D JUMPI PUSH2 0x148D PUSH2 0x1ACF JUMP JUMPDEST SUB PUSH2 0x1496 JUMPI POP POP JUMP JUMPDEST PUSH1 0x1 DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x14AA JUMPI PUSH2 0x14AA PUSH2 0x1ACF JUMP JUMPDEST SUB PUSH2 0x14C8 JUMPI PUSH1 0x40 MLOAD PUSH4 0xF645EEDF PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x14DC JUMPI PUSH2 0x14DC PUSH2 0x1ACF JUMP JUMPDEST SUB PUSH2 0x14FD JUMPI PUSH1 0x40 MLOAD PUSH4 0xFCE698F7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x24 ADD PUSH2 0x6E9 JUMP JUMPDEST PUSH1 0x3 DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x1511 JUMPI PUSH2 0x1511 PUSH2 0x1ACF JUMP JUMPDEST SUB PUSH2 0x12D8 JUMPI PUSH1 0x40 MLOAD PUSH4 0x35E2F383 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x24 ADD PUSH2 0x6E9 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x155D JUMPI DUP1 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x1552 SWAP2 SWAP1 PUSH2 0x1AAE JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH2 0x15CF SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0x15B0 JUMPI PUSH1 0x40 MLOAD PUSH4 0x391434E3 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x44 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x64 ADD PUSH2 0x6E9 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SWAP1 DUP3 SWAP1 SUB SWAP1 SSTORE JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x15EB JUMPI PUSH1 0x2 DUP1 SLOAD DUP3 SWAP1 SUB SWAP1 SSTORE PUSH2 0x160A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD DUP3 ADD SWAP1 SSTORE JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x164F SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH2 0x1669 DUP4 PUSH2 0x169B JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 DUP4 ADD SWAP1 SWAP3 MSTORE SWAP2 SWAP3 POP PUSH1 0x0 SWAP2 SWAP1 PUSH1 0x20 DUP3 ADD DUP2 DUP1 CALLDATASIZE DUP4 CALLDATACOPY POP POP POP SWAP2 DUP3 MSTORE POP PUSH1 0x20 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND PUSH1 0x1F DUP2 GT ISZERO PUSH2 0x4EC JUMPI PUSH1 0x40 MLOAD PUSH4 0x2CD44AC3 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x16D5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND DUP2 EQ PUSH2 0x16ED JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x171A JUMPI PUSH1 0x20 DUP2 DUP6 ADD DUP2 ADD MLOAD DUP7 DUP4 ADD DUP3 ADD MSTORE ADD PUSH2 0x16FE JUMP JUMPDEST POP PUSH1 0x0 PUSH1 0x20 DUP3 DUP7 ADD ADD MSTORE PUSH1 0x20 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND DUP6 ADD ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0x16ED PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x16F4 JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x1764 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x177C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1785 DUP4 PUSH2 0x174D JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x17A8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x17B1 DUP5 PUSH2 0x174D JUMP JUMPDEST SWAP3 POP PUSH2 0x17BF PUSH1 0x20 DUP6 ADD PUSH2 0x174D JUMP JUMPDEST SWAP3 SWAP6 SWAP3 SWAP5 POP POP POP PUSH1 0x40 SWAP2 SWAP1 SWAP2 ADD CALLDATALOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x17E2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x17FB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x16ED DUP3 PUSH2 0x174D JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1817 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD SWAP2 POP PUSH2 0x1827 PUSH1 0x20 DUP5 ADD PUSH2 0x174D JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0xFF PUSH1 0xF8 SHL DUP9 AND DUP2 MSTORE PUSH1 0xE0 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x0 PUSH2 0x184F PUSH1 0xE0 DUP4 ADD DUP10 PUSH2 0x16F4 JUMP JUMPDEST DUP3 DUP2 SUB PUSH1 0x40 DUP5 ADD MSTORE PUSH2 0x1861 DUP2 DUP10 PUSH2 0x16F4 JUMP JUMPDEST PUSH1 0x60 DUP5 ADD DUP9 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND PUSH1 0x80 DUP6 ADD MSTORE PUSH1 0xA0 DUP5 ADD DUP7 SWAP1 MSTORE DUP4 DUP2 SUB PUSH1 0xC0 DUP6 ADD MSTORE DUP5 MLOAD DUP1 DUP3 MSTORE PUSH1 0x20 DUP1 DUP8 ADD SWAP4 POP SWAP1 SWAP2 ADD SWAP1 PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x18B7 JUMPI DUP4 MLOAD DUP4 MSTORE PUSH1 0x20 SWAP4 DUP5 ADD SWAP4 SWAP1 SWAP3 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0x1899 JUMP JUMPDEST POP SWAP1 SWAP12 SWAP11 POP POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0x18DA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x18F2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x20 DUP3 PUSH1 0x5 SHL DUP6 ADD ADD GT ISZERO PUSH2 0x190D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x40 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x192A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP5 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1941 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x194D DUP8 DUP3 DUP9 ADD PUSH2 0x18C8 JUMP JUMPDEST SWAP1 SWAP6 POP SWAP4 POP POP PUSH1 0x20 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x196D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1979 DUP8 DUP3 DUP9 ADD PUSH2 0x18C8 JUMP JUMPDEST SWAP6 SWAP9 SWAP5 SWAP8 POP SWAP6 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1998 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x19A1 DUP4 PUSH2 0x174D JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x19B6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xE0 DUP9 DUP11 SUB SLT ISZERO PUSH2 0x19DC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x19E5 DUP9 PUSH2 0x174D JUMP JUMPDEST SWAP7 POP PUSH2 0x19F3 PUSH1 0x20 DUP10 ADD PUSH2 0x174D JUMP JUMPDEST SWAP6 POP PUSH1 0x40 DUP9 ADD CALLDATALOAD SWAP5 POP PUSH1 0x60 DUP9 ADD CALLDATALOAD SWAP4 POP PUSH1 0x80 DUP9 ADD CALLDATALOAD PUSH1 0xFF DUP2 AND DUP2 EQ PUSH2 0x1A17 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP7 SWAP10 SWAP6 SWAP9 POP SWAP4 SWAP7 SWAP3 SWAP6 SWAP5 PUSH1 0xA0 DUP5 ADD CALLDATALOAD SWAP5 POP PUSH1 0xC0 SWAP1 SWAP4 ADD CALLDATALOAD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1A47 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1A50 DUP4 PUSH2 0x174D JUMP JUMPDEST SWAP2 POP PUSH2 0x1827 PUSH1 0x20 DUP5 ADD PUSH2 0x174D JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x1A72 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x1A92 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x4EC JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG4 SWAP9 SMOD KECCAK256 TLOAD 0xE4 0xD3 SSTORE MULMOD 0x2E CREATE2 0xA8 LOG1 DUP16 JUMP 0xE8 SWAP2 EXTCODECOPY DELEGATECALL LOG2 ADD 0xFB 0xE2 DUP8 DUP3 JUMPDEST MULMOD JUMP SWAP4 0xC2 OR PUSH22 0xA2646970667358221220CD4722EB10B78A18A7747FA4 CREATE DUP14 DUP9 0xD3 0xE4 DUP14 0xB4 DUP9 0x1F BASEFEE 0x24 DUP12 0xD9 0xC3 0xE3 0xDC 0xAA 0x2F ADDMOD DUP7 PUSH5 0x736F6C6343 STOP ADDMOD SHR STOP CALLER ","sourceMap":"471:3387:24:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3695:160;;;;;;:::i;:::-;;:::i;:::-;;;470:14:25;;463:22;445:41;;433:2;418:18;3695:160:24;;;;;;;;748:29;;;;;;;;;643:25:25;;;631:2;616:18;748:29:24;497:177:25;1811:91:4;;;:::i;:::-;;;;;;;:::i;4104:190::-;;;;;;:::i;:::-;;:::i;2913:99::-;2992:12;;2913:99;;4904:249;;;;;;:::i;:::-;;:::i;3915:122:0:-;;;;;;:::i;:::-;3980:7;4007:12;;;:6;:12;;;;;:22;;;;3915:122;947:43:24;;;;;;:::i;:::-;;;;;;;;;;;;;;;;4347:138:0;;;;;;:::i;:::-;;:::i;:::-;;2764:84:4;;;2838:2;3222:36:25;;3210:2;3195:18;2764:84:4;3080:184:25;2738:114:6;;;:::i;5484:251:0:-;;;;;;:::i;:::-;;:::i;1599:77:24:-;;;:::i;1792:86:12:-;1863:7;;;;1792:86;;3075:118:4;;;;;;:::i;:::-;-1:-1:-1;;;;;3167:18:4;3140:7;3167:18;;;;;;;;;;;;3075:118;612:60:24;;-1:-1:-1;;;;;;;;;;;612:60:24;;2480:145:6;;;;;;:::i;:::-;;:::i;1915:249:24:-;;;;;;:::i;:::-;;:::i;1518:73::-;;;:::i;5358:580:17:-;;;:::i;:::-;;;;;;;;;;;;;:::i;2353:880:24:-;;;;;;:::i;:::-;;:::i;2172:173::-;;;;;;:::i;:::-;;:::i;2931:138:0:-;;;;;;:::i;:::-;;:::i;838:56:24:-;;;;;;:::i;:::-;;;;;;;;;;;;;;2021:95:4;;;:::i;2243:49:0:-;;2288:4;2243:49;;679:25:24;;;;;-1:-1:-1;;;;;679:25:24;;;;;;-1:-1:-1;;;;;6404:32:25;;;6386:51;;6374:2;6359:18;679:25:24;6240:203:25;3398:182:4;;;;;;:::i;:::-;;:::i;1684:223:24:-;;;;;;:::i;:::-;;:::i;1726:695:6:-;;;;;;:::i;:::-;;:::i;4778:140:0:-;;;;;;:::i;:::-;;:::i;3643:142:4:-;;;;;;:::i;:::-;-1:-1:-1;;;;;3750:18:4;;;3723:7;3750:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;3643:142;543:62:24;;581:24;543:62;;3695:160;3787:4;3811:36;3835:11;3811:23;:36::i;:::-;3804:43;3695:160;-1:-1:-1;;3695:160:24:o;1811:91:4:-;1856:13;1889:5;1882:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1811:91;:::o;4104:190::-;4177:4;752:10:9;4233:31:4;752:10:9;4249:7:4;4258:5;4233:8;:31::i;:::-;-1:-1:-1;4282:4:4;;4104:190;-1:-1:-1;;;4104:190:4:o;4904:249::-;4991:4;752:10:9;5049:37:4;5065:4;752:10:9;5080:5:4;5049:15;:37::i;:::-;5097:26;5107:4;5113:2;5117:5;5097:9;:26::i;:::-;-1:-1:-1;5141:4:4;;4904:249;-1:-1:-1;;;;4904:249:4:o;4347:138:0:-;3980:7;4007:12;;;:6;:12;;;;;:22;;;2527:16;2538:4;2527:10;:16::i;:::-;4452:25:::1;4463:4;4469:7;4452:10;:25::i;:::-;;4347:138:::0;;;:::o;2738:114:6:-;2797:7;2824:20;:18;:20::i;:::-;2817:27;;2738:114;:::o;5484:251:0:-;-1:-1:-1;;;;;5578:34:0;;752:10:9;5578:34:0;5574:104;;5636:30;;-1:-1:-1;;;5636:30:0;;;;;;;;;;;5574:104;5690:37;5702:4;5708:18;5690:11;:37::i;:::-;;5484:251;;:::o;1599:77:24:-;581:24;2527:16:0;2538:4;2527:10;:16::i;:::-;1658:10:24::1;:8;:10::i;:::-;1599:77:::0;:::o;2480:145:6:-;-1:-1:-1;;;;;643:14:10;;2571:7:6;643:14:10;;;:7;:14;;;;;;2598:19:6;556:109:10;1915:249:24;-1:-1:-1;;;;;;;;;;;2527:16:0;2538:4;2527:10;:16::i;:::-;2034:1:24::1;2016:15;:19;2008:55;;;::::0;-1:-1:-1;;;2008:55:24;;8208:2:25;2008:55:24::1;::::0;::::1;8190:21:25::0;8247:2;8227:18;;;8220:30;8286:25;8266:18;;;8259:53;8329:18;;2008:55:24::1;;;;;;;;;2074:14;:32:::0;;;2122:34:::1;::::0;643:25:25;;;2122:34:24::1;::::0;631:2:25;616:18;2122:34:24::1;;;;;;;1915:249:::0;;:::o;1518:73::-;581:24;2527:16:0;2538:4;2527:10;:16::i;:::-;1575:8:24::1;:6;:8::i;5358:580:17:-:0;5461:13;5489:18;5522:21;5558:15;5588:25;5628:12;5655:27;5763:13;:11;:13::i;:::-;5791:16;:14;:16::i;:::-;5903;;;5886:1;5903:16;;;;;;;;;-1:-1:-1;;;5710:220:17;;;-1:-1:-1;5710:220:17;;-1:-1:-1;5822:13:17;;-1:-1:-1;5858:4:17;;-1:-1:-1;5886:1:17;-1:-1:-1;5903:16:17;-1:-1:-1;5710:220:17;-1:-1:-1;5358:580:17:o;2353:880:24:-;1397:19:12;:17;:19::i;:::-;2477:35:24;;::::1;2469:70;;;::::0;-1:-1:-1;;;2469:70:24;;8692:2:25;2469:70:24::1;::::0;::::1;8674:21:25::0;8731:2;8711:18;;;8704:30;-1:-1:-1;;;8750:18:25;;;8743:52;8812:18;;2469:70:24::1;8490:346:25::0;2469:70:24::1;2550:19;2589:9:::0;2584:97:::1;2604:18:::0;;::::1;2584:97;;;2659:7;;2667:1;2659:10;;;;;;;:::i;:::-;;;;;;;2644:25;;;;;:::i;:::-;::::0;-1:-1:-1;2624:3:24::1;;2584:97;;;-1:-1:-1::0;2709:10:24::1;3140:7:4::0;3167:18;;;;;;;;;;;2724:11:24;-1:-1:-1;2699:36:24::1;2691:69;;;::::0;-1:-1:-1;;;2691:69:24;;9402:2:25;2691:69:24::1;::::0;::::1;9384:21:25::0;9441:2;9421:18;;;9414:30;-1:-1:-1;;;9460:18:25;;;9453:50;9520:18;;2691:69:24::1;9200:344:25::0;2691:69:24::1;2835:10;2823:23;::::0;;;:11:::1;:23;::::0;;;;;::::1;;2819:165;;;2926:14;::::0;2912:10:::1;2890:33;::::0;;;:21:::1;:33;::::0;;;;;:50:::1;::::0;2926:14;2890:50:::1;:::i;:::-;2871:15;:69;;2863:109;;;::::0;-1:-1:-1;;;2863:109:24;;9751:2:25;2863:109:24::1;::::0;::::1;9733:21:25::0;9790:2;9770:18;;;9763:30;9829:29;9809:18;;;9802:57;9876:18;;2863:109:24::1;9549:351:25::0;2863:109:24::1;3001:9;2996:123;3016:21:::0;;::::1;2996:123;;;3059:48;3069:10;3081;;3092:1;3081:13;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;3096:7;;3104:1;3096:10;;;;;;;:::i;:::-;;;;;;;3059:9;:48::i;:::-;3039:3;;2996:123;;;-1:-1:-1::0;;3196:10:24::1;3174:33;::::0;;;:21:::1;:33;::::0;;;;3210:15:::1;3174:51:::0;;-1:-1:-1;;;;2353:880:24:o;2172:173::-;-1:-1:-1;;;;;;;;;;;2527:16:0;2538:4;2527:10;:16::i;:::-;-1:-1:-1;;;;;2264:20:24;::::1;;::::0;;;:11:::1;:20;::::0;;;;;;;;:29;;-1:-1:-1;;2264:29:24::1;::::0;::::1;;::::0;;::::1;::::0;;;2309:28;;445:41:25;;;2309:28:24::1;::::0;418:18:25;2309:28:24::1;;;;;;;2172:173:::0;;;:::o;2931:138:0:-;3008:4;3032:12;;;:6;:12;;;;;;;;-1:-1:-1;;;;;3032:29:0;;;;;;;;;;;;;;;2931:138::o;2021:95:4:-;2068:13;2101:7;2094:14;;;;;:::i;3398:182::-;3467:4;752:10:9;3523:27:4;752:10:9;3540:2:4;3544:5;3523:9;:27::i;1684:223:24:-;-1:-1:-1;;;;;;;;;;;2527:16:0;2538:4;2527:10;:16::i;:::-;-1:-1:-1;;;;;1777:25:24;::::1;1769:53;;;::::0;-1:-1:-1;;;1769:53:24;;10107:2:25;1769:53:24::1;::::0;::::1;10089:21:25::0;10146:2;10126:18;;;10119:30;-1:-1:-1;;;10165:18:25;;;10158:45;10220:18;;1769:53:24::1;9905:339:25::0;1769:53:24::1;1833:10;:24:::0;;-1:-1:-1;;;;;;1833:24:24::1;-1:-1:-1::0;;;;;1833:24:24;::::1;::::0;;::::1;::::0;;;1873:26:::1;::::0;::::1;::::0;-1:-1:-1;;1873:26:24::1;1684:223:::0;;:::o;1726:695:6:-;1956:8;1938:15;:26;1934:99;;;1988:33;;-1:-1:-1;;;1988:33:6;;;;;643:25:25;;;616:18;;1988:33:6;497:177:25;1934:99:6;2045:18;1045:95;2104:5;2111:7;2120:5;2127:16;2137:5;-1:-1:-1;;;;;1153:14:10;846:7;1153:14;;;:7;:14;;;;;:16;;;;;;;;;786:402;2127:16:6;2076:78;;;;;;10536:25:25;;;;-1:-1:-1;;;;;10597:32:25;;;10577:18;;;10570:60;10666:32;;;;10646:18;;;10639:60;10715:18;;;10708:34;10758:19;;;10751:35;10802:19;;;10795:35;;;10508:19;;2076:78:6;;;;;;;;;;;;2066:89;;;;;;2045:110;;2168:12;2183:28;2200:10;2183:16;:28::i;:::-;2168:43;;2224:14;2241:28;2255:4;2261:1;2264;2267;2241:13;:28::i;:::-;2224:45;;2294:5;-1:-1:-1;;;;;2284:15:6;:6;-1:-1:-1;;;;;2284:15:6;;2280:90;;2323:35;;-1:-1:-1;;;2323:35:6;;-1:-1:-1;;;;;11033:32:25;;;2323:35:6;;;11015:51:25;11102:32;;11082:18;;;11075:60;10988:18;;2323:35:6;10841:300:25;2280:90:6;2382:31;2391:5;2398:7;2407:5;2382:8;:31::i;:::-;1923:498;;;1726:695;;;;;;;:::o;4778:140:0:-;3980:7;4007:12;;;:6;:12;;;;;:22;;;2527:16;2538:4;2527:10;:16::i;:::-;4884:26:::1;4896:4;4902:7;4884:11;:26::i;2635:204::-:0;2720:4;-1:-1:-1;;;;;;2744:47:0;;-1:-1:-1;;;2744:47:0;;:87;;-1:-1:-1;;;;;;;;;;886:40:19;;;2795:36:0;786:148:19;8963:130:4;9048:37;9057:5;9064:7;9073:5;9080:4;9048:8;:37::i;10695:486::-;-1:-1:-1;;;;;3750:18:4;;;10795:24;3750:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;-1:-1:-1;;10862:36:4;;10858:316;;;10938:5;10919:16;:24;10915:132;;;10971:60;;-1:-1:-1;;;10971:60:4;;-1:-1:-1;;;;;11366:32:25;;10971:60:4;;;11348:51:25;11415:18;;;11408:34;;;11458:18;;;11451:34;;;11321:18;;10971:60:4;11146:345:25;10915:132:4;11090:57;11099:5;11106:7;11134:5;11115:16;:24;11141:5;11090:8;:57::i;5538:308::-;-1:-1:-1;;;;;5622:18:4;;5618:88;;5664:30;;-1:-1:-1;;;5664:30:4;;5691:1;5664:30;;;6386:51:25;6359:18;;5664:30:4;6240:203:25;5618:88:4;-1:-1:-1;;;;;5720:16:4;;5716:88;;5760:32;;-1:-1:-1;;;5760:32:4;;5789:1;5760:32;;;6386:51:25;6359:18;;5760:32:4;6240:203:25;5716:88:4;5814:24;5822:4;5828:2;5832:5;5814:7;:24::i;3284:105:0:-;3351:30;3362:4;752:10:9;3351::0;:30::i;6361:324::-;6438:4;6460:22;6468:4;6474:7;6460;:22::i;:::-;6455:223;;6499:12;;;;:6;:12;;;;;;;;-1:-1:-1;;;;;6499:29:0;;;;;;;;;:36;;-1:-1:-1;;6499:36:0;6531:4;6499:36;;;6582:12;752:10:9;;672:98;6582:12:0;-1:-1:-1;;;;;6555:40:0;6573:7;-1:-1:-1;;;;;6555:40:0;6567:4;6555:40;;;;;;;;;;-1:-1:-1;6617:4:0;6610:11;;6455:223;-1:-1:-1;6661:5:0;6654:12;;4026:268:17;4079:7;4111:4;-1:-1:-1;;;;;4120:11:17;4103:28;;:63;;;;;4152:14;4135:13;:31;4103:63;4099:188;;;-1:-1:-1;4190:22:17;;4026:268::o;4099:188::-;4252:23;4394:80;;;2116:95;4394:80;;;12034:25:25;4416:11:17;12075:18:25;;;12068:34;;;;4429:14:17;12118:18:25;;;12111:34;4445:13:17;12161:18:25;;;12154:34;4468:4:17;12204:19:25;;;12197:61;4357:7:17;;12006:19:25;;4394:80:17;;;;;;;;;;;;4384:91;;;;;;4377:98;;4302:181;;6931:325:0;7009:4;7030:22;7038:4;7044:7;7030;:22::i;:::-;7026:223;;;7101:5;7069:12;;;:6;:12;;;;;;;;-1:-1:-1;;;;;7069:29:0;;;;;;;;;;:37;;-1:-1:-1;;7069:37:0;;;7126:40;752:10:9;;7069:12:0;;7126:40;;7101:5;7126:40;-1:-1:-1;7188:4:0;7181:11;;2693:120:12;1656:16;:14;:16::i;:::-;2752:7:::1;:15:::0;;-1:-1:-1;;2752:15:12::1;::::0;;2783:22:::1;752:10:9::0;2792:12:12::1;2783:22;::::0;-1:-1:-1;;;;;6404:32:25;;;6386:51;;6374:2;6359:18;2783:22:12::1;;;;;;;2693:120::o:0;2434:118::-;1397:19;:17;:19::i;:::-;2494:7:::1;:14:::0;;-1:-1:-1;;2494:14:12::1;2504:4;2494:14;::::0;;2524:20:::1;2531:12;752:10:9::0;;672:98;6267:128:17;6313:13;6346:41;:5;6373:13;6346:26;:41::i;6730:137::-;6779:13;6812:47;:8;6842:16;6812:29;:47::i;1951:132:12:-;1863:7;;;;2013:63;;;2049:15;;-1:-1:-1;;;2049:15:12;;;;;;;;;;;2013:63;1951:132::o;5125:178:17:-;5202:7;5229:66;5262:20;:18;:20::i;:::-;5284:10;4140:4:18;4134:11;-1:-1:-1;;;4159:23:18;;4212:4;4203:14;;4196:39;;;;4265:4;4256:14;;4249:34;4322:4;4307:20;;;3963:382;7046:264:16;7131:7;7152:17;7171:18;7191:16;7211:25;7222:4;7228:1;7231;7234;7211:10;:25::i;:::-;7151:85;;;;;;7247:28;7259:5;7266:8;7247:11;:28::i;:::-;-1:-1:-1;7293:9:16;;7046:264;-1:-1:-1;;;;;;7046:264:16:o;9960:443:4:-;-1:-1:-1;;;;;10073:19:4;;10069:91;;10116:32;;-1:-1:-1;;;10116:32:4;;10145:1;10116:32;;;6386:51:25;6359:18;;10116:32:4;6240:203:25;10069:91:4;-1:-1:-1;;;;;10174:21:4;;10170:92;;10219:31;;-1:-1:-1;;;10219:31:4;;10247:1;10219:31;;;6386:51:25;6359:18;;10219:31:4;6240:203:25;10170:92:4;-1:-1:-1;;;;;10272:18:4;;;;;;;:11;:18;;;;;;;;:27;;;;;;;;;:35;;;10318:78;;;;10369:7;-1:-1:-1;;;;;10353:31:4;10362:5;-1:-1:-1;;;;;10353:31:4;;10378:5;10353:31;;;;643:25:25;;631:2;616:18;;497:177;10353:31:4;;;;;;;;9960:443;;;;:::o;3241:407:24:-;1397:19:12;:17;:19::i;:::-;-1:-1:-1;;;;;3391:17:24;::::1;;::::0;;;:11:::1;:17;::::0;;;;;::::1;;3387:213;;;3482:14;::::0;-1:-1:-1;;;;;3452:27:24;::::1;;::::0;;;:21:::1;:27;::::0;;;;;:44:::1;::::0;3482:14;3452:44:::1;:::i;:::-;3433:15;:63;;3425:103;;;::::0;-1:-1:-1;;;3425:103:24;;9751:2:25;3425:103:24::1;::::0;::::1;9733:21:25::0;9790:2;9770:18;;;9763:30;9829:29;9809:18;;;9802:57;9876:18;;3425:103:24::1;9549:351:25::0;3425:103:24::1;-1:-1:-1::0;;;;;3543:27:24;::::1;;::::0;;;:21:::1;:27;::::0;;;;3573:15:::1;3543:45:::0;;3387:213:::1;3610:30;3624:4;3630:2;3634:5;3610:13;:30::i;3525:201:0:-:0;3614:22;3622:4;3628:7;3614;:22::i;:::-;3609:110;;3660:47;;-1:-1:-1;;;3660:47:0;;-1:-1:-1;;;;;11688:32:25;;3660:47:0;;;11670:51:25;11737:18;;;11730:34;;;11643:18;;3660:47:0;11496:274:25;3609:110:0;3525:201;;:::o;2160:130:12:-;1863:7;;;;2219:64;;2256:15;;-1:-1:-1;;;2256:15:12;;;;;;;;;;;3467:273:13;3561:13;1431:66;3591:46;;3587:146;;3661:15;3670:5;3661:8;:15::i;:::-;3654:22;;;;3587:146;3716:5;3709:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5330:1577:16;5461:17;;;6425:66;6412:79;;6408:166;;;-1:-1:-1;6524:1:16;;-1:-1:-1;6528:30:16;;-1:-1:-1;6560:1:16;6508:54;;6408:166;6688:24;;;6671:14;6688:24;;;;;;;;;12496:25:25;;;12569:4;12557:17;;12537:18;;;12530:45;;;;12591:18;;;12584:34;;;12634:18;;;12627:34;;;6688:24:16;;12468:19:25;;6688:24:16;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;6688:24:16;;-1:-1:-1;;6688:24:16;;;-1:-1:-1;;;;;;;6727:20:16;;6723:115;;-1:-1:-1;6780:1:16;;-1:-1:-1;6784:29:16;;-1:-1:-1;6780:1:16;;-1:-1:-1;6764:62:16;;6723:115;6858:6;-1:-1:-1;6866:20:16;;-1:-1:-1;6866:20:16;;-1:-1:-1;5330:1577:16;;;;;;;;;:::o;7448:542::-;7544:20;7535:5;:29;;;;;;;;:::i;:::-;;7531:452;;7448:542;;:::o;7531:452::-;7642:29;7633:5;:38;;;;;;;;:::i;:::-;;7629:354;;7695:23;;-1:-1:-1;;;7695:23:16;;;;;;;;;;;7629:354;7749:35;7740:5;:44;;;;;;;;:::i;:::-;;7736:247;;7808:46;;-1:-1:-1;;;7808:46:16;;;;;643:25:25;;;616:18;;7808:46:16;497:177:25;7736:247:16;7885:30;7876:5;:39;;;;;;;;:::i;:::-;;7872:111;;7939:32;;-1:-1:-1;;;7939:32:16;;;;;643:25:25;;;616:18;;7939:32:16;497:177:25;6170:1135:4;-1:-1:-1;;;;;6260:18:4;;6256:552;;6414:5;6398:12;;:21;;;;;;;:::i;:::-;;;;-1:-1:-1;6256:552:4;;-1:-1:-1;6256:552:4;;-1:-1:-1;;;;;6474:15:4;;6452:19;6474:15;;;;;;;;;;;6508:19;;;6504:117;;;6555:50;;-1:-1:-1;;;6555:50:4;;-1:-1:-1;;;;;11366:32:25;;6555:50:4;;;11348:51:25;11415:18;;;11408:34;;;11458:18;;;11451:34;;;11321:18;;6555:50:4;11146:345:25;6504:117:4;-1:-1:-1;;;;;6744:15:4;;:9;:15;;;;;;;;;;6762:19;;;;6744:37;;6256:552;-1:-1:-1;;;;;6824:16:4;;6820:435;;6990:12;:21;;;;;;;6820:435;;;-1:-1:-1;;;;;7206:13:4;;:9;:13;;;;;;;;;;:22;;;;;;6820:435;7287:2;-1:-1:-1;;;;;7272:25:4;7281:4;-1:-1:-1;;;;;7272:25:4;;7291:5;7272:25;;;;643::25;;631:2;616:18;;497:177;7272:25:4;;;;;;;;6170:1135;;;:::o;2140:387:13:-;2199:13;2225:11;2239:16;2250:4;2239:10;:16::i;:::-;2365:14;;;2376:2;2365:14;;;;;;;;;2225:30;;-1:-1:-1;2345:17:13;;2365:14;;;;;;;;;-1:-1:-1;;;2430:16:13;;;-1:-1:-1;2476:4:13;2467:14;;2460:28;;;;-1:-1:-1;2430:16:13;2140:387::o;2604:251::-;2665:7;2738:4;2702:40;;2766:2;2757:11;;2753:71;;;2792:20;;-1:-1:-1;;;2792:20:13;;;;;;;;;;;14:286:25;72:6;125:2;113:9;104:7;100:23;96:32;93:52;;;141:1;138;131:12;93:52;167:23;;-1:-1:-1;;;;;;219:32:25;;209:43;;199:71;;266:1;263;256:12;199:71;289:5;14:286;-1:-1:-1;;;14:286:25:o;679:400::-;721:3;759:5;753:12;786:6;781:3;774:19;811:1;821:139;835:6;832:1;829:13;821:139;;;943:4;928:13;;;924:24;;918:31;898:11;;;894:22;;887:63;850:12;821:139;;;825:3;1005:1;998:4;989:6;984:3;980:16;976:27;969:38;1068:4;1061:2;1057:7;1052:2;1044:6;1040:15;1036:29;1031:3;1027:39;1023:50;1016:57;;;679:400;;;;:::o;1084:220::-;1233:2;1222:9;1215:21;1196:4;1253:45;1294:2;1283:9;1279:18;1271:6;1253:45;:::i;1309:173::-;1377:20;;-1:-1:-1;;;;;1426:31:25;;1416:42;;1406:70;;1472:1;1469;1462:12;1406:70;1309:173;;;:::o;1487:300::-;1555:6;1563;1616:2;1604:9;1595:7;1591:23;1587:32;1584:52;;;1632:1;1629;1622:12;1584:52;1655:29;1674:9;1655:29;:::i;:::-;1645:39;1753:2;1738:18;;;;1725:32;;-1:-1:-1;;;1487:300:25:o;1792:374::-;1869:6;1877;1885;1938:2;1926:9;1917:7;1913:23;1909:32;1906:52;;;1954:1;1951;1944:12;1906:52;1977:29;1996:9;1977:29;:::i;:::-;1967:39;;2025:38;2059:2;2048:9;2044:18;2025:38;:::i;:::-;1792:374;;2015:48;;-1:-1:-1;;;2132:2:25;2117:18;;;;2104:32;;1792:374::o;2171:226::-;2230:6;2283:2;2271:9;2262:7;2258:23;2254:32;2251:52;;;2299:1;2296;2289:12;2251:52;-1:-1:-1;2344:23:25;;2171:226;-1:-1:-1;2171:226:25:o;2584:186::-;2643:6;2696:2;2684:9;2675:7;2671:23;2667:32;2664:52;;;2712:1;2709;2702:12;2664:52;2735:29;2754:9;2735:29;:::i;2775:300::-;2843:6;2851;2904:2;2892:9;2883:7;2879:23;2875:32;2872:52;;;2920:1;2917;2910:12;2872:52;2965:23;;;-1:-1:-1;3031:38:25;3065:2;3050:18;;3031:38;:::i;:::-;3021:48;;2775:300;;;;;:::o;3500:1238::-;3906:3;3901;3897:13;3889:6;3885:26;3874:9;3867:45;3948:3;3943:2;3932:9;3928:18;3921:31;3848:4;3975:46;4016:3;4005:9;4001:19;3993:6;3975:46;:::i;:::-;4069:9;4061:6;4057:22;4052:2;4041:9;4037:18;4030:50;4103:33;4129:6;4121;4103:33;:::i;:::-;4167:2;4152:18;;4145:34;;;-1:-1:-1;;;;;4216:32:25;;4210:3;4195:19;;4188:61;4236:3;4265:19;;4258:35;;;4330:22;;;4324:3;4309:19;;4302:51;4402:13;;4424:22;;;4474:2;4500:15;;;;-1:-1:-1;4462:15:25;;;;-1:-1:-1;4543:169:25;4557:6;4554:1;4551:13;4543:169;;;4618:13;;4606:26;;4661:2;4687:15;;;;4652:12;;;;4579:1;4572:9;4543:169;;;-1:-1:-1;4729:3:25;;3500:1238;-1:-1:-1;;;;;;;;;;;3500:1238:25:o;4743:367::-;4806:8;4816:6;4870:3;4863:4;4855:6;4851:17;4847:27;4837:55;;4888:1;4885;4878:12;4837:55;-1:-1:-1;4911:20:25;;4954:18;4943:30;;4940:50;;;4986:1;4983;4976:12;4940:50;5023:4;5015:6;5011:17;4999:29;;5083:3;5076:4;5066:6;5063:1;5059:14;5051:6;5047:27;5043:38;5040:47;5037:67;;;5100:1;5097;5090:12;5037:67;4743:367;;;;;:::o;5115:768::-;5237:6;5245;5253;5261;5314:2;5302:9;5293:7;5289:23;5285:32;5282:52;;;5330:1;5327;5320:12;5282:52;5370:9;5357:23;5403:18;5395:6;5392:30;5389:50;;;5435:1;5432;5425:12;5389:50;5474:70;5536:7;5527:6;5516:9;5512:22;5474:70;:::i;:::-;5563:8;;-1:-1:-1;5448:96:25;-1:-1:-1;;5651:2:25;5636:18;;5623:32;5680:18;5667:32;;5664:52;;;5712:1;5709;5702:12;5664:52;5751:72;5815:7;5804:8;5793:9;5789:24;5751:72;:::i;:::-;5115:768;;;;-1:-1:-1;5842:8:25;-1:-1:-1;;;;5115:768:25:o;5888:347::-;5953:6;5961;6014:2;6002:9;5993:7;5989:23;5985:32;5982:52;;;6030:1;6027;6020:12;5982:52;6053:29;6072:9;6053:29;:::i;:::-;6043:39;;6132:2;6121:9;6117:18;6104:32;6179:5;6172:13;6165:21;6158:5;6155:32;6145:60;;6201:1;6198;6191:12;6145:60;6224:5;6214:15;;;5888:347;;;;;:::o;6448:903::-;6559:6;6567;6575;6583;6591;6599;6607;6660:3;6648:9;6639:7;6635:23;6631:33;6628:53;;;6677:1;6674;6667:12;6628:53;6700:29;6719:9;6700:29;:::i;:::-;6690:39;;6748:38;6782:2;6771:9;6767:18;6748:38;:::i;:::-;6738:48;-1:-1:-1;6855:2:25;6840:18;;6827:32;;-1:-1:-1;6956:2:25;6941:18;;6928:32;;-1:-1:-1;7038:3:25;7023:19;;7010:33;7087:4;7074:18;;7062:31;;7052:59;;7107:1;7104;7097:12;7052:59;6448:903;;;;-1:-1:-1;6448:903:25;;;;7130:7;7210:3;7195:19;;7182:33;;-1:-1:-1;7314:3:25;7299:19;;;7286:33;;6448:903;-1:-1:-1;;6448:903:25:o;7356:260::-;7424:6;7432;7485:2;7473:9;7464:7;7460:23;7456:32;7453:52;;;7501:1;7498;7491:12;7453:52;7524:29;7543:9;7524:29;:::i;:::-;7514:39;;7572:38;7606:2;7595:9;7591:18;7572:38;:::i;7621:380::-;7700:1;7696:12;;;;7743;;;7764:61;;7818:4;7810:6;7806:17;7796:27;;7764:61;7871:2;7863:6;7860:14;7840:18;7837:38;7834:161;;7917:10;7912:3;7908:20;7905:1;7898:31;7952:4;7949:1;7942:15;7980:4;7977:1;7970:15;7834:161;;7621:380;;;:::o;8841:127::-;8902:10;8897:3;8893:20;8890:1;8883:31;8933:4;8930:1;8923:15;8957:4;8954:1;8947:15;8973:222;9038:9;;;9059:10;;;9056:133;;;9111:10;9106:3;9102:20;9099:1;9092:31;9146:4;9143:1;9136:15;9174:4;9171:1;9164:15;12672:127;12733:10;12728:3;12724:20;12721:1;12714:31;12764:4;12761:1;12754:15;12788:4;12785:1;12778:15"},"methodIdentifiers":{"ADMIN_ROLE()":"75b238fc","DEFAULT_ADMIN_ROLE()":"a217fddf","DOMAIN_SEPARATOR()":"3644e515","PAUSER_ROLE()":"e63ab1e9","allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","batchTransfer(address[],uint256[])":"88d695b2","cooldownPeriod()":"04646a49","decimals()":"313ce567","eip712Domain()":"84b0196e","getRoleAdmin(bytes32)":"248a9ca3","gnosisSafe()":"a84173ae","grantRole(bytes32,address)":"2f2ff15d","hasCooldown(address)":"2f206068","hasRole(bytes32,address)":"91d14854","lastTransferTimestamp(address)":"91fc1f2c","name()":"06fdde03","nonces(address)":"7ecebe00","pause()":"8456cb59","paused()":"5c975abb","permit(address,address,uint256,uint256,uint8,bytes32,bytes32)":"d505accf","renounceRole(bytes32,address)":"36568abe","revokeRole(bytes32,address)":"d547741f","setCooldown(address,bool)":"8fc022a6","setCooldownPeriod(uint256)":"80ea3de1","setGnosisSafe(address)":"c3085a3e","supportsInterface(bytes4)":"01ffc9a7","symbol()":"95d89b41","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd","unpause()":"3f4ba83a"}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"AccessControlBadConfirmation\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"neededRole\",\"type\":\"bytes32\"}],\"name\":\"AccessControlUnauthorizedAccount\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ECDSAInvalidSignature\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"length\",\"type\":\"uint256\"}],\"name\":\"ECDSAInvalidSignatureLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"ECDSAInvalidSignatureS\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"ERC2612ExpiredSignature\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"signer\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC2612InvalidSigner\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"EnforcedPause\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ExpectedPause\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"currentNonce\",\"type\":\"uint256\"}],\"name\":\"InvalidAccountNonce\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidShortString\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"str\",\"type\":\"string\"}],\"name\":\"StringTooLong\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newPeriod\",\"type\":\"uint256\"}],\"name\":\"CooldownPeriodSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"status\",\"type\":\"bool\"}],\"name\":\"CooldownSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"EIP712DomainChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newGnosisSafe\",\"type\":\"address\"}],\"name\":\"GnosisSafeSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"PAUSER_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"recipients\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"name\":\"batchTransfer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"cooldownPeriod\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"eip712Domain\",\"outputs\":[{\"internalType\":\"bytes1\",\"name\":\"fields\",\"type\":\"bytes1\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"version\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"chainId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"verifyingContract\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"},{\"internalType\":\"uint256[]\",\"name\":\"extensions\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"gnosisSafe\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"hasCooldown\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"lastTransferTimestamp\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"permit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"callerConfirmation\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"status\",\"type\":\"bool\"}],\"name\":\"setCooldown\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_cooldownPeriod\",\"type\":\"uint256\"}],\"name\":\"setCooldownPeriod\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_gnosisSafe\",\"type\":\"address\"}],\"name\":\"setGnosisSafe\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unpause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"ERC20 + EIP-2612 Permit, batch transfer, pausable (Gnosis Safe + role) Anti-flash-loan protection with cooldown periods\",\"errors\":{\"AccessControlBadConfirmation()\":[{\"details\":\"The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}.\"}],\"AccessControlUnauthorizedAccount(address,bytes32)\":[{\"details\":\"The `account` is missing a role.\"}],\"ECDSAInvalidSignature()\":[{\"details\":\"The signature derives the `address(0)`.\"}],\"ECDSAInvalidSignatureLength(uint256)\":[{\"details\":\"The signature has an invalid length.\"}],\"ECDSAInvalidSignatureS(bytes32)\":[{\"details\":\"The signature has an S value that is in the upper half order.\"}],\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC2612ExpiredSignature(uint256)\":[{\"details\":\"Permit deadline has expired.\"}],\"ERC2612InvalidSigner(address,address)\":[{\"details\":\"Mismatched signature.\"}],\"EnforcedPause()\":[{\"details\":\"The operation failed because the contract is paused.\"}],\"ExpectedPause()\":[{\"details\":\"The operation failed because the contract is not paused.\"}],\"InvalidAccountNonce(address,uint256)\":[{\"details\":\"The nonce used for an `account` is not the expected current nonce.\"}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"EIP712DomainChanged()\":{\"details\":\"MAY be emitted to signal that the domain could have changed.\"},\"Paused(address)\":{\"details\":\"Emitted when the pause is triggered by `account`.\"},\"RoleAdminChanged(bytes32,bytes32,bytes32)\":{\"details\":\"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted to signal this.\"},\"RoleGranted(bytes32,address,address)\":{\"details\":\"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call. This account bears the admin role (for the granted role). Expected in cases where the role was granted using the internal {AccessControl-_grantRole}.\"},\"RoleRevoked(bytes32,address,address)\":{\"details\":\"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"},\"Unpaused(address)\":{\"details\":\"Emitted when the pause is lifted by `account`.\"}},\"kind\":\"dev\",\"methods\":{\"DOMAIN_SEPARATOR()\":{\"details\":\"Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\"},\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"eip712Domain()\":{\"details\":\"returns the fields and values that describe the domain separator used by this contract for EIP-712 signature.\"},\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"nonces(address)\":{\"details\":\"Returns the current nonce for `owner`. This value must be included whenever a signature is generated for {permit}. Every successful call to {permit} increases ``owner``'s nonce by one. This prevents a signature from being used multiple times.\"},\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"},\"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)\":{\"details\":\"Sets `value` as the allowance of `spender` over ``owner``'s tokens, given ``owner``'s signed approval. IMPORTANT: The same issues {IERC20-approve} has related to transaction ordering also apply here. Emits an {Approval} event. Requirements: - `spender` cannot be the zero address. - `deadline` must be a timestamp in the future. - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner` over the EIP712-formatted function arguments. - the signature must use ``owner``'s current nonce (see {nonces}). For more information on the signature format, see the https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP section]. CAUTION: See Security Considerations above.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`. May emit a {RoleRevoked} event.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"title\":\"PADToken\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/PADToken.sol\":\"PADToken\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/AccessControl.sol\":{\"keccak256\":\"0x8cb7d9a11d6c9b1a1cce759ae271ce9bdcc07362112bae1757d27a8f4e9fb662\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://24ad9cc3dfa2f31be03aa50af4eb3b64fc0e7d8cb52bf2766b614c810fc59f28\",\"dweb:/ipfs/QmTtkupdGNT4sbYZDatxm8yupjvWAC5knh7ZGtAd26NduS\"]},\"@openzeppelin/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0x3ecafd57f4d8502737e032c7a72086b6dd32bf5b69d70429e483f89cf310c2c7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b9e8a35d9edbaba568e89782eb806e16a5734a69e275f5d0d52e24537fa11653\",\"dweb:/ipfs/QmdBUAJKXXa5he87an93H96cwiv6c5XpzS1vTkiQtxyKND\"]},\"@openzeppelin/contracts/interfaces/IERC5267.sol\":{\"keccak256\":\"0x28b2a1f629338ad9bfe7bdab27a478f3d04001bbde67aefb48f473e01589a05a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b13fe921b3a4db8194370374451c3243045d4852e6e27c00fe161acc3eff59ee\",\"dweb:/ipfs/QmfNmkXJsDj9x2et6BTibrbonVGhcP8bRDkRTiXuqhevvR\"]},\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0xe53865a480e99e5c35c3b1fd673cdccae2b5ddb7e0260e82b19d40d99980e146\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bd6c5d37ed3bbb994f5d63f62bfec105dd9dbd11ae8cecdb93232d64a9677143\",\"dweb:/ipfs/QmefNhF6r94wZBqL2XxZMvkrGr4WgLLoWts5oasPWpMUun\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xa03f78b9c8beb9e37134ff26448c557406454474003f4238ee768e09ed84faa0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://57ee59c2a9c9e71c5b92d639dd88f9ec31bc6c23eabe932eed7d15c84ba7903e\",\"dweb:/ipfs/Qmczf1hzvrZWv8UdmDJ8ize3cFfbEzppjgfk32NQqwj1Ea\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x01e4bd12aef9e3d0956451e6ac9ece01554db0bc484ebc9287e5d57b4fd431d7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cb6de9142941eb74004600d0b23a0753846824648e6ddc23bc93889d03a79441\",\"dweb:/ipfs/QmckMYX9vjZNEx4pLGt6ePpvRcYuvt8s2zWoqSHxX2niHZ\"]},\"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol\":{\"keccak256\":\"0x75d915918e62946caf04224552ec67cec8761941907c8a144c1ea8167856c430\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://165246da467a540613d7ec3b2758eafdb724d87576088dde94483b02e8136353\",\"dweb:/ipfs/QmQp41YPLHyKAdy7MyMmTzBRaZhA6xxXMt1oUmfEss8bmv\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x5b0e97d38fc94a3e9031e6f6bb948991499dd5fd9fbe74898326e1b5cecc61b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f326d045fa9d7fa02f53b5c0750830127e98c4c3d104ef207ed3bb272d049f89\",\"dweb:/ipfs/QmTGhzTSMdCRZr5JWA48ZoujUPT6LWK3qJnQx2Xq8Z6i3m\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\":{\"keccak256\":\"0x79ee51693b808ffdb306266b04709183c403b04078211b149794bc11d6c3fc39\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c50b360520e990c689b887ed508c6f6acff9309dc207c0f05ad8ebcacf4b98cb\",\"dweb:/ipfs/QmeXjWT5Z5X5UzMbiBd3MoEUnfNAtV8HpoasznLkq34JWZ\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x3dcd533a3f709bda89bb8e649eb97aed96578e606f3796609544b1dcff975a0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://83fa9b15077fd2f33f6c175d694e2f7ae9c9a289c7feaca40aa7d6feb8d87c26\",\"dweb:/ipfs/QmQLfKCJ7mjiEeCGN1sHgWT8wjAMbAmBqcBVoQQyUZa5ws\"]},\"@openzeppelin/contracts/utils/Nonces.sol\":{\"keccak256\":\"0xb2ac469a92e3980b87267eacabd4e470df6cf278858efa230f69c723316c138d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3ce61d28f35bf80f21d884b285b4061c938e400a0d90d7a8176e2cacf29b5eaf\",\"dweb:/ipfs/Qmar9FHYkwMVvQYtDoeJFETryVwBPTPs1dxhvKG1AMah1c\"]},\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0x65fd7c9cac0812d510bbaac59b007da1df6f3820f939fca04fd2b7ed07e341c6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f30f7cf8b553278b1bbad1f6aaf4b227b98b1532b3c16dbca92d815d627779df\",\"dweb:/ipfs/QmTkA1v7mrd2ymdTcPYFuNjguKhQx99npcPYKAdMfgfKvB\"]},\"@openzeppelin/contracts/utils/Pausable.sol\":{\"keccak256\":\"0xa9be83f7bdcb8cf7a19c67c140495e73a145ec6f5040e6ad6d9502bde287ba2f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9c4d3cc806fc535febe2d6d550946bfa86763fa83c4a9ba4a9ad9c3e961daed0\",\"dweb:/ipfs/QmNoU8w2MUyznikxzLWsz8XcT1QuBQLP89vjB5sowFb5sk\"]},\"@openzeppelin/contracts/utils/ShortStrings.sol\":{\"keccak256\":\"0x390e3113af8cf6c95f432b509fff201f4f2868733d43e0972f9ec08f37ce064e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://40e540b200a6dd6d686822ef475a1ef4778e7afdc47826be5b393a4ab5b4d940\",\"dweb:/ipfs/Qme2xivyB4Les1wX2ZYT3571CmQBNuFQpNK1PdWZ8JZveL\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0xb9355bac6de0c0dd42a7f3c4ad3e6e7bdff95109e1bb6ba5be0dce666b314921\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b8449ecfc29ae42905bcfd8fa232bd73eccb14365f1894a3cc1abcce90639379\",\"dweb:/ipfs/QmWwdkEJXZjk57T7T5JRogJzEhcT7JpnmxEVfHAwFSMuZ1\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x831320073a13168dd04b3b7dc0d7c3c4fd1f8d699c3b3709900d1dd7e52ae931\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d37bb18e9824f73bd0cbf259d2326028031e60ed89bf4eba095c73d605f243ed\",\"dweb:/ipfs/QmWxNLK1eZBwA1GdxzwqGkarHhbciAvM8bg6qcRafeS47J\"]},\"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":{\"keccak256\":\"0xbe22c37080f9052e0e18062a527a19f9354703ee48888c71baf0abd747a34a8b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://eb85649fce273c8c19eeba7db292f92b6653263ae39f12e427a066b998c9cec4\",\"dweb:/ipfs/QmRaTEqA15siRJoiPCuvtzK29dgXxQu94n4JBabHUSFXXQ\"]},\"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":{\"keccak256\":\"0xf778df68e781faf042ba75ec07581c0d85242d1ed2eb635f35f1a6223217afc3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://081591b28f424eda7d7ac702ef6dc39524aa3515079ccba4175cd7d181674cde\",\"dweb:/ipfs/QmVJQigws6GRg4UNvMmj2NUh1tBRSHTpQV6vjiaEsmL7eL\"]},\"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol\":{\"keccak256\":\"0xd7999d7b3c3a121215a15e205b381e06cfff55c47f67220d1605cd96cd0848d8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e259964860d8625d6c33d841c870af390834c037c4459c8b14231f1bd440f682\",\"dweb:/ipfs/QmWyFHT1oipmXVN4NLxrdBL9nayTzFfPrkAQbRozeWdhKQ\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xb28144ffc2bca9d3e8e3e20b630d1d97b04aa7c9e00683d41211b241a65f5644\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://da447bb66b870656cd1f599cb8a173579d66ddf762c9d172391e409debe33d1d\",\"dweb:/ipfs/QmTyEdMigTpMBw5NTMoVfcpKQQ1pxdXWAbey3XBcUdN95q\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0xdbf01f069eb0b0a7a6ace73b250fdeb7e338d719bb40b5dd1fe7069004a36607\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1fc4a1dfe79b2adc6e22af84838c217946853d28a4291fcd8bbcc6fb226a0470\",\"dweb:/ipfs/QmaJbxCcdE76P1a8rjxkBqTXAfF11XebfwURamUB92G4WN\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xe09e820269ce218384211e4bf344056f0aab77a27b953012a3fb647d7631b7c2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0a8e7a7218203b059b4b4a423a93d6066eb9cec0a8affde80bb4a6c44d6a14a0\",\"dweb:/ipfs/QmSbmEzwGBFD3TntztEE5ZFLBqP1SZYiQhA1dLoDgzrcz4\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0xf1e73884b1e40057009853b1ee55ec66413cfa5eaa9074e5dd85bd070ea8b91c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1d29fd43e41bd73ac0fb65ac77c309c88651a42f8e49989cf1558f64f731697b\",\"dweb:/ipfs/Qmd61ZCYWHj9PJ3uSXaJekif8tkKgmfU6PLunszwhY2QX3\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0x7c35afe4f4b7e64ea6efa5216f51790d8ce80cd764a00790203a59ebf20202ec\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0b264b01df570c48603e16066aea73d3200c78523f9d94dd587a61eafa33705c\",\"dweb:/ipfs/QmayVg47dBKddrgrgsbr4Wu8hQBWZk5oMpiUtXKz1uEo1v\"]},\"contracts/PADToken.sol\":{\"keccak256\":\"0x2a3bd7b3365b88244f41258d2aaf6218c93e4a4ec079e4fde75711f82d007b85\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d79feccc496b783ed7cd3d2838eaa456b16da07ed739cdb813c62b5930a7d5f6\",\"dweb:/ipfs/QmSr7JtasRBpEcdcFPeWEuVr3t438QnjJgDWFCp5aiEFAL\"]}},\"version\":1}","storageLayout":{"storage":[{"astId":563,"contract":"contracts/PADToken.sol:PADToken","label":"_balances","offset":0,"slot":"0","type":"t_mapping(t_address,t_uint256)"},{"astId":569,"contract":"contracts/PADToken.sol:PADToken","label":"_allowances","offset":0,"slot":"1","type":"t_mapping(t_address,t_mapping(t_address,t_uint256))"},{"astId":571,"contract":"contracts/PADToken.sol:PADToken","label":"_totalSupply","offset":0,"slot":"2","type":"t_uint256"},{"astId":573,"contract":"contracts/PADToken.sol:PADToken","label":"_name","offset":0,"slot":"3","type":"t_string_storage"},{"astId":575,"contract":"contracts/PADToken.sol:PADToken","label":"_symbol","offset":0,"slot":"4","type":"t_string_storage"},{"astId":3735,"contract":"contracts/PADToken.sol:PADToken","label":"_nameFallback","offset":0,"slot":"5","type":"t_string_storage"},{"astId":3737,"contract":"contracts/PADToken.sol:PADToken","label":"_versionFallback","offset":0,"slot":"6","type":"t_string_storage"},{"astId":1393,"contract":"contracts/PADToken.sol:PADToken","label":"_nonces","offset":0,"slot":"7","type":"t_mapping(t_address,t_uint256)"},{"astId":1508,"contract":"contracts/PADToken.sol:PADToken","label":"_paused","offset":0,"slot":"8","type":"t_bool"},{"astId":26,"contract":"contracts/PADToken.sol:PADToken","label":"_roles","offset":0,"slot":"9","type":"t_mapping(t_bytes32,t_struct(RoleData)21_storage)"},{"astId":7604,"contract":"contracts/PADToken.sol:PADToken","label":"gnosisSafe","offset":0,"slot":"10","type":"t_address"},{"astId":7606,"contract":"contracts/PADToken.sol:PADToken","label":"cooldownPeriod","offset":0,"slot":"11","type":"t_uint256"},{"astId":7610,"contract":"contracts/PADToken.sol:PADToken","label":"lastTransferTimestamp","offset":0,"slot":"12","type":"t_mapping(t_address,t_uint256)"},{"astId":7614,"contract":"contracts/PADToken.sol:PADToken","label":"hasCooldown","offset":0,"slot":"13","type":"t_mapping(t_address,t_bool)"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"},"t_bool":{"encoding":"inplace","label":"bool","numberOfBytes":"1"},"t_bytes32":{"encoding":"inplace","label":"bytes32","numberOfBytes":"32"},"t_mapping(t_address,t_bool)":{"encoding":"mapping","key":"t_address","label":"mapping(address => bool)","numberOfBytes":"32","value":"t_bool"},"t_mapping(t_address,t_mapping(t_address,t_uint256))":{"encoding":"mapping","key":"t_address","label":"mapping(address => mapping(address => uint256))","numberOfBytes":"32","value":"t_mapping(t_address,t_uint256)"},"t_mapping(t_address,t_uint256)":{"encoding":"mapping","key":"t_address","label":"mapping(address => uint256)","numberOfBytes":"32","value":"t_uint256"},"t_mapping(t_bytes32,t_struct(RoleData)21_storage)":{"encoding":"mapping","key":"t_bytes32","label":"mapping(bytes32 => struct AccessControl.RoleData)","numberOfBytes":"32","value":"t_struct(RoleData)21_storage"},"t_string_storage":{"encoding":"bytes","label":"string","numberOfBytes":"32"},"t_struct(RoleData)21_storage":{"encoding":"inplace","label":"struct AccessControl.RoleData","members":[{"astId":18,"contract":"contracts/PADToken.sol:PADToken","label":"hasRole","offset":0,"slot":"0","type":"t_mapping(t_address,t_bool)"},{"astId":20,"contract":"contracts/PADToken.sol:PADToken","label":"adminRole","offset":0,"slot":"1","type":"t_bytes32"}],"numberOfBytes":"64"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"}}}}}}}}