const { ethers } = require('ethers');

async function checkBNBBalance() {
  const walletAddress = '0x513756b7eD711c472537cb497833c5d5Eb02A3Df';
  const bscRpc = 'https://data-seed-prebsc-1-s1.binance.org:8545/';
  
  console.log(`üîç –ü—Ä–æ–≤–µ—Ä—è–µ–º –±–∞–ª–∞–Ω—Å BNB –¥–ª—è –∞–¥—Ä–µ—Å–∞: ${walletAddress}`);
  console.log(`üì° –ü–æ–¥–∫–ª—é—á–∞–µ–º—Å—è –∫ BSC Testnet...`);
  
  try {
    const provider = new ethers.JsonRpcProvider(bscRpc);
    const balance = await provider.getBalance(walletAddress);
    const balanceFormatted = ethers.formatEther(balance);
    
    console.log(`‚úÖ –ë–∞–ª–∞–Ω—Å BNB: ${balanceFormatted} BNB`);
    
    if (balance === 0n) {
      console.log(`\nüí∞ –ù—É–∂–Ω–æ –ø–æ–ª—É—á–∏—Ç—å —Ç–µ—Å—Ç–æ–≤—ã–µ BNB:`);
      console.log(`üîó https://testnet.bnbchain.org/faucet`);
      console.log(`üìç –ê–¥—Ä–µ—Å: ${walletAddress}`);
    } else {
      console.log(`\nüöÄ –ì–æ—Ç–æ–≤–æ –∫ –¥–µ–ø–ª–æ—é! –ú–æ–∂–Ω–æ –∑–∞–ø—É—Å–∫–∞—Ç—å:`);
      console.log(`npx hardhat run scripts/deploy-bsc-testnet.js --network bscTestnet`);
    }
    
  } catch (error) {
    console.error(`‚ùå –û—à–∏–±–∫–∞: ${error.message}`);
  }
}

checkBNBBalance().catch(console.error);
