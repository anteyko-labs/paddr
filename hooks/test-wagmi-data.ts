'use client';

import { useAccount, useReadContract } from 'wagmi';
import { UPGRADEABLE_STAKE_MANAGER_ABI } from '@/lib/contracts/upgradeable-stake-manager-abi';
import { STAKE_MANAGER_ADDRESS } from '@/lib/contracts/config';

export function useTestWagmiData() {
  const { address } = useAccount();

  // –¢–µ—Å—Ç–∏—Ä—É–µ–º –ø–æ–ª—É—á–µ–Ω–∏–µ –ø–æ–∑–∏—Ü–∏–π
  const { data: positionIds, isLoading: isLoadingIds } = useReadContract({
    address: STAKE_MANAGER_ADDRESS as `0x${string}`,
    abi: UPGRADEABLE_STAKE_MANAGER_ABI,
    functionName: 'getUserPositions',
    args: [address!],
    query: { enabled: !!address },
  });

  // –¢–µ—Å—Ç–∏—Ä—É–µ–º –ø–æ–ª—É—á–µ–Ω–∏–µ –ø–µ—Ä–≤–æ–π –ø–æ–∑–∏—Ü–∏–∏ (–≤—Ä–µ–º–µ–Ω–Ω–æ –æ—Ç–∫–ª—é—á–µ–Ω–æ –∏–∑-–∑–∞ –æ—à–∏–±–æ–∫ —Ç–∏–ø–æ–≤)
  const firstPositionData: any = null;

  // –í—Ä–µ–º–µ–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –¥–ª—è –≤–∞—É—á–µ—Ä–æ–≤ (—Ñ–∞–π–ª—ã —É–¥–∞–ª–µ–Ω—ã)
  const voucherIds: any[] = [];
  const firstVoucherData: any = null;
  const isLoadingVouchers = false;

  console.log('üîç TEST - Address:', address);
  console.log('üîç TEST - Position IDs:', positionIds);
  console.log('üîç TEST - Position IDs type:', typeof positionIds);
  console.log('üîç TEST - Position IDs is array:', Array.isArray(positionIds));
  console.log('üîç TEST - First Position Data:', firstPositionData);
  console.log('üîç TEST - First Position type:', typeof firstPositionData);
  console.log('üîç TEST - First Position is array:', Array.isArray(firstPositionData));
  console.log('üîç TEST - Voucher IDs:', voucherIds);
  console.log('üîç TEST - Voucher IDs type:', typeof voucherIds);
  console.log('üîç TEST - Voucher IDs is array:', Array.isArray(voucherIds));
  console.log('üîç TEST - First Voucher Data:', firstVoucherData);
  console.log('üîç TEST - First Voucher type:', typeof firstVoucherData);
  console.log('üîç TEST - First Voucher is array:', Array.isArray(firstVoucherData));

  return {
    address,
    positionIds,
    firstPositionData,
    voucherIds,
    firstVoucherData,
    isLoadingIds,
    isLoadingVouchers,
  };
}
