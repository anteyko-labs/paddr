const fs = require('fs');
const path = require('path');

/**
 * –°–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –≤–∞—É—á–µ—Ä–æ–≤ –∏ –≤–∏–¥–µ–æ
 */

console.log('üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–∏—Å—Ç–µ–º—ã –≤–∞—É—á–µ—Ä–æ–≤ –∏ NFT –≤–∏–¥–µ–æ...\n');

// –ü—Ä–æ–≤–µ—Ä—è–µ–º PDF —Ñ–∞–π–ª—ã
console.log('üìÑ –ü—Ä–æ–≤–µ—Ä–∫–∞ PDF –≤–∞—É—á–µ—Ä–æ–≤:');
const tierFolders = ['BRONZE', 'SILVER', 'GOLD', 'PLATINUM'];

tierFolders.forEach(tier => {
  const folderPath = path.join(process.cwd(), tier);
  if (fs.existsSync(folderPath)) {
    const pdfFiles = fs.readdirSync(folderPath).filter(file => file.endsWith('.pdf'));
    console.log(`  ${tier}: ${pdfFiles.length} PDF —Ñ–∞–π–ª–æ–≤`);
    pdfFiles.forEach(file => {
      console.log(`    - ${file}`);
    });
  } else {
    console.log(`  ${tier}: –ø–∞–ø–∫–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞`);
  }
});

// –ü—Ä–æ–≤–µ—Ä—è–µ–º –≤–∏–¥–µ–æ —Ñ–∞–π–ª—ã
console.log('\nüé¨ –ü—Ä–æ–≤–µ—Ä–∫–∞ NFT –≤–∏–¥–µ–æ:');
const videoFolder = path.join(process.cwd(), 'nft', 'nft_tiers');
if (fs.existsSync(videoFolder)) {
  const videoFiles = fs.readdirSync(videoFolder).filter(file => file.endsWith('.mp4'));
  console.log(`  –ù–∞–π–¥–µ–Ω–æ ${videoFiles.length} –≤–∏–¥–µ–æ —Ñ–∞–π–ª–æ–≤:`);
  videoFiles.forEach(file => {
    const tier = file.includes('79') ? 'Bronze' : 
                 file.includes('80') ? 'Silver' :
                 file.includes('81') ? 'Gold' : 'Platinum';
    console.log(`    - ${file} ‚Üí ${tier} —Ç–∏—Ä`);
  });
} else {
  console.log('  –ü–∞–ø–∫–∞ nft/nft_tiers –Ω–µ –Ω–∞–π–¥–µ–Ω–∞');
}

// –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–æ–Ω–≤–µ—Ä—Ç–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
console.log('\nüñºÔ∏è –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ–Ω–≤–µ—Ä—Ç–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π:');
const assetFolders = {
  'tier1': 'Bronze',
  'tier2': 'Silver', 
  'tier3': 'Gold',
  'tier4': 'Platinum'
};

Object.entries(assetFolders).forEach(([folder, tier]) => {
  const folderPath = path.join(process.cwd(), 'public', 'assets', folder);
  if (fs.existsSync(folderPath)) {
    const imageFiles = fs.readdirSync(folderPath).filter(file => 
      file.endsWith('.png') || file.endsWith('.jpg')
    );
    console.log(`  ${tier} (${folder}): ${imageFiles.length} –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π`);
  } else {
    console.log(`  ${tier} (${folder}): –ø–∞–ø–∫–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞`);
  }
});

// –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é
console.log('\n‚öôÔ∏è –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏:');
const configPath = path.join(process.cwd(), 'data', 'voucher-config.json');
if (fs.existsSync(configPath)) {
  const config = JSON.parse(fs.readFileSync(configPath, 'utf8'));
  console.log(`  –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –≤–∞—É—á–µ—Ä–æ–≤: –≤–µ—Ä—Å–∏—è ${config.version}`);
  Object.entries(config.tiers).forEach(([tier, data]) => {
    console.log(`    ${tier}: ${data.vouchers.length} –≤–∞—É—á–µ—Ä–æ–≤`);
  });
} else {
  console.log('  –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –≤–∞—É—á–µ—Ä–æ–≤ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞');
}

// –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–æ–ø–æ—Å—Ç–∞–≤–ª–µ–Ω–∏–µ –≤–∏–¥–µ–æ
const mappingPath = path.join(process.cwd(), 'data', 'video-tier-mapping.json');
if (fs.existsSync(mappingPath)) {
  const mapping = JSON.parse(fs.readFileSync(mappingPath, 'utf8'));
  console.log(`  –°–æ–ø–æ—Å—Ç–∞–≤–ª–µ–Ω–∏–µ –≤–∏–¥–µ–æ: ${Object.keys(mapping.mapping).length} –≤–∏–¥–µ–æ`);
} else {
  console.log('  –°–æ–ø–æ—Å—Ç–∞–≤–ª–µ–Ω–∏–µ –≤–∏–¥–µ–æ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ');
}

console.log('\n‚úÖ –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!');
console.log('\nüìã –°–ª–µ–¥—É—é—â–∏–µ —à–∞–≥–∏:');
console.log('1. –ï—Å–ª–∏ PDF —Ñ–∞–π–ª—ã –Ω–∞–π–¥–µ–Ω—ã, –∑–∞–ø—É—Å—Ç–∏—Ç–µ: node scripts/convert-pdf-vouchers.js');
console.log('2. –ï—Å–ª–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –Ω–µ –Ω–∞–π–¥–µ–Ω—ã, —É—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ ImageMagick –∏–ª–∏ Ghostscript');
console.log('3. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –∞–¥–º–∏–Ω –ø–∞–Ω–µ–ª—å: http://localhost:3000/admin');
console.log('4. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ NFT –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ: http://localhost:3000/dashboard/rewards');




