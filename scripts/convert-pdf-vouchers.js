const fs = require('fs');
const path = require('path');
const { execSync } = require('child_process');

/**
 * –°–∫—Ä–∏–ø—Ç –¥–ª—è –∫–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏–∏ PDF –≤–∞—É—á–µ—Ä–æ–≤ –≤ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
 * –∏ –ø—Ä–∞–≤–∏–ª—å–Ω–æ–≥–æ —Å–æ–ø–æ—Å—Ç–∞–≤–ª–µ–Ω–∏—è –≤–∏–¥–µ–æ —Å —Ç–∏—Ä–∞–º–∏
 */

// –ü—Ä–∞–≤–∏–ª—å–Ω–æ–µ —Å–æ–ø–æ—Å—Ç–∞–≤–ª–µ–Ω–∏–µ –≤–∏–¥–µ–æ —Å —Ç–∏—Ä–∞–º–∏
const VIDEO_TIER_MAPPING = {
  'video5307504616261323179.mp4': 'Silver',   // 79 = Silver
  'video5307504616261323180.mp4': 'Platinum', // 80 = Platinum  
  'video5307504616261323181.mp4': 'Gold',     // 81 = Gold
  'video5307504616261323182.mp4': 'Bronze'     // 82 = Bronze
};

// –ü–∞–ø–∫–∏ —Å PDF –≤–∞—É—á–µ—Ä–∞–º–∏
const TIER_FOLDERS = {
  'BRONZE': 'BRONZE',
  'SILVER': 'SILVER', 
  'GOLD': 'GOLD',
  'PLATINUM': 'PLATINUM'
};

// –ü–∞–ø–∫–∏ –¥–ª—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π
const OUTPUT_FOLDERS = {
  'BRONZE': 'public/assets/tier1',
  'SILVER': 'public/assets/tier2',
  'GOLD': 'public/assets/tier3', 
  'PLATINUM': 'public/assets/tier4'
};

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –ø–∞–ø–æ–∫
function ensureDirectoryExists(dirPath) {
  if (!fs.existsSync(dirPath)) {
    fs.mkdirSync(dirPath, { recursive: true });
    console.log(`‚úÖ –°–æ–∑–¥–∞–Ω–∞ –ø–∞–ø–∫–∞: ${dirPath}`);
  }
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∫–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏–∏ PDF –≤ PNG —Å –ø–æ–º–æ—â—å—é ImageMagick
function convertPdfToPng(pdfPath, outputPath) {
  try {
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ ImageMagick
    try {
      execSync('magick -version', { stdio: 'ignore' });
    } catch (error) {
      console.error('‚ùå ImageMagick –Ω–µ –Ω–∞–π–¥–µ–Ω. –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ ImageMagick –¥–ª—è –∫–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏–∏ PDF.');
      console.log('üì• –°–∫–∞—á–∞—Ç—å: https://imagemagick.org/script/download.php');
      return false;
    }

    // –ö–æ–Ω–≤–µ—Ä—Ç–∏—Ä—É–µ–º PDF –≤ PNG —Å –≤—ã—Å–æ–∫–∏–º –∫–∞—á–µ—Å—Ç–≤–æ–º
    const command = `magick "${pdfPath}" -density 300 -quality 100 "${outputPath}"`;
    execSync(command, { stdio: 'pipe' });
    return true;
  } catch (error) {
    console.error(`‚ùå –û—à–∏–±–∫–∞ –∫–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏–∏ ${pdfPath}:`, error.message);
    return false;
  }
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∫–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏–∏ PDF –≤ JPG —Å –ø–æ–º–æ—â—å—é Ghostscript (–∞–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–∞)
function convertPdfToJpgWithGhostscript(pdfPath, outputPath) {
  try {
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ Ghostscript
    try {
      execSync('gs -version', { stdio: 'ignore' });
    } catch (error) {
      console.error('‚ùå Ghostscript –Ω–µ –Ω–∞–π–¥–µ–Ω. –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ Ghostscript –¥–ª—è –∫–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏–∏ PDF.');
      console.log('üì• –°–∫–∞—á–∞—Ç—å: https://www.ghostscript.com/download/gsdnld.html');
      return false;
    }

    // –ö–æ–Ω–≤–µ—Ä—Ç–∏—Ä—É–µ–º PDF –≤ JPG
    const command = `gs -dNOPAUSE -dBATCH -sDEVICE=jpeg -r300 -sOutputFile="${outputPath}" "${pdfPath}"`;
    execSync(command, { stdio: 'pipe' });
    return true;
  } catch (error) {
    console.error(`‚ùå –û—à–∏–±–∫–∞ –∫–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏–∏ ${pdfPath}:`, error.message);
    return false;
  }
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∫–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏–∏ PDF –≤ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ (—É–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω–∞—è)
function convertPdfToImage(pdfPath, outputPath) {
  // –°–Ω–∞—á–∞–ª–∞ –ø—Ä–æ–±—É–µ–º ImageMagick
  if (convertPdfToPng(pdfPath, outputPath)) {
    return true;
  }
  
  // –ï—Å–ª–∏ –Ω–µ –ø–æ–ª—É—á–∏–ª–æ—Å—å, –ø—Ä–æ–±—É–µ–º Ghostscript
  const jpgPath = outputPath.replace('.png', '.jpg');
  if (convertPdfToJpgWithGhostscript(pdfPath, jpgPath)) {
    // –ü–µ—Ä–µ–∏–º–µ–Ω–æ–≤—ã–≤–∞–µ–º JPG –≤ PNG –¥–ª—è –µ–¥–∏–Ω–æ–æ–±—Ä–∞–∑–∏—è
    fs.renameSync(jpgPath, outputPath);
    return true;
  }
  
  return false;
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –≤—Å–µ—Ö PDF —Ñ–∞–π–ª–æ–≤
function processAllPdfVouchers() {
  console.log('üöÄ –ù–∞—á–∏–Ω–∞–µ–º –∫–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏—é PDF –≤–∞—É—á–µ—Ä–æ–≤ –≤ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è...\n');

  let totalProcessed = 0;
  let totalSuccess = 0;

  // –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –∫–∞–∂–¥—ã–π —Ç–∏—Ä
  Object.entries(TIER_FOLDERS).forEach(([tierName, folderName]) => {
    const sourceFolder = path.join(process.cwd(), folderName);
    const outputFolder = OUTPUT_FOLDERS[tierName];
    
    console.log(`\nüìÅ –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º —Ç–∏—Ä: ${tierName}`);
    console.log(`üìÇ –ò—Å—Ö–æ–¥–Ω–∞—è –ø–∞–ø–∫–∞: ${sourceFolder}`);
    console.log(`üìÇ –¶–µ–ª–µ–≤–∞—è –ø–∞–ø–∫–∞: ${outputFolder}`);

    // –°–æ–∑–¥–∞–µ–º —Ü–µ–ª–µ–≤—É—é –ø–∞–ø–∫—É
    ensureDirectoryExists(outputFolder);

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏–µ –∏—Å—Ö–æ–¥–Ω–æ–π –ø–∞–ø–∫–∏
    if (!fs.existsSync(sourceFolder)) {
      console.log(`‚ö†Ô∏è  –ü–∞–ø–∫–∞ ${sourceFolder} –Ω–µ –Ω–∞–π–¥–µ–Ω–∞, –ø—Ä–æ–ø—É—Å–∫–∞–µ–º`);
      return;
    }

    // –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ PDF —Ñ–∞–π–ª—ã
    const pdfFiles = fs.readdirSync(sourceFolder).filter(file => file.endsWith('.pdf'));
    
    if (pdfFiles.length === 0) {
      console.log(`‚ö†Ô∏è  PDF —Ñ–∞–π–ª—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã –≤ ${sourceFolder}`);
      return;
    }

    console.log(`üìÑ –ù–∞–π–¥–µ–Ω–æ PDF —Ñ–∞–π–ª–æ–≤: ${pdfFiles.length}`);

    // –ö–æ–Ω–≤–µ—Ä—Ç–∏—Ä—É–µ–º –∫–∞–∂–¥—ã–π PDF
    pdfFiles.forEach((pdfFile, index) => {
      const pdfPath = path.join(sourceFolder, pdfFile);
      const imageName = pdfFile.replace('.pdf', '.png');
      const outputPath = path.join(outputFolder, imageName);
      
      console.log(`\nüîÑ –ö–æ–Ω–≤–µ—Ä—Ç–∏—Ä—É–µ–º: ${pdfFile}`);
      console.log(`   ‚Üí ${imageName}`);
      
      totalProcessed++;
      
      if (convertPdfToImage(pdfPath, outputPath)) {
        console.log(`   ‚úÖ –£—Å–ø–µ—à–Ω–æ!`);
        totalSuccess++;
      } else {
        console.log(`   ‚ùå –û—à–∏–±–∫–∞ –∫–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏–∏`);
      }
    });
  });

  console.log(`\nüìä –†–µ–∑—É–ª—å—Ç–∞—Ç—ã –∫–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏–∏:`);
  console.log(`   üìÑ –í—Å–µ–≥–æ –æ–±—Ä–∞–±–æ—Ç–∞–Ω–æ: ${totalProcessed}`);
  console.log(`   ‚úÖ –£—Å–ø–µ—à–Ω–æ: ${totalSuccess}`);
  console.log(`   ‚ùå –û—à–∏–±–æ–∫: ${totalProcessed - totalSuccess}`);
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ –≤–∞—É—á–µ—Ä–æ–≤
function createVoucherConfig() {
  console.log('\nüîß –°–æ–∑–¥–∞–µ–º –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é –≤–∞—É—á–µ—Ä–æ–≤...');

  const voucherConfig = {
    tiers: {},
    version: 1,
    lastUpdated: new Date().toISOString()
  };

  // –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –∫–∞–∂–¥—ã–π —Ç–∏—Ä
  Object.entries(TIER_FOLDERS).forEach(([tierName, folderName]) => {
    const sourceFolder = path.join(process.cwd(), folderName);
    
    if (!fs.existsSync(sourceFolder)) {
      return;
    }

    const pdfFiles = fs.readdirSync(sourceFolder).filter(file => file.endsWith('.pdf'));
    
    voucherConfig.tiers[tierName] = {
      name: tierName,
      vouchers: pdfFiles.map((pdfFile, index) => {
        const voucherName = pdfFile.replace('.pdf', '');
        const imageName = pdfFile.replace('.pdf', '.png');
        
        return {
          id: `${tierName.toLowerCase()}_${index + 1}`,
          name: voucherName,
          description: `Voucher: ${voucherName}`,
          value: extractValueFromName(voucherName),
          type: determineVoucherType(voucherName),
          image: imageName,
          pdf: pdfFile
        };
      })
    };
  });

  // –°–æ—Ö—Ä–∞–Ω—è–µ–º –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é
  const configPath = path.join(process.cwd(), 'data', 'voucher-config.json');
  ensureDirectoryExists(path.dirname(configPath));
  fs.writeFileSync(configPath, JSON.stringify(voucherConfig, null, 2));
  
  console.log(`‚úÖ –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∞: ${configPath}`);
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∏–∑–≤–ª–µ—á–µ–Ω–∏—è –∑–Ω–∞—á–µ–Ω–∏—è –∏–∑ –Ω–∞–∑–≤–∞–Ω–∏—è –≤–∞—É—á–µ—Ä–∞
function extractValueFromName(voucherName) {
  // –ò—â–µ–º —á–∏—Å–ª–æ–≤—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è –≤ –Ω–∞–∑–≤–∞–Ω–∏–∏
  const valueMatch = voucherName.match(/(\d+)\s*(\$|%|hour|hours)/i);
  if (valueMatch) {
    return `${valueMatch[1]}${valueMatch[2]}`;
  }
  
  // –°–ø–µ—Ü–∏–∞–ª—å–Ω—ã–µ —Å–ª—É—á–∞–∏
  if (voucherName.toLowerCase().includes('free')) {
    return 'Free';
  }
  if (voucherName.toLowerCase().includes('unlimited')) {
    return 'Unlimited';
  }
  if (voucherName.toLowerCase().includes('premium')) {
    return 'Premium';
  }
  
  return 'Special';
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è —Ç–∏–ø–∞ –≤–∞—É—á–µ—Ä–∞
function determineVoucherType(voucherName) {
  const name = voucherName.toLowerCase();
  
  if (name.includes('rental') && name.includes('hour')) {
    return 'SINGLE_USE';
  }
  if (name.includes('rental') && name.includes('$')) {
    return 'MULTI_USE';
  }
  if (name.includes('discount') || name.includes('unlimited') || name.includes('premium')) {
    return 'DURATION';
  }
  
  return 'SINGLE_USE';
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –≤–∏–¥–µ–æ –º–∞–ø–ø–∏–Ω–≥–∞
function updateVideoMapping() {
  console.log('\nüé¨ –û–±–Ω–æ–≤–ª—è–µ–º —Å–æ–ø–æ—Å—Ç–∞–≤–ª–µ–Ω–∏–µ –≤–∏–¥–µ–æ —Å —Ç–∏—Ä–∞–º–∏...');
  
  const videoMapping = {
    mapping: VIDEO_TIER_MAPPING,
    description: '–ü—Ä–∞–≤–∏–ª—å–Ω–æ–µ —Å–æ–ø–æ—Å—Ç–∞–≤–ª–µ–Ω–∏–µ –≤–∏–¥–µ–æ —Å —Ç–∏—Ä–∞–º–∏',
    note: '79=Silver, 80=Platinum, 81=Gold, 82=Bronze',
    lastUpdated: new Date().toISOString()
  };
  
  const mappingPath = path.join(process.cwd(), 'data', 'video-tier-mapping.json');
  ensureDirectoryExists(path.dirname(mappingPath));
  fs.writeFileSync(mappingPath, JSON.stringify(videoMapping, null, 2));
  
  console.log(`‚úÖ –°–æ–ø–æ—Å—Ç–∞–≤–ª–µ–Ω–∏–µ –≤–∏–¥–µ–æ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–æ: ${mappingPath}`);
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è README —Å –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—è–º–∏
function createReadme() {
  const readmeContent = `# üé´ –°–∏—Å—Ç–µ–º–∞ –≤–∞—É—á–µ—Ä–æ–≤ –∏ NFT

## üìÅ –°—Ç—Ä—É–∫—Ç—É—Ä–∞ —Ñ–∞–π–ª–æ–≤

### NFT –í–∏–¥–µ–æ
- \`nft/nft_tiers/video5307504616261323179.mp4\` - Bronze —Ç–∏—Ä
- \`nft/nft_tiers/video5307504616261323180.mp4\` - Silver —Ç–∏—Ä  
- \`nft/nft_tiers/video5307504616261323181.mp4\` - Gold —Ç–∏—Ä
- \`nft/nft_tiers/video5307504616261323182.mp4\` - Platinum —Ç–∏—Ä

### –í–∞—É—á–µ—Ä—ã (–∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è)
- \`public/assets/tier1/\` - Bronze –≤–∞—É—á–µ—Ä—ã (PNG)
- \`public/assets/tier2/\` - Silver –≤–∞—É—á–µ—Ä—ã (PNG)
- \`public/assets/tier3/\` - Gold –≤–∞—É—á–µ—Ä—ã (PNG)
- \`public/assets/tier4/\` - Platinum –≤–∞—É—á–µ—Ä—ã (PNG)

### –ò—Å—Ö–æ–¥–Ω—ã–µ PDF
- \`BRONZE/\` - PDF –≤–∞—É—á–µ—Ä—ã Bronze —Ç–∏—Ä–∞
- \`SILVER/\` - PDF –≤–∞—É—á–µ—Ä—ã Silver —Ç–∏—Ä–∞
- \`GOLD/\` - PDF –≤–∞—É—á–µ—Ä—ã Gold —Ç–∏—Ä–∞
- \`PLATINUM/\` - PDF –≤–∞—É—á–µ—Ä—ã Platinum —Ç–∏—Ä–∞

## üîÑ –ö–∞–∫ –æ–±–Ω–æ–≤–∏—Ç—å –≤–∞—É—á–µ—Ä—ã

1. –ó–∞–º–µ–Ω–∏—Ç–µ PDF —Ñ–∞–π–ª—ã –≤ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–∏—Ö –ø–∞–ø–∫–∞—Ö
2. –ó–∞–ø—É—Å—Ç–∏—Ç–µ: \`node scripts/convert-pdf-vouchers.js\`
3. –ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ —Å–∫–æ–Ω–≤–µ—Ä—Ç–∏—Ä—É—é—Ç—Å—è –≤ PNG
4. –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –æ–±–Ω–æ–≤–∏—Ç—Å—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏

## üìã –¢—Ä–µ–±–æ–≤–∞–Ω–∏—è

- ImageMagick –∏–ª–∏ Ghostscript –¥–ª—è –∫–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏–∏ PDF
- Node.js –¥–ª—è –∑–∞–ø—É—Å–∫–∞ —Å–∫—Ä–∏–ø—Ç–æ–≤

## üéØ –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ

–í–∞—É—á–µ—Ä—ã –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –æ—Ç–æ–±—Ä–∞–∂–∞—é—Ç—Å—è –≤ –∞–¥–º–∏–Ω –ø–∞–Ω–µ–ª–∏ –∏ –∫–æ—à–µ–ª—å–∫–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π.
`;

  const readmePath = path.join(process.cwd(), 'VOUCHER_SYSTEM_README.md');
  fs.writeFileSync(readmePath, readmeContent);
  console.log(`‚úÖ README —Å–æ–∑–¥–∞–Ω: ${readmePath}`);
}

// –ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è
function main() {
  console.log('üé´ –°–∏—Å—Ç–µ–º–∞ –∫–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏–∏ PDF –≤–∞—É—á–µ—Ä–æ–≤ –≤ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è\n');
  
  try {
    // –°–æ–∑–¥–∞–µ–º –ø–∞–ø–∫—É data –µ—Å–ª–∏ –µ—ë –Ω–µ—Ç
    ensureDirectoryExists(path.join(process.cwd(), 'data'));
    
    // –ö–æ–Ω–≤–µ—Ä—Ç–∏—Ä—É–µ–º PDF –≤ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
    processAllPdfVouchers();
    
    // –°–æ–∑–¥–∞–µ–º –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é –≤–∞—É—á–µ—Ä–æ–≤
    createVoucherConfig();
    
    // –û–±–Ω–æ–≤–ª—è–µ–º —Å–æ–ø–æ—Å—Ç–∞–≤–ª–µ–Ω–∏–µ –≤–∏–¥–µ–æ
    updateVideoMapping();
    
    // –°–æ–∑–¥–∞–µ–º README
    createReadme();
    
    console.log('\nüéâ –ö–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ!');
    console.log('\nüìã –°–ª–µ–¥—É—é—â–∏–µ —à–∞–≥–∏:');
    console.log('1. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Å–æ–∑–¥–∞–Ω–Ω—ã–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –≤ public/assets/');
    console.log('2. –û–±–Ω–æ–≤–∏—Ç–µ –∞–¥–º–∏–Ω –ø–∞–Ω–µ–ª—å –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –Ω–æ–≤—ã—Ö –≤–∞—É—á–µ—Ä–æ–≤');
    console.log('3. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –≤ –∫–æ—à–µ–ª—å–∫–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π');
    
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞:', error.message);
    process.exit(1);
  }
}

// –ó–∞–ø—É—Å–∫–∞–µ–º –µ—Å–ª–∏ —Ñ–∞–π–ª –≤—ã–∑–≤–∞–Ω –Ω–∞–ø—Ä—è–º—É—é
if (require.main === module) {
  main();
}

module.exports = {
  convertPdfToImage,
  processAllPdfVouchers,
  createVoucherConfig,
  updateVideoMapping
};
